{
  "contract": "0xc8c6a31a4a806d3710a7b38b7b296d2fabccdba8",
  "tool": "mythril",
  "start": 1563306197.8150105,
  "end": 1563306641.5596836,
  "duration": 443.74467301368713,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 2229,
        "code": "Producing)==amount){\n            // They are burning EXOR to make ",
        "debug": "",
        "description": "This contract executes a message call to an address found at storage slot 5. This storage slot can be written to by calling the function `lockBalanceChanges()`. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_contracts/0xc8c6a31a4a806d3710a7b38b7b296d2fabccdba8.sol",
        "function": "createAmountFromEXORForAddress(uint256,address)",
        "lineno": 57,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 2229,
        "code": "Producing)==amount){\n            // They are burning EXOR to make ",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function createAmountFromEXORForAddress(uint256,address). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_contracts/0xc8c6a31a4a806d3710a7b38b7b296d2fabccdba8.sol",
        "function": "createAmountFromEXORForAddress(uint256,address)",
        "lineno": 57,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 2361,
        "code": "y+=amount;\n        }\n    }\n}\n\nfunc",
        "debug": "calldata_elixor_4: 0xbc9d6aa1b4dec613bde1a64c3525dc8b597e80560004c96f1670a1a869dc7802\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_elixor_32_+_4: 0xc9b888e9faa0d5328d0e225445b08acbfa40a4414405e80004f4bdbf610942b9\nreturndatasize: 0x20\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_5: 0x0\ncaller: 0x0\ncalldata_elixor_0: 0xb56f01c00000000000000000000000000000000000000000000000000000000\ncalldatasize_elixor: 0x4\nretval_2229: 0xbc9d6aa1b4dec613bde1a64c3525dc8b597e80560004c96f1670a1a869dc7802\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `createAmountFromEXORForAddress(uint256,address)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0xc8c6a31a4a806d3710a7b38b7b296d2fabccdba8.sol",
        "function": "createAmountFromEXORForAddress(uint256,address)",
        "lineno": 60,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2377,
        "code": "om(\n    address _fr",
        "debug": "storage_3: 0xc9b888e9faa0d5328d0e225445b08acbfa40a4414405e80004f4bdbf610942b9\ncalldata_elixor_4: 0xbc9d6aa1b4dec613bde1a64c3525dc8b597e80560004c96f1670a1a869dc7802\nreturndatasize: 0x20\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_5: 0x0\ncaller: 0x0\ncalldata_elixor_0: 0xb56f01c00000000000000000000000000000000000000000000000000000000\ncalldatasize_elixor: 0x4\nretval_2229: 0xbc9d6aa1b4dec613bde1a64c3525dc8b597e80560004c96f1670a1a869dc7802\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `createAmountFromEXORForAddress(uint256,address)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0xc8c6a31a4a806d3710a7b38b7b296d2fabccdba8.sol",
        "function": "createAmountFromEXORForAddress(uint256,address)",
        "lineno": 65,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2454,
        "code": "or (uint2",
        "debug": "",
        "description": "Function importAmountForAddresses(uint256[],address[]) retrieves the transaction origin (tx.origin) using the ORIGIN opcode. Use msg.sender instead.\nSee also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin",
        "filename": "/unique_contracts/0xc8c6a31a4a806d3710a7b38b7b296d2fabccdba8.sol",
        "function": "importAmountForAddresses(uint256[],address[])",
        "lineno": 94,
        "title": "Use of tx.origin",
        "type": "Warning"
      },
      {
        "address": 2557,
        "code": "nt;\n      ",
        "debug": "The exception is triggered under the following conditions:\n\nmem_128 + 32 + 32*calldata_elixor_4 + calldata_elixor_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_5: 0x0\nstorage_6: 0x0\norigin: 0x0\ncalldata_elixor_0: 0xc1838e900000000000000000000000000000000000000000000000000000000\ncalldatasize_elixor: 0x4\ncalldata_elixor_4 + calldata_elixor_4: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0xc8c6a31a4a806d3710a7b38b7b296d2fabccdba8.sol",
        "function": "importAmountForAddresses(uint256[],address[])",
        "lineno": 98,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2640,
        "code": "}\n}\n\n// Extra balance removal in",
        "debug": "calldata_elixor_cpy: 0x57f25cd000000000000000000000000000000000000000000000000000000000\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\nmem_0_+_192_+_32*calldata_elixor_4_+_calldata_elixor_4: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncalldata_elixor_4 + calldata_elixor_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nmem_128 + 32 + 32*calldata_elixor_4 + calldata_elixor_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_5: 0x0\nstorage_6: 0x0\norigin: 0x0\ncalldata_elixor_0: 0xc1838e900000000000000000000000000000000000000000000000000000000\ncalldatasize_elixor: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `importAmountForAddresses(uint256[],address[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0xc8c6a31a4a806d3710a7b38b7b296d2fabccdba8.sol",
        "function": "importAmountForAddresses(uint256[],address[])",
        "lineno": 101,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2656,
        "code": "ise. Do not anticip",
        "debug": "storage_3: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncalldata_elixor_cpy: 0x57f25cd000000000000000000000000000000000000000000000000000000000\ncalldata_elixor_4 + calldata_elixor_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nmem_128 + 32 + 32*calldata_elixor_4 + calldata_elixor_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_5: 0x0\nstorage_6: 0x0\norigin: 0x0\ncalldata_elixor_0: 0xc1838e900000000000000000000000000000000000000000000000000000000\ncalldatasize_elixor: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `importAmountForAddresses(uint256[],address[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0xc8c6a31a4a806d3710a7b38b7b296d2fabccdba8.sol",
        "function": "importAmountForAddresses(uint256[],address[])",
        "lineno": 104,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 3045,
        "code": "mount;\n        allowed[",
        "debug": "calldata_elixor_32 + 36: 0x800000000000000003ffd0badcb9b7000000002781000000000000000006bfff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_elixor_32_+_4: 0x800000000000000000008eb2e34648ee0801030820000000000000000000a000\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x800000000000000003ffd0badcb9b7000000002781000000000000000006bfff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_elixor_4: 0x800000000000000003ffd0badcb9b7000000002781000000000000000006bfff\ncalldata_elixor_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_elixor: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `transferFrom(address,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0xc8c6a31a4a806d3710a7b38b7b296d2fabccdba8.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 74,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 3428,
        "code": "0;i<addre",
        "debug": "",
        "description": "Function removeAmountForAddresses(uint256[],address[]) retrieves the transaction origin (tx.origin) using the ORIGIN opcode. Use msg.sender instead.\nSee also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin",
        "filename": "/unique_contracts/0xc8c6a31a4a806d3710a7b38b7b296d2fabccdba8.sol",
        "function": "removeAmountForAddresses(uint256[],address[])",
        "lineno": 108,
        "title": "Use of tx.origin",
        "type": "Warning"
      },
      {
        "address": 3531,
        "code": "      }\n  ",
        "debug": "The exception is triggered under the following conditions:\n\nmem_128 + 32 + 32*calldata_elixor_4 + calldata_elixor_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_5: 0x0\nstorage_6: 0x0\norigin: 0x0\ncalldata_elixor_0: 0x24889e3700000000000000000000000000000000000000000000000000000000\ncalldatasize_elixor: 0x4\ncalldata_elixor_4 + calldata_elixor_4: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0xc8c6a31a4a806d3710a7b38b7b296d2fabccdba8.sol",
        "function": "removeAmountForAddresses(uint256[],address[])",
        "lineno": 113,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3614,
        "code": "anual override for total supply in ca",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\nmem_0_+_192_+_32*calldata_elixor_4_+_calldata_elixor_4: 0x0\ncalldata_elixor_cpy: 0x1\ncalldata_elixor_4 + calldata_elixor_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nmem_128 + 32 + 32*calldata_elixor_4 + calldata_elixor_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_5: 0x0\nstorage_6: 0x0\norigin: 0x0\ncalldata_elixor_0: 0x24889e3700000000000000000000000000000000000000000000000000000000\ncalldatasize_elixor: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer underflow exists in the function `removeAmountForAddresses(uint256[],address[])`.\nThe subtraction may result in a value < 0.",
        "filename": "/unique_contracts/0xc8c6a31a4a806d3710a7b38b7b296d2fabccdba8.sol",
        "function": "removeAmountForAddresses(uint256[],address[])",
        "lineno": 118,
        "title": "Integer Underflow",
        "type": "Warning"
      },
      {
        "address": 3630,
        "code": ". Do not anticipate",
        "debug": "storage_3: 0x0\ncalldata_elixor_cpy: 0x1\ncalldata_elixor_4 + calldata_elixor_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nmem_128 + 32 + 32*calldata_elixor_4 + calldata_elixor_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_5: 0x0\nstorage_6: 0x0\norigin: 0x0\ncalldata_elixor_0: 0x24889e3700000000000000000000000000000000000000000000000000000000\ncalldatasize_elixor: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer underflow exists in the function `removeAmountForAddresses(uint256[],address[])`.\nThe subtraction may result in a value < 0.",
        "filename": "/unique_contracts/0xc8c6a31a4a806d3710a7b38b7b296d2fabccdba8.sol",
        "function": "removeAmountForAddresses(uint256[],address[])",
        "lineno": 118,
        "title": "Integer Underflow",
        "type": "Warning"
      },
      {
        "address": 3809,
        "code": "// Devs w",
        "debug": "",
        "description": "Function lockBalanceChanges() retrieves the transaction origin (tx.origin) using the ORIGIN opcode. Use msg.sender instead.\nSee also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin",
        "filename": "/unique_contracts/0xc8c6a31a4a806d3710a7b38b7b296d2fabccdba8.sol",
        "function": "lockBalanceChanges()",
        "lineno": 90,
        "title": "Use of tx.origin",
        "type": "Warning"
      },
      {
        "address": 3925,
        "code": "}\n   }\n}\n",
        "debug": "",
        "description": "Function removeFromTotalSupply(uint256) retrieves the transaction origin (tx.origin) using the ORIGIN opcode. Use msg.sender instead.\nSee also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin",
        "filename": "/unique_contracts/0xc8c6a31a4a806d3710a7b38b7b296d2fabccdba8.sol",
        "function": "removeFromTotalSupply(uint256)",
        "lineno": 123,
        "title": "Use of tx.origin",
        "type": "Warning"
      },
      {
        "address": 3984,
        "code": "amount.\n// If this ",
        "debug": "storage_3: 0x0\ncalldata_elixor_4: 0x1\nstorage_5: 0x0\nstorage_6: 0x0\norigin: 0x0\ncalldata_elixor_0: 0x83e219eb00000000000000000000000000000000000000000000000000000000\ncalldatasize_elixor: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer underflow exists in the function `removeFromTotalSupply(uint256)`.\nThe subtraction may result in a value < 0.",
        "filename": "/unique_contracts/0xc8c6a31a4a806d3710a7b38b7b296d2fabccdba8.sol",
        "function": "removeFromTotalSupply(uint256)",
        "lineno": 128,
        "title": "Integer Underflow",
        "type": "Warning"
      },
      {
        "address": 4372,
        "code": "\n        balances[msg.s",
        "debug": "calldata_elixor_32 + 4: 0xb135d1e4a0020a903239033aa9b45a69384c906b52a71e0575829626809581fd\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_elixor_4: 0xa7e6e147bc0ca40011bf9bbaadf7593cb8cc90b17cb7d73775f0d8eb1435e9c1\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xb135d1e4a0020a903239033aa9b45a69384c906b52a71e0575829626809581fd\ncalldata_elixor_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncalldatasize_elixor: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `transfer(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0xc8c6a31a4a806d3710a7b38b7b296d2fabccdba8.sol",
        "function": "transfer(address,uint256)",
        "lineno": 43,
        "title": "Integer Overflow ",
        "type": "Warning"
      }
    ],
    "success": true
  }
}