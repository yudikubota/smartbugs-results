{"error": null, "issues": [{"address": 2314, "code": "Available = now > (", "debug": "The exception is triggered under the following conditions:\n\ncalldata_TikiMadness_4: 0x6\ncalldata_TikiMadness_0: 0x9b9bce6800000000000000000000000000000000000000000000000000000000\ncalldatasize_TikiMadness: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/5/0xc094367b4c79564b6c8b4218f84dea835b2c2dd0.sol", "function": "getTiki(uint256)", "lineno": 224, "title": "Exception state", "type": "Informational"}, {"address": 2618, "code": "  /// @de", "debug": "", "description": "Function purchase(uint256,address) retrieves the transaction origin (tx.origin) using the ORIGIN opcode. Use msg.sender instead.\nSee also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin", "filename": "/unique_chucks/5/0xc094367b4c79564b6c8b4218f84dea835b2c2dd0.sol", "function": "purchase(uint256,address)", "lineno": 43, "title": "Use of tx.origin", "type": "Warning"}, {"address": 4069, "code": "eInterface(templeOfEthaddress", "debug": "The exception is triggered under the following conditions:\n\ncalldata_TikiMadness_4: 0x6\ncalldata_TikiMadness_0: 0xb3a45b7500000000000000000000000000000000000000000000000000000000\ncalldatasize_TikiMadness: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/5/0xc094367b4c79564b6c8b4218f84dea835b2c2dd0.sol", "function": "_function_0xb3a45b75", "lineno": 123, "title": "Exception state", "type": "Informational"}, {"address": 4295, "code": "ge * secondsPassed ", "debug": "The exception is triggered under the following conditions:\n\ncalldata_TikiMadness_4: 0x6\ncalldata_TikiMadness_0: 0xb9186d7d00000000000000000000000000000000000000000000000000000000\ncalldatasize_TikiMadness: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/5/0xc094367b4c79564b6c8b4218f84dea835b2c2dd0.sol", "function": "priceOf(uint256)", "lineno": 314, "title": "Exception state", "type": "Informational"}, {"address": 4309, "code": "currentPrice = tiki", "debug": "timestamp: 0x0\nstorage_4 + 14 + 6*calldata_TikiMadness_4: 0x1\ncalldata_TikiMadness_4: 0x5\ncalldata_TikiMadness_0: 0xb9186d7d00000000000000000000000000000000000000000000000000000000\ncalldatasize_TikiMadness: 0x4\ncallvalue: 0x0\n", "description": "A possible integer underflow exists in the function `priceOf(uint256)`.\nThe subtraction may result in a value < 0.", "filename": "/unique_chucks/5/0xc094367b4c79564b6c8b4218f84dea835b2c2dd0.sol", "function": "priceOf(uint256)", "lineno": 315, "title": "Integer Underflow", "type": "Warning"}, {"address": 4365, "code": " _tokenId) public notPaused {\n ", "debug": "storage_21: 0x1012008d48008040000020041808004104001000020200000000000089082000\nstorage_22: 0x2ca1a474c003ab00000180208a83f3065ca0f80010069682830103024f846bc\ntimestamp: 0x0\nstorage_23: 0x1\nstorage_24: 0x0\nstorage_17: 0x1\nstorage_18: 0x0\ncalldata_TikiMadness_0: 0xaa972e00000000000000000000000000000000000000000000000000000000\ncalldatasize_TikiMadness: 0x4\nstorage_15: 0x0\nstorage_16: 0x0\ncallvalue: 0x0\n", "description": "A possible integer underflow exists in the function `fallback`.\nThe subtraction may result in a value < 0.", "filename": "/unique_chucks/5/0xc094367b4c79564b6c8b4218f84dea835b2c2dd0.sol", "function": "fallback", "lineno": 321, "title": "Integer Underflow", "type": "Warning"}], "success": true}