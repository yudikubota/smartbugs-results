{
  "contract": "0xaabe002cbe21fdf90d59354f6b3d3f3e0b4c3698",
  "tool": "mythril",
  "start": 1563297283.7932875,
  "end": 1563297344.3078523,
  "duration": 60.514564752578735,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 432,
        "code": "56) {\n        uint256 i = 0;\n        while (i < dests.length) {\n           ERC20(tokenaddress).transfer(dests[i], values[i]);\n           i += 1;\n        }\n        return(i);\n    }\n}",
        "debug": "calldata_tntsend_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_tntsend_0: 0xaad41a4100000000000000000000000000000000000000000000000000000000\ncalldatasize_tntsend: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `multisend(address[],uint256[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0xaabe002cbe21fdf90d59354f6b3d3f3e0b4c3698.sol",
        "function": "multisend(address[],uint256[])",
        "lineno": 89,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1249,
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_tntsend_4 + calldata_tntsend_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_1: 0x0\ncaller: 0x0\ncalldata_tntsend_0: 0xaad41a4100000000000000000000000000000000000000000000000000000000\ncalldatasize_tntsend: 0x4\nmem_128 + 32 + 32*calldata_tntsend_4 + calldata_tntsend_4: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0xaabe002cbe21fdf90d59354f6b3d3f3e0b4c3698.sol",
        "function": "multisend(address[],uint256[])",
        "lineno": 97,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 1396,
        "code": "urn(i);\n    }\n}",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_contracts/0xaabe002cbe21fdf90d59354f6b3d3f3e0b4c3698.sol",
        "function": "multisend(address[],uint256[])",
        "lineno": 95,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 1396,
        "code": "urn(i);\n    }\n}",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1396\n",
        "filename": "/unique_contracts/0xaabe002cbe21fdf90d59354f6b3d3f3e0b4c3698.sol",
        "function": "multisend(address[],uint256[])",
        "lineno": 95,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 1396,
        "code": "urn(i);\n    }\n}",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function multisend(address[],uint256[]). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_contracts/0xaabe002cbe21fdf90d59354f6b3d3f3e0b4c3698.sol",
        "function": "multisend(address[],uint256[])",
        "lineno": 95,
        "title": "Transaction order dependence",
        "type": "Warning"
      }
    ],
    "success": true
  }
}