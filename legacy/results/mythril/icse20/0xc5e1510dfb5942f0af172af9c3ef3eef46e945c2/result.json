{
  "contract": "0xc5e1510dfb5942f0af172af9c3ef3eef46e945c2",
  "tool": "mythril",
  "start": 1563337418.0177402,
  "end": 1563337762.044485,
  "duration": 344.0267448425293,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 237,
        "code": " msg.sender, tok",
        "debug": "callvalue: 0x9a633fcd967300c9a633fcd967300c9a633fcd967300c9a633fcd967300c9a7\ncalldata_TMRToken_0: 0x300000000000000000000000000000000000000000000000000000000\ncalldatasize_TMRToken: 0x4\n",
        "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0xc5e1510dfb5942f0af172af9c3ef3eef46e945c2.sol",
        "function": "fallback",
        "lineno": 219,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 904,
        "code": "-------------------------",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function fallback. The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_contracts/0xc5e1510dfb5942f0af172af9c3ef3eef46e945c2.sol",
        "function": "fallback",
        "lineno": 227,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 1961,
        "code": "ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, this, data);\n        return true;\n    }\n    \n    // ------------------------------------------------------------------------\n    // 2,000 TMR Tokens per 1 ETH\n    // 2,600 TMR Tokens per 1 ETH for 30% bonus\n    // ------------------------------",
        "debug": "calldata_TMRToken_32 + 36: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_TMRToken_0: 0xcae9ca5100000000000000000000000000000000000000000000000000000000\ncalldatasize_TMRToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `approveAndCall(address,uint256,bytes)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0xc5e1510dfb5942f0af172af9c3ef3eef46e945c2.sol",
        "function": "approveAndCall(address,uint256,bytes)",
        "lineno": 204,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2435,
        "code": "(c >=",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x8509a08f1d2805e8d3082894a6114041feff052033482837ffff60000e207998\ncallvalue: 0x1b2849017f8c1d7cb415a3b4dd080588b9a54188f7e083baa3dba4f02da12e0f\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\nUDiv(storage_0,_256): 0xd1257737670b7a84fbc6a4e4d978349d766197158039df902ec3274f6cfbc858\ncalldata_TMRToken_0: 0xc900000000000000000000000000000000000000000000000000000000\ncalldatasize_TMRToken: 0x4\n",
        "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0xc5e1510dfb5942f0af172af9c3ef3eef46e945c2.sol",
        "function": "fallback",
        "lineno": 24,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 5249,
        "code": "00 TMR Tokens per 1 ETH\n    // 2,600 TMR Tokens per 1 ETH for 30% bonus\n    // ",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_contracts/0xc5e1510dfb5942f0af172af9c3ef3eef46e945c2.sol",
        "function": "approveAndCall(address,uint256,bytes)",
        "lineno": 209,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 5611,
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_contracts/0xc5e1510dfb5942f0af172af9c3ef3eef46e945c2.sol",
        "function": "transferAnyERC20Token(address,uint256)",
        "lineno": 231,
        "title": "Message call to external contract",
        "type": "Warning"
      }
    ],
    "success": true
  }
}