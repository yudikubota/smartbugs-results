{
  "contract": "0x3f4486e3895ace649d8562398164517de040df14",
  "tool": "mythril",
  "start": 1563588451.942046,
  "end": 1563588519.9388576,
  "duration": 67.99681162834167,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 5500,
        "code": "g.value, usdAmount, usdRate, tokenWithout",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/23/0x3f4486e3895ace649d8562398164517de040df14.sol",
        "function": "fallback",
        "lineno": 575,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 5500,
        "code": "g.value, usdAmount, usdRate, tokenWithout",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 34598\nCall at address: 5824\n",
        "filename": "/unique_chucks/23/0x3f4486e3895ace649d8562398164517de040df14.sol",
        "function": "fallback",
        "lineno": 575,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 5824,
        "code": "(_beneficiary);\n  }\n\n  /**\n   * @dev Manually add alternative contribution",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/23/0x3f4486e3895ace649d8562398164517de040df14.sol",
        "function": "fallback",
        "lineno": 578,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 7297,
        "code": "\n    require(!checkSoft",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_5: 0x8000\nstorage_0: 0x0\ncaller: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncalldata_ShipCoinCrowdsale_0: 0x480887700000000000000000000000000000000000000000000000000000000\ncalldatasize_ShipCoinCrowdsale: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/23/0x3f4486e3895ace649d8562398164517de040df14.sol",
        "function": "saleSetEnded()",
        "lineno": 546,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 7429,
        "code": " Processes contributi",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/23/0x3f4486e3895ace649d8562398164517de040df14.sol",
        "function": "saleSetEnded()",
        "lineno": 553,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 7583,
        "code": "TH.\n   */\n  function buyTokens(address _beneficiary)",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/23/0x3f4486e3895ace649d8562398164517de040df14.sol",
        "function": "saleSetEnded()",
        "lineno": 553,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 8121,
        "code": "   (uint befTokenBonus, uint a",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_5: 0x8000\nstorage_0: 0x0\ncaller: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncalldata_ShipCoinCrowdsale_0: 0x1131ea0900000000000000000000000000000000000000000000000000000000\ncalldatasize_ShipCoinCrowdsale: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/23/0x3f4486e3895ace649d8562398164517de040df14.sol",
        "function": "processSetPreSaleBonus(uint256,uint256)",
        "lineno": 777,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 9143,
        "code": "    return softCapAchieved || getTotal",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/23/0x3f4486e3895ace649d8562398164517de040df14.sol",
        "function": "refundPay(uint256,uint256)",
        "lineno": 675,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 9143,
        "code": "    return softCapAchieved || getTotal",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 36440\n",
        "filename": "/unique_chucks/23/0x3f4486e3895ace649d8562398164517de040df14.sol",
        "function": "refundPay(uint256,uint256)",
        "lineno": 675,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 10229,
        "code": "otalToken,\n    uint tokenBonus,,\n    u",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/23/0x3f4486e3895ace649d8562398164517de040df14.sol",
        "function": "getPreSaleBonusPercent()",
        "lineno": 938,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 10229,
        "code": "otalToken,\n    uint tokenBonus,,\n    u",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function getPreSaleBonusPercent(). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/23/0x3f4486e3895ace649d8562398164517de040df14.sol",
        "function": "getPreSaleBonusPercent()",
        "lineno": 938,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 11013,
        "code": "/**\n   * @dev Return pre-",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_5: 0x8000\nstorage_0: 0x0\ncaller: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncalldata_ShipCoinCrowdsale_0: 0x308f164c00000000000000000000000000000000000000000000000000000000\ncalldatasize_ShipCoinCrowdsale: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/23/0x3f4486e3895ace649d8562398164517de040df14.sol",
        "function": "refundETHContributors(uint256,uint256)",
        "lineno": 907,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 13847,
        "code": "torageContract.setRece",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_5: 0x8000\nstorage_0: 0x0\ncaller: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncalldata_ShipCoinCrowdsale_0: 0x3b593be500000000000000000000000000000000000000000000000000000000\ncalldatasize_ShipCoinCrowdsale: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/23/0x3f4486e3895ace649d8562398164517de040df14.sol",
        "function": "sendSHPCtoContributors(uint256,uint256)",
        "lineno": 808,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 16504,
        "code": "eBonus(getMinReachUsdPayInCents()",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/23/0x3f4486e3895ace649d8562398164517de040df14.sol",
        "function": "getCoinUSDRate()",
        "lineno": 760,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 17839,
        "code": " (bonusToken > 0) {\n      assert(curr",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/23/0x3f4486e3895ace649d8562398164517de040df14.sol",
        "function": "activeSoftCapAchieved()",
        "lineno": 762,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 28392,
        "code": "alue, totalToken, tokenBonus, usdAbsRais",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/23/0x3f4486e3895ace649d8562398164517de040df14.sol",
        "function": "processSetPreSaleBonus(uint256,uint256)",
        "lineno": 943,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 28392,
        "code": "alue, totalToken, tokenBonus, usdAbsRais",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 10229\n",
        "filename": "/unique_chucks/23/0x3f4486e3895ace649d8562398164517de040df14.sol",
        "function": "processSetPreSaleBonus(uint256,uint256)",
        "lineno": 943,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 28392,
        "code": "alue, totalToken, tokenBonus, usdAbsRais",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function processSetPreSaleBonus(uint256,uint256). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/23/0x3f4486e3895ace649d8562398164517de040df14.sol",
        "function": "processSetPreSaleBonus(uint256,uint256)",
        "lineno": 943,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 28592,
        "code": "Processing of the data of the contributors.",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/23/0x3f4486e3895ace649d8562398164517de040df14.sol",
        "function": "activeSoftCapAchieved()",
        "lineno": 753,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 28592,
        "code": "Processing of the data of the contributors.",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 7583\n",
        "filename": "/unique_chucks/23/0x3f4486e3895ace649d8562398164517de040df14.sol",
        "function": "saleSetEnded()",
        "lineno": 753,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 34598,
        "code": "ayment.usdAbsRaisedInCents;\n    coinRaisedInWe",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/23/0x3f4486e3895ace649d8562398164517de040df14.sol",
        "function": "fallback",
        "lineno": 990,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 34808,
        "debug": "The exception is triggered under the following conditions:\n\nstorage_5: 0x8000\ncalldata_ShipCoinCrowdsale_0: 0x12210e8a00000000000000000000000000000000000000000000000000000000\ncalldatasize_ShipCoinCrowdsale: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/23/0x3f4486e3895ace649d8562398164517de040df14.sol",
        "function": "refundETH()",
        "lineno": 1038,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 35013,
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/23/0x3f4486e3895ace649d8562398164517de040df14.sol",
        "function": "refundETH()",
        "lineno": 1038,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 35013,
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 35532\nCall at address: 35272\n",
        "filename": "/unique_chucks/23/0x3f4486e3895ace649d8562398164517de040df14.sol",
        "function": "refundETH()",
        "lineno": 1038,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 35272,
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/23/0x3f4486e3895ace649d8562398164517de040df14.sol",
        "function": "refundETH()",
        "lineno": 1038,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 35272,
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 35532\n",
        "filename": "/unique_chucks/23/0x3f4486e3895ace649d8562398164517de040df14.sol",
        "function": "refundETH()",
        "lineno": 1038,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 35532,
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/23/0x3f4486e3895ace649d8562398164517de040df14.sol",
        "function": "refundETH()",
        "lineno": 1038,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 36440,
        "code": "(PaymentInfo payment, uint value, uint _curr",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/23/0x3f4486e3895ace649d8562398164517de040df14.sol",
        "function": "refundPay(uint256,uint256)",
        "lineno": 960,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 37765,
        "code": "\n    assert(uId > 0 &&",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_5: 0x8000\ncalldata_ShipCoinCrowdsale_0: 0x13c390ef00000000000000000000000000000000000000000000000000000000\ncalldatasize_ShipCoinCrowdsale: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/23/0x3f4486e3895ace649d8562398164517de040df14.sol",
        "function": "getCoins()",
        "lineno": 1030,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 37970,
        "code": "& getETHBalance() >= ethAmount);\n\n    s",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/23/0x3f4486e3895ace649d8562398164517de040df14.sol",
        "function": "getCoins()",
        "lineno": 1031,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 37970,
        "code": "& getETHBalance() >= ethAmount);\n\n    s",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 38229\n",
        "filename": "/unique_chucks/23/0x3f4486e3895ace649d8562398164517de040df14.sol",
        "function": "getCoins()",
        "lineno": 1031,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 38229,
        "code": "tRefund(uId);\n    addr.transfer(ethAmoun",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/23/0x3f4486e3895ace649d8562398164517de040df14.sol",
        "function": "getCoins()",
        "lineno": 1033,
        "title": "Message call to external contract",
        "type": "Informational"
      }
    ],
    "success": true
  }
}