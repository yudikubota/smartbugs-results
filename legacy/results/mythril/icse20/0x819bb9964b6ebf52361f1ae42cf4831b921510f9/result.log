{"error": null, "issues": [{"address": 3260, "code": "or ERC20 - used by 1) exec", "debug": "The exception is triggered under the following conditions:\n\ncalldata_V00_Marketplace_32 + 4: 0x0\nstorage_keccac_calldata_V00_Marketplace_4: 0x0\ncalldata_V00_Marketplace_0: 0x1d34be4700000000000000000000000000000000000000000000000000000000\ncalldatasize_V00_Marketplace: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/2/0x819bb9964b6ebf52361f1ae42cf4831b921510f9.sol", "function": "updateRefund(uint256,uint256,uint256,bytes32)", "lineno": 418, "title": "Exception state", "type": "Informational"}, {"address": 3291, "code": "to refund a purchas", "debug": "The exception is triggered under the following conditions:\n\ncalldata_V00_Marketplace_32 + 4: 0x0\ncalldata_V00_Marketplace_4: 0x0\nstorage_1: 0x0\nstorage_keccac_calldata_V00_Marketplace_4: 0x1\ncalldata_V00_Marketplace_0: 0x1d34be4700000000000000000000000000000000000000000000000000000000\ncalldatasize_V00_Marketplace: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/2/0x819bb9964b6ebf52361f1ae42cf4831b921510f9.sol", "function": "updateRefund(uint256,uint256,uint256,bytes32)", "lineno": 418, "title": "Exception state", "type": "Informational"}, {"address": 4150, "code": "dAffiliates;\n\n    ERC20 public tokenAd", "debug": "The exception is triggered under the following conditions:\n\ncalldata_V00_Marketplace_32 + 4: 0x0\nstorage_keccac_calldata_V00_Marketplace_4: 0x0\ncalldata_V00_Marketplace_0: 0x4d03a9a500000000000000000000000000000000000000000000000000000000\ncalldatasize_V00_Marketplace: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/2/0x819bb9964b6ebf52361f1ae42cf4831b921510f9.sol", "function": "_function_0x4d03a9a5", "lineno": 107, "title": "Exception state", "type": "Informational"}, {"address": 4989, "code": ";\n// produced by t", "debug": "storage_keccac_calldata_V00_Marketplace_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_V00_Marketplace_32 + 68: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_V00_Marketplace_32_+_68: 0xff00\nstorage_24465873643947496235832446106509767096567058095563226156125564318740882468607: 0x0\ncalldata_V00_Marketplace_0: 0x51b1825000000000000000000000000000000000000000000000000000000000\ncalldatasize_V00_Marketplace: 0x4\ncalldata_V00_Marketplace_32 + 100: 0x0\n", "description": "A possible integer overflow exists in the function `_function_0x51b18250`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/2/0x819bb9964b6ebf52361f1ae42cf4831b921510f9.sol", "function": "_function_0x51b18250", "lineno": 1, "title": "Integer Overflow ", "type": "Warning"}, {"address": 5879, "code": "tion makeOffer(\n        uint listingID,\n        ", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/2/0x819bb9964b6ebf52361f1ae42cf4831b921510f9.sol", "function": "_function_0x51b18250", "lineno": 271, "title": "Message call to external contract", "type": "Warning"}, {"address": 6192, "code": " ERC20(_tokenAddr);", "debug": "The exception is triggered under the following conditions:\n\ncalldata_V00_Marketplace_4: 0x0\nstorage_1: 0x0\ncalldata_V00_Marketplace_0: 0x5f0da25b00000000000000000000000000000000000000000000000000000000\ncalldatasize_V00_Marketplace: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/2/0x819bb9964b6ebf52361f1ae42cf4831b921510f9.sol", "function": "sendDeposit(uint256,address,uint256,bytes32)", "lineno": 490, "title": "Exception state", "type": "Informational"}, {"address": 6750, "code": "] = true;\n        emit AffiliateA", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/2/0x819bb9964b6ebf52361f1ae42cf4831b921510f9.sol", "function": "sendDeposit(uint256,address,uint256,bytes32)", "lineno": 495, "title": "Message call to external contract", "type": "Informational"}, {"address": 6750, "code": "] = true;\n        emit AffiliateA", "debug": "", "description": "A possible transaction order independence vulnerability exists in function sendDeposit(uint256,address,uint256,bytes32). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/2/0x819bb9964b6ebf52361f1ae42cf4831b921510f9.sol", "function": "sendDeposit(uint256,address,uint256,bytes32)", "lineno": 495, "title": "Transaction order dependence", "type": "Warning"}, {"address": 7071, "code": "t status to \"Disput", "debug": "The exception is triggered under the following conditions:\n\ncalldata_V00_Marketplace_4: 0x0\nstorage_1: 0x0\ncalldata_V00_Marketplace_0: 0x7080975700000000000000000000000000000000000000000000000000000000\ncalldatasize_V00_Marketplace: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/2/0x819bb9964b6ebf52361f1ae42cf4831b921510f9.sol", "function": "dispute(uint256,uint256,bytes32)", "lineno": 376, "title": "Exception state", "type": "Informational"}, {"address": 7119, "code": "g.sender, listingID, offer", "debug": "The exception is triggered under the following conditions:\n\ncalldata_V00_Marketplace_4: 0x0\ncalldata_V00_Marketplace_32 + 4: 0x0\nstorage_keccac_calldata_V00_Marketplace_4: 0x0\nstorage_1: 0x1\ncalldata_V00_Marketplace_0: 0x7080975700000000000000000000000000000000000000000000000000000000\ncalldatasize_V00_Marketplace: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/2/0x819bb9964b6ebf52361f1ae42cf4831b921510f9.sol", "function": "dispute(uint256,uint256,bytes32)", "lineno": 377, "title": "Exception state", "type": "Informational"}, {"address": 8374, "code": "    );\n        } else { //", "debug": "The exception is triggered under the following conditions:\n\ncalldata_V00_Marketplace_32 + 4: 0x0\nstorage_keccac_calldata_V00_Marketplace_4: 0x0\ncalldata_V00_Marketplace_0: 0x7d19514d00000000000000000000000000000000000000000000000000000000\ncalldatasize_V00_Marketplace: 0x4\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/2/0x819bb9964b6ebf52361f1ae42cf4831b921510f9.sol", "function": "addFunds(uint256,uint256,bytes32,uint256)", "lineno": 330, "title": "Exception state", "type": "Informational"}, {"address": 9295, "code": "uint offerID, bytes32 _ipfsHash) public {\n        Lis", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/2/0x819bb9964b6ebf52361f1ae42cf4831b921510f9.sol", "function": "addFunds(uint256,uint256,bytes32,uint256)", "lineno": 343, "title": "Message call to external contract", "type": "Warning"}, {"address": 9479, "code": "ers[listingID][offerI", "debug": "calldata_V00_Marketplace_32 + 68: 0x57f25cd000000000000000000000000000000000000000000000000000000000\nstorage_0 +\n9*calldata_V00_Marketplace_32 + 4 +\nkeccac_keccac_calldata_V00_Marketplace_4: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncalldata_V00_Marketplace_32 + 4: 0x0\nstorage_3 +\n9*calldata_V00_Marketplace_32 + 4 +\nkeccac_keccac_calldata_V00_Marketplace_4: 0x0\nstorage_8 +\n9*calldata_V00_Marketplace_32 + 4 +\nkeccac_keccac_calldata_V00_Marketplace_4: 0x200\nstorage_4 +\n9*calldata_V00_Marketplace_32 + 4 +\nkeccac_keccac_calldata_V00_Marketplace_4: 0x0\ncaller: 0x0\nstorage_keccac_calldata_V00_Marketplace_4: 0x1\ncalldata_V00_Marketplace_0: 0x7d19514d00000000000000000000000000000000000000000000000000000000\ncalldatasize_V00_Marketplace: 0x4\ncallvalue: 0x57f25cd000000000000000000000000000000000000000000000000000000000\n", "description": "A possible integer overflow exists in the function `addFunds(uint256,uint256,bytes32,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/2/0x819bb9964b6ebf52361f1ae42cf4831b921510f9.sol", "function": "addFunds(uint256,uint256,bytes32,uint256)", "lineno": 345, "title": "Integer Overflow ", "type": "Warning"}, {"address": 9485, "code": "ers[listingID][offerI", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/2/0x819bb9964b6ebf52361f1ae42cf4831b921510f9.sol", "function": "addFunds(uint256,uint256,bytes32,uint256)", "lineno": 345, "title": "State change after external call", "type": "Warning"}, {"address": 9790, "code": "t must cover commis", "debug": "The exception is triggered under the following conditions:\n\ncalldata_V00_Marketplace_4: 0x0\nstorage_1: 0x0\ncalldata_V00_Marketplace_0: 0x9c3f7ca200000000000000000000000000000000000000000000000000000000\ncalldatasize_V00_Marketplace: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/2/0x819bb9964b6ebf52361f1ae42cf4831b921510f9.sol", "function": "acceptOffer(uint256,uint256,bytes32)", "lineno": 297, "title": "Exception state", "type": "Informational"}, {"address": 9838, "code": "r.finalizes < 1000000000) ", "debug": "The exception is triggered under the following conditions:\n\ncalldata_V00_Marketplace_4: 0x0\ncalldata_V00_Marketplace_32 + 4: 0x0\nstorage_keccac_calldata_V00_Marketplace_4: 0x0\nstorage_1: 0x1\ncalldata_V00_Marketplace_0: 0x9c3f7ca200000000000000000000000000000000000000000000000000000000\ncalldatasize_V00_Marketplace: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/2/0x819bb9964b6ebf52361f1ae42cf4831b921510f9.sol", "function": "acceptOffer(uint256,uint256,bytes32)", "lineno": 299, "title": "Exception state", "type": "Informational"}, {"address": 10777, "code": "posit to target\n   ", "debug": "The exception is triggered under the following conditions:\n\ncalldata_V00_Marketplace_4: 0x0\nstorage_1: 0x0\ncalldata_V00_Marketplace_0: 0xa3111d7c00000000000000000000000000000000000000000000000000000000\ncalldatasize_V00_Marketplace: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/2/0x819bb9964b6ebf52361f1ae42cf4831b921510f9.sol", "function": "withdrawListing(uint256,address,bytes32)", "lineno": 216, "title": "Exception state", "type": "Informational"}], "success": true}