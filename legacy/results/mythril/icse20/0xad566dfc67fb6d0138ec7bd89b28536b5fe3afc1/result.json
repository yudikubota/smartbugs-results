{
  "contract": "0xad566dfc67fb6d0138ec7bd89b28536b5fe3afc1",
  "tool": "mythril",
  "start": 1563542689.742265,
  "end": 1563543420.7458436,
  "duration": 731.0035786628723,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 353,
        "code": "erPick(uin",
        "debug": "storage_14: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncallvalue: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldatasize_manekio: 0x3\n",
        "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/16/0xad566dfc67fb6d0138ec7bd89b28536b5fe3afc1.sol",
        "function": "fallback",
        "lineno": 109,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2039,
        "code": "     uint256 _p",
        "debug": "The exception is triggered under the following conditions:\n\ncallvalue: 0x2386f26fe00000\nstorage_14: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ntimestamp: 0x0\nstorage_13: 0xff00\nstorage_11: 0x0\nstorage_12: 0x1\ncalldatasize_manekio: 0x3\nstorage_6: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/16/0xad566dfc67fb6d0138ec7bd89b28536b5fe3afc1.sol",
        "function": "fallback",
        "lineno": 120,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2055,
        "code": "pEth;\n        /",
        "debug": "The exception is triggered under the following conditions:\n\ncallvalue: 0x2386f26fe00000\nstorage_14: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ntimestamp: 0x0\nstorage_6: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_13: 0xff00\nstorage_11: 0x0\nstorage_12: 0x1\ncalldatasize_manekio: 0x3\nstorage_9: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/16/0xad566dfc67fb6d0138ec7bd89b28536b5fe3afc1.sol",
        "function": "fallback",
        "lineno": 120,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2166,
        "code": "      if(plyrJBk[_p",
        "debug": "callvalue: 0x28000000000000\nstorage_14: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_1 + keccac_storage_14_+_1: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ntimestamp: 0x0\nstorage_9: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_6: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_13: 0xff00\nstorage_11: 0x0\nstorage_12: 0x1\ncalldatasize_manekio: 0x3\n",
        "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/16/0xad566dfc67fb6d0138ec7bd89b28536b5fe3afc1.sol",
        "function": "fallback",
        "lineno": 130,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2410,
        "code": "ate pAddrxBk\n      ",
        "debug": "callvalue: 0x2386f26fe00000\nstorage_14: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ntimestamp: 0x0\nstorage_9: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_6: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_3: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc18\nstorage_13: 0xff00\nstorage_11: 0x0\nstorage_12: 0x1\ncalldatasize_manekio: 0x3\nstorage_1 + keccac_0: 0x0\n",
        "description": "A possible integer underflow exists in the function `fallback`.\nThe subtraction may result in a value < 0.",
        "filename": "/unique_chucks/16/0xad566dfc67fb6d0138ec7bd89b28536b5fe3afc1.sol",
        "function": "fallback",
        "lineno": 138,
        "title": "Integer Underflow",
        "type": "Warning"
      },
      {
        "address": 2781,
        "code": " _commEth - _jp",
        "debug": "The exception is triggered under the following conditions:\n\ncallvalue: 0x2386f26fe00000\nstorage_14: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ntimestamp: 0x0\nstorage_13: 0x0\nstorage_11: 0x0\nstorage_12: 0x1\ncalldatasize_manekio: 0x3\nstorage_6: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/16/0xad566dfc67fb6d0138ec7bd89b28536b5fe3afc1.sol",
        "function": "fallback",
        "lineno": 149,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2797,
        "code": "\n      }\n      ",
        "debug": "The exception is triggered under the following conditions:\n\ncallvalue: 0x2386f26fe00000\nstorage_14: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ntimestamp: 0x0\nstorage_6: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_13: 0x0\nstorage_11: 0x0\nstorage_12: 0x1\ncalldatasize_manekio: 0x3\nstorage_9: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/16/0xad566dfc67fb6d0138ec7bd89b28536b5fe3afc1.sol",
        "function": "fallback",
        "lineno": 150,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2875,
        "code": "ire(ended ==",
        "debug": "callvalue: 0xcacb402a20200a09822135dfffffeff922203dffe9ef89df702387f26fc88c13\nstorage_5: 0xea439ff13bdff5fd84040010000000015ddfc2000c04018f81d8780d90138c40\ntimestamp: 0x0\nstorage_13: 0xff00\nstorage_11: 0xff00\nstorage_12: 0x1\nstorage_14: 0x3e5\ncalldatasize_manekio: 0x3\n",
        "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/16/0xad566dfc67fb6d0138ec7bd89b28536b5fe3afc1.sol",
        "function": "fallback",
        "lineno": 161,
        "title": "Integer Overflow ",
        "type": "Warning"
      }
    ],
    "success": true
  }
}