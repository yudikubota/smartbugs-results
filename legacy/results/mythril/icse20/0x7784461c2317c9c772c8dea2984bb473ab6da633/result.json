{
  "contract": "0x7784461c2317c9c772c8dea2984bb473ab6da633",
  "tool": "mythril",
  "start": 1563698749.8517208,
  "end": 1563698984.8295414,
  "duration": 234.97782063484192,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 1664,
        "code": " spender, tokens);\n        ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, this, data);\n        return true;\n    }\n\n\n    // ------------------------------------------------------------------------\n    // Don't accept ETH\n    // ---------------------------------------------------------------------",
        "debug": "calldata_Testinity_32 + 36: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_Testinity_0: 0xcae9ca5100000000000000000000000000000000000000000000000000000000\ncalldatasize_Testinity: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `approveAndCall(address,uint256,bytes)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/37/0x7784461c2317c9c772c8dea2984bb473ab6da633.sol",
        "function": "approveAndCall(address,uint256,bytes)",
        "lineno": 181,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 4749,
        "code": "[msg.send",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0x0\ncaller: 0x0\ncalldata_Testinity_0: 0xaad41a4100000000000000000000000000000000000000000000000000000000\ncalldatasize_Testinity: 0x4\nmem_128 + 32 + 32*calldata_Testinity_4 + calldata_Testinity_4: 0x0\ncalldata_Testinity_4 + calldata_Testinity_4: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/37/0x7784461c2317c9c772c8dea2984bb473ab6da633.sol",
        "function": "multisend(address[],uint256[])",
        "lineno": 211,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 5838,
        "code": "--------\n    // Don't accept ETH\n    // ---------------------------------------",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/37/0x7784461c2317c9c772c8dea2984bb473ab6da633.sol",
        "function": "approveAndCall(address,uint256,bytes)",
        "lineno": 187,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 6453,
        "code": "     ",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_Testinity_4: 0x9c9efb7ae5acd378025256a3945f5859076e809243093d9ecae2636c9fd28979\ncalldata_Testinity_32 + 4: 0xc290137095b13347e55005a6dc184559e0489f1233480050d0fb4bba17d34179\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xc290137095b13347e55005a6dc184559e0489f1233480050d0fb4bba17d34179\ncalldata_Testinity_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncalldatasize_Testinity: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `transfer(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/37/0x7784461c2317c9c772c8dea2984bb473ab6da633.sol",
        "function": "transfer(address,uint256)",
        "lineno": 9,
        "title": "Integer Overflow ",
        "type": "Warning"
      }
    ],
    "success": true
  }
}