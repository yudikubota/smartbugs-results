{
  "contract": "0x8836dc78baa218017dcc0cf6ced6669614b9dd9b",
  "tool": "mythril",
  "start": 1563259141.7577403,
  "end": 1563259776.1734803,
  "duration": 634.4157400131226,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 126,
        "code": " AddrName, address Addr) public {\n        require(\n            msg.sender == getAddr(\"owner\") ||\n            msg.sender == getAddr(\"admin\")\n        );\n        addressBook[keccak256(AddrName)] = Addr;\n        emit eSetAddr(AddrName, Addr);\n    }\n\n    function getAddr(string ",
        "debug": "calldata_token_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_token_0: 0x213b9eb800000000000000000000000000000000000000000000000000000000\ncalldatasize_token: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `setAddr(string,address)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x8836dc78baa218017dcc0cf6ced6669614b9dd9b.sol",
        "function": "setAddr(string,address)",
        "lineno": 24,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 263,
        "code": ") public view returns(address AssignedAddress) {\n        address realAddress = addressBook[keccak256(AddrName)];\n        require(realAddress != address(0));\n        return realAddress;\n    }\n\n    function SendERC20ToAsset(addr",
        "debug": "calldata_token_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_token_0: 0xd502db9700000000000000000000000000000000000000000000000000000000\ncalldatasize_token: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `getAddr(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x8836dc78baa218017dcc0cf6ced6669614b9dd9b.sol",
        "function": "getAddr(string)",
        "lineno": 33,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1612,
        "code": "\n        tokenFunctions.transfer(getAdd",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_contracts/0x8836dc78baa218017dcc0cf6ced6669614b9dd9b.sol",
        "function": "SendERC20ToAsset(address)",
        "lineno": 41,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 1612,
        "code": "\n        tokenFunctions.transfer(getAdd",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1897\n",
        "filename": "/unique_contracts/0x8836dc78baa218017dcc0cf6ced6669614b9dd9b.sol",
        "function": "SendERC20ToAsset(address)",
        "lineno": 41,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 1897,
        "code": " tokenBal);\n    }\n\n}",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_contracts/0x8836dc78baa218017dcc0cf6ced6669614b9dd9b.sol",
        "function": "SendERC20ToAsset(address)",
        "lineno": 42,
        "title": "Message call to external contract",
        "type": "Warning"
      }
    ],
    "success": true
  }
}