{"error": null, "issues": [{"address": 222, "code": "\n    }\n\n    function kill() external MasterAble\n    {\n        g_Main.ClearAuth(this);\n        selfdestruct(creator);\n    }\n\n    function AddBonus(uint percent) internal\n    {\n        address(g_Main).transfer(msg.value);\n        g_", "debug": "calldata_ProductionBoiler_32 + 68: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_ProductionBoiler_0: 0x616ae0500000000000000000000000000000000000000000000000000000000\ncalldatasize_ProductionBoiler: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `GenerateChips(address,uint256,uint256,uint32[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/13/0xf630f86fbb0097db990618b396078a5c340fe3cc.sol", "function": "GenerateChips(address,uint256,uint256,uint32[])", "lineno": 1061, "title": "Integer Overflow ", "type": "Warning"}, {"address": 228, "code": "\n    }\n\n    function kill() external MasterAble\n    {\n        g_Main.ClearAuth(this);\n        selfdestruct(creator);\n    }\n\n    function AddBonus(uint percent) internal\n    {\n        address(g_Main).transfer(msg.value);\n        g_", "debug": "calldata_ProductionBoiler_32 + 68: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc\ncalldata_ProductionBoiler_0: 0x616ae0500000000000000000000000000000000000000000000000000000000\ncalldatasize_ProductionBoiler: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `GenerateChips(address,uint256,uint256,uint32[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/13/0xf630f86fbb0097db990618b396078a5c340fe3cc.sol", "function": "GenerateChips(address,uint256,uint256,uint32[])", "lineno": 1061, "title": "Integer Overflow ", "type": "Warning"}, {"address": 463, "code": "004;\n\n    uint32 constant PERMISSION_1 = 23002;\n    uint32 constant PERMISSION_2 = 23003;\n\n    uint constant BASERATIO = 10000;\n    uint constant BOILER_FREE_IDX = 0;\n    uint constant BOILER_", "debug": "storage_1 + keccac_calldata_ProductionBoiler_32_+_4: 0x800000000000000000000000000000000000000000000000000000000000000\ncalldata_ProductionBoiler_0: 0x58fe54a100000000000000000000000000000000000000000000000000000000\ncalldatasize_ProductionBoiler: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `GetBoilerInfo(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/13/0xf630f86fbb0097db990618b396078a5c340fe3cc.sol", "function": "GetBoilerInfo(address,uint256)", "lineno": 1092, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1006, "code": "[msg.send", "debug": "", "description": "Function GenerateChips(address,uint256,uint256,uint32[]) retrieves the transaction origin (tx.origin) using the ORIGIN opcode. Use msg.sender instead.\nSee also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin", "filename": "/unique_chucks/13/0xf630f86fbb0097db990618b396078a5c340fe3cc.sol", "function": "GenerateChips(address,uint256,uint256,uint32[])", "lineno": 92, "title": "Use of tx.origin", "type": "Warning"}, {"address": 1148, "code": "ress(g", "debug": "calldata_ProductionBoiler_32 + 36: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ntimestamp: 0x57f25cd000000000000000000000000000000000000000000000000000000000\norigin: 0x0\ncalldata_ProductionBoiler_4: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xff00\ncalldata_ProductionBoiler_0: 0x616ae0500000000000000000000000000000000000000000000000000000000\ncalldatasize_ProductionBoiler: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `GenerateChips(address,uint256,uint256,uint32[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/13/0xf630f86fbb0097db990618b396078a5c340fe3cc.sol", "function": "GenerateChips(address,uint256,uint256,uint32[])", "lineno": 1072, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1445, "code": "R_FREE_IDX = 0;\n    uint constant", "debug": "storage_1 + keccac_calldata_ProductionBoiler_32_+_4: 0x8421003f084001f4210815cf88407c00000000000000037c1d000e8d178001f\ncalldata_ProductionBoiler_0: 0x58fe54a100000000000000000000000000000000000000000000000000000000\ncalldatasize_ProductionBoiler: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `GetBoilerInfo(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/13/0xf630f86fbb0097db990618b396078a5c340fe3cc.sol", "function": "GetBoilerInfo(address,uint256)", "lineno": 1098, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1447, "code": "R_FREE_IDX = 0;\n    uint constant", "debug": "storage_1 + keccac_calldata_ProductionBoiler_32_+_4: 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffb\ncalldata_ProductionBoiler_0: 0x58fe54a100000000000000000000000000000000000000000000000000000000\ncalldatasize_ProductionBoiler: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `GetBoilerInfo(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/13/0xf630f86fbb0097db990618b396078a5c340fe3cc.sol", "function": "GetBoilerInfo(address,uint256)", "lineno": 1098, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1648, "code": "uth(addre", "debug": "", "description": "Function SetAuth(address) retrieves the transaction origin (tx.origin) using the ORIGIN opcode. Use msg.sender instead.\nSee also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin", "filename": "/unique_chucks/13/0xf630f86fbb0097db990618b396078a5c340fe3cc.sol", "function": "SetAuth(address)", "lineno": 107, "title": "Use of tx.origin", "type": "Warning"}, {"address": 1775, "code": "s Base \n{", "debug": "", "description": "Function ClearAuth(address) retrieves the transaction origin (tx.origin) using the ORIGIN opcode. Use msg.sender instead.\nSee also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin", "filename": "/unique_chucks/13/0xf630f86fbb0097db990618b396078a5c340fe3cc.sol", "function": "ClearAuth(address)", "lineno": 118, "title": "Use of tx.origin", "type": "Warning"}, {"address": 1984, "code": "[msg.send", "debug": "", "description": "Function CollectChips(address,uint256) retrieves the transaction origin (tx.origin) using the ORIGIN opcode. Use msg.sender instead.\nSee also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin", "filename": "/unique_chucks/13/0xf630f86fbb0097db990618b396078a5c340fe3cc.sol", "function": "CollectChips(address,uint256)", "lineno": 92, "title": "Use of tx.origin", "type": "Warning"}, {"address": 2600, "code": "address acc, uint idx) external AuthAble OwnerAble(acc) returns(uint32[] chips)\n    {\n        Boiler storage obj = g_Boilers[acc][idx];\n        chips = new uint32[](obj.m_Chips.length);\n        for (uint i=0; i<obj.m_Chips.length; i++)\n        {\n            chips[i] = obj.m_Chips[i];\n            delete obj.m_Chips[i];\n        }\n        obj.m_Chips.length = 0;\n        obj.m_Expire = 0;\n    }\n\n    function GetBoilerInfo(address acc, uint idx) external view returns(uint, uint32[])\n    {\n        Boiler storage obj = g_Boilers[acc][idx];\n        return (obj.m_Expire,obj.m_Chips);\n    }\n\n}\n\n\n\n\ncontract Child is Base {\n\n    Main g_Main;\n\n    constructor(Main main) public\n    {\n        require(main != address(0));\n        g_Main = main;\n        g_Main.SetAuth(this);\n    }\n\n    function kill() external MasterAble\n    {\n        g_Main.ClearAuth(this);\n        selfdestruct(creator);\n    }\n\n    function AddBonus(uint percent) internal\n    {\n        address(g_Main).transfer(msg.value);\n        g_Main.AddBonus(msg.value * percent / 100);\n    }\n\n    function GenRandom(uint seed,uint base) internal view returns(uint,uint)\n    {\n        uint r = uint(keccak256(abi.encodePacked(msg.sender,seed,now)));\n        if (base != 0) r %= base;\n        return (r,seed+1);\n    }\n\n}\n\n\n\n\ncontract Production is Child {\n\n    uint32 constant STUFF_IDX_POINT = 22001;\n    uint32 constant STUFF_IDX_GENRAL = 21000;\n    uint32 constant STUFF_IDX_EXTRA = 21004;\n\n    uint32 constant PERMISSION_1 = 23002;\n    uint32 constant PERMISSION_2 = 23003;\n\n    uint constant BASERATIO = 10000;\n    uint constant BOILER_FREE_IDX = 0;\n    uint constant BOILER_MAX_N", "debug": "storage_1 + keccac_calldata_ProductionBoiler_32_+_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd\norigin: 0x0\ncalldata_ProductionBoiler_4: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xff00\ncalldata_ProductionBoiler_0: 0x616ae0500000000000000000000000000000000000000000000000000000000\ncalldatasize_ProductionBoiler: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `GenerateChips(address,uint256,uint256,uint32[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/13/0xf630f86fbb0097db990618b396078a5c340fe3cc.sol", "function": "GenerateChips(address,uint256,uint256,uint32[])", "lineno": 1029, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2606, "code": "address acc, uint idx) external AuthAble OwnerAble(acc) returns(uint32[] chips)\n    {\n        Boiler storage obj = g_Boilers[acc][idx];\n        chips = new uint32[](obj.m_Chips.length);\n        for (uint i=0; i<obj.m_Chips.length; i++)\n        {\n            chips[i] = obj.m_Chips[i];\n            delete obj.m_Chips[i];\n        }\n        obj.m_Chips.length = 0;\n        obj.m_Expire = 0;\n    }\n\n    function GetBoilerInfo(address acc, uint idx) external view returns(uint, uint32[])\n    {\n        Boiler storage obj = g_Boilers[acc][idx];\n        return (obj.m_Expire,obj.m_Chips);\n    }\n\n}\n\n\n\n\ncontract Child is Base {\n\n    Main g_Main;\n\n    constructor(Main main) public\n    {\n        require(main != address(0));\n        g_Main = main;\n        g_Main.SetAuth(this);\n    }\n\n    function kill() external MasterAble\n    {\n        g_Main.ClearAuth(this);\n        selfdestruct(creator);\n    }\n\n    function AddBonus(uint percent) internal\n    {\n        address(g_Main).transfer(msg.value);\n        g_Main.AddBonus(msg.value * percent / 100);\n    }\n\n    function GenRandom(uint seed,uint base) internal view returns(uint,uint)\n    {\n        uint r = uint(keccak256(abi.encodePacked(msg.sender,seed,now)));\n        if (base != 0) r %= base;\n        return (r,seed+1);\n    }\n\n}\n\n\n\n\ncontract Production is Child {\n\n    uint32 constant STUFF_IDX_POINT = 22001;\n    uint32 constant STUFF_IDX_GENRAL = 21000;\n    uint32 constant STUFF_IDX_EXTRA = 21004;\n\n    uint32 constant PERMISSION_1 = 23002;\n    uint32 constant PERMISSION_2 = 23003;\n\n    uint constant BASERATIO = 10000;\n    uint constant BOILER_FREE_IDX = 0;\n    uint constant BOILER_MAX_N", "debug": "keccac_1_+_keccac_calldata_ProductionBoiler_32_+_4: 0xfc86bad100d50b52800f6efd1234d4050f57c97082400704da31e108a9179b67\nstorage_1 + keccac_calldata_ProductionBoiler_32_+_4: 0x8688d62877349a8cdb427f083e32bb3afe9fc8f4dbbf9fb719efed749d3c8b41\norigin: 0x0\ncalldata_ProductionBoiler_4: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xff00\ncalldata_ProductionBoiler_0: 0x616ae0500000000000000000000000000000000000000000000000000000000\ncalldatasize_ProductionBoiler: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `GenerateChips(address,uint256,uint256,uint32[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/13/0xf630f86fbb0097db990618b396078a5c340fe3cc.sol", "function": "GenerateChips(address,uint256,uint256,uint32[])", "lineno": 1029, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2617, "code": "address acc, uint idx) external AuthAble OwnerAble(acc) returns(uint32[] chips)\n    {\n        Boiler storage obj = g_Boilers[acc][idx];\n        chips = new uint32[](obj.m_Chips.length);\n        for (uint i=0; i<obj.m_Chips.length; i++)\n        {\n            chips[i] = obj.m_Chips[i];\n            delete obj.m_Chips[i];\n        }\n        obj.m_Chips.length = 0;\n        obj.m_Expire = 0;\n    }\n\n    function GetBoilerInfo(address acc, uint idx) external view returns(uint, uint32[])\n    {\n        Boiler storage obj = g_Boilers[acc][idx];\n        return (obj.m_Expire,obj.m_Chips);\n    }\n\n}\n\n\n\n\ncontract Child is Base {\n\n    Main g_Main;\n\n    constructor(Main main) public\n    {\n        require(main != address(0));\n        g_Main = main;\n        g_Main.SetAuth(this);\n    }\n\n    function kill() external MasterAble\n    {\n        g_Main.ClearAuth(this);\n        selfdestruct(creator);\n    }\n\n    function AddBonus(uint percent) internal\n    {\n        address(g_Main).transfer(msg.value);\n        g_Main.AddBonus(msg.value * percent / 100);\n    }\n\n    function GenRandom(uint seed,uint base) internal view returns(uint,uint)\n    {\n        uint r = uint(keccak256(abi.encodePacked(msg.sender,seed,now)));\n        if (base != 0) r %= base;\n        return (r,seed+1);\n    }\n\n}\n\n\n\n\ncontract Production is Child {\n\n    uint32 constant STUFF_IDX_POINT = 22001;\n    uint32 constant STUFF_IDX_GENRAL = 21000;\n    uint32 constant STUFF_IDX_EXTRA = 21004;\n\n    uint32 constant PERMISSION_1 = 23002;\n    uint32 constant PERMISSION_2 = 23003;\n\n    uint constant BASERATIO = 10000;\n    uint constant BOILER_FREE_IDX = 0;\n    uint constant BOILER_MAX_N", "debug": "calldata_ProductionBoiler_4 + calldata_ProductionBoiler_32 + 68: 0x8421003f084001f4210815cf88407c00000000000000037c1d000e8d178001f\norigin: 0x0\ncalldata_ProductionBoiler_4: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xff00\ncalldata_ProductionBoiler_0: 0x616ae0500000000000000000000000000000000000000000000000000000000\ncalldatasize_ProductionBoiler: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `GenerateChips(address,uint256,uint256,uint32[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/13/0xf630f86fbb0097db990618b396078a5c340fe3cc.sol", "function": "GenerateChips(address,uint256,uint256,uint32[])", "lineno": 1029, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2619, "code": "address acc, uint idx) external AuthAble OwnerAble(acc) returns(uint32[] chips)\n    {\n        Boiler storage obj = g_Boilers[acc][idx];\n        chips = new uint32[](obj.m_Chips.length);\n        for (uint i=0; i<obj.m_Chips.length; i++)\n        {\n            chips[i] = obj.m_Chips[i];\n            delete obj.m_Chips[i];\n        }\n        obj.m_Chips.length = 0;\n        obj.m_Expire = 0;\n    }\n\n    function GetBoilerInfo(address acc, uint idx) external view returns(uint, uint32[])\n    {\n        Boiler storage obj = g_Boilers[acc][idx];\n        return (obj.m_Expire,obj.m_Chips);\n    }\n\n}\n\n\n\n\ncontract Child is Base {\n\n    Main g_Main;\n\n    constructor(Main main) public\n    {\n        require(main != address(0));\n        g_Main = main;\n        g_Main.SetAuth(this);\n    }\n\n    function kill() external MasterAble\n    {\n        g_Main.ClearAuth(this);\n        selfdestruct(creator);\n    }\n\n    function AddBonus(uint percent) internal\n    {\n        address(g_Main).transfer(msg.value);\n        g_Main.AddBonus(msg.value * percent / 100);\n    }\n\n    function GenRandom(uint seed,uint base) internal view returns(uint,uint)\n    {\n        uint r = uint(keccak256(abi.encodePacked(msg.sender,seed,now)));\n        if (base != 0) r %= base;\n        return (r,seed+1);\n    }\n\n}\n\n\n\n\ncontract Production is Child {\n\n    uint32 constant STUFF_IDX_POINT = 22001;\n    uint32 constant STUFF_IDX_GENRAL = 21000;\n    uint32 constant STUFF_IDX_EXTRA = 21004;\n\n    uint32 constant PERMISSION_1 = 23002;\n    uint32 constant PERMISSION_2 = 23003;\n\n    uint constant BASERATIO = 10000;\n    uint constant BOILER_FREE_IDX = 0;\n    uint constant BOILER_MAX_N", "debug": "calldata_ProductionBoiler_4 + calldata_ProductionBoiler_32 + 68: 0x7ffffffffffffcb76b8d0f83fb8ffef7fffffdfffffffffd11cdb5dffffffff\ncalldata_ProductionBoiler_32 + 68: 0x670c96825de4b7e4babe61c100020000000001dc64945ffffffffc\norigin: 0x0\ncalldata_ProductionBoiler_4: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xff00\ncalldata_ProductionBoiler_0: 0x616ae0500000000000000000000000000000000000000000000000000000000\ncalldatasize_ProductionBoiler: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `GenerateChips(address,uint256,uint256,uint32[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/13/0xf630f86fbb0097db990618b396078a5c340fe3cc.sol", "function": "GenerateChips(address,uint256,uint256,uint32[])", "lineno": 1029, "title": "Integer Overflow ", "type": "Warning"}], "success": true}