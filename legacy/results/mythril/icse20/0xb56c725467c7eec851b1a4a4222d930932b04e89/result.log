{"error": null, "issues": [{"address": 552, "code": "    //-----------------------", "debug": "storage_7: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncallvalue: 0x57f25cd000000000000000000000000000000000000000000000000000000000\ncalldatasize_E4RowEscrow: 0x3\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/4/0xb56c725467c7eec851b1a4a4222d930932b04e89.sol", "function": "fallback", "lineno": 143, "title": "Integer Overflow ", "type": "Warning"}, {"address": 856, "code": "-------------------------\n        function checkHGame(uint _hGame) constant returns(uint _arbTok, uint _lowWords)\n        {\n                _arbTok = ArbTokFromHGame(_hGame);\n                _lowWords = _hGame & 0xffffffffffff;\n\n        }\n\n        //------------------------------------------------------\n        // get operation gas amounts\n        //--------------------", "debug": "The exception is triggered under the following conditions:\n\nstorage_0 + keccac_calldata_E4RowEscrow_4: 0x8000\ncalldata_E4RowEscrow_0: 0x47e1d55000000000000000000000000000000000000000000000000000000000\ncalldatasize_E4RowEscrow: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/4/0xb56c725467c7eec851b1a4a4222d930932b04e89.sol", "function": "getGameInfo(uint256)", "lineno": 538, "title": "Exception state", "type": "Informational"}, {"address": 1216, "code": "ug; \n\n\n        mapping (address => arbiter)  arbiters;\n        m", "debug": "The exception is triggered under the following conditions:\n\nstorage_17: 0x8000\ncalldata_E4RowEscrow_0: 0x5f437e4800000000000000000000000000000000000000000000000000000000\ncalldatasize_E4RowEscrow: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/4/0xb56c725467c7eec851b1a4a4222d930932b04e89.sol", "function": "_function_0x5f437e48", "lineno": 63, "title": "Exception state", "type": "Informational"}, {"address": 3353, "code": "          tokenPartner = _addr;\n                 ", "debug": "", "description": "This contract executes a message call to the address of the transaction sender. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/4/0xb56c725467c7eec851b1a4a4222d930932b04e89.sol", "function": "withdrawArbFunds()", "lineno": 640, "title": "Message call to external contract", "type": "Warning"}, {"address": 7480, "code": "                   || settingsState == SettingSt", "debug": "The exception is triggered under the following conditions:\n\nstorage_17: 0x8000\nstorage_0: 0x0\ncaller: 0x0\ncalldata_E4RowEscrow_0: 0x7612115d00000000000000000000000000000000000000000000000000000000\ncalldatasize_E4RowEscrow: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/4/0xb56c725467c7eec851b1a4a4222d930932b04e89.sol", "function": "setTokenPartner(address)", "lineno": 655, "title": "Exception state", "type": "Informational"}], "success": true}