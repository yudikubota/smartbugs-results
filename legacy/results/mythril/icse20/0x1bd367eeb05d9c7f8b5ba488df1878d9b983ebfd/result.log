{"error": null, "issues": [{"address": 290, "code": "            //save users eth va", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x92ae42eee8861e6f7960f56621c6cc29067d678a9d386ce1a1bf475b3ab57b01\ncallvalue: 0xfcaa2bc48e496090051d782355046d2d342146501e9f6eedb41058933ca44303\nstorage_5: 0x0\ncalldata_token_0: 0x4000000000000000000000000000000000000000000000000000000000\ncalldatasize_token: 0x4\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/34/0x1bd367eeb05d9c7f8b5ba488df1878d9b983ebfd.sol", "function": "fallback", "lineno": 72, "title": "Integer Overflow ", "type": "Warning"}, {"address": 306, "code": "           //update to", "debug": "callvalue: 0xfcaa2bc48e496090051d782355046d2d342146501e9f6eedb41058933ca44303\nstorage_1: 0x92ae42eee8861e6f7960f56621c6cc29067d678a9d386ce1a1bf475b3ab57b01\nstorage_5: 0x0\ncalldata_token_0: 0x4000000000000000000000000000000000000000000000000000000000\ncalldatasize_token: 0x4\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/34/0x1bd367eeb05d9c7f8b5ba488df1878d9b983ebfd.sol", "function": "fallback", "lineno": 73, "title": "Integer Overflow ", "type": "Warning"}, {"address": 330, "code": "te user's toke", "debug": "The exception is triggered under the following conditions:\n\nstorage_5: 0x0\ncalldata_token_0: 0x38af3ee900000000000000000000000000000000000000000000000000000000\ncalldatasize_token: 0x4\nstorage_4: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/34/0x1bd367eeb05d9c7f8b5ba488df1878d9b983ebfd.sol", "function": "fallback", "lineno": 74, "title": "Exception state", "type": "Informational"}, {"address": 535, "code": "         //send tokens to user\n        soldT", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/34/0x1bd367eeb05d9c7f8b5ba488df1878d9b983ebfd.sol", "function": "fallback", "lineno": 75, "title": "Message call to external contract", "type": "Informational"}, {"address": 535, "code": "         //send tokens to user\n        soldT", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 783\n", "filename": "/unique_chucks/34/0x1bd367eeb05d9c7f8b5ba488df1878d9b983ebfd.sol", "function": "fallback", "lineno": 75, "title": "Multiple Calls", "type": "Information"}, {"address": 571, "code": "        //update total sold tok", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/34/0x1bd367eeb05d9c7f8b5ba488df1878d9b983ebfd.sol", "function": "fallback", "lineno": 76, "title": "State change after external call", "type": "Warning"}, {"address": 2044, "code": "}\n\n    /**\n     * Return unsold tokens ", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/34/0x1bd367eeb05d9c7f8b5ba488df1878d9b983ebfd.sol", "function": "getUnsoldTokens(uint256)", "lineno": 47, "title": "Message call to external contract", "type": "Informational"}, {"address": 2400, "code": "**\n     * Close/Open crowdsale\n     */\n", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/34/0x1bd367eeb05d9c7f8b5ba488df1878d9b983ebfd.sol", "function": "getUnsoldTokensWithDecimals(uint256,uint256)", "lineno": 57, "title": "Message call to external contract", "type": "Informational"}], "success": true}