{
  "contract": "0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7",
  "tool": "mythril",
  "start": 1563483274.758021,
  "end": 1563483280.7254167,
  "duration": 5.967395544052124,
  "analysis": {
    "success": false,
    "error": "Solc experienced a fatal error (code 1).\n\n/unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:1:1: Error: Source file requires different compiler version (current compiler is 0.4.25+commit.59dbf8f1.Linux.g++ - note that nightly builds are considered to be strictly less than the released version\npragma solidity 0.4.19;\r\n^---------------------^\n/unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:763:45: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n        if ((_nbytes == 0)||(_nbytes > 32)) throw;\r\n                                            ^---^\n/unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:853:71: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n        if ((_proof[0] != \"L\")||(_proof[1] != \"P\")||(_proof[2] != 1)) throw;\r\n                                                                      ^---^\n/unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:856:37: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n        if (proofVerified == false) throw;\r\n                                    ^---^\n/unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:864:14: Warning: Use of the \"var\" keyword is deprecated.\n        for (var i=0; i<prefix.length; i++){\r\n             ^---^\n/unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:927:13: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n            throw; // Should be a better way?\r\n            ^---^\n/unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:1084:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use \"constructor(...) { ... }\" instead.\n    function Goldcub() {\r\n    ^ (Relevant source part starts here and spans across multiple lines).\n/unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:777:50: Warning: \"sha3\" has been deprecated in favour of \"keccak256\"\n        oraclize_randomDS_setCommitment(queryId, sha3(bytes8(_delay), args[1], sha256(args[0]), args[2]));\r\n                                                 ^-----------------------------------------------------^\n/unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:777:50: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n        oraclize_randomDS_setCommitment(queryId, sha3(bytes8(_delay), args[1], sha256(args[0]), args[2]));\r\n                                                 ^-----------------------------------------------------^\n/unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:809:21: Warning: \"sha3\" has been deprecated in favour of \"keccak256\"\n        if (address(sha3(pubkey)) == signer) return true;\r\n                    ^----------^\n/unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:812:29: Warning: \"sha3\" has been deprecated in favour of \"keccak256\"\n            return (address(sha3(pubkey)) == signer);\r\n                            ^----------^\n/unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:827:22: Warning: Decimal literal assigned to bytesXX variable will be left-aligned. Use an explicit conversion to silence this warning.\n        tosign2[0] = 1; //role\r\n                     ^\n/unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:864:14: Warning: The type of this variable was inferred as uint8, which can hold values between 0 and 255. This is probably not desired. Use an explicit type to silence this warning.\n        for (var i=0; i<prefix.length; i++){\r\n             ^-----^\n/unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:879:20: Warning: \"sha3\" has been deprecated in favour of \"keccak256\"\n        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));\r\n                   ^-----------^\n/unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:879:42: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));\r\n                                         ^---------------------------^\n/unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:879:37: Warning: \"sha3\" has been deprecated in favour of \"keccak256\"\n        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));\r\n                                    ^---------------------------------^\n/unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:879:37: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));\r\n                                    ^---------------------------------^\n/unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:879:37: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.\n        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));\r\n                                    ^---------------------------------^\n/unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:901:48: Warning: \"sha3\" has been deprecated in favour of \"keccak256\"\n        if (oraclize_randomDS_args[queryId] == sha3(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match\r\n                                               ^---------------------------------------^\n/unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:901:48: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n        if (oraclize_randomDS_args[queryId] == sha3(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match\r\n                                               ^---------------------------------------^\n/unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:1119:17: Warning: Invoking events without \"emit\" prefix is deprecated.\n                Transfer(owner,userAddress[myid],tokenToTransfer[userAddress[myid]]);\r\n                ^------------------------------------------------------------------^\n/unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:1178:13: Warning: Invoking events without \"emit\" prefix is deprecated.\n            Transfer(msg.sender, _to, _amount);\r\n            ^--------------------------------^\n/unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:1188:13: Warning: Invoking events without \"emit\" prefix is deprecated.\n            Transfer(msg.sender, _to, _amount);\r\n            ^--------------------------------^\n/unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:1198:18: Warning: Invoking events without \"emit\" prefix is deprecated.\n                 Transfer(msg.sender, _to, _amount);\r\n                 ^--------------------------------^\n/unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:1226:13: Warning: Invoking events without \"emit\" prefix is deprecated.\n            Transfer(_from, _to, _amount);\r\n            ^---------------------------^\n/unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:1261:22: Warning: Invoking events without \"emit\" prefix is deprecated.\n                     Transfer(_from, _to, _amount);\r\n                     ^---------------------------^\n/unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:1282:9: Warning: Invoking events without \"emit\" prefix is deprecated.\n        Approval(msg.sender, _spender, _value);\r\n        ^------------------------------------^\n/unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:1338:24: Warning: Using contract member \"balance\" inherited from the address type is deprecated. Convert the contract to \"address\" type to access the member, for example use \"address(contract).balance\" instead.\n        owner.transfer(this.balance);\r\n                       ^----------^\n",
    "issues": []
  }
}