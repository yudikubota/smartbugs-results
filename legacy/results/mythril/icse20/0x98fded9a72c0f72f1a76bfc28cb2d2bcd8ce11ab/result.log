{"error": null, "issues": [{"address": 532, "code": "crowToTeamContract(_owner, _tokenIds);\n\n    uint32 _teamId =  _createTeam(_owner, _tokenIds);\n\n    emit TeamCreated(_teamId, _owner);\n\n    return _teamId;\n  }\n\n  /// @dev Upates the player tokens held by a specific team. Throws if the\n  ///   message sender does not own the team, or if the team does not\n  ///   exist. CALLED ONLY BY CONTEST CONTRACT\n  /// @param _owner - Owner of the team\n  /// @param _teamId - ID of the team we wish to update\n  /// @param _indices - Indices of playerTokens to be replaced\n  /// @param _tokenIds - Array of player token IDs that will r", "debug": "calldata_CSportsTeamGeneric_32 + 4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_CSportsTeamGeneric_0: 0x13f83c900000000000000000000000000000000000000000000000000000000\ncalldatasize_CSportsTeamGeneric: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `createTeam(address,uint32[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/36/0x98fded9a72c0f72f1a76bfc28cb2d2bcd8ce11ab.sol", "function": "createTeam(address,uint32[])", "lineno": 409, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1226, "code": "icular team.\n  /// @param _teamId ID of the team we are inquiring about\n  function getScore(uint32 _teamId) public view returns (int32) {\n    Team storage _team = teamIdToTeam[_teamId];\n    require(_team.owner != address(0));\n    return _team.score;\n  }\n\n  /// @dev Returns the place assigned to a particular team.\n  /// @param _teamId ID of the team we are inquiring about\n  function getPlace(uint32 _teamId) public view returns (uint32) {\n    Team storage _team ", "debug": "calldata_CSportsTeamGeneric_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_CSportsTeamGeneric_0: 0x317ebc7900000000000000000000000000000000000000000000000000000000\ncalldatasize_CSportsTeamGeneric: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `scoreTeams(uint32[],int32[],uint32[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/36/0x98fded9a72c0f72f1a76bfc28cb2d2bcd8ce11ab.sol", "function": "scoreTeams(uint32[],int32[],uint32[])", "lineno": 516, "title": "Integer Overflow ", "type": "Warning"}, {"address": 3977, "code": "eam\n  /// @param _teamId - ID of the team we wish to upda", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/36/0x98fded9a72c0f72f1a76bfc28cb2d2bcd8ce11ab.sol", "function": "createTeam(address,uint32[])", "lineno": 421, "title": "Message call to external contract", "type": "Informational"}, {"address": 3977, "code": "eam\n  /// @param _teamId - ID of the team we wish to upda", "debug": "", "description": "A possible transaction order independence vulnerability exists in function createTeam(address,uint32[]). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/36/0x98fded9a72c0f72f1a76bfc28cb2d2bcd8ce11ab.sol", "function": "createTeam(address,uint32[])", "lineno": 421, "title": "Transaction order dependence", "type": "Warning"}, {"address": 4789, "code": "\n    require(msg.sender == contestContractA", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/36/0x98fded9a72c0f72f1a76bfc28cb2d2bcd8ce11ab.sol", "function": "releaseTeam(uint32)", "lineno": 490, "title": "Message call to external contract", "type": "Informational"}, {"address": 4789, "code": "\n    require(msg.sender == contestContractA", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 5104\nCall at address: 4789\nCall at address: 5104\n", "filename": "/unique_chucks/36/0x98fded9a72c0f72f1a76bfc28cb2d2bcd8ce11ab.sol", "function": "releaseTeam(uint32)", "lineno": 490, "title": "Multiple Calls", "type": "Information"}, {"address": 4789, "code": "\n    require(msg.sender == contestContractA", "debug": "", "description": "A possible transaction order independence vulnerability exists in function releaseTeam(uint32). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/36/0x98fded9a72c0f72f1a76bfc28cb2d2bcd8ce11ab.sol", "function": "releaseTeam(uint32)", "lineno": 490, "title": "Transaction order dependence", "type": "Warning"}, {"address": 5104, "code": "  Team storage _team = teamIdToTeam[_teamId];\n    require(_team", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/36/0x98fded9a72c0f72f1a76bfc28cb2d2bcd8ce11ab.sol", "function": "releaseTeam(uint32)", "lineno": 492, "title": "Message call to external contract", "type": "Informational"}, {"address": 5104, "code": "  Team storage _team = teamIdToTeam[_teamId];\n    require(_team", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 5104\nCall at address: 4789\n", "filename": "/unique_chucks/36/0x98fded9a72c0f72f1a76bfc28cb2d2bcd8ce11ab.sol", "function": "releaseTeam(uint32)", "lineno": 492, "title": "Multiple Calls", "type": "Information"}, {"address": 5104, "code": "  Team storage _team = teamIdToTeam[_teamId];\n    require(_team", "debug": "", "description": "A possible transaction order independence vulnerability exists in function releaseTeam(uint32). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/36/0x98fded9a72c0f72f1a76bfc28cb2d2bcd8ce11ab.sol", "function": "releaseTeam(uint32)", "lineno": 492, "title": "Transaction order dependence", "type": "Warning"}, {"address": 5435, "code": "  require(candidateContract.isLeag", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/36/0x98fded9a72c0f72f1a76bfc28cb2d2bcd8ce11ab.sol", "function": "setCoreContractAddress(address)", "lineno": 378, "title": "Message call to external contract", "type": "Warning"}, {"address": 5566, "code": "Contract());\n    leagueRosterCon", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/36/0x98fded9a72c0f72f1a76bfc28cb2d2bcd8ce11ab.sol", "function": "setCoreContractAddress(address)", "lineno": 378, "title": "State change after external call", "type": "Warning"}, {"address": 7568, "code": "ractAddress(_core);\n    setContestContract", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/36/0x98fded9a72c0f72f1a76bfc28cb2d2bcd8ce11ab.sol", "function": "setLeagueRosterContractAddress(address)", "lineno": 385, "title": "Message call to external contract", "type": "Warning"}, {"address": 12584, "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/36/0x98fded9a72c0f72f1a76bfc28cb2d2bcd8ce11ab.sol", "function": "createTeam(address,uint32[])", "lineno": 620, "title": "State change after external call", "type": "Warning"}], "success": true}