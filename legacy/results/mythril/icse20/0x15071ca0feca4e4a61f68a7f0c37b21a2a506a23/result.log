{"error": null, "issues": [{"address": 592, "code": "rtBlock;     //Number of bl", "debug": "The exception is triggered under the following conditions:\n\nstorage_3: 0xfe00\ncalldata_TradeableToken_0: 0xc3f6acf00000000000000000000000000000000000000000000000000000000\ncalldatasize_TradeableToken: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/29/0x15071ca0feca4e4a61f68a7f0c37b21a2a506a23.sol", "function": "_function_0x0c3f6acf", "lineno": 389, "title": "Exception state", "type": "Informational"}, {"address": 898, "code": "v(MILLI_PERCENT_DIVIDER);\n            etherAmount = etherAmount.sub(fee);\n            \n            soldTokens[seller] = 0;\n            currentPeriodTokenCollected = currentPeriodTokenCollected.sub(tokenAmount);\n            if(!seller.send(etherAmount)){\n                //in this case we can only log error and let owner to handle it manually\n                DistributionError(seller, etherAmount);\n                owner.transfer(etherAmount); //assume this should not fail..., overwise - change owner\n            }\n        }\n    }\n\n    function startCollecting(uint256 _collectingEndTimestamp) onlyOwner public {\n        require(_collectingEndTimestamp > now);      //Need some time for collection\n        require(currentState == State.Distribution);    //Do not allow to change collection terms after it is started\n        require(currentPeriodEtherCollected == 0);      //All sold tokens are distributed\n        require(currentPeriodTokenCollected == 0);      //All redeemed tokens are paid\n        previousPeriodRate = currentPeriodRate;\n        currentPeriodRate = 0;\n        currentPeriodStartBlock = block.numb", "debug": "calldata_TradeableToken_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_TradeableToken_0: 0x3c0ff79100000000000000000000000000000000000000000000000000000000\ncalldatasize_TradeableToken: 0x4\n", "description": "A possible integer overflow exists in the function `distributeEther(address[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/29/0x15071ca0feca4e4a61f68a7f0c37b21a2a506a23.sol", "function": "distributeEther(address[])", "lineno": 574, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2421, "code": "  function() payable public {\n  ", "debug": "The exception is triggered under the following conditions:\n\nstorage_3: 0xfe00\ncallvalue: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldatasize_TradeableToken: 0x3\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/29/0x15071ca0feca4e4a61f68a7f0c37b21a2a506a23.sol", "function": "fallback", "lineno": 420, "title": "Exception state", "type": "Informational"}, {"address": 3666, "code": "           soldTokens[seller] = 0;", "debug": "The exception is triggered under the following conditions:\n\nstorage_3: 0xfe00\ncaller: 0xfe\ncalldata_TradeableToken_0: 0x3c0ff79100000000000000000000000000000000000000000000000000000000\ncalldatasize_TradeableToken: 0x4\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/29/0x15071ca0feca4e4a61f68a7f0c37b21a2a506a23.sol", "function": "distributeEther(address[])", "lineno": 577, "title": "Exception state", "type": "Informational"}, {"address": 5419, "code": "b(fee);\n            \n            r", "debug": "The exception is triggered under the following conditions:\n\nstorage_3: 0xfe00\ncaller: 0xfe\ncalldata_TradeableToken_0: 0x8895135200000000000000000000000000000000000000000000000000000000\ncalldatasize_TradeableToken: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/29/0x15071ca0feca4e4a61f68a7f0c37b21a2a506a23.sol", "function": "distributeTokens(address[])", "lineno": 549, "title": "Exception state", "type": "Informational"}, {"address": 8289, "code": " retu", "debug": "calldata_TradeableToken_32 + 36: 0xfe51000008ce80008001c1d33616877ffffffffffffff7ffffe10000398d50ac\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TradeableToken_32_+_4: 0xc050fffff320c00020003d81af848540000000000000040000110001bd062022\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xfe51000008ce80008001c1d33616877ffffffffffffff7ffffe10000398d50ac\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TradeableToken_4: 0xfe51000008ce80008001c1d33616877ffffffffffffff7ffffe10000398d50ac\ncalldata_TradeableToken_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_TradeableToken_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_TradeableToken: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `transferFrom(address,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/29/0x15071ca0feca4e4a61f68a7f0c37b21a2a506a23.sol", "function": "transferFrom(address,address,uint256)", "lineno": 33, "title": "Integer Overflow ", "type": "Warning"}, {"address": 8302, "code": " }\n}\n\n/**\n * @", "debug": "The exception is triggered under the following conditions:\n\ncalldata_TradeableToken_32 + 36: 0x53632f08ddbb360427befb69cb0d577a76825c1eb02b4cefbf971939ae256117\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TradeableToken_32_+_4: 0xd32ba62e013a1e544c40f8298f8c838ef0ca495e903244487f8ba1f8c2a013e7\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x53632f08ddbb360427befb69cb0d577a76825c1eb02b4cefbf971939ae256117\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TradeableToken_4: 0x53632f08ddbb360427befb69cb0d577a76825c1eb02b4cefbf971939ae256117\ncalldata_TradeableToken_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_TradeableToken_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_TradeableToken: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/29/0x15071ca0feca4e4a61f68a7f0c37b21a2a506a23.sol", "function": "transferFrom(address,address,uint256)", "lineno": 34, "title": "Exception state", "type": "Informational"}, {"address": 8378, "code": "  function() payable public {\n  ", "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\nstorage_3: 0xfe00\ncalldata_TradeableToken_32 + 36: 0x0\ncalldata_TradeableToken_32 + 4: 0x0\ncalldata_TradeableToken_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_TradeableToken: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/29/0x15071ca0feca4e4a61f68a7f0c37b21a2a506a23.sol", "function": "transferFrom(address,address,uint256)", "lineno": 420, "title": "Exception state", "type": "Informational"}], "success": true}