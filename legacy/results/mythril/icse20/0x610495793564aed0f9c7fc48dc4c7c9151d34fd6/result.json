{
  "contract": "0x610495793564aed0f9c7fc48dc4c7c9151d34fd6",
  "tool": "mythril",
  "start": 1563662688.0095136,
  "end": 1563662716.5611937,
  "duration": 28.551680088043213,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 122,
        "code": "++;\n    }\n    \n",
        "debug": "storage_1: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_SimpleWallet_0: 0x100000000000000000000000000000000000000000000000000000000\ncalldatasize_SimpleWallet: 0x4\n",
        "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/33/0x610495793564aed0f9c7fc48dc4c7c9151d34fd6.sol",
        "function": "fallback",
        "lineno": 14,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 403,
        "code": "ss _target, uint _value, bytes _data) public onlyOwner {\n        _target.call.value(_value)(_data);\n    }\n}",
        "debug": "calldata_SimpleWallet_32 + 36: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_SimpleWallet_0: 0xf802504900000000000000000000000000000000000000000000000000000000\ncalldatasize_SimpleWallet: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `sendMoney(address,uint256,bytes)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/33/0x610495793564aed0f9c7fc48dc4c7c9151d34fd6.sol",
        "function": "sendMoney(address,uint256,bytes)",
        "lineno": 25,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1030,
        "code": ")(_data);\n    }\n}",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/33/0x610495793564aed0f9c7fc48dc4c7c9151d34fd6.sol",
        "function": "sendMoney(address,uint256,bytes)",
        "lineno": 26,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 1030,
        "code": ")(_data);\n    }\n}",
        "debug": "",
        "description": "The return value of an external call is not checked. Note that execution continue even if the called contract throws.",
        "filename": "/unique_chucks/33/0x610495793564aed0f9c7fc48dc4c7c9151d34fd6.sol",
        "function": "sendMoney(address,uint256,bytes)",
        "lineno": 26,
        "title": "Unchecked CALL return value",
        "type": "Informational"
      }
    ],
    "success": true
  }
}