{"error": null, "issues": [{"address": 397, "code": ";\n\n\ncontract FastP", "debug": "callvalue: 0xa0000\nstorage_0: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ngas: 0x35b60\ncalldata_FastProfit_0: 0x0\ncalldatasize_FastProfit: 0x4\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/9/0x243ce58ad1d2996399b0c110f013901d2f50243f.sol", "function": "fallback", "lineno": 1, "title": "Integer Overflow ", "type": "Warning"}, {"address": 719, "code": "   //Pay to first inv", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2039\nCall at address: 1731\n", "filename": "/unique_chucks/9/0x243ce58ad1d2996399b0c110f013901d2f50243f.sol", "function": "fallback", "lineno": 36, "title": "Multiple Calls", "type": "Information"}, {"address": 1503, "code": "          ", "debug": "The exception is triggered under the following conditions:\n\ncallvalue: 0x800000000000000\nstorage_0: 0x0\nstorage_1: 0x1\nretval_719: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ngas: 0x35b60\ncalldata_FastProfit_0: 0x300000000000000000000000000000000000000000000000000000000\ncalldatasize_FastProfit: 0x4\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/9/0x243ce58ad1d2996399b0c110f013901d2f50243f.sol", "function": "fallback", "lineno": 55, "title": "Exception state", "type": "Informational"}, {"address": 1731, "code": "\n                money -= dep.expe", "debug": "SOLVER OUTPUT:\ncallvalue: 0x800000000000000\nstorage_0: 0x0\nbalance_at_1461501637330902918203684832716283019655932542975 & 0: 0x0\nstorage_1 +\n18569430475105882587588266137607568536673111973893317399460219858819262702947 +\n2*storage_1: 0x0\nstorage_1: 0x0\nretval_719: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ngas: 0x35b60\ncalldata_FastProfit_0: 0x300000000000000000000000000000000000000000000000000000000\ncalldatasize_FastProfit: 0x4\n", "description": "In the function `fallback` a non-zero amount of Ether is sent to an address taken from storage slot 0.\nThere is a check on storage index 0. This storage slot can be written to by calling the function `fallback`.\n\nThere is a check on storage index 0. This storage slot can be written to by calling the function `fallback`.\nThere is a check on storage index 1. This storage slot can be written to by calling the function `fallback`.\nThere is a check on storage index 1. This storage slot can be written to by calling the function `fallback`.", "filename": "/unique_chucks/9/0x243ce58ad1d2996399b0c110f013901d2f50243f.sol", "function": "fallback", "lineno": 56, "title": "Ether send", "type": "Warning"}, {"address": 1731, "code": "\n                money -= dep.expe", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2039\nCall at address: 1731\n", "filename": "/unique_chucks/9/0x243ce58ad1d2996399b0c110f013901d2f50243f.sol", "function": "fallback", "lineno": 56, "title": "Multiple Calls", "type": "Information"}, {"address": 1731, "code": "\n                money -= dep.expe", "debug": "", "description": "A possible transaction order independence vulnerability exists in function fallback. The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/9/0x243ce58ad1d2996399b0c110f013901d2f50243f.sol", "function": "fallback", "lineno": 56, "title": "Transaction order dependence", "type": "Warning"}, {"address": 2039, "code": "e\n                dep.expect ", "debug": "SOLVER OUTPUT:\ncallvalue: 0x800000000000000\nstorage_0: 0x0\nbalance_at_1461501637330902918203684832716283019655932542975 & 0: 0x0\nstorage_1 +\n18569430475105882587588266137607568536673111973893317399460219858819262702947 +\n2*storage_1: 0x100\nstorage_1: 0x0\nretval_719: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ngas: 0x35b60\ncalldata_FastProfit_0: 0x300000000000000000000000000000000000000000000000000000000\ncalldatasize_FastProfit: 0x4\n", "description": "In the function `fallback` a non-zero amount of Ether is sent to an address taken from storage slot 0.\nThere is a check on storage index 0. This storage slot can be written to by calling the function `fallback`.\n\nThere is a check on storage index 0. This storage slot can be written to by calling the function `fallback`.\nThere is a check on storage index 1. This storage slot can be written to by calling the function `fallback`.\nThere is a check on storage index 1. This storage slot can be written to by calling the function `fallback`.", "filename": "/unique_chucks/9/0x243ce58ad1d2996399b0c110f013901d2f50243f.sol", "function": "fallback", "lineno": 63, "title": "Ether send", "type": "Warning"}, {"address": 2039, "code": "e\n                dep.expect ", "debug": "", "description": "A possible transaction order independence vulnerability exists in function fallback. The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/9/0x243ce58ad1d2996399b0c110f013901d2f50243f.sol", "function": "fallback", "lineno": 63, "title": "Transaction order dependence", "type": "Warning"}, {"address": 2100, "code": "         break;    ", "debug": "callvalue: 0x4cf214209e81000\nstorage_0: 0x0\nbalance_at_1461501637330902918203684832716283019655932542975 & 0: 0x800201ac3fffffb3c2822e908000bb2a9b1\nretval_2039: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_1 +\n18569430475105882587588266137607568536673111973893317399460219858819262702947 +\n2*storage_1: 0x80201ccf66db1914210200000769956800\nstorage_1: 0x0\nretval_719: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ngas: 0x35b60\ncalldata_FastProfit_0: 0x300000000000000000000000000000000000000000000000000000000\ncalldatasize_FastProfit: 0x4\n", "description": "A possible integer underflow exists in the function `fallback`.\nThe subtraction may result in a value < 0.", "filename": "/unique_chucks/9/0x243ce58ad1d2996399b0c110f013901d2f50243f.sol", "function": "fallback", "lineno": 65, "title": "Integer Underflow", "type": "Warning"}, {"address": 2823, "code": "   //Get t", "debug": "The exception is triggered under the following conditions:\n\ncalldata_FastProfit_4: 0x0\nstorage_0: 0x0\ncalldata_FastProfit_0: 0x9f9fb96800000000000000000000000000000000000000000000000000000000\ncalldatasize_FastProfit: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/9/0x243ce58ad1d2996399b0c110f013901d2f50243f.sol", "function": "getDeposit(uint256)", "lineno": 82, "title": "Exception state", "type": "Informational"}], "success": true}