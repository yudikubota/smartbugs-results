{
  "contract": "0xe5221f29861508d7556249f19924effe391db237",
  "tool": "mythril",
  "start": 1563809781.435939,
  "end": 1563809846.4301775,
  "duration": 64.99423837661743,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 428,
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncallvalue: 0x57f25cd000000000000000000000000000000000000000000000000000000000\nbalance_at_1461501637330902918203684832716283019655932542975 & 0: 0x0\nstorage_9: 0x1\nstorage_4: 0x0\nstorage_6: 0x0\ncalldatasize_EnjinBuyer: 0x3\n",
        "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/32/0xe5221f29861508d7556249f19924effe391db237.sol",
        "function": "fallback",
        "lineno": 188,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1175,
        "code": "ill switch if the sender is the developer or the password is correct.\n    require(msg.sender == developer || sha3(password) == password_hash);\n    // Store the claimed bounty in a temporary variable.\n    uint256 claimed_bounty = buy_bounty;\n    // Update bounty prior to sending to prevent recursive call.\n    buy_bounty = 0;\n    // Irreversibly activate the kill switch.\n    kill_switch = true;\n    // Send the caller their bounty for activating the kill switch.\n    msg.sender.transfer(claimed_bounty);\n  }\n  \n  // Withdraws all ETH deposited or tokens purchased by the given user and rewards",
        "debug": "calldata_EnjinBuyer_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_EnjinBuyer_0: 0xd4701c3500000000000000000000000000000000000000000000000000000000\ncalldatasize_EnjinBuyer: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `activate_kill_switch(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/32/0xe5221f29861508d7556249f19924effe391db237.sol",
        "function": "activate_kill_switch(string)",
        "lineno": 77,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1709,
        "code": "rted yet or has\n    // already c",
        "debug": "storage_3: 0x57f25cd000000000000000000000000000000000000000000000000000000000\nstorage_2: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ntimestamp: 0x0\nbalance_at_1461501637330902918203684832716283019655932542975 & 0: 0x0\nstorage_11: 0xffffffffffffffffffffffffffffffffffffffff00\nstorage_6: 0x0\nstorage_8: 0x0\nstorage_4: 0x0\nstorage_0: 0x0\ncalldata_EnjinBuyer_0: 0x2f5801500000000000000000000000000000000000000000000000000000000\ncalldatasize_EnjinBuyer: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `claim_bounty()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/32/0xe5221f29861508d7556249f19924effe391db237.sol",
        "function": "claim_bounty()",
        "lineno": 170,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1734,
        "code": "dsale hasn't started yet or has\n    // already co",
        "debug": "balance_at_1461501637330902918203684832716283019655932542975 & 0: 0x0\ntimestamp: 0x0\nstorage_3: 0x0\nstorage_2: 0x1\nstorage_11: 0xffffffffffffffffffffffffffffffffffffffff00\nstorage_6: 0x0\nstorage_8: 0x0\nstorage_4: 0x0\nstorage_0: 0x0\ncalldata_EnjinBuyer_0: 0x2f5801500000000000000000000000000000000000000000000000000000000\ncalldatasize_EnjinBuyer: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer underflow exists in the function `claim_bounty()`.\nThe subtraction may result in a value < 0.",
        "filename": "/unique_chucks/32/0xe5221f29861508d7556249f19924effe391db237.sol",
        "function": "claim_bounty()",
        "lineno": 170,
        "title": "Integer Underflow",
        "type": "Warning"
      },
      {
        "address": 1816,
        "code": "t function.  Called when a user sends",
        "debug": "",
        "description": "In the function `claim_bounty()` the following predictable state variables are used to determine Ether recipient:\n- block.timestamp\n",
        "filename": "/unique_chucks/32/0xe5221f29861508d7556249f19924effe391db237.sol",
        "function": "claim_bounty()",
        "lineno": 177,
        "title": "Dependence on predictable environment variable",
        "type": "Warning"
      },
      {
        "address": 1816,
        "code": "t function.  Called when a user sends",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/32/0xe5221f29861508d7556249f19924effe391db237.sol",
        "function": "claim_bounty()",
        "lineno": 177,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 1816,
        "code": "t function.  Called when a user sends",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1879\n",
        "filename": "/unique_chucks/32/0xe5221f29861508d7556249f19924effe391db237.sol",
        "function": "claim_bounty()",
        "lineno": 177,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 1816,
        "code": "t function.  Called when a user sends",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function claim_bounty(). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/32/0xe5221f29861508d7556249f19924effe391db237.sol",
        "function": "claim_bounty()",
        "lineno": 177,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 1879,
        "code": "itch is active.\n    require(!kill_s",
        "debug": "",
        "description": "In the function `claim_bounty()` the following predictable state variables are used to determine Ether recipient:\n- block.timestamp\n",
        "filename": "/unique_chucks/32/0xe5221f29861508d7556249f19924effe391db237.sol",
        "function": "claim_bounty()",
        "lineno": 179,
        "title": "Dependence on predictable environment variable",
        "type": "Warning"
      },
      {
        "address": 2037,
        "code": "   // If we don't have eth_m",
        "debug": "storage_3: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncallvalue: 0x57f25cd000000000000000000000000000000000000000000000000000000000\nstorage_10: 0x0\ncaller: 0x0\ncalldata_EnjinBuyer_0: 0x36bee17800000000000000000000000000000000000000000000000000000000\ncalldatasize_EnjinBuyer: 0x4\n",
        "description": "A possible integer overflow exists in the function `add_to_withdraw_bounty()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/32/0xe5221f29861508d7556249f19924effe391db237.sol",
        "function": "add_to_withdraw_bounty()",
        "lineno": 149,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2539,
        "code": " them.\n    else {\n      // Ret",
        "debug": "",
        "description": "In the function `withdraw(address)` the following predictable state variables are used to determine Ether recipient:\n- block.timestamp\n",
        "filename": "/unique_chucks/32/0xe5221f29861508d7556249f19924effe391db237.sol",
        "function": "withdraw(address)",
        "lineno": 104,
        "title": "Dependence on predictable environment variable",
        "type": "Warning"
      },
      {
        "address": 2539,
        "code": " them.\n    else {\n      // Ret",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3428\n",
        "filename": "/unique_chucks/32/0xe5221f29861508d7556249f19924effe391db237.sol",
        "function": "withdraw(address)",
        "lineno": 104,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 2759,
        "code": "    require(contract_token_bal",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/32/0xe5221f29861508d7556249f19924effe391db237.sol",
        "function": "withdraw(address)",
        "lineno": 109,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 2759,
        "code": "    require(contract_token_bal",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3279\n",
        "filename": "/unique_chucks/32/0xe5221f29861508d7556249f19924effe391db237.sol",
        "function": "withdraw(address)",
        "lineno": 109,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 2759,
        "code": "    require(contract_token_bal",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function withdraw(address). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/32/0xe5221f29861508d7556249f19924effe391db237.sol",
        "function": "withdraw(address)",
        "lineno": 109,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 2910,
        "code": "held by the contract.\n      contract_eth_value -= balances[use",
        "debug": "The exception is triggered under the following conditions:\n\nreturndatasize: 0x20\nretval_2759: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_EnjinBuyer_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_4: 0xff00\ncalldata_EnjinBuyer_0: 0x51cff8d900000000000000000000000000000000000000000000000000000000\ncalldatasize_EnjinBuyer: 0x4\nstorage_5: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/32/0xe5221f29861508d7556249f19924effe391db237.sol",
        "function": "withdraw(address)",
        "lineno": 112,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2986,
        "code": "all.\n      balances[user] = 0;\n     ",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_EnjinBuyer_4: 0x100000000000000000000000000000000000000000000\nstorage_5: 0xfffffffffffffffffffffffffffffffffffffffffffe\nreturndatasize: 0x20\nretval_2759: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_4: 0xff00\ncalldata_EnjinBuyer_0: 0x51cff8d900000000000000000000000000000000000000000000000000000000\ncalldatasize_EnjinBuyer: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer underflow exists in the function `withdraw(address)`.\nThe subtraction may result in a value < 0.",
        "filename": "/unique_chucks/32/0xe5221f29861508d7556249f19924effe391db237.sol",
        "function": "withdraw(address)",
        "lineno": 114,
        "title": "Integer Underflow",
        "type": "Warning"
      },
      {
        "address": 2992,
        "code": "all.\n      balances[user] = 0;\n     ",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/32/0xe5221f29861508d7556249f19924effe391db237.sol",
        "function": "withdraw(address)",
        "lineno": 114,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 3061,
        "code": " / 100;\n      // S",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/32/0xe5221f29861508d7556249f19924effe391db237.sol",
        "function": "withdraw(address)",
        "lineno": 117,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 3279,
        "code": ".\n    uint256 claimed_bounty = withdraw_bounty",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/32/0xe5221f29861508d7556249f19924effe391db237.sol",
        "function": "withdraw(address)",
        "lineno": 123,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 3279,
        "code": ".\n    uint256 claimed_bounty = withdraw_bounty",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function withdraw(address). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/32/0xe5221f29861508d7556249f19924effe391db237.sol",
        "function": "withdraw(address)",
        "lineno": 123,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 3428,
        "code": "_bounty() payable {\n    // Only all",
        "debug": "",
        "description": "In the function `withdraw(address)` the following predictable state variables are used to determine Ether recipient:\n- block.timestamp\n",
        "filename": "/unique_chucks/32/0xe5221f29861508d7556249f19924effe391db237.sol",
        "function": "withdraw(address)",
        "lineno": 132,
        "title": "Dependence on predictable environment variable",
        "type": "Warning"
      },
      {
        "address": 3618,
        "code": "payable {\n    // Only a",
        "debug": "storage_2: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncallvalue: 0x57f25cd000000000000000000000000000000000000000000000000000000000\nstorage_10: 0x0\ncaller: 0x0\ncalldata_EnjinBuyer_0: 0x88a89dd000000000000000000000000000000000000000000000000000000000\ncalldatasize_EnjinBuyer: 0x4\n",
        "description": "A possible integer overflow exists in the function `add_to_buy_bounty()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/32/0xe5221f29861508d7556249f19924effe391db237.sol",
        "function": "add_to_buy_bounty()",
        "lineno": 140,
        "title": "Integer Overflow ",
        "type": "Warning"
      }
    ],
    "success": true
  }
}