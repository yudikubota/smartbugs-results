{
  "contract": "0x6f5e7f39f96b882490643228a725a179f04feba5",
  "tool": "mythril",
  "start": 1563660487.9367836,
  "end": 1563660590.091353,
  "duration": 102.15456938743591,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 349,
        "code": "en(msg.sender, amount);\n    }",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 572\n",
        "filename": "/unique_chucks/33/0x6f5e7f39f96b882490643228a725a179f04feba5.sol",
        "function": "fallback",
        "lineno": 54,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 349,
        "code": "en(msg.sender, amount);\n    }",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function fallback. The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/33/0x6f5e7f39f96b882490643228a725a179f04feba5.sol",
        "function": "fallback",
        "lineno": 54,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 572,
        "code": "ion contribute() external payable {",
        "debug": "",
        "description": "This contract executes a message call to an address found at storage slot 3. This storage slot can be written to by calling the function `setup(address)`. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/33/0x6f5e7f39f96b882490643228a725a179f04feba5.sol",
        "function": "fallback",
        "lineno": 57,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 572,
        "code": "ion contribute() external payable {",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function fallback. The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/33/0x6f5e7f39f96b882490643228a725a179f04feba5.sol",
        "function": "fallback",
        "lineno": 57,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 1819,
        "code": "er, amount);\n    }\n\n    funct",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2042\n",
        "filename": "/unique_chucks/33/0x6f5e7f39f96b882490643228a725a179f04feba5.sol",
        "function": "contribute()",
        "lineno": 65,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 1819,
        "code": "er, amount);\n    }\n\n    funct",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function contribute(). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/33/0x6f5e7f39f96b882490643228a725a179f04feba5.sol",
        "function": "contribute()",
        "lineno": 65,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 2042,
        "code": "ate(uint256 rate) external {\n      ",
        "debug": "",
        "description": "This contract executes a message call to an address found at storage slot 3. This storage slot can be written to by calling the function `setup(address)`. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/33/0x6f5e7f39f96b882490643228a725a179f04feba5.sol",
        "function": "contribute()",
        "lineno": 68,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 2042,
        "code": "ate(uint256 rate) external {\n      ",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function contribute(). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/33/0x6f5e7f39f96b882490643228a725a179f04feba5.sol",
        "function": "contribute()",
        "lineno": 68,
        "title": "Transaction order dependence",
        "type": "Warning"
      }
    ],
    "success": true
  }
}