{"error": null, "issues": [{"address": 1325, "code": "quire(_spender != address(this));\n        super.approve(_spender, _value);\n        // solium-disable-next-line security/no-call-value\n        require(_spender.call.value(msg.value)(_data));\n        return true;\n    }\n}", "debug": "calldata_StudToken_32 + 36: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_StudToken_0: 0xcae9ca5100000000000000000000000000000000000000000000000000000000\ncalldatasize_StudToken: 0x4\n", "description": "A possible integer overflow exists in the function `approveAndCall(address,uint256,bytes)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/18/0xb7318cb13c10e44f38d4f0ded5f875c64f878f58.sol", "function": "approveAndCall(address,uint256,bytes)", "lineno": 115, "title": "Integer Overflow ", "type": "Warning"}, {"address": 4498, "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/18/0xb7318cb13c10e44f38d4f0ded5f875c64f878f58.sol", "function": "approveAndCall(address,uint256,bytes)", "lineno": 121, "title": "Message call to external contract", "type": "Warning"}, {"address": 5197, "code": "n c;\n", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_StudToken_4: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncalldata_StudToken_32 + 4: 0x57f25cd000000000000000000000000000000000000000000000000000000000\ncalldata_StudToken_0: 0xd73dd62300000000000000000000000000000000000000000000000000000000\ncalldatasize_StudToken: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `increaseApproval(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/18/0xb7318cb13c10e44f38d4f0ded5f875c64f878f58.sol", "function": "increaseApproval(address,uint256)", "lineno": 39, "title": "Integer Overflow ", "type": "Warning"}, {"address": 5210, "code": "contract Basic", "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_StudToken_4: 0x1\ncalldata_StudToken_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_StudToken_0: 0xd73dd62300000000000000000000000000000000000000000000000000000000\ncalldatasize_StudToken: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/18/0xb7318cb13c10e44f38d4f0ded5f875c64f878f58.sol", "function": "increaseApproval(address,uint256)", "lineno": 43, "title": "Exception state", "type": "Informational"}], "success": true}