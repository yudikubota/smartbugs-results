{"error": null, "issues": [{"address": 963, "code": "ire(balances[this] >= data.length*amount); //The contract must hold the needed tokens\n        for (uint i=0; i<data.length; i++) { //It moves over the array\n            address target = data[i]; //Take an address\n            balances[target] = SafeMath.add(balances[target], amount); //Add an amount to the target address\n            balances[this] = SafeMath.sub(balances[this], amount); //Sub that amount from the contract\n            allowed[this][msg.sender] = SafeMath.sub(allowed[this][msg.sender], amount); //Sub allowance from the contract creator over the contract\n            Transfer(this, target, amount); //log every transfer\n        }\n    }\n\n    //Events to log transactions\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\n    event Approval", "debug": "calldata_admined_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_admined_0: 0x9333189200000000000000000000000000000000000000000000000000000000\ncalldatasize_admined: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `batch(address[],uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/45/0x5951924bb16e69bfe272491202ff3597a456af25.sol", "function": "batch(address[],uint256)", "lineno": 126, "title": "Integer Overflow ", "type": "Warning"}, {"address": 6032, "code": "(now,mins);\n        Set", "debug": "calldata_admined_4: 0x40244488888888888888888888888888888888888888b6aab5064c425c066c6a\nstorage_0: 0x0\ncaller: 0x0\ncalldata_admined_0: 0xd3e1574700000000000000000000000000000000000000000000000000000000\ncalldatasize_admined: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `setLock(uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/45/0x5951924bb16e69bfe272491202ff3597a456af25.sol", "function": "setLock(uint256)", "lineno": 63, "title": "Integer Overflow ", "type": "Warning"}, {"address": 6289, "code": " >= a", "debug": "timestamp: 0xaa13de700fcd20804210726ac3c2ba104f09dd7103dffffe8701800400002408\ncalldata_admined_4: 0xc72b8a269213b155232148d4a8a0834860391348642a81137c01aaa9aaaa9a8\nstorage_0: 0x0\ncaller: 0x0\ncalldata_admined_0: 0xd3e1574700000000000000000000000000000000000000000000000000000000\ncalldatasize_admined: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `setLock(uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/45/0x5951924bb16e69bfe272491202ff3597a456af25.sol", "function": "setLock(uint256)", "lineno": 25, "title": "Integer Overflow ", "type": "Warning"}, {"address": 6302, "code": "return c;\n    ", "debug": "The exception is triggered under the following conditions:\n\ntimestamp: 0x9c240610e96671ee140fe381090d40c4d9387c6bc3cbbe7e8a8c001fc1a1ee40\ncalldata_admined_4: 0x247c4b1bb654d7c0704223029b5b7520d5467abd1a954164a6351866243aa2a0\nstorage_0: 0x0\ncaller: 0x0\ncalldata_admined_0: 0xd3e1574700000000000000000000000000000000000000000000000000000000\ncalldatasize_admined: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/45/0x5951924bb16e69bfe272491202ff3597a456af25.sol", "function": "setLock(uint256)", "lineno": 26, "title": "Exception state", "type": "Informational"}, {"address": 6326, "code": "      return a", "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_admined_4: 0x0\nstorage_1: 0x0\ncalldata_admined_32 + 4: 0x1\nstorage_2: 0x0\ntimestamp: 0x0\nstorage_0: 0x0\ncaller: 0x0\ncalldata_admined_0: 0xd1df306c00000000000000000000000000000000000000000000000000000000\ncalldatasize_admined: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/45/0x5951924bb16e69bfe272491202ff3597a456af25.sol", "function": "burnToken(address,uint256)", "lineno": 20, "title": "Exception state", "type": "Informational"}], "success": true}