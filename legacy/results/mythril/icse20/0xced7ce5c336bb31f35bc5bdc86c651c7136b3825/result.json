{
  "contract": "0xced7ce5c336bb31f35bc5bdc86c651c7136b3825",
  "tool": "mythril",
  "start": 1563265700.1362267,
  "end": 1563265762.4587026,
  "duration": 62.32247591018677,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 1601,
        "code": "kHash) public view returns (bytes32) {\n        return superblocks[_superblockHash].blocksMerkleRoot;\n    }\n\n    // @dev - Return superblock timestamp\n    function getSuperblockTimestamp(bytes32 _superblockHash) public view returns (uint) {\n        return superblocks[_superblockHash].timestamp;\n    }\n\n    // @dev - Return superblock prevTimestamp\n    function getSuperblockPrevTimestamp(bytes32 _superblockHash) public view returns (uint) {\n        return superblocks[_superblockHash].prevTimestamp;\n    }\n\n    // @dev - Return superblock last block hash\n    function getSuperblockLastHash(bytes32 _superblockHash) public view returns (bytes32) {\n        return superblocks[_superblockHash].lastHash;\n    }\n\n    // @dev - Return superblock parent\n    function getSuperblockParentId(bytes32 _superblockHash) public view returns (bytes32) {\n",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_8 +\nkeccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\ncalldata_SyscoinTransactionProcessor_4: 0x8000\ncalldata_SyscoinTransactionProcessor_0: 0x6e5b707100000000000000000000000000000000000000000000000000000000\ncalldatasize_SyscoinTransactionProcessor: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0xced7ce5c336bb31f35bc5bdc86c651c7136b3825.sol",
        "function": "getSuperblock(bytes32)",
        "lineno": 1544,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 4570,
        "code": "attle && superblock.status != Status",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_8 +\nkeccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\ncalldata_SyscoinTransactionProcessor_4: 0x8000\nstorage_6: 0x0\ncaller: 0x0\ncalldata_SyscoinTransactionProcessor_0: 0x27426f7500000000000000000000000000000000000000000000000000000000\ncalldatasize_SyscoinTransactionProcessor: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0xced7ce5c336bb31f35bc5bdc86c651c7136b3825.sol",
        "function": "semiApprove(bytes32,address)",
        "lineno": 1294,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 5081,
        "code": "STEP;\n            ++i;\n        }\n        return ancesto",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_8 +\nkeccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\ncalldata_SyscoinTransactionProcessor_4: 0x8000\ncalldata_SyscoinTransactionProcessor_0: 0x48aefc3200000000000000000000000000000000000000000000000000000000\ncalldatasize_SyscoinTransactionProcessor: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0xced7ce5c336bb31f35bc5bdc86c651c7136b3825.sol",
        "function": "isApproved(bytes32)",
        "lineno": 1626,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 5719,
        "code": " @param _untrustedTargetContract - t",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_8 +\nkeccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\ncalldata_SyscoinTransactionProcessor_4: 0x8000\nstorage_6: 0x0\ncaller: 0x0\ncalldata_SyscoinTransactionProcessor_0: 0x7420578600000000000000000000000000000000000000000000000000000000\ncalldatasize_SyscoinTransactionProcessor: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0xced7ce5c336bb31f35bc5bdc86c651c7136b3825.sol",
        "function": "invalidate(bytes32,address)",
        "lineno": 1317,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}