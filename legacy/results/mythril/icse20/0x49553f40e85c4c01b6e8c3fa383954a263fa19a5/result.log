{"error": null, "issues": [{"address": 565, "code": "rozenAccounts(from), \"from address is frozen.\");\n        return super.transferFrom(from, to, value);\n    }\n\n    /// @notice Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\n    ///         Beware that changing an allowance with this method brings the risk that someone may use both the old\n    ///         and the new allowance by un", "debug": "calldata_Xcoin_32 + 36: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_Xcoin_0: 0x7560f1300000000000000000000000000000000000000000000000000000000\ncalldatasize_Xcoin: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `transferWithMessage(address,uint256,bytes)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/24/0x49553f40e85c4c01b6e8c3fa383954a263fa19a5.sol", "function": "transferWithMessage(address,uint256,bytes)", "lineno": 831, "title": "Integer Overflow ", "type": "Warning"}, {"address": 838, "code": "       emit FrozenFunds(targets[i], false);\n        }\n    }\n\n    /// @notice transfer token. If msg.sender is frozen, this function will be reverted.\n    /// @param to Target address to transfer token.\n    /// @param value Amount of token msg.sender wants to transfer.\n    /// @return true if execution works correctly.\n    function transfer(address to, uint256 value) ", "debug": "calldata_Xcoin_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_Xcoin_0: 0x1d38fcda00000000000000000000000000000000000000000000000000000000\ncalldatasize_Xcoin: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `freeze(address[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/24/0x49553f40e85c4c01b6e8c3fa383954a263fa19a5.sol", "function": "freeze(address[])", "lineno": 792, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2944, "code": "  return _frozenAccou", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/24/0x49553f40e85c4c01b6e8c3fa383954a263fa19a5.sol", "function": "transferWithMessage(address,uint256,bytes)", "lineno": 748, "title": "Message call to external contract", "type": "Informational"}, {"address": 3765, "code": "  return _frozenAccou", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/24/0x49553f40e85c4c01b6e8c3fa383954a263fa19a5.sol", "function": "approve(address,uint256)", "lineno": 748, "title": "Message call to external contract", "type": "Informational"}, {"address": 4711, "code": "  return _frozenAccou", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/24/0x49553f40e85c4c01b6e8c3fa383954a263fa19a5.sol", "function": "transferFrom(address,address,uint256)", "lineno": 748, "title": "Message call to external contract", "type": "Informational"}, {"address": 5220, "code": "  return _frozenAccou", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/24/0x49553f40e85c4c01b6e8c3fa383954a263fa19a5.sol", "function": "increaseAllowance(address,uint256)", "lineno": 748, "title": "Message call to external contract", "type": "Informational"}, {"address": 5736, "code": "  return _frozenAccou", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/24/0x49553f40e85c4c01b6e8c3fa383954a263fa19a5.sol", "function": "burn(uint256)", "lineno": 748, "title": "Message call to external contract", "type": "Informational"}, {"address": 5736, "code": "  return _frozenAccou", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 6101\n", "filename": "/unique_chucks/24/0x49553f40e85c4c01b6e8c3fa383954a263fa19a5.sol", "function": "burn(uint256)", "lineno": 748, "title": "Multiple Calls", "type": "Information"}, {"address": 6101, "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/24/0x49553f40e85c4c01b6e8c3fa383954a263fa19a5.sol", "function": "burn(uint256)", "lineno": 896, "title": "Message call to external contract", "type": "Informational"}, {"address": 10181, "code": "to another\n     * @param from address", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/24/0x49553f40e85c4c01b6e8c3fa383954a263fa19a5.sol", "function": "approve(address,uint256)", "lineno": 178, "title": "State change after external call", "type": "Warning"}, {"address": 11300, "code": "ivide", "debug": "storage_2: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncalldata_Xcoin_32 + 4: 0x57f25cd000000000000000000000000000000000000000000000000000000000\ncalldata_Xcoin_4: 0xffffffffffffffffffffffffffffffffffffffff\nstorage_3: 0x0\ncaller: 0x0\ncalldata_Xcoin_0: 0x40c10f1900000000000000000000000000000000000000000000000000000000\ncalldatasize_Xcoin: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `mint(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/24/0x49553f40e85c4c01b6e8c3fa383954a263fa19a5.sol", "function": "mint(address,uint256)", "lineno": 86, "title": "Integer Overflow ", "type": "Warning"}, {"address": 12210, "code": "s encapsulates the modification of balances ", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/24/0x49553f40e85c4c01b6e8c3fa383954a263fa19a5.sol", "function": "transferWithMessage(address,uint256,bytes)", "lineno": 263, "title": "State change after external call", "type": "Warning"}], "success": true}