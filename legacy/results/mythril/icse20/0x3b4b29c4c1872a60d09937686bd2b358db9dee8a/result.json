{
  "contract": "0x3b4b29c4c1872a60d09937686bd2b358db9dee8a",
  "tool": "mythril",
  "start": 1563482852.2177556,
  "end": 1563482965.692206,
  "duration": 113.47445034980774,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 3686,
        "code": "\n    ",
        "debug": "callvalue: 0xdbc34317c1c2096b6016ffe065646bcddd5ed8e2017c1a3e5875f20a07ff6803\ncalldatasize_TeacherCoin: 0x3\n",
        "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/4/0x3b4b29c4c1872a60d09937686bd2b358db9dee8a.sol",
        "function": "fallback",
        "lineno": 32,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 3709,
        "code": "c;\n  }\n\n  /**\n  * ",
        "debug": "The exception is triggered under the following conditions:\n\ncallvalue: 0x910000000000000000000000000000000000000000000002010000000000000\ncalldata_TeacherCoin_0: 0xdd00000000000000000000000000000000000000000000000000000000\ncalldatasize_TeacherCoin: 0x4\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/4/0x3b4b29c4c1872a60d09937686bd2b358db9dee8a.sol",
        "function": "fallback",
        "lineno": 33,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3725,
        "code": "Teach",
        "debug": "calldata_TeacherCoin_32 + 4: 0xb135d1e4a0020a903239033aa9b45a69384c906b52a71e0575829626809581fd\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TeacherCoin_4: 0xa7e6e147bc0ca40011bf9bbaadf7593cb8cc90b17cb7d73775f0d8eb1435e9c1\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xb135d1e4a0020a903239033aa9b45a69384c906b52a71e0575829626809581fd\ncalldata_TeacherCoin_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncalldatasize_TeacherCoin: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `transfer(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/4/0x3b4b29c4c1872a60d09937686bd2b358db9dee8a.sol",
        "function": "transfer(address,uint256)",
        "lineno": 64,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 3738,
        "code": "is ERC20 {\n   ",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_TeacherCoin_32 + 4: 0x950dff78e666f73fd36ffedf5fe656f42f732f95edbafb7bf77fedeee4c653a9\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TeacherCoin_4: 0xf71ca024c4e4c48edb080090575702d73908a831c1b8c07b8480010000f10f3b\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x950dff78e666f73fd36ffedf5fe656f42f732f95edbafb7bf77fedeee4c653a9\ncalldata_TeacherCoin_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncalldatasize_TeacherCoin: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/4/0x3b4b29c4c1872a60d09937686bd2b358db9dee8a.sol",
        "function": "transfer(address,uint256)",
        "lineno": 64,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}