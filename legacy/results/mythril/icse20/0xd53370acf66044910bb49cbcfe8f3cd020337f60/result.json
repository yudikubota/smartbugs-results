{
  "contract": "0xd53370acf66044910bb49cbcfe8f3cd020337f60",
  "tool": "mythril",
  "start": 1563468606.1183243,
  "end": 1563468849.0940008,
  "duration": 242.97567653656006,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 3159,
        "code": "return Amount of remaining tokens of _owner that _spender is allowed",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/2/0xd53370acf66044910bb49cbcfe8f3cd020337f60.sol",
        "function": "approve(address,uint256)",
        "lineno": 420,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 3159,
        "code": "return Amount of remaining tokens of _owner that _spender is allowed",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function approve(address,uint256). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/2/0xd53370acf66044910bb49cbcfe8f3cd020337f60.sol",
        "function": "approve(address,uint256)",
        "lineno": 420,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 3355,
        "code": "  function allowance(address _owner, ad",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/2/0xd53370acf66044910bb49cbcfe8f3cd020337f60.sol",
        "function": "approve(address,uint256)",
        "lineno": 422,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 4650,
        "code": " of tokens at `_blockNumber`\n  function totalSupplyAt(uint _blockNumber",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/2/0xd53370acf66044910bb49cbcfe8f3cd020337f60.sol",
        "function": "balanceOfAt(address,uint256)",
        "lineno": 484,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 5106,
        "code": "me a burner by default\n  fun",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_1: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_TokenController_0: 0x80b022e800000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenController: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/2/0xd53370acf66044910bb49cbcfe8f3cd020337f60.sol",
        "function": "changeBurner(address)",
        "lineno": 74,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 5658,
        "code": "quantity of tokens minted\n  /// @return True if the tokens are mi",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/2/0xd53370acf66044910bb49cbcfe8f3cd020337f60.sol",
        "function": "totalSupply()",
        "lineno": 512,
        "title": "Message call to external contract",
        "type": "Informational"
      }
    ],
    "success": true
  }
}