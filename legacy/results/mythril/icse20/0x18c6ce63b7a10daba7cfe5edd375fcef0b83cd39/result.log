{"error": null, "issues": [{"address": 340, "code": "\n            h.deed.setOwner(msg.sender);\n            h.deed.closeDeed(1000);\n        }\n        HashInvalidated(hash, unhashedName, h.value, h.registrationDate);\n        h.deed = Deed(0);\n    }\n\n    /**\n     * @dev Transfers the deed to the current registrar, if different from this one.\n     * Used during the upgrade process to a permanent registrar.\n     * @param _hash The name hash to transfer.\n     */\n    function transferRegistrars(bytes32 _hash) onlyOwner(_hash) {\n        var registrar = ens.owner(rootNode);\n        if(registrar == address(this))\n            throw;\n\n        entry h = _entries[_hash];\n        h.deed.setRegistrar(registrar);\n    }\n", "debug": "calldata_Registrar_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_Registrar_0: 0x15f7333100000000000000000000000000000000000000000000000000000000\ncalldatasize_Registrar: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `invalidateName(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/14/0x18c6ce63b7a10daba7cfe5edd375fcef0b83cd39.sol", "function": "invalidateName(string)", "lineno": 461, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1559, "code": "ehash\n     * @param owner The address which will own the \n     * @param value The bid amount\n     * @param salt A random value to ensure secrecy of the bid\n", "debug": "calldata_Registrar_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_Registrar_0: 0xe27fe50f00000000000000000000000000000000000000000000000000000000\ncalldatasize_Registrar: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `startAuctions(bytes32[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/14/0x18c6ce63b7a10daba7cfe5edd375fcef0b83cd39.sol", "function": "startAuctions(bytes32[])", "lineno": 289, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1937, "code": "rootNode) != address(this)) ", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/14/0x18c6ce63b7a10daba7cfe5edd375fcef0b83cd39.sol", "function": "releaseDeed(bytes32)", "lineno": 177, "title": "Message call to external contract", "type": "Warning"}, {"address": 1937, "code": "rootNode) != address(this)) ", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2653\nCall at address: 2516\nCall at address: 2653\nCall at address: 2516\n", "filename": "/unique_chucks/14/0x18c6ce63b7a10daba7cfe5edd375fcef0b83cd39.sol", "function": "releaseDeed(bytes32)", "lineno": 177, "title": "Multiple Calls", "type": "Information"}, {"address": 2130, "code": "the deed value. We are purpo", "debug": "storage_1 +\nkeccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\ncalldata_Registrar_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffe800400\nretval_1937: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\nreturndatasize: 0x20\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_0 +\nkeccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\ncalldata_Registrar_4: 0xffffffffffffffffffffffffffffffffffffffff00\nstorage_3 +\nkeccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\ncalldata_Registrar_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ntimestamp: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffe800400\ncalldata_Registrar_0: 0x230a07c00000000000000000000000000000000000000000000000000000000\ncalldatasize_Registrar: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `releaseDeed(bytes32)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/14/0x18c6ce63b7a10daba7cfe5edd375fcef0b83cd39.sol", "function": "releaseDeed(bytes32)", "lineno": 446, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2233, "code": "s.\n     * @", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/14/0x18c6ce63b7a10daba7cfe5edd375fcef0b83cd39.sol", "function": "releaseDeed(bytes32)", "lineno": 448, "title": "State change after external call", "type": "Warning"}, {"address": 2243, "code": "hedName An inval", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/14/0x18c6ce63b7a10daba7cfe5edd375fcef0b83cd39.sol", "function": "releaseDeed(bytes32)", "lineno": 449, "title": "State change after external call", "type": "Warning"}, {"address": 2311, "code": "search for in th", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/14/0x18c6ce63b7a10daba7cfe5edd375fcef0b83cd39.sol", "function": "releaseDeed(bytes32)", "lineno": 449, "title": "State change after external call", "type": "Warning"}, {"address": 2516, "code": "    * \n     */\n    function invalidateN", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/14/0x18c6ce63b7a10daba7cfe5edd375fcef0b83cd39.sol", "function": "releaseDeed(bytes32)", "lineno": 450, "title": "Message call to external contract", "type": "Informational"}, {"address": 2516, "code": "    * \n     */\n    function invalidateN", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2653\n", "filename": "/unique_chucks/14/0x18c6ce63b7a10daba7cfe5edd375fcef0b83cd39.sol", "function": "releaseDeed(bytes32)", "lineno": 450, "title": "Multiple Calls", "type": "Information"}, {"address": 2653, "code": "unhashedName) inState(sha3(u", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/14/0x18c6ce63b7a10daba7cfe5edd375fcef0b83cd39.sol", "function": "releaseDeed(bytes32)", "lineno": 452, "title": "Message call to external contract", "type": "Warning"}, {"address": 3184, "code": "d to the current registrar, if differe", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/14/0x18c6ce63b7a10daba7cfe5edd375fcef0b83cd39.sol", "function": "invalidateName(string)", "lineno": 470, "title": "Message call to external contract", "type": "Informational"}, {"address": 4692, "code": "* @param _hash The", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/14/0x18c6ce63b7a10daba7cfe5edd375fcef0b83cd39.sol", "function": "cancelBid(address,bytes32)", "lineno": 398, "title": "Message call to external contract", "type": "Warning"}, {"address": 4692, "code": "* @param _hash The", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 5247\nCall at address: 5111\nCall at address: 5247\nCall at address: 5111\nCall at address: 4863\n", "filename": "/unique_chucks/14/0x18c6ce63b7a10daba7cfe5edd375fcef0b83cd39.sol", "function": "cancelBid(address,bytes32)", "lineno": 398, "title": "Multiple Calls", "type": "Information"}, {"address": 4749, "code": "* @param _hash The hash of the name the a", "debug": "retval_4692: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8400\nreturndatasize: 0x20\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\ncalldata_Registrar_32_+_4: 0xffffffffffffffffffffffffffffffffffffffff00\ncalldata_Registrar_0: 0x2525f5c100000000000000000000000000000000000000000000000000000000\ncalldatasize_Registrar: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `cancelBid(address,bytes32)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/14/0x18c6ce63b7a10daba7cfe5edd375fcef0b83cd39.sol", "function": "cancelBid(address,bytes32)", "lineno": 398, "title": "Integer Overflow ", "type": "Warning"}, {"address": 4863, "code": " */ \n    fu", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/14/0x18c6ce63b7a10daba7cfe5edd375fcef0b83cd39.sol", "function": "cancelBid(address,bytes32)", "lineno": 399, "title": "Message call to external contract", "type": "Warning"}, {"address": 4863, "code": " */ \n    fu", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 5247\nCall at address: 5111\n", "filename": "/unique_chucks/14/0x18c6ce63b7a10daba7cfe5edd375fcef0b83cd39.sol", "function": "cancelBid(address,bytes32)", "lineno": 399, "title": "Multiple Calls", "type": "Information"}, {"address": 5111, "code": "\n\n        h.value =  max", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/14/0x18c6ce63b7a10daba7cfe5edd375fcef0b83cd39.sol", "function": "cancelBid(address,bytes32)", "lineno": 401, "title": "Message call to external contract", "type": "Warning"}, {"address": 5111, "code": "\n\n        h.value =  max", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 5247\n", "filename": "/unique_chucks/14/0x18c6ce63b7a10daba7cfe5edd375fcef0b83cd39.sol", "function": "cancelBid(address,bytes32)", "lineno": 401, "title": "Multiple Calls", "type": "Information"}, {"address": 5247, "code": "inPrice);\n\n     ", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/14/0x18c6ce63b7a10daba7cfe5edd375fcef0b83cd39.sol", "function": "cancelBid(address,bytes32)", "lineno": 403, "title": "Message call to external contract", "type": "Warning"}, {"address": 5419, "code": "n the owner in ENS\n        ens.set", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/14/0x18c6ce63b7a10daba7cfe5edd375fcef0b83cd39.sol", "function": "cancelBid(address,bytes32)", "lineno": 405, "title": "State change after external call", "type": "Warning"}, {"address": 5806, "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/14/0x18c6ce63b7a10daba7cfe5edd375fcef0b83cd39.sol", "function": "_function_0x4a562d81", "lineno": 493, "title": "Message call to external contract", "type": "Warning"}, {"address": 5806, "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 6182\nCall at address: 6182\nCall at address: 5998\n", "filename": "/unique_chucks/14/0x18c6ce63b7a10daba7cfe5edd375fcef0b83cd39.sol", "function": "_function_0x4a562d81", "lineno": 493, "title": "Multiple Calls", "type": "Information"}, {"address": 5998, "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/14/0x18c6ce63b7a10daba7cfe5edd375fcef0b83cd39.sol", "function": "_function_0x4a562d81", "lineno": 493, "title": "Message call to external contract", "type": "Warning"}, {"address": 5998, "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 6182\n", "filename": "/unique_chucks/14/0x18c6ce63b7a10daba7cfe5edd375fcef0b83cd39.sol", "function": "_function_0x4a562d81", "lineno": 493, "title": "Multiple Calls", "type": "Information"}, {"address": 6182, "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/14/0x18c6ce63b7a10daba7cfe5edd375fcef0b83cd39.sol", "function": "_function_0x4a562d81", "lineno": 493, "title": "Message call to external contract", "type": "Warning"}, {"address": 6416, "code": "rootNode) != address(this)) ", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/14/0x18c6ce63b7a10daba7cfe5edd375fcef0b83cd39.sol", "function": "transferRegistrars(bytes32)", "lineno": 177, "title": "Message call to external contract", "type": "Warning"}, {"address": 7178, "code": "        } else {\n            if(entry", "debug": "storage_1 +\nkeccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\ncalldata_Registrar_4: 0x8000\ntimestamp: 0x7fff\ncalldata_Registrar_0: 0x983b94fb00000000000000000000000000000000000000000000000000000000\ncalldatasize_Registrar: 0x4\ncallvalue: 0x0\n", "description": "A possible integer underflow exists in the function `finalizeAuction(bytes32)`.\nThe subtraction may result in a value < 0.", "filename": "/unique_chucks/14/0x18c6ce63b7a10daba7cfe5edd375fcef0b83cd39.sol", "function": "finalizeAuction(bytes32)", "lineno": 155, "title": "Integer Underflow", "type": "Warning"}, {"address": 9914, "code": "    BidRevealed(_has", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/14/0x18c6ce63b7a10daba7cfe5edd375fcef0b83cd39.sol", "function": "unsealBid(bytes32,address,uint256,bytes32)", "lineno": 344, "title": "Message call to external contract", "type": "Warning"}], "success": true}