{
  "contract": "0x70c59563a55ba2c67a0c27989f88bb8913b0e84c",
  "tool": "mythril",
  "start": 1563606731.9887428,
  "end": 1563606793.8262105,
  "duration": 61.837467670440674,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 468,
        "code": "address _market",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_6: 0x8000\ncalldatasize_TokenController: 0x3\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/20/0x70c59563a55ba2c67a0c27989f88bb8913b0e84c.sol",
        "function": "fallback",
        "lineno": 684,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2567,
        "code": "address _market",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_6: 0x8000\ncalldata_TokenController_0: 0x45fbfbca00000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenController: 0x4\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/20/0x70c59563a55ba2c67a0c27989f88bb8913b0e84c.sol",
        "function": "investment()",
        "lineno": 684,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2783,
        "code": "nt, currentBalance);\n          ",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffff90d903e00fe\ncallvalue: 0x2386f26fc17f00\nstorage_6: 0x100\ncalldata_TokenController_0: 0x45fbfbca00000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenController: 0x4\n",
        "description": "A possible integer overflow exists in the function `investment()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/20/0x70c59563a55ba2c67a0c27989f88bb8913b0e84c.sol",
        "function": "investment()",
        "lineno": 798,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2799,
        "code": "     else {\n            ",
        "debug": "callvalue: 0x8ec9540220efd6dca03f48010000000096ef50db995d8322302387f26fc88c13\nstorage_9: 0xa3359a0b3b1029260000974bff6fffab6910af24268100a0b9cc780d90138040\nstorage_6: 0x100\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncalldata_TokenController_0: 0x45fbfbca00000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenController: 0x4\n",
        "description": "A possible integer overflow exists in the function `investment()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/20/0x70c59563a55ba2c67a0c27989f88bb8913b0e84c.sol",
        "function": "investment()",
        "lineno": 800,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 4378,
        "code": "address _market",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_6: 0x8000\ncalldata_TokenController_0: 0x81ef1b1800000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenController: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/20/0x70c59563a55ba2c67a0c27989f88bb8913b0e84c.sol",
        "function": "startFundraising()",
        "lineno": 684,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}