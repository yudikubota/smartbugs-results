{"error": null, "issues": [{"address": 1172, "code": "G.sendFunds(msg.sender, Acc.Premium, m", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/20/0xcf636b55e5fe32e7d8b8257518666b6bc7077c75.sol", "function": "maintenanceMode(bool)", "lineno": 778, "title": "Message call to external contract", "type": "Informational"}, {"address": 1172, "code": "G.sendFunds(msg.sender, Acc.Premium, m", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1429\n", "filename": "/unique_chucks/20/0xcf636b55e5fe32e7d8b8257518666b6bc7077c75.sol", "function": "maintenanceMode(bool)", "lineno": 778, "title": "Multiple Calls", "type": "Information"}, {"address": 1172, "code": "G.sendFunds(msg.sender, Acc.Premium, m", "debug": "", "description": "A possible transaction order independence vulnerability exists in function maintenanceMode(bool). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/20/0xcf636b55e5fe32e7d8b8257518666b6bc7077c75.sol", "function": "maintenanceMode(bool)", "lineno": 778, "title": "Transaction order dependence", "type": "Warning"}, {"address": 1429, "code": "          return;\n            }\n        } el", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/20/0xcf636b55e5fe32e7d8b8257518666b6bc7077c75.sol", "function": "maintenanceMode(bool)", "lineno": 779, "title": "Message call to external contract", "type": "Informational"}, {"address": 1429, "code": "          return;\n            }\n        } el", "debug": "", "description": "A possible transaction order independence vulnerability exists in function maintenanceMode(bool). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/20/0xcf636b55e5fe32e7d8b8257518666b6bc7077c75.sol", "function": "maintenanceMode(bool)", "lineno": 779, "title": "Transaction order dependence", "type": "Warning"}, {"address": 3630, "code": "\n        FD_LG.bookkeeping(Acc.Premium, Acc.Reward, reward);\n\n  ", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/20/0xcf636b55e5fe32e7d8b8257518666b6bc7077c75.sol", "function": "setContracts()", "lineno": 749, "title": "State change after external call", "type": "Warning"}, {"address": 4707, "code": "alue);\n                    retu", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/20/0xcf636b55e5fe32e7d8b8257518666b6bc7077c75.sol", "function": "_function_0xfba2fb66", "lineno": 788, "title": "Message call to external contract", "type": "Informational"}, {"address": 4707, "code": "alue);\n                    retu", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 10672\n", "filename": "/unique_chucks/20/0xcf636b55e5fe32e7d8b8257518666b6bc7077c75.sol", "function": "_function_0xfba2fb66", "lineno": 788, "title": "Multiple Calls", "type": "Information"}, {"address": 4707, "code": "alue);\n                    retu", "debug": "", "description": "A possible transaction order independence vulnerability exists in function _function_0xfba2fb66. The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/20/0xcf636b55e5fe32e7d8b8257518666b6bc7077c75.sol", "function": "_function_0xfba2fb66", "lineno": 788, "title": "Transaction order dependence", "type": "Warning"}, {"address": 4798, "code": "SD) {\n                // ", "debug": "The exception is triggered under the following conditions:\n\ncalldata_FlightDelayUnderwriteInterface_32 + 100: 0xfc\nreturndatasize: 0x20\nretval_4707: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_FlightDelayUnderwriteInterface_0: 0xfba2fb6600000000000000000000000000000000000000000000000000000000\ncalldatasize_FlightDelayUnderwriteInterface: 0x4\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/20/0xcf636b55e5fe32e7d8b8257518666b6bc7077c75.sol", "function": "_function_0xfba2fb66", "lineno": 793, "title": "Exception state", "type": "Informational"}, {"address": 10082, "code": "         uint8 low = b", "debug": "calldata_FlightDelayUnderwriteInterface_4: 0x100000000000000000000000000000000000000000000000000000000000000\ncalldata_FlightDelayUnderwriteInterface_0: 0xbcf599f100000000000000000000000000000000000000000000000000000000\ncalldatasize_FlightDelayUnderwriteInterface: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `toUnixtime(bytes32)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/20/0xcf636b55e5fe32e7d8b8257518666b6bc7077c75.sol", "function": "toUnixtime(bytes32)", "lineno": 630, "title": "Integer Overflow ", "type": "Warning"}, {"address": 10672, "code": "public MAX_DEPARTURE_L", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/20/0xcf636b55e5fe32e7d8b8257518666b6bc7077c75.sol", "function": "_function_0xfba2fb66", "lineno": 451, "title": "Message call to external contract", "type": "Informational"}, {"address": 10672, "code": "public MAX_DEPARTURE_L", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 10672\n", "filename": "/unique_chucks/20/0xcf636b55e5fe32e7d8b8257518666b6bc7077c75.sol", "function": "setContracts()", "lineno": 451, "title": "Multiple Calls", "type": "Information"}], "success": true}