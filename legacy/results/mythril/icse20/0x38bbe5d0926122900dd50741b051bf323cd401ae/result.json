{
  "contract": "0x38bbe5d0926122900dd50741b051bf323cd401ae",
  "tool": "mythril",
  "start": 1563624629.7433195,
  "end": 1563624741.5592191,
  "duration": 111.81589961051941,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 1266,
        "code": "urchased[msg.sender];\n\n    // ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/24/0x38bbe5d0926122900dd50741b051bf323cd401ae.sol",
        "function": "fallback",
        "lineno": 117,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 1266,
        "code": "urchased[msg.sender];\n\n    // ",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1755\nCall at address: 1755\n",
        "filename": "/unique_chucks/24/0x38bbe5d0926122900dd50741b051bf323cd401ae.sol",
        "function": "withdraw()",
        "lineno": 117,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 1538,
        "code": "if(!token.transfer(msg.sender",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/24/0x38bbe5d0926122900dd50741b051bf323cd401ae.sol",
        "function": "fallback",
        "lineno": 125,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 1548,
        "code": "withdraw)) throw;\n  }\n\n  function purc",
        "debug": "storage_4: 0xb2c81e3be60b809eebca250ae5f3958de8241f3c0942692d3cecd1fd00743211\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x93931c13e507cbbcbf74d9eee4fb920eeaef84aa5110428da2eddb017d5ebcdd\nreturndatasize: 0x20\nretval_1266: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_DaoCasinoToken_0: 0x3ccfd60b00000000000000000000000000000000000000000000000000000000\ncalldatasize_DaoCasinoToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `withdraw()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/24/0x38bbe5d0926122900dd50741b051bf323cd401ae.sol",
        "function": "withdraw()",
        "lineno": 125,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1554,
        "code": "withdraw)) throw;\n  }\n\n  function purc",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/24/0x38bbe5d0926122900dd50741b051bf323cd401ae.sol",
        "function": "fallback",
        "lineno": 125,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 1755,
        "code": "// Determine amount of tokens user wants to",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/24/0x38bbe5d0926122900dd50741b051bf323cd401ae.sol",
        "function": "withdraw()",
        "lineno": 131,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 1858,
        "code": "bet_available) throw;\n\n  ",
        "debug": "callvalue: 0xde9aa0007ffff9dbbb05d00001000207fffdffbfffbfbfbfffbfbfefbfbff7f6\nstorage_5: 0xff3717ddf147ba7fd6976a72ee859c9c251431c6dd4346e384e0fd941c87b69c\nstorage_7: 0x0\ncalldata_DaoCasinoToken_0: 0x64edfbf000000000000000000000000000000000000000000000000000000000\ncalldatasize_DaoCasinoToken: 0x4\n",
        "description": "A possible integer overflow exists in the function `purchase()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/24/0x38bbe5d0926122900dd50741b051bf323cd401ae.sol",
        "function": "purchase()",
        "lineno": 135,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1948,
        "code": "all buyers over all periods of availability\n",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_2: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_3: 0xa80da32fffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_5: 0x1\ncallvalue: 0x57f25cd000000000000000000000000000000000000000000000000000000000\nstorage_7: 0x0\ncalldata_DaoCasinoToken_0: 0x64edfbf000000000000000000000000000000000000000000000000000000000\ncalldatasize_DaoCasinoToken: 0x4\n",
        "description": "A possible integer overflow exists in the function `purchase()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/24/0x38bbe5d0926122900dd50741b051bf323cd401ae.sol",
        "function": "purchase()",
        "lineno": 141,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2041,
        "code": "er.transfer(msg.value);\n  }\n\n  // Fall",
        "debug": "storage_3: 0x80000000000220780d0b2aace014023000802e0c22820153c10c080000000800\nstorage_2: 0x7fffffffdffd593447ab5a7590780960012f6e6ff6f00053810c080000000800\nstorage_5: 0x1\ncallvalue: 0xffffffffdffb38bc3aa02fc8b064073000af4063d46dfeffc000000000000000\nstorage_7: 0x0\ncalldata_DaoCasinoToken_0: 0x64edfbf000000000000000000000000000000000000000000000000000000000\ncalldatasize_DaoCasinoToken: 0x4\n",
        "description": "A possible integer overflow exists in the function `purchase()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/24/0x38bbe5d0926122900dd50741b051bf323cd401ae.sol",
        "function": "purchase()",
        "lineno": 145,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2130,
        "code": " else {\n      if(msg.sende",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function purchase(). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/24/0x38bbe5d0926122900dd50741b051bf323cd401ae.sol",
        "function": "purchase()",
        "lineno": 153,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 2414,
        "code": "tePrice(uint256 _price) {\n    if(m",
        "debug": "storage_2: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncalldata_DaoCasinoToken_4: 0x57f25cd000000000000000000000000000000000000000000000000000000000\nstorage_7: 0x0\ncaller: 0x0\ncalldata_DaoCasinoToken_0: 0x48330cf600000000000000000000000000000000000000000000000000000000\ncalldatasize_DaoCasinoToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `updateAvailability(uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/24/0x38bbe5d0926122900dd50741b051bf323cd401ae.sol",
        "function": "updateAvailability(uint256)",
        "lineno": 94,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 3094,
        "code": "draw ETH\n  */\n  function withd",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/24/0x38bbe5d0926122900dd50741b051bf323cd401ae.sol",
        "function": "withdrawTokens()",
        "lineno": 66,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 3094,
        "code": "draw ETH\n  */\n  function withd",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3286\n",
        "filename": "/unique_chucks/24/0x38bbe5d0926122900dd50741b051bf323cd401ae.sol",
        "function": "withdrawTokens()",
        "lineno": 66,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 3286,
        "code": "  /*\n    Safety to withdraw ETH\n  */\n  function withdr",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/24/0x38bbe5d0926122900dd50741b051bf323cd401ae.sol",
        "function": "withdrawTokens()",
        "lineno": 65,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 3586,
        "code": "   }\n  }\n\n ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/24/0x38bbe5d0926122900dd50741b051bf323cd401ae.sol",
        "function": "buyTokens()",
        "lineno": 80,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 3586,
        "code": "   }\n  }\n\n ",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3779\n",
        "filename": "/unique_chucks/24/0x38bbe5d0926122900dd50741b051bf323cd401ae.sol",
        "function": "buyTokens()",
        "lineno": 80,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 3779,
        "code": "nce)(address(this))",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/24/0x38bbe5d0926122900dd50741b051bf323cd401ae.sol",
        "function": "buyTokens()",
        "lineno": 79,
        "title": "Message call to external contract",
        "type": "Informational"
      }
    ],
    "success": true
  }
}