{
  "contract": "0x1104b8ea455df066a84545778b26376411f23097",
  "tool": "mythril",
  "start": 1563217288.1758373,
  "end": 1563217539.9175916,
  "duration": 251.74175429344177,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 899,
        "code": "!= stage){\n            c.sta",
        "debug": "The exception is triggered under the following conditions:\n\ngasprice: 0x0\nstorage_1: 0x100\nstorage_4: 0x7ffffffffffffffffff00000000000fe00\ncalldatasize_CoinFlash: 0x3\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0x1104b8ea455df066a84545778b26376411f23097.sol",
        "function": "fallback",
        "lineno": 191,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 5067,
        "code": "ts, uint128[] expects) {\n        uint c = getDepositsC",
        "debug": "",
        "description": "In the function `fallback` the following predictable state variables are used to determine Ether recipient:\n- block.timestamp\n",
        "filename": "/unique_contracts/0x1104b8ea455df066a84545778b26376411f23097.sol",
        "function": "fallback",
        "lineno": 269,
        "title": "Dependence on predictable environment variable",
        "type": "Warning"
      },
      {
        "address": 5067,
        "code": "ts, uint128[] expects) {\n        uint c = getDepositsC",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function fallback. The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_contracts/0x1104b8ea455df066a84545778b26376411f23097.sol",
        "function": "fallback",
        "lineno": 269,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 5107,
        "code": "eposits =",
        "debug": "storage_2: 0x4000002801a80000001110801\ngasprice: 0x7480\nstorage_1: 0x10000000000048000006000000000008090d9\nstorage_6: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nbalance_at_1461501637330902918203684832716283019655932542975 & 0: 0x0\nretval_5067: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_5: 0x1\ntimestamp: 0x7ffffffa7fffc2601a7fff40010e8c68\nstorage_0 +\n80084422859880547211683076133703299733277748156566366325829078699459944778998 +\n2*Concat(0, Extract(135, 8, storage_4)): 0x0\ncaller: 0x0\nstorage_4: 0x7ffffffa7fffc2601a7fff40010e87b800\ncalldatasize_CoinFlash: 0x3\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x1104b8ea455df066a84545778b26376411f23097.sol",
        "function": "fallback",
        "lineno": 273,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 5136,
        "debug": "callvalue: 0x800000000000000\ngasprice: 0x0\ntimestamp: 0xa8bf\ngas: 0x35b60\ncalldatasize_CoinFlash: 0x3\n",
        "description": "A possible integer underflow exists in the function `fallback`.\nThe subtraction may result in a value < 0.",
        "filename": "/unique_contracts/0x1104b8ea455df066a84545778b26376411f23097.sol",
        "function": "fallback",
        "lineno": 320,
        "title": "Integer Underflow",
        "type": "Warning"
      },
      {
        "address": 6092,
        "code": " return cu",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_CoinFlash_4: 0x0\nstorage_1: 0x0\ncalldata_CoinFlash_0: 0x9f9fb96800000000000000000000000000000000000000000000000000000000\ncalldatasize_CoinFlash: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0x1104b8ea455df066a84545778b26376411f23097.sol",
        "function": "getDeposit(uint256)",
        "lineno": 291,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 6436,
        "code": "me())\n  ",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_2: 0x0\nstorage_1: 0x0\nstorage_3: 0x1\ncalldata_CoinFlash_0: 0xc67f7df500000000000000000000000000000000000000000000000000000000\ncalldatasize_CoinFlash: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0x1104b8ea455df066a84545778b26376411f23097.sol",
        "function": "getDepositsCount(address)",
        "lineno": 297,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}