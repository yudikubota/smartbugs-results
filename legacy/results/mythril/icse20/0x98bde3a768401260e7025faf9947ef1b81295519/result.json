{
  "contract": "0x98bde3a768401260e7025faf9947ef1b81295519",
  "tool": "mythril",
  "start": 1563519062.525958,
  "end": 1563519208.1227887,
  "duration": 145.59683060646057,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 2395,
        "code": "unction transferOwnership(ad",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncalldata_ValueTokenAgent_0: 0x22e6335600000000000000000000000000000000000000000000000000000000\ncalldatasize_ValueTokenAgent: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/5/0x98bde3a768401260e7025faf9947ef1b81295519.sol",
        "function": "_function_0x22e63356",
        "lineno": 58,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3303,
        "code": "r);\n        _;\n    }\n\n    /",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_ValueTokenAgent_0: 0xa5e90eee00000000000000000000000000000000000000000000000000000000\ncalldatasize_ValueTokenAgent: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/5/0x98bde3a768401260e7025faf9947ef1b81295519.sol",
        "function": "setManager(address,bool)",
        "lineno": 26,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3808,
        "code": "unction transferOwnership(ad",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncalldata_ValueTokenAgent_0: 0xc47af73200000000000000000000000000000000000000000000000000000000\ncalldatasize_ValueTokenAgent: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/5/0x98bde3a768401260e7025faf9947ef1b81295519.sol",
        "function": "setReserved(address,bool)",
        "lineno": 58,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 4086,
        "code": "nt -= holderBalance;\n            reservedAmoun",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/5/0x98bde3a768401260e7025faf9947ef1b81295519.sol",
        "function": "setReserved(address,bool)",
        "lineno": 315,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 4086,
        "code": "nt -= holderBalance;\n            reservedAmoun",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function setReserved(address,bool). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/5/0x98bde3a768401260e7025faf9947ef1b81295519.sol",
        "function": "setReserved(address,bool)",
        "lineno": 315,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 4502,
        "code": "r);\n        _;\n    }\n\n    /",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_ValueTokenAgent_0: 0xf2fde38b00000000000000000000000000000000000000000000000000000000\ncalldatasize_ValueTokenAgent: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/5/0x98bde3a768401260e7025faf9947ef1b81295519.sol",
        "function": "transferOwnership(address)",
        "lineno": 26,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 4741,
        "code": "256 limits*/\n ",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_10: 0x0\ncalldata_ValueTokenAgent_32 + 4: 0x1\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xff00\nstorage_8: 0x0\ncalldata_ValueTokenAgent_4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_ValueTokenAgent_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncalldatasize_ValueTokenAgent: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/5/0x98bde3a768401260e7025faf9947ef1b81295519.sol",
        "function": "transfer(address,uint256)",
        "lineno": 131,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 5071,
        "code": "_value;\n        } \n        if (reserved[_to]) {\n      ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/5/0x98bde3a768401260e7025faf9947ef1b81295519.sol",
        "function": "transfer(address,uint256)",
        "lineno": 286,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 5071,
        "code": "_value;\n        } \n        if (reserved[_to]) {\n      ",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function transfer(address,uint256). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/5/0x98bde3a768401260e7025faf9947ef1b81295519.sol",
        "function": "transfer(address,uint256)",
        "lineno": 286,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 5317,
        "code": "tion ",
        "debug": "storage_10: 0x9c9efb7ae5acd378025256a3945f5859076e809243093d9ecae2636c9fd28979\ncalldata_ValueTokenAgent_32 + 36: 0xc290137095b13347e55005a6dc184559e0489f1233480050d0fb4bba17d34179\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_ValueTokenAgent_32_+_4: 0xff00\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_ValueTokenAgent_4: 0x0\nretval_5071: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_8: 0xffffffffffffffffffffffffffffffffffffffff00\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xc290137095b13347e55005a6dc184559e0489f1233480050d0fb4bba17d34179\ncalldata_ValueTokenAgent_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_ValueTokenAgent_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_ValueTokenAgent: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `transferFrom(address,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/5/0x98bde3a768401260e7025faf9947ef1b81295519.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 125,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 5330,
        "code": "s than b*/\n   ",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_10: 0x1\ncalldata_ValueTokenAgent_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_ValueTokenAgent_4: 0xff00\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\nstorage_8: 0x0\ncalldata_ValueTokenAgent_4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_ValueTokenAgent_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncalldatasize_ValueTokenAgent: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/5/0x98bde3a768401260e7025faf9947ef1b81295519.sol",
        "function": "transfer(address,uint256)",
        "lineno": 125,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 5727,
        "code": "oken.sol\" : end\n *********************************",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/5/0x98bde3a768401260e7025faf9947ef1b81295519.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 222,
        "title": "State change after external call",
        "type": "Warning"
      }
    ],
    "success": true
  }
}