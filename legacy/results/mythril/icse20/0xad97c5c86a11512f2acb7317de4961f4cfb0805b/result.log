{"error": null, "issues": [{"address": 1367, "code": "(bool success) {\n        allowed[msg.sender][_spender] = _value;\n        emit Approval(msg.sender, _spender, _value);\n        if(!_spender.call(_extraData)) { revert(); }\n        return true;\n    }\n\n    function addTotalSupplyAmount(uint256 supply) payable public {\n      totalSupply += supply * s", "debug": "calldata_lvbaoshi_32 + 36: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_lvbaoshi_0: 0xb11c4fd800000000000000000000000000000000000000000000000000000000\ncalldatasize_lvbaoshi: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `approveAndCallcode(address,uint256,bytes)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/19/0xad97c5c86a11512f2acb7317de4961f4cfb0805b.sol", "function": "approveAndCallcode(address,uint256,bytes)", "lineno": 96, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1538, "code": "ns (bool success) {\n        allowed[msg.sender][_spender] = _value;\n        emit Approval(msg.sender, _spender, _value);\n        if(!_spender.call(bytes4(bytes32(keccak256(\"receiveApproval(address,uint256,address,bytes)\"))), msg.sender, _value, this, _extraData)) { revert(); }\n        return true;\n    }\n\n    function approveAndCallcode(address _spender, uint256 _value, bytes _extraData) public ", "debug": "calldata_lvbaoshi_32 + 36: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_lvbaoshi_0: 0xcae9ca5100000000000000000000000000000000000000000000000000000000\ncalldatasize_lvbaoshi: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `approveAndCall(address,uint256,bytes)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/19/0xad97c5c86a11512f2acb7317de4961f4cfb0805b.sol", "function": "approveAndCall(address,uint256,bytes)", "lineno": 89, "title": "Integer Overflow ", "type": "Warning"}, {"address": 3440, "debug": "storage_0: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_5: 0x1\ncalldata_lvbaoshi_4: 0x57f25cd000000000000000000000000000000000000000000000000000000000\ncalldata_lvbaoshi_0: 0xa69177b100000000000000000000000000000000000000000000000000000000\ncalldatasize_lvbaoshi: 0x4\n", "description": "A possible integer overflow exists in the function `addTotalSupplyAmount(uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/19/0xad97c5c86a11512f2acb7317de4961f4cfb0805b.sol", "function": "addTotalSupplyAmount(uint256)", "lineno": 107, "title": "Integer Overflow ", "type": "Warning"}, {"address": 3555, "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\nUDiv(storage_8,_256): 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_5: 0x1\ncalldata_lvbaoshi_4: 0x57f25cd000000000000000000000000000000000000000000000000000000000\ncalldata_lvbaoshi_0: 0xa69177b100000000000000000000000000000000000000000000000000000000\ncalldatasize_lvbaoshi: 0x4\n", "description": "A possible integer overflow exists in the function `addTotalSupplyAmount(uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/19/0xad97c5c86a11512f2acb7317de4961f4cfb0805b.sol", "function": "addTotalSupplyAmount(uint256)", "lineno": 107, "title": "Integer Overflow ", "type": "Warning"}, {"address": 4475, "code": "ount(uint256 supply) paya", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/19/0xad97c5c86a11512f2acb7317de4961f4cfb0805b.sol", "function": "approveAndCallcode(address,uint256,bytes)", "lineno": 103, "title": "Message call to external contract", "type": "Warning"}, {"address": 5143, "code": " msg.sender, _value, this, _extraData)) { revert(); }\n        return true;\n    }\n\n    function approveAndCallcode(address _spende", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/19/0xad97c5c86a11512f2acb7317de4961f4cfb0805b.sol", "function": "approveAndCall(address,uint256,bytes)", "lineno": 92, "title": "Message call to external contract", "type": "Warning"}], "success": true}