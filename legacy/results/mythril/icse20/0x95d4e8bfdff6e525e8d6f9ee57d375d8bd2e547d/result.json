{
  "contract": "0x95d4e8bfdff6e525e8d6f9ee57d375d8bd2e547d",
  "tool": "mythril",
  "start": 1563801783.4679427,
  "end": 1563801895.515104,
  "duration": 112.0471613407135,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 1520,
        "code": "r][result] += msg.va",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_11: 0x8000\nstorage_5: 0x0\ntimestamp: 0x0\ncalldata_WhatDoesNadiaThink_0: 0x6f7029500000000000000000000000000000000000000000000000000000000\ncalldatasize_WhatDoesNadiaThink: 0x4\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/32/0x95d4e8bfdff6e525e8d6f9ee57d375d8bd2e547d.sol",
        "function": "answer(uint256)",
        "lineno": 57,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 1620,
        "code": "otalPerResponse[result] += msg.value;\n       ",
        "debug": "storage_keccac_calldata_WhatDoesNadiaThink_4: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncallvalue: 0x57f25cd000000000000000000000000000000000000000000000000000000000\nstorage_11: 0x0\nstorage_5: 0x0\ntimestamp: 0x0\ncalldata_WhatDoesNadiaThink_0: 0x6f7029500000000000000000000000000000000000000000000000000000000\ncalldatasize_WhatDoesNadiaThink: 0x4\n",
        "description": "A possible integer overflow exists in the function `answer(uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/32/0x95d4e8bfdff6e525e8d6f9ee57d375d8bd2e547d.sol",
        "function": "answer(uint256)",
        "lineno": 58,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1653,
        "code": "sg.value;\n        require(total < 2 *",
        "debug": "storage_keccac_calldata_WhatDoesNadiaThink_4: 0x8000000000800000000000000000000000000000000000002000000000000002\ncallvalue: 0x7ffffffffbffffffffffffffffffffffffffffffffffffffdffffffffffffffd\nstorage_11: 0x0\nstorage_5: 0x0\ntimestamp: 0x0\ncalldata_WhatDoesNadiaThink_0: 0x6f7029500000000000000000000000000000000000000000000000000000000\ncalldatasize_WhatDoesNadiaThink: 0x4\n",
        "description": "A possible integer overflow exists in the function `answer(uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/32/0x95d4e8bfdff6e525e8d6f9ee57d375d8bd2e547d.sol",
        "function": "answer(uint256)",
        "lineno": 59,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1669,
        "code": "/ Avoid overflow p",
        "debug": "storage_10: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncallvalue: 0x57f25cd000000000000000000000000000000000000000000000000000000000\nstorage_11: 0x0\nstorage_5: 0x0\ntimestamp: 0x0\ncalldata_WhatDoesNadiaThink_0: 0x6f7029500000000000000000000000000000000000000000000000000000000\ncalldatasize_WhatDoesNadiaThink: 0x4\n",
        "description": "A possible integer overflow exists in the function `answer(uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/32/0x95d4e8bfdff6e525e8d6f9ee57d375d8bd2e547d.sol",
        "function": "answer(uint256)",
        "lineno": 60,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1868,
        "code": "ve to manually choose whi",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_11: 0x8000\ncalldata_WhatDoesNadiaThink_0: 0x278ecde100000000000000000000000000000000000000000000000000000000\ncalldatasize_WhatDoesNadiaThink: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/32/0x95d4e8bfdff6e525e8d6f9ee57d375d8bd2e547d.sol",
        "function": "refund(uint256)",
        "lineno": 100,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2336,
        "code": "ingResponse] * (total - ",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_11: 0x8000\ncalldata_WhatDoesNadiaThink_0: 0x4e71d92d00000000000000000000000000000000000000000000000000000000\ncalldatasize_WhatDoesNadiaThink: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/32/0x95d4e8bfdff6e525e8d6f9ee57d375d8bd2e547d.sol",
        "function": "claim()",
        "lineno": 85,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2470,
        "code": "e[winningResponse]; // Subtract the integrityFee from the total before paying out winners.\n        ans",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_11: 0x100\ncalldata_WhatDoesNadiaThink_0: 0x4e71d92d00000000000000000000000000000000000000000000000000000000\ncalldatasize_WhatDoesNadiaThink: 0x4\nstorage_keccac_storage_14: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/32/0x95d4e8bfdff6e525e8d6f9ee57d375d8bd2e547d.sol",
        "function": "claim()",
        "lineno": 85,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2610,
        "code": "te != States.Resolved);\n   ",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function claim(). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/32/0x95d4e8bfdff6e525e8d6f9ee57d375d8bd2e547d.sol",
        "function": "claim()",
        "lineno": 91,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 2687,
        "code": "nly when someone tra",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_11: 0x8000\nstorage_5: 0x0\ntimestamp: 0x1\ncalldata_WhatDoesNadiaThink_0: 0x4f896d4f00000000000000000000000000000000000000000000000000000000\ncalldatasize_WhatDoesNadiaThink: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/32/0x95d4e8bfdff6e525e8d6f9ee57d375d8bd2e547d.sol",
        "function": "resolve(uint256)",
        "lineno": 66,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2805,
        "code": "' addition is for t",
        "debug": "calldata_WhatDoesNadiaThink_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_11: 0x0\nstorage_5: 0x0\nstorage_0: 0x0\ncaller: 0x0\ntimestamp: 0x1\ncalldata_WhatDoesNadiaThink_0: 0x4f896d4f00000000000000000000000000000000000000000000000000000000\ncalldatasize_WhatDoesNadiaThink: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `resolve(uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/32/0x95d4e8bfdff6e525e8d6f9ee57d375d8bd2e547d.sol",
        "function": "resolve(uint256)",
        "lineno": 70,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2993,
        "code": "      }\n        \n    }\n\n    funct",
        "debug": "",
        "description": "In the function `resolve(uint256)` the following predictable state variables are used to determine Ether recipient:\n- block.timestamp\n",
        "filename": "/unique_chucks/32/0x95d4e8bfdff6e525e8d6f9ee57d375d8bd2e547d.sol",
        "function": "resolve(uint256)",
        "lineno": 78,
        "title": "Dependence on predictable environment variable",
        "type": "Warning"
      },
      {
        "address": 2993,
        "code": "      }\n        \n    }\n\n    funct",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function resolve(uint256). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/32/0x95d4e8bfdff6e525e8d6f9ee57d375d8bd2e547d.sol",
        "function": "resolve(uint256)",
        "lineno": 78,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 3430,
        "code": " state = States.Cancelle",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_11: 0x8000\ncalldata_WhatDoesNadiaThink_0: 0xea8a1af000000000000000000000000000000000000000000000000000000000\ncalldatasize_WhatDoesNadiaThink: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/32/0x95d4e8bfdff6e525e8d6f9ee57d375d8bd2e547d.sol",
        "function": "cancel()",
        "lineno": 94,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3599,
        "code": "public responses;\n    uint",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_WhatDoesNadiaThink_4: 0x0\nstorage_4: 0x0\ncalldata_WhatDoesNadiaThink_0: 0xed35d7e500000000000000000000000000000000000000000000000000000000\ncalldatasize_WhatDoesNadiaThink: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/32/0x95d4e8bfdff6e525e8d6f9ee57d375d8bd2e547d.sol",
        "function": "_function_0xed35d7e5",
        "lineno": 11,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}