{
  "contract": "0xb26ff0cacf79603f306ca5dc215133a25731d70f",
  "tool": "mythril",
  "start": 1563684918.0943775,
  "end": 1563684938.927591,
  "duration": 20.833213567733765,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 1401,
        "code": "int256, address) public payable onlyCore\n    {\n      ",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function withdraw(). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/36/0xb26ff0cacf79603f306ca5dc215133a25731d70f.sol",
        "function": "withdraw()",
        "lineno": 323,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 2302,
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/36/0xb26ff0cacf79603f306ca5dc215133a25731d70f.sol",
        "function": "runSigned(uint40,uint256,address)",
        "lineno": 343,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 2302,
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2558\n",
        "filename": "/unique_chucks/36/0xb26ff0cacf79603f306ca5dc215133a25731d70f.sol",
        "function": "runSigned(uint40,uint256,address)",
        "lineno": 343,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 2302,
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function runSigned(uint40,uint256,address). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/36/0xb26ff0cacf79603f306ca5dc215133a25731d70f.sol",
        "function": "runSigned(uint40,uint256,address)",
        "lineno": 343,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 2558,
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/36/0xb26ff0cacf79603f306ca5dc215133a25731d70f.sol",
        "function": "runSigned(uint40,uint256,address)",
        "lineno": 343,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 2558,
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function runSigned(uint40,uint256,address). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/36/0xb26ff0cacf79603f306ca5dc215133a25731d70f.sol",
        "function": "runSigned(uint40,uint256,address)",
        "lineno": 343,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 2951,
        "code": "require(msg.sender == owner);\n\n",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/36/0xb26ff0cacf79603f306ca5dc215133a25731d70f.sol",
        "function": "setup(address,uint16)",
        "lineno": 259,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 3082,
        "code": "rFee = _fee;\n    }\n\n    /// @dev",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/36/0xb26ff0cacf79603f306ca5dc215133a25731d70f.sol",
        "function": "setup(address,uint16)",
        "lineno": 261,
        "title": "State change after external call",
        "type": "Warning"
      }
    ],
    "success": true
  }
}