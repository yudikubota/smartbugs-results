{"error": null, "issues": [{"address": 1020, "code": "kyc;\n  ATC public token;\n  Ref", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_contracts/0x951f614f81da09c90e6187a14b759f98ed9e7490.sol", "function": "release()", "lineno": 1266, "title": "Message call to external contract", "type": "Informational"}, {"address": 1020, "code": "kyc;\n  ATC public token;\n  Ref", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1229\n", "filename": "/unique_contracts/0x951f614f81da09c90e6187a14b759f98ed9e7490.sol", "function": "release()", "lineno": 1266, "title": "Multiple Calls", "type": "Information"}, {"address": 1020, "code": "kyc;\n  ATC public token;\n  Ref", "debug": "", "description": "A possible transaction order independence vulnerability exists in function release(). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_contracts/0x951f614f81da09c90e6187a14b759f98ed9e7490.sol", "function": "release()", "lineno": 1266, "title": "Transaction order dependence", "type": "Warning"}, {"address": 1229, "code": "blic partnersAddress; //1", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_contracts/0x951f614f81da09c90e6187a14b759f98ed9e7490.sol", "function": "release()", "lineno": 1270, "title": "Message call to external contract", "type": "Informational"}, {"address": 1675, "code": "Amount);\n    uint256 grantAmou", "debug": "The exception is triggered under the following conditions:\n\ncalldata_TokenController_4: 0x0\nstorage_2: 0x0\ncalldata_TokenController_0: 0xefeb5e5800000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenController: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_contracts/0x951f614f81da09c90e6187a14b759f98ed9e7490.sol", "function": "_function_0xefeb5e58", "lineno": 1247, "title": "Exception state", "type": "Informational"}, {"address": 1779, "code": "urn c;\n  }\n  f", "debug": "The exception is triggered under the following conditions:\n\nretval_1020: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_3: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nreturndatasize: 0x20\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_TokenController_0: 0x86d1a69f00000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenController: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_contracts/0x951f614f81da09c90e6187a14b759f98ed9e7490.sol", "function": "release()", "lineno": 25, "title": "Exception state", "type": "Informational"}], "success": true}