{
  "contract": "0xc42c450abd63cc77fedcc22f124a7783f6958a79",
  "tool": "mythril",
  "start": 1563664173.7134233,
  "end": 1563664181.599616,
  "duration": 7.886192798614502,
  "analysis": {
    "success": false,
    "error": "Solc experienced a fatal error (code 1).\n\n/unique_chucks/35/0xc42c450abd63cc77fedcc22f124a7783f6958a79.sol:1:1: Error: Source file requires different compiler version (current compiler is 0.4.25+commit.59dbf8f1.Linux.g++ - note that nightly builds are considered to be strictly less than the released version\npragma solidity 0.4.24;\r\n^---------------------^\n/unique_chucks/35/0xc42c450abd63cc77fedcc22f124a7783f6958a79.sol:985:50: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n        oraclize_randomDS_setCommitment(queryId, keccak256(delay_bytes8_left, args[1], sha256(args[0]), args[2]));\r\n                                                 ^-------------------------------------------------------------^\n/unique_chucks/35/0xc42c450abd63cc77fedcc22f124a7783f6958a79.sol:1097:47: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;\r\n                                              ^---------------------------^\n/unique_chucks/35/0xc42c450abd63cc77fedcc22f124a7783f6958a79.sol:1097:37: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;\r\n                                    ^--------------------------------------^\n/unique_chucks/35/0xc42c450abd63cc77fedcc22f124a7783f6958a79.sol:1097:37: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.\n        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;\r\n                                    ^--------------------------------------^\n/unique_chucks/35/0xc42c450abd63cc77fedcc22f124a7783f6958a79.sol:1115:48: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n        if (oraclize_randomDS_args[queryId] == keccak256(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match\r\n                                               ^--------------------------------------------^\n",
    "issues": []
  }
}