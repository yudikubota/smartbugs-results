{"error": null, "issues": [{"address": 447, "code": "\n\ncontract Pyramid", "debug": "callvalue: 0x748089bf2280000\nstorage_1: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_Pyramid_0: 0xb688a36300000000000000000000000000000000000000000000000000000000\ncalldatasize_Pyramid: 0x4\n", "description": "A possible integer overflow exists in the function `join()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/36/0xb978a5f4854274bc5196bc2a4633863cb3a0a6b7.sol", "function": "join()", "lineno": 1, "title": "Integer Overflow ", "type": "Warning"}, {"address": 575, "code": " memberQueue[qu", "debug": "storage_2: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncallvalue: 0x748089bf2280000\nstorage_1: 0x0\ncalldata_Pyramid_0: 0xb688a36300000000000000000000000000000000000000000000000000000000\ncalldatasize_Pyramid: 0x4\n", "description": "A possible integer overflow exists in the function `join()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/36/0xb978a5f4854274bc5196bc2a4633863cb3a0a6b7.sol", "function": "join()", "lineno": 34, "title": "Integer Overflow ", "type": "Warning"}, {"address": 600, "code": "r(194 finney);\n          ", "debug": "The exception is triggered under the following conditions:\n\ncallvalue: 0x1809af0bb140000\nstorage_1: 0x0\nstorage_2: 0x1\ncalldata_Pyramid_0: 0xb688a36300000000000000000000000000000000000000000000000000000000\ncalldatasize_Pyramid: 0x4\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/36/0xb978a5f4854274bc5196bc2a4633863cb3a0a6b7.sol", "function": "join()", "lineno": 34, "title": "Exception state", "type": "Informational"}, {"address": 699, "code": "r(194 finney);\n            }\n        }\n\n      ", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 908\nCall at address: 908\nCall at address: 699\nCall at address: 908\nCall at address: 699\n", "filename": "/unique_chucks/36/0xb978a5f4854274bc5196bc2a4633863cb3a0a6b7.sol", "function": "join()", "lineno": 34, "title": "Multiple Calls", "type": "Information"}, {"address": 699, "code": "r(194 finney);\n            }\n        }\n\n      ", "debug": "", "description": "A possible transaction order independence vulnerability exists in function join(). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/36/0xb978a5f4854274bc5196bc2a4633863cb3a0a6b7.sol", "function": "join()", "lineno": 34, "title": "Transaction order dependence", "type": "Warning"}, {"address": 1136, "code": "}\n\n    function setMaster(address _master)", "debug": "", "description": "A possible transaction order independence vulnerability exists in function collectFee(). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/36/0xb978a5f4854274bc5196bc2a4633863cb3a0a6b7.sol", "function": "collectFee()", "lineno": 50, "title": "Transaction order dependence", "type": "Warning"}], "success": true}