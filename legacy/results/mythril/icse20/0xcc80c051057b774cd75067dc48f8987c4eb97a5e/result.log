{"error": null, "issues": [{"address": 650, "code": "  uint balance = token.balanceOf(this);\n        token.transfer(contro", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/7/0xcc80c051057b774cd75067dc48f8987c4eb97a5e.sol", "function": "fallback", "lineno": 619, "title": "Message call to external contract", "type": "Informational"}, {"address": 650, "code": "  uint balance = token.balanceOf(this);\n        token.transfer(contro", "debug": "", "description": "A possible transaction order independence vulnerability exists in function fallback. The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/7/0xcc80c051057b774cd75067dc48f8987c4eb97a5e.sol", "function": "fallback", "lineno": 619, "title": "Transaction order dependence", "type": "Warning"}, {"address": 1872, "code": "            _cloneTokenSymbol,\n            _transfersEnabled\n            );\n\n        cloneToken.changeController(msg.sender);\n\n        // An event to make the token easy to find on the blockchain\n        NewCloneToken(address(cloneToken), _snapshotBlock);\n        return address(cloneToken);\n    }\n\n////////////////\n// Generate and destroy tokens\n////////////////\n\n    /// @notice Generates `_amount` tokens that are assigned to `_owner`\n    /// @param _owner The address that will be assigned the new tokens\n    /// @param _amount The quantity of tokens generated\n    /// @return True if the tokens are generated correctly\n    function generateTokens(address _owner, uint _amount\n    ) public onlyController returns (bool) {\n        uint curTotalSupply = totalSupply();\n      ", "debug": "calldata_TokenController_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_TokenController_0: 0x6638c08700000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenController: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `createCloneToken(string,uint8,string,uint256,bool)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/7/0xcc80c051057b774cd75067dc48f8987c4eb97a5e.sol", "function": "createCloneToken(string,uint8,string,uint256,bool)", "lineno": 472, "title": "Integer Overflow ", "type": "Warning"}, {"address": 4273, "code": "aram _owner The address of the account that owns the token\n    /// @", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/7/0xcc80c051057b774cd75067dc48f8987c4eb97a5e.sol", "function": "approve(address,uint256)", "lineno": 297, "title": "Message call to external contract", "type": "Informational"}, {"address": 4273, "code": "aram _owner The address of the account that owns the token\n    /// @", "debug": "", "description": "A possible transaction order independence vulnerability exists in function approve(address,uint256). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/7/0xcc80c051057b774cd75067dc48f8987c4eb97a5e.sol", "function": "approve(address,uint256)", "lineno": 297, "title": "Transaction order dependence", "type": "Warning"}, {"address": 4469, "code": "s of the account able to transfer the t", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/7/0xcc80c051057b774cd75067dc48f8987c4eb97a5e.sol", "function": "approve(address,uint256)", "lineno": 298, "title": "State change after external call", "type": "Warning"}, {"address": 6036, "code": "ce Total amount of tokens at a specific `_blockNumber`.\n    /// @param ", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/7/0xcc80c051057b774cd75067dc48f8987c4eb97a5e.sol", "function": "balanceOfAt(address,uint256)", "lineno": 365, "title": "Message call to external contract", "type": "Informational"}, {"address": 8611, "code": "/ @dev This function makes it easy to get the total pledged fees\n", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/7/0xcc80c051057b774cd75067dc48f8987c4eb97a5e.sol", "function": "totalSupply()", "lineno": 393, "title": "Message call to external contract", "type": "Informational"}, {"address": 9222, "code": "\n\n   /// @notice Pledges fees to the token holders, later to be claime", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/7/0xcc80c051057b774cd75067dc48f8987c4eb97a5e.sol", "function": "reducePledgedFees(uint256)", "lineno": 425, "title": "Message call to external contract", "type": "Informational"}], "success": true}