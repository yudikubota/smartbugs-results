{
  "contract": "0xe769d988ceda1559aee07963e59e62bd730dbba6",
  "tool": "mythril",
  "start": 1563469080.9908442,
  "end": 1563469197.0341597,
  "duration": 116.04331541061401,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 2443,
        "code": ") {\n    bool timeLi",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/1/0xe769d988ceda1559aee07963e59e62bd730dbba6.sol",
        "function": "fallback",
        "lineno": 339,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 2443,
        "code": ") {\n    bool timeLi",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2774\nCall at address: 2774\nCall at address: 2774\nCall at address: 2774\n",
        "filename": "/unique_chucks/1/0xe769d988ceda1559aee07963e59e62bd730dbba6.sol",
        "function": "fallback",
        "lineno": 339,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 2596,
        "code": "dsWallet\n  }\n ",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/1/0xe769d988ceda1559aee07963e59e62bd730dbba6.sol",
        "function": "fallback",
        "lineno": 362,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 2774,
        "code": "address beneficiary",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/1/0xe769d988ceda1559aee07963e59e62bd730dbba6.sol",
        "function": "fallback",
        "lineno": 366,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 3646,
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/1/0xe769d988ceda1559aee07963e59e62bd730dbba6.sol",
        "function": "reclaimToken(address)",
        "lineno": 435,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 3646,
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3870\n",
        "filename": "/unique_chucks/1/0xe769d988ceda1559aee07963e59e62bd730dbba6.sol",
        "function": "reclaimToken(address)",
        "lineno": 435,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 3870,
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/1/0xe769d988ceda1559aee07963e59e62bd730dbba6.sol",
        "function": "reclaimToken(address)",
        "lineno": 435,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 4355,
        "code": "ction finishMinting()",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/1/0xe769d988ceda1559aee07963e59e62bd730dbba6.sol",
        "function": "startTransfers()",
        "lineno": 406,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 4606,
        "code": "alSupply();\t\t\t\n\ttoke",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/1/0xe769d988ceda1559aee07963e59e62bd730dbba6.sol",
        "function": "stopTransfers()",
        "lineno": 408,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 7338,
        "code": "e {rate = rateICO;}",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/1/0xe769d988ceda1559aee07963e59e62bd730dbba6.sol",
        "function": "finishMinting()",
        "lineno": 352,
        "title": "Message call to external contract",
        "type": "Informational"
      }
    ],
    "success": true
  }
}