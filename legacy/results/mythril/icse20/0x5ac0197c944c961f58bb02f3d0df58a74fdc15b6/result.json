{
  "contract": "0x5ac0197c944c961f58bb02f3d0df58a74fdc15b6",
  "tool": "mythril",
  "start": 1563283495.5614007,
  "end": 1563289227.6695654,
  "duration": 5732.1081647872925,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 730,
        "code": "kensPossibleToBuy > tokenSupply.limit) {\n\t\t\t\t\t",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_10: 0x0\nstorage_9: 0x1\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\nUDiv(storage_7,_256): 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncallvalue: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_TokenEscrow_0: 0x6ddde0300000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenEscrow: 0x4\nstorage_11: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0x5ac0197c944c961f58bb02f3d0df58a74fdc15b6.sol",
        "function": "fallback",
        "lineno": 215,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 4779,
        "code": "s\n\t\t\tif (msg.sender == o",
        "debug": "calldata_TokenEscrow_32 + 4: 0xc290137095b13347e55005a6dc184559e0489f1233480050d0fb4bba17d34179\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TokenEscrow_4: 0x9c9efb7ae5acd378025256a3945f5859076e809243093d9ecae2636c9fd28979\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xc290137095b13347e55005a6dc184559e0489f1233480050d0fb4bba17d34179\nstorage_7: 0x0\ncalldata_TokenEscrow_4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_TokenEscrow_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenEscrow: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `transfer(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x5ac0197c944c961f58bb02f3d0df58a74fdc15b6.sol",
        "function": "transfer(address,uint256)",
        "lineno": 80,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 5213,
        "code": "/ Modifiers\n\tmodifier owneronly { i",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_TokenEscrow_4: 0x3\ncalldata_TokenEscrow_0: 0xc0c8196900000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenEscrow: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0x5ac0197c944c961f58bb02f3d0df58a74fdc15b6.sol",
        "function": "_function_0xc0c81969",
        "lineno": 43,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 5602,
        "code": "tract constructor\n\t */\n\tfunction TokenEscrow() {\n\t\towner = msg.send",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_contracts/0x5ac0197c944c961f58bb02f3d0df58a74fdc15b6.sol",
        "function": "convert()",
        "lineno": 131,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 5602,
        "code": "tract constructor\n\t */\n\tfunction TokenEscrow() {\n\t\towner = msg.send",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function convert(). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_contracts/0x5ac0197c944c961f58bb02f3d0df58a74fdc15b6.sol",
        "function": "convert()",
        "lineno": 131,
        "title": "Transaction order dependence",
        "type": "Warning"
      }
    ],
    "success": true
  }
}