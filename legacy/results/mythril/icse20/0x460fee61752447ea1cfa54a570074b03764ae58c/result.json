{
  "contract": "0x460fee61752447ea1cfa54a570074b03764ae58c",
  "tool": "mythril",
  "start": 1563619397.44134,
  "end": 1563619461.018311,
  "duration": 63.57697105407715,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 2551,
        "code": "v(stakeHolders.length);\n    }\n",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/24/0x460fee61752447ea1cfa54a570074b03764ae58c.sol",
        "function": "fallback",
        "lineno": 141,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 2551,
        "code": "v(stakeHolders.length);\n    }\n",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2551\n",
        "filename": "/unique_chucks/24/0x460fee61752447ea1cfa54a570074b03764ae58c.sol",
        "function": "_function_0x63453ae1",
        "lineno": 141,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 2551,
        "code": "v(stakeHolders.length);\n    }\n",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function fallback. The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/24/0x460fee61752447ea1cfa54a570074b03764ae58c.sol",
        "function": "fallback",
        "lineno": 141,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 2862,
        "code": "dress indexed _token, uint256",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_WeightedTokenDistributor_4: 0x0\nstorage_2: 0x0\ncalldata_WeightedTokenDistributor_0: 0xacad41a400000000000000000000000000000000000000000000000000000000\ncalldatasize_WeightedTokenDistributor: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/24/0x460fee61752447ea1cfa54a570074b03764ae58c.sol",
        "function": "_function_0xacad41a4",
        "lineno": 108,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3596,
        "code": "\n        uint256 perStakeHolder = ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/24/0x460fee61752447ea1cfa54a570074b03764ae58c.sol",
        "function": "fallback",
        "lineno": 163,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 3596,
        "code": "\n        uint256 perStakeHolder = ",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function fallback. The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/24/0x460fee61752447ea1cfa54a570074b03764ae58c.sol",
        "function": "fallback",
        "lineno": 163,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 3677,
        "code": "@title Ownable",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_2: 0xffff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\nUDiv(storage_29102676481673041902632991033461445430619272659676223336789171408008386403022,\n_____256): 0x1\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\nUDiv(storage_29102676481673041902632991033461445430619272659676223336789171408008386403023,\n_____256): 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_WeightedTokenDistributor_0: 0x6aba0e100000000000000000000000000000000000000000000000000000000\ncalldatasize_WeightedTokenDistributor: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/24/0x460fee61752447ea1cfa54a570074b03764ae58c.sol",
        "function": "_function_0x06aba0e1",
        "lineno": 51,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3755,
        "code": "ubtra",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_WeightedTokenDistributor_0: 0xa0faf6a100000000000000000000000000000000000000000000000000000000\ncalldatasize_WeightedTokenDistributor: 0x4\ncalldata_WeightedTokenDistributor_32 + 4: 0x0\ncalldata_WeightedTokenDistributor_4: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/24/0x460fee61752447ea1cfa54a570074b03764ae58c.sol",
        "function": "_function_0xa0faf6a1",
        "lineno": 33,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}