{"error": null, "issues": [{"address": 528, "code": "nder==Admin || ms", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/18/0x7e4c6366d709389c33ca0c8e4d0f8598dd9a2fe4.sol", "function": "Join(uint256,uint256,uint256,uint256,uint256)", "lineno": 39, "title": "Message call to external contract", "type": "Informational"}, {"address": 528, "code": "nder==Admin || ms", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1346\nCall at address: 1117\nCall at address: 1346\nCall at address: 1117\nCall at address: 1346\nCall at address: 1117\nCall at address: 1346\nCall at address: 1117\nCall at address: 1346\nCall at address: 1117\nCall at address: 1346\nCall at address: 1117\nCall at address: 1346\nCall at address: 1117\nCall at address: 1346\nCall at address: 1117\nCall at address: 1346\nCall at address: 1117\nCall at address: 1346\nCall at address: 1117\nCall at address: 1346\nCall at address: 1117\nCall at address: 1346\nCall at address: 1117\nCall at address: 1346\nCall at address: 1117\nCall at address: 1346\nCall at address: 1117\nCall at address: 1346\nCall at address: 1117\nCall at address: 1346\nCall at address: 1117\nCall at address: 1346\nCall at address: 1117\nCall at address: 1346\nCall at address: 1117\nCall at address: 1346\nCall at address: 1117\nCall at address: 1346\nCall at address: 1117\nCall at address: 1346\nCall at address: 1117\nCall at address: 1346\nCall at address: 1117\nCall at address: 1346\nCall at address: 1117\nCall at address: 1346\nCall at address: 1117\nCall at address: 1346\nCall at address: 1117\nCall at address: 1346\nCall at address: 1117\nCall at address: 1346\nCall at address: 1117\nCall at address: 1346\nCall at address: 1117\nCall at address: 1346\nCall at address: 1117\nCall at address: 1346\nCall at address: 1117\nCall at address: 1346\nCall at address: 1117\nCall at address: 1346\nCall at address: 1117\nCall at address: 1346\nCall at address: 1117\nCall at address: 1346\nCall at address: 1117\nCall at address: 1346\nCall at address: 1117\nCall at address: 1346\nCall at address: 1117\nCall at address: 1346\nCall at address: 1117\nCall at address: 1346\nCall at address: 1117\nCall at address: 1346\nCall at address: 1117\nCall at address: 1346\nCall at address: 1117\nCall at address: 1346\nCall at address: 1117\nCall at address: 1346\nCall at address: 1117\nCall at address: 1346\nCall at address: 1117\nCall at address: 1346\nCall at address: 1117\nCall at address: 1346\nCall at address: 1117\nCall at address: 1346\nCall at address: 1117\nCall at address: 1346\nCall at address: 1117\nCall at address: 1346\nCall at address: 1117\nCall at address: 1346\nCall at address: 1117\nCall at address: 1346\nCall at address: 1117\nCall at address: 1346\nCall at address: 1117\nCall at address: 1346\nCall at address: 1117\nCall at address: 1346\nCall at address: 1117\nCall at address: 1346\nCall at address: 1117\nCall at address: 1346\nCall at address: 1117\nCall at address: 1346\nCall at address: 1117\nCall at address: 1346\nCall at address: 1117\nCall at address: 1346\nCall at address: 1117\nCall at address: 1346\nCall at address: 1117\nCall at address: 1346\nCall at address: 1117\nCall at address: 1346\nCall at address: 1117\nCall at address: 1346\nCall at address: 1117\nCall at address: 1346\nCall at address: 1117\nCall at address: 1346\nCall at address: 1117\n", "filename": "/unique_chucks/18/0x7e4c6366d709389c33ca0c8e4d0f8598dd9a2fe4.sol", "function": "Join(uint256,uint256,uint256,uint256,uint256)", "lineno": 39, "title": "Multiple Calls", "type": "Information"}, {"address": 1117, "code": "(msg.value);\n        FEA.UserJoin(msg.sender,msg.valu", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1346\n", "filename": "/unique_chucks/18/0x7e4c6366d709389c33ca0c8e4d0f8598dd9a2fe4.sol", "function": "Join(uint256,uint256,uint256,uint256,uint256)", "lineno": 43, "title": "Multiple Calls", "type": "Information"}, {"address": 1346, "code": "GuessETH,GuessLTC,GuessBCH,GuessXMR);\n        emit ProofOfEntry(msg.sender,msg.", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/18/0x7e4c6366d709389c33ca0c8e4d0f8598dd9a2fe4.sol", "function": "Join(uint256,uint256,uint256,uint256,uint256)", "lineno": 44, "title": "Message call to external contract", "type": "Informational"}, {"address": 1680, "code": "der);\n        uint FeePM=FEA.", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/18/0x7e4c6366d709389c33ca0c8e4d0f8598dd9a2fe4.sol", "function": "QuitGameAndRefund()", "lineno": 77, "title": "Message call to external contract", "type": "Informational"}, {"address": 1680, "code": "der);\n        uint FeePM=FEA.", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2020\nCall at address: 1859\n", "filename": "/unique_chucks/18/0x7e4c6366d709389c33ca0c8e4d0f8598dd9a2fe4.sol", "function": "QuitGameAndRefund()", "lineno": 77, "title": "Multiple Calls", "type": "Information"}, {"address": 1859, "code": "     emit ProofOfQuitting(ms", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/18/0x7e4c6366d709389c33ca0c8e4d0f8598dd9a2fe4.sol", "function": "QuitGameAndRefund()", "lineno": 79, "title": "Message call to external contract", "type": "Informational"}, {"address": 1859, "code": "     emit ProofOfQuitting(ms", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2020\n", "filename": "/unique_chucks/18/0x7e4c6366d709389c33ca0c8e4d0f8598dd9a2fe4.sol", "function": "QuitGameAndRefund()", "lineno": 79, "title": "Multiple Calls", "type": "Information"}, {"address": 2020, "code": "00-FeePM)/1000000,Amou", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/18/0x7e4c6366d709389c33ca0c8e4d0f8598dd9a2fe4.sol", "function": "QuitGameAndRefund()", "lineno": 79, "title": "Message call to external contract", "type": "Informational"}, {"address": 2334, "code": "er==Adam || msg.s", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/18/0x7e4c6366d709389c33ca0c8e4d0f8598dd9a2fe4.sol", "function": "WisdomOfTheCrowd()", "lineno": 62, "title": "Message call to external contract", "type": "Informational"}, {"address": 2334, "code": "er==Adam || msg.s", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2958\nCall at address: 2958\nCall at address: 2958\nCall at address: 2958\nCall at address: 2958\nCall at address: 2958\nCall at address: 2958\nCall at address: 2958\nCall at address: 2958\nCall at address: 2958\nCall at address: 2958\nCall at address: 2958\nCall at address: 2958\nCall at address: 2958\nCall at address: 2958\nCall at address: 2958\nCall at address: 2958\nCall at address: 2958\nCall at address: 2958\nCall at address: 2958\nCall at address: 2958\nCall at address: 2958\nCall at address: 2958\nCall at address: 2958\nCall at address: 2958\nCall at address: 2958\nCall at address: 2958\nCall at address: 2958\nCall at address: 2958\nCall at address: 2958\nCall at address: 2958\nCall at address: 2958\nCall at address: 2958\nCall at address: 2958\nCall at address: 2958\nCall at address: 2958\nCall at address: 2958\nCall at address: 2958\nCall at address: 2958\nCall at address: 2958\nCall at address: 2958\nCall at address: 2958\nCall at address: 2958\nCall at address: 2958\nCall at address: 2958\nCall at address: 2958\nCall at address: 2958\nCall at address: 2958\nCall at address: 2958\nCall at address: 2958\nCall at address: 2958\nCall at address: 2958\nCall at address: 2958\nCall at address: 2958\nCall at address: 2958\nCall at address: 2958\nCall at address: 2958\nCall at address: 2958\nCall at address: 2958\nCall at address: 2958\nCall at address: 2958\nCall at address: 2958\nCall at address: 2958\nCall at address: 2958\n", "filename": "/unique_chucks/18/0x7e4c6366d709389c33ca0c8e4d0f8598dd9a2fe4.sol", "function": "WisdomOfTheCrowd()", "lineno": 62, "title": "Multiple Calls", "type": "Information"}, {"address": 2958, "code": "ess.transfer(msg.value);\n", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/18/0x7e4c6366d709389c33ca0c8e4d0f8598dd9a2fe4.sol", "function": "WisdomOfTheCrowd()", "lineno": 67, "title": "Message call to external contract", "type": "Informational"}, {"address": 3908, "code": "ue);\n        FiveElementsAdministration FEA=FiveEleme", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 4356\nCall at address: 4120\n", "filename": "/unique_chucks/18/0x7e4c6366d709389c33ca0c8e4d0f8598dd9a2fe4.sol", "function": "BetMore()", "lineno": 51, "title": "Multiple Calls", "type": "Information"}, {"address": 4120, "code": "mit ProofOfBettingMore(msg.sender,msg.val", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/18/0x7e4c6366d709389c33ca0c8e4d0f8598dd9a2fe4.sol", "function": "BetMore()", "lineno": 54, "title": "Message call to external contract", "type": "Informational"}, {"address": 4120, "code": "mit ProofOfBettingMore(msg.sender,msg.val", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 4356\n", "filename": "/unique_chucks/18/0x7e4c6366d709389c33ca0c8e4d0f8598dd9a2fe4.sol", "function": "BetMore()", "lineno": 54, "title": "Multiple Calls", "type": "Information"}, {"address": 4356, "code": "nction WisdomOfTheCrowd() pu", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/18/0x7e4c6366d709389c33ca0c8e4d0f8598dd9a2fe4.sol", "function": "BetMore()", "lineno": 58, "title": "Message call to external contract", "type": "Informational"}, {"address": 4474, "code": "tract FiveElements{\n    \n    \n    uint[5] AvgGuesses;\n    address constant private Admin=0x92Bf51aB8C48B93a96F8dde8dF07A1504aA393fD;\n    address constant private Adam=0x9640a35e5345CB0639C4DD0593567F9334FfeB8a;\n    address constant private Tummy=0x820090F4D39a9585a327cc39ba483f8fE7a9DA84;\n    address constant private Willy=0xA4757a60d41Ff94652104e4BCdB2936591c74d1D;\n    address constant private Nicky=0x89473CD97F49E6d991B68e880f4162e2CBaC3561;\n    address constant private Artem=0xA7e8AFa092FAa27F06942480D28edE6fE73E5F88;\n    address constant private FiveElementsAdministrationAddress=0x1f165ddAb085917437C6B15A5ed88E5B2c0B2dd9;\n    \n    \n    //event LiveRankAndPrizePool();\n    \n    \n    event ProofOfEntry(address indexed User,uint EntryPaid,uint GuessBTC,uint GuessETH,uint GuessLTC,uint GuessBCH,uint GuessXMR);\n    \n    \n    event WisdomOfCrowdsEntry(address indexed User,uint EntryPaid,uint AvgGuessBTC,uint AvgGuessETH,uint AvgGuessLTC,uint AvgGuessBCH,uint AvgGuessXMR,uint ActivationCount);\n    \n    \n    event ProofOfBettingMore(address indexed User,uint EtherPaid,uint NewEntryBalance);\n    \n    \n    event ProofOfQuitting(address indexed User,uint EtherRefund,uint TotalPaid);\n    \n    \n    event ReceivedFunds(address indexed Sender,uint Value);\n    \n    \n    function Join(uint GuessBTC,uint GuessETH,uint GuessLTC,uint GuessBCH,uint GuessXMR) public payable{\n        require(msg.value>0);\n        FiveElementsAdministration FEA=FiveElementsAdministration(FiveElementsAdministrationAddress);\n        uint Min=FEA.GetMinEntry();\n        if (msg.sender==Admin || msg.sender==Adam || msg.sender==Tummy || msg.sender==Willy || msg.sender==Nicky || msg.sender==Artem){\n        }else{\n            require(msg.value>=Min);\n        }\n        FiveElementsAdministrationAddress.transfer(msg.value);\n        FEA.UserJoin(msg.sender,msg.value,GuessBTC,GuessETH,GuessLTC,GuessBCH,GuessXMR);\n        emit ProofOfEntry(msg.sender,msg.value,GuessBTC,GuessETH,GuessLTC,GuessBCH,GuessXMR);\n    }\n    \n    \n    function BetMore() public payable{\n        require(msg.value>0);\n        FiveElementsAdministrationAddress.transfer(msg.value);\n        FiveElementsAdministration FEA=FiveElementsAdministration(FiveElementsAdministrationAddress);\n        FEA.UpdateBetAmount(msg.sender,msg.value);\n        emit ProofOfBettingMore(msg.sender,msg.value,FEA.GetBetAmount(msg.sender));\n    }\n    \n    \n    function WisdomOfTheCrowd() public payable{\n        require(msg.value>0);\n        FiveElementsAdministration FEA=FiveElementsAdministration(FiveElementsAdministrationAddress);\n        uint Min=FEA.GetMinEntry();\n        if (msg.sender==Admin || msg.sender==Adam || msg.sender==Tummy || msg.sender==Willy || msg.sender==Nicky || msg.sender==Artem){\n        }else{\n            require(msg.value>=Min);\n        }\n        AvgGuesses=FEA.AverageOfAllGuesses();\n        FiveElementsAdministrationAddress.transfer(msg.value);\n        FEA.UserJoin(msg.sender,msg.value,AvgGuesses[0],AvgGuesses[1],AvgGuesses[2],AvgGuesses[3],AvgGuesses[4]);\n        emit WisdomOfCrowdsEntry(msg.sender,msg.value,AvgGuesses[0],AvgGuesses[1],AvgGuesses[2],AvgGuesses[3],AvgGuesses[4],FEA.GetWisdomOfCrowdsActivationCount());\n        delete AvgGuesses;\n    }\n    \n    \n    function QuitGameAndRefund(){\n        FiveElementsAdministration FEA=FiveElementsAdministration(FiveElementsAdministrationAddress);\n        FEA.QuitAndRefund(msg.sender);\n        uint Amount=FEA.GetBetAmount(msg.sender);\n        uint FeePM=FEA.GetFeePerMillion();\n        emit ProofOfQuitting(msg.sender,Amount*(1000000-FeePM)/1000000,Amount);\n    }\n    \n    \n    function () payable{\n        FiveElementsAdministrationAddress.transfer(msg.value);\n        emit ReceivedFunds(msg.sender,msg.value);\n    }\n    \n    \n}\n\n\ncontract FiveElementsAdministration{\n    \n    \n    function GetBetAmount(address User", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/18/0x7e4c6366d709389c33ca0c8e4d0f8598dd9a2fe4.sol", "function": "WisdomOfTheCrowd()", "lineno": 4, "title": "State change after external call", "type": "Warning"}], "success": true}