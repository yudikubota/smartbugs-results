{"error": null, "issues": [{"address": 738, "code": " public migrationSourcesOnly {\n        migrationSources = _otherMigrationSources;\n        migrationSources.push(msg.sender);\n    }\n\n    function airdrop(address[] _targets, uint256 _value) public migr", "debug": "calldata_MigrationRecipientV1Interface_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_MigrationRecipientV1Interface_0: 0x479a5d5300000000000000000000000000000000000000000000000000000000\ncalldatasize_MigrationRecipientV1Interface: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `setOtherMigrationSources(address[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x5f8a40cd6198c2fae0397cd5464057091e92a2e5.sol", "function": "setOtherMigrationSources(address[])", "lineno": 68, "title": "Integer Overflow ", "type": "Warning"}, {"address": 750, "code": " public migrationSourcesOnly {\n        migrationSources = _otherMigrationSources;\n        migrationSources.push(msg.sender);\n    }\n\n    function airdrop(address[] _targets, uint256 _value) public migr", "debug": "calldata_MigrationRecipientV1Interface_4 + calldata_MigrationRecipientV1Interface_4: 0x800000000000000000000000000000000000000000000000000000000000000\ncalldata_MigrationRecipientV1Interface_0: 0x479a5d5300000000000000000000000000000000000000000000000000000000\ncalldatasize_MigrationRecipientV1Interface: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `setOtherMigrationSources(address[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x5f8a40cd6198c2fae0397cd5464057091e92a2e5.sol", "function": "setOtherMigrationSources(address[])", "lineno": 68, "title": "Integer Overflow ", "type": "Warning"}, {"address": 753, "code": " public migrationSourcesOnly {\n        migrationSources = _otherMigrationSources;\n        migrationSources.push(msg.sender);\n    }\n\n    function airdrop(address[] _targets, uint256 _value) public migr", "debug": "calldata_MigrationRecipientV1Interface_4 + calldata_MigrationRecipientV1Interface_4: 0x7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_MigrationRecipientV1Interface_0: 0x479a5d5300000000000000000000000000000000000000000000000000000000\ncalldatasize_MigrationRecipientV1Interface: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `setOtherMigrationSources(address[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x5f8a40cd6198c2fae0397cd5464057091e92a2e5.sol", "function": "setOtherMigrationSources(address[])", "lineno": 68, "title": "Integer Overflow ", "type": "Warning"}, {"address": 759, "code": " public migrationSourcesOnly {\n        migrationSources = _otherMigrationSources;\n        migrationSources.push(msg.sender);\n    }\n\n    function airdrop(address[] _targets, uint256 _value) public migr", "debug": "calldata_MigrationRecipientV1Interface_4 + calldata_MigrationRecipientV1Interface_4: 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffb\ncalldata_MigrationRecipientV1Interface_0: 0x479a5d5300000000000000000000000000000000000000000000000000000000\ncalldatasize_MigrationRecipientV1Interface: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `setOtherMigrationSources(address[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x5f8a40cd6198c2fae0397cd5464057091e92a2e5.sol", "function": "setOtherMigrationSources(address[])", "lineno": 68, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1406, "code": "rcesOnly {\n        totalSupply += _targets.length * _value;\n        for (uint256 i = 0; i < _targets.length; i++) {\n            address target = _targets[i];\n            balances[target] += _value;\n            Transfer(0x0, target, _value);\n        }\n    }\n\n    function () public {\n    }\n\n    modifier onlyIfMigrating() {\n        requ", "debug": "calldata_MigrationRecipientV1Interface_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_MigrationRecipientV1Interface_0: 0xc204642c00000000000000000000000000000000000000000000000000000000\ncalldatasize_MigrationRecipientV1Interface: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `airdrop(address[],uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x5f8a40cd6198c2fae0397cd5464057091e92a2e5.sol", "function": "airdrop(address[],uint256)", "lineno": 73, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1418, "code": "rcesOnly {\n        totalSupply += _targets.length * _value;\n        for (uint256 i = 0; i < _targets.length; i++) {\n            address target = _targets[i];\n            balances[target] += _value;\n            Transfer(0x0, target, _value);\n        }\n    }\n\n    function () public {\n    }\n\n    modifier onlyIfMigrating() {\n        requ", "debug": "calldata_MigrationRecipientV1Interface_4 + calldata_MigrationRecipientV1Interface_4: 0x800000000000000000000000000000000000000000000000000000000000000\ncalldata_MigrationRecipientV1Interface_0: 0xc204642c00000000000000000000000000000000000000000000000000000000\ncalldatasize_MigrationRecipientV1Interface: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `airdrop(address[],uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x5f8a40cd6198c2fae0397cd5464057091e92a2e5.sol", "function": "airdrop(address[],uint256)", "lineno": 73, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1421, "code": "rcesOnly {\n        totalSupply += _targets.length * _value;\n        for (uint256 i = 0; i < _targets.length; i++) {\n            address target = _targets[i];\n            balances[target] += _value;\n            Transfer(0x0, target, _value);\n        }\n    }\n\n    function () public {\n    }\n\n    modifier onlyIfMigrating() {\n        requ", "debug": "calldata_MigrationRecipientV1Interface_4 + calldata_MigrationRecipientV1Interface_4: 0x7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_MigrationRecipientV1Interface_0: 0xc204642c00000000000000000000000000000000000000000000000000000000\ncalldatasize_MigrationRecipientV1Interface: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `airdrop(address[],uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x5f8a40cd6198c2fae0397cd5464057091e92a2e5.sol", "function": "airdrop(address[],uint256)", "lineno": 73, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1427, "code": "rcesOnly {\n        totalSupply += _targets.length * _value;\n        for (uint256 i = 0; i < _targets.length; i++) {\n            address target = _targets[i];\n            balances[target] += _value;\n            Transfer(0x0, target, _value);\n        }\n    }\n\n    function () public {\n    }\n\n    modifier onlyIfMigrating() {\n        requ", "debug": "calldata_MigrationRecipientV1Interface_4 + calldata_MigrationRecipientV1Interface_4: 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffb\ncalldata_MigrationRecipientV1Interface_0: 0xc204642c00000000000000000000000000000000000000000000000000000000\ncalldatasize_MigrationRecipientV1Interface: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `airdrop(address[],uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x5f8a40cd6198c2fae0397cd5464057091e92a2e5.sol", "function": "airdrop(address[],uint256)", "lineno": 73, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1919, "code": "y not be longer than 256\n    function arrayContainsAd", "debug": "calldata_MigrationRecipientV1Interface_4 + calldata_MigrationRecipientV1Interface_4: 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa\ncalldata_MigrationRecipientV1Interface_0: 0x479a5d5300000000000000000000000000000000000000000000000000000000\ncalldatasize_MigrationRecipientV1Interface: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `setOtherMigrationSources(address[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x5f8a40cd6198c2fae0397cd5464057091e92a2e5.sol", "function": "setOtherMigrationSources(address[])", "lineno": 100, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1931, "code": "y not be longer than 256\n    function arrayContainsAd", "debug": "storage_7: 0x8421003f084001f4210815cf88407c00000000000000037c1d000e8d178001f\ncalldata_MigrationRecipientV1Interface_0: 0x479a5d5300000000000000000000000000000000000000000000000000000000\ncalldatasize_MigrationRecipientV1Interface: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `setOtherMigrationSources(address[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x5f8a40cd6198c2fae0397cd5464057091e92a2e5.sol", "function": "setOtherMigrationSources(address[])", "lineno": 100, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1933, "code": "y not be longer than 256\n    function arrayContainsAd", "debug": "storage_7: 0x532548f9059354633fe6288fb13f64fa6aeef4ff182492009d90082476c92b8\ncalldata_MigrationRecipientV1Interface_4 + calldata_MigrationRecipientV1Interface_4: 0x3384aa754d7307733fb59ec7758063f368ee92b850e49aab226ff7da76d6d46\ncalldata_MigrationRecipientV1Interface_0: 0x479a5d5300000000000000000000000000000000000000000000000000000000\ncalldatasize_MigrationRecipientV1Interface: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `setOtherMigrationSources(address[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x5f8a40cd6198c2fae0397cd5464057091e92a2e5.sol", "function": "setOtherMigrationSources(address[])", "lineno": 100, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2006, "code": "y not be longer than 256\n    function arrayContainsAd", "debug": "calldata_MigrationRecipientV1Interface_4 + calldata_MigrationRecipientV1Interface_4: 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9\nstorage_7: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_MigrationRecipientV1Interface_0: 0x479a5d5300000000000000000000000000000000000000000000000000000000\ncalldatasize_MigrationRecipientV1Interface: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `setOtherMigrationSources(address[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x5f8a40cd6198c2fae0397cd5464057091e92a2e5.sol", "function": "setOtherMigrationSources(address[])", "lineno": 100, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2214, "code": "y not be longer than 256\n    function arrayContainsAd", "debug": "storage_7: 0x8421003f084001f4210815cf88407c00000000000000037c1d000e8d178001f\ncalldata_MigrationRecipientV1Interface_0: 0x4f840c2b00000000000000000000000000000000000000000000000000000000\ncalldatasize_MigrationRecipientV1Interface: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `setMigrateToAddress(address)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x5f8a40cd6198c2fae0397cd5464057091e92a2e5.sol", "function": "setMigrateToAddress(address)", "lineno": 100, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2216, "code": "y not be longer than 256\n    function arrayContainsAd", "debug": "storage_7: 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffb\ncalldata_MigrationRecipientV1Interface_0: 0x4f840c2b00000000000000000000000000000000000000000000000000000000\ncalldatasize_MigrationRecipientV1Interface: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `setMigrateToAddress(address)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x5f8a40cd6198c2fae0397cd5464057091e92a2e5.sol", "function": "setMigrateToAddress(address)", "lineno": 100, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2779, "code": "ender] = 0;\n          ", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_0: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_6: 0xffffffffffffffffffffffffffffffffffffffff00\ncalldata_MigrationRecipientV1Interface_0: 0x73e1851b00000000000000000000000000000000000000000000000000000000\ncalldatasize_MigrationRecipientV1Interface: 0x4\ncallvalue: 0x0\n", "description": "A possible integer underflow exists in the function `migrateMyTokens()`.\nThe subtraction may result in a value < 0.", "filename": "/unique_contracts/0x5f8a40cd6198c2fae0397cd5464057091e92a2e5.sol", "function": "migrateMyTokens()", "lineno": 52, "title": "Integer Underflow", "type": "Warning"}, {"address": 3055, "code": "ateTokensV1(msg.sender, balance);\n        }\n    }\n\n    // Receive tokens from an old", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_contracts/0x5f8a40cd6198c2fae0397cd5464057091e92a2e5.sol", "function": "migrateMyTokens()", "lineno": 53, "title": "Message call to external contract", "type": "Informational"}, {"address": 3055, "code": "ateTokensV1(msg.sender, balance);\n        }\n    }\n\n    // Receive tokens from an old", "debug": "", "description": "A possible transaction order independence vulnerability exists in function migrateMyTokens(). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_contracts/0x5f8a40cd6198c2fae0397cd5464057091e92a2e5.sol", "function": "migrateMyTokens()", "lineno": 53, "title": "Transaction order dependence", "type": "Warning"}, {"address": 3541, "code": "ransfer(msg.sender, _to", "debug": "calldata_MigrationRecipientV1Interface_32 + 4: 0xb135d1e4a0020a903239033aa9b45a69384c906b52a71e0575829626809581fd\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_MigrationRecipientV1Interface_4: 0xa7e6e147bc0ca40011bf9bbaadf7593cb8cc90b17cb7d73775f0d8eb1435e9c1\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xb135d1e4a0020a903239033aa9b45a69384c906b52a71e0575829626809581fd\nstorage_6: 0x0\ncalldata_MigrationRecipientV1Interface_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncalldatasize_MigrationRecipientV1Interface: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `transfer(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x5f8a40cd6198c2fae0397cd5464057091e92a2e5.sol", "function": "transfer(address,uint256)", "lineno": 40, "title": "Integer Overflow ", "type": "Warning"}, {"address": 3705, "code": "y not be longer than 256\n    function arrayContainsAd", "debug": "calldata_MigrationRecipientV1Interface_4 + calldata_MigrationRecipientV1Interface_4: 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa\ncalldata_MigrationRecipientV1Interface_0: 0xc204642c00000000000000000000000000000000000000000000000000000000\ncalldatasize_MigrationRecipientV1Interface: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `airdrop(address[],uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x5f8a40cd6198c2fae0397cd5464057091e92a2e5.sol", "function": "airdrop(address[],uint256)", "lineno": 100, "title": "Integer Overflow ", "type": "Warning"}, {"address": 3717, "code": "y not be longer than 256\n    function arrayContainsAd", "debug": "storage_7: 0x8421003f084001f4210815cf88407c00000000000000037c1d000e8d178001f\ncalldata_MigrationRecipientV1Interface_0: 0xc204642c00000000000000000000000000000000000000000000000000000000\ncalldatasize_MigrationRecipientV1Interface: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `airdrop(address[],uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x5f8a40cd6198c2fae0397cd5464057091e92a2e5.sol", "function": "airdrop(address[],uint256)", "lineno": 100, "title": "Integer Overflow ", "type": "Warning"}, {"address": 3719, "code": "y not be longer than 256\n    function arrayContainsAd", "debug": "storage_7: 0x532548f9059354633fe6288fb13f64fa6aeef4ff182492009d90082476c92b8\ncalldata_MigrationRecipientV1Interface_4 + calldata_MigrationRecipientV1Interface_4: 0x3384aa754d7307733fb59ec7758063f368ee92b850e49aab226ff7da76d6d46\ncalldata_MigrationRecipientV1Interface_0: 0xc204642c00000000000000000000000000000000000000000000000000000000\ncalldatasize_MigrationRecipientV1Interface: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `airdrop(address[],uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x5f8a40cd6198c2fae0397cd5464057091e92a2e5.sol", "function": "airdrop(address[],uint256)", "lineno": 100, "title": "Integer Overflow ", "type": "Warning"}, {"address": 3792, "code": "y not be longer than 256\n    function arrayContainsAd", "debug": "calldata_MigrationRecipientV1Interface_4 + calldata_MigrationRecipientV1Interface_4: 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9\nstorage_7: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_MigrationRecipientV1Interface_0: 0xc204642c00000000000000000000000000000000000000000000000000000000\ncalldatasize_MigrationRecipientV1Interface: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `airdrop(address[],uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x5f8a40cd6198c2fae0397cd5464057091e92a2e5.sol", "function": "airdrop(address[],uint256)", "lineno": 100, "title": "Integer Overflow ", "type": "Warning"}, {"address": 4117, "code": "y not be longer than 256\n    function arrayContainsAd", "debug": "storage_7: 0x8421003f084001f4210815cf88407c00000000000000037c1d000e8d178001f\ncalldata_MigrationRecipientV1Interface_0: 0xfca5d05700000000000000000000000000000000000000000000000000000000\ncalldatasize_MigrationRecipientV1Interface: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `migrateTokensV1(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x5f8a40cd6198c2fae0397cd5464057091e92a2e5.sol", "function": "migrateTokensV1(address,uint256)", "lineno": 100, "title": "Integer Overflow ", "type": "Warning"}, {"address": 4119, "code": "y not be longer than 256\n    function arrayContainsAd", "debug": "storage_7: 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffb\ncalldata_MigrationRecipientV1Interface_0: 0xfca5d05700000000000000000000000000000000000000000000000000000000\ncalldatasize_MigrationRecipientV1Interface: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `migrateTokensV1(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x5f8a40cd6198c2fae0397cd5464057091e92a2e5.sol", "function": "migrateTokensV1(address,uint256)", "lineno": 100, "title": "Integer Overflow ", "type": "Warning"}, {"address": 4553, "code": " is ERC20TokenInterface, MigrationRecipientV1Interface {\n    string public name = \"Swag\";\n    string public symbol = \"SWAG\";\n    uint8 public decimals = 0;\n    string public version = '1';\n    mapping (address => uint256) balances;\n    address migrateToAddress = 0x0;\n    address[] migrationSources;\n\n    function MainToken() public {\n        migrationSources.push(msg.sender);\n    }\n\n    function balanceOf(address _owner) public constant returns (uint256 balance) {\n        return balances[_owner];\n    }\n\n    function transfer(address _to, uint256 _value) public onlyIfNotMigrating returns (bool success) {\n        if (balances[msg.sender] >= _value && _value > 0) {\n            balances[msg.sender] -= _value;\n            balances[_to] += _value;\n            Transfer(msg.sender, _to, _value);\n            return true;\n        } else {\n            return false; // Insufficient balance or negative value\n        }\n    }\n\n    // Migrate tokens to a new version of the contract\n    function migrateMyTokens() public onlyIfMigrating {\n        var balance = balances[msg.sender];\n        if (balance > 0) {\n            totalSupply -= balance;\n            balances[msg.sender] = 0;\n            MigrationRecipientV1Interface(migrateToAddress).migrateTokensV1(msg.sender, balance);\n        }\n    }\n\n    // Receive tokens from an older version of the token contract\n    function migrateTokensV1(address _owner, uint256 _value) public migrationSourcesOnly {\n        totalSupply += _value;\n        balances[_owner] += _value;\n        Transfer(0x0, _owner, _value);\n    }\n\n    function setMigrateToAddress(address _to) public migrationSourcesOnly {\n        migrateToAddress = _to;\n    }\n\n    function setOtherMigrationSources(address[] _otherMigrationSources) public migrationSourcesOnly {\n        migrationSources = _otherMigrationSources;\n        migrationSources.push(msg.sender);\n    }\n\n    function airdrop(address[] _targets, uint256 _value) public migrationSourcesOnly {\n        totalSupply += _targets.length * _value;\n        for (uint256 i = 0; i < _targets.length; i++) {\n            address target = _targets[i];\n            balances[target] += _value;\n            Transfer(0x0, target, _value);\n        }\n    }\n\n    function () public {\n    }\n\n    modifier onlyIfMigrating() {\n        require(migrateToAddress != 0x0);\n        _;\n    }\n\n    modifier onlyIfNotMigrating() {\n        require(migrateToAddress == 0x0);\n        _;\n    }\n\n    modifier migrationSourcesOnly() {\n        require(arrayContainsAddress256(migrationSources, msg.sender));\n        _;\n    }\n\n    // \"addresses\" may not be longer than 256\n    function arrayContainsAddress256(address[] addresses, address value) internal pure returns (bool) {\n        for (uint8 i = 0; i < addresses.length; i++) {\n            if (addresses[i] == value) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    // Allowances are intentionally not supported.\n    // These are only here to implement the ERC20 interface.\n    function approve(address, uint256) public returns (bool) {\n        return false;\n    }\n\n    function allowance(address, address) public constant returns (uint256) {\n        return 0;\n    }\n\n    function transferFrom(address, address, uint256) public returns (bool) {\n        return false;\n    }\n}", "debug": "storage_7: 0x60000001ffffffffffffffffffffffffffe00000000000000000000000000002\ncalldata_MigrationRecipientV1Interface_4 + calldata_MigrationRecipientV1Interface_4: 0x7fffffe000000000000000000000000001ffffffffffffffffffffffffffffb\ncaller: 0x0\nmem_0 +\n192 +\n32*\ncalldata_MigrationRecipientV1Interface_4 + calldata_MigrationRecipientV1Interface_4: 0x0\nmem_128 +\n32 +\n32*\ncalldata_MigrationRecipientV1Interface_4 + calldata_MigrationRecipientV1Interface_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_MigrationRecipientV1Interface_0: 0x479a5d5300000000000000000000000000000000000000000000000000000000\ncalldatasize_MigrationRecipientV1Interface: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `setOtherMigrationSources(address[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x5f8a40cd6198c2fae0397cd5464057091e92a2e5.sol", "function": "setOtherMigrationSources(address[])", "lineno": 19, "title": "Integer Overflow ", "type": "Warning"}, {"address": 4564, "code": " is ERC20TokenInterface, MigrationRecipientV1Interface {\n    string public name = \"Swag\";\n    string public symbol = \"SWAG\";\n    uint8 public decimals = 0;\n    string public version = '1';\n    mapping (address => uint256) balances;\n    address migrateToAddress = 0x0;\n    address[] migrationSources;\n\n    function MainToken() public {\n        migrationSources.push(msg.sender);\n    }\n\n    function balanceOf(address _owner) public constant returns (uint256 balance) {\n        return balances[_owner];\n    }\n\n    function transfer(address _to, uint256 _value) public onlyIfNotMigrating returns (bool success) {\n        if (balances[msg.sender] >= _value && _value > 0) {\n            balances[msg.sender] -= _value;\n            balances[_to] += _value;\n            Transfer(msg.sender, _to, _value);\n            return true;\n        } else {\n            return false; // Insufficient balance or negative value\n        }\n    }\n\n    // Migrate tokens to a new version of the contract\n    function migrateMyTokens() public onlyIfMigrating {\n        var balance = balances[msg.sender];\n        if (balance > 0) {\n            totalSupply -= balance;\n            balances[msg.sender] = 0;\n            MigrationRecipientV1Interface(migrateToAddress).migrateTokensV1(msg.sender, balance);\n        }\n    }\n\n    // Receive tokens from an older version of the token contract\n    function migrateTokensV1(address _owner, uint256 _value) public migrationSourcesOnly {\n        totalSupply += _value;\n        balances[_owner] += _value;\n        Transfer(0x0, _owner, _value);\n    }\n\n    function setMigrateToAddress(address _to) public migrationSourcesOnly {\n        migrateToAddress = _to;\n    }\n\n    function setOtherMigrationSources(address[] _otherMigrationSources) public migrationSourcesOnly {\n        migrationSources = _otherMigrationSources;\n        migrationSources.push(msg.sender);\n    }\n\n    function airdrop(address[] _targets, uint256 _value) public migrationSourcesOnly {\n        totalSupply += _targets.length * _value;\n        for (uint256 i = 0; i < _targets.length; i++) {\n            address target = _targets[i];\n            balances[target] += _value;\n            Transfer(0x0, target, _value);\n        }\n    }\n\n    function () public {\n    }\n\n    modifier onlyIfMigrating() {\n        require(migrateToAddress != 0x0);\n        _;\n    }\n\n    modifier onlyIfNotMigrating() {\n        require(migrateToAddress == 0x0);\n        _;\n    }\n\n    modifier migrationSourcesOnly() {\n        require(arrayContainsAddress256(migrationSources, msg.sender));\n        _;\n    }\n\n    // \"addresses\" may not be longer than 256\n    function arrayContainsAddress256(address[] addresses, address value) internal pure returns (bool) {\n        for (uint8 i = 0; i < addresses.length; i++) {\n            if (addresses[i] == value) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    // Allowances are intentionally not supported.\n    // These are only here to implement the ERC20 interface.\n    function approve(address, uint256) public returns (bool) {\n        return false;\n    }\n\n    function allowance(address, address) public constant returns (uint256) {\n        return 0;\n    }\n\n    function transferFrom(address, address, uint256) public returns (bool) {\n        return false;\n    }\n}", "debug": "storage_7: 0x3ffffffffffffffffffffffffffffe\ncalldata_MigrationRecipientV1Interface_4 + calldata_MigrationRecipientV1Interface_4: 0xffffffffffffffffffffffffffffffffffbffffffffffffffffffffffffffffe\ncaller: 0x0\nmem_0 +\n192 +\n32*\ncalldata_MigrationRecipientV1Interface_4 + calldata_MigrationRecipientV1Interface_4: 0x0\nmem_128 +\n32 +\n32*\ncalldata_MigrationRecipientV1Interface_4 + calldata_MigrationRecipientV1Interface_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_MigrationRecipientV1Interface_0: 0x479a5d5300000000000000000000000000000000000000000000000000000000\ncalldatasize_MigrationRecipientV1Interface: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `setOtherMigrationSources(address[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x5f8a40cd6198c2fae0397cd5464057091e92a2e5.sol", "function": "setOtherMigrationSources(address[])", "lineno": 19, "title": "Integer Overflow ", "type": "Warning"}, {"address": 4566, "code": " is ERC20TokenInterface, MigrationRecipientV1Interface {\n    string public name = \"Swag\";\n    string public symbol = \"SWAG\";\n    uint8 public decimals = 0;\n    string public version = '1';\n    mapping (address => uint256) balances;\n    address migrateToAddress = 0x0;\n    address[] migrationSources;\n\n    function MainToken() public {\n        migrationSources.push(msg.sender);\n    }\n\n    function balanceOf(address _owner) public constant returns (uint256 balance) {\n        return balances[_owner];\n    }\n\n    function transfer(address _to, uint256 _value) public onlyIfNotMigrating returns (bool success) {\n        if (balances[msg.sender] >= _value && _value > 0) {\n            balances[msg.sender] -= _value;\n            balances[_to] += _value;\n            Transfer(msg.sender, _to, _value);\n            return true;\n        } else {\n            return false; // Insufficient balance or negative value\n        }\n    }\n\n    // Migrate tokens to a new version of the contract\n    function migrateMyTokens() public onlyIfMigrating {\n        var balance = balances[msg.sender];\n        if (balance > 0) {\n            totalSupply -= balance;\n            balances[msg.sender] = 0;\n            MigrationRecipientV1Interface(migrateToAddress).migrateTokensV1(msg.sender, balance);\n        }\n    }\n\n    // Receive tokens from an older version of the token contract\n    function migrateTokensV1(address _owner, uint256 _value) public migrationSourcesOnly {\n        totalSupply += _value;\n        balances[_owner] += _value;\n        Transfer(0x0, _owner, _value);\n    }\n\n    function setMigrateToAddress(address _to) public migrationSourcesOnly {\n        migrateToAddress = _to;\n    }\n\n    function setOtherMigrationSources(address[] _otherMigrationSources) public migrationSourcesOnly {\n        migrationSources = _otherMigrationSources;\n        migrationSources.push(msg.sender);\n    }\n\n    function airdrop(address[] _targets, uint256 _value) public migrationSourcesOnly {\n        totalSupply += _targets.length * _value;\n        for (uint256 i = 0; i < _targets.length; i++) {\n            address target = _targets[i];\n            balances[target] += _value;\n            Transfer(0x0, target, _value);\n        }\n    }\n\n    function () public {\n    }\n\n    modifier onlyIfMigrating() {\n        require(migrateToAddress != 0x0);\n        _;\n    }\n\n    modifier onlyIfNotMigrating() {\n        require(migrateToAddress == 0x0);\n        _;\n    }\n\n    modifier migrationSourcesOnly() {\n        require(arrayContainsAddress256(migrationSources, msg.sender));\n        _;\n    }\n\n    // \"addresses\" may not be longer than 256\n    function arrayContainsAddress256(address[] addresses, address value) internal pure returns (bool) {\n        for (uint8 i = 0; i < addresses.length; i++) {\n            if (addresses[i] == value) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    // Allowances are intentionally not supported.\n    // These are only here to implement the ERC20 interface.\n    function approve(address, uint256) public returns (bool) {\n        return false;\n    }\n\n    function allowance(address, address) public constant returns (uint256) {\n        return 0;\n    }\n\n    function transferFrom(address, address, uint256) public returns (bool) {\n        return false;\n    }\n}", "debug": "storage_7: 0x2000000000000000000000000000000000000000000000000000000000000000\ncalldata_MigrationRecipientV1Interface_4 + calldata_MigrationRecipientV1Interface_4: 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffb\ncaller: 0x0\nmem_0 +\n192 +\n32*\ncalldata_MigrationRecipientV1Interface_4 + calldata_MigrationRecipientV1Interface_4: 0x0\nmem_128 +\n32 +\n32*\ncalldata_MigrationRecipientV1Interface_4 + calldata_MigrationRecipientV1Interface_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_MigrationRecipientV1Interface_0: 0x479a5d5300000000000000000000000000000000000000000000000000000000\ncalldatasize_MigrationRecipientV1Interface: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `setOtherMigrationSources(address[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x5f8a40cd6198c2fae0397cd5464057091e92a2e5.sol", "function": "setOtherMigrationSources(address[])", "lineno": 19, "title": "Integer Overflow ", "type": "Warning"}], "success": true}