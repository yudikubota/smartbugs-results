{
  "contract": "0x54df6e2d8f0e9a015bf804b64ed8e9bad6ccbaca",
  "tool": "mythril",
  "start": 1563491301.483567,
  "end": 1563491337.301026,
  "duration": 35.81745910644531,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 1517,
        "code": "riceView));\n        } else {\n            require(msg.value >",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/6/0x54df6e2d8f0e9a015bf804b64ed8e9bad6ccbaca.sol",
        "function": "publish(bytes12)",
        "lineno": 443,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 1734,
        "code": "ideoID);\n    }\n\n    function",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/6/0x54df6e2d8f0e9a015bf804b64ed8e9bad6ccbaca.sol",
        "function": "publish(bytes12)",
        "lineno": 448,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 1901,
        "code": "ddress(this).balance =",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/6/0x54df6e2d8f0e9a015bf804b64ed8e9bad6ccbaca.sol",
        "function": "setPrices(uint256,uint256)",
        "lineno": 467,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 1908,
        "code": "   require(viewToken",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/6/0x54df6e2d8f0e9a015bf804b64ed8e9bad6ccbaca.sol",
        "function": "setPrices(uint256,uint256)",
        "lineno": 468,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 2434,
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/6/0x54df6e2d8f0e9a015bf804b64ed8e9bad6ccbaca.sol",
        "function": "destruct(address)",
        "lineno": 476,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 2784,
        "code": " revert();\n    }\n\n}",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/6/0x54df6e2d8f0e9a015bf804b64ed8e9bad6ccbaca.sol",
        "function": "withdraw(address)",
        "lineno": 473,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 2784,
        "code": " revert();\n    }\n\n}",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3212\nCall at address: 3212\nCall at address: 3051\n",
        "filename": "/unique_chucks/6/0x54df6e2d8f0e9a015bf804b64ed8e9bad6ccbaca.sol",
        "function": "withdraw(address)",
        "lineno": 473,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 3051,
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/6/0x54df6e2d8f0e9a015bf804b64ed8e9bad6ccbaca.sol",
        "function": "withdraw(address)",
        "lineno": 476,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 3051,
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3212\n",
        "filename": "/unique_chucks/6/0x54df6e2d8f0e9a015bf804b64ed8e9bad6ccbaca.sol",
        "function": "withdraw(address)",
        "lineno": 476,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 3637,
        "code": "Token.balanceOf(this);\n        if (tokenBalance > 0) {\n     ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/6/0x54df6e2d8f0e9a015bf804b64ed8e9bad6ccbaca.sol",
        "function": "publishFor(bytes12,address)",
        "lineno": 457,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 3854,
        "code": "ance > 0) {\n            addr.",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/6/0x54df6e2d8f0e9a015bf804b64ed8e9bad6ccbaca.sol",
        "function": "publishFor(bytes12,address)",
        "lineno": 461,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 4913,
        "code": "DappHub, LLC\n//\n// Licensed under",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/6/0x54df6e2d8f0e9a015bf804b64ed8e9bad6ccbaca.sol",
        "function": "_function_0x7a9e5e4b",
        "lineno": 151,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 4913,
        "code": "DappHub, LLC\n//\n// Licensed under",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2784\n",
        "filename": "/unique_chucks/6/0x54df6e2d8f0e9a015bf804b64ed8e9bad6ccbaca.sol",
        "function": "withdraw(address)",
        "lineno": 151,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 4913,
        "code": "DappHub, LLC\n//\n// Licensed under",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function _function_0x7a9e5e4b. The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/6/0x54df6e2d8f0e9a015bf804b64ed8e9bad6ccbaca.sol",
        "function": "_function_0x7a9e5e4b",
        "lineno": 151,
        "title": "Transaction order dependence",
        "type": "Warning"
      }
    ],
    "success": true
  }
}