{
  "contract": "0x90894882a613937de155169ac995b36bab750d3d",
  "tool": "mythril",
  "start": 1563633124.4704192,
  "end": 1563633416.400624,
  "duration": 291.93020486831665,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 553,
        "code": "s[msg.sender] = balances[msg.sender].add(amou",
        "debug": "storage_11: 0xff3717ddf147ba7fd6976a72ee859c9c251431c6dd4346e384e0fd941c87b69c\n10_EXP_Concat(0, Extract(15, 8, storage_6)): 0xde9aa0007ffff9dbbb05d00001000207fffdffbfffbfbfbfffbfbfefbfbff7f6\nstorage_6: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldatasize_tokenRecipient: 0x3\n",
        "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/25/0x90894882a613937de155169ac995b36bab750d3d.sol",
        "function": "fallback",
        "lineno": 413,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1884,
        "code": "   * @dev Burns a specifi",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function fallback. The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/25/0x90894882a613937de155169ac995b36bab750d3d.sol",
        "function": "fallback",
        "lineno": 434,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 4769,
        "code": "tle B",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_tokenRecipient_4: 0xb2c81e3be60b809eebca250ae5f3958de8241f3c0942692d3cecd1fd00743211\ncalldata_tokenRecipient_32 + 4: 0x93931c13e507cbbcbf74d9eee4fb920eeaef84aa5110428da2eddb017d5ebcdd\nstorage_3: 0x0\ncaller: 0x0\ncalldata_tokenRecipient_0: 0x40c10f1900000000000000000000000000000000000000000000000000000000\ncalldatasize_tokenRecipient: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `mint(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/25/0x90894882a613937de155169ac995b36bab750d3d.sol",
        "function": "mint(address,uint256)",
        "lineno": 64,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 4782,
        "code": "ken\n * @dev Ba",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_tokenRecipient_4: 0xc63a21246c99b000ea0030728005ea6909080a424a47ca48059be3c0ff803205\ncalldata_tokenRecipient_32 + 4: 0xd2bd697b67b8b7eebcef8ebaf405ca6a0b728a06c347eda3d5dbebfeffbdb977\nstorage_3: 0x0\ncaller: 0x0\ncalldata_tokenRecipient_0: 0x40c10f1900000000000000000000000000000000000000000000000000000000\ncalldatasize_tokenRecipient: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/25/0x90894882a613937de155169ac995b36bab750d3d.sol",
        "function": "mint(address,uint256)",
        "lineno": 64,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 4805,
        "code": "@dev Adds two ",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_tokenRecipient_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_1: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_tokenRecipient_0: 0x42966c6800000000000000000000000000000000000000000000000000000000\ncalldatasize_tokenRecipient: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/25/0x90894882a613937de155169ac995b36bab750d3d.sol",
        "function": "burn(uint256)",
        "lineno": 55,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 6377,
        "code": "er);\n        uint256 amount = airDropPayable",
        "debug": "storage_10: 0xff3717ddf147ba7fd6976a72ee859c9c251431c6dd4346e384e0fd941c87b69c\n10_EXP_Concat(0, Extract(15, 8, storage_6)): 0xde9aa0007ffff9dbbb05d00001000207fffdffbfffbfbfbfffbfbfefbfbff7f6\nstorage_9: 0xff00\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_tokenRecipient_0: 0x70a0823100000000000000000000000000000000000000000000000000000000\ncalldatasize_tokenRecipient: 0x4\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_tokenRecipient_4: 0x0\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `balanceOf(address)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/25/0x90894882a613937de155169ac995b36bab750d3d.sol",
        "function": "balanceOf(address)",
        "lineno": 402,
        "title": "Integer Overflow ",
        "type": "Warning"
      }
    ],
    "success": true
  }
}