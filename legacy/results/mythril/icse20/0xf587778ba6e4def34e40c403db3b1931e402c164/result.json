{
  "contract": "0xf587778ba6e4def34e40c403db3b1931e402c164",
  "tool": "mythril",
  "start": 1563583486.7683268,
  "end": 1563583680.623324,
  "duration": 193.85499715805054,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 1190,
        "code": "tion isUnlocked() pub",
        "debug": "storage_7: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_0: 0x0\ncaller: 0x0\ncalldata_ZJLTTokenVaultTest_0: 0x4e71d92d00000000000000000000000000000000000000000000000000000000\ncalldatasize_ZJLTTokenVaultTest: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `claim()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/21/0xf587778ba6e4def34e40c403db3b1931e402c164.sol",
        "function": "claim()",
        "lineno": 369,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2039,
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/21/0xf587778ba6e4def34e40c403db3b1931e402c164.sol",
        "function": "claim()",
        "lineno": 396,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 2039,
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function claim(). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/21/0xf587778ba6e4def34e40c403db3b1931e402c164.sol",
        "function": "claim()",
        "lineno": 396,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 2133,
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/21/0xf587778ba6e4def34e40c403db3b1931e402c164.sol",
        "function": "claim()",
        "lineno": 396,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 2382,
        "code": "oc;\n        startLock",
        "debug": "storage_7: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_ZJLTTokenVaultTest_0: 0x8380edb700000000000000000000000000000000000000000000000000000000\ncalldatasize_ZJLTTokenVaultTest: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `isUnlocked()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/21/0xf587778ba6e4def34e40c403db3b1931e402c164.sol",
        "function": "isUnlocked()",
        "lineno": 380,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2805,
        "code": "llet] ){\n            perValue ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/21/0xf587778ba6e4def34e40c403db3b1931e402c164.sol",
        "function": "alloc()",
        "lineno": 388,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 2805,
        "code": "llet] ){\n            perValue ",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function alloc(). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/21/0xf587778ba6e4def34e40c403db3b1931e402c164.sol",
        "function": "alloc()",
        "lineno": 388,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 2977,
        "code": "\n        }\n        lockBalance[teamW",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/21/0xf587778ba6e4def34e40c403db3b1931e402c164.sol",
        "function": "alloc()",
        "lineno": 389,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 2988,
        "code": "ckBalance[teamWallet].sub(perValue",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/21/0xf587778ba6e4def34e40c403db3b1931e402c164.sol",
        "function": "alloc()",
        "lineno": 391,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 3015,
        "code": "require(token",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/21/0xf587778ba6e4def34e40c403db3b1931e402c164.sol",
        "function": "alloc()",
        "lineno": 392,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 3644,
        "code": " b;\n  }\n\n  fun",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\nUDiv(storage_1,_256): 0x1\nstorage_2: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_4: 0x2\ntimestamp: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_0: 0x0\ncaller: 0x0\ncalldata_ZJLTTokenVaultTest_0: 0x4e71d92d00000000000000000000000000000000000000000000000000000000\ncalldatasize_ZJLTTokenVaultTest: 0x4\nstorage_7: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/21/0xf587778ba6e4def34e40c403db3b1931e402c164.sol",
        "function": "claim()",
        "lineno": 32,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}