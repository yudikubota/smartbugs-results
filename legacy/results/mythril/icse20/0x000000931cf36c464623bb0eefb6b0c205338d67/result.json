{
  "contract": "0x000000931cf36c464623bb0eefb6b0c205338d67",
  "tool": "mythril",
  "start": 1563229129.216436,
  "end": 1563229424.1115866,
  "duration": 294.8951506614685,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 6406,
        "code": "uper.increaseApproval(spender, addedValue);\n        ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_contracts/0x000000931cf36c464623bb0eefb6b0c205338d67.sol",
        "function": "approve(address,uint256)",
        "lineno": 739,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 6406,
        "code": "uper.increaseApproval(spender, addedValue);\n        ",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function approve(address,uint256). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_contracts/0x000000931cf36c464623bb0eefb6b0c205338d67.sol",
        "function": "approve(address,uint256)",
        "lineno": 739,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 7105,
        "code": "**\n   * @dev Modifier",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_contracts/0x000000931cf36c464623bb0eefb6b0c205338d67.sol",
        "function": "_function_0x17ffc320",
        "lineno": 148,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 7105,
        "code": "**\n   * @dev Modifier",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 17172\n",
        "filename": "/unique_contracts/0x000000931cf36c464623bb0eefb6b0c205338d67.sol",
        "function": "_function_0x17ffc320",
        "lineno": 148,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 7483,
        "code": "DelegateERC20 {\n    address pu",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_contracts/0x000000931cf36c464623bb0eefb6b0c205338d67.sol",
        "function": "totalSupply()",
        "lineno": 754,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 7483,
        "code": "DelegateERC20 {\n    address pu",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function totalSupply(). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_contracts/0x000000931cf36c464623bb0eefb6b0c205338d67.sol",
        "function": "totalSupply()",
        "lineno": 754,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 8722,
        "code": "s(0)) {\n            return super.allowance(_owner, spender",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_contracts/0x000000931cf36c464623bb0eefb6b0c205338d67.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 722,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 8722,
        "code": "s(0)) {\n            return super.allowance(_owner, spender",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function transferFrom(address,address,uint256). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_contracts/0x000000931cf36c464623bb0eefb6b0c205338d67.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 722,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 9231,
        "code": "mpiler warning. If we\n  * leave out p",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_contracts/0x000000931cf36c464623bb0eefb6b0c205338d67.sol",
        "function": "reclaimContract(address)",
        "lineno": 220,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 16379,
        "code": "{\n            return super.decreaseApproval",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_contracts/0x000000931cf36c464623bb0eefb6b0c205338d67.sol",
        "function": "delegateAllowance(address,address)",
        "lineno": 746,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 16379,
        "code": "{\n            return super.decreaseApproval",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function delegateAllowance(address,address). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_contracts/0x000000931cf36c464623bb0eefb6b0c205338d67.sol",
        "function": "delegateAllowance(address,address)",
        "lineno": 746,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 17172,
        "code": "er tokens from one addres",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_contracts/0x000000931cf36c464623bb0eefb6b0c205338d67.sol",
        "function": "_function_0x17ffc320",
        "lineno": 581,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 17553,
        "code": " that an owner allowed to a spender.\n   *\n   * approve ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_contracts/0x000000931cf36c464623bb0eefb6b0c205338d67.sol",
        "function": "delegateApprove(address,uint256,address)",
        "lineno": 629,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 19349,
        "code": "//github.com/ethereum/EIPs/issues/20#i",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_contracts/0x000000931cf36c464623bb0eefb6b0c205338d67.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 604,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 22905,
        "code": ", _addedValue, msg.sender);\n    return t",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_contracts/0x000000931cf36c464623bb0eefb6b0c205338d67.sol",
        "function": "delegateAllowance(address,address)",
        "lineno": 639,
        "title": "Message call to external contract",
        "type": "Informational"
      }
    ],
    "success": true
  }
}