{
  "contract": "0xeb9114b0389b72d7f0458467661b1d932666a211",
  "tool": "mythril",
  "start": 1563669416.2886264,
  "end": 1563669852.3427618,
  "duration": 436.0541353225708,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 875,
        "code": "length == unixTimes.length);\n                \n        for(uint j = 0; j < targets.length; j++){\n            require(unlockUnixTime[targets[j]] < unixTimes[j]);\n            unlockUnixTime[targets[j]] = unixTimes[j];\n            LockedFunds(targets[j], unixTimes[j]);\n        }\n    }\n\n    function transfer(address _to, uint _value, bytes _data, string _custom_fallback) public returns (bool success) {\n        require(_value > 0\n    ",
        "debug": "calldata_Voicecoin_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_Voicecoin_0: 0x64ddc60500000000000000000000000000000000000000000000000000000000\ncalldatasize_Voicecoin: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `_function_0x64ddc605`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/35/0xeb9114b0389b72d7f0458467661b1d932666a211.sol",
        "function": "_function_0x64ddc605",
        "lineno": 145,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1218,
        "code": "       amount = amount.mul(1e6);\n        uint256 totalAmount = amount.mul(addresses.length);\n        require(balanceOf[msg.sender] >= totalAmount);\n        \n        for (uint j = 0; j < addresses.length; j++) {\n            require(addresses[j] != 0x0\n                    && frozenAccount[addresses[j]] == false\n                    && now > unlockUnixTime[addresses[j]]);\n\n            balanceOf[addresses[j]] = balanceOf[addresses[j]].add(amount);\n            Transfer(msg.sender, addresses[j], amount);\n        }\n        balanceOf[msg.sender] = balanceOf[msg.sender].sub(totalAmount);\n        return true;\n    }\n\n    function distributeAirdrop(address[] addresses, uint[] amounts) public returns (bool) {\n        require(addresses.length > 0\n                && addresses.length == amounts.length\n                && frozenAccount[msg.sender] == false\n                && now > unlockUnixTime[msg.sen",
        "debug": "calldata_Voicecoin_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_Voicecoin_0: 0x9459462500000000000000000000000000000000000000000000000000000000\ncalldatasize_Voicecoin: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `distributeAirdrop(address[],uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/35/0xeb9114b0389b72d7f0458467661b1d932666a211.sol",
        "function": "distributeAirdrop(address[],uint256)",
        "lineno": 273,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 13822,
        "code": " >= a",
        "debug": "calldata_Voicecoin_32 + 36: 0xcfb485210399fdc85ddc30416ff3c1e813fc00000740fe1a60302991686efc1b\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_Voicecoin_4: 0xdfe7a7dbcb51bf935006fa0ff1fc9deddbffc3dff76000000db3400c6c1e00bb\ntimestamp: 0xf10e00027c1148711040cb40dfc010700fc628d80401e0fc08190079380b004f\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_Voicecoin_32_+_4: 0xaa36f5bdfb58b1e70109b37d78026444125428d00555c1db67f030e95c7800f2\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xcfb485210399fdc85ddc30416ff3c1e813fc00000740fe1a60302991686efc1b\ncalldata_Voicecoin_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_Voicecoin_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_Voicecoin: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `transferFrom(address,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/35/0xeb9114b0389b72d7f0458467661b1d932666a211.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 25,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 13835,
        "code": "return c;\n    ",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_Voicecoin_32 + 36: 0x80000000000000000004200fffffffffffffffffffff7edbffffffffffff00fe\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_Voicecoin_4: 0x8000000000000000000fffffffffffffffffffffffffffffffffffffffff00fd\ntimestamp: 0x8000000000000000001000000000000000000000002000000000000000000001\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_Voicecoin_32_+_4: 0x8000000000000000000000000000000000000000002000000000000000000000\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x80000000000000000004200fffffffffffffffffffff7edbffffffffffff00fe\ncalldata_Voicecoin_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_Voicecoin_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_Voicecoin: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/35/0xeb9114b0389b72d7f0458467661b1d932666a211.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 26,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}