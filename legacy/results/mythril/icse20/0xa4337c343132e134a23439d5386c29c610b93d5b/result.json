{
  "contract": "0xa4337c343132e134a23439d5386c29c610b93d5b",
  "tool": "mythril",
  "start": 1563536698.3901913,
  "end": 1563536786.0192432,
  "duration": 87.62905192375183,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 526,
        "code": ");\n      quicksort(a);\n      return a;\n  }\n  function getCloneArray(uint[] a) private pure returns(uint[]) {\n      return a;\n  }\n  function swap(uint[] a, uint l, uint",
        "debug": "calldata_NFTToken_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_NFTToken_0: 0x1e1d237e00000000000000000000000000000000000000000000000000000000\ncalldatasize_NFTToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `_function_0x1e1d237e`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/11/0xa4337c343132e134a23439d5386c29c610b93d5b.sol",
        "function": "_function_0x1e1d237e",
        "lineno": 123,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1401,
        "code": "ng _skills) onlyModerators public returns(uint64 _monsterId) {\n    DataBase data = DataBase(databaseContract);\n    uint64 monsterId = data.getTotalMonster() + 1;\n    data.addMonsterObj(monsterId,_genes,_classId,_master,_name,_skills);\n    return monsterId;\n  }\n  function setMasterToReferral(address _master, address _referral) onlyOwner public{\n    ma",
        "debug": "calldata_NFTToken_32 + 68: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_NFTToken_0: 0x5b6a42b800000000000000000000000000000000000000000000000000000000\ncalldatasize_NFTToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `setNewMonster(uint256,uint32,address,string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/11/0xa4337c343132e134a23439d5386c29c610b93d5b.sol",
        "function": "setNewMonster(uint256,uint32,address,string,string)",
        "lineno": 88,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 3839,
        "code": "   randNonce++;\n    retur",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_NFTToken_4: 0x0\nstorage_9: 0x0\ncalldata_NFTToken_0: 0x571a26a000000000000000000000000000000000000000000000000000000000\ncalldatasize_NFTToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/11/0xa4337c343132e134a23439d5386c29c610b93d5b.sol",
        "function": "_function_0x571a26a0",
        "lineno": 117,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 4187,
        "code": "e,_skills);\n    return",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/11/0xa4337c343132e134a23439d5386c29c610b93d5b.sol",
        "function": "setNewMonster(uint256,uint32,address,string,string)",
        "lineno": 91,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 4187,
        "code": "e,_skills);\n    return",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function setNewMonster(uint256,uint32,address,string,string). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/11/0xa4337c343132e134a23439d5386c29c610b93d5b.sol",
        "function": "setNewMonster(uint256,uint32,address,string,string)",
        "lineno": 91,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 5266,
        "code": "i < totalAucti",
        "debug": "timestamp: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffff7cb5b25\ncalldata_NFTToken_32 + 100: 0x88fddbb9\nstorage_0: 0x0\ncaller: 0x0\ncalldata_NFTToken_0: 0x76a310a500000000000000000000000000000000000000000000000000000000\ncalldatasize_NFTToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `addAuction(uint32,uint256,uint256,uint8,uint32)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/11/0xa4337c343132e134a23439d5386c29c610b93d5b.sol",
        "function": "addAuction(uint32,uint256,uint256,uint8,uint32)",
        "lineno": 210,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 5318,
        "code": ";\ncontract AccessC",
        "debug": "storage_9: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_0: 0x0\ncaller: 0x0\ncalldata_NFTToken_0: 0x76a310a500000000000000000000000000000000000000000000000000000000\ncalldatasize_NFTToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `addAuction(uint32,uint256,uint256,uint8,uint32)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/11/0xa4337c343132e134a23439d5386c29c610b93d5b.sol",
        "function": "addAuction(uint32,uint256,uint256,uint8,uint32)",
        "lineno": 1,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 5511,
        "code": "ete auctions[i];\n",
        "debug": "storage_6: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_0: 0x0\ncaller: 0x0\ncalldata_NFTToken_0: 0x76a310a500000000000000000000000000000000000000000000000000000000\ncalldatasize_NFTToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `addAuction(uint32,uint256,uint256,uint8,uint32)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/11/0xa4337c343132e134a23439d5386c29c610b93d5b.sol",
        "function": "addAuction(uint32,uint256,uint256,uint8,uint32)",
        "lineno": 212,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 5587,
        "code": "onsterId) != msg.sen",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_NFTToken_4: 0x0\nstorage_9: 0x0\ncalldata_NFTToken_0: 0x7deb602500000000000000000000000000000000000000000000000000000000\ncalldatasize_NFTToken: 0x4\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/11/0xa4337c343132e134a23439d5386c29c610b93d5b.sol",
        "function": "_function_0x7deb6025",
        "lineno": 252,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 5788,
        "code": "msg.sender));\n    require(msg.sender != address(0",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/11/0xa4337c343132e134a23439d5386c29c610b93d5b.sol",
        "function": "_function_0x7deb6025",
        "lineno": 253,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 5788,
        "code": "msg.sender));\n    require(msg.sender != address(0",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function _function_0x7deb6025. The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/11/0xa4337c343132e134a23439d5386c29c610b93d5b.sol",
        "function": "_function_0x7deb6025",
        "lineno": 253,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 11300,
        "code": "t){\n        ",
        "debug": "calldata_NFTToken_4 + calldata_NFTToken_4: 0x0\ncalldata_NFTToken_0: 0x1e1d237e00000000000000000000000000000000000000000000000000000000\ncalldatasize_NFTToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer underflow exists in the function `_function_0x1e1d237e`.\nThe subtraction may result in a value < 0.",
        "filename": "/unique_chucks/11/0xa4337c343132e134a23439d5386c29c610b93d5b.sol",
        "function": "_function_0x1e1d237e",
        "lineno": 156,
        "title": "Integer Underflow",
        "type": "Warning"
      },
      {
        "address": 11719,
        "code": "    ",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_NFTToken_0: 0x1e1d237e00000000000000000000000000000000000000000000000000000000\ncalldatasize_NFTToken: 0x4\ncalldata_NFTToken_4 + calldata_NFTToken_4: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/11/0xa4337c343132e134a23439d5386c29c610b93d5b.sol",
        "function": "_function_0x1e1d237e",
        "lineno": 169,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}