{
  "contract": "0xfe99dfa5ba203a5757310589e1265f585b7abb27",
  "tool": "mythril",
  "start": 1563625892.3097498,
  "end": 1563625930.0025737,
  "duration": 37.69282388687134,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 294,
        "code": " price;\n      ",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_6: 0x0\ncalldata_token_0: 0x10c1ff2300000000000000000000000000000000000000000000000000000000\ncalldatasize_token: 0x4\nstorage_2: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/26/0xfe99dfa5ba203a5757310589e1265f585b7abb27.sol",
        "function": "fallback",
        "lineno": 45,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 432,
        "code": "rice);\n        excess += amount % price;\n       ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/26/0xfe99dfa5ba203a5757310589e1265f585b7abb27.sol",
        "function": "fallback",
        "lineno": 44,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 517,
        "code": "msg.sender] = balanceOf[",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/26/0xfe99dfa5ba203a5757310589e1265f585b7abb27.sol",
        "function": "fallback",
        "lineno": 46,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 587,
        "code": "    amountRaised = amountRaise",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xe86ed8400c86ab0e3d6df37c48ea2588a8048d711182eb140577ee8fbbbfffde\ncallvalue: 0x8d00a7c08d23acc80a6c1159719e43f070c18163748735ed010610ab58200000\nreturndatasize: 0x20\nretval_432: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_2: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_6: 0x0\ncalldata_token_0: 0x100000000000000000000000000000000000000000000000000000000\ncalldatasize_token: 0x4\n",
        "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/26/0xfe99dfa5ba203a5757310589e1265f585b7abb27.sol",
        "function": "fallback",
        "lineno": 47,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 588,
        "code": "    amountRaised = amountRaised + amoun",
        "debug": "storage_2: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncallvalue: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\nstorage_4: 0x1\nreturndatasize: 0x20\nretval_432: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_6: 0x0\ncalldata_token_0: 0x10c1ffa100000000000000000000000000000000000000000000000000000000\ncalldatasize_token: 0x4\n",
        "description": "A possible integer underflow exists in the function `fallback`.\nThe subtraction may result in a value < 0.",
        "filename": "/unique_chucks/26/0xfe99dfa5ba203a5757310589e1265f585b7abb27.sol",
        "function": "fallback",
        "lineno": 47,
        "title": "Integer Underflow",
        "type": "Warning"
      },
      {
        "address": 654,
        "code": " + amount - excess;\n        amountRaised = amountRaised + amoun",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/26/0xfe99dfa5ba203a5757310589e1265f585b7abb27.sol",
        "function": "fallback",
        "lineno": 46,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 663,
        "code": "ansfer(msg.sender, am",
        "debug": "callvalue: 0x8d00a7c08d23acc80a6c1159719e43f070c18163748735ed010610ab58200000\nstorage_1: 0xe86ed8400c86ab0e3d6df37c48ea2588a8048d711182eb140577ee8fbbbfffde\nreturndatasize: 0x20\nretval_432: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_2: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_6: 0x0\ncalldata_token_0: 0x100000000000000000000000000000000000000000000000000000000\ncalldatasize_token: 0x4\n",
        "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/26/0xfe99dfa5ba203a5757310589e1265f585b7abb27.sol",
        "function": "fallback",
        "lineno": 48,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 664,
        "code": "ansfer(msg.sender, amount, tru",
        "debug": "storage_2: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncallvalue: 0x0\nstorage_1: 0x0\nstorage_4: 0x1\nreturndatasize: 0x20\nretval_432: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_6: 0x0\ncalldata_token_0: 0x10c1ff2300000000000000000000000000000000000000000000000000000000\ncalldatasize_token: 0x4\n",
        "description": "A possible integer underflow exists in the function `fallback`.\nThe subtraction may result in a value < 0.",
        "filename": "/unique_chucks/26/0xfe99dfa5ba203a5757310589e1265f585b7abb27.sol",
        "function": "fallback",
        "lineno": 48,
        "title": "Integer Underflow",
        "type": "Warning"
      },
      {
        "address": 669,
        "code": "\n        FundTransfer(msg.sender, amount, tru",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/26/0xfe99dfa5ba203a5757310589e1265f585b7abb27.sol",
        "function": "fallback",
        "lineno": 47,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 1645,
        "code": "sed, false);\n            burnToken",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3506\nCall at address: 3300\n",
        "filename": "/unique_chucks/26/0xfe99dfa5ba203a5757310589e1265f585b7abb27.sol",
        "function": "withdrawalOwner()",
        "lineno": 85,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 1645,
        "code": "sed, false);\n            burnToken",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function withdrawalOwner(). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/26/0xfe99dfa5ba203a5757310589e1265f585b7abb27.sol",
        "function": "withdrawalOwner()",
        "lineno": 85,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 2068,
        "code": " false);\n    }\n\n    function",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function _function_0x619f5e72. The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/26/0xfe99dfa5ba203a5757310589e1265f585b7abb27.sol",
        "function": "_function_0x619f5e72",
        "lineno": 94,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 3300,
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/26/0xfe99dfa5ba203a5757310589e1265f585b7abb27.sol",
        "function": "withdrawalOwner()",
        "lineno": 103,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 3300,
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3506\n",
        "filename": "/unique_chucks/26/0xfe99dfa5ba203a5757310589e1265f585b7abb27.sol",
        "function": "withdrawalOwner()",
        "lineno": 103,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 3506,
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/26/0xfe99dfa5ba203a5757310589e1265f585b7abb27.sol",
        "function": "withdrawalOwner()",
        "lineno": 103,
        "title": "Message call to external contract",
        "type": "Informational"
      }
    ],
    "success": true
  }
}