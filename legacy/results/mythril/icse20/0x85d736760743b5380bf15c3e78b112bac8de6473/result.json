{
  "contract": "0x85d736760743b5380bf15c3e78b112bac8de6473",
  "tool": "mythril",
  "start": 1563674034.6721957,
  "end": 1563674057.028384,
  "duration": 22.35618829727173,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 4447,
        "code": "    }\n\n\t/// @notice `freez",
        "debug": "storage_0: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncalldata_TokenTestToken_32 + 4: 0x57f25cd000000000000000000000000000000000000000000000000000000000\nstorage_3: 0x0\ncaller: 0x0\ncalldata_TokenTestToken_0: 0x79c6506800000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenTestToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `mintToken(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/33/0x85d736760743b5380bf15c3e78b112bac8de6473.sol",
        "function": "mintToken(address,uint256)",
        "lineno": 284,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 4532,
        "code": "ng tokens\n    /// @param target ",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TokenTestToken_4: 0xfcd08d36445f90c820c078695b0eddec100300851000000000002442b22eabf6\nstorage_0: 0x7b7a8f3a40a0d59d7bbaf63f3aee25c1affdfdff8fffffffffe03f36560c4c00\ncalldata_TokenTestToken_32 + 4: 0x848570c5bf5f2a62844509c0c511da3e5002020070000000001fc0ca8203a204\nstorage_3: 0x0\ncaller: 0x0\ncalldata_TokenTestToken_0: 0x79c6506800000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenTestToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `mintToken(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/33/0x85d736760743b5380bf15c3e78b112bac8de6473.sol",
        "function": "mintToken(address,uint256)",
        "lineno": 286,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 4547,
        "code": "s to be frozen\n    /// @par",
        "debug": "storage_0: 0xfddefdf478fef5eebbebfd400000000000000000000000000000000071871593\ncalldata_TokenTestToken_32 + 4: 0x221020b87010a11441402c000000000000000000000000000000000fdf5e00b\nstorage_3: 0x0\ncaller: 0x0\ncalldata_TokenTestToken_0: 0x79c6506800000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenTestToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `mintToken(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/33/0x85d736760743b5380bf15c3e78b112bac8de6473.sol",
        "function": "mintToken(address,uint256)",
        "lineno": 287,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 6639,
        "code": " a - b;\n  }\n\n ",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_TokenTestToken_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_0: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_TokenTestToken_0: 0x42966c6800000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenTestToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/33/0x85d736760743b5380bf15c3e78b112bac8de6473.sol",
        "function": "burn(uint256)",
        "lineno": 28,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 6657,
        "code": "retur",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TokenTestToken_4: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncalldata_TokenTestToken_32 + 4: 0x57f25cd000000000000000000000000000000000000000000000000000000000\ncalldata_TokenTestToken_0: 0xd73dd62300000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenTestToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `increaseApproval(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/33/0x85d736760743b5380bf15c3e78b112bac8de6473.sol",
        "function": "increaseApproval(address,uint256)",
        "lineno": 34,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 6670,
        "code": "}\n}\n\n// File: ",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TokenTestToken_4: 0x1\ncalldata_TokenTestToken_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_TokenTestToken_0: 0xd73dd62300000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenTestToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/33/0x85d736760743b5380bf15c3e78b112bac8de6473.sol",
        "function": "increaseApproval(address,uint256)",
        "lineno": 35,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}