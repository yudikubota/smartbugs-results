{"error": null, "issues": [{"address": 1795, "code": "ction on the contract you want to be notified. This crafts the function signature manually so one doesn't have to include a contract in here just for this.\n        //receiveApproval(address _from, uint256 _value, address _tokenContract, bytes _extraData)\n        //it is assumed that when does this that the call *should* succeed, otherwise one would use vanilla approve instead.\n        if(!_spender.call(bytes4(bytes32(keccak256(\"receiveApproval(address,uint256,address,bytes)\"))), msg.sender, _value, this, _extraData)) { revert(); }\n        return true;\n    }\n\n\n}", "debug": "calldata_insChainToken_32 + 36: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_insChainToken_0: 0xcae9ca5100000000000000000000000000000000000000000000000000000000\ncalldatasize_insChainToken: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `approveAndCall(address,uint256,bytes)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/2/0x07a58629aaf3e1a0d07d8f43114b76bd5eee3b91.sol", "function": "approveAndCall(address,uint256,bytes)", "lineno": 248, "title": "Integer Overflow ", "type": "Warning"}, {"address": 8270, "code": "iply ", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x7fffffffffffffffffffffffbffffffffffffbfffffffffffffffffffffffffe\ncalldata_insChainToken_4: 0x1000000000000000000000000000000\nstorage_2: 0xffffffffffffffffffffffffffffff\ncalldata_insChainToken_0: 0x42966c6800000000000000000000000000000000000000000000000000000000\ncalldatasize_insChainToken: 0x4\ncallvalue: 0x0\n", "description": "A possible integer underflow exists in the function `burn(uint256)`.\nThe subtraction may result in a value < 0.", "filename": "/unique_chucks/2/0x07a58629aaf3e1a0d07d8f43114b76bd5eee3b91.sol", "function": "burn(uint256)", "lineno": 104, "title": "Integer Underflow", "type": "Warning"}, {"address": 8295, "code": "\n    function safeMultip", "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x7fffffffffffffffffffffffbffffffffffffbfffffffffffffffffffffffffe\ncalldata_insChainToken_4: 0x1000000000000000000000000000000\nstorage_2: 0xffffffffffffffffffffffffffffff\ncalldata_insChainToken_0: 0x42966c6800000000000000000000000000000000000000000000000000000000\ncalldatasize_insChainToken: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/2/0x07a58629aaf3e1a0d07d8f43114b76bd5eee3b91.sol", "function": "burn(uint256)", "lineno": 104, "title": "Exception state", "type": "Informational"}], "success": true}