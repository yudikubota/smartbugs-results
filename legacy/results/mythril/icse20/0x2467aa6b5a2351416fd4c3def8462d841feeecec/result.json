{
  "contract": "0x2467aa6b5a2351416fd4c3def8462d841feeecec",
  "tool": "mythril",
  "start": 1563482775.39411,
  "end": 1563482912.484225,
  "duration": 137.09011507034302,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 2574,
        "code": "nning of the grant.\n   * @param _cliff uint64 T",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_VestedToken_32 + 4: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\ncalldata_VestedToken_4: 0x0\ncalldata_VestedToken_0: 0x2c71e60a00000000000000000000000000000000000000000000000000000000\ncalldatasize_VestedToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/4/0x2467aa6b5a2351416fd4c3def8462d841feeecec.sol",
        "function": "_function_0x2c71e60a",
        "lineno": 387,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2849,
        "code": "ecific time.\n   */\n  func",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_VestedToken_32 + 4: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_VestedToken_4: 0x0\ncalldata_VestedToken_0: 0x600e85b700000000000000000000000000000000000000000000000000000000\ncalldatasize_VestedToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/4/0x2467aa6b5a2351416fd4c3def8462d841feeecec.sol",
        "function": "tokenGrant(address,uint256)",
        "lineno": 560,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 6489,
        "code": ".length -= 1;\n\n    balanc",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_VestedToken_32 + 4: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_VestedToken_4: 0x0\ncalldata_VestedToken_0: 0xeb944e4c00000000000000000000000000000000000000000000000000000000\ncalldatasize_VestedToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/4/0x2467aa6b5a2351416fd4c3def8462d841feeecec.sol",
        "function": "revokeTokenGrant(address,uint256)",
        "lineno": 441,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 9252,
        "code": " }\n\n  function",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_VestedToken_32 + 4: 0x0\ncalldata_VestedToken_32 + 36: 0x1\ncalldata_VestedToken_32 + 100: 0x1\ncalldata_VestedToken_32 + 68: 0x0\ncalldata_VestedToken_0: 0xdf3c211b00000000000000000000000000000000000000000000000000000000\ncalldatasize_VestedToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/4/0x2467aa6b5a2351416fd4c3def8462d841feeecec.sol",
        "function": "calculateVestedTokens(uint256,uint256,uint256,uint256,uint256)",
        "lineno": 38,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 9847,
        "code": "\n  }\n",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_VestedToken_4: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncalldata_VestedToken_32 + 4: 0x57f25cd000000000000000000000000000000000000000000000000000000000\ncalldata_VestedToken_0: 0xd73dd62300000000000000000000000000000000000000000000000000000000\ncalldatasize_VestedToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `increaseApproval(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/4/0x2467aa6b5a2351416fd4c3def8462d841feeecec.sol",
        "function": "increaseApproval(address,uint256)",
        "lineno": 43,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 9860,
        "code": "ract Ownable {",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_VestedToken_4: 0x1\ncalldata_VestedToken_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_VestedToken_0: 0xd73dd62300000000000000000000000000000000000000000000000000000000\ncalldatasize_VestedToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/4/0x2467aa6b5a2351416fd4c3def8462d841feeecec.sol",
        "function": "increaseApproval(address,uint256)",
        "lineno": 47,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}