{"error": null, "issues": [{"address": 781, "code": "            Deposit(msg.sender, m", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x5914f44d7f7630eb6e5b7729b02a7aeed5e955dba69ffbe27cef6705b89867d7\ncallvalue: 0xfe8844ac7b47fae24e5057ad34ca604ce61001db36dffbf97cfb77edbedf801f\nstorage_2: 0xfe8844ac7b47fae24e5057ad34ca604ce61001db36dffbf97cfb77edbedf801f\ncalldata_ERC20_0: 0xe800000000000000000000000000000000000000000000000000000000\ncalldatasize_ERC20: 0x4\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/27/0x881f21d3e2d2d4f48d815f41bea8dbdcf0e24e50.sol", "function": "fallback", "lineno": 37, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1183, "code": "  }\n\n    function w", "debug": "", "description": "In the function `withdraw(uint256)` the following predictable state variables are used to determine Ether recipient:\n- block.timestamp\n", "filename": "/unique_chucks/27/0x881f21d3e2d2d4f48d815f41bea8dbdcf0e24e50.sol", "function": "withdraw(uint256)", "lineno": 51, "title": "Dependence on predictable environment variable", "type": "Warning"}, {"address": 1618, "code": "l >= amount && Deposits[msg.sender] >", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/27/0x881f21d3e2d2d4f48d815f41bea8dbdcf0e24e50.sol", "function": "withdrawToken(address,uint256)", "lineno": 55, "title": "Message call to external contract", "type": "Warning"}, {"address": 1618, "code": "l >= amount && Deposits[msg.sender] >", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1926\nCall at address: 1926\n", "filename": "/unique_chucks/27/0x881f21d3e2d2d4f48d815f41bea8dbdcf0e24e50.sol", "function": "withdrawToken(address,uint256)", "lineno": 55, "title": "Multiple Calls", "type": "Information"}, {"address": 1926, "code": "  }\n\n    function MinimumDeposit() public", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/27/0x881f21d3e2d2d4f48d815f41bea8dbdcf0e24e50.sol", "function": "withdrawToken(address,uint256)", "lineno": 58, "title": "Message call to external contract", "type": "Warning"}], "success": true}