{"error": null, "issues": [{"address": 77, "code": "r(ret);\n            \n   ", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 286\n", "filename": "/unique_chucks/28/0x82d4fae5b529fd52e464bcf7d5d737d0fd313f37.sol", "function": "fallback", "lineno": 19, "title": "Multiple Calls", "type": "Information"}, {"address": 180, "code": "eed1+seed2)) % maxval;\n            \n         ", "debug": "The exception is triggered under the following conditions:\n\nretval_77: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncallvalue: 0x45\nstorage_1: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/28/0x82d4fae5b529fd52e464bcf7d5d737d0fd313f37.sol", "function": "fallback", "lineno": 25, "title": "Exception state", "type": "Informational"}, {"address": 286, "code": "           targets[maxva", "debug": "", "description": "In the function `fallback` the following predictable state variables are used to determine Ether recipient:\n- block.coinbase\n- block.timestamp\n- block.number\n", "filename": "/unique_chucks/28/0x82d4fae5b529fd52e464bcf7d5d737d0fd313f37.sol", "function": "fallback", "lineno": 29, "title": "Dependence on predictable environment variable", "type": "Warning"}, {"address": 286, "code": "           targets[maxva", "debug": "", "description": "In the function `fallback` predictable expression 'block.blockhash(block.number - some_storage_var)' is used to determine Ether recipient", "filename": "/unique_chucks/28/0x82d4fae5b529fd52e464bcf7d5d737d0fd313f37.sol", "function": "fallback", "lineno": 29, "title": "Dependence on predictable variable", "type": "Warning"}, {"address": 286, "code": "           targets[maxva", "debug": "", "description": "A possible transaction order independence vulnerability exists in function fallback. The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/28/0x82d4fae5b529fd52e464bcf7d5d737d0fd313f37.sol", "function": "fallback", "lineno": 29, "title": "Transaction order dependence", "type": "Warning"}, {"address": 405, "code": "se{\n    ", "debug": "storage_1: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nretval_286: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nretval_77: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncallvalue: 0x45\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/28/0x82d4fae5b529fd52e464bcf7d5d737d0fd313f37.sol", "function": "fallback", "lineno": 33, "title": "Integer Overflow ", "type": "Warning"}], "success": true}