{
  "contract": "0x6d6a99e9e94923a9992a0593ea0298bf7542be67",
  "tool": "mythril",
  "start": 1563556944.8872,
  "end": 1563557107.5870945,
  "duration": 162.69989442825317,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 1193,
        "code": "external view returns(address, bytes32, uint){\n        bet storage foundBet = betEvents[creator][eventId].bets[betId];\n        return (foundBet.person, foundBet.bidNam",
        "debug": "storage_2 +\n4*calldata_dapBetting_32 + 36 +\nkeccac_9_+\n12*calldata_dapBetting_32_+_4_+\nkeccac_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_dapBetting_4: 0x800000000000000000000000000000000000000000000000000000000000000\ncalldata_dapBetting_32 + 36: 0x0\ncalldata_dapBetting_32 + 4: 0x0\nstorage_9 +\n12*calldata_dapBetting_32 + 4 +\nkeccac_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_dapBetting_4: 0x1\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_dapBetting_4: 0x1\ncalldata_dapBetting_0: 0xa7e5cb3e00000000000000000000000000000000000000000000000000000000\ncalldatasize_dapBetting: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `getWhoBet(address,uint256,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/15/0x6d6a99e9e94923a9992a0593ea0298bf7542be67.sol",
        "function": "getWhoBet(address,uint256,uint256)",
        "lineno": 239,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1681,
        "code": " betEvents;\n    mapping (address => uint) public",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_11 +\n12*calldata_dapBetting_32 + 4 +\nkeccac_keccac_1461501637330902918203684832716283019655932542975_&\ncalldata_dapBetting_4: 0x8000\ncalldata_dapBetting_32 + 4: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\ncalldata_dapBetting_4: 0x1\ncalldata_dapBetting_0: 0xf4e10de200000000000000000000000000000000000000000000000000000000\ncalldatasize_dapBetting: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/15/0x6d6a99e9e94923a9992a0593ea0298bf7542be67.sol",
        "function": "_function_0xf4e10de2",
        "lineno": 39,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 1759,
        "code": "rbitrator, uint fee, uint256 endBlock, uint256 minBid, uint256 maxBid) external{\n        \n        require(fee < 100);\n        /* check whether event with such name already exist */\n        bool found;\n        for (uint8 x = 0;x<betEvents[msg.sender].length;x++){\n            if(betEvents[msg.sender][x].name == name){\n                found = true;\n            }\n        }\n        require(!found);\n        \n        /* check names for duplicates */\n        for (uint8 y=0;i<names.length;i++){\n            require(names[y] != names[y+1]);\n        }\n        \n        uint newId = betEvents[msg.sender].length++;\n        betEvents[msg.sender][newId].id = newId;\n        betEvents[msg.sender][newId].name = name;\n        betEvents[msg.sender][newId].arbitrator = arbitrator;\n        betEvents[msg.sender][newId].status = eventStatus.open;\n        betEvents[msg.sender][newId].creator = msg.sender;\n        betEvents[msg.sender][newId].endBlock = endBlock;\n        betEvents[msg.sender][newId].minBid = minBid;\n        betEvents[msg.sender][newId].maxBid = maxBid;\n        betEvents[msg.sender][newId].arbitratorFee = fee;\n        \n        for (uint8 i = 0;i < names.length; i++){\n            uint newBidId = betEvents[msg.sender][newId].bids.length++;\n            betEvents[msg.sender][newId].bids[newBidId].name = names[i];\n            betEvents[msg.sender][newId].bids[newBidId].id = newBidId;\n        }\n        \n        emit eventCreated(newId, msg.sender);\n    }\n    \n    function makeBet(address creator, uint eventId, bytes32 bidName) payable external{\n   ",
        "debug": "calldata_dapBetting_32 + 4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_dapBetting_0: 0xfb8dd3bb00000000000000000000000000000000000000000000000000000000\ncalldatasize_dapBetting: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `createEvent(bytes32,bytes32[],address,uint256,uint256,uint256,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/15/0x6d6a99e9e94923a9992a0593ea0298bf7542be67.sol",
        "function": "createEvent(bytes32,bytes32[],address,uint256,uint256,uint256,uint256)",
        "lineno": 62,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1886,
        "code": "eventId].bids.length;\n  ",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_dapBetting_0: 0x2c1a9e00000000000000000000000000000000000000000000000000000000\ncalldatasize_dapBetting: 0x4\ncalldata_dapBetting_32 + 4: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/15/0x6d6a99e9e94923a9992a0593ea0298bf7542be67.sol",
        "function": "fallback",
        "lineno": 223,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 1989,
        "code": "s[bidId];\n        return(fo",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_dapBetting_32 + 4: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_dapBetting_4: 0x0\ncalldata_dapBetting_0: 0xe5689bc00000000000000000000000000000000000000000000000000000000\ncalldatasize_dapBetting: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/15/0x6d6a99e9e94923a9992a0593ea0298bf7542be67.sol",
        "function": "getBidsNum(address,uint256)",
        "lineno": 227,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2435,
        "code": "finished || betEvents[creat",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_dapBetting_32 + 4: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_dapBetting_4: 0x0\ncalldata_dapBetting_0: 0x4a17338300000000000000000000000000000000000000000000000000000000\ncalldatasize_dapBetting: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/15/0x6d6a99e9e94923a9992a0593ea0298bf7542be67.sol",
        "function": "determineWinner(address,uint256,bytes32)",
        "lineno": 51,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2477,
        "code": "finished || betEvents[creator][eventId].endBlock < block.n",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_11 +\n12*calldata_dapBetting_32 + 4 +\nkeccac_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_dapBetting_4: 0x8000\ncalldata_dapBetting_32 + 4: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_dapBetting_4: 0x1\ncalldata_dapBetting_0: 0x4a17338300000000000000000000000000000000000000000000000000000000\ncalldatasize_dapBetting: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/15/0x6d6a99e9e94923a9992a0593ea0298bf7542be67.sol",
        "function": "determineWinner(address,uint256,bytes32)",
        "lineno": 51,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 4488,
        "code": "dBlock > 0){\n        \trequi",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_dapBetting_32 + 4: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_dapBetting_4: 0x0\ncalldata_dapBetting_0: 0x52fa371200000000000000000000000000000000000000000000000000000000\ncalldatasize_dapBetting: 0x4\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/15/0x6d6a99e9e94923a9992a0593ea0298bf7542be67.sol",
        "function": "makeBet(address,uint256,bytes32)",
        "lineno": 101,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 4530,
        "code": "dBlock > 0){\n        \trequire(block.number > betEvents",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_11 +\n12*calldata_dapBetting_32 + 4 +\nkeccac_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_dapBetting_4: 0x8000\ncalldata_dapBetting_32 + 4: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_dapBetting_4: 0x1\ncalldata_dapBetting_0: 0x52fa371200000000000000000000000000000000000000000000000000000000\ncalldatasize_dapBetting: 0x4\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/15/0x6d6a99e9e94923a9992a0593ea0298bf7542be67.sol",
        "function": "makeBet(address,uint256,bytes32)",
        "lineno": 101,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 6606,
        "code": "tion getBet(address creator",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_dapBetting_32 + 4: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_dapBetting_4: 0x0\ncalldata_dapBetting_0: 0x56da774300000000000000000000000000000000000000000000000000000000\ncalldatasize_dapBetting: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/15/0x6d6a99e9e94923a9992a0593ea0298bf7542be67.sol",
        "function": "getBetsNums(address,uint256)",
        "lineno": 239,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 6716,
        "code": "i<betEvents[creator].length",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_dapBetting_32 + 4: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_dapBetting_4: 0x0\ncalldata_dapBetting_0: 0x87734d5300000000000000000000000000000000000000000000000000000000\ncalldatasize_dapBetting: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/15/0x6d6a99e9e94923a9992a0593ea0298bf7542be67.sol",
        "function": "getBet(address,uint256,uint256)",
        "lineno": 245,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 6746,
        "code": "i<betEvents[creator].length;i++){\n     ",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_dapBetting_32 + 4: 0x0\ncalldata_dapBetting_32 + 36: 0x0\nstorage_10 +\n12*calldata_dapBetting_32 + 4 +\nkeccac_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_dapBetting_4: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_dapBetting_4: 0x1\ncalldata_dapBetting_0: 0x87734d5300000000000000000000000000000000000000000000000000000000\ncalldatasize_dapBetting: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/15/0x6d6a99e9e94923a9992a0593ea0298bf7542be67.sol",
        "function": "getBet(address,uint256,uint256)",
        "lineno": 245,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 6906,
        "code": "s[creator][eventId].bets.le",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_dapBetting_32 + 4: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_dapBetting_4: 0x0\ncalldata_dapBetting_0: 0x97f7b4f700000000000000000000000000000000000000000000000000000000\ncalldatasize_dapBetting: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/15/0x6d6a99e9e94923a9992a0593ea0298bf7542be67.sol",
        "function": "getBid(address,uint256,uint256)",
        "lineno": 232,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 6936,
        "code": "s[creator][eventId].bets.length;\n    }\n",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_dapBetting_32 + 4: 0x0\ncalldata_dapBetting_32 + 36: 0x0\nstorage_9 +\n12*calldata_dapBetting_32 + 4 +\nkeccac_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_dapBetting_4: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_dapBetting_4: 0x1\ncalldata_dapBetting_0: 0x97f7b4f700000000000000000000000000000000000000000000000000000000\ncalldatasize_dapBetting: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/15/0x6d6a99e9e94923a9992a0593ea0298bf7542be67.sol",
        "function": "getBid(address,uint256,uint256)",
        "lineno": 232,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 7060,
        "code": "tId];\n        return (found",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_dapBetting_32 + 4: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_dapBetting_4: 0x0\ncalldata_dapBetting_0: 0xa7e5cb3e00000000000000000000000000000000000000000000000000000000\ncalldatasize_dapBetting: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/15/0x6d6a99e9e94923a9992a0593ea0298bf7542be67.sol",
        "function": "getWhoBet(address,uint256,uint256)",
        "lineno": 240,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 7090,
        "code": "tId];\n        return (foundBet.person, ",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_dapBetting_32 + 4: 0x0\ncalldata_dapBetting_32 + 36: 0x0\nstorage_9 +\n12*calldata_dapBetting_32 + 4 +\nkeccac_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_dapBetting_4: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_dapBetting_4: 0x1\ncalldata_dapBetting_0: 0xa7e5cb3e00000000000000000000000000000000000000000000000000000000\ncalldatasize_dapBetting: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/15/0x6d6a99e9e94923a9992a0593ea0298bf7542be67.sol",
        "function": "getWhoBet(address,uint256,uint256)",
        "lineno": 240,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 7148,
        "code": "bets[betId];\n        return (foundBet.person, foundBe",
        "debug": "storage_2 +\n4*calldata_dapBetting_32 + 36 +\nkeccac_9_+\n12*calldata_dapBetting_32_+_4_+\nkeccac_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_dapBetting_4: 0x8421003f084001f4210815cf88407c00000000000000037c1d000e8d178001f\ncalldata_dapBetting_32 + 36: 0x0\ncalldata_dapBetting_32 + 4: 0x0\nstorage_9 +\n12*calldata_dapBetting_32 + 4 +\nkeccac_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_dapBetting_4: 0x1\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_dapBetting_4: 0x1\ncalldata_dapBetting_0: 0xa7e5cb3e00000000000000000000000000000000000000000000000000000000\ncalldatasize_dapBetting: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `getWhoBet(address,uint256,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/15/0x6d6a99e9e94923a9992a0593ea0298bf7542be67.sol",
        "function": "getWhoBet(address,uint256,uint256)",
        "lineno": 240,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 7150,
        "code": "bets[betId];\n        return (foundBet.person, foundBe",
        "debug": "storage_2 +\n4*calldata_dapBetting_32 + 36 +\nkeccac_9_+\n12*calldata_dapBetting_32_+_4_+\nkeccac_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_dapBetting_4: 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffb\ncalldata_dapBetting_32 + 36: 0x0\ncalldata_dapBetting_32 + 4: 0x0\nstorage_9 +\n12*calldata_dapBetting_32 + 4 +\nkeccac_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_dapBetting_4: 0x1\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_dapBetting_4: 0x1\ncalldata_dapBetting_0: 0xa7e5cb3e00000000000000000000000000000000000000000000000000000000\ncalldatasize_dapBetting: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `getWhoBet(address,uint256,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/15/0x6d6a99e9e94923a9992a0593ea0298bf7542be67.sol",
        "function": "getWhoBet(address,uint256,uint256)",
        "lineno": 240,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 7348,
        "code": "Events[creator][eventId].ar",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_dapBetting_32 + 4: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_dapBetting_4: 0x0\ncalldata_dapBetting_0: 0xeba3840200000000000000000000000000000000000000000000000000000000\ncalldatasize_dapBetting: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/15/0x6d6a99e9e94923a9992a0593ea0298bf7542be67.sol",
        "function": "finishEvent(address,uint256)",
        "lineno": 137,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 7390,
        "code": "Events[creator][eventId].arbitrator);\n        betEvent",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_11 +\n12*calldata_dapBetting_32 + 4 +\nkeccac_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_dapBetting_4: 0x8000\ncalldata_dapBetting_32 + 4: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_dapBetting_4: 0x1\ncalldata_dapBetting_0: 0xeba3840200000000000000000000000000000000000000000000000000000000\ncalldatasize_dapBetting: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/15/0x6d6a99e9e94923a9992a0593ea0298bf7542be67.sol",
        "function": "finishEvent(address,uint256)",
        "lineno": 137,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 7925,
        "code": " betEvents;\n    mapping (address => uint) public",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_dapBetting_32 + 4: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\ncalldata_dapBetting_4: 0x0\ncalldata_dapBetting_0: 0xf4e10de200000000000000000000000000000000000000000000000000000000\ncalldatasize_dapBetting: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/15/0x6d6a99e9e94923a9992a0593ea0298bf7542be67.sol",
        "function": "_function_0xf4e10de2",
        "lineno": 39,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 8373,
        "code": "length++;\n",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_dapBetting_4 + calldata_dapBetting_32 + 4: 0x1\ncalldata_dapBetting_32 + 68: 0x63\ncalldata_dapBetting_0: 0xfb8dd3bb00000000000000000000000000000000000000000000000000000000\ncalldatasize_dapBetting: 0x4\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/15/0x6d6a99e9e94923a9992a0593ea0298bf7542be67.sol",
        "function": "createEvent(bytes32,bytes32[],address,uint256,uint256,uint256,uint256)",
        "lineno": 79,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 10574,
        "code": "g.sender);\n    }\n    \n ",
        "debug": "SOLVER OUTPUT:\ncalldata_dapBetting_0: 0xb3423eec00000000000000000000000000000000000000000000000000000000\ncalldatasize_dapBetting: 0x4\ncallvalue: 0x0\n",
        "description": "In the function `requestWithdraw()` a non-zero amount of Ether is sent to msg.sender.\nIt seems that this function can be called without restrictions.",
        "filename": "/unique_chucks/15/0x6d6a99e9e94923a9992a0593ea0298bf7542be67.sol",
        "function": "requestWithdraw()",
        "lineno": 197,
        "title": "Ether send",
        "type": "Warning"
      }
    ],
    "success": true
  }
}