{"error": null, "issues": [{"address": 3118, "code": "}    \n    \n    function getProfitFromSender() public vie", "debug": "SOLVER OUTPUT:\ncalldata_one_eight_0: 0xf851a44000000000000000000000000000000000000000000000000000000000\ncalldatasize_one_eight: 0x4\ncallvalue: 0x0\n", "description": "The function `admin()` executes the SUICIDE instruction. The remaining Ether is sent to: 1461501637330902918203684832716283019655932542975 &\n783757310766549602837078591177718725904875986289\n\nIt seems that this function can be called without restrictions.", "filename": "/unique_chucks/20/0x098b6f16c0e6fff51b891cb3ef0248fda4c9f53b.sol", "function": "admin()", "lineno": 61, "title": "Unchecked SUICIDE", "type": "Warning"}, {"address": 3248, "code": "internal pure ", "debug": "The exception is triggered under the following conditions:\n\ntimestamp: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x1\ncalldata_one_eight_0: 0xe3b6113500000000000000000000000000000000000000000000000000000000\ncalldatasize_one_eight: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/20/0x098b6f16c0e6fff51b891cb3ef0248fda4c9f53b.sol", "function": "reinvestProfit()", "lineno": 142, "title": "Exception state", "type": "Informational"}], "success": true}