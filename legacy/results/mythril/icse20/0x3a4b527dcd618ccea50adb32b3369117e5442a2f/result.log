{"error": null, "issues": [{"address": 1434, "code": "(_checks > 0);\n    require(balances[_payee] == 0);\n\n    MintableToken(this).mint(_payee, _checks);\n  }\n\n  // irreversibly close the adding of checks\n  function finishedLoading() onlyAdmin canMint public {\n    MintableToken(this).finishMinting();\n  }\n\n  function ", "debug": "calldata_ZUR_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_ZUR_0: 0x5384455200000000000000000000000000000000000000000000000000000000\ncalldatasize_ZUR: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `_function_0x53844552`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/8/0x3a4b527dcd618ccea50adb32b3369117e5442a2f.sol", "function": "_function_0x53844552", "lineno": 566, "title": "Integer Overflow ", "type": "Warning"}, {"address": 5275, "code": ";\n\n// File: openze", "debug": "storage_7: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_ZUR_4: 0x0\ncalldata_ZUR_4: 0xffffffffffffffffffffffffffffffffffffffff\nstorage_4: 0x0\ncaller: 0x0\ncalldata_ZUR_0: 0x39639fbd00000000000000000000000000000000000000000000000000000000\ncalldatasize_ZUR: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `trackToken(address)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/8/0x3a4b527dcd618ccea50adb32b3369117e5442a2f.sol", "function": "trackToken(address)", "lineno": 1, "title": "Integer Overflow ", "type": "Warning"}, {"address": 6418, "code": ", startingBalance);\n    return", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/8/0x3a4b527dcd618ccea50adb32b3369117e5442a2f.sol", "function": "getUnclaimedTokenAmount(address,address)", "lineno": 500, "title": "Message call to external contract", "type": "Warning"}, {"address": 14030, "code": "}\n\n// F", "debug": "calldata_ZUR_32 + 4: 0x57f25cd000000000000000000000000000000000000000000000000000000000\nstorage_1: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_3: 0x0\ncaller: 0x0\ncalldata_ZUR_0: 0x40c10f1900000000000000000000000000000000000000000000000000000000\ncalldatasize_ZUR: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `mint(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/8/0x3a4b527dcd618ccea50adb32b3369117e5442a2f.sol", "function": "mint(address,uint256)", "lineno": 53, "title": "Integer Overflow ", "type": "Warning"}, {"address": 14043, "code": "enzeppelin-soli", "debug": "The exception is triggered under the following conditions:\n\nretval_6418: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_ZUR_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nreturndatasize: 0x20\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_ZUR_0: 0x58a3d1a100000000000000000000000000000000000000000000000000000000\ncalldatasize_ZUR: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/8/0x3a4b527dcd618ccea50adb32b3369117e5442a2f.sol", "function": "getUnclaimedTokenAmount(address,address)", "lineno": 55, "title": "Exception state", "type": "Informational"}, {"address": 14121, "code": "racts t", "debug": "The exception is triggered under the following conditions:\n\nbalance_at_1461501637330902918203684832716283019655932542975 & 0: 0x0\nstorage_5: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_ZUR_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_ZUR_0: 0x2656455f00000000000000000000000000000000000000000000000000000000\ncalldatasize_ZUR: 0x4\nstorage_1: 0x0\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/8/0x3a4b527dcd618ccea50adb32b3369117e5442a2f.sol", "function": "claimEthFor(address)", "lineno": 38, "title": "Exception state", "type": "Informational"}], "success": true}