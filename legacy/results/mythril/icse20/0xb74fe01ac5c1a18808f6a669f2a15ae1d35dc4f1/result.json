{
  "contract": "0xb74fe01ac5c1a18808f6a669f2a15ae1d35dc4f1",
  "tool": "mythril",
  "start": 1563615100.9197135,
  "end": 1563615219.2022343,
  "duration": 118.28252077102661,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 293,
        "code": "mt = mul(_amt, _tos.length);\n    uint256 tokenBalance = token.balanceOf(address(this));\n    require(tokenBalance >= totalSendingAmt);\n\n    for(uint i=0; i<_tos.length; i++) {\n      if(_tos[i] != 0x0) {\n        token.safeTransfer(_tos[i], _amt);\n      }\n    }\n  }\n\n  function claimTokens(address _to) public onlyOwner {\n    require(_to != 0x0);\n    \n    uint256 tokenBalance = token.balanceOf(address(this));\n    require(tokenBala",
        "debug": "calldata_TokenDistor_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_TokenDistor_0: 0x202f37cd00000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenDistor: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `distStaticAmount(address[],uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/12/0xb74fe01ac5c1a18808f6a669f2a15ae1d35dc4f1.sol",
        "function": "distStaticAmount(address[],uint256)",
        "lineno": 159,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 405,
        "code": "dingAmt = 0;\n\n    for(uint i=0; i<_tos.length; i++) {\n      /* require(_tos[i] != 0x0);\n      require(_amts[i] > 0); */\n\n      totalSendingAmt = add(totalSendingAmt, _amts[i]);\n    }\n\n    uint256 tokenBalance = token.balanceOf(address(this));\n    require(tokenBalance >= totalSendingAmt);\n\n    for(i=0; i<_tos.length; i++) {\n      if(_tos[i] != 0x0 && _amts[i] > 0) {\n        token.safeTransfer(_tos[i], _amts[i]);\n      }\n    }\n  }\n\n  function distStaticAmount(address[] _tos, uint256 _amt) public onlyOwner {\n    require(_tos.length > 0);\n    require(_amt > 0);\n\n    uint256 totalSe",
        "debug": "calldata_TokenDistor_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_TokenDistor_0: 0x6724348200000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenDistor: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `airdrop(address[],uint256[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/12/0xb74fe01ac5c1a18808f6a669f2a15ae1d35dc4f1.sol",
        "function": "airdrop(address[],uint256[])",
        "lineno": 136,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1381,
        "code": ".safeTransfer(_tos[i], _amt);\n",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/12/0xb74fe01ac5c1a18808f6a669f2a15ae1d35dc4f1.sol",
        "function": "distStaticAmount(address[],uint256)",
        "lineno": 165,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 2014,
        "code": "ts[i] > 0) {\n        token.saf",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/12/0xb74fe01ac5c1a18808f6a669f2a15ae1d35dc4f1.sol",
        "function": "airdrop(address[],uint256[])",
        "lineno": 149,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 2014,
        "code": "ts[i] > 0) {\n        token.saf",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3066\n",
        "filename": "/unique_chucks/12/0xb74fe01ac5c1a18808f6a669f2a15ae1d35dc4f1.sol",
        "function": "airdrop(address[],uint256[])",
        "lineno": 149,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 2014,
        "code": "ts[i] > 0) {\n        token.saf",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function airdrop(address[],uint256[]). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/12/0xb74fe01ac5c1a18808f6a669f2a15ae1d35dc4f1.sol",
        "function": "airdrop(address[],uint256[])",
        "lineno": 149,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 2695,
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/12/0xb74fe01ac5c1a18808f6a669f2a15ae1d35dc4f1.sol",
        "function": "claimTokens(address)",
        "lineno": 178,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 2695,
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3066\n",
        "filename": "/unique_chucks/12/0xb74fe01ac5c1a18808f6a669f2a15ae1d35dc4f1.sol",
        "function": "claimTokens(address)",
        "lineno": 178,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 2695,
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function claimTokens(address). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/12/0xb74fe01ac5c1a18808f6a669f2a15ae1d35dc4f1.sol",
        "function": "claimTokens(address)",
        "lineno": 178,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 3066,
        "code": "56 value) internal {\n    ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/12/0xb74fe01ac5c1a18808f6a669f2a15ae1d35dc4f1.sol",
        "function": "claimTokens(address)",
        "lineno": 109,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 3066,
        "code": "56 value) internal {\n    ",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function claimTokens(address). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/12/0xb74fe01ac5c1a18808f6a669f2a15ae1d35dc4f1.sol",
        "function": "claimTokens(address)",
        "lineno": 109,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 3154,
        "code": "ax64(uint64 a,",
        "debug": "The exception is triggered under the following conditions:\n\nmem_128 +\n32 +\n32*calldata_TokenDistor_4 + calldata_TokenDistor_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_TokenDistor_4 + calldata_TokenDistor_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nmem_0 + 192 + 32*calldata_TokenDistor_4 + calldata_TokenDistor_4: 0x1\nmem_32 +\n192 +\n32*calldata_TokenDistor_4 + calldata_TokenDistor_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_0: 0x0\ncaller: 0x0\ncalldata_TokenDistor_0: 0x6724348200000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenDistor: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/12/0xb74fe01ac5c1a18808f6a669f2a15ae1d35dc4f1.sol",
        "function": "airdrop(address[],uint256[])",
        "lineno": 52,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}