{
  "contract": "0x056017c55ae7ae32d12aef7c679df83a85ca75ff",
  "tool": "mythril",
  "start": 1563254968.207279,
  "end": 1563255099.05475,
  "duration": 130.84747099876404,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 506,
        "code": "      return canRedeemUTXOHash(merkleLeafHash, proof);\n    }\n      \n    /**\n     * @dev Verify that a UTXO with the specified Merkle leaf hash can be redeemed\n     * @param merkleLeafHash Merkle tree hash of the UTXO to be checked\n     * @param proof Merkle tree proof\n     * @return Whether or not the UTXO with the specified hash can be redeemed\n     */\n    function canRedeemUTXOHash(bytes32 merkleLeafHash, bytes",
        "debug": "calldata_WyvernToken_32 + 100: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_WyvernToken_0: 0x6f8470100000000000000000000000000000000000000000000000000000000\ncalldatasize_WyvernToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `canRedeemUTXO(bytes32,bytes20,uint8,uint256,bytes)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x056017c55ae7ae32d12aef7c679df83a85ca75ff.sol",
        "function": "canRedeemUTXO(bytes32,bytes20,uint8,uint256,bytes)",
        "lineno": 356,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 966,
        "code": " Bitcoin address (no base58-check encoding)\n     * @param outputIndex Output index of UTXO\n     * @param satoshis Amount of UTXO in satoshis\n     * @param proof Merkle tree proof\n     *",
        "debug": "calldata_WyvernToken_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_WyvernToken_0: 0x1858cb5b00000000000000000000000000000000000000000000000000000000\ncalldatasize_WyvernToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `verifyProof(bytes,bytes32)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x056017c55ae7ae32d12aef7c679df83a85ca75ff.sol",
        "function": "verifyProof(bytes,bytes32)",
        "lineno": 345,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1373,
        "code": "DSA public key to convert\n     * @param isCompressed Whether or not the Bitcoin address was generated from a compressed key\n     * @return Raw Bitcoin address (no base58-check encoding",
        "debug": "calldata_WyvernToken_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_WyvernToken_0: 0x5418796c00000000000000000000000000000000000000000000000000000000\ncalldatasize_WyvernToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `_function_0x5418796c`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x056017c55ae7ae32d12aef7c679df83a85ca75ff.sol",
        "function": "_function_0x5418796c",
        "lineno": 306,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 9961,
        "code": "int256 a, uint",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_WyvernToken_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_0: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_WyvernToken_0: 0x42966c6800000000000000000000000000000000000000000000000000000000\ncalldatasize_WyvernToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0x056017c55ae7ae32d12aef7c679df83a85ca75ff.sol",
        "function": "burn(uint256)",
        "lineno": 60,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 9979,
        "code": "20Bas",
        "debug": "calldata_WyvernToken_32 + 36: 0xfe51000008ce80008001c1d33616877ffffffffffffff7ffffe10000398d50ac\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_WyvernToken_32_+_4: 0xc050fffff320c00020003d81af848540000000000000040000110001bd062022\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xfe51000008ce80008001c1d33616877ffffffffffffff7ffffe10000398d50ac\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_WyvernToken_4: 0xfe51000008ce80008001c1d33616877ffffffffffffff7ffffe10000398d50ac\ncalldata_WyvernToken_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_WyvernToken_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_WyvernToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `transferFrom(address,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x056017c55ae7ae32d12aef7c679df83a85ca75ff.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 67,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 9992,
        "code": "uint256 public",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_WyvernToken_32 + 36: 0x53632f08ddbb360427befb69cb0d577a76825c1eb02b4cefbf971939ae256117\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_WyvernToken_32_+_4: 0xd32ba62e013a1e544c40f8298f8c838ef0ca495e903244487f8ba1f8c2a013e7\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x53632f08ddbb360427befb69cb0d577a76825c1eb02b4cefbf971939ae256117\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_WyvernToken_4: 0x53632f08ddbb360427befb69cb0d577a76825c1eb02b4cefbf971939ae256117\ncalldata_WyvernToken_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_WyvernToken_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_WyvernToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0x056017c55ae7ae32d12aef7c679df83a85ca75ff.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 68,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}