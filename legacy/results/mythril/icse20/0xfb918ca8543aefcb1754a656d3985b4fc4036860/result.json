{
  "contract": "0xfb918ca8543aefcb1754a656d3985b4fc4036860",
  "tool": "mythril",
  "start": 1563818690.3121004,
  "end": 1563818743.4842699,
  "duration": 53.17216944694519,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 1081,
        "code": "ce(msg.sender) >= _value);   // Check if the sender has enough\n      subBalance(msg.sender, _value);              // Subtract from the sender\n      subSupply(_value);                           // Updates totalSupply\n      emit Burn(msg.sender, _value);\n      return true;\n  }\n\n  /**\n   * Destroy tokens from other account\n   *\n   * Remove `_value`",
        "debug": "calldata_tokenRecipient_32 + 36: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_tokenRecipient_0: 0xcae9ca5100000000000000000000000000000000000000000000000000000000\ncalldatasize_tokenRecipient: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `approveAndCall(address,uint256,bytes)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/31/0xfb918ca8543aefcb1754a656d3985b4fc4036860.sol",
        "function": "approveAndCall(address,uint256,bytes)",
        "lineno": 592,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1884,
        "code": "amount) internal {\n    setBalan",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/31/0xfb918ca8543aefcb1754a656d3985b4fc4036860.sol",
        "function": "totalSupply()",
        "lineno": 341,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 2574,
        "code": "dress indexed to, uint256 va",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/31/0xfb918ca8543aefcb1754a656d3985b4fc4036860.sol",
        "function": "mintToken(address,uint256)",
        "lineno": 499,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 2574,
        "code": "dress indexed to, uint256 va",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 4572\n",
        "filename": "/unique_chucks/31/0xfb918ca8543aefcb1754a656d3985b4fc4036860.sol",
        "function": "mintToken(address,uint256)",
        "lineno": 499,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 3725,
        "code": "nder, _value);\n      return true;\n  }\n\n  /**\n   * Destroy tokens from ",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/31/0xfb918ca8543aefcb1754a656d3985b4fc4036860.sol",
        "function": "approveAndCall(address,uint256,bytes)",
        "lineno": 595,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 3980,
        "code": "dress indexed to, uint256 va",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/31/0xfb918ca8543aefcb1754a656d3985b4fc4036860.sol",
        "function": "freezeAccount(address,bool)",
        "lineno": 499,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 4179,
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/31/0xfb918ca8543aefcb1754a656d3985b4fc4036860.sol",
        "function": "freezeAccount(address,bool)",
        "lineno": 636,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 4572,
        "code": "ternal {\n      _storage.setUint(\"totalSupply\", totalSu",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/31/0xfb918ca8543aefcb1754a656d3985b4fc4036860.sol",
        "function": "getBalance(address)",
        "lineno": 337,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 4572,
        "code": "ternal {\n      _storage.setUint(\"totalSupply\", totalSu",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 4572\n",
        "filename": "/unique_chucks/31/0xfb918ca8543aefcb1754a656d3985b4fc4036860.sol",
        "function": "transfer(address,uint256)",
        "lineno": 337,
        "title": "Multiple Calls",
        "type": "Information"
      }
    ],
    "success": true
  }
}