{"error": null, "issues": [{"address": 573, "code": "       ClaimedTokens(_token, controller, balance);\n    }\n\n///////////", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/26/0x3b3a01d42c9cd96d428eb07a708c6b2d9925ae15.sol", "function": "fallback", "lineno": 700, "title": "Message call to external contract", "type": "Informational"}, {"address": 573, "code": "       ClaimedTokens(_token, controller, balance);\n    }\n\n///////////", "debug": "", "description": "A possible transaction order independence vulnerability exists in function fallback. The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/26/0x3b3a01d42c9cd96d428eb07a708c6b2d9925ae15.sol", "function": "fallback", "lineno": 700, "title": "Transaction order dependence", "type": "Warning"}, {"address": 1498, "code": "  cloneToken.changeController(msg.sender);\n\n        // An event to make the token easy to find on the blockchain\n        NewCloneToken(address(cloneToken), _snapshotBlock);\n        return address(cloneToken);\n    }\n\n////////////////\n// Generate and destroy tokens\n////////////////\n\n    /// @notice Generates `_amount` tokens that are assigned to `_owner`\n    /// @param _owner The address that will be assigned the new tokens\n    /// @param _amount The quantity of tokens generated\n    /// @return True if the tokens are generated correctly\n    function generateTokens(address _owner, uint _amount\n    ) public onlyController returns (bool) {\n        uint curTotalSupply = totalSupply();\n        require(curTotalSupply + _amount >= curTotalSupply); // Check for overflow\n   ", "debug": "calldata_TokenController_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_TokenController_0: 0x6638c08700000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenController: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `createCloneToken(string,uint8,string,uint256,bool)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/26/0x3b3a01d42c9cd96d428eb07a708c6b2d9925ae15.sol", "function": "createCloneToken(string,uint8,string,uint256,bool)", "lineno": 555, "title": "Integer Overflow ", "type": "Warning"}, {"address": 3637, "code": "s\n    /// @return Amount of remaining tokens of _owner that _spender", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/26/0x3b3a01d42c9cd96d428eb07a708c6b2d9925ae15.sol", "function": "approve(address,uint256)", "lineno": 433, "title": "Message call to external contract", "type": "Informational"}, {"address": 3637, "code": "s\n    /// @return Amount of remaining tokens of _owner that _spender", "debug": "", "description": "A possible transaction order independence vulnerability exists in function approve(address,uint256). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/26/0x3b3a01d42c9cd96d428eb07a708c6b2d9925ae15.sol", "function": "approve(address,uint256)", "lineno": 433, "title": "Transaction order dependence", "type": "Warning"}, {"address": 3833, "code": "pend\n    function allowance(address _ow", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/26/0x3b3a01d42c9cd96d428eb07a708c6b2d9925ae15.sol", "function": "approve(address,uint256)", "lineno": 435, "title": "State change after external call", "type": "Warning"}, {"address": 5058, "code": " /// @return The total amount of tokens at `_blockNumber`\n    function ", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/26/0x3b3a01d42c9cd96d428eb07a708c6b2d9925ae15.sol", "function": "balanceOf(address)", "lineno": 502, "title": "Message call to external contract", "type": "Informational"}, {"address": 5829, "code": "that are assigned to `_owner`\n    /// @param _owner The address that will be assigned the new tokens\n    /// @param _amount The quantity of tokens generated\n    /// @return True if the tokens are generated correctly\n   ", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/26/0x3b3a01d42c9cd96d428eb07a708c6b2d9925ae15.sol", "function": "createCloneToken(string,uint8,string,uint256,bool)", "lineno": 566, "title": "Message call to external contract", "type": "Informational"}, {"address": 5829, "code": "that are assigned to `_owner`\n    /// @param _owner The address that will be assigned the new tokens\n    /// @param _amount The quantity of tokens generated\n    /// @return True if the tokens are generated correctly\n   ", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 6045\n", "filename": "/unique_chucks/26/0x3b3a01d42c9cd96d428eb07a708c6b2d9925ae15.sol", "function": "createCloneToken(string,uint8,string,uint256,bool)", "lineno": 566, "title": "Multiple Calls", "type": "Information"}, {"address": 6045, "code": "erateTokens(address _owner, uint _amoun", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/26/0x3b3a01d42c9cd96d428eb07a708c6b2d9925ae15.sol", "function": "createCloneToken(string,uint8,string,uint256,bool)", "lineno": 570, "title": "Message call to external contract", "type": "Warning"}, {"address": 7027, "code": "ame of the clone token\n    /// @param _cloneDecimalUnits Number o", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/26/0x3b3a01d42c9cd96d428eb07a708c6b2d9925ae15.sol", "function": "totalSupply()", "lineno": 530, "title": "Message call to external contract", "type": "Informational"}], "success": true}