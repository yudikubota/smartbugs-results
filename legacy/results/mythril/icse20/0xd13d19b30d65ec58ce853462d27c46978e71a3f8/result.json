{
  "contract": "0xd13d19b30d65ec58ce853462d27c46978e71a3f8",
  "tool": "mythril",
  "start": 1563276015.9045472,
  "end": 1563276130.9077387,
  "duration": 115.00319147109985,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 490,
        "code": "w returns (address[]) {\n        return nodes;\n    }\n\n    function addNode(address _",
        "debug": "storage_1: 0x800000000000000000000000000000000000000000000000000000000000000\ncalldata_BrickInterface_0: 0xe29581aa00000000000000000000000000000000000000000000000000000000\ncalldatasize_BrickInterface: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `getNodes()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0xd13d19b30d65ec58ce853462d27c46978e71a3f8.sol",
        "function": "getNodes()",
        "lineno": 31,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 644,
        "code": "ublic nodes;\n    mappi",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_BrickInterface_4: 0x0\nstorage_1: 0x0\ncalldata_BrickInterface_0: 0x1c53c28000000000000000000000000000000000000000000000000000000000\ncalldatasize_BrickInterface: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0xd13d19b30d65ec58ce853462d27c46978e71a3f8.sol",
        "function": "_function_0x1c53c280",
        "lineno": 12,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 1386,
        "code": ";\n\n\ncontract Brick",
        "debug": "storage_1: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_BrickInterface_4: 0xffffffffffffffffffffffffffffffffffffffff\nstorage_0: 0x0\ncaller: 0x0\ncalldata_BrickInterface_0: 0x9d95f1cc00000000000000000000000000000000000000000000000000000000\ncalldatasize_BrickInterface: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `addNode(address)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0xd13d19b30d65ec58ce853462d27c46978e71a3f8.sol",
        "function": "addNode(address)",
        "lineno": 1,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1993,
        "code": ";\n    }\n\n}\n\n",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_1: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_BrickInterface_4: 0x1\ncalldata_BrickInterface_4: 0xffffffffffffffffffffffffffffffffffffffff\nstorage_0: 0x0\ncaller: 0x0\ncalldata_BrickInterface_0: 0xb2b99ec900000000000000000000000000000000000000000000000000000000\ncalldatasize_BrickInterface: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0xd13d19b30d65ec58ce853462d27c46978e71a3f8.sol",
        "function": "removeNode(address)",
        "lineno": 46,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2154,
        "code": "on addNode(a",
        "debug": "storage_1: 0x8421003f084001f4210815cf88407c00000000000000037c1d000e8d178001f\ncalldata_BrickInterface_0: 0xe29581aa00000000000000000000000000000000000000000000000000000000\ncalldatasize_BrickInterface: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `getNodes()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0xd13d19b30d65ec58ce853462d27c46978e71a3f8.sol",
        "function": "getNodes()",
        "lineno": 35,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2156,
        "code": "on addNode(a",
        "debug": "storage_1: 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffb\ncalldata_BrickInterface_0: 0xe29581aa00000000000000000000000000000000000000000000000000000000\ncalldatasize_BrickInterface: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `getNodes()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0xd13d19b30d65ec58ce853462d27c46978e71a3f8.sol",
        "function": "getNodes()",
        "lineno": 35,
        "title": "Integer Overflow ",
        "type": "Warning"
      }
    ],
    "success": true
  }
}