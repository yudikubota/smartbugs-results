{
  "contract": "0x437cf0bf53634e3dfa5e3eaff3104004d50fb532",
  "tool": "mythril",
  "start": 1563520770.8832164,
  "end": 1563520932.2721097,
  "duration": 161.38889336585999,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 2414,
        "code": " granted to.\n   * @param _value uint256 The amo",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_VestedToken_32 + 4: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\ncalldata_VestedToken_4: 0x0\ncalldata_VestedToken_0: 0x2c71e60a00000000000000000000000000000000000000000000000000000000\ncalldatasize_VestedToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/9/0x437cf0bf53634e3dfa5e3eaff3104004d50fb532.sol",
        "function": "_function_0x2c71e60a",
        "lineno": 267,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2689,
        "code": "time to be checked\n   * @",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_VestedToken_32 + 4: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_VestedToken_4: 0x0\ncalldata_VestedToken_0: 0x600e85b700000000000000000000000000000000000000000000000000000000\ncalldatasize_VestedToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/9/0x437cf0bf53634e3dfa5e3eaff3104004d50fb532.sol",
        "function": "tokenGrant(address,uint256)",
        "lineno": 448,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3798,
        "code": ";\n\n/**\n * Math ope",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_VestedToken_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_3: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_VestedToken_32 + 100: 0xffffffffffffffff\ncalldata_VestedToken_32 + 68: 0xffffffffffffffff\ncalldata_VestedToken_32 + 36: 0xffffffffffffffff\ncalldata_VestedToken_0: 0x9754a4d900000000000000000000000000000000000000000000000000000000\ncalldatasize_VestedToken: 0x4\ncalldata_VestedToken_32 + 132: 0x0\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `grantVestedTokens(address,uint256,uint64,uint64,uint64,bool,bool)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/9/0x437cf0bf53634e3dfa5e3eaff3104004d50fb532.sol",
        "function": "grantVestedTokens(address,uint256,uint64,uint64,uint64,bool,bool)",
        "lineno": 1,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 5149,
        "code": "int64(now));\n\n    // remo",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_VestedToken_32 + 4: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_VestedToken_4: 0x0\ncalldata_VestedToken_0: 0xeb944e4c00000000000000000000000000000000000000000000000000000000\ncalldatasize_VestedToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/9/0x437cf0bf53634e3dfa5e3eaff3104004d50fb532.sol",
        "function": "revokeTokenGrant(address,uint256)",
        "lineno": 325,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}