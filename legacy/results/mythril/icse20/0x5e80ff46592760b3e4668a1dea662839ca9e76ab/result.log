{"error": null, "issues": [{"address": 1640, "code": " burn\n   * @return true if burnt successfully, false otherwise\n   */\n  \n  function burn(uint256 _value) public returns (bool success) {\n  \n        require(accounts[msg.sender] >= _value); \n\t\t\n\t\trequir", "debug": "calldata_XERA_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_XERA_0: 0xed361c1700000000000000000000000000000000000000000000000000000000\ncalldatasize_XERA: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `burningCapableAccount(address[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/5/0x5e80ff46592760b3e4668a1dea662839ca9e76ab.sol", "function": "burningCapableAccount(address[])", "lineno": 333, "title": "Integer Overflow ", "type": "Warning"}, {"address": 3741, "code": "d when token transfers were fro", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/5/0x5e80ff46592760b3e4668a1dea662839ca9e76ab.sol", "function": "refundTokens(address,address,uint256)", "lineno": 419, "title": "Message call to external contract", "type": "Warning"}, {"address": 6137, "code": " }\n\n  function", "debug": "The exception is triggered under the following conditions:\n\nstorage_5: 0x80000000000000000000000000000000000000000000000051be0c2ebf000001\ncalldata_XERA_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_2: 0x0\ncaller: 0x0\ncalldata_XERA_0: 0x7e1f2bb800000000000000000000000000000000000000000000000000000000\ncalldatasize_XERA: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/5/0x5e80ff46592760b3e4668a1dea662839ca9e76ab.sol", "function": "createTokens(uint256)", "lineno": 38, "title": "Exception state", "type": "Informational"}, {"address": 6168, "code": "**\n * ERC-20 s", "debug": "The exception is triggered under the following conditions:\n\ncalldata_XERA_4: 0x47936dced72e94243e6d7d\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffc03848dcc7b42434214841\nstorage_5: 0x4c000e0c30c6300000000\nstorage_2: 0x0\ncaller: 0x0\ncalldata_XERA_0: 0x7e1f2bb800000000000000000000000000000000000000000000000000000000\ncalldatasize_XERA: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/5/0x5e80ff46592760b3e4668a1dea662839ca9e76ab.sol", "function": "createTokens(uint256)", "lineno": 50, "title": "Exception state", "type": "Informational"}], "success": true}