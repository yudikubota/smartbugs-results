{
  "contract": "0xbf5fa001baf44b16882305c836f234fc1b8c5169",
  "tool": "mythril",
  "start": 1563599979.7137313,
  "end": 1563599988.0112805,
  "duration": 8.2975492477417,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 1072,
        "code": " finalize() ",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/20/0xbf5fa001baf44b16882305c836f234fc1b8c5169.sol",
        "function": "_function_0x485cc955",
        "lineno": 253,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 1072,
        "code": " finalize() ",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2029\n",
        "filename": "/unique_chucks/20/0xbf5fa001baf44b16882305c836f234fc1b8c5169.sol",
        "function": "_function_0x485cc955",
        "lineno": 253,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 1264,
        "code": "only after",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/20/0xbf5fa001baf44b16882305c836f234fc1b8c5169.sol",
        "function": "_function_0x485cc955",
        "lineno": 255,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 1329,
        "code": "ge\n        finalized ",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/20/0xbf5fa001baf44b16882305c836f234fc1b8c5169.sol",
        "function": "_function_0x485cc955",
        "lineno": 255,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 1364,
        "code": "\n    event onIniti",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/20/0xbf5fa001baf44b16882305c836f234fc1b8c5169.sol",
        "function": "_function_0x485cc955",
        "lineno": 259,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 2029,
        "code": "lyOwner {\n        require(blockTim",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/20/0xbf5fa001baf44b16882305c836f234fc1b8c5169.sol",
        "function": "_function_0x485cc955",
        "lineno": 240,
        "title": "Message call to external contract",
        "type": "Warning"
      }
    ],
    "success": true
  }
}