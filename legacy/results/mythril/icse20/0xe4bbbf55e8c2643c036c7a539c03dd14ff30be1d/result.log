{"error": null, "issues": [{"address": 311, "code": " public{\n    \n    require(msg.sender == owner);\n    \n    possibleMoods[newMood] = true;\n    listMoods.push(newMood);\n    \n    emit moodAdded(newMood);\n}\n\nfunction numberOfMoods() public view r", "debug": "calldata_Moods_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_Moods_0: 0x26ab378b00000000000000000000000000000000000000000000000000000000\ncalldatasize_Moods: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `addMood(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/35/0xe4bbbf55e8c2643c036c7a539c03dd14ff30be1d.sol", "function": "addMood(string)", "lineno": 33, "title": "Integer Overflow ", "type": "Warning"}, {"address": 635, "code": "ing _mood) public payable{\n    \n    require(possibleMoods[_mood] == true);\n    \n    currentMood = _mood;\n    \n    emit moodChanged(msg.sender, _mood);\n}\n\nfunction addMood(string newM", "debug": "calldata_Moods_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_Moods_0: 0x55207a0700000000000000000000000000000000000000000000000000000000\ncalldatasize_Moods: 0x4\n", "description": "A possible integer overflow exists in the function `changeMood(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/35/0xe4bbbf55e8c2643c036c7a539c03dd14ff30be1d.sol", "function": "changeMood(string)", "lineno": 24, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1184, "code": ";\n\ncontract Moods{", "debug": "storage_3: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_Moods_4 + calldata_Moods_4: 0xe0\nstorage_0: 0x0\ncaller: 0x0\ncalldata_Moods_0: 0x26ab378b00000000000000000000000000000000000000000000000000000000\ncalldatasize_Moods: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `addMood(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/35/0xe4bbbf55e8c2643c036c7a539c03dd14ff30be1d.sol", "function": "addMood(string)", "lineno": 1, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1410, "code": "] public listMoods;\n\ncons", "debug": "The exception is triggered under the following conditions:\n\ncalldata_Moods_4: 0x0\nstorage_3: 0x0\ncalldata_Moods_0: 0x2c3c9f2000000000000000000000000000000000000000000000000000000000\ncalldatasize_Moods: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/35/0xe4bbbf55e8c2643c036c7a539c03dd14ff30be1d.sol", "function": "_function_0x2c3c9f20", "lineno": 8, "title": "Exception state", "type": "Informational"}, {"address": 2232, "code": "ntract Moods{\n\naddress public owner;\nstring public currentMood;\nmapping(string => bool) possibleMoods;\nstring[] public listMoods;\n\nconstructor() public{\n    owner = msg.sender;\n    possibleMoods['?'] = true;\n    possibleMoods['?'] = true;\n    possibleMoods['?'] = true;\n    listMoods.push('?');\n    listMoods.push('?');\n    listMoods.push('?');\n    currentMood = '?';\n}\n\nevent moodChanged(address _sender, string _moodChange);\nevent moodAdded( string _newMood);\n\nfunction changeMood(string _mood) public payable{\n    \n    require(possibleMoods[_mood] == true);\n    \n    currentMood = _mood;\n    \n    emit moodChanged(msg.sender, _mood);\n}\n\nfunction addMood(string newMood) public{\n    \n    require(msg.sender == owner);\n    \n    possibleMoods[newMood] = true;\n    listMoods.push(newMood);\n    \n    emit moodAdded(newMood);\n}\n\nfunction numberOfMoods() public view returns(uint256){\n    return(listMoods.length);\n}\n\nfunction withdraw() public {\n    require (msg.sender == owner);\n    msg.sender.transfer(address(this).balance);\n}\n\nfunction() public payable {}\n\n}", "debug": "storage_87903029871075914254377627908054574944891091886930582284385770809450030037083 +\nstorage_3: 0xbac1c3147749165dd7d1977fffffffffffffffffffffffffffffffffffffffc5\nkeccac_87903029871075914254377627908054574944891091886930582284385770809450030037083_+\nstorage_3: 0xff13e6a7459ae5a4c49c419171c3f89100a371508000000000129200000219e2\ncalldata_Moods_4 + calldata_Moods_4: 0xa0\nstorage_0: 0x0\ncaller: 0x0\ncalldata_Moods_0: 0x26ab378b00000000000000000000000000000000000000000000000000000000\ncalldatasize_Moods: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `addMood(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/35/0xe4bbbf55e8c2643c036c7a539c03dd14ff30be1d.sol", "function": "addMood(string)", "lineno": 3, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2297, "code": "ntract Moods{\n\naddress public owner;\nstring public currentMood;\nmapping(string => bool) possibleMoods;\nstring[] public listMoods;\n\nconstructor() public{\n    owner = msg.sender;\n    possibleMoods['?'] = true;\n    possibleMoods['?'] = true;\n    possibleMoods['?'] = true;\n    listMoods.push('?');\n    listMoods.push('?');\n    listMoods.push('?');\n    currentMood = '?';\n}\n\nevent moodChanged(address _sender, string _moodChange);\nevent moodAdded( string _newMood);\n\nfunction changeMood(string _mood) public payable{\n    \n    require(possibleMoods[_mood] == true);\n    \n    currentMood = _mood;\n    \n    emit moodChanged(msg.sender, _mood);\n}\n\nfunction addMood(string newMood) public{\n    \n    require(msg.sender == owner);\n    \n    possibleMoods[newMood] = true;\n    listMoods.push(newMood);\n    \n    emit moodAdded(newMood);\n}\n\nfunction numberOfMoods() public view returns(uint256){\n    return(listMoods.length);\n}\n\nfunction withdraw() public {\n    require (msg.sender == owner);\n    msg.sender.transfer(address(this).balance);\n}\n\nfunction() public payable {}\n\n}", "debug": "keccac_87903029871075914254377627908054574944891091886930582284385770809450030037083_+\nstorage_3: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_Moods_4 + calldata_Moods_4: 0x60\nstorage_0: 0x0\ncaller: 0x0\ncalldata_Moods_0: 0x26ab378b00000000000000000000000000000000000000000000000000000000\ncalldatasize_Moods: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `addMood(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/35/0xe4bbbf55e8c2643c036c7a539c03dd14ff30be1d.sol", "function": "addMood(string)", "lineno": 3, "title": "Integer Overflow ", "type": "Warning"}], "success": true}