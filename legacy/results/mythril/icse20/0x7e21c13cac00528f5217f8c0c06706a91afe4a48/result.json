{
  "contract": "0x7e21c13cac00528f5217f8c0c06706a91afe4a48",
  "tool": "mythril",
  "start": 1563492476.1422925,
  "end": 1563492544.3345382,
  "duration": 68.19224572181702,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 2064,
        "code": " address(0)); // Ether is handled above.\n      uint tokenAmount = tokens[token][msg.sender];\n      \n      if (tokenAmount != 0) {      \n        require(IERC20(token).approve(newExchange, tokenAmount));\n        tokens[token][msg.sender] = 0;\n        newExchange.depositTokenForUser(token, tokenAmount, msg.sender);\n      }\n    }\n\n    FundsMigrated(msg.sender, newContract);\n  }\n  \n  /**\n  * This function handles deposits of Ether into the contract, but allows specification of a user.\n  * Note: This is generally used in migration of funds.\n  * Note: With the payable modifier, this function accepts Ether.\n  */\n  function depositForUser(address user) public payable {\n    require(user != address(0));\n    require(msg.value > 0);\n    tokens[0][user] = tokens[0][user].add(msg.value);\n  }\n  \n  /**\n  * This function handles deposits of Ethereum based tokens into the contract, but allows specification of a user.\n  * Does not allow",
        "debug": "calldata_SeedDex_32 + 4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_SeedDex_0: 0x515fdde300000000000000000000000000000000000000000000000000000000\ncalldatasize_SeedDex: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `migrateFunds(address,address[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/4/0x7e21c13cac00528f5217f8c0c06706a91afe4a48.sol",
        "function": "migrateFunds(address,address[])",
        "lineno": 544,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 4712,
        "code": "nGive, amountGive.mul(amount) / amountGet, user, msg.sender,now);\n  }\n ",
        "debug": "",
        "description": "The return value of an external call is not checked. Note that execution continue even if the called contract throws.",
        "filename": "/unique_chucks/4/0x7e21c13cac00528f5217f8c0c06706a91afe4a48.sol",
        "function": "trade(address,uint256,address,uint256,uint256,uint256,address,uint8,bytes32,bytes32,uint256)",
        "lineno": 360,
        "title": "Unchecked CALL return value",
        "type": "Informational"
      },
      {
        "address": 7048,
        "code": "act to ease updates.\n  * Emits a FundsMigrated event.\n  * @param newCon",
        "debug": "",
        "description": "The return value of an external call is not checked. Note that execution continue even if the called contract throws.",
        "filename": "/unique_chucks/4/0x7e21c13cac00528f5217f8c0c06706a91afe4a48.sol",
        "function": "cancelOrder(address,uint256,address,uint256,uint256,uint256,uint8,bytes32,bytes32)",
        "lineno": 523,
        "title": "Unchecked CALL return value",
        "type": "Informational"
      },
      {
        "address": 8387,
        "code": "rovides a fallback solution as outlined in ERC223.\n ",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/4/0x7e21c13cac00528f5217f8c0c06706a91afe4a48.sol",
        "function": "depositToken(address,uint256)",
        "lineno": 263,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 8480,
        "code": "kens are deposited through ",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/4/0x7e21c13cac00528f5217f8c0c06706a91afe4a48.sol",
        "function": "depositToken(address,uint256)",
        "lineno": 264,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 8751,
        "code": "Token(), the transaction will continue.\n  * If tokens are sent di",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/4/0x7e21c13cac00528f5217f8c0c06706a91afe4a48.sol",
        "function": "depositToken(address,uint256)",
        "lineno": 264,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 9398,
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/4/0x7e21c13cac00528f5217f8c0c06706a91afe4a48.sol",
        "function": "depositTokenForUser(address,uint256,address)",
        "lineno": 590,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 9491,
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/4/0x7e21c13cac00528f5217f8c0c06706a91afe4a48.sol",
        "function": "depositTokenForUser(address,uint256,address)",
        "lineno": 590,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 10651,
        "code": "\n\n    FundsMigrated(msg.sender, newContract);\n  }\n  \n  /*",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/4/0x7e21c13cac00528f5217f8c0c06706a91afe4a48.sol",
        "function": "migrateFunds(address,address[])",
        "lineno": 552,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 16521,
        "code": "retur",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncalldata_SeedDex_32 + 4: 0x57f25cd000000000000000000000000000000000000000000000000000000000\nreturndatasize: 0x20\nretval_8387: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_SeedDex_4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_SeedDex_0: 0x338b5dea00000000000000000000000000000000000000000000000000000000\ncalldatasize_SeedDex: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `depositToken(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/4/0x7e21c13cac00528f5217f8c0c06706a91afe4a48.sol",
        "function": "depositToken(address,uint256)",
        "lineno": 95,
        "title": "Integer Overflow ",
        "type": "Warning"
      }
    ],
    "success": true
  }
}