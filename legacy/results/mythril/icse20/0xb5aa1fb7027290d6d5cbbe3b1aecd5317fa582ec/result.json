{
  "contract": "0xb5aa1fb7027290d6d5cbbe3b1aecd5317fa582ec",
  "tool": "mythril",
  "start": 1563534273.4722404,
  "end": 1563535062.5543652,
  "duration": 789.082124710083,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 686,
        "code": "}\n        for (uint j = 0; j < calldata.length; j++) {\n            combined[j + extradata.length] = calldata[j];\n        }\n        assembly {\n            result := staticcall(gas, target, add(combined, 0x20), mload(combined), mload(0x40), 0)\n        }\n        return result;\n    }\n\n    /**\n     * @dev Keccak256 order hash, part one\n     * @param order Order to hash\n     * @return Part one of the order hash \n     */\n    function hashOrderPartOne(Order memory order)\n        internal\n        pure\n        returns (bytes32)\n    {\n        return keccak256(order.exchange, order.maker, order.taker, order.makerRelayerFee, order.takerRelaye",
        "debug": "calldata_WyvernExchange_32 + 4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_WyvernExchange_0: 0x10796a4700000000000000000000000000000000000000000000000000000000\ncalldatasize_WyvernExchange: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `staticCall(address,bytes,bytes)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/16/0xb5aa1fb7027290d6d5cbbe3b1aecd5317fa582ec.sol",
        "function": "staticCall(address,bytes,bytes)",
        "lineno": 350,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 975,
        "code": " FeeMethod feeMethod,\n        SaleKindInterface.Side side,\n        SaleKindInterface.SaleKind saleKind,\n        AuthenticatedProxy.HowToCall howToCall,\n        bytes calldata,\n        bytes replacementPattern,\n        bytes",
        "debug": "calldata_WyvernExchange_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_WyvernExchange_0: 0x239e83df00000000000000000000000000000000000000000000000000000000\ncalldatasize_WyvernExchange: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `guardedArrayReplace(bytes,bytes,bytes)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/16/0xb5aa1fb7027290d6d5cbbe3b1aecd5317fa582ec.sol",
        "function": "guardedArrayReplace(bytes,bytes,bytes)",
        "lineno": 877,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2151,
        "code": "     returns (uint)\n    {\n        Order memory buy = Order(addrs[0], addrs[1], addrs[2], uints[0], uints[1], uints[2], uints[3], addrs[3], FeeMethod(feeMethodsSidesKindsHowToCalls[0]), SaleKindInterface.Side(feeMethodsSidesKindsHowToCalls[1]), SaleKindInterface.SaleKind(feeMethodsSidesKindsHowToCalls[2]), addrs[4], AuthenticatedProxy.HowToCall(feeMethodsSidesKindsHowToCalls[3]), calldataBuy, replacementPatternBuy, addrs[5], staticExtradataBuy, ERC20(addrs[6]), uints[4], uints[5], uints[6], uints[7], uints[8]);\n        Order memory sell = Order(addrs[7], addrs[8",
        "debug": "calldata_WyvernExchange_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_WyvernExchange_0: 0x562b2ebc00000000000000000000000000000000000000000000000000000000\ncalldatasize_WyvernExchange: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `orderCalldataCanMatch(bytes,bytes,bytes,bytes)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/16/0xb5aa1fb7027290d6d5cbbe3b1aecd5317fa582ec.sol",
        "function": "orderCalldataCanMatch(bytes,bytes,bytes,bytes)",
        "lineno": 1073,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 7559,
        "code": "order hash,",
        "debug": "The exception is triggered under the following conditions:\n\nmem_128 +\n32 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_WyvernExchange_4 + calldata_WyvernExchange_32 + 4)): 0x7b81e004c8e2c034c00074f2adbf634fd80000204fe53c47003afe8f0025027d\ncalldata_WyvernExchange_4 + calldata_WyvernExchange_32 + 4: 0x4b15189768c6766d1fffec068dbf7c49f00117e8800f0843303ffe4f3c20a225\ncalldata_WyvernExchange_0: 0x10796a4700000000000000000000000000000000000000000000000000000000\ncalldatasize_WyvernExchange: 0x4\nmem_160 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_WyvernExchange_4 + calldata_WyvernExchange_32 + 4)) +\n32 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_WyvernExchange_4 + calldata_WyvernExchange_32 + 36)): 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/16/0xb5aa1fb7027290d6d5cbbe3b1aecd5317fa582ec.sol",
        "function": "staticCall(address,bytes,bytes)",
        "lineno": 361,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 7740,
        "code": "    function hashOrderPartOne(",
        "debug": "The exception is triggered under the following conditions:\n\nmem_128 +\n32 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_WyvernExchange_4 + calldata_WyvernExchange_32 + 4)): 0x2\nmem_160 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_WyvernExchange_4 + calldata_WyvernExchange_32 + 4)) +\n32 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_WyvernExchange_4 + calldata_WyvernExchange_32 + 36)): 0x2\ncalldata_WyvernExchange_4 + calldata_WyvernExchange_32 + 4: 0x7ffffffffffffffffffffffffffffffffffffffffffffffffe\ncalldata_WyvernExchange_0: 0x10796a4700000000000000000000000000000000000000000000000000000000\ncalldatasize_WyvernExchange: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/16/0xb5aa1fb7027290d6d5cbbe3b1aecd5317fa582ec.sol",
        "function": "staticCall(address,bytes,bytes)",
        "lineno": 365,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 8438,
        "code": "terface.SaleKind(feeMethodsSidesKindsHowToCalls[2]), addrs[4], AuthenticatedProxy.HowToCall(feeMethodsSidesKindsHowToCalls[3]), calldataBuy, replacementPatternBuy, addrs[5], staticExtradataBuy, ERC20(addrs[6]), uints[4], uints[5], uints[6], uints[7], uints[",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_WyvernExchange_288 + 228: 0xfe\ncalldata_WyvernExchange_0: 0x3f67ee0d00000000000000000000000000000000000000000000000000000000\ncalldatasize_WyvernExchange: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/16/0xb5aa1fb7027290d6d5cbbe3b1aecd5317fa582ec.sol",
        "function": "_function_0x3f67ee0d",
        "lineno": 1028,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 8455,
        "code": "terface.SaleKind(feeMethodsSidesKindsHowToCalls[2]), addrs[4], AuthenticatedProxy.HowToCall(feeMethodsSidesKindsHowToCalls[3]), calldataBuy, replacementPatternBuy, addrs[5], staticExtradataBuy, ERC20(addrs[6]), uints[4], uints[5], uints[6], uints[7], uints[",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_WyvernExchange_32 + 516: 0xfe\ncalldata_WyvernExchange_288 + 228: 0x0\ncalldata_WyvernExchange_0: 0x3f67ee0d00000000000000000000000000000000000000000000000000000000\ncalldatasize_WyvernExchange: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/16/0xb5aa1fb7027290d6d5cbbe3b1aecd5317fa582ec.sol",
        "function": "_function_0x3f67ee0d",
        "lineno": 1028,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 18213,
        "code": ";\n   ",
        "debug": "mem_128 +\n32 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_WyvernExchange_4 + calldata_WyvernExchange_32 + 4)): 0x57f25cd000000000000000000000000000000000000000000000000000000000\ncalldata_WyvernExchange_4 + calldata_WyvernExchange_32 + 4: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncalldata_WyvernExchange_0: 0x10796a4700000000000000000000000000000000000000000000000000000000\ncalldatasize_WyvernExchange: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `staticCall(address,bytes,bytes)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/16/0xb5aa1fb7027290d6d5cbbe3b1aecd5317fa582ec.sol",
        "function": "staticCall(address,bytes,bytes)",
        "lineno": 27,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 18226,
        "code": " c;\n  }\n}\n\ncon",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_WyvernExchange_4 + calldata_WyvernExchange_32 + 4: 0x1\nmem_128 +\n32 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_WyvernExchange_4 + calldata_WyvernExchange_32 + 4)): 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_WyvernExchange_0: 0x10796a4700000000000000000000000000000000000000000000000000000000\ncalldatasize_WyvernExchange: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/16/0xb5aa1fb7027290d6d5cbbe3b1aecd5317fa582ec.sol",
        "function": "staticCall(address,bytes,bytes)",
        "lineno": 28,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 19284,
        "code": "           ",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_WyvernExchange_4 + calldata_WyvernExchange_4: 0x7\ncalldata_WyvernExchange_0: 0x239e83df00000000000000000000000000000000000000000000000000000000\ncalldatasize_WyvernExchange: 0x4\nmem_160 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_WyvernExchange_4 + calldata_WyvernExchange_4)) +\n32 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_WyvernExchange_4 + calldata_WyvernExchange_32 + 4)): 0x0\nmem_128 +\n32 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_WyvernExchange_4 + calldata_WyvernExchange_4)): 0x7\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/16/0xb5aa1fb7027290d6d5cbbe3b1aecd5317fa582ec.sol",
        "function": "guardedArrayReplace(bytes,bytes,bytes)",
        "lineno": 107,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 20556,
        "code": " /**\n     * Create an Authentic",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_WyvernExchange_32 + 4: 0xfe\ncalldata_WyvernExchange_0: 0x63d36c0b00000000000000000000000000000000000000000000000000000000\ncalldatasize_WyvernExchange: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/16/0xb5aa1fb7027290d6d5cbbe3b1aecd5317fa582ec.sol",
        "function": "_function_0x63d36c0b",
        "lineno": 1227,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}