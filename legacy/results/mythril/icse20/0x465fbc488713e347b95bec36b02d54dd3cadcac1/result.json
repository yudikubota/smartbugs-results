{
  "contract": "0x465fbc488713e347b95bec36b02d54dd3cadcac1",
  "tool": "mythril",
  "start": 1563753982.7998655,
  "end": 1563754005.4046578,
  "duration": 22.60479235649109,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 1093,
        "code": "dmin {\n    require(msg.send",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_Token_0: 0x405440c00000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/46/0x465fbc488713e347b95bec36b02d54dd3cadcac1.sol",
        "function": "secureMode()",
        "lineno": 64,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 1210,
        "code": "dmin {\n    require(msg.send",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_Token_0: 0x13af403500000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/46/0x465fbc488713e347b95bec36b02d54dd3cadcac1.sol",
        "function": "setOwner(address)",
        "lineno": 64,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 1520,
        "code": "dmin {\n    require(msg.send",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_Token_0: 0x4b0bddd200000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/46/0x465fbc488713e347b95bec36b02d54dd3cadcac1.sol",
        "function": "setAdmin(address,bool)",
        "lineno": 64,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 1777,
        "code": "dmin {\n    require(msg.send",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_Token_0: 0x9db91e7800000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/46/0x465fbc488713e347b95bec36b02d54dd3cadcac1.sol",
        "function": "insecureMode()",
        "lineno": 64,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 1894,
        "code": "dmin {\n    require(msg.send",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_Token_0: 0xa69df4b500000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/46/0x465fbc488713e347b95bec36b02d54dd3cadcac1.sol",
        "function": "unlock()",
        "lineno": 64,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2721,
        "code": "ithdraw(token, msg.sender, a",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/46/0x465fbc488713e347b95bec36b02d54dd3cadcac1.sol",
        "function": "withdraw(address,uint256)",
        "lineno": 104,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 2721,
        "code": "ithdraw(token, msg.sender, a",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2957\n",
        "filename": "/unique_chucks/46/0x465fbc488713e347b95bec36b02d54dd3cadcac1.sol",
        "function": "withdraw(address,uint256)",
        "lineno": 104,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 2957,
        "code": " true;\n  }\n\n  function lock() onlyOwner{\n",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/46/0x465fbc488713e347b95bec36b02d54dd3cadcac1.sol",
        "function": "withdraw(address,uint256)",
        "lineno": 105,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 3281,
        "code": "dmin {\n    require(msg.send",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_Token_0: 0xf83d08ba00000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/46/0x465fbc488713e347b95bec36b02d54dd3cadcac1.sol",
        "function": "lock()",
        "lineno": 64,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3614,
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/46/0x465fbc488713e347b95bec36b02d54dd3cadcac1.sol",
        "function": "getBalance(address)",
        "lineno": 135,
        "title": "Message call to external contract",
        "type": "Warning"
      }
    ],
    "success": true
  }
}