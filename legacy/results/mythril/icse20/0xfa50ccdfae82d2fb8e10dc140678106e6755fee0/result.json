{
  "contract": "0xfa50ccdfae82d2fb8e10dc140678106e6755fee0",
  "tool": "mythril",
  "start": 1563568345.4678621,
  "end": 1563568360.4124932,
  "duration": 14.944631099700928,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 1138,
        "code": "m3Acc;\n     ",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/12/0xfa50ccdfae82d2fb8e10dc140678106e6755fee0.sol",
        "function": "_function_0x1459457a",
        "lineno": 257,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 1138,
        "code": "m3Acc;\n     ",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2443\nCall at address: 2443\nCall at address: 2443\nCall at address: 2443\nCall at address: 2443\nCall at address: 2443\nCall at address: 2443\nCall at address: 2443\n",
        "filename": "/unique_chucks/12/0xfa50ccdfae82d2fb8e10dc140678106e6755fee0.sol",
        "function": "_function_0x1459457a",
        "lineno": 257,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 1435,
        "code": " finalize\n",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/12/0xfa50ccdfae82d2fb8e10dc140678106e6755fee0.sol",
        "function": "_function_0x1459457a",
        "lineno": 263,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 1500,
        "code": "n finalize() public onl",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/12/0xfa50ccdfae82d2fb8e10dc140678106e6755fee0.sol",
        "function": "_function_0x1459457a",
        "lineno": 264,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 1565,
        "code": "      require(!finalize",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/12/0xfa50ccdfae82d2fb8e10dc140678106e6755fee0.sol",
        "function": "_function_0x1459457a",
        "lineno": 265,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 1630,
        "code": " // only after closed s",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/12/0xfa50ccdfae82d2fb8e10dc140678106e6755fee0.sol",
        "function": "_function_0x1459457a",
        "lineno": 266,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 1695,
        "code": "  finalized = true;\n   ",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/12/0xfa50ccdfae82d2fb8e10dc140678106e6755fee0.sol",
        "function": "_function_0x1459457a",
        "lineno": 267,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 2443,
        "code": " /// @param _wbc The address wbc t",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/12/0xfa50ccdfae82d2fb8e10dc140678106e6755fee0.sol",
        "function": "_function_0x1459457a",
        "lineno": 246,
        "title": "Message call to external contract",
        "type": "Warning"
      }
    ],
    "success": true
  }
}