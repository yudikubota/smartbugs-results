{
  "contract": "0x97d25094830592b0f9fa32f427779a722ed04b34",
  "tool": "mythril",
  "start": 1563639748.31559,
  "end": 1563639797.2827106,
  "duration": 48.96712064743042,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 221,
        "code": "ytes _pass)\n    external\n    payable\n    {\n        if(hashPass == keccak256(_pass) && now>unlockTime && msg.sender==tx.origin)\n        {\n            msg.sender.transfer(this.balance);\n        }\n    }\n    \n    bytes32 publi",
        "debug": "calldata_GIFT_CARD_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_GIFT_CARD_0: 0x81777b7800000000000000000000000000000000000000000000000000000000\ncalldatasize_GIFT_CARD: 0x4\n",
        "description": "A possible integer overflow exists in the function `Take(bytes)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/25/0x97d25094830592b0f9fa32f427779a722ed04b34.sol",
        "function": "Take(bytes)",
        "lineno": 16,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 331,
        "code": " public constant returns (bytes32) {return keccak256(pass);}\n    \n    function() public ",
        "debug": "calldata_GIFT_CARD_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_GIFT_CARD_0: 0xb456ecc500000000000000000000000000000000000000000000000000000000\ncalldatasize_GIFT_CARD: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `GetHash(bytes)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/25/0x97d25094830592b0f9fa32f427779a722ed04b34.sol",
        "function": "GetHash(bytes)",
        "lineno": 29,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 483,
        "code": "kTime;\n        ",
        "debug": "calldata_GIFT_CARD_32 + 4: 0x80000000000000000000000007a000000000000000000030811021cacacae001\ntimestamp: 0x800000000000000000000000022000000000000000000001ffdde5622a18e000\ncallvalue: 0xde176b3a7450000\nbalance_at_1461501637330902918203684832716283019655932542975 & 0: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_GIFT_CARD_0: 0x166eb4cb00000000000000000000000000000000000000000000000000000000\ncalldatasize_GIFT_CARD: 0x4\n",
        "description": "A possible integer overflow exists in the function `Put(bytes32,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/25/0x97d25094830592b0f9fa32f427779a722ed04b34.sol",
        "function": "Put(bytes32,uint256)",
        "lineno": 11,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 525,
        "code": " now>unlockTime ",
        "debug": "calldata_GIFT_CARD_4 + calldata_GIFT_CARD_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80\ncalldata_GIFT_CARD_0: 0x81777b7800000000000000000000000000000000000000000000000000000000\ncalldatasize_GIFT_CARD: 0x4\n",
        "description": "A possible integer overflow exists in the function `Take(bytes)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/25/0x97d25094830592b0f9fa32f427779a722ed04b34.sol",
        "function": "Take(bytes)",
        "lineno": 20,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 538,
        "code": " now>unlockTime ",
        "debug": "calldata_GIFT_CARD_4 + calldata_GIFT_CARD_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_GIFT_CARD_0: 0x81777b7800000000000000000000000000000000000000000000000000000000\ncalldatasize_GIFT_CARD: 0x4\n",
        "description": "A possible integer underflow exists in the function `Take(bytes)`.\nThe subtraction may result in a value < 0.",
        "filename": "/unique_chucks/25/0x97d25094830592b0f9fa32f427779a722ed04b34.sol",
        "function": "Take(bytes)",
        "lineno": 20,
        "title": "Integer Underflow",
        "type": "Warning"
      },
      {
        "address": 573,
        "code": "{\n       ",
        "debug": "",
        "description": "Function Take(bytes) retrieves the transaction origin (tx.origin) using the ORIGIN opcode. Use msg.sender instead.\nSee also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin",
        "filename": "/unique_chucks/25/0x97d25094830592b0f9fa32f427779a722ed04b34.sol",
        "function": "Take(bytes)",
        "lineno": 21,
        "title": "Use of tx.origin",
        "type": "Warning"
      },
      {
        "address": 696,
        "code": "his.balance);\n        }\n    }\n   ",
        "debug": "",
        "description": "In the function `Take(bytes)` the following predictable state variables are used to determine Ether recipient:\n- block.timestamp\n",
        "filename": "/unique_chucks/25/0x97d25094830592b0f9fa32f427779a722ed04b34.sol",
        "function": "Take(bytes)",
        "lineno": 22,
        "title": "Dependence on predictable environment variable",
        "type": "Warning"
      }
    ],
    "success": true
  }
}