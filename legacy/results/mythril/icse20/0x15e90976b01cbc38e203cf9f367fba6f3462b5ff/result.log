{"success": false, "error": "Solc experienced a fatal error (code 1).\n\n/unique_chucks/39/0x15e90976b01cbc38e203cf9f367fba6f3462b5ff.sol:1:1: Error: Source file requires different compiler version (current compiler is 0.4.25+commit.59dbf8f1.Linux.g++ - note that nightly builds are considered to be strictly less than the released version\npragma solidity 0.4.24;\r\n^---------------------^\n/unique_chucks/39/0x15e90976b01cbc38e203cf9f367fba6f3462b5ff.sol:838:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use \"constructor(...) { ... }\" instead.\n    function PublicResolver(ENS ensAddr) public {\r\n    ^ (Relevant source part starts here and spans across multiple lines).\n/unique_chucks/39/0x15e90976b01cbc38e203cf9f367fba6f3462b5ff.sol:70:12: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n    return keccak256(\r\n           ^ (Relevant source part starts here and spans across multiple lines).\n/unique_chucks/39/0x15e90976b01cbc38e203cf9f367fba6f3462b5ff.sol:694:9: Warning: Invoking events without \"emit\" prefix is deprecated.\n        BidSubmission(receiver, amount);\r\n        ^-----------------------------^\n/unique_chucks/39/0x15e90976b01cbc38e203cf9f367fba6f3462b5ff.sol:775:5: Warning: Functions in interfaces should be declared external.\n    function setSubnodeOwner(bytes32 node, bytes32 label, address owner) public;\r\n    ^--------------------------------------------------------------------------^\n/unique_chucks/39/0x15e90976b01cbc38e203cf9f367fba6f3462b5ff.sol:776:5: Warning: Functions in interfaces should be declared external.\n    function setResolver(bytes32 node, address resolver) public;\r\n    ^----------------------------------------------------------^\n/unique_chucks/39/0x15e90976b01cbc38e203cf9f367fba6f3462b5ff.sol:777:5: Warning: Functions in interfaces should be declared external.\n    function setOwner(bytes32 node, address owner) public;\r\n    ^----------------------------------------------------^\n/unique_chucks/39/0x15e90976b01cbc38e203cf9f367fba6f3462b5ff.sol:778:5: Warning: Functions in interfaces should be declared external.\n    function setTTL(bytes32 node, uint64 ttl) public;\r\n    ^-----------------------------------------------^\n/unique_chucks/39/0x15e90976b01cbc38e203cf9f367fba6f3462b5ff.sol:779:5: Warning: Functions in interfaces should be declared external.\n    function owner(bytes32 node) public view returns (address);\r\n    ^---------------------------------------------------------^\n/unique_chucks/39/0x15e90976b01cbc38e203cf9f367fba6f3462b5ff.sol:780:5: Warning: Functions in interfaces should be declared external.\n    function resolver(bytes32 node) public view returns (address);\r\n    ^------------------------------------------------------------^\n/unique_chucks/39/0x15e90976b01cbc38e203cf9f367fba6f3462b5ff.sol:781:5: Warning: Functions in interfaces should be declared external.\n    function ttl(bytes32 node) public view returns (uint64);\r\n    ^------------------------------------------------------^\n/unique_chucks/39/0x15e90976b01cbc38e203cf9f367fba6f3462b5ff.sol:850:9: Warning: Invoking events without \"emit\" prefix is deprecated.\n        AddrChanged(node, addr);\r\n        ^---------------------^\n/unique_chucks/39/0x15e90976b01cbc38e203cf9f367fba6f3462b5ff.sol:863:9: Warning: Invoking events without \"emit\" prefix is deprecated.\n        ContentChanged(node, hash);\r\n        ^------------------------^\n/unique_chucks/39/0x15e90976b01cbc38e203cf9f367fba6f3462b5ff.sol:874:9: Warning: Invoking events without \"emit\" prefix is deprecated.\n        MultihashChanged(node, hash);\r\n        ^--------------------------^\n/unique_chucks/39/0x15e90976b01cbc38e203cf9f367fba6f3462b5ff.sol:885:9: Warning: Invoking events without \"emit\" prefix is deprecated.\n        NameChanged(node, name);\r\n        ^---------------------^\n/unique_chucks/39/0x15e90976b01cbc38e203cf9f367fba6f3462b5ff.sol:901:9: Warning: Invoking events without \"emit\" prefix is deprecated.\n        ABIChanged(node, contentType);\r\n        ^---------------------------^\n/unique_chucks/39/0x15e90976b01cbc38e203cf9f367fba6f3462b5ff.sol:912:9: Warning: Invoking events without \"emit\" prefix is deprecated.\n        PubkeyChanged(node, x, y);\r\n        ^-----------------------^\n/unique_chucks/39/0x15e90976b01cbc38e203cf9f367fba6f3462b5ff.sol:924:9: Warning: Invoking events without \"emit\" prefix is deprecated.\n        TextChanged(node, key, key);\r\n        ^-------------------------^\n/unique_chucks/39/0x15e90976b01cbc38e203cf9f367fba6f3462b5ff.sol:1148:15: Warning: Using contract member \"call\" inherited from the address type is deprecated. Convert the contract to \"address\" type to access the member, for example use \"address(contract).call\" instead.\n    { require(factory.call(msg.data)); }\r\n              ^----------^\n/unique_chucks/39/0x15e90976b01cbc38e203cf9f367fba6f3462b5ff.sol:1504:17: Warning: Using contract member \"call\" inherited from the address type is deprecated. Convert the contract to \"address\" type to access the member, for example use \"address(contract).call\" instead.\n        require(liability.call(abi.encodePacked(bytes4(0x82fbaa25), _ask))); // liability.ask(...)\r\n                ^------------^\n/unique_chucks/39/0x15e90976b01cbc38e203cf9f367fba6f3462b5ff.sol:1507:17: Warning: Using contract member \"call\" inherited from the address type is deprecated. Convert the contract to \"address\" type to access the member, for example use \"address(contract).call\" instead.\n        require(liability.call(abi.encodePacked(bytes4(0x66193359), _bid))); // liability.bid(...)\r\n                ^------------^\n/unique_chucks/39/0x15e90976b01cbc38e203cf9f367fba6f3462b5ff.sol:1553:70: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n        bytes32 subnode = keccak256(abi.encodePacked(lighthouseNode, keccak256(_name)));\r\n                                                                     ^--------------^\n/unique_chucks/39/0x15e90976b01cbc38e203cf9f367fba6f3462b5ff.sol:1553:70: Warning: The provided argument of type string calldata is not implicitly convertible to expected type bytes memory.\n        bytes32 subnode = keccak256(abi.encodePacked(lighthouseNode, keccak256(_name)));\r\n                                                                     ^--------------^\n/unique_chucks/39/0x15e90976b01cbc38e203cf9f367fba6f3462b5ff.sol:1562:45: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n        ens.setSubnodeOwner(lighthouseNode, keccak256(_name), this);\r\n                                            ^--------------^\n/unique_chucks/39/0x15e90976b01cbc38e203cf9f367fba6f3462b5ff.sol:1562:45: Warning: The provided argument of type string calldata is not implicitly convertible to expected type bytes memory.\n        ens.setSubnodeOwner(lighthouseNode, keccak256(_name), this);\r\n                                            ^--------------^\n", "issues": []}