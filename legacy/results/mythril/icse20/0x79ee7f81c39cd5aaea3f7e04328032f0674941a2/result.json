{
  "contract": "0x79ee7f81c39cd5aaea3f7e04328032f0674941a2",
  "tool": "mythril",
  "start": 1563651335.3804731,
  "end": 1563651664.5872037,
  "duration": 329.20673060417175,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 1119,
        "code": "      return shareholders[_user].allowed;\n    }\n\n    function totalSupply() external view returns (uint256) {\n        return totalSupply;\n    }\n\n    function decimals() external view returns (uint) {\n        return decimals;\n    }\n\n}",
        "debug": "calldata_SecurityToken_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_SecurityToken_0: 0x25221a4f00000000000000000000000000000000000000000000000000000000\ncalldatasize_SecurityToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `addToBlacklistMulti(address[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/27/0x79ee7f81c39cd5aaea3f7e04328032f0674941a2.sol",
        "function": "addToBlacklistMulti(address[])",
        "lineno": 467,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 5729,
        "code": "    require(codeExportCost == msg.val",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function enableExchange(uint256). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/27/0x79ee7f81c39cd5aaea3f7e04328032f0674941a2.sol",
        "function": "enableExchange(uint256)",
        "lineno": 297,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 13710,
        "code": "return a - b;\n",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_SecurityToken_32_+_4: 0x0\ntimestamp: 0x0\nstorage_1 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_SecurityToken_32_+_4: 0x1\nstorage_4 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_SecurityToken_32_+_4: 0x1\ncalldata_SecurityToken_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_SecurityToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/27/0x79ee7f81c39cd5aaea3f7e04328032f0674941a2.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 26,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 13728,
        "code": ";\n   ",
        "debug": "storage_3 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_SecurityToken_32_+_4: 0x57f25cd000000000000000000000000000000000000000000000000000000000\nstorage_5 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_SecurityToken_32_+_4: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ntimestamp: 0x0\nstorage_4 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_SecurityToken_32_+_4: 0x0\ncalldata_SecurityToken_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_SecurityToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `transferFrom(address,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/27/0x79ee7f81c39cd5aaea3f7e04328032f0674941a2.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 31,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 13741,
        "code": " c;\n    }\n\n   ",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_5 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_SecurityToken_4: 0x1\ntimestamp: 0x0\nstorage_3 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_SecurityToken_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_4 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_SecurityToken_4: 0x0\ncalldata_SecurityToken_0: 0x654259dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_SecurityToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/27/0x79ee7f81c39cd5aaea3f7e04328032f0674941a2.sol",
        "function": "availableAmount(address)",
        "lineno": 32,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}