{"error": null, "issues": [{"address": 327, "code": "ed, bool doubleValue, bool shouldWait, address[] _addresses) public {\n\t\trequire(canListAddress[msg.sender]);\n\t\tfor (uint256 i = 0; i < _addresses.length; i++) {\n\t\t\twhitelist[_addresses[i]] = WhitelistInfo(whitelisted, unlimited, doubleValue, shouldWait);\n\t\t}\n\t}\n\n\tfunction getAllowedAmountToContribute(address addr) vie", "debug": "calldata_AuctusWhitelist_32 + 100: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_AuctusWhitelist_0: 0x32fac3a300000000000000000000000000000000000000000000000000000000\ncalldatasize_AuctusWhitelist: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `listAddresses(bool,bool,bool,bool,address[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0xa6e728e524c1d7a65fe5193ca1636265de9bc982.sol", "function": "listAddresses(bool,bool,bool,bool,address[])", "lineno": 54, "title": "Integer Overflow ", "type": "Warning"}, {"address": 441, "code": "address[] _addresses) onlyOwner public {\n\t\tfor (uint256 i = 0; i < _addresses.length; i++) {\n\t\t\tcanListAddress[_addresses[i]] = canList;\n\t\t}\n\t}\n\n\tfunction listAddresses(bool whitelisted, bool un", "debug": "calldata_AuctusWhitelist_32 + 4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_AuctusWhitelist_0: 0x5455e1b800000000000000000000000000000000000000000000000000000000\ncalldatasize_AuctusWhitelist: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `setAddressesThatCanList(bool,address[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0xa6e728e524c1d7a65fe5193ca1636265de9bc982.sol", "function": "setAddressesThatCanList(bool,address[])", "lineno": 48, "title": "Integer Overflow ", "type": "Warning"}], "success": true}