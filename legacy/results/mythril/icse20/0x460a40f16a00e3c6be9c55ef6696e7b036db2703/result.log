{"error": null, "issues": [{"address": 914, "code": "torsBonus = 0;\n\n    // Gathered funds ", "debug": "The exception is triggered under the following conditions:\n\nstorage_3: 0x8000\ncalldata_ZupplyToken_0: 0xc3f6acf00000000000000000000000000000000000000000000000000000000\ncalldatasize_ZupplyToken: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/26/0x460a40f16a00e3c6be9c55ef6696e7b036db2703.sol", "function": "_function_0x0c3f6acf", "lineno": 155, "title": "Exception state", "type": "Informational"}, {"address": 2681, "code": "        }\n    }\n\n    function buyT", "debug": "The exception is triggered under the following conditions:\n\nstorage_3: 0x8000\ncalldatasize_ZupplyToken: 0x3\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/26/0x460a40f16a00e3c6be9c55ef6696e7b036db2703.sol", "function": "fallback", "lineno": 216, "title": "Exception state", "type": "Informational"}, {"address": 3045, "code": "    /// @dev Constr", "debug": "The exception is triggered under the following conditions:\n\nstorage_3: 0x8000\ncalldata_ZupplyToken_0: 0x1d51187900000000000000000000000000000000000000000000000000000000\ncalldatasize_ZupplyToken: 0x4\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/26/0x460a40f16a00e3c6be9c55ef6696e7b036db2703.sol", "function": "buyTokensPresale()", "lineno": 187, "title": "Exception state", "type": "Informational"}, {"address": 3098, "code": "ens+= newTokens;\n        ", "debug": "storage_3: 0x200\ncallvalue: 0x2dfa44000000000000000000000000000000000000000000053b87205a2680a\ncalldata_ZupplyToken_0: 0x1d51187900000000000000000000000000000000000000000000000000000000\ncalldatasize_ZupplyToken: 0x4\n", "description": "A possible integer overflow exists in the function `buyTokensPresale()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/26/0x460a40f16a00e3c6be9c55ef6696e7b036db2703.sol", "function": "buyTokensPresale()", "lineno": 229, "title": "Integer Overflow ", "type": "Warning"}, {"address": 3208, "code": "le onlyInState(State.ICORunning)\n", "debug": "storage_3: 0x200\nstorage_10: 0xd7571660ff9dbe0f603ff8000000000000000000000c12dd1c43c0eb9d87983f\nstorage_7: 0x43f081ca11436be4992fa2f5a3768cbbb2a351a645236ffbb247ac8fd7fffb81\ncallvalue: 0x62212105de4e05774543b05d748250333a3fabeb466b79d5e15f0795b70ef4\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xc5d1aefce020df6a381fc7fe0f7b62dec1e64b5f1464432ced9fc71ad2261080\ncalldata_ZupplyToken_0: 0x1d51187900000000000000000000000000000000000000000000000000000000\ncalldatasize_ZupplyToken: 0x4\n", "description": "A possible integer overflow exists in the function `buyTokensPresale()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/26/0x460a40f16a00e3c6be9c55ef6696e7b036db2703.sol", "function": "buyTokensPresale()", "lineno": 235, "title": "Integer Overflow ", "type": "Warning"}, {"address": 3224, "code": "   // min - 0.01 E", "debug": "storage_3: 0x200\nstorage_10: 0xd7571660ff9dbe0f603ff8000000000000000000000c12dd1c43c0eb9d87983f\nstorage_7: 0x43f081ca11436be4992fa2f5a3768cbbb2a351a645236ffbb247ac8fd7fffb81\ncallvalue: 0x62212105de4e05774543b05d748250333a3fabeb466b79d5e15f0795b70ef4\nstorage_2: 0xc5d1aefce020df6a381fc7fe0f7b62dec1e64b5f1464432ced9fc71ad2261080\ncalldata_ZupplyToken_0: 0x1d51187900000000000000000000000000000000000000000000000000000000\ncalldatasize_ZupplyToken: 0x4\n", "description": "A possible integer overflow exists in the function `buyTokensPresale()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/26/0x460a40f16a00e3c6be9c55ef6696e7b036db2703.sol", "function": "buyTokensPresale()", "lineno": 237, "title": "Integer Overflow ", "type": "Warning"}, {"address": 3240, "code": "require(msg.value >= ((1 ethe", "debug": "storage_3: 0x200\nstorage_10: 0xcefe51563ff8880a9e2989ffc29b02ffebca8064810000018d87d582fdaf7ff6\nstorage_7: 0xd5ffe9b5f7bce02a1e41064fc30811ffcb5913bbf611007c4832f7ef5c3f9601\ncallvalue: 0xe93c38f751f91ac6ba641460281acf1f8a8062fe903d06240c880417dd3b52\ncalldata_ZupplyToken_0: 0x1d51187900000000000000000000000000000000000000000000000000000000\ncalldatasize_ZupplyToken: 0x4\n", "description": "A possible integer overflow exists in the function `buyTokensPresale()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/26/0x460a40f16a00e3c6be9c55ef6696e7b036db2703.sol", "function": "buyTokensPresale()", "lineno": 238, "title": "Integer Overflow ", "type": "Warning"}, {"address": 3256, "code": "/ 100));\n        uint newTo", "debug": "storage_3: 0x200\nstorage_10: 0xd7571660ff9dbe0f603ff8000000000000000000000c12dd1c43c0eb9d87983f\nstorage_7: 0x43f081ca11436be4992fa2f5a3768cbbb2a351a645236ffbb247ac8fd7fffb81\ncallvalue: 0x62212105de4e05774543b05d748250333a3fabeb466b79d5e15f0795b70ef4\nstorage_9: 0xc5d1aefce020df6a381fc7fe0f7b62dec1e64b5f1464432ced9fc71ad2261080\ncalldata_ZupplyToken_0: 0x1d51187900000000000000000000000000000000000000000000000000000000\ncalldatasize_ZupplyToken: 0x4\n", "description": "A possible integer overflow exists in the function `buyTokensPresale()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/26/0x460a40f16a00e3c6be9c55ef6696e7b036db2703.sol", "function": "buyTokensPresale()", "lineno": 238, "title": "Integer Overflow ", "type": "Warning"}, {"address": 3577, "code": "ow] += _value;\n            \n     ", "debug": "The exception is triggered under the following conditions:\n\nstorage_3: 0x8000\nstorage_6: 0x0\ncaller: 0x0\ncalldata_ZupplyToken_0: 0x315a095d00000000000000000000000000000000000000000000000000000000\ncalldatasize_ZupplyToken: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/26/0x460a40f16a00e3c6be9c55ef6696e7b036db2703.sol", "function": "withdrawTokens(uint256)", "lineno": 287, "title": "Exception state", "type": "Informational"}, {"address": 3611, "code": "rowedToken += _value;\n            sup", "debug": "storage_3: 0x500\nstorage_10: 0x57f25cd000000000000000000000000000000000000000000000000000000000\nstorage_9: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_6: 0x0\ncaller: 0x0\ncalldata_ZupplyToken_0: 0x315a095d00000000000000000000000000000000000000000000000000000000\ncalldatasize_ZupplyToken: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `withdrawTokens(uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/26/0x460a40f16a00e3c6be9c55ef6696e7b036db2703.sol", "function": "withdrawTokens(uint256)", "lineno": 289, "title": "Integer Overflow ", "type": "Warning"}, {"address": 3612, "code": "rowedToken += _value;\n            supply += _v", "debug": "storage_3: 0x500\nstorage_10: 0x8078080001ff2760a13f09dde4212006a0800000c00002000704820f6fc00058\nstorage_9: 0x72dc24493301c1ec5cff6c4ea1548de3644903aaeafe924d13450f3b1701469e\ncalldata_ZupplyToken_4: 0x43d5ae6891e389eec0bf7fcc09a728ebedad75cf0b796b5664cbdc6b793da881\nstorage_6: 0x0\ncaller: 0x0\ncalldata_ZupplyToken_0: 0x315a095d00000000000000000000000000000000000000000000000000000000\ncalldatasize_ZupplyToken: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `withdrawTokens(uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/26/0x460a40f16a00e3c6be9c55ef6696e7b036db2703.sol", "function": "withdrawTokens(uint256)", "lineno": 289, "title": "Integer Overflow ", "type": "Warning"}, {"address": 3936, "code": "ion withdrawETH() public onlyToke", "debug": "The exception is triggered under the following conditions:\n\nstorage_3: 0x8000\nstorage_6: 0x0\ncaller: 0x0\ncalldata_ZupplyToken_0: 0x56de96db00000000000000000000000000000000000000000000000000000000\ncalldatasize_ZupplyToken: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/26/0x460a40f16a00e3c6be9c55ef6696e7b036db2703.sol", "function": "_function_0x56de96db", "lineno": 271, "title": "Exception state", "type": "Informational"}], "success": true}