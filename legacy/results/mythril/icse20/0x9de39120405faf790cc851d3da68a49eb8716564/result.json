{
  "contract": "0x9de39120405faf790cc851d3da68a49eb8716564",
  "tool": "mythril",
  "start": 1563744881.8453345,
  "end": 1563745177.223701,
  "duration": 295.3783664703369,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 266,
        "code": "ated;\n\n    // amount of tokens already so",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_5: 0x8000\ncalldata_PresaleToken_0: 0x55ad42e00000000000000000000000000000000000000000000000000000000\ncalldatasize_PresaleToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/43/0x9de39120405faf790cc851d3da68a49eb8716564.sol",
        "function": "_function_0x055ad42e",
        "lineno": 38,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 1308,
        "code": "throw;\n        uint newTokens",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_5: 0x8000\ncalldata_PresaleToken_0: 0x200000000000000000000000000000000000000000000000000000000\ncalldatasize_PresaleToken: 0x4\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/43/0x9de39120405faf790cc851d3da68a49eb8716564.sol",
        "function": "fallback",
        "lineno": 69,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 1852,
        "code": " _nextPhase == Phase.Paused)\n",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_5: 0x8000\nstorage_7: 0x0\ncaller: 0x0\ncalldata_PresaleToken_0: 0x1ca2e94a00000000000000000000000000000000000000000000000000000000\ncalldatasize_PresaleToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/43/0x9de39120405faf790cc851d3da68a49eb8716564.sol",
        "function": "_function_0x1ca2e94a",
        "lineno": 112,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 1885,
        "code": "            // switch to mi",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_PresaleToken_4: 0x80\nstorage_5: 0x0\nstorage_7: 0x0\ncaller: 0x0\ncalldata_PresaleToken_0: 0x1ca2e94a00000000000000000000000000000000000000000000000000000000\ncalldatasize_PresaleToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/43/0x9de39120405faf790cc851d3da68a49eb8716564.sol",
        "function": "_function_0x1ca2e94a",
        "lineno": 113,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 1966,
        "code": "       || ((currentPhase =",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_PresaleToken_4: 0x80\nstorage_5: 0x100\nstorage_7: 0x0\ncaller: 0x0\ncalldata_PresaleToken_0: 0x1ca2e94a00000000000000000000000000000000000000000000000000000000\ncalldatasize_PresaleToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/43/0x9de39120405faf790cc851d3da68a49eb8716564.sol",
        "function": "_function_0x1ca2e94a",
        "lineno": 114,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2687,
        "debug": "The exception is triggered under the following conditions:\n\nstorage_5: 0x8000\nstorage_7: 0x0\ncaller: 0x0\ncalldata_PresaleToken_0: 0x4defd1bf00000000000000000000000000000000000000000000000000000000\ncalldatasize_PresaleToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/43/0x9de39120405faf790cc851d3da68a49eb8716564.sol",
        "function": "setCrowdsaleManager(address)",
        "lineno": 145,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3385,
        "code": "      if(tokens == 0) throw;\n  ",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_5: 0x8000\nstorage_8: 0x0\ncaller: 0x0\ncalldata_PresaleToken_0: 0xb237f7d400000000000000000000000000000000000000000000000000000000\ncalldatasize_PresaleToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/43/0x9de39120405faf790cc851d3da68a49eb8716564.sol",
        "function": "burnTokens(address)",
        "lineno": 86,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3556,
        "code": "h phase when migratio",
        "debug": "storage_5: 0x300\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_PresaleToken_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_6: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_8: 0x0\ncaller: 0x0\ncalldata_PresaleToken_0: 0xb237f7d400000000000000000000000000000000000000000000000000000000\ncalldatasize_PresaleToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer underflow exists in the function `burnTokens(address)`.\nThe subtraction may result in a value < 0.",
        "filename": "/unique_chucks/43/0x9de39120405faf790cc851d3da68a49eb8716564.sol",
        "function": "burnTokens(address)",
        "lineno": 91,
        "title": "Integer Underflow",
        "type": "Warning"
      }
    ],
    "success": true
  }
}