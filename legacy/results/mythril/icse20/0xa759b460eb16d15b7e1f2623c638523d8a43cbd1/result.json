{
  "contract": "0xa759b460eb16d15b7e1f2623c638523d8a43cbd1",
  "tool": "mythril",
  "start": 1563542065.1315854,
  "end": 1563542257.2999334,
  "duration": 192.16834807395935,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 246,
        "code": "ion hasRole(address _operator, string _role)\n    public\n    view\n    returns (bool)\n  {\n    return roles[_role].has(_op",
        "debug": "calldata_WhitelistedCrowdsale_32 + 4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_WhitelistedCrowdsale_0: 0x988ca8c00000000000000000000000000000000000000000000000000000000\ncalldatasize_WhitelistedCrowdsale: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `checkRole(address,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/16/0xa759b460eb16d15b7e1f2623c638523d8a43cbd1.sol",
        "function": "checkRole(address,string)",
        "lineno": 273,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 527,
        "code": "(address _operator, string _role)\n    internal\n  {\n    roles[_role].add(_operator);\n    emit RoleAdded(_operator, _role);\n  }\n\n  /**\n   * @dev",
        "debug": "calldata_WhitelistedCrowdsale_32 + 4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_WhitelistedCrowdsale_0: 0x217fe6c600000000000000000000000000000000000000000000000000000000\ncalldatasize_WhitelistedCrowdsale: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `hasRole(address,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/16/0xa759b460eb16d15b7e1f2623c638523d8a43cbd1.sol",
        "function": "hasRole(address,string)",
        "lineno": 286,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 656,
        "code": "ontract CbntCrowdsale is TimedCrowdsale, WhitelistedCrowdsale {\n using SafeMath for uint256;\n\n\n struct FutureTransaction{\n   address beneficiary;\n   uint256 num;\n   uint32  times;\n   uint256 lastTime;\n }\n Fut",
        "debug": "calldata_WhitelistedCrowdsale_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_WhitelistedCrowdsale_0: 0x24953eaa00000000000000000000000000000000000000000000000000000000\ncalldatasize_WhitelistedCrowdsale: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `removeAddressesFromWhitelist(address[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/16/0xa759b460eb16d15b7e1f2623c638523d8a43cbd1.sol",
        "function": "removeAddressesFromWhitelist(address[])",
        "lineno": 677,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1093,
        "code": "erators addresses\n   * @return true if at least one address was removed from the whitelist,\n   * false if all addresses weren't in the whitelist in the first place\n   */\n  function removeAddressesFr",
        "debug": "calldata_WhitelistedCrowdsale_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_WhitelistedCrowdsale_0: 0xe2ec6ec300000000000000000000000000000000000000000000000000000000\ncalldatasize_WhitelistedCrowdsale: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `addAddressesToWhitelist(address[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/16/0xa759b460eb16d15b7e1f2623c638523d8a43cbd1.sol",
        "function": "addAddressesToWhitelist(address[])",
        "lineno": 644,
        "title": "Integer Overflow ",
        "type": "Warning"
      }
    ],
    "success": true
  }
}