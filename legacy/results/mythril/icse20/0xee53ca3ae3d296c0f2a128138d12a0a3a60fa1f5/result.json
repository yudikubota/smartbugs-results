{
  "contract": "0xee53ca3ae3d296c0f2a128138d12a0a3a60fa1f5",
  "tool": "mythril",
  "start": 1563516991.0528293,
  "end": 1563517056.7478943,
  "duration": 65.69506502151489,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 2177,
        "code": "Math for uint;\n\n",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/5/0xee53ca3ae3d296c0f2a128138d12a0a3a60fa1f5.sol",
        "function": "WithdrawAndTransferToBankroll()",
        "lineno": 177,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 2177,
        "code": "Math for uint;\n\n",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3297\n",
        "filename": "/unique_chucks/5/0xee53ca3ae3d296c0f2a128138d12a0a3a60fa1f5.sol",
        "function": "WithdrawAndTransferToBankroll()",
        "lineno": 177,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 3808,
        "code": "  // Exe",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xff00\ncalldata_ZlotsMulti_0: 0x8291638100000000000000000000000000000000000000000000000000000000\ncalldatasize_ZlotsMulti: 0x4\ncalldata_ZlotsMulti_4 + calldata_ZlotsMulti_32 + 68: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/5/0xee53ca3ae3d296c0f2a128138d12a0a3a60fa1f5.sol",
        "function": "execute(address,uint256,uint256,bytes)",
        "lineno": 335,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}