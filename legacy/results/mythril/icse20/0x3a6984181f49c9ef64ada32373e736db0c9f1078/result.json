{
  "contract": "0x3a6984181f49c9ef64ada32373e736db0c9f1078",
  "tool": "mythril",
  "start": 1563226320.7131884,
  "end": 1563226701.8923662,
  "duration": 381.1791777610779,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 609,
        "code": "State;\n\n\n    //modifiers\n    modi",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_8: 0x8000\ncalldata_Auctionify_0: 0x7fb4509900000000000000000000000000000000000000000000000000000000\ncalldatasize_Auctionify: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0x3a6984181f49c9ef64ada32373e736db0c9f1078.sol",
        "function": "_function_0x7fb45099",
        "lineno": 29,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 1241,
        "code": "       \"Auction already ended.\"\n   ",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_8: 0x8000\ntimestamp: 0x0\nstorage_1: 0x1\ncalldata_Auctionify_0: 0x1998aeef00000000000000000000000000000000000000000000000000000000\ncalldatasize_Auctionify: 0x4\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0x3a6984181f49c9ef64ada32373e736db0c9f1078.sol",
        "function": "bid()",
        "lineno": 43,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2109,
        "code": "eaterBidder(highestBidder, ",
        "debug": "",
        "description": "In the function `bid()` the following predictable state variables are used to determine Ether recipient:\n- block.timestamp\n",
        "filename": "/unique_contracts/0x3a6984181f49c9ef64ada32373e736db0c9f1078.sol",
        "function": "bid()",
        "lineno": 127,
        "title": "Dependence on predictable environment variable",
        "type": "Warning"
      },
      {
        "address": 2109,
        "code": "eaterBidder(highestBidder, ",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function bid(). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_contracts/0x3a6984181f49c9ef64ada32373e736db0c9f1078.sol",
        "function": "bid()",
        "lineno": 127,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 3058,
        "code": "estruct(beneficiary); //save blockc",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_8: 0x8000\ncalldata_Auctionify_0: 0xd37b82aa00000000000000000000000000000000000000000000000000000000\ncalldatasize_Auctionify: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0x3a6984181f49c9ef64ada32373e736db0c9f1078.sol",
        "function": "cleanUpAfterYourself()",
        "lineno": 178,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3322,
        "debug": "SOLVER OUTPUT:\nstorage_8: 0x200\nstorage_5: 0xffffffffffffffffffffffffffffffffffffffff00\ncalldata_Auctionify_0: 0xd37b82aa00000000000000000000000000000000000000000000000000000000\ncalldatasize_Auctionify: 0x4\ncallvalue: 0x0\n",
        "description": "The function `cleanUpAfterYourself()` executes the SUICIDE instruction. The remaining Ether is sent to a stored address.\n\nThere is a check on storage index 8. This storage index can be written to by calling the function `bid()`.",
        "filename": "/unique_contracts/0x3a6984181f49c9ef64ada32373e736db0c9f1078.sol",
        "function": "cleanUpAfterYourself()",
        "lineno": 181,
        "title": "Unchecked SUICIDE",
        "type": "Warning"
      },
      {
        "address": 3380,
        "debug": "SOLVER OUTPUT:\nstorage_8: 0x200\nstorage_5: 0x0\ncalldata_Auctionify_0: 0xd37b82aa00000000000000000000000000000000000000000000000000000000\ncalldatasize_Auctionify: 0x4\ncallvalue: 0x0\n",
        "description": "The function `cleanUpAfterYourself()` executes the SUICIDE instruction. The remaining Ether is sent to a stored address.\n\nThere is a check on storage index 8. This storage index can be written to by calling the function `bid()`.",
        "filename": "/unique_contracts/0x3a6984181f49c9ef64ada32373e736db0c9f1078.sol",
        "function": "cleanUpAfterYourself()",
        "lineno": 181,
        "title": "Unchecked SUICIDE",
        "type": "Warning"
      },
      {
        "address": 3915,
        "code": "nded(highestBidder, bids[highestBid",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_8: 0x8000\ntimestamp: 0x0\nstorage_1: 0x0\nstorage_6: 0x0\nstorage_5: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_Auctionify_0: 0xfe67a54b00000000000000000000000000000000000000000000000000000000\ncalldatasize_Auctionify: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0x3a6984181f49c9ef64ada32373e736db0c9f1078.sol",
        "function": "endAuction()",
        "lineno": 161,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}