{"error": null, "issues": [{"address": 3948, "code": "=> mapping(uint => RoundInfo)) public gameIn", "debug": "The exception is triggered under the following conditions:\n\ncalldata_Treasure_4: 0x3\ncalldata_Treasure_0: 0x240147500000000000000000000000000000000000000000000000000000000\ncalldatasize_Treasure: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/31/0xf2bea87df174bee8a862e1395fc97084ac6e6e56.sol", "function": "_function_0x02401475", "lineno": 305, "title": "Exception state", "type": "Informational"}, {"address": 4093, "code": "t public devFee = 10;\n    uint publi", "debug": "The exception is triggered under the following conditions:\n\ncalldata_Treasure_4: 0x3\ncalldata_Treasure_0: 0xaebf8ab00000000000000000000000000000000000000000000000000000000\ncalldatasize_Treasure: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/31/0xf2bea87df174bee8a862e1395fc97084ac6e6e56.sol", "function": "_function_0x0aebf8ab", "lineno": 301, "title": "Exception state", "type": "Informational"}, {"address": 4149, "code": "ss public devWallet = 0xB4D4709C2D53704768329", "debug": "The exception is triggered under the following conditions:\n\ncalldata_Treasure_4: 0x3\ncalldata_Treasure_0: 0x11b8acd400000000000000000000000000000000000000000000000000000000\ncalldatasize_Treasure: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/31/0xf2bea87df174bee8a862e1395fc97084ac6e6e56.sol", "function": "_function_0x11b8acd4", "lineno": 304, "title": "Exception state", "type": "Informational"}, {"address": 4431, "code": " modes = new uint[](counter", "debug": "storage_10: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_11: 0x57f25cd000000000000000000000000000000000000000000000000000000000\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_Treasure_0: 0x20b12d1300000000000000000000000000000000000000000000000000000000\ncalldatasize_Treasure: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `getPlayerAllDetail()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/31/0xf2bea87df174bee8a862e1395fc97084ac6e6e56.sol", "function": "getPlayerAllDetail()", "lineno": 421, "title": "Integer Overflow ", "type": "Warning"}, {"address": 4432, "code": " modes = new uint[](counter);\n        roun", "debug": "storage_10: 0x72dc24493301c1ec5cff6c4ea1548de3644903aaeafe924d13450f3b1701469e\nstorage_11: 0x8078080001ff2760a13f09dde4212006a0800000c00002000704820f6fc00058\nstorage_12: 0x43d5ae6891e389eec0bf7fcc09a728ebedad75cf0b796b5664cbdc6b793da881\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_Treasure_0: 0x20b12d1300000000000000000000000000000000000000000000000000000000\ncalldatasize_Treasure: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `getPlayerAllDetail()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/31/0xf2bea87df174bee8a862e1395fc97084ac6e6e56.sol", "function": "getPlayerAllDetail()", "lineno": 421, "title": "Integer Overflow ", "type": "Warning"}, {"address": 4853, "code": "[i]][rounds[i]].", "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_12: 0x0\nstorage_11: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_Treasure_0: 0x20b12d1300000000000000000000000000000000000000000000000000000000\ncalldatasize_Treasure: 0x4\nstorage_10: 0x1\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/31/0xf2bea87df174bee8a862e1395fc97084ac6e6e56.sol", "function": "getPlayerAllDetail()", "lineno": 428, "title": "Exception state", "type": "Informational"}], "success": true}