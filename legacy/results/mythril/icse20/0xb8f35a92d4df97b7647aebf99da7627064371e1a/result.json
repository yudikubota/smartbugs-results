{
  "contract": "0xb8f35a92d4df97b7647aebf99da7627064371e1a",
  "tool": "mythril",
  "start": 1563529238.093175,
  "end": 1563529341.8341632,
  "duration": 103.74098825454712,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 1916,
        "code": " retu",
        "debug": "storage_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncallvalue: 0xfe0fff3e7ffe000\ntimestamp: 0x0\nstorage_7: 0x1\nstorage_6: 0x0\ncalldatasize_XRRtoken: 0x3\n",
        "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/13/0xb8f35a92d4df97b7647aebf99da7627064371e1a.sol",
        "function": "fallback",
        "lineno": 41,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1929,
        "code": "\n}\n\n\ncontract ",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_4: 0xf21bf69e6c363fc3cd1360df7f68a020e66011c63964fdc830b65a02c49d00c1\ncallvalue: 0x829bfd7de19137e61666ccdcd846952054f4dd794af6f14e3eb75bdcf9dadaed\ntimestamp: 0x0\nstorage_7: 0x1\nstorage_6: 0x0\ncalldatasize_XRRtoken: 0x3\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/13/0xb8f35a92d4df97b7647aebf99da7627064371e1a.sol",
        "function": "fallback",
        "lineno": 42,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2193,
        "code": "er(owner, tokenTosale",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/13/0xb8f35a92d4df97b7647aebf99da7627064371e1a.sol",
        "function": "finishSale()",
        "lineno": 140,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 2193,
        "code": "er(owner, tokenTosale",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3628\n",
        "filename": "/unique_chucks/13/0xb8f35a92d4df97b7647aebf99da7627064371e1a.sol",
        "function": "finishSale()",
        "lineno": 140,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 3131,
        "code": "g.value));\n        require(currentPr",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/13/0xb8f35a92d4df97b7647aebf99da7627064371e1a.sol",
        "function": "tokenWithdraw()",
        "lineno": 145,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 3628,
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/13/0xb8f35a92d4df97b7647aebf99da7627064371e1a.sol",
        "function": "finishSale()",
        "lineno": 175,
        "title": "Message call to external contract",
        "type": "Informational"
      }
    ],
    "success": true
  }
}