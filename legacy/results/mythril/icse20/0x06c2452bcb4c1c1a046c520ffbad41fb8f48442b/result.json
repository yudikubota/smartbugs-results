{
  "contract": "0x06c2452bcb4c1c1a046c520ffbad41fb8f48442b",
  "tool": "mythril",
  "start": 1563782695.5356688,
  "end": 1563783086.7279756,
  "duration": 391.19230675697327,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 276,
        "code": "stion, bytes32 _responseHash)\n    public payable {\n        if (msg.sender == questionSender) {\n            Jeopardy = question;\n            responseHash = _responseHash;\n        }\n    }\n    \n    function () payable public ",
        "debug": "calldata_AlexTrebek_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_AlexTrebek_0: 0x3e3ee85900000000000000000000000000000000000000000000000000000000\ncalldatasize_AlexTrebek: 0x4\n",
        "description": "A possible integer overflow exists in the function `NewQuestion(string,bytes32)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/48/0x06c2452bcb4c1c1a046c520ffbad41fb8f48442b.sol",
        "function": "NewQuestion(string,bytes32)",
        "lineno": 32,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 382,
        "code": "onIs(string question, string response)\n    public payable {\n        if (responseHash == 0x0) {\n            responseHash = keccak256(response);\n            Jeopardy = question;\n            questionSender = msg.sender;\n        }\n    }\n\n    function EndQues",
        "debug": "calldata_AlexTrebek_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_AlexTrebek_0: 0x8281feaa00000000000000000000000000000000000000000000000000000000\ncalldatasize_AlexTrebek: 0x4\n",
        "description": "A possible integer overflow exists in the function `QuestionIs(string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/48/0x06c2452bcb4c1c1a046c520ffbad41fb8f48442b.sol",
        "function": "QuestionIs(string,string)",
        "lineno": 16,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 394,
        "code": "onIs(string question, string response)\n    public payable {\n        if (responseHash == 0x0) {\n            responseHash = keccak256(response);\n            Jeopardy = question;\n            questionSender = msg.sender;\n        }\n    }\n\n    function EndQues",
        "debug": "calldata_AlexTrebek_4 + calldata_AlexTrebek_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8\ncalldata_AlexTrebek_0: 0x8281feaa00000000000000000000000000000000000000000000000000000000\ncalldatasize_AlexTrebek: 0x4\n",
        "description": "A possible integer overflow exists in the function `QuestionIs(string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/48/0x06c2452bcb4c1c1a046c520ffbad41fb8f48442b.sol",
        "function": "QuestionIs(string,string)",
        "lineno": 16,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 403,
        "code": "onIs(string question, string response)\n    public payable {\n        if (responseHash == 0x0) {\n            responseHash = keccak256(response);\n            Jeopardy = question;\n            questionSender = msg.sender;\n        }\n    }\n\n    function EndQues",
        "debug": "calldata_AlexTrebek_4 + calldata_AlexTrebek_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc1\ncalldata_AlexTrebek_0: 0x8281feaa00000000000000000000000000000000000000000000000000000000\ncalldatasize_AlexTrebek: 0x4\n",
        "description": "A possible integer overflow exists in the function `QuestionIs(string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/48/0x06c2452bcb4c1c1a046c520ffbad41fb8f48442b.sol",
        "function": "QuestionIs(string,string)",
        "lineno": 16,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 409,
        "code": "onIs(string question, string response)\n    public payable {\n        if (responseHash == 0x0) {\n            responseHash = keccak256(response);\n            Jeopardy = question;\n            questionSender = msg.sender;\n        }\n    }\n\n    function EndQues",
        "debug": "calldata_AlexTrebek_4 + calldata_AlexTrebek_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff41\ncalldata_AlexTrebek_0: 0x8281feaa00000000000000000000000000000000000000000000000000000000\ncalldatasize_AlexTrebek: 0x4\n",
        "description": "A possible integer overflow exists in the function `QuestionIs(string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/48/0x06c2452bcb4c1c1a046c520ffbad41fb8f48442b.sol",
        "function": "QuestionIs(string,string)",
        "lineno": 16,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 452,
        "code": "onIs(string question, string response)\n    public payable {\n        if (responseHash == 0x0) {\n            responseHash = keccak256(response);\n            Jeopardy = question;\n            questionSender = msg.sender;\n        }\n    }\n\n    function EndQues",
        "debug": "calldata_AlexTrebek_32 + 4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_AlexTrebek_0: 0x8281feaa00000000000000000000000000000000000000000000000000000000\ncalldatasize_AlexTrebek: 0x4\n",
        "description": "A possible integer overflow exists in the function `QuestionIs(string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/48/0x06c2452bcb4c1c1a046c520ffbad41fb8f48442b.sol",
        "function": "QuestionIs(string,string)",
        "lineno": 16,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 464,
        "code": "onIs(string question, string response)\n    public payable {\n        if (responseHash == 0x0) {\n            responseHash = keccak256(response);\n            Jeopardy = question;\n            questionSender = msg.sender;\n        }\n    }\n\n    function EndQues",
        "debug": "calldata_AlexTrebek_4 + calldata_AlexTrebek_32 + 4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8\ncalldata_AlexTrebek_0: 0x8281feaa00000000000000000000000000000000000000000000000000000000\ncalldatasize_AlexTrebek: 0x4\n",
        "description": "A possible integer overflow exists in the function `QuestionIs(string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/48/0x06c2452bcb4c1c1a046c520ffbad41fb8f48442b.sol",
        "function": "QuestionIs(string,string)",
        "lineno": 16,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 473,
        "code": "onIs(string question, string response)\n    public payable {\n        if (responseHash == 0x0) {\n            responseHash = keccak256(response);\n            Jeopardy = question;\n            questionSender = msg.sender;\n        }\n    }\n\n    function EndQues",
        "debug": "calldata_AlexTrebek_4 + calldata_AlexTrebek_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc1\ncalldata_AlexTrebek_0: 0x8281feaa00000000000000000000000000000000000000000000000000000000\ncalldatasize_AlexTrebek: 0x4\n",
        "description": "A possible integer overflow exists in the function `QuestionIs(string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/48/0x06c2452bcb4c1c1a046c520ffbad41fb8f48442b.sol",
        "function": "QuestionIs(string,string)",
        "lineno": 16,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 479,
        "code": "onIs(string question, string response)\n    public payable {\n        if (responseHash == 0x0) {\n            responseHash = keccak256(response);\n            Jeopardy = question;\n            questionSender = msg.sender;\n        }\n    }\n\n    function EndQues",
        "debug": "calldata_AlexTrebek_4 + calldata_AlexTrebek_32 + 4: 0x746e42ddbe03c97fe6e530ac0258466c4a20dfffffffffffffffffffffffffc1\ncalldata_AlexTrebek_4 + calldata_AlexTrebek_4: 0xcf9f8ea5a709fb58f8ed502cd9b08a9b1306dfffffffffffffffffffffffff61\ncalldata_AlexTrebek_0: 0x8281feaa00000000000000000000000000000000000000000000000000000000\ncalldatasize_AlexTrebek: 0x4\n",
        "description": "A possible integer overflow exists in the function `QuestionIs(string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/48/0x06c2452bcb4c1c1a046c520ffbad41fb8f48442b.sol",
        "function": "QuestionIs(string,string)",
        "lineno": 16,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 554,
        "code": " Answer(string response)\n    public payable {\n        if (responseHash == keccak256(response) && msg.value > 1 ether) {\n            msg.sender.transfer(address(this).balance);\n        }\n    }\n \n    functi",
        "debug": "calldata_AlexTrebek_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_AlexTrebek_0: 0xe94e83d800000000000000000000000000000000000000000000000000000000\ncalldatasize_AlexTrebek: 0x4\n",
        "description": "A possible integer overflow exists in the function `Answer(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/48/0x06c2452bcb4c1c1a046c520ffbad41fb8f48442b.sol",
        "function": "Answer(string)",
        "lineno": 9,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 566,
        "code": " Answer(string response)\n    public payable {\n        if (responseHash == keccak256(response) && msg.value > 1 ether) {\n            msg.sender.transfer(address(this).balance);\n        }\n    }\n \n    functi",
        "debug": "calldata_AlexTrebek_4 + calldata_AlexTrebek_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8\ncalldata_AlexTrebek_0: 0xe94e83d800000000000000000000000000000000000000000000000000000000\ncalldatasize_AlexTrebek: 0x4\n",
        "description": "A possible integer overflow exists in the function `Answer(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/48/0x06c2452bcb4c1c1a046c520ffbad41fb8f48442b.sol",
        "function": "Answer(string)",
        "lineno": 9,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 575,
        "code": " Answer(string response)\n    public payable {\n        if (responseHash == keccak256(response) && msg.value > 1 ether) {\n            msg.sender.transfer(address(this).balance);\n        }\n    }\n \n    functi",
        "debug": "calldata_AlexTrebek_4 + calldata_AlexTrebek_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc1\ncalldata_AlexTrebek_0: 0xe94e83d800000000000000000000000000000000000000000000000000000000\ncalldatasize_AlexTrebek: 0x4\n",
        "description": "A possible integer overflow exists in the function `Answer(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/48/0x06c2452bcb4c1c1a046c520ffbad41fb8f48442b.sol",
        "function": "Answer(string)",
        "lineno": 9,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 581,
        "code": " Answer(string response)\n    public payable {\n        if (responseHash == keccak256(response) && msg.value > 1 ether) {\n            msg.sender.transfer(address(this).balance);\n        }\n    }\n \n    functi",
        "debug": "calldata_AlexTrebek_4 + calldata_AlexTrebek_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff41\ncalldata_AlexTrebek_0: 0xe94e83d800000000000000000000000000000000000000000000000000000000\ncalldatasize_AlexTrebek: 0x4\n",
        "description": "A possible integer overflow exists in the function `Answer(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/48/0x06c2452bcb4c1c1a046c520ffbad41fb8f48442b.sol",
        "function": "Answer(string)",
        "lineno": 9,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1014,
        "code": ");\n            Jeop",
        "debug": "mem_128 +\n32 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_AlexTrebek_4 + calldata_AlexTrebek_4)): 0xe0\ncalldata_AlexTrebek_4 + calldata_AlexTrebek_32 + 4: 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01\ncalldata_AlexTrebek_4 + calldata_AlexTrebek_4: 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81\ncalldata_AlexTrebek_0: 0x8281feaa00000000000000000000000000000000000000000000000000000000\ncalldatasize_AlexTrebek: 0x4\nstorage_0: 0x0\n",
        "description": "A possible integer overflow exists in the function `QuestionIs(string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/48/0x06c2452bcb4c1c1a046c520ffbad41fb8f48442b.sol",
        "function": "QuestionIs(string,string)",
        "lineno": 19,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1285,
        "code": "(this).balance);\n        }\n    }\n\n    func",
        "debug": "SOLVER OUTPUT:\nstorage_2: 0x0\ncaller: 0x0\ncalldata_AlexTrebek_0: 0xb18de61800000000000000000000000000000000000000000000000000000000\ncalldatasize_AlexTrebek: 0x4\n",
        "description": "In the function `EndQuestion()` a non-zero amount of Ether is sent to msg.sender.\n\nThere is a check on storage index 2. This storage slot can be written to by calling the function `QuestionIs(string,string)`.",
        "filename": "/unique_chucks/48/0x06c2452bcb4c1c1a046c520ffbad41fb8f48442b.sol",
        "function": "EndQuestion()",
        "lineno": 28,
        "title": "Ether send",
        "type": "Warning"
      },
      {
        "address": 1517,
        "code": "transfer(address(this).balance);\n        }",
        "debug": "SOLVER OUTPUT:\ncalldata_AlexTrebek_4 + calldata_AlexTrebek_4: 0xc0\ncallvalue: 0xde0b6b3a7640001\ncalldata_AlexTrebek_0: 0xe94e83d800000000000000000000000000000000000000000000000000000000\ncalldatasize_AlexTrebek: 0x4\nKECCAC_mem_128 +\n32 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_AlexTrebek_4 + calldata_AlexTrebek_4))): 0x0\nstorage_0: 0x0\n",
        "description": "In the function `Answer(string)` a non-zero amount of Ether is sent to msg.sender.\n\nThere is a check on storage index 0. This storage slot can be written to by calling the function `QuestionIs(string,string)`.",
        "filename": "/unique_chucks/48/0x06c2452bcb4c1c1a046c520ffbad41fb8f48442b.sol",
        "function": "Answer(string)",
        "lineno": 12,
        "title": "Ether send",
        "type": "Warning"
      },
      {
        "address": 1612,
        "code": "ntract AlexTrebek\n{\n    bytes32 responseHash;\n    string public Jeopardy;\n    address questionSender;\n\n    function Answer(string response)\n    public payable {\n        if (responseHash == keccak256(response) && msg.value > 1 ether) {\n            msg.sender.transfer(address(this).balance);\n        }\n    }\n \n    function QuestionIs(string question, string response)\n    public payable {\n        if (responseHash == 0x0) {\n            responseHash = keccak256(response);\n            Jeopardy = question;\n            questionSender = msg.sender;\n        }\n    }\n\n    function EndQuestion()\n    public payable {\n        if (msg.sender == questionSender) {\n            msg.sender.transfer(address(this).balance);\n        }\n    }\n\n    function NewQuestion(string question, bytes32 _responseHash)\n    public payable {\n        if (msg.sender == questionSender) {\n            Jeopardy = question;\n            responseHash = _responseHash;\n        }\n    }\n    \n    function () payable public {}\n}",
        "debug": "mem_128 +\n32 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_AlexTrebek_4 + calldata_AlexTrebek_4)): 0xc0\ncalldata_AlexTrebek_4 + calldata_AlexTrebek_4: 0x8000000000000000000000000000000000000000000000000000000000000000\ncalldata_AlexTrebek_0: 0x8281feaa00000000000000000000000000000000000000000000000000000000\ncalldatasize_AlexTrebek: 0x4\nstorage_0: 0x0\n",
        "description": "A possible integer overflow exists in the function `QuestionIs(string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/48/0x06c2452bcb4c1c1a046c520ffbad41fb8f48442b.sol",
        "function": "QuestionIs(string,string)",
        "lineno": 3,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1626,
        "code": "ntract AlexTrebek\n{\n    bytes32 responseHash;\n    string public Jeopardy;\n    address questionSender;\n\n    function Answer(string response)\n    public payable {\n        if (responseHash == keccak256(response) && msg.value > 1 ether) {\n            msg.sender.transfer(address(this).balance);\n        }\n    }\n \n    function QuestionIs(string question, string response)\n    public payable {\n        if (responseHash == 0x0) {\n            responseHash = keccak256(response);\n            Jeopardy = question;\n            questionSender = msg.sender;\n        }\n    }\n\n    function EndQuestion()\n    public payable {\n        if (msg.sender == questionSender) {\n            msg.sender.transfer(address(this).balance);\n        }\n    }\n\n    function NewQuestion(string question, bytes32 _responseHash)\n    public payable {\n        if (msg.sender == questionSender) {\n            Jeopardy = question;\n            responseHash = _responseHash;\n        }\n    }\n    \n    function () payable public {}\n}",
        "debug": "mem_128 +\n32 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_AlexTrebek_4 + calldata_AlexTrebek_4)): 0xa0\ncalldata_AlexTrebek_4 + calldata_AlexTrebek_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\ncalldata_AlexTrebek_0: 0x8281feaa00000000000000000000000000000000000000000000000000000000\ncalldatasize_AlexTrebek: 0x4\nstorage_0: 0x0\n",
        "description": "A possible integer overflow exists in the function `QuestionIs(string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/48/0x06c2452bcb4c1c1a046c520ffbad41fb8f48442b.sol",
        "function": "QuestionIs(string,string)",
        "lineno": 3,
        "title": "Integer Overflow ",
        "type": "Warning"
      }
    ],
    "success": true
  }
}