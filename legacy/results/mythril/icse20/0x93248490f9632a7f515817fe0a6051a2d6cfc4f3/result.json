{
  "contract": "0x93248490f9632a7f515817fe0a6051a2d6cfc4f3",
  "tool": "mythril",
  "start": 1563628564.4979827,
  "end": 1563629022.8897798,
  "duration": 458.39179706573486,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 2076,
        "code": "      require(balance",
        "debug": "calldata_TokenERC20_32 + 68: 0xbbf87414e9be8000000000000000000000000000000000000000000000000b19\ncalldata_TokenERC20_32 + 4: 0xdea8f5de8ea16c5b30bfc0902cb1b1f72b57ad198039ab7a472faaefded70017\nstorage_7: 0xbbf87414e9be8000000000000000000000000000000000000000000000000b19\ncalldata_TokenERC20_32 + 36: 0xdea8f5de8ea16c5b30bfc0902cb1b1f72b57ad198039ab7a472faaefded70017\nstorage_1: 0x0\ncaller: 0x0\ncalldata_TokenERC20_0: 0x1157f04000000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenERC20: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `send(address,uint256,uint256,uint256,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/28/0x93248490f9632a7f515817fe0a6051a2d6cfc4f3.sol",
        "function": "send(address,uint256,uint256,uint256,uint256)",
        "lineno": 62,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2084,
        "code": "      require(balanceOf[_t",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_TokenERC20_32 + 68: 0x0\nstorage_7: 0x0\nstorage_1: 0x0\ncaller: 0x0\ncalldata_TokenERC20_0: 0x1157f04000000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenERC20: 0x4\ncalldata_TokenERC20_32 + 36: 0x0\ncalldata_TokenERC20_32 + 4: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/28/0x93248490f9632a7f515817fe0a6051a2d6cfc4f3.sol",
        "function": "send(address,uint256,uint256,uint256,uint256)",
        "lineno": 62,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 4674,
        "code": ";\n\ncontract TokenE",
        "debug": "storage_0: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_TokenERC20_0: 0xe377f66400000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenERC20: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `setPlayers()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/28/0x93248490f9632a7f515817fe0a6051a2d6cfc4f3.sol",
        "function": "setPlayers()",
        "lineno": 1,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 4814,
        "debug": "storage_0: 0x8421003f084001f4210815cf88407c00000000000000037c1d000e8d178001f\ncalldata_TokenERC20_0: 0xefa1c48200000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenERC20: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `getAllPlayers()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/28/0x93248490f9632a7f515817fe0a6051a2d6cfc4f3.sol",
        "function": "getAllPlayers()",
        "lineno": 119,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 4816,
        "debug": "storage_0: 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffb\ncalldata_TokenERC20_0: 0xefa1c48200000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenERC20: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `getAllPlayers()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/28/0x93248490f9632a7f515817fe0a6051a2d6cfc4f3.sol",
        "function": "getAllPlayers()",
        "lineno": 119,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 4926,
        "code": "ess[] public players;\n  ",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_TokenERC20_4: 0x0\nstorage_0: 0x0\ncalldata_TokenERC20_0: 0xf71d96cb00000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenERC20: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/28/0x93248490f9632a7f515817fe0a6051a2d6cfc4f3.sol",
        "function": "_function_0xf71d96cb",
        "lineno": 5,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}