{"error": null, "issues": [{"address": 1322, "code": "\n     * Internal transfer with security chec", "debug": "The exception is triggered under the following conditions:\n\ncalldatasize_UpgradeableToken: 0x4\ncalldata_UpgradeableToken_0: 0x95ea7b300000000000000000000000000000000000000000000000000000000\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/21/0xa5fd4f631ddf9c37d7b8a2c429a58bdc78abc843.sol", "function": "approve(address,uint256)", "lineno": 79, "title": "Exception state", "type": "Informational"}, {"address": 1746, "code": "\n     * Internal transfer with security chec", "debug": "The exception is triggered under the following conditions:\n\ncalldatasize_UpgradeableToken: 0x60\ncalldata_UpgradeableToken_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/21/0xa5fd4f631ddf9c37d7b8a2c429a58bdc78abc843.sol", "function": "transferFrom(address,address,uint256)", "lineno": 79, "title": "Exception state", "type": "Informational"}, {"address": 2979, "code": "\n     * Internal transfer with security chec", "debug": "The exception is triggered under the following conditions:\n\ncalldatasize_UpgradeableToken: 0x4\ncalldata_UpgradeableToken_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/21/0xa5fd4f631ddf9c37d7b8a2c429a58bdc78abc843.sol", "function": "transfer(address,uint256)", "lineno": 79, "title": "Exception state", "type": "Informational"}, {"address": 4160, "code": "   return a - ", "debug": "The exception is triggered under the following conditions:\n\ncalldatasize_UpgradeableToken: 0x48\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncalldata_UpgradeableToken_32 + 4: 0x1\ncalldata_UpgradeableToken_4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_UpgradeableToken_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/21/0xa5fd4f631ddf9c37d7b8a2c429a58bdc78abc843.sol", "function": "transfer(address,uint256)", "lineno": 23, "title": "Exception state", "type": "Informational"}, {"address": 4661, "code": " a &&", "debug": "calldata_UpgradeableToken_32 + 4: 0x6173538839847ecb1c051d3958c52c0d15261637901c038184c1b94b3d5bd9a5\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_UpgradeableToken_4: 0xf1592bedbbff7fd743ed18b69e49c6a2d5afe5b9c6df6bd8868438480103db39\ncalldatasize_UpgradeableToken: 0x1000000000000000000000000000000000000000000000000000000000000044\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x6173538839847ecb1c051d3958c52c0d15261637901c038184c1b94b3d5bd9a5\ncalldata_UpgradeableToken_4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_UpgradeableToken_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `transfer(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/21/0xa5fd4f631ddf9c37d7b8a2c429a58bdc78abc843.sol", "function": "transfer(address,uint256)", "lineno": 28, "title": "Integer Overflow ", "type": "Warning"}, {"address": 4686, "code": "       return c;\n    }\n}", "debug": "The exception is triggered under the following conditions:\n\ncalldatasize_UpgradeableToken: 0x20000000000000000000000000000000070\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_UpgradeableToken_32_+_4: 0xeed94dba0409e2901e98bca0e8207863a06e1b0e522bc7310401ec8848abbd31\ncalldata_UpgradeableToken_32 + 36: 0x45d32d9b26ac7cd15b9c95c0768e7c43bf6f9b6f4a039d4dcc39eeb901390535\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_UpgradeableToken_4: 0x45d32d9b26ac7cd15b9c95c0768e7c43bf6f9b6f4a039d4dcc39eeb901390535\ncalldata_UpgradeableToken_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x45d32d9b26ac7cd15b9c95c0768e7c43bf6f9b6f4a039d4dcc39eeb901390535\ncalldata_UpgradeableToken_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/21/0xa5fd4f631ddf9c37d7b8a2c429a58bdc78abc843.sol", "function": "transferFrom(address,address,uint256)", "lineno": 29, "title": "Exception state", "type": "Informational"}], "success": true}