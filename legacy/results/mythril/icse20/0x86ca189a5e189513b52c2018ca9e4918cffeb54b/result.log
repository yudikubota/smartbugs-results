{"error": null, "issues": [{"address": 437, "code": ");\n        }\n\n        // ---", "debug": "callvalue: 0x57f25cd000000000000000000000000000000000000000000000000000000000\nstorage_1: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncalldatasize_Token: 0x3\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/33/0x86ca189a5e189513b52c2018ca9e4918cffeb54b.sol", "function": "fallback", "lineno": 369, "title": "Integer Overflow ", "type": "Warning"}, {"address": 453, "code": "------\n        // sender withd", "debug": "storage_2: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncallvalue: 0x57f25cd000000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x3\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/33/0x86ca189a5e189513b52c2018ca9e4918cffeb54b.sol", "function": "fallback", "lineno": 372, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1472, "code": "   {\n                owner = msg.sende", "debug": "The exception is triggered under the following conditions:\n\nstorage_18: 0xfe00\ncalldata_Token_0: 0x5f437e4800000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/33/0x86ca189a5e189513b52c2018ca9e4918cffeb54b.sol", "function": "_function_0x5f437e48", "lineno": 177, "title": "Exception state", "type": "Informational"}, {"address": 3304, "code": "permanent settings\n                // WARNING, M", "debug": "The exception is triggered under the following conditions:\n\nstorage_18: 0xfe00\nstorage_4: 0x0\ncaller: 0x0\ncalldata_Token_0: 0x13bd53e600000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/33/0x86ca189a5e189513b52c2018ca9e4918cffeb54b.sol", "function": "_function_0x13bd53e6", "lineno": 204, "title": "Exception state", "type": "Informational"}, {"address": 3345, "code": "   // BEFORE LOCKING\n\n", "debug": "The exception is triggered under the following conditions:\n\nstorage_18: 0x0\ncalldata_Token_4: 0xfe\nstorage_4: 0x0\ncaller: 0x0\ncalldata_Token_0: 0x13bd53e600000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/33/0x86ca189a5e189513b52c2018ca9e4918cffeb54b.sol", "function": "_function_0x13bd53e6", "lineno": 206, "title": "Exception state", "type": "Informational"}, {"address": 3982, "code": "     // allocate a new account by setting a", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/33/0x86ca189a5e189513b52c2018ca9e4918cffeb54b.sol", "function": "_function_0x13bd53e6", "lineno": 238, "title": "Message call to external contract", "type": "Informational"}, {"address": 5153, "code": "onstant returns (uint256 balance) {\n", "debug": "calldata_Token_32 + 36: 0x800000000000000003ffd0badcb9b7000000002781000000000000000006bfff\nstorage_1 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_Token_32_+_4: 0x800000000000000000008eb2e34648ee0801030820000000000000000000a000\ntimestamp: 0x0\nstorage_0 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_Token_32_+_4: 0xff00\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x800000000000000003ffd0badcb9b7000000002781000000000000000006bfff\nstorage_1 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_Token_4: 0x800000000000000003ffd0badcb9b7000000002781000000000000000006bfff\nstorage_17: 0x0\nstorage_3: 0x0\ncalldata_Token_4: 0x0\ncalldata_Token_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `transferFrom(address,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/33/0x86ca189a5e189513b52c2018ca9e4918cffeb54b.sol", "function": "transferFrom(address,address,uint256)", "lineno": 325, "title": "Integer Overflow ", "type": "Warning"}, {"address": 6042, "code": "  (now < vestTime)) {\n                     ", "debug": "", "description": "This contract executes a message call to the address of the transaction sender. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/33/0x86ca189a5e189513b52c2018ca9e4918cffeb54b.sol", "function": "withdrawDividends()", "lineno": 405, "title": "Message call to external contract", "type": "Warning"}, {"address": 11784, "code": " THIS FUNCTION LEST YOU LOSE YOUR MONEY\n        // ---", "debug": "storage_2: 0x0\nstorage_3 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x1\ncalldata_Token_0: 0x2e92abdd00000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n", "description": "A possible integer underflow exists in the function `withdrawDividends()`.\nThe subtraction may result in a value < 0.", "filename": "/unique_chucks/33/0x86ca189a5e189513b52c2018ca9e4918cffeb54b.sol", "function": "withdrawDividends()", "lineno": 357, "title": "Integer Underflow", "type": "Warning"}, {"address": 11857, "code": "Received\n        // WARNING! DO NOT CALL THIS FUNCTION LEST YOU LOSE YOUR MONEY\n        // ---------------------------\n       ", "debug": "storage_2 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_1 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x57f25cd000000000000000000000000000000000000000000000000000000000\nstorage_2: 0x1\nstorage_3 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncalldata_Token_0: 0x2e92abdd00000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `withdrawDividends()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/33/0x86ca189a5e189513b52c2018ca9e4918cffeb54b.sol", "function": "withdrawDividends()", "lineno": 356, "title": "Integer Overflow ", "type": "Warning"}, {"address": 12266, "code": "  supply = Ne", "debug": "storage_12: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_Token_32 + 36: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ntimestamp: 0x0\nstorage_0 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_Token_32_+_4: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_1 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_Token_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_17: 0x0\nstorage_3: 0x0\ncalldata_Token_4: 0x0\ncalldata_Token_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `transferFrom(address,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/33/0x86ca189a5e189513b52c2018ca9e4918cffeb54b.sol", "function": "transferFrom(address,address,uint256)", "lineno": 256, "title": "Integer Overflow ", "type": "Warning"}], "success": true}