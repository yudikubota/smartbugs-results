{"error": null, "issues": [{"address": 115, "code": "[] receivers, uint256[] amounts, address token) external {\n        address sender = msg.sender;\n        uint256 length = receivers.length;\n        for (uint256 i = 0; i < length; i++) {\n            if (!ERC20(token).transferFrom(sender, receivers[i], amounts[i])) {\n                emit TransferFail(i, receivers[i], amounts[i]);\n                return;\n            }\n        }\n    }\n\n    function bulkTransferEther(addre", "debug": "calldata_TokenSender_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_TokenSender_0: 0x89ef829200000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenSender: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `bulkTransfer(address[],uint256[],address)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/17/0x6a15488ef88d399cd1ac1823ef3e61e2ff215f87.sol", "function": "bulkTransfer(address[],uint256[],address)", "lineno": 30, "title": "Integer Overflow ", "type": "Warning"}, {"address": 217, "code": "eivers, uint256[] amounts) external payable {\n        uint256 length = receivers.length;\n        uint256 totalSend = 0;\n        for (uint256 i = 0; i < length; i++){\n            if (!receivers[i].send(amounts[i])) {\n                emit TransferFail(i, receivers[i], amounts[i]);\n                return;\n            }\n            totalSend += amounts[i];\n        }\n        uint256 balances = msg.value - totalSend;\n        if (balances > 0) {\n            msg.sender.transfer(balances);\n        }\n        require(this.balance == 0);\n    }\n}", "debug": "calldata_TokenSender_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_TokenSender_0: 0xb27d31de00000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenSender: 0x4\n", "description": "A possible integer overflow exists in the function `bulkTransferEther(address[],uint256[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/17/0x6a15488ef88d399cd1ac1823ef3e61e2ff215f87.sol", "function": "bulkTransferEther(address[],uint256[])", "lineno": 41, "title": "Integer Overflow ", "type": "Warning"}, {"address": 241, "code": "eivers, uint256[] amounts) external payable {\n        uint256 length = receivers.length;\n        uint256 totalSend = 0;\n        for (uint256 i = 0; i < length; i++){\n            if (!receivers[i].send(amounts[i])) {\n                emit TransferFail(i, receivers[i], amounts[i]);\n                return;\n            }\n            totalSend += amounts[i];\n        }\n        uint256 balances = msg.value - totalSend;\n        if (balances > 0) {\n            msg.sender.transfer(balances);\n        }\n        require(this.balance == 0);\n    }\n}", "debug": "calldata_TokenSender_32 + 4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_TokenSender_0: 0xb27d31de00000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenSender: 0x4\n", "description": "A possible integer overflow exists in the function `bulkTransferEther(address[],uint256[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/17/0x6a15488ef88d399cd1ac1823ef3e61e2ff215f87.sol", "function": "bulkTransferEther(address[],uint256[])", "lineno": 41, "title": "Integer Overflow ", "type": "Warning"}, {"address": 247, "code": "eivers, uint256[] amounts) external payable {\n        uint256 length = receivers.length;\n        uint256 totalSend = 0;\n        for (uint256 i = 0; i < length; i++){\n            if (!receivers[i].send(amounts[i])) {\n                emit TransferFail(i, receivers[i], amounts[i]);\n                return;\n            }\n            totalSend += amounts[i];\n        }\n        uint256 balances = msg.value - totalSend;\n        if (balances > 0) {\n            msg.sender.transfer(balances);\n        }\n        require(this.balance == 0);\n    }\n}", "debug": "calldata_TokenSender_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc\ncalldata_TokenSender_0: 0xb27d31de00000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenSender: 0x4\n", "description": "A possible integer overflow exists in the function `bulkTransferEther(address[],uint256[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/17/0x6a15488ef88d399cd1ac1823ef3e61e2ff215f87.sol", "function": "bulkTransferEther(address[],uint256[])", "lineno": 41, "title": "Integer Overflow ", "type": "Warning"}, {"address": 378, "code": "it Transfe", "debug": "The exception is triggered under the following conditions:\n\ncalldata_TokenSender_4 + calldata_TokenSender_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_TokenSender_0: 0x89ef829200000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenSender: 0x4\ncalldata_TokenSender_4 + calldata_TokenSender_32 + 4: 0x0\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/17/0x6a15488ef88d399cd1ac1823ef3e61e2ff215f87.sol", "function": "bulkTransfer(address[],uint256[],address)", "lineno": 35, "title": "Exception state", "type": "Informational"}, {"address": 573, "code": " receivers[i], amounts[i])) {\n                emit Transfer", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/17/0x6a15488ef88d399cd1ac1823ef3e61e2ff215f87.sol", "function": "bulkTransfer(address[],uint256[],address)", "lineno": 34, "title": "Message call to external contract", "type": "Warning"}, {"address": 573, "code": " receivers[i], amounts[i])) {\n                emit Transfer", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 573\n", "filename": "/unique_chucks/17/0x6a15488ef88d399cd1ac1823ef3e61e2ff215f87.sol", "function": "bulkTransfer(address[],uint256[],address)", "lineno": 34, "title": "Multiple Calls", "type": "Information"}, {"address": 951, "code": "Fail(i, re", "debug": "The exception is triggered under the following conditions:\n\ncalldata_TokenSender_4 + calldata_TokenSender_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_TokenSender_0: 0xb27d31de00000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenSender: 0x4\ncalldata_TokenSender_4 + calldata_TokenSender_32 + 4: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/17/0x6a15488ef88d399cd1ac1823ef3e61e2ff215f87.sol", "function": "bulkTransferEther(address[],uint256[])", "lineno": 46, "title": "Exception state", "type": "Informational"}, {"address": 980, "code": "     emit TransferFail(i, rec", "debug": "SOLVER OUTPUT:\ncalldata_TokenSender_4 + calldata_TokenSender_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_TokenSender_4 + calldata_TokenSender_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_TokenSender_0: 0xb27d31de00000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenSender: 0x4\n", "description": "In the function `bulkTransferEther(address[],uint256[])` a non-zero amount of Ether is sent to an address taken from function arguments.\nIt seems that this function can be called without restrictions.", "filename": "/unique_chucks/17/0x6a15488ef88d399cd1ac1823ef3e61e2ff215f87.sol", "function": "bulkTransferEther(address[],uint256[])", "lineno": 46, "title": "Ether send", "type": "Warning"}, {"address": 980, "code": "     emit TransferFail(i, rec", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1273\nCall at address: 1273\nCall at address: 980\nCall at address: 980\n", "filename": "/unique_chucks/17/0x6a15488ef88d399cd1ac1823ef3e61e2ff215f87.sol", "function": "bulkTransferEther(address[],uint256[])", "lineno": 46, "title": "Multiple Calls", "type": "Information"}, {"address": 1193, "code": " msg.value", "debug": "calldata_TokenSender_4 + calldata_TokenSender_32 + 4: 0x80000000000000000000000000000000000\ncalldata_TokenSender_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffbc\ncalldata_TokenSender_4 + calldata_TokenSender_4: 0x2000000000000000\nretval_980: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_TokenSender_0: 0xb27d31de00000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenSender: 0x4\n", "description": "A possible integer overflow exists in the function `bulkTransferEther(address[],uint256[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/17/0x6a15488ef88d399cd1ac1823ef3e61e2ff215f87.sol", "function": "bulkTransferEther(address[],uint256[])", "lineno": 51, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1196, "code": "56 balances = msg.value", "debug": "calldata_TokenSender_4 + calldata_TokenSender_32 + 4: 0x200000000000000000000000000\ncalldata_TokenSender_0 + 36 + calldata_TokenSender_32 + 4: 0xa612598451c55349817e4928b2dc1c6d3daddb01e0386e869024c76f248db1e9\ncalldata_TokenSender_32 + 36 + calldata_TokenSender_32 + 4: 0x901300405d7c586085f0a5af011088a45e08dc1519136e005a8b8c43aae5a795\ncalldata_TokenSender_4 + calldata_TokenSender_4: 0x2000000000000\nretval_980: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_TokenSender_0: 0xb27d31de00000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenSender: 0x4\n", "description": "A possible integer overflow exists in the function `bulkTransferEther(address[],uint256[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/17/0x6a15488ef88d399cd1ac1823ef3e61e2ff215f87.sol", "function": "bulkTransferEther(address[],uint256[])", "lineno": 51, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1214, "code": "\n            msg.send", "debug": "calldata_TokenSender_4 + calldata_TokenSender_4: 0x1\ncallvalue: 0x0\ncalldata_TokenSender_0 + 36 + calldata_TokenSender_32 + 4: 0x1\nretval_980: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_TokenSender_4 + calldata_TokenSender_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_TokenSender_0: 0xb27d31de00000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenSender: 0x4\n", "description": "A possible integer underflow exists in the function `bulkTransferEther(address[],uint256[])`.\nThe subtraction may result in a value < 0.", "filename": "/unique_chucks/17/0x6a15488ef88d399cd1ac1823ef3e61e2ff215f87.sol", "function": "bulkTransferEther(address[],uint256[])", "lineno": 52, "title": "Integer Underflow", "type": "Warning"}], "success": true}