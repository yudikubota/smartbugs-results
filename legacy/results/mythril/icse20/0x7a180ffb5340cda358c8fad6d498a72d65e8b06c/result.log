{"error": null, "issues": [{"address": 828, "code": ") == 0 && price_1 != 0){ \n            publ", "debug": "", "description": "This contract executes a message call to an address found at storage slot 1. This storage slot can be written to by calling the function `transferContract(address)`. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/15/0x7a180ffb5340cda358c8fad6d498a72d65e8b06c.sol", "function": "_function_0xdbb9869c", "lineno": 42, "title": "Message call to external contract", "type": "Warning"}, {"address": 828, "code": ") == 0 && price_1 != 0){ \n            publ", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2979\nCall at address: 2505\nCall at address: 2979\nCall at address: 2505\nCall at address: 2262\nCall at address: 2262\nCall at address: 2003\nCall at address: 1788\nCall at address: 2979\nCall at address: 2505\nCall at address: 2979\nCall at address: 2505\nCall at address: 2262\nCall at address: 2262\nCall at address: 2003\nCall at address: 1788\nCall at address: 1545\nCall at address: 2262\nCall at address: 1788\nCall at address: 2262\nCall at address: 1788\nCall at address: 1545\nCall at address: 1286\nCall at address: 1071\nCall at address: 2979\nCall at address: 2505\nCall at address: 2979\nCall at address: 2505\nCall at address: 2262\nCall at address: 2262\nCall at address: 2003\nCall at address: 1788\nCall at address: 2979\nCall at address: 2505\nCall at address: 2979\nCall at address: 2505\nCall at address: 2262\nCall at address: 2262\nCall at address: 2003\nCall at address: 1788\nCall at address: 1545\nCall at address: 2262\nCall at address: 1788\nCall at address: 2262\nCall at address: 1788\nCall at address: 1545\nCall at address: 1286\nCall at address: 1071\n", "filename": "/unique_chucks/15/0x7a180ffb5340cda358c8fad6d498a72d65e8b06c.sol", "function": "_function_0xdbb9869c", "lineno": 42, "title": "Multiple Calls", "type": "Information"}, {"address": 828, "code": ") == 0 && price_1 != 0){ \n            publ", "debug": "", "description": "A possible transaction order independence vulnerability exists in function _function_0xdbb9869c. The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/15/0x7a180ffb5340cda358c8fad6d498a72d65e8b06c.sol", "function": "_function_0xdbb9869c", "lineno": 42, "title": "Transaction order dependence", "type": "Warning"}, {"address": 1071, "code": " price_1);\n          emit ChengeSex(bunny_1,  publi", "debug": "", "description": "This contract executes a message call to an address found at storage slot 1. This storage slot can be written to by calling the function `transferContract(address)`. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/15/0x7a180ffb5340cda358c8fad6d498a72d65e8b06c.sol", "function": "_function_0xdbb9869c", "lineno": 43, "title": "Message call to external contract", "type": "Warning"}, {"address": 1071, "code": " price_1);\n          emit ChengeSex(bunny_1,  publi", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2262\nCall at address: 1788\nCall at address: 2262\nCall at address: 1788\nCall at address: 1545\nCall at address: 1286\n", "filename": "/unique_chucks/15/0x7a180ffb5340cda358c8fad6d498a72d65e8b06c.sol", "function": "_function_0xdbb9869c", "lineno": 43, "title": "Multiple Calls", "type": "Information"}, {"address": 1286, "code": ";\n        }\n\n        if(publicContract.get", "debug": "", "description": "This contract executes a message call to an address found at storage slot 1. This storage slot can be written to by calling the function `transferContract(address)`. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/15/0x7a180ffb5340cda358c8fad6d498a72d65e8b06c.sol", "function": "_function_0xdbb9869c", "lineno": 44, "title": "Message call to external contract", "type": "Warning"}, {"address": 1286, "code": ";\n        }\n\n        if(publicContract.get", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2262\nCall at address: 1788\nCall at address: 2262\nCall at address: 1788\nCall at address: 1545\n", "filename": "/unique_chucks/15/0x7a180ffb5340cda358c8fad6d498a72d65e8b06c.sol", "function": "_function_0xdbb9869c", "lineno": 44, "title": "Multiple Calls", "type": "Information"}, {"address": 1545, "code": "0 && price_2 != 0){ \n            publicCon", "debug": "", "description": "This contract executes a message call to an address found at storage slot 1. This storage slot can be written to by calling the function `transferContract(address)`. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/15/0x7a180ffb5340cda358c8fad6d498a72d65e8b06c.sol", "function": "_function_0xdbb9869c", "lineno": 47, "title": "Message call to external contract", "type": "Warning"}, {"address": 1545, "code": "0 && price_2 != 0){ \n            publicCon", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2262\nCall at address: 1788\nCall at address: 2262\nCall at address: 1788\n", "filename": "/unique_chucks/15/0x7a180ffb5340cda358c8fad6d498a72d65e8b06c.sol", "function": "_function_0xdbb9869c", "lineno": 47, "title": "Multiple Calls", "type": "Information"}, {"address": 1545, "code": "0 && price_2 != 0){ \n            publicCon", "debug": "", "description": "A possible transaction order independence vulnerability exists in function _function_0xdbb9869c. The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/15/0x7a180ffb5340cda358c8fad6d498a72d65e8b06c.sol", "function": "_function_0xdbb9869c", "lineno": 47, "title": "Transaction order dependence", "type": "Warning"}, {"address": 1788, "code": "e_2);\n          emit ChengeSex(bunny_2,  publicCont", "debug": "", "description": "This contract executes a message call to an address found at storage slot 1. This storage slot can be written to by calling the function `transferContract(address)`. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/15/0x7a180ffb5340cda358c8fad6d498a72d65e8b06c.sol", "function": "_function_0xdbb9869c", "lineno": 48, "title": "Message call to external contract", "type": "Warning"}, {"address": 1788, "code": "e_2);\n          emit ChengeSex(bunny_2,  publicCont", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2262\nCall at address: 2003\n", "filename": "/unique_chucks/15/0x7a180ffb5340cda358c8fad6d498a72d65e8b06c.sol", "function": "_function_0xdbb9869c", "lineno": 48, "title": "Multiple Calls", "type": "Information"}, {"address": 2003, "code": "     }\n\n        if(publicContract.getRabbi", "debug": "", "description": "This contract executes a message call to an address found at storage slot 1. This storage slot can be written to by calling the function `transferContract(address)`. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/15/0x7a180ffb5340cda358c8fad6d498a72d65e8b06c.sol", "function": "_function_0xdbb9869c", "lineno": 50, "title": "Message call to external contract", "type": "Warning"}, {"address": 2003, "code": "     }\n\n        if(publicContract.getRabbi", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2262\n", "filename": "/unique_chucks/15/0x7a180ffb5340cda358c8fad6d498a72d65e8b06c.sol", "function": "_function_0xdbb9869c", "lineno": 50, "title": "Multiple Calls", "type": "Information"}, {"address": 2262, "code": "price_3 != 0){ \n            publicContract", "debug": "", "description": "This contract executes a message call to an address found at storage slot 1. This storage slot can be written to by calling the function `transferContract(address)`. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/15/0x7a180ffb5340cda358c8fad6d498a72d65e8b06c.sol", "function": "_function_0xdbb9869c", "lineno": 52, "title": "Message call to external contract", "type": "Warning"}, {"address": 2262, "code": "price_3 != 0){ \n            publicContract", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2979\nCall at address: 2505\nCall at address: 2979\nCall at address: 2505\n", "filename": "/unique_chucks/15/0x7a180ffb5340cda358c8fad6d498a72d65e8b06c.sol", "function": "_function_0xdbb9869c", "lineno": 52, "title": "Multiple Calls", "type": "Information"}, {"address": 2262, "code": "price_3 != 0){ \n            publicContract", "debug": "", "description": "A possible transaction order independence vulnerability exists in function _function_0xdbb9869c. The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/15/0x7a180ffb5340cda358c8fad6d498a72d65e8b06c.sol", "function": "_function_0xdbb9869c", "lineno": 52, "title": "Transaction order dependence", "type": "Warning"}, {"address": 2505, "code": "\n          emit ChengeSex(bunny_3,  publicContract.", "debug": "", "description": "This contract executes a message call to an address found at storage slot 1. This storage slot can be written to by calling the function `transferContract(address)`. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/15/0x7a180ffb5340cda358c8fad6d498a72d65e8b06c.sol", "function": "_function_0xdbb9869c", "lineno": 53, "title": "Message call to external contract", "type": "Warning"}, {"address": 2979, "code": "_4 != 0){ \n            publicContract.setR", "debug": "", "description": "This contract executes a message call to an address found at storage slot 1. This storage slot can be written to by calling the function `transferContract(address)`. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/15/0x7a180ffb5340cda358c8fad6d498a72d65e8b06c.sol", "function": "_function_0xdbb9869c", "lineno": 57, "title": "Message call to external contract", "type": "Warning"}, {"address": 2979, "code": "_4 != 0){ \n            publicContract.setR", "debug": "", "description": "A possible transaction order independence vulnerability exists in function _function_0xdbb9869c. The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/15/0x7a180ffb5340cda358c8fad6d498a72d65e8b06c.sol", "function": "_function_0xdbb9869c", "lineno": 57, "title": "Transaction order dependence", "type": "Warning"}], "success": true}