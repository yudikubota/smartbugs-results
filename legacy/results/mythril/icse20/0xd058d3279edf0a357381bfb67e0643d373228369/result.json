{
  "contract": "0xd058d3279edf0a357381bfb67e0643d373228369",
  "tool": "mythril",
  "start": 1563750843.861154,
  "end": 1563751327.621617,
  "duration": 483.7604629993439,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 449,
        "code": "Pwd)\n    onlySuperOwnerWithPwd(pwd, newHashedPwd)\n    public {\n        owner = newOwner;\n        emit ConfigurationChanged(msg.sender, newOwner, \"a new Owner has been assigned\");\n    }\n\n    function setBypassForAll(bool _bypass)\n    onlySuperOwner\n    pu",
        "debug": "calldata_SafeBlocksProxy_32 + 4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_SafeBlocksProxy_0: 0xa603026b00000000000000000000000000000000000000000000000000000000\ncalldatasize_SafeBlocksProxy: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `setOwner(address,string,bytes32)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/41/0xd058d3279edf0a357381bfb67e0643d373228369.sol",
        "function": "setOwner(address,string,bytes32)",
        "lineno": 65,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 615,
        "code": ".sender, _cid, _blockNumber);\n    }\n\n}\n\ninterface SafeBlocksFirewall {\n\n    /*\n     * Validating the transaction according to a predefined security ",
        "debug": "calldata_SafeBlocksProxy_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_SafeBlocksProxy_0: 0xb7e7ec6000000000000000000000000000000000000000000000000000000000\ncalldatasize_SafeBlocksProxy: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `contractDeployedNotice(string,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/41/0xd058d3279edf0a357381bfb67e0643d373228369.sol",
        "function": "contractDeployedNotice(string,uint256)",
        "lineno": 112,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 762,
        "code": "bytes32 newHashedPwd)\n    onlySuperOwnerWithPwd(pwd, newHashedPwd)\n    public {\n        superOwner = newSuperOwner;\n        emit ConfigurationChanged(msg.sender, newSuperOwner, \"a new Super-Owner has been assigned\");\n    }\n\n    function setOwner(address newOwner, string pwd, bytes32 n",
        "debug": "calldata_SafeBlocksProxy_32 + 4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_SafeBlocksProxy_0: 0xf05d75a000000000000000000000000000000000000000000000000000000000\ncalldatasize_SafeBlocksProxy: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `setSuperOwner(address,string,bytes32)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/41/0xd058d3279edf0a357381bfb67e0643d373228369.sol",
        "function": "setSuperOwner(address,string,bytes32)",
        "lineno": 58,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1421,
        "code": "on(contractAddress, result, _token, _amount, _destination, block.number);\n        r",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/41/0xd058d3279edf0a357381bfb67e0643d373228369.sol",
        "function": "allowTransaction(uint256,address,address)",
        "lineno": 106,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 1421,
        "code": "on(contractAddress, result, _token, _amount, _destination, block.number);\n        r",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function allowTransaction(uint256,address,address). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/41/0xd058d3279edf0a357381bfb67e0643d373228369.sol",
        "function": "allowTransaction(uint256,address,address)",
        "lineno": 106,
        "title": "Transaction order dependence",
        "type": "Warning"
      }
    ],
    "success": true
  }
}