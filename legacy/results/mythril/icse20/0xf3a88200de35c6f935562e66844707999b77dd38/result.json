{
  "contract": "0xf3a88200de35c6f935562e66844707999b77dd38",
  "tool": "mythril",
  "start": 1563595736.9061909,
  "end": 1563595778.868606,
  "duration": 41.96241521835327,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 258,
        "code": "_ethbal) onlyOwner canDistr public {\n         for (uint i = 0; i < addresses.length; i++) {\n\t     if (getEthBalance(addresses[i]) < _ethbal) {\n \t         continue;\n             }\n             balances[owner] -= _value;\n             balances[addresses[i]] += _value;\n             emit Transfer(owner, addresses[i], _value);\n         }\n    }\n    \n    function balanceOf(address _owner) constant public returns (uint256",
        "debug": "calldata_ForeignToken_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_ForeignToken_0: 0x18de5c500000000000000000000000000000000000000000000000000000000\ncalldatasize_ForeignToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `distributeCBC(address[],uint256,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/23/0xf3a88200de35c6f935562e66844707999b77dd38.sol",
        "function": "distributeCBC(address[],uint256,uint256)",
        "lineno": 69,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1890,
        "code": "\n             emit Transf",
        "debug": "calldata_ForeignToken_4 + calldata_ForeignToken_4: 0xfffffffffffff7ffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\nUDiv(storage_1,_256): 0x0\ncalldata_ForeignToken_32 + 36: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_ForeignToken_32 + 4: 0x1\nbalance_at_1461501637330902918203684832716283019655932542975 & 0: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nbalance_at_1461501637330902918203684832716283019655932542975 &\ncalldata_ForeignToken_cpy: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_5: 0x0\nstorage_1: 0x0\ncaller: 0x0\ncalldata_ForeignToken_0: 0x18de5c500000000000000000000000000000000000000000000000000000000\ncalldatasize_ForeignToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer underflow exists in the function `distributeCBC(address[],uint256,uint256)`.\nThe subtraction may result in a value < 0.",
        "filename": "/unique_chucks/23/0xf3a88200de35c6f935562e66844707999b77dd38.sol",
        "function": "distributeCBC(address[],uint256,uint256)",
        "lineno": 75,
        "title": "Integer Underflow",
        "type": "Warning"
      },
      {
        "address": 1990,
        "code": "ses[i], _value);\n         }\n    ",
        "debug": "calldata_ForeignToken_4 + calldata_ForeignToken_4: 0x80\nstorage_77889682276648159348121498188387380826073215901308117747004906171223545284475: 0x88e3e13f1f5eb12a348bf7edfedcb3a47a4a62d03d802123a031fefe630093d3\ncalldata_ForeignToken_32 + 4: 0x9a8fd130a61d1eb3a50ff40d00d9a3f38554f550313eb3a990bb00ce7beed0d3\ncalldata_ForeignToken_32 + 36: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nbalance_at_1461501637330902918203684832716283019655932542975 & 0: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nbalance_at_1461501637330902918203684832716283019655932542975 &\ncalldata_ForeignToken_cpy: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_5: 0x0\nstorage_1: 0x0\ncaller: 0x0\ncalldata_ForeignToken_0: 0x18de5c500000000000000000000000000000000000000000000000000000000\ncalldatasize_ForeignToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `distributeCBC(address[],uint256,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/23/0xf3a88200de35c6f935562e66844707999b77dd38.sol",
        "function": "distributeCBC(address[],uint256,uint256)",
        "lineno": 76,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2662,
        "code": "ess _to, uint256 _amount) onlyPaylo",
        "debug": "The exception is triggered under the following conditions:\n\ncalldatasize_ForeignToken: 0x60\ncalldata_ForeignToken_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/23/0xf3a88200de35c6f935562e66844707999b77dd38.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 90,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3015,
        "code": "om][msg.sender] -= _amo",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_ForeignToken_32_+_4: 0xc8ad1292fc16ef648490c9b6f6a7ad897261541bdd738f31940d869d9824c19a\ncalldatasize_ForeignToken: 0x800000000000000000000000000000000000000000000000000000000020\ncalldata_ForeignToken_32 + 36: 0x5b51dac49284d052eede5596fe2ba53f779697e2114bc7bdc6e9f6dddfb2fca1\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x5b51dac49284d052eede5596fe2ba53f779697e2114bc7bdc6e9f6dddfb2fca1\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_ForeignToken_4: 0x5b51dac49284d052eede5596fe2ba53f779697e2114bc7bdc6e9f6dddfb2fca1\ncalldata_ForeignToken_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `transferFrom(address,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/23/0xf3a88200de35c6f935562e66844707999b77dd38.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 111,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 3807,
        "code": "ess _to, uint256 _amount) onlyPaylo",
        "debug": "The exception is triggered under the following conditions:\n\ncalldatasize_ForeignToken: 0x4\ncalldata_ForeignToken_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/23/0xf3a88200de35c6f935562e66844707999b77dd38.sol",
        "function": "transfer(address,uint256)",
        "lineno": 90,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 4024,
        "code": "         balances[_to] ",
        "debug": "calldatasize_ForeignToken: 0x800000000000000000000000000000000000000000000000000050\ncalldata_ForeignToken_32 + 4: 0xef9dac035840d3446cf7e308735b46f504077e95d5dcc1feef6ce61e0ba5f9a9\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_ForeignToken_4: 0x23d8a8520f724073445afe4bb9673704f5f700b5059efe000e50c6dfebb67db9\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xef9dac035840d3446cf7e308735b46f504077e95d5dcc1feef6ce61e0ba5f9a9\ncalldata_ForeignToken_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `transfer(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/23/0xf3a88200de35c6f935562e66844707999b77dd38.sol",
        "function": "transfer(address,uint256)",
        "lineno": 96,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 4719,
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/23/0xf3a88200de35c6f935562e66844707999b77dd38.sol",
        "function": "withdrawForeignTokens(address)",
        "lineno": 147,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 4719,
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 4977\n",
        "filename": "/unique_chucks/23/0xf3a88200de35c6f935562e66844707999b77dd38.sol",
        "function": "withdrawForeignTokens(address)",
        "lineno": 147,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 4977,
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/23/0xf3a88200de35c6f935562e66844707999b77dd38.sol",
        "function": "withdrawForeignTokens(address)",
        "lineno": 147,
        "title": "Message call to external contract",
        "type": "Warning"
      }
    ],
    "success": true
  }
}