{
  "contract": "0xd0183c90d1dda5357ce349984a51cc24b7d2b78d",
  "tool": "mythril",
  "start": 1563495468.340911,
  "end": 1563495544.8223994,
  "duration": 76.48148846626282,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 5743,
        "code": "ool)\n  {\n    return _offerTokenAddress == quo",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/6/0xd0183c90d1dda5357ce349984a51cc24b7d2b78d.sol",
        "function": "withdrawToken(address)",
        "lineno": 586,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 9869,
        "code": " if sub",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_TokenSwap_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_TokenSwap_0: 0x7924e0c700000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenSwap: 0x4\n10_EXP_storage_5: 0x0\ncalldata_TokenSwap_4: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/6/0xd0183c90d1dda5357ce349984a51cc24b7d2b78d.sol",
        "function": "getAmount(uint256,bool)",
        "lineno": 81,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}