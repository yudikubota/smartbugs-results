{"error": null, "issues": [{"address": 689, "code": "le fixing bugs.\n//RUS::\u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0434\u043b\u044f \u0443\u043d\u0438\u0447\u0442\u043e\u0436\u0435\u043d\u0438\u044f \u0441\u043c\u0430\u0440\u0442 \u043a\u043e\u043d\u0442\u0440\u0430\u043a\u0442\u0430\n//RUS::\u042d\u0442\u043e \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e, \u0447\u0442\u043e\u0431\u044b \u043f\u0440\u0438 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0438 \u043d\u043e\u0432\u044b\u0445 \u0438\u0433\u0440, \u043c\u043e\u0436\u043d\u043e \u0431\u044b\u043b\u043e \u0440\u0430\u0437\u0434\u0435\u043b\u0438\u0442\u044c \u0411\u0430\u043b\u0430\u043d\u0441 \u0442\u0435\u043a\u0443\u0449\u0435\u0439 \u0438\u0433\u0440\u044b \u0441 \u043d\u043e\u0432\u043e\u0439 \u0438\u0433\u0440\u043e\u0439\n//RUS::\u0418\u043b\u0438 \u0435\u0441\u043b\u0438 \u043f\u0440\u0438 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0438 \u043d\u043e\u0432\u044b\u0445 \u0438\u0433\u0440, \u044d\u0442\u0430 \u043f\u043e\u0442\u0435\u0440\u044f\u0435\u0442 \u0441\u0432\u043e\u044e \u0430\u043a\u0442\u0443\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u044c\n//RUS::\u041b\u0438\u0431\u043e \u043f\u0440\u0438 \u043e\u0431\u043d\u0430\u0440\u0443\u0436\u0435\u043d\u0438\u0438 \u043a\u0440\u0438\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u0431\u0430\u0433\u043e\u0435, \u043f\u0435\u0440\u0435\u0432\u0435\u0441\u0442\u0438 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430 \u0432 \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u0442\u043d\u043e\u0435 \u043c\u0435\u0441\u0442\u043e \u043d\u0430 \u0432\u0440\u0435\u043c\u044f \u0438\u0441\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043e\u0448\u0438\u0431\u043e\u043a\n  function resetGame () public {\n    if (msg.sender == creator) { \n      selfdestruct(0xdC3df52BB1D116471F18B4931895d91eEefdC2B3); \n      return;\n    }\n  }\n\n//ENG::Function to substring provided string from provided start position until end position\n//ENG::It's need to tak last 5 characters from *ticket* adress\n//RUS::\u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0434\u043b\u044f \u043e\u0431\u0440\u0435\u0437\u0430\u043d\u0438\u044f \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0438 \u0441 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0439 \u043f\u043e\u0437\u0438\u0446\u0438\u0438 \u0434\u043e \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0439 \u043a\u043e\u043d\u0435\u0447\u043d\u043e\u0439 \u043f\u043e\u0437\u0438\u0446\u0438\u0438\n//RUS::\u042d\u0442\u043e \u043d\u0430\u0434\u043e, \u0447\u0442\u043e\u0431\u044b ", "debug": "calldata_playFive_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_playFive_0: 0x22400b7800000000000000000000000000000000000000000000000000000000\ncalldatasize_playFive: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `check_result(string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/17/0x5d04fd11b62cdf31f67b16a392cb05e00182c522.sol", "function": "check_result(string,string)", "lineno": 113, "title": "Integer Overflow ", "type": "Warning"}, {"address": 701, "code": "le fixing bugs.\n//RUS::\u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0434\u043b\u044f \u0443\u043d\u0438\u0447\u0442\u043e\u0436\u0435\u043d\u0438\u044f \u0441\u043c\u0430\u0440\u0442 \u043a\u043e\u043d\u0442\u0440\u0430\u043a\u0442\u0430\n//RUS::\u042d\u0442\u043e \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e, \u0447\u0442\u043e\u0431\u044b \u043f\u0440\u0438 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0438 \u043d\u043e\u0432\u044b\u0445 \u0438\u0433\u0440, \u043c\u043e\u0436\u043d\u043e \u0431\u044b\u043b\u043e \u0440\u0430\u0437\u0434\u0435\u043b\u0438\u0442\u044c \u0411\u0430\u043b\u0430\u043d\u0441 \u0442\u0435\u043a\u0443\u0449\u0435\u0439 \u0438\u0433\u0440\u044b \u0441 \u043d\u043e\u0432\u043e\u0439 \u0438\u0433\u0440\u043e\u0439\n//RUS::\u0418\u043b\u0438 \u0435\u0441\u043b\u0438 \u043f\u0440\u0438 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0438 \u043d\u043e\u0432\u044b\u0445 \u0438\u0433\u0440, \u044d\u0442\u0430 \u043f\u043e\u0442\u0435\u0440\u044f\u0435\u0442 \u0441\u0432\u043e\u044e \u0430\u043a\u0442\u0443\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u044c\n//RUS::\u041b\u0438\u0431\u043e \u043f\u0440\u0438 \u043e\u0431\u043d\u0430\u0440\u0443\u0436\u0435\u043d\u0438\u0438 \u043a\u0440\u0438\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u0431\u0430\u0433\u043e\u0435, \u043f\u0435\u0440\u0435\u0432\u0435\u0441\u0442\u0438 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430 \u0432 \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u0442\u043d\u043e\u0435 \u043c\u0435\u0441\u0442\u043e \u043d\u0430 \u0432\u0440\u0435\u043c\u044f \u0438\u0441\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043e\u0448\u0438\u0431\u043e\u043a\n  function resetGame () public {\n    if (msg.sender == creator) { \n      selfdestruct(0xdC3df52BB1D116471F18B4931895d91eEefdC2B3); \n      return;\n    }\n  }\n\n//ENG::Function to substring provided string from provided start position until end position\n//ENG::It's need to tak last 5 characters from *ticket* adress\n//RUS::\u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0434\u043b\u044f \u043e\u0431\u0440\u0435\u0437\u0430\u043d\u0438\u044f \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0438 \u0441 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0439 \u043f\u043e\u0437\u0438\u0446\u0438\u0438 \u0434\u043e \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0439 \u043a\u043e\u043d\u0435\u0447\u043d\u043e\u0439 \u043f\u043e\u0437\u0438\u0446\u0438\u0438\n//RUS::\u042d\u0442\u043e \u043d\u0430\u0434\u043e, \u0447\u0442\u043e\u0431\u044b ", "debug": "calldata_playFive_4 + calldata_playFive_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8\ncalldata_playFive_0: 0x22400b7800000000000000000000000000000000000000000000000000000000\ncalldatasize_playFive: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `check_result(string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/17/0x5d04fd11b62cdf31f67b16a392cb05e00182c522.sol", "function": "check_result(string,string)", "lineno": 113, "title": "Integer Overflow ", "type": "Warning"}, {"address": 710, "code": "le fixing bugs.\n//RUS::\u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0434\u043b\u044f \u0443\u043d\u0438\u0447\u0442\u043e\u0436\u0435\u043d\u0438\u044f \u0441\u043c\u0430\u0440\u0442 \u043a\u043e\u043d\u0442\u0440\u0430\u043a\u0442\u0430\n//RUS::\u042d\u0442\u043e \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e, \u0447\u0442\u043e\u0431\u044b \u043f\u0440\u0438 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0438 \u043d\u043e\u0432\u044b\u0445 \u0438\u0433\u0440, \u043c\u043e\u0436\u043d\u043e \u0431\u044b\u043b\u043e \u0440\u0430\u0437\u0434\u0435\u043b\u0438\u0442\u044c \u0411\u0430\u043b\u0430\u043d\u0441 \u0442\u0435\u043a\u0443\u0449\u0435\u0439 \u0438\u0433\u0440\u044b \u0441 \u043d\u043e\u0432\u043e\u0439 \u0438\u0433\u0440\u043e\u0439\n//RUS::\u0418\u043b\u0438 \u0435\u0441\u043b\u0438 \u043f\u0440\u0438 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0438 \u043d\u043e\u0432\u044b\u0445 \u0438\u0433\u0440, \u044d\u0442\u0430 \u043f\u043e\u0442\u0435\u0440\u044f\u0435\u0442 \u0441\u0432\u043e\u044e \u0430\u043a\u0442\u0443\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u044c\n//RUS::\u041b\u0438\u0431\u043e \u043f\u0440\u0438 \u043e\u0431\u043d\u0430\u0440\u0443\u0436\u0435\u043d\u0438\u0438 \u043a\u0440\u0438\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u0431\u0430\u0433\u043e\u0435, \u043f\u0435\u0440\u0435\u0432\u0435\u0441\u0442\u0438 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430 \u0432 \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u0442\u043d\u043e\u0435 \u043c\u0435\u0441\u0442\u043e \u043d\u0430 \u0432\u0440\u0435\u043c\u044f \u0438\u0441\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043e\u0448\u0438\u0431\u043e\u043a\n  function resetGame () public {\n    if (msg.sender == creator) { \n      selfdestruct(0xdC3df52BB1D116471F18B4931895d91eEefdC2B3); \n      return;\n    }\n  }\n\n//ENG::Function to substring provided string from provided start position until end position\n//ENG::It's need to tak last 5 characters from *ticket* adress\n//RUS::\u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0434\u043b\u044f \u043e\u0431\u0440\u0435\u0437\u0430\u043d\u0438\u044f \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0438 \u0441 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0439 \u043f\u043e\u0437\u0438\u0446\u0438\u0438 \u0434\u043e \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0439 \u043a\u043e\u043d\u0435\u0447\u043d\u043e\u0439 \u043f\u043e\u0437\u0438\u0446\u0438\u0438\n//RUS::\u042d\u0442\u043e \u043d\u0430\u0434\u043e, \u0447\u0442\u043e\u0431\u044b ", "debug": "calldata_playFive_4 + calldata_playFive_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc1\ncalldata_playFive_0: 0x22400b7800000000000000000000000000000000000000000000000000000000\ncalldatasize_playFive: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `check_result(string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/17/0x5d04fd11b62cdf31f67b16a392cb05e00182c522.sol", "function": "check_result(string,string)", "lineno": 113, "title": "Integer Overflow ", "type": "Warning"}, {"address": 716, "code": "le fixing bugs.\n//RUS::\u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0434\u043b\u044f \u0443\u043d\u0438\u0447\u0442\u043e\u0436\u0435\u043d\u0438\u044f \u0441\u043c\u0430\u0440\u0442 \u043a\u043e\u043d\u0442\u0440\u0430\u043a\u0442\u0430\n//RUS::\u042d\u0442\u043e \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e, \u0447\u0442\u043e\u0431\u044b \u043f\u0440\u0438 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0438 \u043d\u043e\u0432\u044b\u0445 \u0438\u0433\u0440, \u043c\u043e\u0436\u043d\u043e \u0431\u044b\u043b\u043e \u0440\u0430\u0437\u0434\u0435\u043b\u0438\u0442\u044c \u0411\u0430\u043b\u0430\u043d\u0441 \u0442\u0435\u043a\u0443\u0449\u0435\u0439 \u0438\u0433\u0440\u044b \u0441 \u043d\u043e\u0432\u043e\u0439 \u0438\u0433\u0440\u043e\u0439\n//RUS::\u0418\u043b\u0438 \u0435\u0441\u043b\u0438 \u043f\u0440\u0438 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0438 \u043d\u043e\u0432\u044b\u0445 \u0438\u0433\u0440, \u044d\u0442\u0430 \u043f\u043e\u0442\u0435\u0440\u044f\u0435\u0442 \u0441\u0432\u043e\u044e \u0430\u043a\u0442\u0443\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u044c\n//RUS::\u041b\u0438\u0431\u043e \u043f\u0440\u0438 \u043e\u0431\u043d\u0430\u0440\u0443\u0436\u0435\u043d\u0438\u0438 \u043a\u0440\u0438\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u0431\u0430\u0433\u043e\u0435, \u043f\u0435\u0440\u0435\u0432\u0435\u0441\u0442\u0438 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430 \u0432 \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u0442\u043d\u043e\u0435 \u043c\u0435\u0441\u0442\u043e \u043d\u0430 \u0432\u0440\u0435\u043c\u044f \u0438\u0441\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043e\u0448\u0438\u0431\u043e\u043a\n  function resetGame () public {\n    if (msg.sender == creator) { \n      selfdestruct(0xdC3df52BB1D116471F18B4931895d91eEefdC2B3); \n      return;\n    }\n  }\n\n//ENG::Function to substring provided string from provided start position until end position\n//ENG::It's need to tak last 5 characters from *ticket* adress\n//RUS::\u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0434\u043b\u044f \u043e\u0431\u0440\u0435\u0437\u0430\u043d\u0438\u044f \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0438 \u0441 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0439 \u043f\u043e\u0437\u0438\u0446\u0438\u0438 \u0434\u043e \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0439 \u043a\u043e\u043d\u0435\u0447\u043d\u043e\u0439 \u043f\u043e\u0437\u0438\u0446\u0438\u0438\n//RUS::\u042d\u0442\u043e \u043d\u0430\u0434\u043e, \u0447\u0442\u043e\u0431\u044b ", "debug": "calldata_playFive_4 + calldata_playFive_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff41\ncalldata_playFive_0: 0x22400b7800000000000000000000000000000000000000000000000000000000\ncalldatasize_playFive: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `check_result(string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/17/0x5d04fd11b62cdf31f67b16a392cb05e00182c522.sol", "function": "check_result(string,string)", "lineno": 113, "title": "Integer Overflow ", "type": "Warning"}, {"address": 759, "code": "le fixing bugs.\n//RUS::\u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0434\u043b\u044f \u0443\u043d\u0438\u0447\u0442\u043e\u0436\u0435\u043d\u0438\u044f \u0441\u043c\u0430\u0440\u0442 \u043a\u043e\u043d\u0442\u0440\u0430\u043a\u0442\u0430\n//RUS::\u042d\u0442\u043e \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e, \u0447\u0442\u043e\u0431\u044b \u043f\u0440\u0438 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0438 \u043d\u043e\u0432\u044b\u0445 \u0438\u0433\u0440, \u043c\u043e\u0436\u043d\u043e \u0431\u044b\u043b\u043e \u0440\u0430\u0437\u0434\u0435\u043b\u0438\u0442\u044c \u0411\u0430\u043b\u0430\u043d\u0441 \u0442\u0435\u043a\u0443\u0449\u0435\u0439 \u0438\u0433\u0440\u044b \u0441 \u043d\u043e\u0432\u043e\u0439 \u0438\u0433\u0440\u043e\u0439\n//RUS::\u0418\u043b\u0438 \u0435\u0441\u043b\u0438 \u043f\u0440\u0438 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0438 \u043d\u043e\u0432\u044b\u0445 \u0438\u0433\u0440, \u044d\u0442\u0430 \u043f\u043e\u0442\u0435\u0440\u044f\u0435\u0442 \u0441\u0432\u043e\u044e \u0430\u043a\u0442\u0443\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u044c\n//RUS::\u041b\u0438\u0431\u043e \u043f\u0440\u0438 \u043e\u0431\u043d\u0430\u0440\u0443\u0436\u0435\u043d\u0438\u0438 \u043a\u0440\u0438\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u0431\u0430\u0433\u043e\u0435, \u043f\u0435\u0440\u0435\u0432\u0435\u0441\u0442\u0438 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430 \u0432 \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u0442\u043d\u043e\u0435 \u043c\u0435\u0441\u0442\u043e \u043d\u0430 \u0432\u0440\u0435\u043c\u044f \u0438\u0441\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043e\u0448\u0438\u0431\u043e\u043a\n  function resetGame () public {\n    if (msg.sender == creator) { \n      selfdestruct(0xdC3df52BB1D116471F18B4931895d91eEefdC2B3); \n      return;\n    }\n  }\n\n//ENG::Function to substring provided string from provided start position until end position\n//ENG::It's need to tak last 5 characters from *ticket* adress\n//RUS::\u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0434\u043b\u044f \u043e\u0431\u0440\u0435\u0437\u0430\u043d\u0438\u044f \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0438 \u0441 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0439 \u043f\u043e\u0437\u0438\u0446\u0438\u0438 \u0434\u043e \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0439 \u043a\u043e\u043d\u0435\u0447\u043d\u043e\u0439 \u043f\u043e\u0437\u0438\u0446\u0438\u0438\n//RUS::\u042d\u0442\u043e \u043d\u0430\u0434\u043e, \u0447\u0442\u043e\u0431\u044b ", "debug": "calldata_playFive_32 + 4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_playFive_0: 0x22400b7800000000000000000000000000000000000000000000000000000000\ncalldatasize_playFive: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `check_result(string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/17/0x5d04fd11b62cdf31f67b16a392cb05e00182c522.sol", "function": "check_result(string,string)", "lineno": 113, "title": "Integer Overflow ", "type": "Warning"}, {"address": 771, "code": "le fixing bugs.\n//RUS::\u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0434\u043b\u044f \u0443\u043d\u0438\u0447\u0442\u043e\u0436\u0435\u043d\u0438\u044f \u0441\u043c\u0430\u0440\u0442 \u043a\u043e\u043d\u0442\u0440\u0430\u043a\u0442\u0430\n//RUS::\u042d\u0442\u043e \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e, \u0447\u0442\u043e\u0431\u044b \u043f\u0440\u0438 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0438 \u043d\u043e\u0432\u044b\u0445 \u0438\u0433\u0440, \u043c\u043e\u0436\u043d\u043e \u0431\u044b\u043b\u043e \u0440\u0430\u0437\u0434\u0435\u043b\u0438\u0442\u044c \u0411\u0430\u043b\u0430\u043d\u0441 \u0442\u0435\u043a\u0443\u0449\u0435\u0439 \u0438\u0433\u0440\u044b \u0441 \u043d\u043e\u0432\u043e\u0439 \u0438\u0433\u0440\u043e\u0439\n//RUS::\u0418\u043b\u0438 \u0435\u0441\u043b\u0438 \u043f\u0440\u0438 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0438 \u043d\u043e\u0432\u044b\u0445 \u0438\u0433\u0440, \u044d\u0442\u0430 \u043f\u043e\u0442\u0435\u0440\u044f\u0435\u0442 \u0441\u0432\u043e\u044e \u0430\u043a\u0442\u0443\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u044c\n//RUS::\u041b\u0438\u0431\u043e \u043f\u0440\u0438 \u043e\u0431\u043d\u0430\u0440\u0443\u0436\u0435\u043d\u0438\u0438 \u043a\u0440\u0438\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u0431\u0430\u0433\u043e\u0435, \u043f\u0435\u0440\u0435\u0432\u0435\u0441\u0442\u0438 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430 \u0432 \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u0442\u043d\u043e\u0435 \u043c\u0435\u0441\u0442\u043e \u043d\u0430 \u0432\u0440\u0435\u043c\u044f \u0438\u0441\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043e\u0448\u0438\u0431\u043e\u043a\n  function resetGame () public {\n    if (msg.sender == creator) { \n      selfdestruct(0xdC3df52BB1D116471F18B4931895d91eEefdC2B3); \n      return;\n    }\n  }\n\n//ENG::Function to substring provided string from provided start position until end position\n//ENG::It's need to tak last 5 characters from *ticket* adress\n//RUS::\u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0434\u043b\u044f \u043e\u0431\u0440\u0435\u0437\u0430\u043d\u0438\u044f \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0438 \u0441 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0439 \u043f\u043e\u0437\u0438\u0446\u0438\u0438 \u0434\u043e \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0439 \u043a\u043e\u043d\u0435\u0447\u043d\u043e\u0439 \u043f\u043e\u0437\u0438\u0446\u0438\u0438\n//RUS::\u042d\u0442\u043e \u043d\u0430\u0434\u043e, \u0447\u0442\u043e\u0431\u044b ", "debug": "calldata_playFive_4 + calldata_playFive_32 + 4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8\ncalldata_playFive_0: 0x22400b7800000000000000000000000000000000000000000000000000000000\ncalldatasize_playFive: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `check_result(string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/17/0x5d04fd11b62cdf31f67b16a392cb05e00182c522.sol", "function": "check_result(string,string)", "lineno": 113, "title": "Integer Overflow ", "type": "Warning"}, {"address": 780, "code": "le fixing bugs.\n//RUS::\u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0434\u043b\u044f \u0443\u043d\u0438\u0447\u0442\u043e\u0436\u0435\u043d\u0438\u044f \u0441\u043c\u0430\u0440\u0442 \u043a\u043e\u043d\u0442\u0440\u0430\u043a\u0442\u0430\n//RUS::\u042d\u0442\u043e \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e, \u0447\u0442\u043e\u0431\u044b \u043f\u0440\u0438 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0438 \u043d\u043e\u0432\u044b\u0445 \u0438\u0433\u0440, \u043c\u043e\u0436\u043d\u043e \u0431\u044b\u043b\u043e \u0440\u0430\u0437\u0434\u0435\u043b\u0438\u0442\u044c \u0411\u0430\u043b\u0430\u043d\u0441 \u0442\u0435\u043a\u0443\u0449\u0435\u0439 \u0438\u0433\u0440\u044b \u0441 \u043d\u043e\u0432\u043e\u0439 \u0438\u0433\u0440\u043e\u0439\n//RUS::\u0418\u043b\u0438 \u0435\u0441\u043b\u0438 \u043f\u0440\u0438 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0438 \u043d\u043e\u0432\u044b\u0445 \u0438\u0433\u0440, \u044d\u0442\u0430 \u043f\u043e\u0442\u0435\u0440\u044f\u0435\u0442 \u0441\u0432\u043e\u044e \u0430\u043a\u0442\u0443\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u044c\n//RUS::\u041b\u0438\u0431\u043e \u043f\u0440\u0438 \u043e\u0431\u043d\u0430\u0440\u0443\u0436\u0435\u043d\u0438\u0438 \u043a\u0440\u0438\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u0431\u0430\u0433\u043e\u0435, \u043f\u0435\u0440\u0435\u0432\u0435\u0441\u0442\u0438 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430 \u0432 \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u0442\u043d\u043e\u0435 \u043c\u0435\u0441\u0442\u043e \u043d\u0430 \u0432\u0440\u0435\u043c\u044f \u0438\u0441\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043e\u0448\u0438\u0431\u043e\u043a\n  function resetGame () public {\n    if (msg.sender == creator) { \n      selfdestruct(0xdC3df52BB1D116471F18B4931895d91eEefdC2B3); \n      return;\n    }\n  }\n\n//ENG::Function to substring provided string from provided start position until end position\n//ENG::It's need to tak last 5 characters from *ticket* adress\n//RUS::\u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0434\u043b\u044f \u043e\u0431\u0440\u0435\u0437\u0430\u043d\u0438\u044f \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0438 \u0441 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0439 \u043f\u043e\u0437\u0438\u0446\u0438\u0438 \u0434\u043e \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0439 \u043a\u043e\u043d\u0435\u0447\u043d\u043e\u0439 \u043f\u043e\u0437\u0438\u0446\u0438\u0438\n//RUS::\u042d\u0442\u043e \u043d\u0430\u0434\u043e, \u0447\u0442\u043e\u0431\u044b ", "debug": "calldata_playFive_4 + calldata_playFive_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc1\ncalldata_playFive_0: 0x22400b7800000000000000000000000000000000000000000000000000000000\ncalldatasize_playFive: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `check_result(string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/17/0x5d04fd11b62cdf31f67b16a392cb05e00182c522.sol", "function": "check_result(string,string)", "lineno": 113, "title": "Integer Overflow ", "type": "Warning"}, {"address": 786, "code": "le fixing bugs.\n//RUS::\u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0434\u043b\u044f \u0443\u043d\u0438\u0447\u0442\u043e\u0436\u0435\u043d\u0438\u044f \u0441\u043c\u0430\u0440\u0442 \u043a\u043e\u043d\u0442\u0440\u0430\u043a\u0442\u0430\n//RUS::\u042d\u0442\u043e \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e, \u0447\u0442\u043e\u0431\u044b \u043f\u0440\u0438 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0438 \u043d\u043e\u0432\u044b\u0445 \u0438\u0433\u0440, \u043c\u043e\u0436\u043d\u043e \u0431\u044b\u043b\u043e \u0440\u0430\u0437\u0434\u0435\u043b\u0438\u0442\u044c \u0411\u0430\u043b\u0430\u043d\u0441 \u0442\u0435\u043a\u0443\u0449\u0435\u0439 \u0438\u0433\u0440\u044b \u0441 \u043d\u043e\u0432\u043e\u0439 \u0438\u0433\u0440\u043e\u0439\n//RUS::\u0418\u043b\u0438 \u0435\u0441\u043b\u0438 \u043f\u0440\u0438 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0438 \u043d\u043e\u0432\u044b\u0445 \u0438\u0433\u0440, \u044d\u0442\u0430 \u043f\u043e\u0442\u0435\u0440\u044f\u0435\u0442 \u0441\u0432\u043e\u044e \u0430\u043a\u0442\u0443\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u044c\n//RUS::\u041b\u0438\u0431\u043e \u043f\u0440\u0438 \u043e\u0431\u043d\u0430\u0440\u0443\u0436\u0435\u043d\u0438\u0438 \u043a\u0440\u0438\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u0431\u0430\u0433\u043e\u0435, \u043f\u0435\u0440\u0435\u0432\u0435\u0441\u0442\u0438 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430 \u0432 \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u0442\u043d\u043e\u0435 \u043c\u0435\u0441\u0442\u043e \u043d\u0430 \u0432\u0440\u0435\u043c\u044f \u0438\u0441\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043e\u0448\u0438\u0431\u043e\u043a\n  function resetGame () public {\n    if (msg.sender == creator) { \n      selfdestruct(0xdC3df52BB1D116471F18B4931895d91eEefdC2B3); \n      return;\n    }\n  }\n\n//ENG::Function to substring provided string from provided start position until end position\n//ENG::It's need to tak last 5 characters from *ticket* adress\n//RUS::\u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0434\u043b\u044f \u043e\u0431\u0440\u0435\u0437\u0430\u043d\u0438\u044f \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0438 \u0441 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0439 \u043f\u043e\u0437\u0438\u0446\u0438\u0438 \u0434\u043e \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0439 \u043a\u043e\u043d\u0435\u0447\u043d\u043e\u0439 \u043f\u043e\u0437\u0438\u0446\u0438\u0438\n//RUS::\u042d\u0442\u043e \u043d\u0430\u0434\u043e, \u0447\u0442\u043e\u0431\u044b ", "debug": "calldata_playFive_4 + calldata_playFive_32 + 4: 0x746e42ddbe03c97fe6e530ac0258466c4a20dfffffffffffffffffffffffffc1\ncalldata_playFive_4 + calldata_playFive_4: 0xcf9f8ea5a709fb58f8ed502cd9b08a9b1306dfffffffffffffffffffffffff61\ncalldata_playFive_0: 0x22400b7800000000000000000000000000000000000000000000000000000000\ncalldatasize_playFive: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `check_result(string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/17/0x5d04fd11b62cdf31f67b16a392cb05e00182c522.sol", "function": "check_result(string,string)", "lineno": 113, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1536, "debug": "calldata_playFive_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_playFive_0: 0x7526747d00000000000000000000000000000000000000000000000000000000\ncalldatasize_playFive: 0x4\n", "description": "A possible integer overflow exists in the function `PlayFiveChain(string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/17/0x5d04fd11b62cdf31f67b16a392cb05e00182c522.sol", "function": "PlayFiveChain(string,string)", "lineno": 379, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2136, "code": "\u0448 \u0438\u0433\u0440\u043e\u043a\u0430 315% \u043e\u0442 (\u0421\u0422\u0410\u0412\u041a\u0410 - 13.3%) (c6)\n//RUS::\u0415\u0441\u043b\u0438 \u0437", "debug": "The exception is triggered under the following conditions:\n\nstorage_7: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_38357942052654430511805280289652572966474101887281969759642760585367641502973: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0x0\ncaller: 0x0\norigin: 0x0\ncalldata_playFive_0: 0x7526747d00000000000000000000000000000000000000000000000000000000\ncalldatasize_playFive: 0x4\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/17/0x5d04fd11b62cdf31f67b16a392cb05e00182c522.sol", "function": "PlayFiveChain(string,string)", "lineno": 285, "title": "Exception state", "type": "Informational"}, {"address": 2224, "code": "ure returns(string)", "debug": "calldata_playFive_32 + 36: 0x0\ncalldata_playFive_32 + 4: 0x1\ncalldata_playFive_0: 0x1dcd9b5500000000000000000000000000000000000000000000000000000000\ncalldatasize_playFive: 0x4\ncallvalue: 0x0\n", "description": "A possible integer underflow exists in the function `substring(string,uint256,uint256)`.\nThe subtraction may result in a value < 0.", "filename": "/unique_chucks/17/0x5d04fd11b62cdf31f67b16a392cb05e00182c522.sol", "function": "substring(string,uint256,uint256)", "lineno": 170, "title": "Integer Underflow", "type": "Warning"}, {"address": 2302, "code": "9abcdef\";\n\n", "debug": "The exception is triggered under the following conditions:\n\ncalldata_playFive_32 + 36: 0x87fe3f3ffffd7f8000000011e00004040000104ca5ff80c40020008040000008\ncalldata_playFive_32 + 4: 0x77ffff3ffffd7fe000000009ef6941e1b8000fdff5ffe84608a6367cfb200000\ncalldata_playFive_4 + calldata_playFive_4: 0x77ffff3ffffd7fe000000009ef6941e1b8000fdff5ffe84608a6367cfb200000\ncalldata_playFive_0: 0x1dcd9b5500000000000000000000000000000000000000000000000000000000\ncalldatasize_playFive: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/17/0x5d04fd11b62cdf31f67b16a392cb05e00182c522.sol", "function": "substring(string,uint256,uint256)", "lineno": 172, "title": "Exception state", "type": "Informational"}, {"address": 2393, "code": "y alphabet = \"012345", "debug": "The exception is triggered under the following conditions:\n\ncalldata_playFive_32 + 36: 0x10ff000000004c02802001204011002000000040005000900810010100008444\ncalldata_playFive_32 + 4: 0x1fffd0000003f81dc0800618f66bc096c6c0037143e6012e84288ce6b983960\ncalldata_playFive_4 + calldata_playFive_4: 0x1fffd0000003f81dc0800618f66bc096c6c0037143e6012e84288ce6b983961\ncalldata_playFive_0: 0x1dcd9b5500000000000000000000000000000000000000000000000000000000\ncalldatasize_playFive: 0x4\nmem_128 +\n32 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_playFive_4 + calldata_playFive_4)): 0x0\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/17/0x5d04fd11b62cdf31f67b16a392cb05e00182c522.sol", "function": "substring(string,uint256,uint256)", "lineno": 172, "title": "Exception state", "type": "Informational"}, {"address": 2504, "code": "\u043e\u0434\u0438\u043c\u043e, \u0447\u0442\u043e\u0431\u044b \u043f\u0440\u0438 \u0441\u043e\u0437", "debug": "calldata_playFive_4 + calldata_playFive_32 + 4: 0x7d1c220000131c81001c28498000000a310ffffffffffffffffffffffffffe1\ncalldata_playFive_4 + calldata_playFive_4: 0xf82e3ddffffece37effe3d7b67ffffff5ceeffffffffffffffffffffffffff01\ncalldata_playFive_0: 0x22400b7800000000000000000000000000000000000000000000000000000000\ncalldatasize_playFive: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `check_result(string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/17/0x5d04fd11b62cdf31f67b16a392cb05e00182c522.sol", "function": "check_result(string,string)", "lineno": 115, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2571, "code": "{\n    if (msg.", "debug": "The exception is triggered under the following conditions:\n\nstorage_2: 0x40\nmem_160 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_playFive_4 + calldata_playFive_4)) +\n32 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_playFive_4 + calldata_playFive_32 + 4)): 0x0\ncalldata_playFive_0: 0x22400b7800000000000000000000000000000000000000000000000000000000\ncalldatasize_playFive: 0x4\ncalldata_playFive_4 + calldata_playFive_4: 0x0\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/17/0x5d04fd11b62cdf31f67b16a392cb05e00182c522.sol", "function": "check_result(string,string)", "lineno": 118, "title": "Exception state", "type": "Informational"}, {"address": 2759, "code": " selfdestruct", "debug": "The exception is triggered under the following conditions:\n\nstorage_2: 0x40\ncalldata_playFive_4 + calldata_playFive_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nmem_160 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_playFive_4 + calldata_playFive_4)) +\n32 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_playFive_4 + calldata_playFive_32 + 4)): 0x0\ncalldata_playFive_0: 0x22400b7800000000000000000000000000000000000000000000000000000000\ncalldatasize_playFive: 0x4\nmem_128 +\n32 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_playFive_4 + calldata_playFive_4)): 0x0\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/17/0x5d04fd11b62cdf31f67b16a392cb05e00182c522.sol", "function": "check_result(string,string)", "lineno": 120, "title": "Exception state", "type": "Informational"}, {"address": 3741, "code": "\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 winpoint 0 \u0438\u043b\u0438 1", "debug": "The exception is triggered under the following conditions:\n\ncalldata_playFive_4: 0x0\nstorage_7: 0x0\ncalldata_playFive_0: 0x404cbffb00000000000000000000000000000000000000000000000000000000\ncalldatasize_playFive: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/17/0x5d04fd11b62cdf31f67b16a392cb05e00182c522.sol", "function": "_function_0x404cbffb", "lineno": 283, "title": "Exception state", "type": "Informational"}, {"address": 5160, "debug": "", "description": "Function PlayFiveChain(string,string) retrieves the transaction origin (tx.origin) using the ORIGIN opcode. Use msg.sender instead.\nSee also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin", "filename": "/unique_chucks/17/0x5d04fd11b62cdf31f67b16a392cb05e00182c522.sol", "function": "PlayFiveChain(string,string)", "lineno": 379, "title": "Use of tx.origin", "type": "Warning"}, {"address": 11165, "code": "\u043c \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435\n  address private creator;\n  string private message;\n  string private message_details;\n  string private referal;\n  uint private totalBalance; \n  uint public totalwin;\n  \n  //ENG::\u0421onstructor\n  //\u041a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0442\u043e\u0440\n  /*\n  constructor() public {\n\n    creator = tx.origin;   \n    message = 'initiated';\n  }\n  */\n\n\n  \n\n\n  //ENG::Function that show Creator adress\n  //RUS::\u0424\u0443\u043d\u043a\u0446\u0438\u044f \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043e\u0442\u043e\u0431\u0440\u0430\u0437\u0438\u0442 \u0430\u0434\u0440\u0435\u0441\u0441 \u0441\u043e\u0437\u0434\u0430\u0442\u0435\u043b\u044f \u043a\u043e\u043d\u0442\u0440\u0430\u043a\u0442\u0430\n  function getCreator() public constant returns(address) {\n    return creator;\n  }\n\n  //ENG::Function that show SmarrtContract Balance\n  //\u0424\u0443\u043d\u043a\u0446\u0438\u044f \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043e\u0442\u043e\u0431\u0440\u0430\u0437\u0438\u0442 \u0411\u0430\u043b\u0430\u043d\u0441 \u0421\u043c\u0430\u0440\u0442\u041a\u043e\u043d\u0442\u0440\u0430\u043a\u0442\u0430\n  function getTotalBalance() public constant returns(uint) {\n    return address(this).balance;\n  }  \n  \n\n//ENG::One of the best way to compare two strings converted to bytes\n//ENG::Function will check length and if bytes length is same then calculate hash of strings and compare it, (a1)\n//ENG::if strings the same, return true, otherwise return false (a2)\n//RUS::\u041e\u0434\u0438\u043d \u0438\u0437 \u043b\u0443\u0447\u0448\u0438\u0445 \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u043e\u0432 \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044f \u0441\u0442\u0440\u0438\u043d\u0433 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445 \u0441\u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0435 \u0430 \u0431\u0430\u0439\u0442\u044b\n//RUS::\u0421\u043d\u0430\u0447\u0430\u043b\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0441\u0440\u0430\u0432\u043d\u0438\u0432\u0430\u0435\u0442 \u0434\u043b\u0438\u043d\u043d\u0443 \u0431\u0430\u0439\u0442\u043a\u043e\u0434\u0430 \u0438 \u043f\u043e\u0441\u043b\u043a \u0438\u0445 \u0445\u044d\u0448 (a1)\n//RUS::\u0415\u0441\u043b\u0438 \u0445\u044d\u0448 \u043e\u0434\u0438\u043d\u0430\u043a\u043e\u0432\u044b\u0439, \u0442\u043e \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 true, \u0438\u043d\u0430\u0447\u0435 - false (a2)\n\nfunction hashCompareWithLengthCheck(string a, string b) internal pure returns (bool) {\n    if(bytes(a).length != bytes(b).length) { //(a1)\n        return false;\n    } else {\n        return keccak256(abi.encodePacked(a)) == keccak256(abi.encodePacked(b)); //(a2)\n    }\n}\n\n//ENG::Function that calculate Wining points\n//ENG::After we get our *play ticket* adress, we take last 5 chars of it and game is on\n//ENG::sendTXTpsTX - main game function, send to this function *play ticket* code and player entered symbols \n//ENG::function starting setted initiated results to nothing (b1)\n//ENG::Then converting strings to bytes, so we can run throung each symbol (b2)\n//ENG::Also we set initial winpoint to 0 (b3)\n//ENG::Then we run throught each symbol in *play ticket* and compare it with player entered symbols\n//ENG::player entered symbols maximum length also is five\n//ENG::if function found a match using *hashCompareWithLengthCheck* function, then\n//ENG::function add to event message details, that shows whats symbols are found whith player entered symbols (b4)\n//ENG::replace used symbols in *player ticket* and entered symbols on X and Y so they no more used in game process (b5)\n//ENG::and increase winpoit by 1 (b6)\n//ENG::after function complete, it return winpoint from 0 - 5 (b7)\n//RUS::\u0424\u0443\u043d\u043a\u0446\u0438\u044f \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0432\u044b\u0441\u0447\u0438\u0442\u044b\u0432\u0430\u0435\u0442 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043e\u0447\u043a\u043e\u0432\n//RUS::\u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0430\u0434\u0440\u0435\u0441\u0430 *\u0431\u0438\u043b\u0435\u0442\u0430*, \u043c\u044b \u0431\u0435\u0440\u0435\u043c \u0435\u0433\u043e \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0438 5 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432 \u0438 \u0438\u0433\u0440\u0430 \u043d\u0430\u0447\u0430\u043b\u0430\u0441\u044c\n//RUS::sendTXTpsTX - \u0433\u043b\u0430\u0432\u043d\u0430\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0438\u0433\u0440\u044b, \u0448\u043b\u0451\u0442 \u044d\u0442\u043e\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u0441\u0438\u043c\u0432\u043e\u043b\u044b \u0431\u0438\u043b\u0435\u0442\u0430 \u0438 \u0441\u0438\u043c\u0432\u043e\u043b\u044b \u0432\u0432\u0435\u0434\u0435\u043d\u044b\u0435 \u0438\u0433\u0440\u043e\u043a\u043e\u043c\n//RUS::\u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0441\u043d\u0430\u0447\u0430\u043b\u043e \u043e\u0431\u043d\u0443\u043b\u044f\u0435\u0442 \u0434\u0435\u0442\u0430\u043b\u0438 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 (b1)\n//RUS::\u041f\u043e\u0441\u043b\u0435 \u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0438\u0440\u0443\u0435\u0442 *\u0431\u0438\u043b\u0435\u0442* \u0438 \u0441\u0438\u043c\u0432\u043e\u043b\u044b \u0438\u0433\u0440\u043e\u043a\u0430 \u0432 \u0431\u0430\u0439\u0442\u044b, \u0447\u0442\u043e\u0431\u044b \u043c\u043e\u0436\u043d\u043e \u0431\u044b\u043b\u043e \u043f\u0440\u043e\u0439\u0442\u0438 \u043f\u043e \u0441\u0438\u043c\u0432\u043e\u043b\u0430\u043c (b2)\n//RUS::\u0422\u0430\u043a\u0436\u0435 \u0441\u0442\u0430\u0432\u0438\u043c \u043d\u0430\u0447\u0430\u043b\u044c\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043e\u0447\u043a\u043e\u0432 \u043d\u0430 0 (b3)\n//RUS::\u0414\u0430\u043b\u0435\u0435 \u043c\u044b \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c \u0441\u043e\u0432\u043f\u0430\u0434\u0430\u044e\u0442 \u043b\u0438 \u0441\u0438\u043c\u0432\u043e\u043b\u044b *\u0431\u0438\u043b\u0435\u0442\u0430* \u0441 \u0441\u0438\u043c\u0432\u043e\u043b\u0430\u043c\u0438 \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0432\u0432\u0435\u043b \u0438\u0433\u0440\u043e\u043a\n//RUS::\u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u043b\u0438\u043d\u043d\u0430 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432 \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0432\u0432\u043e\u0434\u0438\u0442 \u0438\u0433\u0440\u043e\u043a, \u0442\u043e\u0436\u0435 5.\n//RUS::\u0415\u0441\u043b\u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043d\u0430\u0445\u043e\u0434\u0438\u0442 \u0441\u043e\u0432\u043f\u0430\u0434\u0435\u043d\u0438\u0435 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0444\u0443\u043d\u043a\u0446\u0438\u0438 *hashCompareWithLengthCheck*, \u0442\u043e\n//RUS::\u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u043a \u044d\u0432\u044d\u043d\u0442\u0443 \u0434\u0435\u0442\u0430\u043b\u044c\u043d\u043e\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u043e \u0442\u043e\u043c, \u043a\u0430\u043a\u0438\u0435 \u0441\u0438\u043c\u0432\u043e\u043b\u044b \u0431\u044b\u043b\u0438 \u043d\u0430\u0439\u0434\u0435\u043d\u044b (b4)\n//RUS::\u0417\u0430\u043c\u0435\u043d\u044f\u0435\u0442 \u043d\u0430\u0439\u0434\u0435\u043d\u043d\u044b\u0435 \u0441\u0438\u043c\u0432\u043e\u043b\u044b \u0432 *\u0431\u0438\u043b\u0435\u0442\u0435* \u0438 *\u043a\u043b\u044e\u0447\u0435* \u043d\u0430 X \u0438 Y \u0438 \u043e\u043d\u0438 \u0431\u043e\u043b\u0435\u0435 \u043d\u0435 \u0443\u0447\u0430\u0441\u0442\u0432\u0443\u044e\u0442 \u0432 \u0438\u0433\u0440\u0435 (b5)\n//RUS::\u0423\u0432\u0435\u043b\u0438\u0447\u0438\u0432\u0430\u0435\u0442 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0431\u0430\u043b\u043b\u043e\u0432 winpoint \u043d\u0430 1 (b6)\n//RUS::\u041f\u043e \u0437\u0432\u044b\u0435\u0440\u0448\u0435\u043d\u0438\u044e, \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 winpoint \u043e\u0442 0 \u0434\u043e 5 (b7)\nfunction check_result(string ticket, string check) public  returns (uint) {\n  message_details = \"\"; //(b1)\n    bytes memory ticketBytes = bytes(ticket); //(b2)\n    bytes memory checkBytes = bytes(check);   //(b2) \n    uint winpoint = 0; //(b3)\n\n\n    for (uint i=0; i < 5; i++){\n\n      for (uint j=0; j < 5; j++){\n\n        if(hashCompareWithLengthCheck(string(abi.encodePacked(ticketBytes[j])),string(abi.encodePacked(checkBytes[i]))))\n        {\n          message_details = string(abi.encodePacked(message_details,'*',ticketBytes[j],'**',checkBytes[i])); //(b4)\n          ticketBytes[j] =\"X\"; //(b5)\n          checkBytes[i] = \"Y\"; //(b5)\n\n          winpoint = winpoint+1; //(b6)         \n        }\n       \n      }\n\n    }    \n    return uint(winpoint); //(b7)\n  }\n\n//ENG::Function destroy this smartContract\n//ENG::Thats needed in case if we create new game, to take founds from it and add to new game \n//ENG::Or also it need if we see that current game not so actual, and we need to transfer founds to a new game, that more popular\n//ENG::Or in case if we found any critical bug, to take founds in safe place, while fixing bugs.\n//RUS::\u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0434\u043b\u044f \u0443\u043d\u0438\u0447\u0442\u043e\u0436\u0435\u043d\u0438\u044f \u0441\u043c\u0430\u0440\u0442 \u043a\u043e\u043d\u0442\u0440\u0430\u043a\u0442\u0430\n//RUS::\u042d\u0442\u043e \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e, \u0447\u0442\u043e\u0431\u044b \u043f\u0440\u0438 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0438 \u043d\u043e\u0432\u044b\u0445 \u0438\u0433\u0440, \u043c\u043e\u0436\u043d\u043e \u0431\u044b\u043b\u043e \u0440\u0430\u0437\u0434\u0435\u043b\u0438\u0442\u044c \u0411\u0430\u043b\u0430\u043d\u0441 \u0442\u0435\u043a\u0443\u0449\u0435\u0439 \u0438\u0433\u0440\u044b \u0441 \u043d\u043e\u0432\u043e\u0439 \u0438\u0433\u0440\u043e\u0439\n//RUS::\u0418\u043b\u0438 \u0435\u0441\u043b\u0438 \u043f\u0440\u0438 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0438 \u043d\u043e\u0432\u044b\u0445 \u0438\u0433\u0440, \u044d\u0442\u0430 \u043f\u043e\u0442\u0435\u0440\u044f\u0435\u0442 \u0441\u0432\u043e\u044e \u0430\u043a\u0442\u0443\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u044c\n//RUS::\u041b\u0438\u0431\u043e \u043f\u0440\u0438 \u043e\u0431\u043d\u0430\u0440\u0443\u0436\u0435\u043d\u0438\u0438 \u043a\u0440\u0438\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u0431\u0430\u0433\u043e\u0435, \u043f\u0435\u0440\u0435\u0432\u0435\u0441\u0442\u0438 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430 \u0432 \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u0442\u043d\u043e\u0435 \u043c\u0435\u0441\u0442\u043e \u043d\u0430 \u0432\u0440\u0435\u043c\u044f \u0438\u0441\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043e\u0448\u0438\u0431\u043e\u043a\n  function resetGame () public {\n    if (msg.sender == creator) { \n      selfdestruct(0xdC3df52BB1D116471F18B4931895d91eEefdC2B3); \n      return;\n    }\n  }\n\n//ENG::Function to substring provided string from provided start position until end position\n//ENG::It's need to tak last 5 characters from *ticket* adress\n//RUS::\u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0434\u043b\u044f \u043e\u0431\u0440\u0435\u0437\u0430\u043d\u0438\u044f \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0438 \u0441 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0439 \u043f\u043e\u0437\u0438\u0446\u0438\u0438 \u0434\u043e \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0439 \u043a\u043e\u043d\u0435\u0447\u043d\u043e\u0439 \u043f\u043e\u0437\u0438\u0446\u0438\u0438\n//RUS::\u042d\u0442\u043e \u043d\u0430\u0434\u043e, \u0447\u0442\u043e\u0431\u044b \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0435 5 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432 \u0441 \u0430\u0434\u0440\u0435\u0441\u0441\u0430 *\u0431\u0438\u043b\u0435\u0442\u0430*\nfunction substring(string str, uint startIndex, uint endIndex) public pure returns (string) {\n    bytes memory strBytes = bytes(str);\n    bytes memory result = new bytes(endIndex-startIndex);\n    for(uint i = startIndex; i < endIndex; i++) {\n        result[i-startIndex] = strBytes[i];\n    }\n    return string(result);\n  }\n\n//ENG::Also very useful function, to make all symbols in string to lowercase\n//ENG::That need in case to lowercase *TICKET* adress and Player provided symbols\n//ENG::Because adress can be 0xasdf...FFDDEE123 and player can provide ACfE4. but we all convert to one format. lowercase\n//RUS::\u0422\u043e\u0436\u0435 \u043e\u0447\u0435\u043d\u044c \u043f\u043e\u043b\u0435\u0437\u043d\u0430\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u044f, \u0447\u0442\u043e\u0431\u044b \u043f\u0435\u0440\u0435\u0432\u0435\u0441\u0442\u0438 \u0432\u0441\u0435 \u0441\u0438\u043c\u0432\u043e\u043b\u044b \u0432 \u043d\u0438\u0436\u043d\u0438\u0439 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\n//RUS::\u042d\u0442\u043e \u043d\u0430\u0434\u043e, \u0447\u0442\u043e\u0431\u044b \u043f\u0440\u0438\u0432\u0435\u0441\u0442\u0438 \u0432 \u0435\u0434\u0438\u043d\u044b\u0439 \u0444\u043e\u0440\u043c\u0430\u0442 \u0432\u0441\u0435 \u0442\u0430\u043a\u0438\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 \u043a\u0430\u043a *\u0411\u0438\u043b\u0435\u0442* \u0438 *\u041a\u043b\u044e\u0447*\n//RUS::\u0422\u0430\u043a \u043a\u0430\u043a \u0430\u0434\u0440\u0435\u0441\u0441 \u0431\u0438\u043b\u0435\u0442\u0430 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c 0xasdf...FFDDEE123, \u0430 \u0442\u0430\u043a\u0436\u0435 \u0438\u0433\u0440\u043e\u043a \u043c\u043e\u0436\u0435\u0442 \u0432\u0432\u0435\u0441\u0442\u0438 ACfE4.\n\tfunction _toLower(string str) internal pure returns (string) {\n\t\tbytes memory bStr = bytes(str);\n\t\tbytes memory bLower = new bytes(bStr.length);\n\t\tfor (uint i = 0; i < bStr.length; i++) {\n\t\t\t// Uppercase character...\n\t\t\tif ((bStr[i] >= 65) && (bStr[i] <= 90)) {\n\t\t\t\t// So we add 32 to make it lowercase\n\t\t\t\tbLower[i] = bytes1(int(bStr[i]) + 32);\n\t\t\t} else {\n\t\t\t\tbLower[i] = bStr[i];\n\t\t\t}\n\t\t}\n\t\treturn string(bLower);\n\t}\n\n  //ENG::Standart Function to receive founds\n  //RUS::\u0421\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u0430\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0434\u043b\u044f \u043f\u0440\u0438\u0451\u043c\u0430 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\n  function () payable public {\n    //RECEIVED    \n  }\n\n  //ENG::Converts adress type into string\n  //ENG::Used to convert *TICKET* adress into string\n  //RUS::\u041a\u043e\u043d\u0432\u0435\u0440\u0442\u0438\u0440\u0443\u0435\u0442 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e \u0442\u0438\u043f\u0430 adress \u0432 \u0441\u0442\u0440\u043e\u043a\u0443 string\n  //RUS::\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0430\u0446\u0438\u0438 \u0430\u0434\u0440\u0435\u0441\u0430 *\u0431\u0438\u043b\u0435\u0442\u0430* \u0432 \u0441\u0442\u0440\u043e\u043a\u0443 string\n  \nfunction addressToString(address _addr) public pure returns(string) {\n    bytes32 value = bytes32(uint256(_addr));\n    bytes memory alphabet = \"0123456789abcdef\";\n\n    bytes memory str = new bytes(42);\n    str[0] = '0';\n    str[1] = 'x';\n    for (uint i = 0; i < 20; i++) {\n        str[2+i*2] = alphabet[uint(value[i + 12] >> 4)];\n        str[3+i*2] = alphabet[uint(value[i + 12] & 0x0f)];\n    }\n    return string(str);\n}\n\n\n  //ENG::Get last blockhash symbols and converts into string\n  //ENG::Used to convert *TICKET* hash into string\n  //RUS::\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u043c\u043e\u043d\u0432\u0435\u0440\u0442\u0438\u0440\u0443\u0435\u0442 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e \u0442\u0438\u043f\u0430 adress \u0432 \u0441\u0442\u0440\u043e\u043a\u0443 string\n  //RUS::\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0430\u0446\u0438\u0438 \u0430\u0434\u0440\u0435\u0441\u0430 *\u0431\u0438\u043b\u0435\u0442\u0430* \u0432 \u0441\u0442\u0440\u043e\u043a\u0443 string\n\nfunction blockhashToString(bytes32 _blockhash_to_decode) public pure returns(string) {\n    bytes32 value = _blockhash_to_decode;\n    bytes memory alphabet = \"0123456789abcdef\";\n\n    bytes memory str = new bytes(42);\n    str[0] = '0';\n    str[1] = 'x';\n    for (uint i = 0; i < 20; i++) {\n        str[2+i*2] = alphabet[uint(value[i + 12] >> 4)];\n        str[3+i*2] = alphabet[uint(value[i + 12] & 0x0f)];\n    }\n    return string(str);\n}\n\n  //ENG::Converts uint type into STRING to show data in human readable format\n  //RUS::\u041a\u043e\u043d\u0432\u0435\u0440\u0442\u0438\u0440\u0443\u0435\u0442 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e uint \u0432 \u0441\u0442\u0440\u043e\u043a\u0443 string \u0447\u0442\u043e\u0431\u044b \u043e\u0442\u043e\u0431\u0440\u0430\u0437\u0438\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u0435 \u0432 \u043f\u043e\u043d\u044f\u0442\u043d\u043e\u043c \u0434\u043b\u044f \u0447\u0435\u043b\u043e\u0432\u0435\u043a\u0430 \u0444\u043e\u0440\u043c\u0430\u0442\u0435\nfunction uint2str(uint i) internal pure returns (string){\n    if (i == 0) return \"0\";\n    uint j = i;\n    uint length;\n    while (j != 0){\n        length++;\n        j /= 10;\n    }\n    bytes memory bstr = new bytes(length);\n    uint k = length - 1;\n    while (i != 0){\n        bstr[k--] = byte(48 + i % 10);\n        i /= 10;\n    }\n    return string(bstr);\n}\n\n\n//ENG::This simple function, clone existing contract into new contract, to gain TOTALLY UNICALLY random string of *TICKET*\n//RUS::\u042d\u0442\u0430 \u043f\u0440\u043e\u0441\u0442\u0430\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043a\u043b\u043e\u043d\u0438\u0440\u0443\u0435\u0442 \u0442\u0435\u043a\u0443\u0449\u0438\u0439 \u043a\u043e\u043d\u0442\u0440\u0430\u043a\u0442 \u0432 \u043d\u043e\u0432\u044b\u0439 \u043a\u043e\u043d\u0442\u0440\u0430\u043a\u0442, \u0447\u0442\u043e\u0431\u044b \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c 100% \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u0443\u044e \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e *\u0411\u0418\u041b\u0415\u0422\u0410*\n\nfunction isContract(address _addr) private view returns (bool OKisContract){\n  uint32 size;\n  assembly {\n    size := extcodesize(_addr)\n  }\n  return (size > 0);\n}\n\n\n\n  //ENG::Event which will be visible in transaction logs in etherscan, and will have result data, whats will be parsed and showed on website\n  //RUS::\u042d\u0432\u0435\u043d\u0442 \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u0443\u0434\u0435\u0442 \u0432\u0438\u0434\u0435\u043d \u0430 \u043b\u043e\u0433\u0430\u0445 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0438, \u0438 \u043e\u0442\u043e\u0431\u0440\u0430\u0437\u0438\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 \u0441 \u043f\u043e\u043b\u0435\u0437\u043d\u044b\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u0434\u043b\u044f \u0430\u043d\u0430\u043b\u0438\u0437\u0430 \u0438 \u043f\u043e\u0441\u043b\u0435 \u0432\u044b\u0432\u043e\u0434\u0430 \u0438\u0445 \u043d\u0430 \u0441\u0430\u0439\u0442\u0435\n  event ok_statusGame(address u_address, string u_key, uint u_bet, uint u_blocknum, string u_ref, string u_blockhash, uint winpoint,uint totalwin);\n\n  struct EntityStruct {\n    address u_address;\n    string u_key;\n    uint u_bet;\n    uint u_blocknum;\n    string u_ref;\n    uint listPointer;\n  }\n\n  mapping(address => EntityStruct) public entityStructs;\n  address[] public entityList;\n\n  function isEntity(address entityAddress) public constant returns(bool isIndeed) {\n    if(entityList.length == 0) return false;\n    return (entityList[entityStructs[entityAddress].listPointer] == entityAddress);\n  }\n\n\n\n\n//ENG::Main function whats called from a website.\n//ENG::To provide best service. performance and support we take DevFee 13.3% of transaction (c1)\n//ENG::Using of *blockhash* function to get HASH of block in which previous player transaction was maded (c2)\n//ENG::to generate TOTALLY random symbols which nobody can know until block is mined (c2)\n//ENG::Used check_result function we get winpoint value (c3)\n//ENG::If winpoint value is 0 or 1 point - player wins 0 ETH (c4)\n//ENG::if winpoint value is 2 then player wins 165% from (BET - 13.3%) (c5)\n//ENG::if winpoint value is 3 then player wins 315% from (BET - 13.3%) (c6)\n//ENG::if winpoint value is 4 then player wins 515% from (BET - 13.3%) (c7)\n//ENG::if winpoint value is 5 then player wins 3333% from (BET - 13.3%) (c8)\n//ENG::If win amount is greater the smartcontract have, then player got 90% of smart contract balance (c9)\n//ENG::On Website before place bet, player will see smartcontract current balance (maximum to wim)\n//ENG::when win amount was calculated it automatically sends to player adress (c10)\n//ENG::After all steps completed, SmartContract will generate message for EVENT,\n//ENG::EVENT Message will have description of current game, and will have those fields which will be displayed on website:\n//ENG::Player Address/ Player provided symbols / Player BET / Block Number Transaction played / Partner id / Little ticket / Player score / Player Win amount / \n//ENG::\u041f\u043e\u043b\u043d\u044b\u0439 \u0430\u0434\u0440\u0435\u0441\u0441 *\u0438\u0433\u0440\u043e\u043a\u0430* / \u0421\u0438\u043c\u0432\u043e\u043b\u044b \u0432\u0432\u0435\u0434\u0435\u043d\u043d\u044b\u0435 \u0438\u0433\u0440\u043e\u043a\u043e\u043c / \u0421\u0442\u0430\u0432\u043a\u0443 / \u041d\u043e\u043c\u0435\u0440 \u0431\u043b\u043e\u043a\u0430 \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u0438\u0433\u0440\u0430\u043b\u0438 / \u0418\u0434 \u043f\u0430\u0440\u0442\u043d\u0451\u0440\u0430 / \u0423\u043a\u043e\u0440\u043e\u0447\u0435\u043d\u043d\u044b\u0439 \u0431\u0438\u043b\u0435\u0442 / \u041e\u0447\u043a\u0438 \u0438\u0433\u0440\u043e\u043a\u0430 / \u0421\u0443\u043c\u043c\u044b \u0432\u044b\u0439\u0433\u0440\u044b\u0448\u0430 / \n//RUS::\u0413\u043b\u0430\u0432\u043d\u0430\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u043d\u0435\u043f\u043e\u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0435\u043d\u043d\u043e \u0441 \u0441\u0430\u0439\u0442\u0430.\n//RUS::\u0427\u0442\u043e\u0431\u044b \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0432\u0430\u0442\u044c \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u0439 \u0441\u0435\u0440\u0432\u0438\u0441, \u0440\u0430\u0437\u0432\u0438\u0432\u0430\u0442\u044c \u0438 \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u0442\u044c \u043d\u043e\u0432\u044b\u0435 \u0438\u0433\u0440\u044b, \u043c\u044b \u0431\u0435\u0440\u0435\u043c \u043a\u043e\u043c\u0438\u0441\u0441\u0438\u044e 13,3% \u043e\u0442 \u0440\u0430\u0437\u043c\u0435\u0440\u0430 \u0441\u0442\u0430\u0432\u043a\u0438 (c1)\n//RUS::\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u0444\u0443\u043d\u043a\u0446\u0438\u044e *blockhash* \u0434\u043b\u044f \u0434\u043e\u0431\u044b\u0447\u0438 \u0445\u0435\u0448\u0430 \u0431\u043b\u043e\u043a\u0430 \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u0431\u044b\u043b\u0430 \u0441\u0434\u0435\u043b\u0430\u043d\u0430 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u044f \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0435\u0433\u043e \u0438\u0433\u0440\u043e\u043a\u0430, (c2)\n//RUS::\u0414\u043b\u044f \u0442\u043e\u0433\u043e, \u0447\u0442\u043e\u0431\u044b \u0434\u043e\u0431\u0438\u0442\u0441\u044f 100% \u0423\u041d\u0418\u041a\u0410\u041b\u042c\u041d\u041e\u0413\u041e *\u0431\u0438\u043b\u0435\u0442\u0430* (c2)\n//RUS::\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c check_result \u0444\u0443\u043d\u043a\u0446\u0438\u044e \u0447\u0442\u043e\u0431\u044b \u0443\u0437\u043d\u0430\u0442\u044c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 winpoint (c3)\n//RUS::\u0415\u0441\u043b\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 winpoint 0 \u0438\u043b\u0438 1 - \u0432\u044b\u0439\u0433\u0440\u044b\u0448 \u0438\u0433\u0440\u043e\u043a\u0430 0 ETH (c4)\n//RUS::\u0415\u0441\u043b\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 winpoint 2 - \u0432\u044b\u0439\u0433\u0440\u044b\u0448 \u0438\u0433\u0440\u043e\u043a\u0430 165% \u043e\u0442 (\u0421\u0422\u0410\u0412\u041a\u0410 - 13.3%) (c5)\n//RUS::\u0415\u0441\u043b\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 winpoint 3 - \u0432\u044b\u0439\u0433\u0440\u044b\u0448 \u0438\u0433\u0440\u043e\u043a\u0430 315% \u043e\u0442 (\u0421\u0422\u0410\u0412\u041a\u0410 - 13.3%) (c6)\n//RUS::\u0415\u0441\u043b\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 winpoint 4 - \u0432\u044b\u0439\u0433\u0440\u044b\u0448 \u0438\u0433\u0440\u043e\u043a\u0430 515% \u043e\u0442 (\u0421\u0422\u0410\u0412\u041a\u0410 - 13.3%) (c7)\n//RUS::\u0415\u0441\u043b\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 winpoint 5 - \u0432\u044b\u0439\u0433\u0440\u044b\u0448 \u0438\u0433\u0440\u043e\u043a\u0430 3333% \u043e\u0442 (\u0421\u0422\u0410\u0412\u041a\u0410 - 13.3%) (c8)\n//RUS::\u0415\u0441\u043b\u0438 \u0441\u0443\u043c\u043c\u0430 \u0432\u044b\u0439\u0433\u0440\u044b\u0448\u0430 \u0431\u043e\u043b\u044c\u0448\u0435 \u0431\u0430\u043b\u0430\u043d\u0441\u0430 \u0441\u043c\u0430\u0440\u0442 \u043a\u043e\u043d\u0442\u0440\u0430\u043a\u0442\u0430, \u0442\u043e \u0438\u0433\u0440\u043e\u043a \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 90% \u043e\u0442 \u0431\u0430\u043b\u0430\u043d\u0441\u0430 \u0441\u043c\u0430\u0440\u0442 \u043a\u043e\u043d\u0442\u0440\u0430\u043a\u0442\u0430 (c9)\n//RUS::\u041d\u0430 \u0441\u0430\u0439\u0442\u0435 \u0438\u0433\u0440\u043e\u043a \u0437\u0430\u0440\u0430\u043d\u0435\u0435 \u0432\u0438\u0434\u0435\u0442 \u0431\u0430\u043b\u0430\u043d\u0441 \u0441\u043c\u0430\u0440\u0442 \u043a\u043e\u043d\u0442\u0440\u0430\u043a\u0442\u0430 \u043d\u0430 \u0442\u0435\u043a\u0443\u0449\u0438\u0439 \u043c\u043e\u043c\u0435\u043d\u0442 (\u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u0439 \u0432\u044b\u0439\u0433\u0440\u044b\u0448)\n//RUS::\u041f\u043e\u0441\u043b\u0435 \u0432\u044b\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u044f \u0441\u0443\u043c\u043c\u044b \u0432\u044b\u0439\u0433\u0440\u044b\u0448\u0430, \u0432\u044b\u0439\u0433\u0440\u044b\u0448\u044c \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u043e\u043c \u043f\u0435\u0440\u0435\u0447\u0438\u0441\u043b\u044f\u0435\u0442\u0441\u044f \u043d\u0430 \u0430\u0434\u0440\u0435\u0441\u0441 \u0438\u0433\u0440\u043e\u043a\u0430 (c10)\n//RUS::\u041f\u043e\u0441\u043b\u0435 \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f \u0432\u0441\u0435\u0445 \u0448\u0430\u0433\u043e\u0432, \u0441\u043c\u0430\u0440\u0442 \u043a\u043e\u043d\u0442\u0440\u0430\u043a\u0442 \u0433\u0435\u043d\u0435\u0440\u0438\u0440\u0443\u0435\u0442 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u0434\u043b\u044f \u042d\u0412\u0415\u041d\u0422\u0410\n//RUS::\u0421\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u042d\u0412\u0415\u041d\u0422\u0410 \u0445\u0440\u0430\u043d\u0438\u0442 \u0432 \u0441\u0435\u0431\u0435 \u043a\u043b\u044e\u0447\u0435\u0432\u044b\u0435 \u043f\u043e\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u0438 \u0441\u044b\u0433\u0440\u0430\u043d\u043e\u0439 \u0438\u0433\u0440\u044b, \u0438 \u043a\u0440\u0430\u0441\u0438\u0432\u043e \u0432 \u043f\u043e\u043d\u044f\u0442\u043d\u043e\u0439 \u0444\u043e\u0440\u043c\u0435 \u0431\u0443\u0434\u0443\u0442 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u044b \u043d\u0430 \u0441\u0430\u0439\u0442\u0435\n//RUS::\u0427\u0442\u043e \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u042d\u0412\u0415\u041d\u0422\u0410:\n//RUS::\u041f\u043e\u043b\u043d\u044b\u0439 \u0430\u0434\u0440\u0435\u0441\u0441 *\u0438\u0433\u0440\u043e\u043a\u0430* / \u0421\u0438\u043c\u0432\u043e\u043b\u044b \u0432\u0432\u0435\u0434\u0435\u043d\u043d\u044b\u0435 \u0438\u0433\u0440\u043e\u043a\u043e\u043c / \u0421\u0442\u0430\u0432\u043a\u0443 / \u041d\u043e\u043c\u0435\u0440 \u0431\u043b\u043e\u043a\u0430 / \u0418\u0434 \u043f\u0430\u0440\u0442\u043d\u0451\u0440\u0430 / \u0423\u043a\u043e\u0440\u043e\u0447\u0435\u043d\u043d\u044b\u0439 \u0431\u0438\u043b\u0435\u0442 / \u041e\u0447\u043a\u0438 \u0438\u0433\u0440\u043e\u043a\u0430 / \u0421\u0443\u043c\u043c\u044b \u0432\u044b\u0439\u0433\u0440\u044b\u0448\u0430 / \n\n\n  function PlayFiveChain(string _u_key, string _u_ref ) public payable returns(bool success) {\n    \n    //ENG::AntiRobot Captcha\n    //RUS::\u041a\u0430\u043f\u0447\u0430 \u043f\u0440\u043e\u0442\u0438\u0432 \u0431\u043e\u0442\u043e\u0432 \n    require(tx.origin == msg.sender);\n    if(isContract(msg.sender))\n    {\n      return;\n    }    \n\n    if(!isEntity(address(this))) \n    {\n      //ENG:need to fill array at first init\n      //RUS:\u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0434\u043b\u044f \u043d\u0430\u0447\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u0437\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u043c\u0430\u0441\u0441\u0438\u0432\u0430\n      \n      entityStructs[address(this)].u_address = msg.sender;\n      entityStructs[address(this)].u_key = _u_key;\n      entityStructs[address(this)].u_bet = msg.value;      \n      entityStructs[address(this)].u_blocknum = block.number;\n      entityStructs[address(this)].u_ref = _u_ref;                        \n      entityStructs[address(this)].listPointer = entityList.push(address(this)) - 1;\n      return true;\n    }\n    else\n    {\n      address(0xdC3df52BB1D116471F18B4931895d91eEefdC2B3).transfer((msg.value/1000)*133); //(c1)          \n      string memory calculate_userhash = substring(blockhashToString(blockhash(entityStructs[address(this)].u_blocknum)),37,42); //(c2)\n      string memory calculate_userhash_to_log = substring(blockhashToString(blockhash(entityStructs[address(this)].u_blocknum)),37,42);//(c2)\n      uint winpoint = check_result(calculate_userhash,_toLower(entityStructs[address(this)].u_key));//(c3)\n      \n\n    if(winpoint == 0)\n    {\n      totalwin = 0; //(c4)\n    }\n    if(winpoint == 1)\n    {\n      totalwin = 0; //(c4)\n    }\n    if(winpoint == 2)\n    {\n      totalwin = ((entityStructs[address(this)].u_bet - (entityStructs[address(this)].u_bet/1000)*133)/100)*165; //(c5)\n    }\n    if(winpoint == 3)\n    {\n      totalwin = ((entityStructs[address(this)].u_bet - (entityStructs[address(this)].u_bet/1000)*133)/100)*315; //(c6)\n    }            \n    if(winpoint == 4)\n    {\n      totalwin = ((entityStructs[address(this)].u_bet - (entityStructs[address(this)].u_bet/1000)*133)/100)*515; //(c7)\n    }\n    if(winpoint == 5)\n    {\n      totalwin = ((entityStructs[address(this)].u_bet - (entityStructs[address(this)].u_bet/1000)*133)/100)*3333; //(c8)\n    } \n\n    if(totalwin > 0)    \n    {\n      if(totalwin > address(this).balance)\n      {\n        totalwin = ((address(this).balance/100)*90); //(c9)\n      }\n      address(entityStructs[address(this)].u_address).transfer(totalwin); //(c10)         \n    }\n\n\n      \n      emit ok_statusGame(entityStructs[address(this)].u_address, entityStructs[address(this)].u_key, entityStructs[address(this)].u_bet, entityStructs[address(this)].u_blocknum, entityStructs[address(this)].u_ref, calculate_userhash_to_log,winpoint,totalwin);      \n      \n      //ENG:: Filling array with current player values\n      //ENG:: In Next time when contract called will be processed previous player data to calculate prize\n      //RUS:: \u0417\u0430\u043f\u043e\u043b\u043d\u044f\u0435\u043c \u043c\u0430\u0441\u0441\u0438\u0432 \u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u0438\u0433\u0440\u043e\u043a\u0430\n      //RUS:: \u041f\u0440\u0438 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u043c \u0432\u044b\u0437\u043e\u0432\u0435 \u043a\u043e\u043d\u0442\u0440\u0430\u043a\u0442\u0430 \u0431\u0443\u0434\u0443\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0441\u044f \u0434\u0430\u043d\u043d\u044b\u0435 \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0435\u0433\u043e \u0438\u0433\u0440\u043e\u043a\u0430 \u0434\u043b\u044f \u0432\u044b\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u044f \u0432\u044b\u0439\u0433\u0440\u044b\u0448\u0430\n      entityStructs[address(this)].u_address = msg.sender;\n      entityStructs[address(this)].u_key = _u_key;\n      entityStructs[address(this)].u_bet = msg.value;      \n      entityStructs[address(this)].u_blocknum = block.number;\n      entityStructs[address(this)].u_ref = _u_ref;                        \n    }\n    return;\n  }\n\n}", "debug": "calldata_playFive_4 + calldata_playFive_4: 0x8000000000000000000000000000000000000000000000000000000000000000\nextcodesize: 0x0\ncaller: 0x0\norigin: 0x0\ncalldata_playFive_0: 0x7526747d00000000000000000000000000000000000000000000000000000000\ncalldatasize_playFive: 0x4\nstorage_7: 0x0\n", "description": "A possible integer overflow exists in the function `PlayFiveChain(string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/17/0x5d04fd11b62cdf31f67b16a392cb05e00182c522.sol", "function": "PlayFiveChain(string,string)", "lineno": 8, "title": "Integer Overflow ", "type": "Warning"}, {"address": 11179, "code": "\u043c \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435\n  address private creator;\n  string private message;\n  string private message_details;\n  string private referal;\n  uint private totalBalance; \n  uint public totalwin;\n  \n  //ENG::\u0421onstructor\n  //\u041a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0442\u043e\u0440\n  /*\n  constructor() public {\n\n    creator = tx.origin;   \n    message = 'initiated';\n  }\n  */\n\n\n  \n\n\n  //ENG::Function that show Creator adress\n  //RUS::\u0424\u0443\u043d\u043a\u0446\u0438\u044f \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043e\u0442\u043e\u0431\u0440\u0430\u0437\u0438\u0442 \u0430\u0434\u0440\u0435\u0441\u0441 \u0441\u043e\u0437\u0434\u0430\u0442\u0435\u043b\u044f \u043a\u043e\u043d\u0442\u0440\u0430\u043a\u0442\u0430\n  function getCreator() public constant returns(address) {\n    return creator;\n  }\n\n  //ENG::Function that show SmarrtContract Balance\n  //\u0424\u0443\u043d\u043a\u0446\u0438\u044f \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043e\u0442\u043e\u0431\u0440\u0430\u0437\u0438\u0442 \u0411\u0430\u043b\u0430\u043d\u0441 \u0421\u043c\u0430\u0440\u0442\u041a\u043e\u043d\u0442\u0440\u0430\u043a\u0442\u0430\n  function getTotalBalance() public constant returns(uint) {\n    return address(this).balance;\n  }  \n  \n\n//ENG::One of the best way to compare two strings converted to bytes\n//ENG::Function will check length and if bytes length is same then calculate hash of strings and compare it, (a1)\n//ENG::if strings the same, return true, otherwise return false (a2)\n//RUS::\u041e\u0434\u0438\u043d \u0438\u0437 \u043b\u0443\u0447\u0448\u0438\u0445 \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u043e\u0432 \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044f \u0441\u0442\u0440\u0438\u043d\u0433 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445 \u0441\u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0435 \u0430 \u0431\u0430\u0439\u0442\u044b\n//RUS::\u0421\u043d\u0430\u0447\u0430\u043b\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0441\u0440\u0430\u0432\u043d\u0438\u0432\u0430\u0435\u0442 \u0434\u043b\u0438\u043d\u043d\u0443 \u0431\u0430\u0439\u0442\u043a\u043e\u0434\u0430 \u0438 \u043f\u043e\u0441\u043b\u043a \u0438\u0445 \u0445\u044d\u0448 (a1)\n//RUS::\u0415\u0441\u043b\u0438 \u0445\u044d\u0448 \u043e\u0434\u0438\u043d\u0430\u043a\u043e\u0432\u044b\u0439, \u0442\u043e \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 true, \u0438\u043d\u0430\u0447\u0435 - false (a2)\n\nfunction hashCompareWithLengthCheck(string a, string b) internal pure returns (bool) {\n    if(bytes(a).length != bytes(b).length) { //(a1)\n        return false;\n    } else {\n        return keccak256(abi.encodePacked(a)) == keccak256(abi.encodePacked(b)); //(a2)\n    }\n}\n\n//ENG::Function that calculate Wining points\n//ENG::After we get our *play ticket* adress, we take last 5 chars of it and game is on\n//ENG::sendTXTpsTX - main game function, send to this function *play ticket* code and player entered symbols \n//ENG::function starting setted initiated results to nothing (b1)\n//ENG::Then converting strings to bytes, so we can run throung each symbol (b2)\n//ENG::Also we set initial winpoint to 0 (b3)\n//ENG::Then we run throught each symbol in *play ticket* and compare it with player entered symbols\n//ENG::player entered symbols maximum length also is five\n//ENG::if function found a match using *hashCompareWithLengthCheck* function, then\n//ENG::function add to event message details, that shows whats symbols are found whith player entered symbols (b4)\n//ENG::replace used symbols in *player ticket* and entered symbols on X and Y so they no more used in game process (b5)\n//ENG::and increase winpoit by 1 (b6)\n//ENG::after function complete, it return winpoint from 0 - 5 (b7)\n//RUS::\u0424\u0443\u043d\u043a\u0446\u0438\u044f \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0432\u044b\u0441\u0447\u0438\u0442\u044b\u0432\u0430\u0435\u0442 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043e\u0447\u043a\u043e\u0432\n//RUS::\u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0430\u0434\u0440\u0435\u0441\u0430 *\u0431\u0438\u043b\u0435\u0442\u0430*, \u043c\u044b \u0431\u0435\u0440\u0435\u043c \u0435\u0433\u043e \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0438 5 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432 \u0438 \u0438\u0433\u0440\u0430 \u043d\u0430\u0447\u0430\u043b\u0430\u0441\u044c\n//RUS::sendTXTpsTX - \u0433\u043b\u0430\u0432\u043d\u0430\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0438\u0433\u0440\u044b, \u0448\u043b\u0451\u0442 \u044d\u0442\u043e\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u0441\u0438\u043c\u0432\u043e\u043b\u044b \u0431\u0438\u043b\u0435\u0442\u0430 \u0438 \u0441\u0438\u043c\u0432\u043e\u043b\u044b \u0432\u0432\u0435\u0434\u0435\u043d\u044b\u0435 \u0438\u0433\u0440\u043e\u043a\u043e\u043c\n//RUS::\u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0441\u043d\u0430\u0447\u0430\u043b\u043e \u043e\u0431\u043d\u0443\u043b\u044f\u0435\u0442 \u0434\u0435\u0442\u0430\u043b\u0438 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 (b1)\n//RUS::\u041f\u043e\u0441\u043b\u0435 \u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0438\u0440\u0443\u0435\u0442 *\u0431\u0438\u043b\u0435\u0442* \u0438 \u0441\u0438\u043c\u0432\u043e\u043b\u044b \u0438\u0433\u0440\u043e\u043a\u0430 \u0432 \u0431\u0430\u0439\u0442\u044b, \u0447\u0442\u043e\u0431\u044b \u043c\u043e\u0436\u043d\u043e \u0431\u044b\u043b\u043e \u043f\u0440\u043e\u0439\u0442\u0438 \u043f\u043e \u0441\u0438\u043c\u0432\u043e\u043b\u0430\u043c (b2)\n//RUS::\u0422\u0430\u043a\u0436\u0435 \u0441\u0442\u0430\u0432\u0438\u043c \u043d\u0430\u0447\u0430\u043b\u044c\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043e\u0447\u043a\u043e\u0432 \u043d\u0430 0 (b3)\n//RUS::\u0414\u0430\u043b\u0435\u0435 \u043c\u044b \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c \u0441\u043e\u0432\u043f\u0430\u0434\u0430\u044e\u0442 \u043b\u0438 \u0441\u0438\u043c\u0432\u043e\u043b\u044b *\u0431\u0438\u043b\u0435\u0442\u0430* \u0441 \u0441\u0438\u043c\u0432\u043e\u043b\u0430\u043c\u0438 \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0432\u0432\u0435\u043b \u0438\u0433\u0440\u043e\u043a\n//RUS::\u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u043b\u0438\u043d\u043d\u0430 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432 \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0432\u0432\u043e\u0434\u0438\u0442 \u0438\u0433\u0440\u043e\u043a, \u0442\u043e\u0436\u0435 5.\n//RUS::\u0415\u0441\u043b\u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043d\u0430\u0445\u043e\u0434\u0438\u0442 \u0441\u043e\u0432\u043f\u0430\u0434\u0435\u043d\u0438\u0435 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0444\u0443\u043d\u043a\u0446\u0438\u0438 *hashCompareWithLengthCheck*, \u0442\u043e\n//RUS::\u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u043a \u044d\u0432\u044d\u043d\u0442\u0443 \u0434\u0435\u0442\u0430\u043b\u044c\u043d\u043e\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u043e \u0442\u043e\u043c, \u043a\u0430\u043a\u0438\u0435 \u0441\u0438\u043c\u0432\u043e\u043b\u044b \u0431\u044b\u043b\u0438 \u043d\u0430\u0439\u0434\u0435\u043d\u044b (b4)\n//RUS::\u0417\u0430\u043c\u0435\u043d\u044f\u0435\u0442 \u043d\u0430\u0439\u0434\u0435\u043d\u043d\u044b\u0435 \u0441\u0438\u043c\u0432\u043e\u043b\u044b \u0432 *\u0431\u0438\u043b\u0435\u0442\u0435* \u0438 *\u043a\u043b\u044e\u0447\u0435* \u043d\u0430 X \u0438 Y \u0438 \u043e\u043d\u0438 \u0431\u043e\u043b\u0435\u0435 \u043d\u0435 \u0443\u0447\u0430\u0441\u0442\u0432\u0443\u044e\u0442 \u0432 \u0438\u0433\u0440\u0435 (b5)\n//RUS::\u0423\u0432\u0435\u043b\u0438\u0447\u0438\u0432\u0430\u0435\u0442 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0431\u0430\u043b\u043b\u043e\u0432 winpoint \u043d\u0430 1 (b6)\n//RUS::\u041f\u043e \u0437\u0432\u044b\u0435\u0440\u0448\u0435\u043d\u0438\u044e, \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 winpoint \u043e\u0442 0 \u0434\u043e 5 (b7)\nfunction check_result(string ticket, string check) public  returns (uint) {\n  message_details = \"\"; //(b1)\n    bytes memory ticketBytes = bytes(ticket); //(b2)\n    bytes memory checkBytes = bytes(check);   //(b2) \n    uint winpoint = 0; //(b3)\n\n\n    for (uint i=0; i < 5; i++){\n\n      for (uint j=0; j < 5; j++){\n\n        if(hashCompareWithLengthCheck(string(abi.encodePacked(ticketBytes[j])),string(abi.encodePacked(checkBytes[i]))))\n        {\n          message_details = string(abi.encodePacked(message_details,'*',ticketBytes[j],'**',checkBytes[i])); //(b4)\n          ticketBytes[j] =\"X\"; //(b5)\n          checkBytes[i] = \"Y\"; //(b5)\n\n          winpoint = winpoint+1; //(b6)         \n        }\n       \n      }\n\n    }    \n    return uint(winpoint); //(b7)\n  }\n\n//ENG::Function destroy this smartContract\n//ENG::Thats needed in case if we create new game, to take founds from it and add to new game \n//ENG::Or also it need if we see that current game not so actual, and we need to transfer founds to a new game, that more popular\n//ENG::Or in case if we found any critical bug, to take founds in safe place, while fixing bugs.\n//RUS::\u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0434\u043b\u044f \u0443\u043d\u0438\u0447\u0442\u043e\u0436\u0435\u043d\u0438\u044f \u0441\u043c\u0430\u0440\u0442 \u043a\u043e\u043d\u0442\u0440\u0430\u043a\u0442\u0430\n//RUS::\u042d\u0442\u043e \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e, \u0447\u0442\u043e\u0431\u044b \u043f\u0440\u0438 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0438 \u043d\u043e\u0432\u044b\u0445 \u0438\u0433\u0440, \u043c\u043e\u0436\u043d\u043e \u0431\u044b\u043b\u043e \u0440\u0430\u0437\u0434\u0435\u043b\u0438\u0442\u044c \u0411\u0430\u043b\u0430\u043d\u0441 \u0442\u0435\u043a\u0443\u0449\u0435\u0439 \u0438\u0433\u0440\u044b \u0441 \u043d\u043e\u0432\u043e\u0439 \u0438\u0433\u0440\u043e\u0439\n//RUS::\u0418\u043b\u0438 \u0435\u0441\u043b\u0438 \u043f\u0440\u0438 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0438 \u043d\u043e\u0432\u044b\u0445 \u0438\u0433\u0440, \u044d\u0442\u0430 \u043f\u043e\u0442\u0435\u0440\u044f\u0435\u0442 \u0441\u0432\u043e\u044e \u0430\u043a\u0442\u0443\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u044c\n//RUS::\u041b\u0438\u0431\u043e \u043f\u0440\u0438 \u043e\u0431\u043d\u0430\u0440\u0443\u0436\u0435\u043d\u0438\u0438 \u043a\u0440\u0438\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u0431\u0430\u0433\u043e\u0435, \u043f\u0435\u0440\u0435\u0432\u0435\u0441\u0442\u0438 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430 \u0432 \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u0442\u043d\u043e\u0435 \u043c\u0435\u0441\u0442\u043e \u043d\u0430 \u0432\u0440\u0435\u043c\u044f \u0438\u0441\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043e\u0448\u0438\u0431\u043e\u043a\n  function resetGame () public {\n    if (msg.sender == creator) { \n      selfdestruct(0xdC3df52BB1D116471F18B4931895d91eEefdC2B3); \n      return;\n    }\n  }\n\n//ENG::Function to substring provided string from provided start position until end position\n//ENG::It's need to tak last 5 characters from *ticket* adress\n//RUS::\u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0434\u043b\u044f \u043e\u0431\u0440\u0435\u0437\u0430\u043d\u0438\u044f \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0438 \u0441 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0439 \u043f\u043e\u0437\u0438\u0446\u0438\u0438 \u0434\u043e \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0439 \u043a\u043e\u043d\u0435\u0447\u043d\u043e\u0439 \u043f\u043e\u0437\u0438\u0446\u0438\u0438\n//RUS::\u042d\u0442\u043e \u043d\u0430\u0434\u043e, \u0447\u0442\u043e\u0431\u044b \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0435 5 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432 \u0441 \u0430\u0434\u0440\u0435\u0441\u0441\u0430 *\u0431\u0438\u043b\u0435\u0442\u0430*\nfunction substring(string str, uint startIndex, uint endIndex) public pure returns (string) {\n    bytes memory strBytes = bytes(str);\n    bytes memory result = new bytes(endIndex-startIndex);\n    for(uint i = startIndex; i < endIndex; i++) {\n        result[i-startIndex] = strBytes[i];\n    }\n    return string(result);\n  }\n\n//ENG::Also very useful function, to make all symbols in string to lowercase\n//ENG::That need in case to lowercase *TICKET* adress and Player provided symbols\n//ENG::Because adress can be 0xasdf...FFDDEE123 and player can provide ACfE4. but we all convert to one format. lowercase\n//RUS::\u0422\u043e\u0436\u0435 \u043e\u0447\u0435\u043d\u044c \u043f\u043e\u043b\u0435\u0437\u043d\u0430\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u044f, \u0447\u0442\u043e\u0431\u044b \u043f\u0435\u0440\u0435\u0432\u0435\u0441\u0442\u0438 \u0432\u0441\u0435 \u0441\u0438\u043c\u0432\u043e\u043b\u044b \u0432 \u043d\u0438\u0436\u043d\u0438\u0439 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\n//RUS::\u042d\u0442\u043e \u043d\u0430\u0434\u043e, \u0447\u0442\u043e\u0431\u044b \u043f\u0440\u0438\u0432\u0435\u0441\u0442\u0438 \u0432 \u0435\u0434\u0438\u043d\u044b\u0439 \u0444\u043e\u0440\u043c\u0430\u0442 \u0432\u0441\u0435 \u0442\u0430\u043a\u0438\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 \u043a\u0430\u043a *\u0411\u0438\u043b\u0435\u0442* \u0438 *\u041a\u043b\u044e\u0447*\n//RUS::\u0422\u0430\u043a \u043a\u0430\u043a \u0430\u0434\u0440\u0435\u0441\u0441 \u0431\u0438\u043b\u0435\u0442\u0430 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c 0xasdf...FFDDEE123, \u0430 \u0442\u0430\u043a\u0436\u0435 \u0438\u0433\u0440\u043e\u043a \u043c\u043e\u0436\u0435\u0442 \u0432\u0432\u0435\u0441\u0442\u0438 ACfE4.\n\tfunction _toLower(string str) internal pure returns (string) {\n\t\tbytes memory bStr = bytes(str);\n\t\tbytes memory bLower = new bytes(bStr.length);\n\t\tfor (uint i = 0; i < bStr.length; i++) {\n\t\t\t// Uppercase character...\n\t\t\tif ((bStr[i] >= 65) && (bStr[i] <= 90)) {\n\t\t\t\t// So we add 32 to make it lowercase\n\t\t\t\tbLower[i] = bytes1(int(bStr[i]) + 32);\n\t\t\t} else {\n\t\t\t\tbLower[i] = bStr[i];\n\t\t\t}\n\t\t}\n\t\treturn string(bLower);\n\t}\n\n  //ENG::Standart Function to receive founds\n  //RUS::\u0421\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u0430\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0434\u043b\u044f \u043f\u0440\u0438\u0451\u043c\u0430 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\n  function () payable public {\n    //RECEIVED    \n  }\n\n  //ENG::Converts adress type into string\n  //ENG::Used to convert *TICKET* adress into string\n  //RUS::\u041a\u043e\u043d\u0432\u0435\u0440\u0442\u0438\u0440\u0443\u0435\u0442 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e \u0442\u0438\u043f\u0430 adress \u0432 \u0441\u0442\u0440\u043e\u043a\u0443 string\n  //RUS::\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0430\u0446\u0438\u0438 \u0430\u0434\u0440\u0435\u0441\u0430 *\u0431\u0438\u043b\u0435\u0442\u0430* \u0432 \u0441\u0442\u0440\u043e\u043a\u0443 string\n  \nfunction addressToString(address _addr) public pure returns(string) {\n    bytes32 value = bytes32(uint256(_addr));\n    bytes memory alphabet = \"0123456789abcdef\";\n\n    bytes memory str = new bytes(42);\n    str[0] = '0';\n    str[1] = 'x';\n    for (uint i = 0; i < 20; i++) {\n        str[2+i*2] = alphabet[uint(value[i + 12] >> 4)];\n        str[3+i*2] = alphabet[uint(value[i + 12] & 0x0f)];\n    }\n    return string(str);\n}\n\n\n  //ENG::Get last blockhash symbols and converts into string\n  //ENG::Used to convert *TICKET* hash into string\n  //RUS::\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u043c\u043e\u043d\u0432\u0435\u0440\u0442\u0438\u0440\u0443\u0435\u0442 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e \u0442\u0438\u043f\u0430 adress \u0432 \u0441\u0442\u0440\u043e\u043a\u0443 string\n  //RUS::\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0430\u0446\u0438\u0438 \u0430\u0434\u0440\u0435\u0441\u0430 *\u0431\u0438\u043b\u0435\u0442\u0430* \u0432 \u0441\u0442\u0440\u043e\u043a\u0443 string\n\nfunction blockhashToString(bytes32 _blockhash_to_decode) public pure returns(string) {\n    bytes32 value = _blockhash_to_decode;\n    bytes memory alphabet = \"0123456789abcdef\";\n\n    bytes memory str = new bytes(42);\n    str[0] = '0';\n    str[1] = 'x';\n    for (uint i = 0; i < 20; i++) {\n        str[2+i*2] = alphabet[uint(value[i + 12] >> 4)];\n        str[3+i*2] = alphabet[uint(value[i + 12] & 0x0f)];\n    }\n    return string(str);\n}\n\n  //ENG::Converts uint type into STRING to show data in human readable format\n  //RUS::\u041a\u043e\u043d\u0432\u0435\u0440\u0442\u0438\u0440\u0443\u0435\u0442 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e uint \u0432 \u0441\u0442\u0440\u043e\u043a\u0443 string \u0447\u0442\u043e\u0431\u044b \u043e\u0442\u043e\u0431\u0440\u0430\u0437\u0438\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u0435 \u0432 \u043f\u043e\u043d\u044f\u0442\u043d\u043e\u043c \u0434\u043b\u044f \u0447\u0435\u043b\u043e\u0432\u0435\u043a\u0430 \u0444\u043e\u0440\u043c\u0430\u0442\u0435\nfunction uint2str(uint i) internal pure returns (string){\n    if (i == 0) return \"0\";\n    uint j = i;\n    uint length;\n    while (j != 0){\n        length++;\n        j /= 10;\n    }\n    bytes memory bstr = new bytes(length);\n    uint k = length - 1;\n    while (i != 0){\n        bstr[k--] = byte(48 + i % 10);\n        i /= 10;\n    }\n    return string(bstr);\n}\n\n\n//ENG::This simple function, clone existing contract into new contract, to gain TOTALLY UNICALLY random string of *TICKET*\n//RUS::\u042d\u0442\u0430 \u043f\u0440\u043e\u0441\u0442\u0430\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043a\u043b\u043e\u043d\u0438\u0440\u0443\u0435\u0442 \u0442\u0435\u043a\u0443\u0449\u0438\u0439 \u043a\u043e\u043d\u0442\u0440\u0430\u043a\u0442 \u0432 \u043d\u043e\u0432\u044b\u0439 \u043a\u043e\u043d\u0442\u0440\u0430\u043a\u0442, \u0447\u0442\u043e\u0431\u044b \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c 100% \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u0443\u044e \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e *\u0411\u0418\u041b\u0415\u0422\u0410*\n\nfunction isContract(address _addr) private view returns (bool OKisContract){\n  uint32 size;\n  assembly {\n    size := extcodesize(_addr)\n  }\n  return (size > 0);\n}\n\n\n\n  //ENG::Event which will be visible in transaction logs in etherscan, and will have result data, whats will be parsed and showed on website\n  //RUS::\u042d\u0432\u0435\u043d\u0442 \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u0443\u0434\u0435\u0442 \u0432\u0438\u0434\u0435\u043d \u0430 \u043b\u043e\u0433\u0430\u0445 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0438, \u0438 \u043e\u0442\u043e\u0431\u0440\u0430\u0437\u0438\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 \u0441 \u043f\u043e\u043b\u0435\u0437\u043d\u044b\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u0434\u043b\u044f \u0430\u043d\u0430\u043b\u0438\u0437\u0430 \u0438 \u043f\u043e\u0441\u043b\u0435 \u0432\u044b\u0432\u043e\u0434\u0430 \u0438\u0445 \u043d\u0430 \u0441\u0430\u0439\u0442\u0435\n  event ok_statusGame(address u_address, string u_key, uint u_bet, uint u_blocknum, string u_ref, string u_blockhash, uint winpoint,uint totalwin);\n\n  struct EntityStruct {\n    address u_address;\n    string u_key;\n    uint u_bet;\n    uint u_blocknum;\n    string u_ref;\n    uint listPointer;\n  }\n\n  mapping(address => EntityStruct) public entityStructs;\n  address[] public entityList;\n\n  function isEntity(address entityAddress) public constant returns(bool isIndeed) {\n    if(entityList.length == 0) return false;\n    return (entityList[entityStructs[entityAddress].listPointer] == entityAddress);\n  }\n\n\n\n\n//ENG::Main function whats called from a website.\n//ENG::To provide best service. performance and support we take DevFee 13.3% of transaction (c1)\n//ENG::Using of *blockhash* function to get HASH of block in which previous player transaction was maded (c2)\n//ENG::to generate TOTALLY random symbols which nobody can know until block is mined (c2)\n//ENG::Used check_result function we get winpoint value (c3)\n//ENG::If winpoint value is 0 or 1 point - player wins 0 ETH (c4)\n//ENG::if winpoint value is 2 then player wins 165% from (BET - 13.3%) (c5)\n//ENG::if winpoint value is 3 then player wins 315% from (BET - 13.3%) (c6)\n//ENG::if winpoint value is 4 then player wins 515% from (BET - 13.3%) (c7)\n//ENG::if winpoint value is 5 then player wins 3333% from (BET - 13.3%) (c8)\n//ENG::If win amount is greater the smartcontract have, then player got 90% of smart contract balance (c9)\n//ENG::On Website before place bet, player will see smartcontract current balance (maximum to wim)\n//ENG::when win amount was calculated it automatically sends to player adress (c10)\n//ENG::After all steps completed, SmartContract will generate message for EVENT,\n//ENG::EVENT Message will have description of current game, and will have those fields which will be displayed on website:\n//ENG::Player Address/ Player provided symbols / Player BET / Block Number Transaction played / Partner id / Little ticket / Player score / Player Win amount / \n//ENG::\u041f\u043e\u043b\u043d\u044b\u0439 \u0430\u0434\u0440\u0435\u0441\u0441 *\u0438\u0433\u0440\u043e\u043a\u0430* / \u0421\u0438\u043c\u0432\u043e\u043b\u044b \u0432\u0432\u0435\u0434\u0435\u043d\u043d\u044b\u0435 \u0438\u0433\u0440\u043e\u043a\u043e\u043c / \u0421\u0442\u0430\u0432\u043a\u0443 / \u041d\u043e\u043c\u0435\u0440 \u0431\u043b\u043e\u043a\u0430 \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u0438\u0433\u0440\u0430\u043b\u0438 / \u0418\u0434 \u043f\u0430\u0440\u0442\u043d\u0451\u0440\u0430 / \u0423\u043a\u043e\u0440\u043e\u0447\u0435\u043d\u043d\u044b\u0439 \u0431\u0438\u043b\u0435\u0442 / \u041e\u0447\u043a\u0438 \u0438\u0433\u0440\u043e\u043a\u0430 / \u0421\u0443\u043c\u043c\u044b \u0432\u044b\u0439\u0433\u0440\u044b\u0448\u0430 / \n//RUS::\u0413\u043b\u0430\u0432\u043d\u0430\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u043d\u0435\u043f\u043e\u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0435\u043d\u043d\u043e \u0441 \u0441\u0430\u0439\u0442\u0430.\n//RUS::\u0427\u0442\u043e\u0431\u044b \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0432\u0430\u0442\u044c \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u0439 \u0441\u0435\u0440\u0432\u0438\u0441, \u0440\u0430\u0437\u0432\u0438\u0432\u0430\u0442\u044c \u0438 \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u0442\u044c \u043d\u043e\u0432\u044b\u0435 \u0438\u0433\u0440\u044b, \u043c\u044b \u0431\u0435\u0440\u0435\u043c \u043a\u043e\u043c\u0438\u0441\u0441\u0438\u044e 13,3% \u043e\u0442 \u0440\u0430\u0437\u043c\u0435\u0440\u0430 \u0441\u0442\u0430\u0432\u043a\u0438 (c1)\n//RUS::\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u0444\u0443\u043d\u043a\u0446\u0438\u044e *blockhash* \u0434\u043b\u044f \u0434\u043e\u0431\u044b\u0447\u0438 \u0445\u0435\u0448\u0430 \u0431\u043b\u043e\u043a\u0430 \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u0431\u044b\u043b\u0430 \u0441\u0434\u0435\u043b\u0430\u043d\u0430 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u044f \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0435\u0433\u043e \u0438\u0433\u0440\u043e\u043a\u0430, (c2)\n//RUS::\u0414\u043b\u044f \u0442\u043e\u0433\u043e, \u0447\u0442\u043e\u0431\u044b \u0434\u043e\u0431\u0438\u0442\u0441\u044f 100% \u0423\u041d\u0418\u041a\u0410\u041b\u042c\u041d\u041e\u0413\u041e *\u0431\u0438\u043b\u0435\u0442\u0430* (c2)\n//RUS::\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c check_result \u0444\u0443\u043d\u043a\u0446\u0438\u044e \u0447\u0442\u043e\u0431\u044b \u0443\u0437\u043d\u0430\u0442\u044c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 winpoint (c3)\n//RUS::\u0415\u0441\u043b\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 winpoint 0 \u0438\u043b\u0438 1 - \u0432\u044b\u0439\u0433\u0440\u044b\u0448 \u0438\u0433\u0440\u043e\u043a\u0430 0 ETH (c4)\n//RUS::\u0415\u0441\u043b\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 winpoint 2 - \u0432\u044b\u0439\u0433\u0440\u044b\u0448 \u0438\u0433\u0440\u043e\u043a\u0430 165% \u043e\u0442 (\u0421\u0422\u0410\u0412\u041a\u0410 - 13.3%) (c5)\n//RUS::\u0415\u0441\u043b\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 winpoint 3 - \u0432\u044b\u0439\u0433\u0440\u044b\u0448 \u0438\u0433\u0440\u043e\u043a\u0430 315% \u043e\u0442 (\u0421\u0422\u0410\u0412\u041a\u0410 - 13.3%) (c6)\n//RUS::\u0415\u0441\u043b\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 winpoint 4 - \u0432\u044b\u0439\u0433\u0440\u044b\u0448 \u0438\u0433\u0440\u043e\u043a\u0430 515% \u043e\u0442 (\u0421\u0422\u0410\u0412\u041a\u0410 - 13.3%) (c7)\n//RUS::\u0415\u0441\u043b\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 winpoint 5 - \u0432\u044b\u0439\u0433\u0440\u044b\u0448 \u0438\u0433\u0440\u043e\u043a\u0430 3333% \u043e\u0442 (\u0421\u0422\u0410\u0412\u041a\u0410 - 13.3%) (c8)\n//RUS::\u0415\u0441\u043b\u0438 \u0441\u0443\u043c\u043c\u0430 \u0432\u044b\u0439\u0433\u0440\u044b\u0448\u0430 \u0431\u043e\u043b\u044c\u0448\u0435 \u0431\u0430\u043b\u0430\u043d\u0441\u0430 \u0441\u043c\u0430\u0440\u0442 \u043a\u043e\u043d\u0442\u0440\u0430\u043a\u0442\u0430, \u0442\u043e \u0438\u0433\u0440\u043e\u043a \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 90% \u043e\u0442 \u0431\u0430\u043b\u0430\u043d\u0441\u0430 \u0441\u043c\u0430\u0440\u0442 \u043a\u043e\u043d\u0442\u0440\u0430\u043a\u0442\u0430 (c9)\n//RUS::\u041d\u0430 \u0441\u0430\u0439\u0442\u0435 \u0438\u0433\u0440\u043e\u043a \u0437\u0430\u0440\u0430\u043d\u0435\u0435 \u0432\u0438\u0434\u0435\u0442 \u0431\u0430\u043b\u0430\u043d\u0441 \u0441\u043c\u0430\u0440\u0442 \u043a\u043e\u043d\u0442\u0440\u0430\u043a\u0442\u0430 \u043d\u0430 \u0442\u0435\u043a\u0443\u0449\u0438\u0439 \u043c\u043e\u043c\u0435\u043d\u0442 (\u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u0439 \u0432\u044b\u0439\u0433\u0440\u044b\u0448)\n//RUS::\u041f\u043e\u0441\u043b\u0435 \u0432\u044b\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u044f \u0441\u0443\u043c\u043c\u044b \u0432\u044b\u0439\u0433\u0440\u044b\u0448\u0430, \u0432\u044b\u0439\u0433\u0440\u044b\u0448\u044c \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u043e\u043c \u043f\u0435\u0440\u0435\u0447\u0438\u0441\u043b\u044f\u0435\u0442\u0441\u044f \u043d\u0430 \u0430\u0434\u0440\u0435\u0441\u0441 \u0438\u0433\u0440\u043e\u043a\u0430 (c10)\n//RUS::\u041f\u043e\u0441\u043b\u0435 \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f \u0432\u0441\u0435\u0445 \u0448\u0430\u0433\u043e\u0432, \u0441\u043c\u0430\u0440\u0442 \u043a\u043e\u043d\u0442\u0440\u0430\u043a\u0442 \u0433\u0435\u043d\u0435\u0440\u0438\u0440\u0443\u0435\u0442 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u0434\u043b\u044f \u042d\u0412\u0415\u041d\u0422\u0410\n//RUS::\u0421\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u042d\u0412\u0415\u041d\u0422\u0410 \u0445\u0440\u0430\u043d\u0438\u0442 \u0432 \u0441\u0435\u0431\u0435 \u043a\u043b\u044e\u0447\u0435\u0432\u044b\u0435 \u043f\u043e\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u0438 \u0441\u044b\u0433\u0440\u0430\u043d\u043e\u0439 \u0438\u0433\u0440\u044b, \u0438 \u043a\u0440\u0430\u0441\u0438\u0432\u043e \u0432 \u043f\u043e\u043d\u044f\u0442\u043d\u043e\u0439 \u0444\u043e\u0440\u043c\u0435 \u0431\u0443\u0434\u0443\u0442 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u044b \u043d\u0430 \u0441\u0430\u0439\u0442\u0435\n//RUS::\u0427\u0442\u043e \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u042d\u0412\u0415\u041d\u0422\u0410:\n//RUS::\u041f\u043e\u043b\u043d\u044b\u0439 \u0430\u0434\u0440\u0435\u0441\u0441 *\u0438\u0433\u0440\u043e\u043a\u0430* / \u0421\u0438\u043c\u0432\u043e\u043b\u044b \u0432\u0432\u0435\u0434\u0435\u043d\u043d\u044b\u0435 \u0438\u0433\u0440\u043e\u043a\u043e\u043c / \u0421\u0442\u0430\u0432\u043a\u0443 / \u041d\u043e\u043c\u0435\u0440 \u0431\u043b\u043e\u043a\u0430 / \u0418\u0434 \u043f\u0430\u0440\u0442\u043d\u0451\u0440\u0430 / \u0423\u043a\u043e\u0440\u043e\u0447\u0435\u043d\u043d\u044b\u0439 \u0431\u0438\u043b\u0435\u0442 / \u041e\u0447\u043a\u0438 \u0438\u0433\u0440\u043e\u043a\u0430 / \u0421\u0443\u043c\u043c\u044b \u0432\u044b\u0439\u0433\u0440\u044b\u0448\u0430 / \n\n\n  function PlayFiveChain(string _u_key, string _u_ref ) public payable returns(bool success) {\n    \n    //ENG::AntiRobot Captcha\n    //RUS::\u041a\u0430\u043f\u0447\u0430 \u043f\u0440\u043e\u0442\u0438\u0432 \u0431\u043e\u0442\u043e\u0432 \n    require(tx.origin == msg.sender);\n    if(isContract(msg.sender))\n    {\n      return;\n    }    \n\n    if(!isEntity(address(this))) \n    {\n      //ENG:need to fill array at first init\n      //RUS:\u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0434\u043b\u044f \u043d\u0430\u0447\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u0437\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u043c\u0430\u0441\u0441\u0438\u0432\u0430\n      \n      entityStructs[address(this)].u_address = msg.sender;\n      entityStructs[address(this)].u_key = _u_key;\n      entityStructs[address(this)].u_bet = msg.value;      \n      entityStructs[address(this)].u_blocknum = block.number;\n      entityStructs[address(this)].u_ref = _u_ref;                        \n      entityStructs[address(this)].listPointer = entityList.push(address(this)) - 1;\n      return true;\n    }\n    else\n    {\n      address(0xdC3df52BB1D116471F18B4931895d91eEefdC2B3).transfer((msg.value/1000)*133); //(c1)          \n      string memory calculate_userhash = substring(blockhashToString(blockhash(entityStructs[address(this)].u_blocknum)),37,42); //(c2)\n      string memory calculate_userhash_to_log = substring(blockhashToString(blockhash(entityStructs[address(this)].u_blocknum)),37,42);//(c2)\n      uint winpoint = check_result(calculate_userhash,_toLower(entityStructs[address(this)].u_key));//(c3)\n      \n\n    if(winpoint == 0)\n    {\n      totalwin = 0; //(c4)\n    }\n    if(winpoint == 1)\n    {\n      totalwin = 0; //(c4)\n    }\n    if(winpoint == 2)\n    {\n      totalwin = ((entityStructs[address(this)].u_bet - (entityStructs[address(this)].u_bet/1000)*133)/100)*165; //(c5)\n    }\n    if(winpoint == 3)\n    {\n      totalwin = ((entityStructs[address(this)].u_bet - (entityStructs[address(this)].u_bet/1000)*133)/100)*315; //(c6)\n    }            \n    if(winpoint == 4)\n    {\n      totalwin = ((entityStructs[address(this)].u_bet - (entityStructs[address(this)].u_bet/1000)*133)/100)*515; //(c7)\n    }\n    if(winpoint == 5)\n    {\n      totalwin = ((entityStructs[address(this)].u_bet - (entityStructs[address(this)].u_bet/1000)*133)/100)*3333; //(c8)\n    } \n\n    if(totalwin > 0)    \n    {\n      if(totalwin > address(this).balance)\n      {\n        totalwin = ((address(this).balance/100)*90); //(c9)\n      }\n      address(entityStructs[address(this)].u_address).transfer(totalwin); //(c10)         \n    }\n\n\n      \n      emit ok_statusGame(entityStructs[address(this)].u_address, entityStructs[address(this)].u_key, entityStructs[address(this)].u_bet, entityStructs[address(this)].u_blocknum, entityStructs[address(this)].u_ref, calculate_userhash_to_log,winpoint,totalwin);      \n      \n      //ENG:: Filling array with current player values\n      //ENG:: In Next time when contract called will be processed previous player data to calculate prize\n      //RUS:: \u0417\u0430\u043f\u043e\u043b\u043d\u044f\u0435\u043c \u043c\u0430\u0441\u0441\u0438\u0432 \u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u0438\u0433\u0440\u043e\u043a\u0430\n      //RUS:: \u041f\u0440\u0438 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u043c \u0432\u044b\u0437\u043e\u0432\u0435 \u043a\u043e\u043d\u0442\u0440\u0430\u043a\u0442\u0430 \u0431\u0443\u0434\u0443\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0441\u044f \u0434\u0430\u043d\u043d\u044b\u0435 \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0435\u0433\u043e \u0438\u0433\u0440\u043e\u043a\u0430 \u0434\u043b\u044f \u0432\u044b\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u044f \u0432\u044b\u0439\u0433\u0440\u044b\u0448\u0430\n      entityStructs[address(this)].u_address = msg.sender;\n      entityStructs[address(this)].u_key = _u_key;\n      entityStructs[address(this)].u_bet = msg.value;      \n      entityStructs[address(this)].u_blocknum = block.number;\n      entityStructs[address(this)].u_ref = _u_ref;                        \n    }\n    return;\n  }\n\n}", "debug": "mem_160 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_playFive_4 + calldata_playFive_4)) +\n32 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_playFive_4 + calldata_playFive_32 + 4)): 0xe2240c073350198c7e1fe6a188343fffffffbbc5606fffffffffffffffffffa0\ncalldata_playFive_4 + calldata_playFive_32 + 4: 0xe728cbd10097e51a790002e0afffffffffffffffffffffffffffffffffffffe1\ncalldata_playFive_4 + calldata_playFive_4: 0x469e07d63c0ba14e849f5e157670afbffffc443a9f8fffffffffffffffffff61\ncalldata_playFive_0: 0x22400b7800000000000000000000000000000000000000000000000000000000\ncalldatasize_playFive: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `check_result(string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/17/0x5d04fd11b62cdf31f67b16a392cb05e00182c522.sol", "function": "check_result(string,string)", "lineno": 8, "title": "Integer Overflow ", "type": "Warning"}, {"address": 11196, "code": "\u043c \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435\n  address private creator;\n  string private message;\n  string private message_details;\n  string private referal;\n  uint private totalBalance; \n  uint public totalwin;\n  \n  //ENG::\u0421onstructor\n  //\u041a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0442\u043e\u0440\n  /*\n  constructor() public {\n\n    creator = tx.origin;   \n    message = 'initiated';\n  }\n  */\n\n\n  \n\n\n  //ENG::Function that show Creator adress\n  //RUS::\u0424\u0443\u043d\u043a\u0446\u0438\u044f \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043e\u0442\u043e\u0431\u0440\u0430\u0437\u0438\u0442 \u0430\u0434\u0440\u0435\u0441\u0441 \u0441\u043e\u0437\u0434\u0430\u0442\u0435\u043b\u044f \u043a\u043e\u043d\u0442\u0440\u0430\u043a\u0442\u0430\n  function getCreator() public constant returns(address) {\n    return creator;\n  }\n\n  //ENG::Function that show SmarrtContract Balance\n  //\u0424\u0443\u043d\u043a\u0446\u0438\u044f \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043e\u0442\u043e\u0431\u0440\u0430\u0437\u0438\u0442 \u0411\u0430\u043b\u0430\u043d\u0441 \u0421\u043c\u0430\u0440\u0442\u041a\u043e\u043d\u0442\u0440\u0430\u043a\u0442\u0430\n  function getTotalBalance() public constant returns(uint) {\n    return address(this).balance;\n  }  \n  \n\n//ENG::One of the best way to compare two strings converted to bytes\n//ENG::Function will check length and if bytes length is same then calculate hash of strings and compare it, (a1)\n//ENG::if strings the same, return true, otherwise return false (a2)\n//RUS::\u041e\u0434\u0438\u043d \u0438\u0437 \u043b\u0443\u0447\u0448\u0438\u0445 \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u043e\u0432 \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044f \u0441\u0442\u0440\u0438\u043d\u0433 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445 \u0441\u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0435 \u0430 \u0431\u0430\u0439\u0442\u044b\n//RUS::\u0421\u043d\u0430\u0447\u0430\u043b\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0441\u0440\u0430\u0432\u043d\u0438\u0432\u0430\u0435\u0442 \u0434\u043b\u0438\u043d\u043d\u0443 \u0431\u0430\u0439\u0442\u043a\u043e\u0434\u0430 \u0438 \u043f\u043e\u0441\u043b\u043a \u0438\u0445 \u0445\u044d\u0448 (a1)\n//RUS::\u0415\u0441\u043b\u0438 \u0445\u044d\u0448 \u043e\u0434\u0438\u043d\u0430\u043a\u043e\u0432\u044b\u0439, \u0442\u043e \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 true, \u0438\u043d\u0430\u0447\u0435 - false (a2)\n\nfunction hashCompareWithLengthCheck(string a, string b) internal pure returns (bool) {\n    if(bytes(a).length != bytes(b).length) { //(a1)\n        return false;\n    } else {\n        return keccak256(abi.encodePacked(a)) == keccak256(abi.encodePacked(b)); //(a2)\n    }\n}\n\n//ENG::Function that calculate Wining points\n//ENG::After we get our *play ticket* adress, we take last 5 chars of it and game is on\n//ENG::sendTXTpsTX - main game function, send to this function *play ticket* code and player entered symbols \n//ENG::function starting setted initiated results to nothing (b1)\n//ENG::Then converting strings to bytes, so we can run throung each symbol (b2)\n//ENG::Also we set initial winpoint to 0 (b3)\n//ENG::Then we run throught each symbol in *play ticket* and compare it with player entered symbols\n//ENG::player entered symbols maximum length also is five\n//ENG::if function found a match using *hashCompareWithLengthCheck* function, then\n//ENG::function add to event message details, that shows whats symbols are found whith player entered symbols (b4)\n//ENG::replace used symbols in *player ticket* and entered symbols on X and Y so they no more used in game process (b5)\n//ENG::and increase winpoit by 1 (b6)\n//ENG::after function complete, it return winpoint from 0 - 5 (b7)\n//RUS::\u0424\u0443\u043d\u043a\u0446\u0438\u044f \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0432\u044b\u0441\u0447\u0438\u0442\u044b\u0432\u0430\u0435\u0442 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043e\u0447\u043a\u043e\u0432\n//RUS::\u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0430\u0434\u0440\u0435\u0441\u0430 *\u0431\u0438\u043b\u0435\u0442\u0430*, \u043c\u044b \u0431\u0435\u0440\u0435\u043c \u0435\u0433\u043e \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0438 5 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432 \u0438 \u0438\u0433\u0440\u0430 \u043d\u0430\u0447\u0430\u043b\u0430\u0441\u044c\n//RUS::sendTXTpsTX - \u0433\u043b\u0430\u0432\u043d\u0430\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0438\u0433\u0440\u044b, \u0448\u043b\u0451\u0442 \u044d\u0442\u043e\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u0441\u0438\u043c\u0432\u043e\u043b\u044b \u0431\u0438\u043b\u0435\u0442\u0430 \u0438 \u0441\u0438\u043c\u0432\u043e\u043b\u044b \u0432\u0432\u0435\u0434\u0435\u043d\u044b\u0435 \u0438\u0433\u0440\u043e\u043a\u043e\u043c\n//RUS::\u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0441\u043d\u0430\u0447\u0430\u043b\u043e \u043e\u0431\u043d\u0443\u043b\u044f\u0435\u0442 \u0434\u0435\u0442\u0430\u043b\u0438 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 (b1)\n//RUS::\u041f\u043e\u0441\u043b\u0435 \u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0438\u0440\u0443\u0435\u0442 *\u0431\u0438\u043b\u0435\u0442* \u0438 \u0441\u0438\u043c\u0432\u043e\u043b\u044b \u0438\u0433\u0440\u043e\u043a\u0430 \u0432 \u0431\u0430\u0439\u0442\u044b, \u0447\u0442\u043e\u0431\u044b \u043c\u043e\u0436\u043d\u043e \u0431\u044b\u043b\u043e \u043f\u0440\u043e\u0439\u0442\u0438 \u043f\u043e \u0441\u0438\u043c\u0432\u043e\u043b\u0430\u043c (b2)\n//RUS::\u0422\u0430\u043a\u0436\u0435 \u0441\u0442\u0430\u0432\u0438\u043c \u043d\u0430\u0447\u0430\u043b\u044c\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043e\u0447\u043a\u043e\u0432 \u043d\u0430 0 (b3)\n//RUS::\u0414\u0430\u043b\u0435\u0435 \u043c\u044b \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c \u0441\u043e\u0432\u043f\u0430\u0434\u0430\u044e\u0442 \u043b\u0438 \u0441\u0438\u043c\u0432\u043e\u043b\u044b *\u0431\u0438\u043b\u0435\u0442\u0430* \u0441 \u0441\u0438\u043c\u0432\u043e\u043b\u0430\u043c\u0438 \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0432\u0432\u0435\u043b \u0438\u0433\u0440\u043e\u043a\n//RUS::\u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u043b\u0438\u043d\u043d\u0430 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432 \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0432\u0432\u043e\u0434\u0438\u0442 \u0438\u0433\u0440\u043e\u043a, \u0442\u043e\u0436\u0435 5.\n//RUS::\u0415\u0441\u043b\u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043d\u0430\u0445\u043e\u0434\u0438\u0442 \u0441\u043e\u0432\u043f\u0430\u0434\u0435\u043d\u0438\u0435 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0444\u0443\u043d\u043a\u0446\u0438\u0438 *hashCompareWithLengthCheck*, \u0442\u043e\n//RUS::\u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u043a \u044d\u0432\u044d\u043d\u0442\u0443 \u0434\u0435\u0442\u0430\u043b\u044c\u043d\u043e\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u043e \u0442\u043e\u043c, \u043a\u0430\u043a\u0438\u0435 \u0441\u0438\u043c\u0432\u043e\u043b\u044b \u0431\u044b\u043b\u0438 \u043d\u0430\u0439\u0434\u0435\u043d\u044b (b4)\n//RUS::\u0417\u0430\u043c\u0435\u043d\u044f\u0435\u0442 \u043d\u0430\u0439\u0434\u0435\u043d\u043d\u044b\u0435 \u0441\u0438\u043c\u0432\u043e\u043b\u044b \u0432 *\u0431\u0438\u043b\u0435\u0442\u0435* \u0438 *\u043a\u043b\u044e\u0447\u0435* \u043d\u0430 X \u0438 Y \u0438 \u043e\u043d\u0438 \u0431\u043e\u043b\u0435\u0435 \u043d\u0435 \u0443\u0447\u0430\u0441\u0442\u0432\u0443\u044e\u0442 \u0432 \u0438\u0433\u0440\u0435 (b5)\n//RUS::\u0423\u0432\u0435\u043b\u0438\u0447\u0438\u0432\u0430\u0435\u0442 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0431\u0430\u043b\u043b\u043e\u0432 winpoint \u043d\u0430 1 (b6)\n//RUS::\u041f\u043e \u0437\u0432\u044b\u0435\u0440\u0448\u0435\u043d\u0438\u044e, \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 winpoint \u043e\u0442 0 \u0434\u043e 5 (b7)\nfunction check_result(string ticket, string check) public  returns (uint) {\n  message_details = \"\"; //(b1)\n    bytes memory ticketBytes = bytes(ticket); //(b2)\n    bytes memory checkBytes = bytes(check);   //(b2) \n    uint winpoint = 0; //(b3)\n\n\n    for (uint i=0; i < 5; i++){\n\n      for (uint j=0; j < 5; j++){\n\n        if(hashCompareWithLengthCheck(string(abi.encodePacked(ticketBytes[j])),string(abi.encodePacked(checkBytes[i]))))\n        {\n          message_details = string(abi.encodePacked(message_details,'*',ticketBytes[j],'**',checkBytes[i])); //(b4)\n          ticketBytes[j] =\"X\"; //(b5)\n          checkBytes[i] = \"Y\"; //(b5)\n\n          winpoint = winpoint+1; //(b6)         \n        }\n       \n      }\n\n    }    \n    return uint(winpoint); //(b7)\n  }\n\n//ENG::Function destroy this smartContract\n//ENG::Thats needed in case if we create new game, to take founds from it and add to new game \n//ENG::Or also it need if we see that current game not so actual, and we need to transfer founds to a new game, that more popular\n//ENG::Or in case if we found any critical bug, to take founds in safe place, while fixing bugs.\n//RUS::\u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0434\u043b\u044f \u0443\u043d\u0438\u0447\u0442\u043e\u0436\u0435\u043d\u0438\u044f \u0441\u043c\u0430\u0440\u0442 \u043a\u043e\u043d\u0442\u0440\u0430\u043a\u0442\u0430\n//RUS::\u042d\u0442\u043e \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e, \u0447\u0442\u043e\u0431\u044b \u043f\u0440\u0438 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0438 \u043d\u043e\u0432\u044b\u0445 \u0438\u0433\u0440, \u043c\u043e\u0436\u043d\u043e \u0431\u044b\u043b\u043e \u0440\u0430\u0437\u0434\u0435\u043b\u0438\u0442\u044c \u0411\u0430\u043b\u0430\u043d\u0441 \u0442\u0435\u043a\u0443\u0449\u0435\u0439 \u0438\u0433\u0440\u044b \u0441 \u043d\u043e\u0432\u043e\u0439 \u0438\u0433\u0440\u043e\u0439\n//RUS::\u0418\u043b\u0438 \u0435\u0441\u043b\u0438 \u043f\u0440\u0438 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0438 \u043d\u043e\u0432\u044b\u0445 \u0438\u0433\u0440, \u044d\u0442\u0430 \u043f\u043e\u0442\u0435\u0440\u044f\u0435\u0442 \u0441\u0432\u043e\u044e \u0430\u043a\u0442\u0443\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u044c\n//RUS::\u041b\u0438\u0431\u043e \u043f\u0440\u0438 \u043e\u0431\u043d\u0430\u0440\u0443\u0436\u0435\u043d\u0438\u0438 \u043a\u0440\u0438\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u0431\u0430\u0433\u043e\u0435, \u043f\u0435\u0440\u0435\u0432\u0435\u0441\u0442\u0438 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430 \u0432 \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u0442\u043d\u043e\u0435 \u043c\u0435\u0441\u0442\u043e \u043d\u0430 \u0432\u0440\u0435\u043c\u044f \u0438\u0441\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043e\u0448\u0438\u0431\u043e\u043a\n  function resetGame () public {\n    if (msg.sender == creator) { \n      selfdestruct(0xdC3df52BB1D116471F18B4931895d91eEefdC2B3); \n      return;\n    }\n  }\n\n//ENG::Function to substring provided string from provided start position until end position\n//ENG::It's need to tak last 5 characters from *ticket* adress\n//RUS::\u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0434\u043b\u044f \u043e\u0431\u0440\u0435\u0437\u0430\u043d\u0438\u044f \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0438 \u0441 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0439 \u043f\u043e\u0437\u0438\u0446\u0438\u0438 \u0434\u043e \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0439 \u043a\u043e\u043d\u0435\u0447\u043d\u043e\u0439 \u043f\u043e\u0437\u0438\u0446\u0438\u0438\n//RUS::\u042d\u0442\u043e \u043d\u0430\u0434\u043e, \u0447\u0442\u043e\u0431\u044b \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0435 5 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432 \u0441 \u0430\u0434\u0440\u0435\u0441\u0441\u0430 *\u0431\u0438\u043b\u0435\u0442\u0430*\nfunction substring(string str, uint startIndex, uint endIndex) public pure returns (string) {\n    bytes memory strBytes = bytes(str);\n    bytes memory result = new bytes(endIndex-startIndex);\n    for(uint i = startIndex; i < endIndex; i++) {\n        result[i-startIndex] = strBytes[i];\n    }\n    return string(result);\n  }\n\n//ENG::Also very useful function, to make all symbols in string to lowercase\n//ENG::That need in case to lowercase *TICKET* adress and Player provided symbols\n//ENG::Because adress can be 0xasdf...FFDDEE123 and player can provide ACfE4. but we all convert to one format. lowercase\n//RUS::\u0422\u043e\u0436\u0435 \u043e\u0447\u0435\u043d\u044c \u043f\u043e\u043b\u0435\u0437\u043d\u0430\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u044f, \u0447\u0442\u043e\u0431\u044b \u043f\u0435\u0440\u0435\u0432\u0435\u0441\u0442\u0438 \u0432\u0441\u0435 \u0441\u0438\u043c\u0432\u043e\u043b\u044b \u0432 \u043d\u0438\u0436\u043d\u0438\u0439 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\n//RUS::\u042d\u0442\u043e \u043d\u0430\u0434\u043e, \u0447\u0442\u043e\u0431\u044b \u043f\u0440\u0438\u0432\u0435\u0441\u0442\u0438 \u0432 \u0435\u0434\u0438\u043d\u044b\u0439 \u0444\u043e\u0440\u043c\u0430\u0442 \u0432\u0441\u0435 \u0442\u0430\u043a\u0438\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 \u043a\u0430\u043a *\u0411\u0438\u043b\u0435\u0442* \u0438 *\u041a\u043b\u044e\u0447*\n//RUS::\u0422\u0430\u043a \u043a\u0430\u043a \u0430\u0434\u0440\u0435\u0441\u0441 \u0431\u0438\u043b\u0435\u0442\u0430 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c 0xasdf...FFDDEE123, \u0430 \u0442\u0430\u043a\u0436\u0435 \u0438\u0433\u0440\u043e\u043a \u043c\u043e\u0436\u0435\u0442 \u0432\u0432\u0435\u0441\u0442\u0438 ACfE4.\n\tfunction _toLower(string str) internal pure returns (string) {\n\t\tbytes memory bStr = bytes(str);\n\t\tbytes memory bLower = new bytes(bStr.length);\n\t\tfor (uint i = 0; i < bStr.length; i++) {\n\t\t\t// Uppercase character...\n\t\t\tif ((bStr[i] >= 65) && (bStr[i] <= 90)) {\n\t\t\t\t// So we add 32 to make it lowercase\n\t\t\t\tbLower[i] = bytes1(int(bStr[i]) + 32);\n\t\t\t} else {\n\t\t\t\tbLower[i] = bStr[i];\n\t\t\t}\n\t\t}\n\t\treturn string(bLower);\n\t}\n\n  //ENG::Standart Function to receive founds\n  //RUS::\u0421\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u0430\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0434\u043b\u044f \u043f\u0440\u0438\u0451\u043c\u0430 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\n  function () payable public {\n    //RECEIVED    \n  }\n\n  //ENG::Converts adress type into string\n  //ENG::Used to convert *TICKET* adress into string\n  //RUS::\u041a\u043e\u043d\u0432\u0435\u0440\u0442\u0438\u0440\u0443\u0435\u0442 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e \u0442\u0438\u043f\u0430 adress \u0432 \u0441\u0442\u0440\u043e\u043a\u0443 string\n  //RUS::\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0430\u0446\u0438\u0438 \u0430\u0434\u0440\u0435\u0441\u0430 *\u0431\u0438\u043b\u0435\u0442\u0430* \u0432 \u0441\u0442\u0440\u043e\u043a\u0443 string\n  \nfunction addressToString(address _addr) public pure returns(string) {\n    bytes32 value = bytes32(uint256(_addr));\n    bytes memory alphabet = \"0123456789abcdef\";\n\n    bytes memory str = new bytes(42);\n    str[0] = '0';\n    str[1] = 'x';\n    for (uint i = 0; i < 20; i++) {\n        str[2+i*2] = alphabet[uint(value[i + 12] >> 4)];\n        str[3+i*2] = alphabet[uint(value[i + 12] & 0x0f)];\n    }\n    return string(str);\n}\n\n\n  //ENG::Get last blockhash symbols and converts into string\n  //ENG::Used to convert *TICKET* hash into string\n  //RUS::\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u043c\u043e\u043d\u0432\u0435\u0440\u0442\u0438\u0440\u0443\u0435\u0442 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e \u0442\u0438\u043f\u0430 adress \u0432 \u0441\u0442\u0440\u043e\u043a\u0443 string\n  //RUS::\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0430\u0446\u0438\u0438 \u0430\u0434\u0440\u0435\u0441\u0430 *\u0431\u0438\u043b\u0435\u0442\u0430* \u0432 \u0441\u0442\u0440\u043e\u043a\u0443 string\n\nfunction blockhashToString(bytes32 _blockhash_to_decode) public pure returns(string) {\n    bytes32 value = _blockhash_to_decode;\n    bytes memory alphabet = \"0123456789abcdef\";\n\n    bytes memory str = new bytes(42);\n    str[0] = '0';\n    str[1] = 'x';\n    for (uint i = 0; i < 20; i++) {\n        str[2+i*2] = alphabet[uint(value[i + 12] >> 4)];\n        str[3+i*2] = alphabet[uint(value[i + 12] & 0x0f)];\n    }\n    return string(str);\n}\n\n  //ENG::Converts uint type into STRING to show data in human readable format\n  //RUS::\u041a\u043e\u043d\u0432\u0435\u0440\u0442\u0438\u0440\u0443\u0435\u0442 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e uint \u0432 \u0441\u0442\u0440\u043e\u043a\u0443 string \u0447\u0442\u043e\u0431\u044b \u043e\u0442\u043e\u0431\u0440\u0430\u0437\u0438\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u0435 \u0432 \u043f\u043e\u043d\u044f\u0442\u043d\u043e\u043c \u0434\u043b\u044f \u0447\u0435\u043b\u043e\u0432\u0435\u043a\u0430 \u0444\u043e\u0440\u043c\u0430\u0442\u0435\nfunction uint2str(uint i) internal pure returns (string){\n    if (i == 0) return \"0\";\n    uint j = i;\n    uint length;\n    while (j != 0){\n        length++;\n        j /= 10;\n    }\n    bytes memory bstr = new bytes(length);\n    uint k = length - 1;\n    while (i != 0){\n        bstr[k--] = byte(48 + i % 10);\n        i /= 10;\n    }\n    return string(bstr);\n}\n\n\n//ENG::This simple function, clone existing contract into new contract, to gain TOTALLY UNICALLY random string of *TICKET*\n//RUS::\u042d\u0442\u0430 \u043f\u0440\u043e\u0441\u0442\u0430\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043a\u043b\u043e\u043d\u0438\u0440\u0443\u0435\u0442 \u0442\u0435\u043a\u0443\u0449\u0438\u0439 \u043a\u043e\u043d\u0442\u0440\u0430\u043a\u0442 \u0432 \u043d\u043e\u0432\u044b\u0439 \u043a\u043e\u043d\u0442\u0440\u0430\u043a\u0442, \u0447\u0442\u043e\u0431\u044b \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c 100% \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u0443\u044e \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e *\u0411\u0418\u041b\u0415\u0422\u0410*\n\nfunction isContract(address _addr) private view returns (bool OKisContract){\n  uint32 size;\n  assembly {\n    size := extcodesize(_addr)\n  }\n  return (size > 0);\n}\n\n\n\n  //ENG::Event which will be visible in transaction logs in etherscan, and will have result data, whats will be parsed and showed on website\n  //RUS::\u042d\u0432\u0435\u043d\u0442 \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u0443\u0434\u0435\u0442 \u0432\u0438\u0434\u0435\u043d \u0430 \u043b\u043e\u0433\u0430\u0445 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0438, \u0438 \u043e\u0442\u043e\u0431\u0440\u0430\u0437\u0438\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 \u0441 \u043f\u043e\u043b\u0435\u0437\u043d\u044b\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u0434\u043b\u044f \u0430\u043d\u0430\u043b\u0438\u0437\u0430 \u0438 \u043f\u043e\u0441\u043b\u0435 \u0432\u044b\u0432\u043e\u0434\u0430 \u0438\u0445 \u043d\u0430 \u0441\u0430\u0439\u0442\u0435\n  event ok_statusGame(address u_address, string u_key, uint u_bet, uint u_blocknum, string u_ref, string u_blockhash, uint winpoint,uint totalwin);\n\n  struct EntityStruct {\n    address u_address;\n    string u_key;\n    uint u_bet;\n    uint u_blocknum;\n    string u_ref;\n    uint listPointer;\n  }\n\n  mapping(address => EntityStruct) public entityStructs;\n  address[] public entityList;\n\n  function isEntity(address entityAddress) public constant returns(bool isIndeed) {\n    if(entityList.length == 0) return false;\n    return (entityList[entityStructs[entityAddress].listPointer] == entityAddress);\n  }\n\n\n\n\n//ENG::Main function whats called from a website.\n//ENG::To provide best service. performance and support we take DevFee 13.3% of transaction (c1)\n//ENG::Using of *blockhash* function to get HASH of block in which previous player transaction was maded (c2)\n//ENG::to generate TOTALLY random symbols which nobody can know until block is mined (c2)\n//ENG::Used check_result function we get winpoint value (c3)\n//ENG::If winpoint value is 0 or 1 point - player wins 0 ETH (c4)\n//ENG::if winpoint value is 2 then player wins 165% from (BET - 13.3%) (c5)\n//ENG::if winpoint value is 3 then player wins 315% from (BET - 13.3%) (c6)\n//ENG::if winpoint value is 4 then player wins 515% from (BET - 13.3%) (c7)\n//ENG::if winpoint value is 5 then player wins 3333% from (BET - 13.3%) (c8)\n//ENG::If win amount is greater the smartcontract have, then player got 90% of smart contract balance (c9)\n//ENG::On Website before place bet, player will see smartcontract current balance (maximum to wim)\n//ENG::when win amount was calculated it automatically sends to player adress (c10)\n//ENG::After all steps completed, SmartContract will generate message for EVENT,\n//ENG::EVENT Message will have description of current game, and will have those fields which will be displayed on website:\n//ENG::Player Address/ Player provided symbols / Player BET / Block Number Transaction played / Partner id / Little ticket / Player score / Player Win amount / \n//ENG::\u041f\u043e\u043b\u043d\u044b\u0439 \u0430\u0434\u0440\u0435\u0441\u0441 *\u0438\u0433\u0440\u043e\u043a\u0430* / \u0421\u0438\u043c\u0432\u043e\u043b\u044b \u0432\u0432\u0435\u0434\u0435\u043d\u043d\u044b\u0435 \u0438\u0433\u0440\u043e\u043a\u043e\u043c / \u0421\u0442\u0430\u0432\u043a\u0443 / \u041d\u043e\u043c\u0435\u0440 \u0431\u043b\u043e\u043a\u0430 \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u0438\u0433\u0440\u0430\u043b\u0438 / \u0418\u0434 \u043f\u0430\u0440\u0442\u043d\u0451\u0440\u0430 / \u0423\u043a\u043e\u0440\u043e\u0447\u0435\u043d\u043d\u044b\u0439 \u0431\u0438\u043b\u0435\u0442 / \u041e\u0447\u043a\u0438 \u0438\u0433\u0440\u043e\u043a\u0430 / \u0421\u0443\u043c\u043c\u044b \u0432\u044b\u0439\u0433\u0440\u044b\u0448\u0430 / \n//RUS::\u0413\u043b\u0430\u0432\u043d\u0430\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u043d\u0435\u043f\u043e\u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0435\u043d\u043d\u043e \u0441 \u0441\u0430\u0439\u0442\u0430.\n//RUS::\u0427\u0442\u043e\u0431\u044b \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0432\u0430\u0442\u044c \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u0439 \u0441\u0435\u0440\u0432\u0438\u0441, \u0440\u0430\u0437\u0432\u0438\u0432\u0430\u0442\u044c \u0438 \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u0442\u044c \u043d\u043e\u0432\u044b\u0435 \u0438\u0433\u0440\u044b, \u043c\u044b \u0431\u0435\u0440\u0435\u043c \u043a\u043e\u043c\u0438\u0441\u0441\u0438\u044e 13,3% \u043e\u0442 \u0440\u0430\u0437\u043c\u0435\u0440\u0430 \u0441\u0442\u0430\u0432\u043a\u0438 (c1)\n//RUS::\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u0444\u0443\u043d\u043a\u0446\u0438\u044e *blockhash* \u0434\u043b\u044f \u0434\u043e\u0431\u044b\u0447\u0438 \u0445\u0435\u0448\u0430 \u0431\u043b\u043e\u043a\u0430 \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u0431\u044b\u043b\u0430 \u0441\u0434\u0435\u043b\u0430\u043d\u0430 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u044f \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0435\u0433\u043e \u0438\u0433\u0440\u043e\u043a\u0430, (c2)\n//RUS::\u0414\u043b\u044f \u0442\u043e\u0433\u043e, \u0447\u0442\u043e\u0431\u044b \u0434\u043e\u0431\u0438\u0442\u0441\u044f 100% \u0423\u041d\u0418\u041a\u0410\u041b\u042c\u041d\u041e\u0413\u041e *\u0431\u0438\u043b\u0435\u0442\u0430* (c2)\n//RUS::\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c check_result \u0444\u0443\u043d\u043a\u0446\u0438\u044e \u0447\u0442\u043e\u0431\u044b \u0443\u0437\u043d\u0430\u0442\u044c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 winpoint (c3)\n//RUS::\u0415\u0441\u043b\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 winpoint 0 \u0438\u043b\u0438 1 - \u0432\u044b\u0439\u0433\u0440\u044b\u0448 \u0438\u0433\u0440\u043e\u043a\u0430 0 ETH (c4)\n//RUS::\u0415\u0441\u043b\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 winpoint 2 - \u0432\u044b\u0439\u0433\u0440\u044b\u0448 \u0438\u0433\u0440\u043e\u043a\u0430 165% \u043e\u0442 (\u0421\u0422\u0410\u0412\u041a\u0410 - 13.3%) (c5)\n//RUS::\u0415\u0441\u043b\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 winpoint 3 - \u0432\u044b\u0439\u0433\u0440\u044b\u0448 \u0438\u0433\u0440\u043e\u043a\u0430 315% \u043e\u0442 (\u0421\u0422\u0410\u0412\u041a\u0410 - 13.3%) (c6)\n//RUS::\u0415\u0441\u043b\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 winpoint 4 - \u0432\u044b\u0439\u0433\u0440\u044b\u0448 \u0438\u0433\u0440\u043e\u043a\u0430 515% \u043e\u0442 (\u0421\u0422\u0410\u0412\u041a\u0410 - 13.3%) (c7)\n//RUS::\u0415\u0441\u043b\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 winpoint 5 - \u0432\u044b\u0439\u0433\u0440\u044b\u0448 \u0438\u0433\u0440\u043e\u043a\u0430 3333% \u043e\u0442 (\u0421\u0422\u0410\u0412\u041a\u0410 - 13.3%) (c8)\n//RUS::\u0415\u0441\u043b\u0438 \u0441\u0443\u043c\u043c\u0430 \u0432\u044b\u0439\u0433\u0440\u044b\u0448\u0430 \u0431\u043e\u043b\u044c\u0448\u0435 \u0431\u0430\u043b\u0430\u043d\u0441\u0430 \u0441\u043c\u0430\u0440\u0442 \u043a\u043e\u043d\u0442\u0440\u0430\u043a\u0442\u0430, \u0442\u043e \u0438\u0433\u0440\u043e\u043a \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 90% \u043e\u0442 \u0431\u0430\u043b\u0430\u043d\u0441\u0430 \u0441\u043c\u0430\u0440\u0442 \u043a\u043e\u043d\u0442\u0440\u0430\u043a\u0442\u0430 (c9)\n//RUS::\u041d\u0430 \u0441\u0430\u0439\u0442\u0435 \u0438\u0433\u0440\u043e\u043a \u0437\u0430\u0440\u0430\u043d\u0435\u0435 \u0432\u0438\u0434\u0435\u0442 \u0431\u0430\u043b\u0430\u043d\u0441 \u0441\u043c\u0430\u0440\u0442 \u043a\u043e\u043d\u0442\u0440\u0430\u043a\u0442\u0430 \u043d\u0430 \u0442\u0435\u043a\u0443\u0449\u0438\u0439 \u043c\u043e\u043c\u0435\u043d\u0442 (\u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u0439 \u0432\u044b\u0439\u0433\u0440\u044b\u0448)\n//RUS::\u041f\u043e\u0441\u043b\u0435 \u0432\u044b\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u044f \u0441\u0443\u043c\u043c\u044b \u0432\u044b\u0439\u0433\u0440\u044b\u0448\u0430, \u0432\u044b\u0439\u0433\u0440\u044b\u0448\u044c \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u043e\u043c \u043f\u0435\u0440\u0435\u0447\u0438\u0441\u043b\u044f\u0435\u0442\u0441\u044f \u043d\u0430 \u0430\u0434\u0440\u0435\u0441\u0441 \u0438\u0433\u0440\u043e\u043a\u0430 (c10)\n//RUS::\u041f\u043e\u0441\u043b\u0435 \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f \u0432\u0441\u0435\u0445 \u0448\u0430\u0433\u043e\u0432, \u0441\u043c\u0430\u0440\u0442 \u043a\u043e\u043d\u0442\u0440\u0430\u043a\u0442 \u0433\u0435\u043d\u0435\u0440\u0438\u0440\u0443\u0435\u0442 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u0434\u043b\u044f \u042d\u0412\u0415\u041d\u0422\u0410\n//RUS::\u0421\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u042d\u0412\u0415\u041d\u0422\u0410 \u0445\u0440\u0430\u043d\u0438\u0442 \u0432 \u0441\u0435\u0431\u0435 \u043a\u043b\u044e\u0447\u0435\u0432\u044b\u0435 \u043f\u043e\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u0438 \u0441\u044b\u0433\u0440\u0430\u043d\u043e\u0439 \u0438\u0433\u0440\u044b, \u0438 \u043a\u0440\u0430\u0441\u0438\u0432\u043e \u0432 \u043f\u043e\u043d\u044f\u0442\u043d\u043e\u0439 \u0444\u043e\u0440\u043c\u0435 \u0431\u0443\u0434\u0443\u0442 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u044b \u043d\u0430 \u0441\u0430\u0439\u0442\u0435\n//RUS::\u0427\u0442\u043e \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u042d\u0412\u0415\u041d\u0422\u0410:\n//RUS::\u041f\u043e\u043b\u043d\u044b\u0439 \u0430\u0434\u0440\u0435\u0441\u0441 *\u0438\u0433\u0440\u043e\u043a\u0430* / \u0421\u0438\u043c\u0432\u043e\u043b\u044b \u0432\u0432\u0435\u0434\u0435\u043d\u043d\u044b\u0435 \u0438\u0433\u0440\u043e\u043a\u043e\u043c / \u0421\u0442\u0430\u0432\u043a\u0443 / \u041d\u043e\u043c\u0435\u0440 \u0431\u043b\u043e\u043a\u0430 / \u0418\u0434 \u043f\u0430\u0440\u0442\u043d\u0451\u0440\u0430 / \u0423\u043a\u043e\u0440\u043e\u0447\u0435\u043d\u043d\u044b\u0439 \u0431\u0438\u043b\u0435\u0442 / \u041e\u0447\u043a\u0438 \u0438\u0433\u0440\u043e\u043a\u0430 / \u0421\u0443\u043c\u043c\u044b \u0432\u044b\u0439\u0433\u0440\u044b\u0448\u0430 / \n\n\n  function PlayFiveChain(string _u_key, string _u_ref ) public payable returns(bool success) {\n    \n    //ENG::AntiRobot Captcha\n    //RUS::\u041a\u0430\u043f\u0447\u0430 \u043f\u0440\u043e\u0442\u0438\u0432 \u0431\u043e\u0442\u043e\u0432 \n    require(tx.origin == msg.sender);\n    if(isContract(msg.sender))\n    {\n      return;\n    }    \n\n    if(!isEntity(address(this))) \n    {\n      //ENG:need to fill array at first init\n      //RUS:\u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0434\u043b\u044f \u043d\u0430\u0447\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u0437\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u043c\u0430\u0441\u0441\u0438\u0432\u0430\n      \n      entityStructs[address(this)].u_address = msg.sender;\n      entityStructs[address(this)].u_key = _u_key;\n      entityStructs[address(this)].u_bet = msg.value;      \n      entityStructs[address(this)].u_blocknum = block.number;\n      entityStructs[address(this)].u_ref = _u_ref;                        \n      entityStructs[address(this)].listPointer = entityList.push(address(this)) - 1;\n      return true;\n    }\n    else\n    {\n      address(0xdC3df52BB1D116471F18B4931895d91eEefdC2B3).transfer((msg.value/1000)*133); //(c1)          \n      string memory calculate_userhash = substring(blockhashToString(blockhash(entityStructs[address(this)].u_blocknum)),37,42); //(c2)\n      string memory calculate_userhash_to_log = substring(blockhashToString(blockhash(entityStructs[address(this)].u_blocknum)),37,42);//(c2)\n      uint winpoint = check_result(calculate_userhash,_toLower(entityStructs[address(this)].u_key));//(c3)\n      \n\n    if(winpoint == 0)\n    {\n      totalwin = 0; //(c4)\n    }\n    if(winpoint == 1)\n    {\n      totalwin = 0; //(c4)\n    }\n    if(winpoint == 2)\n    {\n      totalwin = ((entityStructs[address(this)].u_bet - (entityStructs[address(this)].u_bet/1000)*133)/100)*165; //(c5)\n    }\n    if(winpoint == 3)\n    {\n      totalwin = ((entityStructs[address(this)].u_bet - (entityStructs[address(this)].u_bet/1000)*133)/100)*315; //(c6)\n    }            \n    if(winpoint == 4)\n    {\n      totalwin = ((entityStructs[address(this)].u_bet - (entityStructs[address(this)].u_bet/1000)*133)/100)*515; //(c7)\n    }\n    if(winpoint == 5)\n    {\n      totalwin = ((entityStructs[address(this)].u_bet - (entityStructs[address(this)].u_bet/1000)*133)/100)*3333; //(c8)\n    } \n\n    if(totalwin > 0)    \n    {\n      if(totalwin > address(this).balance)\n      {\n        totalwin = ((address(this).balance/100)*90); //(c9)\n      }\n      address(entityStructs[address(this)].u_address).transfer(totalwin); //(c10)         \n    }\n\n\n      \n      emit ok_statusGame(entityStructs[address(this)].u_address, entityStructs[address(this)].u_key, entityStructs[address(this)].u_bet, entityStructs[address(this)].u_blocknum, entityStructs[address(this)].u_ref, calculate_userhash_to_log,winpoint,totalwin);      \n      \n      //ENG:: Filling array with current player values\n      //ENG:: In Next time when contract called will be processed previous player data to calculate prize\n      //RUS:: \u0417\u0430\u043f\u043e\u043b\u043d\u044f\u0435\u043c \u043c\u0430\u0441\u0441\u0438\u0432 \u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u0438\u0433\u0440\u043e\u043a\u0430\n      //RUS:: \u041f\u0440\u0438 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u043c \u0432\u044b\u0437\u043e\u0432\u0435 \u043a\u043e\u043d\u0442\u0440\u0430\u043a\u0442\u0430 \u0431\u0443\u0434\u0443\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0441\u044f \u0434\u0430\u043d\u043d\u044b\u0435 \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0435\u0433\u043e \u0438\u0433\u0440\u043e\u043a\u0430 \u0434\u043b\u044f \u0432\u044b\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u044f \u0432\u044b\u0439\u0433\u0440\u044b\u0448\u0430\n      entityStructs[address(this)].u_address = msg.sender;\n      entityStructs[address(this)].u_key = _u_key;\n      entityStructs[address(this)].u_bet = msg.value;      \n      entityStructs[address(this)].u_blocknum = block.number;\n      entityStructs[address(this)].u_ref = _u_ref;                        \n    }\n    return;\n  }\n\n}", "debug": "mem_160 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_playFive_4 + calldata_playFive_4)) +\n32 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_playFive_4 + calldata_playFive_32 + 4)): 0x30\ncalldata_playFive_4 + calldata_playFive_32 + 4: 0x750e46084e2052802802c42182b02000637dffffffffffffffffffffffffffe1\ncalldata_playFive_4 + calldata_playFive_4: 0x8af1b9f7b1dfad7fd7fd3bde7d4fdfff9c81fffffffffffffffffffffffffec1\ncalldata_playFive_0: 0x22400b7800000000000000000000000000000000000000000000000000000000\ncalldatasize_playFive: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `check_result(string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/17/0x5d04fd11b62cdf31f67b16a392cb05e00182c522.sol", "function": "check_result(string,string)", "lineno": 8, "title": "Integer Overflow ", "type": "Warning"}], "success": true}