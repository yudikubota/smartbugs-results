{
  "contract": "0xf7e05d7183c4c9d1d69d0242a0dbdd2f4ac180a8",
  "tool": "mythril",
  "start": 1563685419.50329,
  "end": 1563685445.9296947,
  "duration": 26.42640471458435,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 1128,
        "code": "inerAddress, uint32[] minerRewardTokens) public onlyOwner {\n    totalTokenSupply += totalTokensInBatch;\n    for (uint i = 0; i < minerAddress.length; i ++) {\n      minerTokens[minerAddress[i]] += minerRewardTokens[i];\n    }\n  }\n  \n  // Allow miners to withdraw their earnings from the contract.",
        "debug": "calldata__ERC20Pool_32 + 4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata__ERC20Pool_0: 0xf93ee24c00000000000000000000000000000000000000000000000000000000\ncalldatasize__ERC20Pool: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `addMinerTokens(uint32,address[],uint32[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/34/0xf7e05d7183c4c9d1d69d0242a0dbdd2f4ac180a8.sol",
        "function": "addMinerTokens(uint32,address[],uint32[])",
        "lineno": 63,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1678,
        "code": "  tokenContract.transfer(m",
        "debug": "storage_1: 0xfffffffe00\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffff00\ncalldata__ERC20Pool_0: 0x3ccfd60b00000000000000000000000000000000000000000000000000000000\ncalldatasize__ERC20Pool: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer underflow exists in the function `withdraw()`.\nThe subtraction may result in a value < 0.",
        "filename": "/unique_chucks/34/0xf7e05d7183c4c9d1d69d0242a0dbdd2f4ac180a8.sol",
        "function": "withdraw()",
        "lineno": 78,
        "title": "Integer Underflow",
        "type": "Warning"
      },
      {
        "address": 2028,
        "code": "en balance mapping.\n  function getBalance(",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/34/0xf7e05d7183c4c9d1d69d0242a0dbdd2f4ac180a8.sol",
        "function": "withdraw()",
        "lineno": 81,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 2269,
        "code": ", excluding 0xBitcoin.",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function withdrawEther(uint32). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/34/0xf7e05d7183c4c9d1d69d0242a0dbdd2f4ac180a8.sol",
        "function": "withdrawEther(uint32)",
        "lineno": 103,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 2800,
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/34/0xf7e05d7183c4c9d1d69d0242a0dbdd2f4ac180a8.sol",
        "function": "transferAnyERC20Token(address,uint256)",
        "lineno": 111,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 3163,
        "code": "their earnings from ",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata__ERC20Pool_4 + calldata__ERC20Pool_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_1: 0x0\ncaller: 0x0\ncalldata__ERC20Pool_0: 0xf93ee24c00000000000000000000000000000000000000000000000000000000\ncalldatasize__ERC20Pool: 0x4\nmem_128 +\n32 +\n32*calldata__ERC20Pool_4 + calldata__ERC20Pool_32 + 4: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/34/0xf7e05d7183c4c9d1d69d0242a0dbdd2f4ac180a8.sol",
        "function": "addMinerTokens(uint32,address[],uint32[])",
        "lineno": 70,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3281,
        "code": " \n  // Allow miners to withdraw their earnings from ",
        "debug": "mem_0 +\n192 +\n32*calldata__ERC20Pool_4 + calldata__ERC20Pool_32 + 4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffff7cb5b25\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata__ERC20Pool_cpy: 0x88fddbb900\nmem_128 +\n32 +\n32*calldata__ERC20Pool_4 + calldata__ERC20Pool_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata__ERC20Pool_4 + calldata__ERC20Pool_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_1: 0x0\ncaller: 0x0\ncalldata__ERC20Pool_0: 0xf93ee24c00000000000000000000000000000000000000000000000000000000\ncalldatasize__ERC20Pool: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `addMinerTokens(uint32,address[],uint32[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/34/0xf7e05d7183c4c9d1d69d0242a0dbdd2f4ac180a8.sol",
        "function": "addMinerTokens(uint32,address[],uint32[])",
        "lineno": 69,
        "title": "Integer Overflow ",
        "type": "Warning"
      }
    ],
    "success": true
  }
}