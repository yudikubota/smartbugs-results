{
  "contract": "0x2ce349291b8365f8d12c4cedf992969f680c726e",
  "tool": "mythril",
  "start": 1563622101.4303598,
  "end": 1563622105.7445593,
  "duration": 4.314199447631836,
  "analysis": {
    "success": false,
    "error": "Solc experienced a fatal error (code 1).\n\n/unique_chucks/24/0x2ce349291b8365f8d12c4cedf992969f680c726e.sol:1:1: Error: Source file requires different compiler version (current compiler is 0.4.25+commit.59dbf8f1.Linux.g++ - note that nightly builds are considered to be strictly less than the released version\npragma solidity 0.4.8;\r\n^--------------------^\n/unique_chucks/24/0x2ce349291b8365f8d12c4cedf992969f680c726e.sol:5:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use \"constructor(...) { ... }\" instead.\n    function owned() {\r\n    ^ (Relevant source part starts here and spans across multiple lines).\n/unique_chucks/24/0x2ce349291b8365f8d12c4cedf992969f680c726e.sol:10:34: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n        if (msg.sender != owner) throw;\r\n                                 ^---^\n/unique_chucks/24/0x2ce349291b8365f8d12c4cedf992969f680c726e.sol:37:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use \"constructor(...) { ... }\" instead.\n    function token(\r\n    ^ (Relevant source part starts here and spans across multiple lines).\n/unique_chucks/24/0x2ce349291b8365f8d12c4cedf992969f680c726e.sol:52:45: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n        if (balanceOf[msg.sender] < _value) throw;           // Check if the sender has enough\r\n                                            ^---^\n/unique_chucks/24/0x2ce349291b8365f8d12c4cedf992969f680c726e.sol:53:55: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n        if (balanceOf[_to] + _value < balanceOf[_to]) throw; // Check for overflows\r\n                                                      ^---^\n/unique_chucks/24/0x2ce349291b8365f8d12c4cedf992969f680c726e.sol:79:40: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n        if (balanceOf[_from] < _value) throw;                 // Check if the sender has enough\r\n                                       ^---^\n/unique_chucks/24/0x2ce349291b8365f8d12c4cedf992969f680c726e.sol:80:55: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n        if (balanceOf[_to] + _value < balanceOf[_to]) throw;  // Check for overflows\r\n                                                      ^---^\n/unique_chucks/24/0x2ce349291b8365f8d12c4cedf992969f680c726e.sol:81:52: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n        if (_value > allowance[_from][msg.sender]) throw;   // Check allowance\r\n                                                   ^---^\n/unique_chucks/24/0x2ce349291b8365f8d12c4cedf992969f680c726e.sol:91:9: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n        throw;     // Prevents accidental sending of ether\r\n        ^---^\n/unique_chucks/24/0x2ce349291b8365f8d12c4cedf992969f680c726e.sol:109:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use \"constructor(...) { ... }\" instead.\n    function CJXToken(\r\n    ^ (Relevant source part starts here and spans across multiple lines).\n/unique_chucks/24/0x2ce349291b8365f8d12c4cedf992969f680c726e.sol:122:45: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n        if (balanceOf[msg.sender] < _value) throw;           // Check if the sender has enough\r\n                                            ^---^\n/unique_chucks/24/0x2ce349291b8365f8d12c4cedf992969f680c726e.sol:123:55: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n        if (balanceOf[_to] + _value < balanceOf[_to]) throw; // Check for overflows\r\n                                                      ^---^\n/unique_chucks/24/0x2ce349291b8365f8d12c4cedf992969f680c726e.sol:124:40: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n        if (frozenAccount[msg.sender]) throw;                // Check if frozen\r\n                                       ^---^\n/unique_chucks/24/0x2ce349291b8365f8d12c4cedf992969f680c726e.sol:56:9: Warning: Invoking events without \"emit\" prefix is deprecated.\n        Transfer(msg.sender, _to, _value);                   // Notify anyone listening that this transfer took place\r\n        ^-------------------------------^\n/unique_chucks/24/0x2ce349291b8365f8d12c4cedf992969f680c726e.sol:85:9: Warning: Invoking events without \"emit\" prefix is deprecated.\n        Transfer(_from, _to, _value);\r\n        ^--------------------------^\n/unique_chucks/24/0x2ce349291b8365f8d12c4cedf992969f680c726e.sol:127:9: Warning: Invoking events without \"emit\" prefix is deprecated.\n        Transfer(msg.sender, _to, _value);                   // Notify anyone listening that this transfer took place\r\n        ^-------------------------------^\n/unique_chucks/24/0x2ce349291b8365f8d12c4cedf992969f680c726e.sol:134:9: Warning: Invoking events without \"emit\" prefix is deprecated.\n        Transfer(0, this, mintedAmount);\r\n        ^-----------------------------^\n/unique_chucks/24/0x2ce349291b8365f8d12c4cedf992969f680c726e.sol:135:9: Warning: Invoking events without \"emit\" prefix is deprecated.\n        Transfer(this, target, mintedAmount);\r\n        ^----------------------------------^\n/unique_chucks/24/0x2ce349291b8365f8d12c4cedf992969f680c726e.sol:140:9: Warning: Invoking events without \"emit\" prefix is deprecated.\n        FrozenFunds(target, freeze);\r\n        ^-------------------------^\n",
    "issues": []
  }
}