{
  "contract": "0x1199e1c21c89bf9653dc2996fed7168a6b587655",
  "tool": "mythril",
  "start": 1563498056.9457192,
  "end": 1563498327.98251,
  "duration": 271.0367908477783,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 1778,
        "debug": "storage_3: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncallvalue: 0x57f25cd000000000000000000000000000000000000000000000000000000000\ncalldatasize_SnailTree: 0x3\n",
        "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/4/0x1199e1c21c89bf9653dc2996fed7168a6b587655.sol",
        "function": "fallback",
        "lineno": 513,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1791,
        "debug": "The exception is triggered under the following conditions:\n\nstorage_3: 0x1\ncallvalue: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldatasize_SnailTree: 0x3\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/4/0x1199e1c21c89bf9653dc2996fed7168a6b587655.sol",
        "function": "fallback",
        "lineno": 513,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 1900,
        "code": "rect roun",
        "debug": "",
        "description": "Function PlantRoot() retrieves the transaction origin (tx.origin) using the ORIGIN opcode. Use msg.sender instead.\nSee also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin",
        "filename": "/unique_chucks/4/0x1199e1c21c89bf9653dc2996fed7168a6b587655.sol",
        "function": "PlantRoot()",
        "lineno": 170,
        "title": "Use of tx.origin",
        "type": "Warning"
      },
      {
        "address": 3884,
        "code": ";\n    }\n    \n    //-- CALCULATIONS -",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/4/0x1199e1c21c89bf9653dc2996fed7168a6b587655.sol",
        "function": "PayThrone()",
        "lineno": 338,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 7987,
        "code": "rt(c ",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_SnailTree_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_SnailTree_0: 0x8ef7f49e00000000000000000000000000000000000000000000000000000000\ncalldatasize_SnailTree: 0x4\nstorage_5: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/4/0x1199e1c21c89bf9653dc2996fed7168a6b587655.sol",
        "function": "ComputeWonkTrade(uint256)",
        "lineno": 510,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 8014,
        "debug": "The exception is triggered under the following conditions:\n\ntimestamp: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_SnailTree_4: 0x1\ncalldata_SnailTree_0: 0x7ff8b46000000000000000000000000000000000000000000000000000000000\ncalldatasize_SnailTree: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/4/0x1199e1c21c89bf9653dc2996fed7168a6b587655.sol",
        "function": "ComputePecanShare(address)",
        "lineno": 513,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 8392,
        "code": "ater ",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x4a9806990b07248e258840187311111629898063400002030000055555555553\nstorage_0: 0xb567f966f4f8db71da77bfe78ceeeee9d6767f9cbffffdfcfffffaaaaaaaaaac\ncalldata_SnailTree_4: 0x4a9806990b07248e258840187311111629898063400002030000055555555553\ncalldata_SnailTree_0: 0x39078e1400000000000000000000000000000000000000000000000000000000\ncalldatasize_SnailTree: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `GivePecan(uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/4/0x1199e1c21c89bf9653dc2996fed7168a6b587655.sol",
        "function": "GivePecan(uint256)",
        "lineno": 498,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 8415,
        "code": "nuend).\n  */\n  fun",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_2: 0x398c8923e9ccab5f30a913cb26525015de7cd6089b1bcabea5559a0bab27f104\nstorage_5: 0x7fffffffc0101000001000000000000000000000000000000000000000004f04\ncalldata_SnailTree_4: 0x7fffffffc0101000001000000000000000000000000000000000000000004f05\ncalldata_SnailTree_0: 0x8ef7f49e00000000000000000000000000000000000000000000000000000000\ncalldatasize_SnailTree: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/4/0x1199e1c21c89bf9653dc2996fed7168a6b587655.sol",
        "function": "ComputeWonkTrade(uint256)",
        "lineno": 498,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}