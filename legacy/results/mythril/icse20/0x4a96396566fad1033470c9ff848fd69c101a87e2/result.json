{
  "contract": "0x4a96396566fad1033470c9ff848fd69c101a87e2",
  "tool": "mythril",
  "start": 1563754200.6466498,
  "end": 1563755960.0778716,
  "duration": 1759.4312217235565,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 214,
        "code": "nTokenContract) public onlySecurity {\n\t\trequire(coin[_name].isReg == false);\n\t\tbytes4 _hexSymbol = convertStringToBytes(_name);\n        coin[_name] = Coin ({\n            symbol: _symbol,\n            coinTokenContract: _coinTokenContract,\n            hexSymbol: _hexSymbol,\n            isReg: true\n        });\n        registeredCoins.push(_coinTokenContract);\n\t\t\n\t\temit RegisterCoin(_name, _name, _symbol, _coinTokenContract);\n    }\n\t\n\tfunction removeCoin(string _name) public onlyOwner {\n\t\trequire(coin[_nam",
        "debug": "calldata_PublicTokenRegister_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_PublicTokenRegister_0: 0xfa9e48600000000000000000000000000000000000000000000000000000000\ncalldatasize_PublicTokenRegister: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `registerCoin(string,string,address)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/46/0x4a96396566fad1033470c9ff848fd69c101a87e2.sol",
        "function": "registerCoin(string,string,address)",
        "lineno": 65,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 421,
        "code": "inName].hexSymbol;\n\t}\n\t\n   \tfunction getCoinAddress(string _coinName) public view returns(address _coinTokenContract) {\n\t",
        "debug": "calldata_PublicTokenRegister_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_PublicTokenRegister_0: 0x46ae38a800000000000000000000000000000000000000000000000000000000\ncalldatasize_PublicTokenRegister: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `getHexSymbol(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/46/0x4a96396566fad1033470c9ff848fd69c101a87e2.sol",
        "function": "getHexSymbol(string)",
        "lineno": 100,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 762,
        "code": "Name].symbol;\n\t}\n\t\n\tfunction getHexSymbol(string _coinName) public view returns(bytes4 _hexSymbol) {\n\t\treturn co",
        "debug": "calldata_PublicTokenRegister_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_PublicTokenRegister_0: 0xaaba3e3b00000000000000000000000000000000000000000000000000000000\ncalldatasize_PublicTokenRegister: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `getSymbol(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/46/0x4a96396566fad1033470c9ff848fd69c101a87e2.sol",
        "function": "getSymbol(string)",
        "lineno": 96,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 774,
        "code": "Name].symbol;\n\t}\n\t\n\tfunction getHexSymbol(string _coinName) public view returns(bytes4 _hexSymbol) {\n\t\treturn co",
        "debug": "calldata_PublicTokenRegister_4 + calldata_PublicTokenRegister_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8\ncalldata_PublicTokenRegister_0: 0xaaba3e3b00000000000000000000000000000000000000000000000000000000\ncalldatasize_PublicTokenRegister: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `getSymbol(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/46/0x4a96396566fad1033470c9ff848fd69c101a87e2.sol",
        "function": "getSymbol(string)",
        "lineno": 96,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 783,
        "code": "Name].symbol;\n\t}\n\t\n\tfunction getHexSymbol(string _coinName) public view returns(bytes4 _hexSymbol) {\n\t\treturn co",
        "debug": "calldata_PublicTokenRegister_4 + calldata_PublicTokenRegister_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc1\ncalldata_PublicTokenRegister_0: 0xaaba3e3b00000000000000000000000000000000000000000000000000000000\ncalldatasize_PublicTokenRegister: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `getSymbol(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/46/0x4a96396566fad1033470c9ff848fd69c101a87e2.sol",
        "function": "getSymbol(string)",
        "lineno": 96,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 789,
        "code": "Name].symbol;\n\t}\n\t\n\tfunction getHexSymbol(string _coinName) public view returns(bytes4 _hexSymbol) {\n\t\treturn co",
        "debug": "calldata_PublicTokenRegister_4 + calldata_PublicTokenRegister_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff41\ncalldata_PublicTokenRegister_0: 0xaaba3e3b00000000000000000000000000000000000000000000000000000000\ncalldatasize_PublicTokenRegister: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `getSymbol(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/46/0x4a96396566fad1033470c9ff848fd69c101a87e2.sol",
        "function": "getSymbol(string)",
        "lineno": 96,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 988,
        "code": "eg == true);\n\t\tcoin[_name] = Coin({\n\t\t\tsymbol: \"\",\n\t\t\tcoinTokenContract: 0x0,\n\t\t\thexSymbol: 0x0,\n\t\t\tisReg: false\n\t\t});\n\t}\n\t\n\tfunction securityReg(address _securityWallet) public onlyOwner {\n\t\trequire(registe",
        "debug": "calldata_PublicTokenRegister_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_PublicTokenRegister_0: 0xc392079f00000000000000000000000000000000000000000000000000000000\ncalldatasize_PublicTokenRegister: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `removeCoin(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/46/0x4a96396566fad1033470c9ff848fd69c101a87e2.sol",
        "function": "removeCoin(string)",
        "lineno": 80,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1093,
        "code": "oin[_coinName].coinTokenContract;\n\t}\n\t\n\tfunction getIsCoinReg(string _coinName) public view returns(bool _isCoinReg) {\n\t\treturn coin[_coinNa",
        "debug": "calldata_PublicTokenRegister_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_PublicTokenRegister_0: 0xd06544d000000000000000000000000000000000000000000000000000000000\ncalldatasize_PublicTokenRegister: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `getCoinAddress(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/46/0x4a96396566fad1033470c9ff848fd69c101a87e2.sol",
        "function": "getCoinAddress(string)",
        "lineno": 104,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1353,
        "code": "bol, bool _isReg) {\n\t\treturn (getSymbol(_coinName),getCoinAddress(_coinName),getHexSymbol(_coinName),getIsCoinReg(_coinName));\n\t}\n\t\n\tfunction getIsSecurityWalletReg(address _wallet) public view returns(bool _isReg) {\n\t\treturn registeredSecur",
        "debug": "calldata_PublicTokenRegister_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_PublicTokenRegister_0: 0xe122140000000000000000000000000000000000000000000000000000000000\ncalldatasize_PublicTokenRegister: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `getCoinInfo(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/46/0x4a96396566fad1033470c9ff848fd69c101a87e2.sol",
        "function": "getCoinInfo(string)",
        "lineno": 111,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1365,
        "code": "bol, bool _isReg) {\n\t\treturn (getSymbol(_coinName),getCoinAddress(_coinName),getHexSymbol(_coinName),getIsCoinReg(_coinName));\n\t}\n\t\n\tfunction getIsSecurityWalletReg(address _wallet) public view returns(bool _isReg) {\n\t\treturn registeredSecur",
        "debug": "calldata_PublicTokenRegister_4 + calldata_PublicTokenRegister_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8\ncalldata_PublicTokenRegister_0: 0xe122140000000000000000000000000000000000000000000000000000000000\ncalldatasize_PublicTokenRegister: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `getCoinInfo(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/46/0x4a96396566fad1033470c9ff848fd69c101a87e2.sol",
        "function": "getCoinInfo(string)",
        "lineno": 111,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1374,
        "code": "bol, bool _isReg) {\n\t\treturn (getSymbol(_coinName),getCoinAddress(_coinName),getHexSymbol(_coinName),getIsCoinReg(_coinName));\n\t}\n\t\n\tfunction getIsSecurityWalletReg(address _wallet) public view returns(bool _isReg) {\n\t\treturn registeredSecur",
        "debug": "calldata_PublicTokenRegister_4 + calldata_PublicTokenRegister_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc1\ncalldata_PublicTokenRegister_0: 0xe122140000000000000000000000000000000000000000000000000000000000\ncalldatasize_PublicTokenRegister: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `getCoinInfo(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/46/0x4a96396566fad1033470c9ff848fd69c101a87e2.sol",
        "function": "getCoinInfo(string)",
        "lineno": 111,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1380,
        "code": "bol, bool _isReg) {\n\t\treturn (getSymbol(_coinName),getCoinAddress(_coinName),getHexSymbol(_coinName),getIsCoinReg(_coinName));\n\t}\n\t\n\tfunction getIsSecurityWalletReg(address _wallet) public view returns(bool _isReg) {\n\t\treturn registeredSecur",
        "debug": "calldata_PublicTokenRegister_4 + calldata_PublicTokenRegister_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff41\ncalldata_PublicTokenRegister_0: 0xe122140000000000000000000000000000000000000000000000000000000000\ncalldatasize_PublicTokenRegister: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `getCoinInfo(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/46/0x4a96396566fad1033470c9ff848fd69c101a87e2.sol",
        "function": "getCoinInfo(string)",
        "lineno": 111,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1710,
        "code": "Reg;\n\t}\n\t\n\tfunction getCoinInfo(string _coinName) public view returns(string _symbol, address coinAddress, bytes4 _",
        "debug": "calldata_PublicTokenRegister_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_PublicTokenRegister_0: 0xec357c6400000000000000000000000000000000000000000000000000000000\ncalldatasize_PublicTokenRegister: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `getIsCoinReg(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/46/0x4a96396566fad1033470c9ff848fd69c101a87e2.sol",
        "function": "getIsCoinReg(string)",
        "lineno": 108,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2335,
        "code": "TokenContract: _coinTokenContract,\n            hexSymbol: _hexSymbol,\n            isReg: true\n        });\n        registeredCoins.push(_coinTokenContract);\n\t\t\n\t\temit RegisterCo",
        "debug": "mem_192 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_PublicTokenRegister_4 + calldata_PublicTokenRegister_4)) +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_PublicTokenRegister_4 + calldata_PublicTokenRegister_32 + 4)) +\n0: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\ncalldata_PublicTokenRegister_4 + calldata_PublicTokenRegister_4: 0x20\nstorage_1 +\nKECCAC_mem_160 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_PublicTokenRegister_4 + calldata_PublicTokenRegister_4)) +\n32 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_PublicTokenRegister_4 + calldata_PublicTokenRegister_32 + 4))): 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xff00\ncalldata_PublicTokenRegister_0: 0xfa9e48600000000000000000000000000000000000000000000000000000000\ncalldatasize_PublicTokenRegister: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `registerCoin(string,string,address)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/46/0x4a96396566fad1033470c9ff848fd69c101a87e2.sol",
        "function": "registerCoin(string,string,address)",
        "lineno": 70,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2529,
        "code": " Register - Allows",
        "debug": "storage_3: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_0 +\nKECCAC_mem_192 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_PublicTokenRegister_4 + calldata_PublicTokenRegister_4)) +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_PublicTokenRegister_4 + calldata_PublicTokenRegister_32 + 4)) +\n128): 0xf800000000000000000000000000000000000000000000000000000000000040\nkeccac_0_+\nKECCAC_mem_192_+\n32*\nConcat(0,\n_______Extract(255,\n_______________5,\n_______________31_+\n_______________calldata_PublicTokenRegister_4_+_calldata_PublicTokenRegister_4))_+\n32*\nConcat(0,\n_______Extract(255,\n_______________5,\n_______________31_+\n_______________calldata_PublicTokenRegister_4_+_calldata_PublicTokenRegister_32_+_4))_+\n128): 0x3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nmem_mem_192 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_PublicTokenRegister_4 + calldata_PublicTokenRegister_4)) +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_PublicTokenRegister_4 + calldata_PublicTokenRegister_32 + 4)) +\n0: 0x0\nstorage_1 +\nKECCAC_mem_160 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_PublicTokenRegister_4 + calldata_PublicTokenRegister_4)) +\n32 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_PublicTokenRegister_4 + calldata_PublicTokenRegister_32 + 4))): 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xff00\ncalldata_PublicTokenRegister_0: 0xfa9e48600000000000000000000000000000000000000000000000000000000\ncalldatasize_PublicTokenRegister: 0x4\ncalldata_PublicTokenRegister_4 + calldata_PublicTokenRegister_4: 0x0\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `registerCoin(string,string,address)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/46/0x4a96396566fad1033470c9ff848fd69c101a87e2.sol",
        "function": "registerCoin(string,string,address)",
        "lineno": 1,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 4407,
        "code": ",\n\t\t\tisReg: false\n\t\t});\n\t}\n\t\n\tfunction securityReg(address _securityWallet) public onlyOwner {\n\t\trequire(re",
        "debug": "mem_160 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_PublicTokenRegister_4 + calldata_PublicTokenRegister_4)) +\n0: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\ncalldata_PublicTokenRegister_4 + calldata_PublicTokenRegister_4: 0x20\nstorage_1 +\nKECCAC_mem_128 +\n32 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_PublicTokenRegister_4 + calldata_PublicTokenRegister_4))): 0xff00\nstorage_0: 0x0\ncaller: 0x0\ncalldata_PublicTokenRegister_0: 0xc392079f00000000000000000000000000000000000000000000000000000000\ncalldatasize_PublicTokenRegister: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `removeCoin(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/46/0x4a96396566fad1033470c9ff848fd69c101a87e2.sol",
        "function": "removeCoin(string)",
        "lineno": 84,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 5474,
        "code": "TokenRegister, Ownable {\n\tmapping(string => Coin) internal coin;\n\tmapping(address => bool) internal registeredSecurity;\n\taddress[] internal registeredCoins;\n\t\n\tmodifier onlySecurity {\n\t\trequire(registeredSecurity[msg.sender] == true);\n\t\t_;\n\t}\n    \n    // STRUCTS\n\tstruct Coin {\n\t\tstring symbol;\n\t\taddress coinTokenContract;\n\t\tbytes4 hexSymbol;\n\t\tbool isReg;\n\t}\n\n    function() public payable {\n\t\trevert();\n    }\n    \n    constructor() public {\n    }\n    \n    function registerCoin(string _name, string _symbol, address _coinTokenContract) public onlySecurity {\n\t\trequire(coin[_name].isReg == false);\n\t\tbytes4 _hexSymbol = convertStringToBytes(_name);\n        coin[_name] = Coin ({\n            symbol: _symbol,\n            coinTokenContract: _coinTokenContract,\n            hexSymbol: _hexSymbol,\n            isReg: true\n        });\n        registeredCoins.push(_coinTokenContract);\n\t\t\n\t\temit RegisterCoin(_name, _name, _symbol, _coinTokenContract);\n    }\n\t\n\tfunction removeCoin(string _name) public onlyOwner {\n\t\trequire(coin[_name].isReg == true);\n\t\tcoin[_name] = Coin({\n\t\t\tsymbol: \"\",\n\t\t\tcoinTokenContract: 0x0,\n\t\t\thexSymbol: 0x0,\n\t\t\tisReg: false\n\t\t});\n\t}\n\t\n\tfunction securityReg(address _securityWallet) public onlyOwner {\n\t\trequire(registeredSecurity[_securityWallet] == false);\n\t\tregisteredSecurity[_securityWallet] = true;\n\t\temit SecurityReg(_securityWallet, true);\n\t}\n\t\n\tfunction getSymbol(string _coinName) public view returns(string _symbol) {\n\t\treturn coin[_coinName].symbol;\n\t}\n\t\n\tfunction getHexSymbol(string _coinName) public view returns(bytes4 _hexSymbol) {\n\t\treturn coin[_coinName].hexSymbol;\n\t}\n\t\n   \tfunction getCoinAddress(string _coinName) public view returns(address _coinTokenContract) {\n\t\treturn coin[_coinName].coinTokenContract;\n\t}\n\t\n\tfunction getIsCoinReg(string _coinName) public view returns(bool _isCoinReg) {\n\t\treturn coin[_coinName].isReg;\n\t}\n\t\n\tfunction getCoinInfo(string _coinName) public view returns(string _symbol, address coinAddress, bytes4 _hexSymbol, bool _isReg) {\n\t\treturn (getSymbol(_coinName),getCoinAddress(_coinName),getHexSymbol(_coinName),getIsCoinReg(_coinName));\n\t}\n\t\n\tfunction getIsSecurityWalletReg(address _wallet) public view returns(bool _isReg) {\n\t\treturn registeredSecurity[_wallet];\n\t}\n\t\n    function convertStringToBytes(string memory source) internal pure returns (bytes4 result) {\n        bytes memory tempEmptyStringTest = bytes(source);\n        if (tempEmptyStringTest.length == 0) {\n            return 0x0;\n        }\n        assembly {\n            result := mload(add(source, 32))\n        }\n    }\n}",
        "debug": "keccac_0_+\nKECCAC_mem_288_+\n32*\nConcat(0,\n_______Extract(255,\n_______________5,\n_______________31_+\n_______________calldata_PublicTokenRegister_4_+_calldata_PublicTokenRegister_4))_+\n32): 0xff13e6a7459ae5a4c49c419171c3f89100a371508000000000129200000219e2\ncalldata_PublicTokenRegister_4 + calldata_PublicTokenRegister_4: 0x20\nstorage_0 +\nKECCAC_mem_288 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_PublicTokenRegister_4 + calldata_PublicTokenRegister_4)) +\n32): 0xbac1c3147749165dd7d1977fffffffffffffffffffffffffffffffffffffffc5\nstorage_1 +\nKECCAC_mem_128 +\n32 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_PublicTokenRegister_4 + calldata_PublicTokenRegister_4))): 0xff00\nstorage_0: 0x0\ncaller: 0x0\ncalldata_PublicTokenRegister_0: 0xc392079f00000000000000000000000000000000000000000000000000000000\ncalldatasize_PublicTokenRegister: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `removeCoin(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/46/0x4a96396566fad1033470c9ff848fd69c101a87e2.sol",
        "function": "removeCoin(string)",
        "lineno": 40,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 5503,
        "code": "TokenRegister, Ownable {\n\tmapping(string => Coin) internal coin;\n\tmapping(address => bool) internal registeredSecurity;\n\taddress[] internal registeredCoins;\n\t\n\tmodifier onlySecurity {\n\t\trequire(registeredSecurity[msg.sender] == true);\n\t\t_;\n\t}\n    \n    // STRUCTS\n\tstruct Coin {\n\t\tstring symbol;\n\t\taddress coinTokenContract;\n\t\tbytes4 hexSymbol;\n\t\tbool isReg;\n\t}\n\n    function() public payable {\n\t\trevert();\n    }\n    \n    constructor() public {\n    }\n    \n    function registerCoin(string _name, string _symbol, address _coinTokenContract) public onlySecurity {\n\t\trequire(coin[_name].isReg == false);\n\t\tbytes4 _hexSymbol = convertStringToBytes(_name);\n        coin[_name] = Coin ({\n            symbol: _symbol,\n            coinTokenContract: _coinTokenContract,\n            hexSymbol: _hexSymbol,\n            isReg: true\n        });\n        registeredCoins.push(_coinTokenContract);\n\t\t\n\t\temit RegisterCoin(_name, _name, _symbol, _coinTokenContract);\n    }\n\t\n\tfunction removeCoin(string _name) public onlyOwner {\n\t\trequire(coin[_name].isReg == true);\n\t\tcoin[_name] = Coin({\n\t\t\tsymbol: \"\",\n\t\t\tcoinTokenContract: 0x0,\n\t\t\thexSymbol: 0x0,\n\t\t\tisReg: false\n\t\t});\n\t}\n\t\n\tfunction securityReg(address _securityWallet) public onlyOwner {\n\t\trequire(registeredSecurity[_securityWallet] == false);\n\t\tregisteredSecurity[_securityWallet] = true;\n\t\temit SecurityReg(_securityWallet, true);\n\t}\n\t\n\tfunction getSymbol(string _coinName) public view returns(string _symbol) {\n\t\treturn coin[_coinName].symbol;\n\t}\n\t\n\tfunction getHexSymbol(string _coinName) public view returns(bytes4 _hexSymbol) {\n\t\treturn coin[_coinName].hexSymbol;\n\t}\n\t\n   \tfunction getCoinAddress(string _coinName) public view returns(address _coinTokenContract) {\n\t\treturn coin[_coinName].coinTokenContract;\n\t}\n\t\n\tfunction getIsCoinReg(string _coinName) public view returns(bool _isCoinReg) {\n\t\treturn coin[_coinName].isReg;\n\t}\n\t\n\tfunction getCoinInfo(string _coinName) public view returns(string _symbol, address coinAddress, bytes4 _hexSymbol, bool _isReg) {\n\t\treturn (getSymbol(_coinName),getCoinAddress(_coinName),getHexSymbol(_coinName),getIsCoinReg(_coinName));\n\t}\n\t\n\tfunction getIsSecurityWalletReg(address _wallet) public view returns(bool _isReg) {\n\t\treturn registeredSecurity[_wallet];\n\t}\n\t\n    function convertStringToBytes(string memory source) internal pure returns (bytes4 result) {\n        bytes memory tempEmptyStringTest = bytes(source);\n        if (tempEmptyStringTest.length == 0) {\n            return 0x0;\n        }\n        assembly {\n            result := mload(add(source, 32))\n        }\n    }\n}",
        "debug": "calldata_PublicTokenRegister_4 + calldata_PublicTokenRegister_4: 0x20\nmem_mem_160 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_PublicTokenRegister_4 + calldata_PublicTokenRegister_4)) +\n0: 0x8000000000000000000000000000000000000000000000000000000000000000\nstorage_1 +\nKECCAC_mem_128 +\n32 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_PublicTokenRegister_4 + calldata_PublicTokenRegister_4))): 0xff00\nstorage_0: 0x0\ncaller: 0x0\ncalldata_PublicTokenRegister_0: 0xc392079f00000000000000000000000000000000000000000000000000000000\ncalldatasize_PublicTokenRegister: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `removeCoin(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/46/0x4a96396566fad1033470c9ff848fd69c101a87e2.sol",
        "function": "removeCoin(string)",
        "lineno": 40,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 5517,
        "code": "TokenRegister, Ownable {\n\tmapping(string => Coin) internal coin;\n\tmapping(address => bool) internal registeredSecurity;\n\taddress[] internal registeredCoins;\n\t\n\tmodifier onlySecurity {\n\t\trequire(registeredSecurity[msg.sender] == true);\n\t\t_;\n\t}\n    \n    // STRUCTS\n\tstruct Coin {\n\t\tstring symbol;\n\t\taddress coinTokenContract;\n\t\tbytes4 hexSymbol;\n\t\tbool isReg;\n\t}\n\n    function() public payable {\n\t\trevert();\n    }\n    \n    constructor() public {\n    }\n    \n    function registerCoin(string _name, string _symbol, address _coinTokenContract) public onlySecurity {\n\t\trequire(coin[_name].isReg == false);\n\t\tbytes4 _hexSymbol = convertStringToBytes(_name);\n        coin[_name] = Coin ({\n            symbol: _symbol,\n            coinTokenContract: _coinTokenContract,\n            hexSymbol: _hexSymbol,\n            isReg: true\n        });\n        registeredCoins.push(_coinTokenContract);\n\t\t\n\t\temit RegisterCoin(_name, _name, _symbol, _coinTokenContract);\n    }\n\t\n\tfunction removeCoin(string _name) public onlyOwner {\n\t\trequire(coin[_name].isReg == true);\n\t\tcoin[_name] = Coin({\n\t\t\tsymbol: \"\",\n\t\t\tcoinTokenContract: 0x0,\n\t\t\thexSymbol: 0x0,\n\t\t\tisReg: false\n\t\t});\n\t}\n\t\n\tfunction securityReg(address _securityWallet) public onlyOwner {\n\t\trequire(registeredSecurity[_securityWallet] == false);\n\t\tregisteredSecurity[_securityWallet] = true;\n\t\temit SecurityReg(_securityWallet, true);\n\t}\n\t\n\tfunction getSymbol(string _coinName) public view returns(string _symbol) {\n\t\treturn coin[_coinName].symbol;\n\t}\n\t\n\tfunction getHexSymbol(string _coinName) public view returns(bytes4 _hexSymbol) {\n\t\treturn coin[_coinName].hexSymbol;\n\t}\n\t\n   \tfunction getCoinAddress(string _coinName) public view returns(address _coinTokenContract) {\n\t\treturn coin[_coinName].coinTokenContract;\n\t}\n\t\n\tfunction getIsCoinReg(string _coinName) public view returns(bool _isCoinReg) {\n\t\treturn coin[_coinName].isReg;\n\t}\n\t\n\tfunction getCoinInfo(string _coinName) public view returns(string _symbol, address coinAddress, bytes4 _hexSymbol, bool _isReg) {\n\t\treturn (getSymbol(_coinName),getCoinAddress(_coinName),getHexSymbol(_coinName),getIsCoinReg(_coinName));\n\t}\n\t\n\tfunction getIsSecurityWalletReg(address _wallet) public view returns(bool _isReg) {\n\t\treturn registeredSecurity[_wallet];\n\t}\n\t\n    function convertStringToBytes(string memory source) internal pure returns (bytes4 result) {\n        bytes memory tempEmptyStringTest = bytes(source);\n        if (tempEmptyStringTest.length == 0) {\n            return 0x0;\n        }\n        assembly {\n            result := mload(add(source, 32))\n        }\n    }\n}",
        "debug": "mem_160 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_PublicTokenRegister_4 + calldata_PublicTokenRegister_4)) +\n0: 0xc48c04261444f7ce9c1a66f6c355debe3fffffffffffffffffffffffffffffed\ncalldata_PublicTokenRegister_4 + calldata_PublicTokenRegister_4: 0x20\nmem_mem_160 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_PublicTokenRegister_4 + calldata_PublicTokenRegister_4)) +\n0: 0xe9ed542651000003d76906f7c018193fbfffffffffffffffffffffffffffffcb\nstorage_1 +\nKECCAC_mem_128 +\n32 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_PublicTokenRegister_4 + calldata_PublicTokenRegister_4))): 0xff00\nstorage_0: 0x0\ncaller: 0x0\ncalldata_PublicTokenRegister_0: 0xc392079f00000000000000000000000000000000000000000000000000000000\ncalldatasize_PublicTokenRegister: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `removeCoin(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/46/0x4a96396566fad1033470c9ff848fd69c101a87e2.sol",
        "function": "removeCoin(string)",
        "lineno": 40,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 5534,
        "code": "TokenRegister, Ownable {\n\tmapping(string => Coin) internal coin;\n\tmapping(address => bool) internal registeredSecurity;\n\taddress[] internal registeredCoins;\n\t\n\tmodifier onlySecurity {\n\t\trequire(registeredSecurity[msg.sender] == true);\n\t\t_;\n\t}\n    \n    // STRUCTS\n\tstruct Coin {\n\t\tstring symbol;\n\t\taddress coinTokenContract;\n\t\tbytes4 hexSymbol;\n\t\tbool isReg;\n\t}\n\n    function() public payable {\n\t\trevert();\n    }\n    \n    constructor() public {\n    }\n    \n    function registerCoin(string _name, string _symbol, address _coinTokenContract) public onlySecurity {\n\t\trequire(coin[_name].isReg == false);\n\t\tbytes4 _hexSymbol = convertStringToBytes(_name);\n        coin[_name] = Coin ({\n            symbol: _symbol,\n            coinTokenContract: _coinTokenContract,\n            hexSymbol: _hexSymbol,\n            isReg: true\n        });\n        registeredCoins.push(_coinTokenContract);\n\t\t\n\t\temit RegisterCoin(_name, _name, _symbol, _coinTokenContract);\n    }\n\t\n\tfunction removeCoin(string _name) public onlyOwner {\n\t\trequire(coin[_name].isReg == true);\n\t\tcoin[_name] = Coin({\n\t\t\tsymbol: \"\",\n\t\t\tcoinTokenContract: 0x0,\n\t\t\thexSymbol: 0x0,\n\t\t\tisReg: false\n\t\t});\n\t}\n\t\n\tfunction securityReg(address _securityWallet) public onlyOwner {\n\t\trequire(registeredSecurity[_securityWallet] == false);\n\t\tregisteredSecurity[_securityWallet] = true;\n\t\temit SecurityReg(_securityWallet, true);\n\t}\n\t\n\tfunction getSymbol(string _coinName) public view returns(string _symbol) {\n\t\treturn coin[_coinName].symbol;\n\t}\n\t\n\tfunction getHexSymbol(string _coinName) public view returns(bytes4 _hexSymbol) {\n\t\treturn coin[_coinName].hexSymbol;\n\t}\n\t\n   \tfunction getCoinAddress(string _coinName) public view returns(address _coinTokenContract) {\n\t\treturn coin[_coinName].coinTokenContract;\n\t}\n\t\n\tfunction getIsCoinReg(string _coinName) public view returns(bool _isCoinReg) {\n\t\treturn coin[_coinName].isReg;\n\t}\n\t\n\tfunction getCoinInfo(string _coinName) public view returns(string _symbol, address coinAddress, bytes4 _hexSymbol, bool _isReg) {\n\t\treturn (getSymbol(_coinName),getCoinAddress(_coinName),getHexSymbol(_coinName),getIsCoinReg(_coinName));\n\t}\n\t\n\tfunction getIsSecurityWalletReg(address _wallet) public view returns(bool _isReg) {\n\t\treturn registeredSecurity[_wallet];\n\t}\n\t\n    function convertStringToBytes(string memory source) internal pure returns (bytes4 result) {\n        bytes memory tempEmptyStringTest = bytes(source);\n        if (tempEmptyStringTest.length == 0) {\n            return 0x0;\n        }\n        assembly {\n            result := mload(add(source, 32))\n        }\n    }\n}",
        "debug": "mem_160 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_PublicTokenRegister_4 + calldata_PublicTokenRegister_4)) +\n0: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa0\nmem_mem_160 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_PublicTokenRegister_4 + calldata_PublicTokenRegister_4)) +\n0: 0x25\nstorage_1 +\nKECCAC_mem_128 +\n32 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_PublicTokenRegister_4 + calldata_PublicTokenRegister_4))): 0xff00\ncalldata_PublicTokenRegister_4 + calldata_PublicTokenRegister_4: 0x1f\nstorage_0: 0x0\ncaller: 0x0\ncalldata_PublicTokenRegister_0: 0xc392079f00000000000000000000000000000000000000000000000000000000\ncalldatasize_PublicTokenRegister: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `removeCoin(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/46/0x4a96396566fad1033470c9ff848fd69c101a87e2.sol",
        "function": "removeCoin(string)",
        "lineno": 40,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 5539,
        "code": "TokenRegister, Ownable {\n\tmapping(string => Coin) internal coin;\n\tmapping(address => bool) internal registeredSecurity;\n\taddress[] internal registeredCoins;\n\t\n\tmodifier onlySecurity {\n\t\trequire(registeredSecurity[msg.sender] == true);\n\t\t_;\n\t}\n    \n    // STRUCTS\n\tstruct Coin {\n\t\tstring symbol;\n\t\taddress coinTokenContract;\n\t\tbytes4 hexSymbol;\n\t\tbool isReg;\n\t}\n\n    function() public payable {\n\t\trevert();\n    }\n    \n    constructor() public {\n    }\n    \n    function registerCoin(string _name, string _symbol, address _coinTokenContract) public onlySecurity {\n\t\trequire(coin[_name].isReg == false);\n\t\tbytes4 _hexSymbol = convertStringToBytes(_name);\n        coin[_name] = Coin ({\n            symbol: _symbol,\n            coinTokenContract: _coinTokenContract,\n            hexSymbol: _hexSymbol,\n            isReg: true\n        });\n        registeredCoins.push(_coinTokenContract);\n\t\t\n\t\temit RegisterCoin(_name, _name, _symbol, _coinTokenContract);\n    }\n\t\n\tfunction removeCoin(string _name) public onlyOwner {\n\t\trequire(coin[_name].isReg == true);\n\t\tcoin[_name] = Coin({\n\t\t\tsymbol: \"\",\n\t\t\tcoinTokenContract: 0x0,\n\t\t\thexSymbol: 0x0,\n\t\t\tisReg: false\n\t\t});\n\t}\n\t\n\tfunction securityReg(address _securityWallet) public onlyOwner {\n\t\trequire(registeredSecurity[_securityWallet] == false);\n\t\tregisteredSecurity[_securityWallet] = true;\n\t\temit SecurityReg(_securityWallet, true);\n\t}\n\t\n\tfunction getSymbol(string _coinName) public view returns(string _symbol) {\n\t\treturn coin[_coinName].symbol;\n\t}\n\t\n\tfunction getHexSymbol(string _coinName) public view returns(bytes4 _hexSymbol) {\n\t\treturn coin[_coinName].hexSymbol;\n\t}\n\t\n   \tfunction getCoinAddress(string _coinName) public view returns(address _coinTokenContract) {\n\t\treturn coin[_coinName].coinTokenContract;\n\t}\n\t\n\tfunction getIsCoinReg(string _coinName) public view returns(bool _isCoinReg) {\n\t\treturn coin[_coinName].isReg;\n\t}\n\t\n\tfunction getCoinInfo(string _coinName) public view returns(string _symbol, address coinAddress, bytes4 _hexSymbol, bool _isReg) {\n\t\treturn (getSymbol(_coinName),getCoinAddress(_coinName),getHexSymbol(_coinName),getIsCoinReg(_coinName));\n\t}\n\t\n\tfunction getIsSecurityWalletReg(address _wallet) public view returns(bool _isReg) {\n\t\treturn registeredSecurity[_wallet];\n\t}\n\t\n    function convertStringToBytes(string memory source) internal pure returns (bytes4 result) {\n        bytes memory tempEmptyStringTest = bytes(source);\n        if (tempEmptyStringTest.length == 0) {\n            return 0x0;\n        }\n        assembly {\n            result := mload(add(source, 32))\n        }\n    }\n}",
        "debug": "keccac_0_+\nKECCAC_mem_288_+\n32*\nConcat(0,\n_______Extract(255,\n_______________5,\n_______________31_+\n_______________calldata_PublicTokenRegister_4_+_calldata_PublicTokenRegister_4))_+\n32): 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nmem_160 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_PublicTokenRegister_4 + calldata_PublicTokenRegister_4)) +\n0: 0x9ffbffffffffd99db48e28ffffffffffffffffffffffffffffffffffffffffe8\nmem_mem_160 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_PublicTokenRegister_4 + calldata_PublicTokenRegister_4)) +\n0: 0x2021fda91bfffffffffffffffffffffffffffffffffffffffff8\nstorage_1 +\nKECCAC_mem_128 +\n32 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_PublicTokenRegister_4 + calldata_PublicTokenRegister_4))): 0xff00\ncalldata_PublicTokenRegister_4 + calldata_PublicTokenRegister_4: 0x1f\nstorage_0: 0x0\ncaller: 0x0\ncalldata_PublicTokenRegister_0: 0xc392079f00000000000000000000000000000000000000000000000000000000\ncalldatasize_PublicTokenRegister: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `removeCoin(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/46/0x4a96396566fad1033470c9ff848fd69c101a87e2.sol",
        "function": "removeCoin(string)",
        "lineno": 40,
        "title": "Integer Overflow ",
        "type": "Warning"
      }
    ],
    "success": true
  }
}