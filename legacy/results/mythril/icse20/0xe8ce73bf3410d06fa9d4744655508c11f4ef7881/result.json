{
  "contract": "0xe8ce73bf3410d06fa9d4744655508c11f4ef7881",
  "tool": "mythril",
  "start": 1563597364.8117335,
  "end": 1563597473.6398299,
  "duration": 108.82809638977051,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 2952,
        "code": "ract, uint64 startTs) intern",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_SVLightIndexShim_32 + 4: 0x0\nstorage_2 +\nkeccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\ncalldata_SVLightIndexShim_4: 0x0\ncalldata_SVLightIndexShim_0: 0x8825701600000000000000000000000000000000000000000000000000000000\ncalldatasize_SVLightIndexShim: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/23/0xe8ce73bf3410d06fa9d4744655508c11f4ef7881.sol",
        "function": "getNthBallot(bytes32,uint256)",
        "lineno": 310,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3721,
        "code": "y(democs[demo",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/23/0xe8ce73bf3410d06fa9d4744655508c11f4ef7881.sol",
        "function": "addBallot(bytes32,bytes32,address)",
        "lineno": 327,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 3721,
        "code": "y(democs[demo",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3885\n",
        "filename": "/unique_chucks/23/0xe8ce73bf3410d06fa9d4744655508c11f4ef7881.sol",
        "function": "addBallot(bytes32,bytes32,address)",
        "lineno": 327,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 3885,
        "code": "            pu",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/23/0xe8ce73bf3410d06fa9d4744655508c11f4ef7881.sol",
        "function": "addBallot(bytes32,bytes32,address)",
        "lineno": 328,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 4027,
        "code": " address admin);\n    event",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_SVLightIndexShim_4: 0x0\nstorage_2: 0x0\ncalldata_SVLightIndexShim_0: 0xdf2484ff00000000000000000000000000000000000000000000000000000000\ncalldatasize_SVLightIndexShim: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/23/0xe8ce73bf3410d06fa9d4744655508c11f4ef7881.sol",
        "function": "_function_0xdf2484ff",
        "lineno": 233,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 4620,
        "code": ";\n\n\n//\n// SVLightB",
        "debug": "storage_2 +\nkeccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\ncalldata_SVLightIndexShim_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nretval_3885: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nreturndatasize: 0x20\nretval_3721: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_1 +\nkeccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\ncalldata_SVLightIndexShim_4: 0x0\ncaller: 0x0\ncalldata_SVLightIndexShim_0: 0xa1a1efe700000000000000000000000000000000000000000000000000000000\ncalldatasize_SVLightIndexShim: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `addBallot(bytes32,bytes32,address)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/23/0xe8ce73bf3410d06fa9d4744655508c11f4ef7881.sol",
        "function": "addBallot(bytes32,bytes32,address)",
        "lineno": 1,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 4623,
        "code": "tBox\n// Single use cont",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/23/0xe8ce73bf3410d06fa9d4744655508c11f4ef7881.sol",
        "function": "addBallot(bytes32,bytes32,address)",
        "lineno": 5,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 4672,
        "code": "             public\n                      {\n        SVLightBallotBox bb = SVLightBal",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/23/0xe8ce73bf3410d06fa9d4744655508c11f4ef7881.sol",
        "function": "addBallot(bytes32,bytes32,address)",
        "lineno": 317,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 4688,
        "code": "             public\n                      {\n        SVLightBallotBox bb = SVLightBal",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/23/0xe8ce73bf3410d06fa9d4744655508c11f4ef7881.sol",
        "function": "addBallot(bytes32,bytes32,address)",
        "lineno": 317,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 4758,
        "code": "             public\n                      {\n        SVLightBallotBox bb = SVLightBal",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/23/0xe8ce73bf3410d06fa9d4744655508c11f4ef7881.sol",
        "function": "addBallot(bytes32,bytes32,address)",
        "lineno": 317,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 4805,
        "code": "             public\n                      {\n        SVLightBallotBox bb = SVLightBal",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/23/0xe8ce73bf3410d06fa9d4744655508c11f4ef7881.sol",
        "function": "addBallot(bytes32,bytes32,address)",
        "lineno": 317,
        "title": "State change after external call",
        "type": "Warning"
      }
    ],
    "success": true
  }
}