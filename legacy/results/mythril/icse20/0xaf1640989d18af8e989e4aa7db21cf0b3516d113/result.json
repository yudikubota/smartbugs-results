{
  "contract": "0xaf1640989d18af8e989e4aa7db21cf0b3516d113",
  "tool": "mythril",
  "start": 1563691579.7604551,
  "end": 1563691738.285454,
  "duration": 158.52499890327454,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 537,
        "code": "0; ui < _to.length; ui++) {\n\n            balances[msg.sender] = balances[msg.sender].sub(_amount[ui]);\n\n            balances[_to[ui]] = balances[_to[ui]].add(_amount[ui]);\n\n        \n\n            emit Transfer(msg.sender, _to[ui], _amount[ui]);\n\n        }\n\n    \n\n        return true;\n\n    }\n\n}\n\n// ----------------------------------------------------------------------------\n\n// @title Burnable Token\n\n// @dev Token that can be irreversibly burned (destroyed).\n\n// ----------------------------------------------------------------------------\n\ncontract BurnableToken is StandardToken, Ownable {\n\n\n\n    event BurnAdminAmount(address indexed burner, uint256 value);\n\n\n\n    function burnAdminAmount(uint256 _value) onlyOwner public {\n\n        require(_value <= balances[ms",
        "debug": "calldata_TESTOS_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_TESTOS_0: 0x896937e00000000000000000000000000000000000000000000000000000000\ncalldatasize_TESTOS: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `MultiTransfer(address[],uint256[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/36/0xaf1640989d18af8e989e4aa7db21cf0b3516d113.sol",
        "function": "MultiTransfer(address[],uint256[])",
        "lineno": 463,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 7068,
        "code": "}\n\n}\n",
        "debug": "storage_1: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncalldata_TESTOS_32 + 4: 0x57f25cd000000000000000000000000000000000000000000000000000000000\nstorage_5: 0x0\nstorage_3: 0x0\ncaller: 0x0\ncalldata_TESTOS_0: 0x40c10f1900000000000000000000000000000000000000000000000000000000\ncalldatasize_TESTOS: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `mint(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/36/0xaf1640989d18af8e989e4aa7db21cf0b3516d113.sol",
        "function": "mint(address,uint256)",
        "lineno": 63,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 7081,
        "code": "--------------",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_1: 0x1\ncalldata_TESTOS_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_5: 0x0\nstorage_3: 0x0\ncaller: 0x0\ncalldata_TESTOS_0: 0x40c10f1900000000000000000000000000000000000000000000000000000000\ncalldatasize_TESTOS: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/36/0xaf1640989d18af8e989e4aa7db21cf0b3516d113.sol",
        "function": "mint(address,uint256)",
        "lineno": 67,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}