{"error": null, "issues": [{"address": 4285, "code": "val(spender, addedValue, msg.sender);\n        }\n    ", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/17/0xb8e63ef835b54fcd60282271212c75a32adb615c.sol", "function": "approve(address,uint256)", "lineno": 851, "title": "Message call to external contract", "type": "Informational"}, {"address": 4285, "code": "val(spender, addedValue, msg.sender);\n        }\n    ", "debug": "", "description": "A possible transaction order independence vulnerability exists in function approve(address,uint256). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/17/0xb8e63ef835b54fcd60282271212c75a32adb615c.sol", "function": "approve(address,uint256)", "lineno": 851, "title": "Transaction order dependence", "type": "Warning"}, {"address": 4608, "code": "**\n   * @dev Modifier", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/17/0xb8e63ef835b54fcd60282271212c75a32adb615c.sol", "function": "_function_0x17ffc320", "lineno": 148, "title": "Message call to external contract", "type": "Warning"}, {"address": 4608, "code": "**\n   * @dev Modifier", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 13788\n", "filename": "/unique_chucks/17/0xb8e63ef835b54fcd60282271212c75a32adb615c.sol", "function": "_function_0x17ffc320", "lineno": 148, "title": "Multiple Calls", "type": "Information"}, {"address": 4987, "code": "ount);\n        balances[accoun", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/17/0xb8e63ef835b54fcd60282271212c75a32adb615c.sol", "function": "totalSupply()", "lineno": 865, "title": "Message call to external contract", "type": "Informational"}, {"address": 4987, "code": "ount);\n        balances[accoun", "debug": "", "description": "A possible transaction order independence vulnerability exists in function totalSupply(). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/17/0xb8e63ef835b54fcd60282271212c75a32adb615c.sol", "function": "totalSupply()", "lineno": 865, "title": "Transaction order dependence", "type": "Warning"}, {"address": 5940, "code": "se {\n            retur", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/17/0xb8e63ef835b54fcd60282271212c75a32adb615c.sol", "function": "transferFrom(address,address,uint256)", "lineno": 826, "title": "Message call to external contract", "type": "Informational"}, {"address": 5940, "code": "se {\n            retur", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 6742\nCall at address: 6200\n", "filename": "/unique_chucks/17/0xb8e63ef835b54fcd60282271212c75a32adb615c.sol", "function": "transferFrom(address,address,uint256)", "lineno": 826, "title": "Multiple Calls", "type": "Information"}, {"address": 6200, "code": "prove(spender, value", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/17/0xb8e63ef835b54fcd60282271212c75a32adb615c.sol", "function": "transferFrom(address,address,uint256)", "lineno": 827, "title": "Message call to external contract", "type": "Informational"}, {"address": 6200, "code": "prove(spender, value", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 6742\n", "filename": "/unique_chucks/17/0xb8e63ef835b54fcd60282271212c75a32adb615c.sol", "function": "transferFrom(address,address,uint256)", "lineno": 827, "title": "Multiple Calls", "type": "Information"}, {"address": 6742, "code": "gateAllowance(_owner, spender);\n        }\n    }\n\n    funct", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/17/0xb8e63ef835b54fcd60282271212c75a32adb615c.sol", "function": "transferFrom(address,address,uint256)", "lineno": 835, "title": "Message call to external contract", "type": "Informational"}, {"address": 7098, "code": "ithout compiler warning. If we\n  * le", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/17/0xb8e63ef835b54fcd60282271212c75a32adb615c.sol", "function": "reclaimContract(address)", "lineno": 211, "title": "Message call to external contract", "type": "Warning"}, {"address": 7604, "code": ", uint newMax) onlyOwner public {\n ", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/17/0xb8e63ef835b54fcd60282271212c75a32adb615c.sol", "function": "mint(address,uint256)", "lineno": 784, "title": "Message call to external contract", "type": "Informational"}, {"address": 8288, "code": "r(address(0), _to, _amount);\n      ", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/17/0xb8e63ef835b54fcd60282271212c75a32adb615c.sol", "function": "burn(uint256)", "lineno": 774, "title": "Message call to external contract", "type": "Informational"}, {"address": 13788, "code": "ss which you want to tran", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/17/0xb8e63ef835b54fcd60282271212c75a32adb615c.sol", "function": "_function_0x17ffc320", "lineno": 615, "title": "Message call to external contract", "type": "Warning"}], "success": true}