{
  "contract": "0x2590e91567135039d7f31d46d347e2d66eec78af",
  "tool": "mythril",
  "start": 1563548445.160339,
  "end": 1563548569.2251623,
  "duration": 124.06482315063477,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 3457,
        "code": "retur",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TokenERC20_4: 0xdee7ffb3ffffff973fffe1dffff7ffffffffffb98fd4dffbfffeffebc94d001f\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TokenERC20_32_+_4: 0xe19b4553614924d0a1a3892400000000000000211f0382320a81019e013c17f9\ncalldata_TokenERC20_32 + 36: 0x3aceffbbea5fa69e3996812fffefffffffffffb740950296b3fefe61c1ea9201\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x3aceffbbea5fa69e3996812fffefffffffffffb740950296b3fefe61c1ea9201\ncalldata_TokenERC20_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_TokenERC20_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenERC20: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `transferFrom(address,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/17/0x2590e91567135039d7f31d46d347e2d66eec78af.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 34,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 3470,
        "code": "}\n}\n\ncontract ",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TokenERC20_4: 0xd2955cfe9ff8d51fdbbbe0fff13e1c800000003ef72811bccffc1f01e000001c\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TokenERC20_32_+_4: 0x9308aa0e6d202b0d53a0978a1161134509d1348803d3b81eca83a06149831a5d\ncalldata_TokenERC20_32 + 36: 0xb9620cdda62f6ac8a4b737b5ed3dda3d397100ee9a329fcecefbdd7d6dfbca1d\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xb9620cdda62f6ac8a4b737b5ed3dda3d397100ee9a329fcecefbdd7d6dfbca1d\ncalldata_TokenERC20_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_TokenERC20_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenERC20: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/17/0x2590e91567135039d7f31d46d347e2d66eec78af.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 35,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 6246,
        "code": "}\n\t\n\tfunction buys(u",
        "debug": "timestamp: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TokenERC20_4: 0x1\ncalldata_TokenERC20_0: 0x2a1832fa00000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenERC20: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer underflow exists in the function `cha(address)`.\nThe subtraction may result in a value < 0.",
        "filename": "/unique_chucks/17/0x2590e91567135039d7f31d46d347e2d66eec78af.sol",
        "function": "cha(address)",
        "lineno": 148,
        "title": "Integer Underflow",
        "type": "Warning"
      },
      {
        "address": 9552,
        "code": "[_owner] * (9 - a) /",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TokenERC20_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffff7fffffffffe\ncalldata_TokenERC20_32 + 36: 0x0\ntimestamp: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffff7fffffffffd\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncalldata_TokenERC20_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_TokenERC20_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenERC20: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer underflow exists in the function `transferFrom(address,address,uint256)`.\nThe subtraction may result in a value < 0.",
        "filename": "/unique_chucks/17/0x2590e91567135039d7f31d46d347e2d66eec78af.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 134,
        "title": "Integer Underflow",
        "type": "Warning"
      }
    ],
    "success": true
  }
}