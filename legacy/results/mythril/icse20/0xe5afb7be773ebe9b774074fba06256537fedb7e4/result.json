{
  "contract": "0xe5afb7be773ebe9b774074fba06256537fedb7e4",
  "tool": "mythril",
  "start": 1563794679.8708034,
  "end": 1563794994.1351151,
  "duration": 314.2643117904663,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 1023,
        "code": "gth == unixTimes.length);\n                \n        for(uint j = 0; j < targets.length; j++){\n            require(unlockUnixTime[targets[j]] < unixTimes[j]);\n            unlockUnixTime[targets[j]] = unixTimes[j];\n            LockedFunds(targets[j], unixTimes[j]);\n        }\n    }\n\n    function transfer(address _to, uint _value, bytes _data, string _custom_fallback) public returns (bool success) {\n        require(_value > 0\n       ",
        "debug": "calldata_WINMEDICSCOIN_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_WINMEDICSCOIN_0: 0x64ddc60500000000000000000000000000000000000000000000000000000000\ncalldatasize_WINMEDICSCOIN: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `_function_0x64ddc605`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/32/0xe5afb7be773ebe9b774074fba06256537fedb7e4.sol",
        "function": "_function_0x64ddc605",
        "lineno": 148,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 10597,
        "code": " >= a",
        "debug": "storage_5: 0xb2c81e3be60b809eebca250ae5f3958de8241f3c0942692d3cecd1fd00743211\ncalldata_WINMEDICSCOIN_32 + 4: 0x93931c13e507cbbcbf74d9eee4fb920eeaef84aa5110428da2eddb017d5ebcdd\nstorage_7: 0x0\nstorage_1: 0x0\ncaller: 0x0\ncalldata_WINMEDICSCOIN_0: 0x40c10f1900000000000000000000000000000000000000000000000000000000\ncalldatasize_WINMEDICSCOIN: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `mint(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/32/0xe5afb7be773ebe9b774074fba06256537fedb7e4.sol",
        "function": "mint(address,uint256)",
        "lineno": 25,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 10610,
        "code": "return c;\n    ",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_5: 0xc63a21246c99b000ea0030728005ea6909080a424a47ca48059be3c0ff803205\ncalldata_WINMEDICSCOIN_32 + 4: 0xd2bd697b67b8b7eebcef8ebaf405ca6a0b728a06c347eda3d5dbebfeffbdb977\nstorage_7: 0x0\nstorage_1: 0x0\ncaller: 0x0\ncalldata_WINMEDICSCOIN_0: 0x40c10f1900000000000000000000000000000000000000000000000000000000\ncalldatasize_WINMEDICSCOIN: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/32/0xe5afb7be773ebe9b774074fba06256537fedb7e4.sol",
        "function": "mint(address,uint256)",
        "lineno": 26,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}