{
  "contract": "0x2836ad31220bb62d0df9f1b6354c75118dcbf247",
  "tool": "mythril",
  "start": 1563623889.3897767,
  "end": 1563624154.412816,
  "duration": 265.0230393409729,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 1399,
        "code": "Supply +",
        "debug": "callvalue: 0x327238000000000\nstorage_6: 0x87680401417c80023902808c0000000000000000000000000000000000000003\ncalldata_TLIFE_0: 0x300000000000000000000000000000000000000000000000000000000\ncalldatasize_TLIFE: 0x4\n",
        "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/24/0x2836ad31220bb62d0df9f1b6354c75118dcbf247.sol",
        "function": "fallback",
        "lineno": 128,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1418,
        "code": "     totalSupply += t",
        "debug": "The exception is triggered under the following conditions:\n\ncallvalue: 0x27000001c00000\nstorage_6: 0x0\ncalldata_TLIFE_0: 0x300000000000000000000000000000000000000000000000000000000\ncalldatasize_TLIFE: 0x4\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/24/0x2836ad31220bb62d0df9f1b6354c75118dcbf247.sol",
        "function": "fallback",
        "lineno": 128,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3547,
        "code": "     emit Transfer(_from, _t",
        "debug": "calldatasize_TLIFE: 0x70\nbalance_at_1461501637330902918203684832716283019655932542975 & 0: 0x0\nstorage_5: 0x1\nstorage_2: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_TLIFE_32 + 4: 0x0\ncalldata_TLIFE_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldata_TLIFE_32 + 36: 0x0\ncallvalue: 0x0\n",
        "description": "A possible integer underflow exists in the function `transferFrom(address,address,uint256)`.\nThe subtraction may result in a value < 0.",
        "filename": "/unique_chucks/24/0x2836ad31220bb62d0df9f1b6354c75118dcbf247.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 207,
        "title": "Integer Underflow",
        "type": "Warning"
      },
      {
        "address": 3943,
        "code": "     owner.transfer(address(this)",
        "debug": "The exception is triggered under the following conditions:\n\ncalldatasize_TLIFE: 0x70\ncalldata_TLIFE_32 + 4: 0x0\ncalldata_TLIFE_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\nstorage_2: 0x0\ncalldata_TLIFE_32 + 36: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/24/0x2836ad31220bb62d0df9f1b6354c75118dcbf247.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 217,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}