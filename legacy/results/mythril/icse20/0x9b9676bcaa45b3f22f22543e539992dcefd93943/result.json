{
  "contract": "0x9b9676bcaa45b3f22f22543e539992dcefd93943",
  "tool": "mythril",
  "start": 1563740858.3870864,
  "end": 1563741076.0704038,
  "duration": 217.68331742286682,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 2400,
        "code": "y;\n  function balanceOf(a",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/43/0x9b9676bcaa45b3f22f22543e539992dcefd93943.sol",
        "function": "reclaimToken(address)",
        "lineno": 130,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 2400,
        "code": "y;\n  function balanceOf(a",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2658\n",
        "filename": "/unique_chucks/43/0x9b9676bcaa45b3f22f22543e539992dcefd93943.sol",
        "function": "reclaimToken(address)",
        "lineno": 130,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 2658,
        "code": "who) constant returns (uint256);\n ",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/43/0x9b9676bcaa45b3f22f22543e539992dcefd93943.sol",
        "function": "reclaimToken(address)",
        "lineno": 131,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 4037,
        "code": "ompatible tokens\n  * @pa",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function reclaimEther(). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/43/0x9b9676bcaa45b3f22f22543e539992dcefd93943.sol",
        "function": "reclaimEther()",
        "lineno": 109,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 4049,
        "code": "ERC23 compatible tokens\n  * @par",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_3: 0x0\ncaller: 0x0\ncalldata_WIZE_0: 0x9f727c2700000000000000000000000000000000000000000000000000000000\ncalldatasize_WIZE: 0x4\nretval_4037: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/43/0x9b9676bcaa45b3f22f22543e539992dcefd93943.sol",
        "function": "reclaimEther()",
        "lineno": 109,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 4941,
        "code": " a);\n",
        "debug": "calldata_WIZE_32 + 4: 0xc290137095b13347e55005a6dc184559e0489f1233480050d0fb4bba17d34179\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_WIZE_4: 0x9c9efb7ae5acd378025256a3945f5859076e809243093d9ecae2636c9fd28979\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xc290137095b13347e55005a6dc184559e0489f1233480050d0fb4bba17d34179\ncalldata_WIZE_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncalldatasize_WIZE: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `transfer(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/43/0x9b9676bcaa45b3f22f22543e539992dcefd93943.sol",
        "function": "transfer(address,uint256)",
        "lineno": 24,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 4954,
        "code": "urn c;\n  }\n}\n\n",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_WIZE_32 + 4: 0x6218000d800000000000000000000000039800002005500633e06f771baff7fc\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_WIZE_4: 0xbd5dfeabad0efffffffffeffffffffffd599ffefbfe6f24271e80e64322c0700\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x6218000d800000000000000000000000039800002005500633e06f771baff7fc\ncalldata_WIZE_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncalldatasize_WIZE: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/43/0x9b9676bcaa45b3f22f22543e539992dcefd93943.sol",
        "function": "transfer(address,uint256)",
        "lineno": 25,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 4978,
        "code": "   return a - ",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncalldata_WIZE_32 + 4: 0x1\ncalldata_WIZE_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncalldatasize_WIZE: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/43/0x9b9676bcaa45b3f22f22543e539992dcefd93943.sol",
        "function": "transfer(address,uint256)",
        "lineno": 19,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}