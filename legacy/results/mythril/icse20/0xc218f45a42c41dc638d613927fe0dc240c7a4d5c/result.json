{
  "contract": "0xc218f45a42c41dc638d613927fe0dc240c7a4d5c",
  "tool": "mythril",
  "start": 1563795380.3783932,
  "end": 1563795405.4215097,
  "duration": 25.043116569519043,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 123,
        "code": "haseFor(address pack, address[] memory users, uint16 packCount, address referrer) public payable {\n        \n        uint price = PackInterface(pack).calculatePrice(PackInterface(pack).basePrice(), packCount);\n        \n        for (uint i = 0; i < users.length; i++) {\n            \n            PackInterface(pack).purchaseFor.value(price)(users[i], packCount, referrer);\n        }\n    }\n    \n}",
        "debug": "calldata_PackInterface_32 + 4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_PackInterface_0: 0x43e4262200000000000000000000000000000000000000000000000000000000\ncalldatasize_PackInterface: 0x4\n",
        "description": "A possible integer overflow exists in the function `purchaseFor(address,address[],uint16,address)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/32/0xc218f45a42c41dc638d613927fe0dc240c7a4d5c.sol",
        "function": "purchaseFor(address,address[],uint16,address)",
        "lineno": 14,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 371,
        "code": "ack).basePrice(), packCount);\n ",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/32/0xc218f45a42c41dc638d613927fe0dc240c7a4d5c.sol",
        "function": "purchaseFor(address,address[],uint16,address)",
        "lineno": 16,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 371,
        "code": "ack).basePrice(), packCount);\n ",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 849\nCall at address: 849\nCall at address: 849\nCall at address: 528\n",
        "filename": "/unique_chucks/32/0xc218f45a42c41dc638d613927fe0dc240c7a4d5c.sol",
        "function": "purchaseFor(address,address[],uint16,address)",
        "lineno": 16,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 528,
        "code": "ack).calculatePrice(PackInterface(pack).basePrice(), packCount);\n        \n    ",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/32/0xc218f45a42c41dc638d613927fe0dc240c7a4d5c.sol",
        "function": "purchaseFor(address,address[],uint16,address)",
        "lineno": 16,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 528,
        "code": "ack).calculatePrice(PackInterface(pack).basePrice(), packCount);\n        \n    ",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 849\nCall at address: 849\nCall at address: 849\n",
        "filename": "/unique_chucks/32/0xc218f45a42c41dc638d613927fe0dc240c7a4d5c.sol",
        "function": "purchaseFor(address,address[],uint16,address)",
        "lineno": 16,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 849,
        "code": ".purchaseFor.value(price)(users[i], packCount, referrer);\n        }\n    }\n ",
        "debug": "SOLVER OUTPUT:\ncalldata_PackInterface_4 + calldata_PackInterface_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nretval_528: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nreturndatasize: 0x20\nretval_371: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_PackInterface_0: 0x43e4262200000000000000000000000000000000000000000000000000000000\ncalldatasize_PackInterface: 0x4\n",
        "description": "In the function `purchaseFor(address,address[],uint16,address)` a non-zero amount of Ether is sent to an address taken from function arguments.\nIt seems that this function can be called without restrictions.",
        "filename": "/unique_chucks/32/0xc218f45a42c41dc638d613927fe0dc240c7a4d5c.sol",
        "function": "purchaseFor(address,address[],uint16,address)",
        "lineno": 20,
        "title": "Ether send",
        "type": "Warning"
      },
      {
        "address": 849,
        "code": ".purchaseFor.value(price)(users[i], packCount, referrer);\n        }\n    }\n ",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/32/0xc218f45a42c41dc638d613927fe0dc240c7a4d5c.sol",
        "function": "purchaseFor(address,address[],uint16,address)",
        "lineno": 20,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 849,
        "code": ".purchaseFor.value(price)(users[i], packCount, referrer);\n        }\n    }\n ",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 849\nCall at address: 849\n",
        "filename": "/unique_chucks/32/0xc218f45a42c41dc638d613927fe0dc240c7a4d5c.sol",
        "function": "purchaseFor(address,address[],uint16,address)",
        "lineno": 20,
        "title": "Multiple Calls",
        "type": "Information"
      }
    ],
    "success": true
  }
}