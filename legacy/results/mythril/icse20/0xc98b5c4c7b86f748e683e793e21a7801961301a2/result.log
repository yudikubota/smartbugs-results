{"error": null, "issues": [{"address": 432, "code": "a rating, the amount of E", "debug": "The exception is triggered under the following conditions:\n\nstorage_35: 0x8000\ncalldata_WhiskyTokenCrowdsale_0: 0x55ad42e00000000000000000000000000000000000000000000000000000000\ncalldatasize_WhiskyTokenCrowdsale: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/12/0xc98b5c4c7b86f748e683e793e21a7801961301a2.sol", "function": "_function_0x055ad42e", "lineno": 699, "title": "Exception state", "type": "Informational"}, {"address": 2202, "code": " > 0) {\n            uint256 amount", "debug": "The exception is triggered under the following conditions:\n\nstorage_35: 0x8000\nstorage_7: 0x0\ncalldata_WhiskyTokenCrowdsale_4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_WhiskyTokenCrowdsale_0: 0x58ff511100000000000000000000000000000000000000000000000000000000\ncalldatasize_WhiskyTokenCrowdsale: 0x4\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/12/0xc98b5c4c7b86f748e683e793e21a7801961301a2.sol", "function": "buyTokenForAddress(address)", "lineno": 904, "title": "Exception state", "type": "Informational"}, {"address": 2659, "code": "TH.add(amount);\n            amountEuroCents = am", "debug": "The exception is triggered under the following conditions:\n\nstorage_35: 0x200\nstorage_0 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xfe00\nstorage_7: 0x0\ncalldatasize_WhiskyTokenCrowdsale: 0x3\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/12/0xc98b5c4c7b86f748e683e793e21a7801961301a2.sol", "function": "fallback", "lineno": 907, "title": "Exception state", "type": "Informational"}, {"address": 2855, "code": "dev Internal function for checki", "debug": "The exception is triggered under the following conditions:\n\nstorage_35: 0x8000\ntimestamp: 0x0\nstorage_3: 0x0\ncalldata_WhiskyTokenCrowdsale_0: 0x1cb3b2000000000000000000000000000000000000000000000000000000000\ncalldatasize_WhiskyTokenCrowdsale: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/12/0xc98b5c4c7b86f748e683e793e21a7801961301a2.sol", "function": "checkGoalReached()", "lineno": 825, "title": "Exception state", "type": "Informational"}, {"address": 2906, "code": " we reached our funding goal.\n   ", "debug": "The exception is triggered under the following conditions:\n\nstorage_35: 0x8000\ntimestamp: 0x0\nstorage_3: 0x1\ncalldata_WhiskyTokenCrowdsale_0: 0x1cb3b2000000000000000000000000000000000000000000000000000000000\ncalldatasize_WhiskyTokenCrowdsale: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/12/0xc98b5c4c7b86f748e683e793e21a7801961301a2.sol", "function": "checkGoalReached()", "lineno": 825, "title": "Exception state", "type": "Informational"}, {"address": 4615, "code": "eficiary The new address of t", "debug": "", "description": "A possible transaction order independence vulnerability exists in function earlySafeWithdrawal(uint256). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/12/0xc98b5c4c7b86f748e683e793e21a7801961301a2.sol", "function": "earlySafeWithdrawal(uint256)", "lineno": 1013, "title": "Transaction order dependence", "type": "Warning"}, {"address": 4815, "code": "aram _account The address of the ", "debug": "The exception is triggered under the following conditions:\n\nstorage_35: 0x8000\nstorage_0: 0x0\ncaller: 0x0\ncalldata_WhiskyTokenCrowdsale_0: 0x3eadb6db00000000000000000000000000000000000000000000000000000000\ncalldatasize_WhiskyTokenCrowdsale: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/12/0xc98b5c4c7b86f748e683e793e21a7801961301a2.sol", "function": "nextPhase()", "lineno": 772, "title": "Exception state", "type": "Informational"}, {"address": 12848, "code": "customer[_r", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/12/0xc98b5c4c7b86f748e683e793e21a7801961301a2.sol", "function": "fallback", "lineno": 925, "title": "Message call to external contract", "type": "Informational"}, {"address": 12848, "code": "customer[_r", "debug": "", "description": "A possible transaction order independence vulnerability exists in function fallback. The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/12/0xc98b5c4c7b86f748e683e793e21a7801961301a2.sol", "function": "fallback", "lineno": 925, "title": "Transaction order dependence", "type": "Warning"}, {"address": 14508, "code": "n mod", "debug": "storage_0 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x100\nstorage_35: 0x100\ncallvalue: 0xea2b29cde058c0e337ecfa81e38127912788307ca51e96f55407d359b3930195\nstorage_1 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xcaa376c1165e24f93cf9dfa404016fbb87aaa2de06de66a905a7965b3bdbfcd9\nstorage_7: 0x0\ncalldatasize_WhiskyTokenCrowdsale: 0x3\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/12/0xc98b5c4c7b86f748e683e793e21a7801961301a2.sol", "function": "fallback", "lineno": 216, "title": "Integer Overflow ", "type": "Warning"}], "success": true}