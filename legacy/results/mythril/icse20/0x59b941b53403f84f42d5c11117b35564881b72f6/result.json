{
  "contract": "0x59b941b53403f84f42d5c11117b35564881b72f6",
  "tool": "mythril",
  "start": 1563590303.980795,
  "end": 1563590517.3226871,
  "duration": 213.34189224243164,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 902,
        "code": "o transfer token to channel receiver\");\n        } else {\n            require(token.transfer(channel.receiver, payment), \"Unable to transfer token to channel receiver\");\n            uint256 change = channel.value.sub(payment);\n            require(token.transfer(channel.sender, change), \"Unable to transfer token to channel sender\");\n        }\n\n        delete channels[channelId];\n\n        emit DidClaim(channelId);\n    }\n\n    /*** CHANNEL STATE ***/\n\n    /// @notice Check if the channel is not present.\n    /// @param channelId Identifier of the channel.\n    function isAbsent(bytes32 channelId) public view returns(bool) {\n        PaymentChannel storage channel = channels[channelId];\n        return channel.sender == 0;\n    }\n\n    /// @notice Check if the channel is present: in open or settling state.\n    /// @param channelId Identifier of the channel.\n   ",
        "debug": "calldata_TokenUnidirectional_32 + 36: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_TokenUnidirectional_0: 0x7964ea8700000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenUnidirectional: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `claim(bytes32,uint256,bytes)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/23/0x59b941b53403f84f42d5c11117b35564881b72f6.sol",
        "function": "claim(bytes32,uint256,bytes)",
        "lineno": 432,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2162,
        "code": "   tokenContract: tokenContract\n        });\n\n       ",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/23/0x59b941b53403f84f42d5c11117b35564881b72f6.sol",
        "function": "open(bytes32,address,uint256,address,uint256)",
        "lineno": 329,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 2581,
        "code": "nContract);\n    }\n\n    /// @notice Ensure `origin` address can deposit funds into the channel identified by `channelId`.\n    /// @dev Constraint `deposit` call.\n    /// @param channelId Identifier of the channel.\n    /// @param origin Caller of `deposit` functi",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/23/0x59b941b53403f84f42d5c11117b35564881b72f6.sol",
        "function": "open(bytes32,address,uint256,address,uint256)",
        "lineno": 332,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 2652,
        "code": "nContract);\n    }\n\n    /// @notice Ensure `origin` address can deposit funds into the channel identified by `channelId`.\n    /// @dev Constraint `deposit` call.\n    /// @param channelId Identifier of the channel.\n    /// @param origin Caller of `deposit` functi",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/23/0x59b941b53403f84f42d5c11117b35564881b72f6.sol",
        "function": "open(bytes32,address,uint256,address,uint256)",
        "lineno": 332,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 2663,
        "code": "nContract);\n    }\n\n    /// @notice Ensure `origin` address can deposit funds into the channel identified by `channelId`.\n    /// @dev Constraint `deposit` call.\n    /// @param channelId Identifier of the channel.\n    /// @param origin Caller of `deposit` functi",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/23/0x59b941b53403f84f42d5c11117b35564881b72f6.sol",
        "function": "open(bytes32,address,uint256,address,uint256)",
        "lineno": 332,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 2673,
        "code": "nContract);\n    }\n\n    /// @notice Ensure `origin` address can deposit funds into the channel identified by `channelId`.\n    /// @dev Constraint `deposit` call.\n    /// @param channelId Identifier of the channel.\n    /// @param origin Caller of `deposit` functi",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/23/0x59b941b53403f84f42d5c11117b35564881b72f6.sol",
        "function": "open(bytes32,address,uint256,address,uint256)",
        "lineno": 332,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 2683,
        "code": "nContract);\n    }\n\n    /// @notice Ensure `origin` address can deposit funds into the channel identified by `channelId`.\n    /// @dev Constraint `deposit` call.\n    /// @param channelId Identifier of the channel.\n    /// @param origin Caller of `deposit` functi",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/23/0x59b941b53403f84f42d5c11117b35564881b72f6.sol",
        "function": "open(bytes32,address,uint256,address,uint256)",
        "lineno": 332,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 2753,
        "code": "nContract);\n    }\n\n    /// @notice Ensure `origin` address can deposit funds into the channel identified by `channelId`.\n    /// @dev Constraint `deposit` call.\n    /// @param channelId Identifier of the channel.\n    /// @param origin Caller of `deposit` functi",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/23/0x59b941b53403f84f42d5c11117b35564881b72f6.sol",
        "function": "open(bytes32,address,uint256,address,uint256)",
        "lineno": 332,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 3337,
        "code": "@param channelId Identifier of the channel.\n    /// ",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/23/0x59b941b53403f84f42d5c11117b35564881b72f6.sol",
        "function": "deposit(bytes32,uint256)",
        "lineno": 361,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 6389,
        "code": ").\n    /// @param channelId Identifier of the",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/23/0x59b941b53403f84f42d5c11117b35564881b72f6.sol",
        "function": "settle(bytes32)",
        "lineno": 406,
        "title": "Message call to external contract",
        "type": "Warning"
      }
    ],
    "success": true
  }
}