{"error": null, "issues": [{"address": 3690, "code": " supervisor);\n\t\t_;\n\t}\n\t\n\t/// @notice Transfer the owner", "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0x318b0f768f5c6c567227aa50b51b5b3078902f8c00\ncaller: 0xce74f08970a393a98dd855af4ae4a4cf876fd073\ncalldata_owned_0: 0x5fefda700000000000000000000000000000000000000000000000000000000\ncalldatasize_owned: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol", "function": "setPrices(uint256,uint256)", "lineno": 44, "title": "Exception state", "type": "Informational"}, {"address": 4397, "code": "lSupply - icoMin) {\n\t\t\tminimal", "debug": "The exception is triggered under the following conditions:\n\ncalldata_owned_4: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncalldata_owned_0: 0x95ea7b300000000000000000000000000000000000000000000000000000000\ncalldatasize_owned: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol", "function": "approve(address,uint256)", "lineno": 253, "title": "Exception state", "type": "Informational"}, {"address": 4714, "code": " supervisor);\n\t\t_;\n\t}\n\t\n\t/// @notice Transfer the owner", "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0x318b0f768f5c6c567227aa50b51b5b3078902f8c00\ncaller: 0xce74f08970a393a98dd855af4ae4a4cf876fd073\ncalldata_owned_0: 0xa2d967b00000000000000000000000000000000000000000000000000000000\ncalldatasize_owned: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol", "function": "stopThisIco(bool)", "lineno": 44, "title": "Exception state", "type": "Informational"}, {"address": 5169, "code": "[_from] >= _value);\n\t\trequire(al", "debug": "The exception is triggered under the following conditions:\n\ncaller: 0x0\ncalldata_owned_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_owned: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol", "function": "transferFrom(address,address,uint256)", "lineno": 230, "title": "Exception state", "type": "Informational"}, {"address": 5226, "code": "[_from][msg.sender] >= _val", "debug": "The exception is triggered under the following conditions:\n\ncalldata_owned_4: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_owned_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_owned: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol", "function": "transferFrom(address,address,uint256)", "lineno": 231, "title": "Exception state", "type": "Informational"}, {"address": 5283, "code": "\t\trequire(tokenBalanceOf[", "debug": "The exception is triggered under the following conditions:\n\ncalldata_owned_32 + 4: 0x0\ncalldata_owned_4: 0xffffffffffffffffffffffffffffffffffffffff\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_owned_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_owned: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol", "function": "transferFrom(address,address,uint256)", "lineno": 232, "title": "Exception state", "type": "Informational"}, {"address": 6700, "code": " supervisor);\n\t\t_;\n\t}\n\t\n\t/// @notice Transfer the owner", "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0x318b0f768f5c6c567227aa50b51b5b3078902f8c00\ncaller: 0xce74f08970a393a98dd855af4ae4a4cf876fd073\ncalldata_owned_0: 0x25b5160c00000000000000000000000000000000000000000000000000000000\ncalldatasize_owned: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol", "function": "setICOPrice(uint256)", "lineno": 44, "title": "Exception state", "type": "Informational"}, {"address": 6921, "code": " supervisor);\n\t\t_;\n\t}\n\t\n\t/// @notice Transfer the owner", "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0x318b0f768f5c6c567227aa50b51b5b3078902f8c00\ncaller: 0xce74f08970a393a98dd855af4ae4a4cf876fd073\ncalldata_owned_0: 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000\ncalldatasize_owned: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol", "function": "withdraw(uint256)", "lineno": 44, "title": "Exception state", "type": "Informational"}, {"address": 15183, "code": "ountHolders += 1;\n\t\t}\n\t\ttok", "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffdffe0000000000000000000000000000000000000000000000000004\nstorage_8: 0x3ffffffff7ff7fffffffffffffffffffffffffffffffffffffffffffffffffff\nbalance_at_1461501637330902918203684832716283019655932542975 & 0: 0x0\ncaller: 0x0\nstorage_10: 0xff00\ncalldata_owned_0: 0x9130f5d00000000000000000000000000000000000000000000000000000000\ncalldatasize_owned: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol", "function": "getAllMyTokensForAllEtherOnContract()", "lineno": 299, "title": "Exception state", "type": "Informational"}, {"address": 15240, "code": "anceOf[_from] -= _value;\n", "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffdffe0000000000000000000000000000000000000000000000000004\nstorage_8: 0x3ffffffff7ff7fffffffffffffffffffffffffffffffffffffffffffffffffff\nbalance_at_1461501637330902918203684832716283019655932542975 & 0: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\nstorage_10: 0xff00\ncalldata_owned_0: 0x9130f5d00000000000000000000000000000000000000000000000000000000\ncalldatasize_owned: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol", "function": "getAllMyTokensForAllEtherOnContract()", "lineno": 301, "title": "Exception state", "type": "Informational"}, {"address": 16760, "code": "quire(!icoIsClosed);\n\t\treq", "debug": "storage_1: 0x0\ncalldata_owned_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_3: 0x1\nstorage_10: 0xff00\nstorage_7: 0x0\ncaller: 0x318b0f768f5c6c567227aa50b51b5b3078902f8c\nstorage_0: 0xce74f08970a393a98dd855af4ae4a4cf876fd07300\ncalldata_owned_0: 0x25b5160c00000000000000000000000000000000000000000000000000000000\ncalldatasize_owned: 0x4\ncallvalue: 0x0\n", "description": "A possible integer underflow exists in the function `setICOPrice(uint256)`.\nThe subtraction may result in a value < 0.", "filename": "/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol", "function": "setICOPrice(uint256)", "lineno": 271, "title": "Integer Underflow", "type": "Warning"}], "success": true}