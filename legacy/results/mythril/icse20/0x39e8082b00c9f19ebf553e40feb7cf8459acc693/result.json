{
  "contract": "0x39e8082b00c9f19ebf553e40feb7cf8459acc693",
  "tool": "mythril",
  "start": 1563548042.4749632,
  "end": 1563548187.6280067,
  "duration": 145.15304350852966,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 696,
        "code": "Percent/100;\n            assert(all_token_num > 0);\n            // \u83b7\u5f97\u9501\u4ed3\u7684\u4efd\u989d\n            uint256 locked_token_num = all_token_num*founders[founderList[i]].lockedPercent/100;\n            // \u8bb0\u5f55\u9501\u4ed3\u7684token\n            founders[founderList[i]].lockedToken = locked_token_num;\n            // \u53d1\u653etoken\u7ed9\u521b\u59cb\u4eba\n            TIC.push(founderList[i], all_token_num - locked_token_num);\n        }\n        // \u8bbe\u7f6e\u53d1\u884c\u65f6\u95f4\n        distDay = today();\n        // \u66f4\u65b0\u9501\u4ed3\u65f6\u95f4\n        for(i=0; i<founderList.length; ++i){\n            if (founders[founderList[i]].lockedDay != 0){\n                founders[founderList[i]].lockedDay += distDay;\n            }\n        }\n    }\n\n    // \u786e\u8ba4\u9501\u4ed3\u65f6\u95f4\u662f\u5426\u5230\u4e86\uff0c\u7ed3\u675f\u9501\u4ed3\n    function checkLockedToken() public {\n        // \u5fc5\u987b\u53d1\u884c\u8fc7\n        assert(distDay != 0);\n        // \u662f\u5426\u662f\u6d4b\u8bd5\n        if (bTest){\n            // \u5224\u65ad\u4eca\u5929\u89e3\u9501\u8fc7\u4e86\u6ca1\u6709\n            assert(today() > testUnlockedDay);\n            // \u6bcf\u6b21\u56fa\u5b9a\u89e3\u95011%\n            uint unlock_percent = 1;\n            // \u7ed9\u9501\u4ed3\u7684\u6bcf\u4e2a\u4eba\uff0c\u505a\u89e3\u9501\u52a8\u4f5c TODO\n            uint i = 0;\n            for(i=0; i<founderList.length; ++i){\n ",
        "debug": "calldata_TICDist_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_TICDist_0: 0x4c47e9ee00000000000000000000000000000000000000000000000000000000\ncalldatasize_TICDist: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `_function_0x4c47e9ee`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/17/0x39e8082b00c9f19ebf553e40feb7cf8459acc693.sol",
        "function": "_function_0x4c47e9ee",
        "lineno": 456,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1977,
        "code": "t LogSetOwner(",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/17/0x39e8082b00c9f19ebf553e40feb7cf8459acc693.sol",
        "function": "setOwner(address)",
        "lineno": 29,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 2242,
        "code": "ist = founders_;\n        for (i=0;",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_2: 0xffffffffffffffffffffffffffffffffffffffff00\ncaller: 0x0\ncalldata_TICDist_0: 0x263c943500000000000000000000000000000000000000000000000000000000\ncalldatasize_TICDist: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/17/0x39e8082b00c9f19ebf553e40feb7cf8459acc693.sol",
        "function": "_function_0x263c9435",
        "lineno": 406,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2369,
        "code": "stPercent =",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/17/0x39e8082b00c9f19ebf553e40feb7cf8459acc693.sol",
        "function": "_function_0x263c9435",
        "lineno": 408,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 2369,
        "code": "stPercent =",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2561\n",
        "filename": "/unique_chucks/17/0x39e8082b00c9f19ebf553e40feb7cf8459acc693.sol",
        "function": "_function_0x263c9435",
        "lineno": 408,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 2455,
        "code": "[i]].distPercent = percents_[i];\n   ",
        "debug": "The exception is triggered under the following conditions:\n\nretval_2369: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nreturndatasize: 0x20\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_2: 0x0\ncaller: 0x0\ncalldata_TICDist_0: 0x263c943500000000000000000000000000000000000000000000000000000000\ncalldatasize_TICDist: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/17/0x39e8082b00c9f19ebf553e40feb7cf8459acc693.sol",
        "function": "_function_0x263c9435",
        "lineno": 408,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2561,
        "code": "   }\n\n    // \u8bbe\u7f6e\u53d1\u884c",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/17/0x39e8082b00c9f19ebf553e40feb7cf8459acc693.sol",
        "function": "_function_0x263c9435",
        "lineno": 412,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 2625,
        "code": "true;\n    }\n\n    // \u8bbe\u7f6e\u53d1\u884c\u9501\u4ed3\u53c2\u6570\n ",
        "debug": "The exception is triggered under the following conditions:\n\nretval_2369: 0xffffffffffffffffffffffff0000000000000000000000000000000000000000\nretval_2561: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nreturndatasize: 0x20\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_2: 0x0\ncaller: 0x0\ncalldata_TICDist_0: 0x263c943500000000000000000000000000000000000000000000000000000000\ncalldatasize_TICDist: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/17/0x39e8082b00c9f19ebf553e40feb7cf8459acc693.sol",
        "function": "_function_0x263c9435",
        "lineno": 411,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2956,
        "code": "[founderList[i]].loc",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_5: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncaller: 0x0\ncalldata_TICDist_0: 0x270a385600000000000000000000000000000000000000000000000000000000\ncalldatasize_TICDist: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/17/0x39e8082b00c9f19ebf553e40feb7cf8459acc693.sol",
        "function": "startDist()",
        "lineno": 489,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2987,
        "code": "                    uint256 ",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_6: 0x0\ncaller: 0x0\ncalldata_TICDist_0: 0x270a385600000000000000000000000000000000000000000000000000000000\ncalldatasize_TICDist: 0x4\nstorage_5: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/17/0x39e8082b00c9f19ebf553e40feb7cf8459acc693.sol",
        "function": "startDist()",
        "lineno": 491,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3304,
        "code": " \u6bcf\u5929\u91ca\u653e\u7684\u91cf\n         ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/17/0x39e8082b00c9f19ebf553e40feb7cf8459acc693.sol",
        "function": "startDist()",
        "lineno": 494,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 3304,
        "code": " \u6bcf\u5929\u91ca\u653e\u7684\u91cf\n         ",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function startDist(). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/17/0x39e8082b00c9f19ebf553e40feb7cf8459acc693.sol",
        "function": "startDist()",
        "lineno": 494,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 4360,
        "code": "derList[i]].lockedPercent/10",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_6: 0x0\ncaller: 0x0\ncalldata_TICDist_0: 0x4c47e9ee00000000000000000000000000000000000000000000000000000000\ncalldatasize_TICDist: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/17/0x39e8082b00c9f19ebf553e40feb7cf8459acc693.sol",
        "function": "_function_0x4c47e9ee",
        "lineno": 459,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 4391,
        "code": "ders[founderList[i]].lockedToke",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_6: 0xff00\ncaller: 0x0\ncalldata_TICDist_0: 0x4c47e9ee00000000000000000000000000000000000000000000000000000000\ncalldatasize_TICDist: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/17/0x39e8082b00c9f19ebf553e40feb7cf8459acc693.sol",
        "function": "_function_0x4c47e9ee",
        "lineno": 461,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 4957,
        "code": "          // \u5f00\u59cb\u89e3\u9501 to",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_TICDist_0: 0x5c13d06f00000000000000000000000000000000000000000000000000000000\ncalldatasize_TICDist: 0x4\nstorage_5: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/17/0x39e8082b00c9f19ebf553e40feb7cf8459acc693.sol",
        "function": "checkLockedToken()",
        "lineno": 514,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 6684,
        "debug": "The exception is triggered under the following conditions:\n\nstorage_6: 0x0\nstorage_5: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_TICDist_0: 0x5c13d06f00000000000000000000000000000000000000000000000000000000\ncalldatasize_TICDist: 0x4\nstorage_2 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/17/0x39e8082b00c9f19ebf553e40feb7cf8459acc693.sol",
        "function": "checkLockedToken()",
        "lineno": 532,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 6762,
        "debug": "The exception is triggered under the following conditions:\n\nstorage_2 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_6: 0x0\nstorage_5: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_TICDist_0: 0x5c13d06f00000000000000000000000000000000000000000000000000000000\ncalldatasize_TICDist: 0x4\nstorage_3 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/17/0x39e8082b00c9f19ebf553e40feb7cf8459acc693.sol",
        "function": "checkLockedToken()",
        "lineno": 532,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 8085,
        "code": "ion setDistConfig(address[] ",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_TICDist_4: 0x0\nstorage_8: 0x0\ncalldata_TICDist_0: 0xc75a622400000000000000000000000000000000000000000000000000000000\ncalldatasize_TICDist: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/17/0x39e8082b00c9f19ebf553e40feb7cf8459acc693.sol",
        "function": "_function_0xc75a6224",
        "lineno": 391,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 8791,
        "code": "\n\n\ncontract DSNote {\n    event Lo",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/17/0x39e8082b00c9f19ebf553e40feb7cf8459acc693.sol",
        "function": "_function_0x9d176556",
        "lineno": 56,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 8791,
        "code": "\n\n\ncontract DSNote {\n    event Lo",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2369\n",
        "filename": "/unique_chucks/17/0x39e8082b00c9f19ebf553e40feb7cf8459acc693.sol",
        "function": "_function_0x263c9435",
        "lineno": 56,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 8791,
        "code": "\n\n\ncontract DSNote {\n    event Lo",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function _function_0x9d176556. The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/17/0x39e8082b00c9f19ebf553e40feb7cf8459acc693.sol",
        "function": "_function_0x9d176556",
        "lineno": 56,
        "title": "Transaction order dependence",
        "type": "Warning"
      }
    ],
    "success": true
  }
}