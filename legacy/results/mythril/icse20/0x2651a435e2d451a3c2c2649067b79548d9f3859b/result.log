{"error": null, "issues": [{"address": 1283, "code": "r,startId)>=1) {\n        i", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/38/0x2651a435e2d451a3c2c2649067b79548d9f3859b.sol", "function": "getBattleCardList(address)", "lineno": 116, "title": "Message call to external contract", "type": "Informational"}, {"address": 1283, "code": "r,startId)>=1) {\n        i", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1568\n", "filename": "/unique_chucks/38/0x2651a435e2d451a3c2c2649067b79548d9f3859b.sol", "function": "getBattleCardList(address)", "lineno": 116, "title": "Multiple Calls", "type": "Information"}, {"address": 1283, "code": "r,startId)>=1) {\n        i", "debug": "", "description": "A possible transaction order independence vulnerability exists in function getBattleCardList(address). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/38/0x2651a435e2d451a3c2c2649067b79548d9f3859b.sol", "function": "getBattleCardList(address)", "lineno": 116, "title": "Transaction order dependence", "type": "Warning"}, {"address": 1568, "code": "_owner,startId);\n        i++;\n     ", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/38/0x2651a435e2d451a3c2c2649067b79548d9f3859b.sol", "function": "getBattleCardList(address)", "lineno": 118, "title": "Message call to external contract", "type": "Informational"}, {"address": 2383, "code": "eValue = schema.unitCoinProduction", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/38/0x2651a435e2d451a3c2c2649067b79548d9f3859b.sol", "function": "getUpgradeValue(address,uint256,uint256,uint256)", "lineno": 132, "title": "Message call to external contract", "type": "Informational"}, {"address": 2383, "code": "eValue = schema.unitCoinProduction", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 4574\nCall at address: 4317\nCall at address: 4113\nCall at address: 3837\nCall at address: 3578\nCall at address: 3319\nCall at address: 3041\nCall at address: 2833\nCall at address: 2608\n", "filename": "/unique_chucks/38/0x2651a435e2d451a3c2c2649067b79548d9f3859b.sol", "function": "getUpgradeValue(address,uint256,uint256,uint256)", "lineno": 132, "title": "Multiple Calls", "type": "Information"}, {"address": 2383, "code": "eValue = schema.unitCoinProduction", "debug": "", "description": "A possible transaction order independence vulnerability exists in function getUpgradeValue(address,uint256,uint256,uint256). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/38/0x2651a435e2d451a3c2c2649067b79548d9f3859b.sol", "function": "getUpgradeValue(address,uint256,uint256,uint256)", "lineno": 132, "title": "Transaction order dependence", "type": "Warning"}, {"address": 2608, "code": "roductionGain = upgradeValue * sc", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/38/0x2651a435e2d451a3c2c2649067b79548d9f3859b.sol", "function": "getUpgradeValue(address,uint256,uint256,uint256)", "lineno": 135, "title": "Message call to external contract", "type": "Informational"}, {"address": 2833, "code": "ain;\n      } \n    }else { // >= 1", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/38/0x2651a435e2d451a3c2c2649067b79548d9f3859b.sol", "function": "getUpgradeValue(address,uint256,uint256,uint256)", "lineno": 137, "title": "Message call to external contract", "type": "Informational"}, {"address": 2833, "code": "ain;\n      } \n    }else { // >= 1", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3041\n", "filename": "/unique_chucks/38/0x2651a435e2d451a3c2c2649067b79548d9f3859b.sol", "function": "getUpgradeValue(address,uint256,uint256,uint256)", "lineno": 137, "title": "Multiple Calls", "type": "Information"}, {"address": 3041, "code": "s == 0) {\n        productionGain ", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/38/0x2651a435e2d451a3c2c2649067b79548d9f3859b.sol", "function": "getUpgradeValue(address,uint256,uint256,uint256)", "lineno": 140, "title": "Message call to external contract", "type": "Informational"}, {"address": 3319, "code": "= preValue + productionGain;\n     } else if (upgrade", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/38/0x2651a435e2d451a3c2c2649067b79548d9f3859b.sol", "function": "getUpgradeValue(address,uint256,uint256,uint256)", "lineno": 143, "title": "Message call to external contract", "type": "Informational"}, {"address": 3319, "code": "= preValue + productionGain;\n     } else if (upgrade", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3837\nCall at address: 3578\n", "filename": "/unique_chucks/38/0x2651a435e2d451a3c2c2649067b79548d9f3859b.sol", "function": "getUpgradeValue(address,uint256,uint256,uint256)", "lineno": 143, "title": "Multiple Calls", "type": "Information"}, {"address": 3319, "code": "= preValue + productionGain;\n     } else if (upgrade", "debug": "", "description": "A possible transaction order independence vulnerability exists in function getUpgradeValue(address,uint256,uint256,uint256). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/38/0x2651a435e2d451a3c2c2649067b79548d9f3859b.sol", "function": "getUpgradeValue(address,uint256,uint256,uint256)", "lineno": 143, "title": "Transaction order dependence", "type": "Warning"}, {"address": 3578, "code": "etUintCoinProduction(player,unitId", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/38/0x2651a435e2d451a3c2c2649067b79548d9f3859b.sol", "function": "getUpgradeValue(address,uint256,uint256,uint256)", "lineno": 142, "title": "Message call to external contract", "type": "Informational"}, {"address": 3578, "code": "etUintCoinProduction(player,unitId", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3837\n", "filename": "/unique_chucks/38/0x2651a435e2d451a3c2c2649067b79548d9f3859b.sol", "function": "getUpgradeValue(address,uint256,uint256,uint256)", "lineno": 142, "title": "Multiple Calls", "type": "Information"}, {"address": 3578, "code": "etUintCoinProduction(player,unitId", "debug": "", "description": "A possible transaction order independence vulnerability exists in function getUpgradeValue(address,uint256,uint256,uint256). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/38/0x2651a435e2d451a3c2c2649067b79548d9f3859b.sol", "function": "getUpgradeValue(address,uint256,uint256,uint256)", "lineno": 142, "title": "Transaction order dependence", "type": "Warning"}, {"address": 3837, "code": "oductionGain = (cards.getOwnedCount(player", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/38/0x2651a435e2d451a3c2c2649067b79548d9f3859b.sol", "function": "getUpgradeValue(address,uint256,uint256,uint256)", "lineno": 145, "title": "Message call to external contract", "type": "Informational"}, {"address": 3837, "code": "oductionGain = (cards.getOwnedCount(player", "debug": "", "description": "A possible transaction order independence vulnerability exists in function getUpgradeValue(address,uint256,uint256,uint256). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/38/0x2651a435e2d451a3c2c2649067b79548d9f3859b.sol", "function": "getUpgradeValue(address,uint256,uint256,uint256)", "lineno": 145, "title": "Transaction order dependence", "type": "Warning"}, {"address": 4113, "code": "Value + productionGain;\n     }\n    }\n  }\n}", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/38/0x2651a435e2d451a3c2c2649067b79548d9f3859b.sol", "function": "getUpgradeValue(address,uint256,uint256,uint256)", "lineno": 147, "title": "Message call to external contract", "type": "Informational"}, {"address": 4113, "code": "Value + productionGain;\n     }\n    }\n  }\n}", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 4574\nCall at address: 4317\n", "filename": "/unique_chucks/38/0x2651a435e2d451a3c2c2649067b79548d9f3859b.sol", "function": "getUpgradeValue(address,uint256,uint256,uint256)", "lineno": 147, "title": "Multiple Calls", "type": "Information"}, {"address": 4113, "code": "Value + productionGain;\n     }\n    }\n  }\n}", "debug": "", "description": "A possible transaction order independence vulnerability exists in function getUpgradeValue(address,uint256,uint256,uint256). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/38/0x2651a435e2d451a3c2c2649067b79548d9f3859b.sol", "function": "getUpgradeValue(address,uint256,uint256,uint256)", "lineno": 147, "title": "Transaction order dependence", "type": "Warning"}, {"address": 4317, "code": ",unitId);\n        afterValue   = ", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/38/0x2651a435e2d451a3c2c2649067b79548d9f3859b.sol", "function": "getUpgradeValue(address,uint256,uint256,uint256)", "lineno": 146, "title": "Message call to external contract", "type": "Informational"}, {"address": 4317, "code": ",unitId);\n        afterValue   = ", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 4574\n", "filename": "/unique_chucks/38/0x2651a435e2d451a3c2c2649067b79548d9f3859b.sol", "function": "getUpgradeValue(address,uint256,uint256,uint256)", "lineno": 146, "title": "Multiple Calls", "type": "Information"}, {"address": 4317, "code": ",unitId);\n        afterValue   = ", "debug": "", "description": "A possible transaction order independence vulnerability exists in function getUpgradeValue(address,uint256,uint256,uint256). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/38/0x2651a435e2d451a3c2c2649067b79548d9f3859b.sol", "function": "getUpgradeValue(address,uint256,uint256,uint256)", "lineno": 146, "title": "Transaction order dependence", "type": "Warning"}, {"address": 4574, "code": "        preValue = cards.getUintCo", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/38/0x2651a435e2d451a3c2c2649067b79548d9f3859b.sol", "function": "getUpgradeValue(address,uint256,uint256,uint256)", "lineno": 146, "title": "Message call to external contract", "type": "Informational"}, {"address": 4574, "code": "        preValue = cards.getUintCo", "debug": "", "description": "A possible transaction order independence vulnerability exists in function getUpgradeValue(address,uint256,uint256,uint256). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/38/0x2651a435e2d451a3c2c2649067b79548d9f3859b.sol", "function": "getUpgradeValue(address,uint256,uint256,uint256)", "lineno": 146, "title": "Transaction order dependence", "type": "Warning"}, {"address": 5329, "code": "ards.getOwnedCount(_owner,star", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/38/0x2651a435e2d451a3c2c2649067b79548d9f3859b.sol", "function": "getNormalCardList(address)", "lineno": 94, "title": "Message call to external contract", "type": "Informational"}, {"address": 5329, "code": "ards.getOwnedCount(_owner,star", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 5614\n", "filename": "/unique_chucks/38/0x2651a435e2d451a3c2c2649067b79548d9f3859b.sol", "function": "getNormalCardList(address)", "lineno": 94, "title": "Multiple Calls", "type": "Information"}, {"address": 5329, "code": "ards.getOwnedCount(_owner,star", "debug": "", "description": "A possible transaction order independence vulnerability exists in function getNormalCardList(address). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/38/0x2651a435e2d451a3c2c2649067b79548d9f3859b.sol", "function": "getNormalCardList(address)", "lineno": 94, "title": "Transaction order dependence", "type": "Warning"}, {"address": 5614, "code": "= cards.getOwnedCount(_owner,startI", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/38/0x2651a435e2d451a3c2c2649067b79548d9f3859b.sol", "function": "getNormalCardList(address)", "lineno": 96, "title": "Message call to external contract", "type": "Informational"}, {"address": 6208, "code": "dId) {\n      if (cards.get", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/38/0x2651a435e2d451a3c2c2649067b79548d9f3859b.sol", "function": "getBattleCardList(address)", "lineno": 76, "title": "Message call to external contract", "type": "Informational"}, {"address": 6208, "code": "dId) {\n      if (cards.get", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1568\nCall at address: 1283\nCall at address: 1283\nCall at address: 6493\nCall at address: 6493\nCall at address: 6493\nCall at address: 1283\nCall at address: 6493\nCall at address: 6493\nCall at address: 6493\nCall at address: 6493\n", "filename": "/unique_chucks/38/0x2651a435e2d451a3c2c2649067b79548d9f3859b.sol", "function": "getBattleCardList(address)", "lineno": 76, "title": "Multiple Calls", "type": "Information"}, {"address": 6208, "code": "dId) {\n      if (cards.get", "debug": "", "description": "A possible transaction order independence vulnerability exists in function getBattleCardList(address). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/38/0x2651a435e2d451a3c2c2649067b79548d9f3859b.sol", "function": "getBattleCardList(address)", "lineno": 76, "title": "Transaction order dependence", "type": "Warning"}, {"address": 6493, "code": "artId++;\n    }\n    return icount;\n ", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/38/0x2651a435e2d451a3c2c2649067b79548d9f3859b.sol", "function": "getBattleCardList(address)", "lineno": 80, "title": "Message call to external contract", "type": "Informational"}, {"address": 6493, "code": "artId++;\n    }\n    return icount;\n ", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1283\nCall at address: 6493\nCall at address: 6493\nCall at address: 6493\nCall at address: 1283\nCall at address: 6493\nCall at address: 6493\nCall at address: 6493\n", "filename": "/unique_chucks/38/0x2651a435e2d451a3c2c2649067b79548d9f3859b.sol", "function": "getBattleCardList(address)", "lineno": 80, "title": "Multiple Calls", "type": "Information"}, {"address": 6731, "code": "ile (startId <= endId) {\n     ", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/38/0x2651a435e2d451a3c2c2649067b79548d9f3859b.sol", "function": "getNormalCardList(address)", "lineno": 62, "title": "Message call to external contract", "type": "Informational"}, {"address": 6731, "code": "ile (startId <= endId) {\n     ", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 5614\nCall at address: 5329\nCall at address: 7016\nCall at address: 7016\nCall at address: 7016\n", "filename": "/unique_chucks/38/0x2651a435e2d451a3c2c2649067b79548d9f3859b.sol", "function": "getNormalCardList(address)", "lineno": 62, "title": "Multiple Calls", "type": "Information"}, {"address": 6731, "code": "ile (startId <= endId) {\n     ", "debug": "", "description": "A possible transaction order independence vulnerability exists in function getNormalCardList(address). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/38/0x2651a435e2d451a3c2c2649067b79548d9f3859b.sol", "function": "getNormalCardList(address)", "lineno": 62, "title": "Transaction order dependence", "type": "Warning"}, {"address": 7016, "code": "    }\n      startId++;\n    }\n    re", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/38/0x2651a435e2d451a3c2c2649067b79548d9f3859b.sol", "function": "getNormalCardList(address)", "lineno": 65, "title": "Message call to external contract", "type": "Informational"}, {"address": 7016, "code": "    }\n      startId++;\n    }\n    re", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 7016\nCall at address: 7016\n", "filename": "/unique_chucks/38/0x2651a435e2d451a3c2c2649067b79548d9f3859b.sol", "function": "getNormalCardList(address)", "lineno": 65, "title": "Multiple Calls", "type": "Information"}], "success": true}