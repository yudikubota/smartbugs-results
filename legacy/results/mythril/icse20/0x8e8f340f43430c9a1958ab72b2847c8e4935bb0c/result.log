{"error": null, "issues": [{"address": 269, "code": " values) onlyOwner returns (uint256) {\n        uint256 i = 0;\n        require(dests.length == values.length);\n        while (i < dests.length) { \n           ERC20(wolkAddress).transfer(dests[i], values[i] * 10**18);\n           i += 1;\n        }\n        return(i);\n    }\n}", "debug": "calldata_wolkair_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_wolkair_0: 0xaad41a4100000000000000000000000000000000000000000000000000000000\ncalldatasize_wolkair: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `multisend(address[],uint256[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/10/0x8e8f340f43430c9a1958ab72b2847c8e4935bb0c.sol", "function": "multisend(address[],uint256[])", "lineno": 46, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1268, "code": "t(msg.sender == owner); _; ", "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_wolkair_0: 0xaad41a4100000000000000000000000000000000000000000000000000000000\ncalldatasize_wolkair: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/10/0x8e8f340f43430c9a1958ab72b2847c8e4935bb0c.sol", "function": "multisend(address[],uint256[])", "lineno": 6, "title": "Exception state", "type": "Informational"}, {"address": 1541, "code": " 10**18);\n           i += 1;\n        }\n        return(i);", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/10/0x8e8f340f43430c9a1958ab72b2847c8e4935bb0c.sol", "function": "multisend(address[],uint256[])", "lineno": 50, "title": "Message call to external contract", "type": "Informational"}, {"address": 1541, "code": " 10**18);\n           i += 1;\n        }\n        return(i);", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1541\n", "filename": "/unique_chucks/10/0x8e8f340f43430c9a1958ab72b2847c8e4935bb0c.sol", "function": "multisend(address[],uint256[])", "lineno": 50, "title": "Multiple Calls", "type": "Information"}, {"address": 1708, "code": "t(msg.sender == owner); _; ", "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_wolkair_0: 0xf2fde38b00000000000000000000000000000000000000000000000000000000\ncalldatasize_wolkair: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/10/0x8e8f340f43430c9a1958ab72b2847c8e4935bb0c.sol", "function": "transferOwnership(address)", "lineno": 6, "title": "Exception state", "type": "Informational"}], "success": true}