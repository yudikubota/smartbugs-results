{"error": null, "issues": [{"address": 1465, "code": "ised + amount - WEI_MAXIMUM_EARLY", "debug": "storage_3: 0xbd6b9dfdafa9ffeaf37dfc00097fffff00000000000000000000000000020000\ntimestamp: 0x59a56740\ncallvalue: 0xd0620851844100ace05100800700000100000000000000000000000000000003\ncalldatasize_SYCPrivateEarlyPurchase: 0x3\nstorage_2: 0x0\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/39/0xf9533353c20495527e0499ac71e1507b418b9314.sol", "function": "fallback", "lineno": 111, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1536, "code": "rlyPurchase(purchaser, WEI_MAXIMUM_EARLYPURCHASE - totalEarlyPurchaseRaised, ", "debug": "", "description": "A possible transaction order independence vulnerability exists in function fallback. The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/39/0xf9533353c20495527e0499ac71e1507b418b9314.sol", "function": "fallback", "lineno": 112, "title": "Transaction order dependence", "type": "Warning"}, {"address": 1536, "code": "rlyPurchase(purchaser, WEI_MAXIMUM_EARLYPURCHASE - totalEarlyPurchaseRaised, ", "debug": "", "description": "The return value of an external call is not checked. Note that execution continue even if the called contract throws.", "filename": "/unique_chucks/39/0xf9533353c20495527e0499ac71e1507b418b9314.sol", "function": "fallback", "lineno": 112, "title": "Unchecked CALL return value", "type": "Informational"}, {"address": 1599, "code": "AXIMUM_EARLYPURCHASE - totalEarlyPurchaseRaised;\n   ", "debug": "storage_3: 0x286431cfbdcfefb41437489cbf374001700828000005017df043c03b05800000\ntimestamp: 0x59a71f00\ncallvalue: 0xfffffffffffffdf3f4d157f00128c0000ff7d7fffffaffe099df102606a7ffff\ncalldatasize_SYCPrivateEarlyPurchase: 0x3\nstorage_2: 0x0\n", "description": "A possible integer underflow exists in the function `fallback`.\nThe subtraction may result in a value < 0.", "filename": "/unique_chucks/39/0xf9533353c20495527e0499ac71e1507b418b9314.sol", "function": "fallback", "lineno": 113, "title": "Integer Underflow", "type": "Warning"}, {"address": 1615, "code": "\n\n/// @title Priva", "debug": "timestamp: 0x59b01d00\nstorage_1: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncallvalue: 0x8ac7230489e80000\nstorage_3: 0x17aedbc9d648c780000\ncalldatasize_SYCPrivateEarlyPurchase: 0x3\nstorage_2: 0x0\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/39/0xf9533353c20495527e0499ac71e1507b418b9314.sol", "function": "fallback", "lineno": 1, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1760, "code": "Purchase(purchaser, amount, purchasedAt));\n         ", "debug": "storage_3: 0x6105107fba7e7e58afb87acf4efe3200032200000000d727400c9792e488000\ntimestamp: 0x59a65700\ncallvalue: 0x7fffbfffe3fdf84abae7f8d7cf444fe0000ddffffffff405f48122e307f7ffff\ncalldatasize_SYCPrivateEarlyPurchase: 0x3\nstorage_2: 0x0\n", "description": "A possible integer underflow exists in the function `fallback`.\nThe subtraction may result in a value < 0.", "filename": "/unique_chucks/39/0xf9533353c20495527e0499ac71e1507b418b9314.sol", "function": "fallback", "lineno": 116, "title": "Integer Underflow", "type": "Warning"}, {"address": 1768, "code": "   earlyPurchases.push(EarlyPurchase(purchaser, amount, purchasedAt));\n         ", "debug": "storage_3: 0xffbbf73ffe3f9c1e0a07bf1dd33b0ee22b9f80b75e80877bf9ea6ffffdffffff\ntimestamp: 0x59a577c0\ncallvalue: 0xfffffffffffffffe5ffd7f4ff7dd053efc747f48c17f79dfffe05f554d320000\ncalldatasize_SYCPrivateEarlyPurchase: 0x3\nstorage_2: 0x0\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/39/0xf9533353c20495527e0499ac71e1507b418b9314.sol", "function": "fallback", "lineno": 116, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1839, "code": "\n\n/// @title Priva", "debug": "timestamp: 0x59b01d00\nstorage_1: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncallvalue: 0x8ac7230489e80000\nstorage_3: 0x17aedbc9d648c77ffff\ncalldatasize_SYCPrivateEarlyPurchase: 0x3\nstorage_2: 0x0\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/39/0xf9533353c20495527e0499ac71e1507b418b9314.sol", "function": "fallback", "lineno": 1, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1978, "code": " >= ENDING_TIME){\n            earl", "debug": "storage_3: 0xfebfff7d84c1783ef78000000000000000000000000000103dc0c0080224002c\ntimestamp: 0x59a5d700\ncallvalue: 0x14000827b3e87c108800000000000000000000000000045ffd5ea04022ac001\ncalldatasize_SYCPrivateEarlyPurchase: 0x3\nstorage_2: 0x0\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/39/0xf9533353c20495527e0499ac71e1507b418b9314.sol", "function": "fallback", "lineno": 120, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2055, "code": "c earlyPurchases;\n    uint public ear", "debug": "The exception is triggered under the following conditions:\n\ncalldata_SYCPrivateEarlyPurchase_4: 0x0\nstorage_1: 0x0\ncalldata_SYCPrivateEarlyPurchase_0: 0x2288fad600000000000000000000000000000000000000000000000000000000\ncalldatasize_SYCPrivateEarlyPurchase: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/39/0xf9533353c20495527e0499ac71e1507b418b9314.sol", "function": "_function_0x2288fad6", "lineno": 20, "title": "Exception state", "type": "Informational"}, {"address": 2320, "code": "if(!owner.send(this.balance)", "debug": "", "description": "A possible transaction order independence vulnerability exists in function withdraw(uint256). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/39/0xf9533353c20495527e0499ac71e1507b418b9314.sol", "function": "withdraw(uint256)", "lineno": 139, "title": "Transaction order dependence", "type": "Warning"}, {"address": 2945, "code": "Owner {\n        owner = ", "debug": "", "description": "A possible transaction order independence vulnerability exists in function withdrawAll(). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/39/0xf9533353c20495527e0499ac71e1507b418b9314.sol", "function": "withdrawAll()", "lineno": 142, "title": "Transaction order dependence", "type": "Warning"}], "success": true}