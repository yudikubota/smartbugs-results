{
  "contract": "0xe241fef090664122e62eefe139a6c7a35f4989a4",
  "tool": "mythril",
  "start": 1563305749.554694,
  "end": 1563306111.850022,
  "duration": 362.2953281402588,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 1846,
        "code": "der] = _value;\n        re",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_4: 0xff00\ncalldata_StoneToken_0: 0x95ea7b300000000000000000000000000000000000000000000000000000000\ncalldatasize_StoneToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0xe241fef090664122e62eefe139a6c7a35f4989a4.sol",
        "function": "approve(address,uint256)",
        "lineno": 93,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 1858,
        "code": "    }\n       \n\n   ",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_4: 0x0\ncalldata_StoneToken_0: 0x95ea7b300000000000000000000000000000000000000000000000000000000\ncalldatasize_StoneToken: 0x4\ncalldata_StoneToken_32 + 4: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0xe241fef090664122e62eefe139a6c7a35f4989a4.sol",
        "function": "approve(address,uint256)",
        "lineno": 95,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2049,
        "code": "ansfer to 0x0 address. Us",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_4: 0xff00\ncalldata_StoneToken_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_StoneToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0xe241fef090664122e62eefe139a6c7a35f4989a4.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 101,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2084,
        "code": "stead\n        asse",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_StoneToken_32 + 4: 0x0\nstorage_4: 0x0\ncalldata_StoneToken_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_StoneToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0xe241fef090664122e62eefe139a6c7a35f4989a4.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 101,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2096,
        "code": "r has enough\n     ",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_StoneToken_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\nstorage_4: 0x0\ncalldata_StoneToken_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_StoneToken: 0x4\ncalldata_StoneToken_32 + 36: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0xe241fef090664122e62eefe139a6c7a35f4989a4.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 103,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2171,
        "code": "alanceOf[_to] + _value >= balanceO",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_StoneToken_32 + 36: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_StoneToken_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncalldata_StoneToken_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\nstorage_4: 0x0\ncalldata_StoneToken_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_StoneToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0xe241fef090664122e62eefe139a6c7a35f4989a4.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 104,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2311,
        "code": "owance[_from][msg.sender]);     // Check allowanc",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_StoneToken_32_+_4: 0xf71ca024c4e4c48edb080090575702d73908a831c1b8c07b8480010000f10f3b\ncalldata_StoneToken_32 + 36: 0x950dff78e666f73fd36ffedf5fe656f42f732f95edbafb7bf77fedeee4c653a9\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_StoneToken_4: 0x950dff78e666f73fd36ffedf5fe656f42f732f95edbafb7bf77fedeee4c653a9\ncalldata_StoneToken_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\nstorage_4: 0x0\ncalldata_StoneToken_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_StoneToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0xe241fef090664122e62eefe139a6c7a35f4989a4.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 105,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2447,
        "code": "th.safeSub(balanceOf[_from], _value);         ",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_StoneToken_32_+_4: 0x15ebcef777fa48d9f7c008301bc00179f8b82cdb888d3c306040111bc0210483\ncalldata_StoneToken_32 + 36: 0xde909434450288b26659ed7ccac82179fdf3c75ecae9f535a802143befbd7757\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xde909434450288b26659ed7ccac82179fdf3c75ecae9f535a802143befbd7756\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_StoneToken_4: 0xde909434450288b26659ed7ccac82179fdf3c75ecae9f535a802143befbd7757\ncalldata_StoneToken_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\nstorage_4: 0x0\ncalldata_StoneToken_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_StoneToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0xe241fef090664122e62eefe139a6c7a35f4989a4.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 106,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3209,
        "debug": "The exception is triggered under the following conditions:\n\nstorage_4: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_StoneToken_0: 0x3bed33ce00000000000000000000000000000000000000000000000000000000\ncalldatasize_StoneToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0xe241fef090664122e62eefe139a6c7a35f4989a4.sol",
        "function": "withdrawEther(uint256)",
        "lineno": 159,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3292,
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function withdrawEther(uint256). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_contracts/0xe241fef090664122e62eefe139a6c7a35f4989a4.sol",
        "function": "withdrawEther(uint256)",
        "lineno": 159,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 3344,
        "code": "           // Check if th",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_4: 0xff00\ncalldata_StoneToken_0: 0x42966c6800000000000000000000000000000000000000000000000000000000\ncalldatasize_StoneToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0xe241fef090664122e62eefe139a6c7a35f4989a4.sol",
        "function": "burn(uint256)",
        "lineno": 116,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3433,
        "code": "s enough\n        assert(_va",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_4: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_StoneToken_0: 0x42966c6800000000000000000000000000000000000000000000000000000000\ncalldatasize_StoneToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0xe241fef090664122e62eefe139a6c7a35f4989a4.sol",
        "function": "burn(uint256)",
        "lineno": 116,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3508,
        "code": "       balanceOf[msg.sender] = SafeMath",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_4: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncalldata_StoneToken_4: 0x1\ncaller: 0x0\ncalldata_StoneToken_0: 0x42966c6800000000000000000000000000000000000000000000000000000000\ncalldatasize_StoneToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0xe241fef090664122e62eefe139a6c7a35f4989a4.sol",
        "function": "burn(uint256)",
        "lineno": 118,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3520,
        "code": "      // Subtract ",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_4: 0x0\ncaller: 0x0\ncalldata_StoneToken_0: 0x42966c6800000000000000000000000000000000000000000000000000000000\ncalldatasize_StoneToken: 0x4\ncalldata_StoneToken_4: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0xe241fef090664122e62eefe139a6c7a35f4989a4.sol",
        "function": "burn(uint256)",
        "lineno": 118,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3792,
        "code": "ract is frozen\");\n       ",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_4: 0xff00\ncalldata_StoneToken_0: 0x62a5af3b00000000000000000000000000000000000000000000000000000000\ncalldatasize_StoneToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0xe241fef090664122e62eefe139a6c7a35f4989a4.sol",
        "function": "freeze()",
        "lineno": 138,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3881,
        "code": "e;\n    }\n\t\n    function unf",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_4: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_StoneToken_0: 0x62a5af3b00000000000000000000000000000000000000000000000000000000\ncalldatasize_StoneToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0xe241fef090664122e62eefe139a6c7a35f4989a4.sol",
        "function": "freeze()",
        "lineno": 139,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 4068,
        "code": "s unfrozen\");\n        re",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_4: 0x0\ncalldata_StoneToken_0: 0x6a28f00000000000000000000000000000000000000000000000000000000000\ncalldatasize_StoneToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0xe241fef090664122e62eefe139a6c7a35f4989a4.sol",
        "function": "unfreeze()",
        "lineno": 146,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 4157,
        "code": "    }\n\n    // transfer bala",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_4: 0xff00\ncaller: 0xffffffffffffffffffffffffffffffffffffff00\ncalldata_StoneToken_0: 0x6a28f00000000000000000000000000000000000000000000000000000000000\ncalldatasize_StoneToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0xe241fef090664122e62eefe139a6c7a35f4989a4.sol",
        "function": "unfreeze()",
        "lineno": 148,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 4565,
        "code": "SafeMath.safeAdd(balanceO",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_4: 0xff00\ncalldata_StoneToken_0: 0xa0712d6800000000000000000000000000000000000000000000000000000000\ncalldatasize_StoneToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0xe241fef090664122e62eefe139a6c7a35f4989a4.sol",
        "function": "mint(uint256)",
        "lineno": 128,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 4654,
        "code": "r], _value);               ",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_4: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_StoneToken_0: 0xa0712d6800000000000000000000000000000000000000000000000000000000\ncalldatasize_StoneToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0xe241fef090664122e62eefe139a6c7a35f4989a4.sol",
        "function": "mint(uint256)",
        "lineno": 128,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 4666,
        "code": "ubtract from the s",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_4: 0x0\ncaller: 0x0\ncalldata_StoneToken_0: 0xa0712d6800000000000000000000000000000000000000000000000000000000\ncalldatasize_StoneToken: 0x4\ncalldata_StoneToken_4: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0xe241fef090664122e62eefe139a6c7a35f4989a4.sol",
        "function": "mint(uint256)",
        "lineno": 128,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 4938,
        "code": "        // Prevent transf",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_4: 0xff00\ncalldata_StoneToken_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncalldatasize_StoneToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0xe241fef090664122e62eefe139a6c7a35f4989a4.sol",
        "function": "transfer(address,uint256)",
        "lineno": 79,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 4973,
        "code": "ddress. Use burn()",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_StoneToken_4: 0x0\nstorage_4: 0x0\ncalldata_StoneToken_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncalldatasize_StoneToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0xe241fef090664122e62eefe139a6c7a35f4989a4.sol",
        "function": "transfer(address,uint256)",
        "lineno": 79,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 4985,
        "code": "// Check if the se",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_StoneToken_4: 0xffffffffffffffffffffffffffffffffffffffff\nstorage_4: 0x0\ncalldata_StoneToken_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncalldatasize_StoneToken: 0x4\ncalldata_StoneToken_32 + 4: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0xe241fef090664122e62eefe139a6c7a35f4989a4.sol",
        "function": "transfer(address,uint256)",
        "lineno": 81,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 5060,
        "code": "ough\n        assert(balanceOf[_to] + _v",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_StoneToken_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncalldata_StoneToken_4: 0xffffffffffffffffffffffffffffffffffffffff\nstorage_4: 0x0\ncalldata_StoneToken_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncalldatasize_StoneToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0xe241fef090664122e62eefe139a6c7a35f4989a4.sol",
        "function": "transfer(address,uint256)",
        "lineno": 81,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 5666,
        "code": "    return a -",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_4: 0x0\ncalldata_StoneToken_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_3: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncaller: 0x0\ncalldata_StoneToken_0: 0x42966c6800000000000000000000000000000000000000000000000000000000\ncalldatasize_StoneToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0xe241fef090664122e62eefe139a6c7a35f4989a4.sol",
        "function": "burn(uint256)",
        "lineno": 22,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 5684,
        "code": "a && ",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xb2c81e3be60b809eebca250ae5f3958de8241f3c0942692d3cecd1fd00743211\ncalldata_StoneToken_4: 0x93931c13e507cbbcbf74d9eee4fb920eeaef84aa5110428da2eddb017d5ebcdd\nstorage_4: 0x0\ncaller: 0x0\ncalldata_StoneToken_0: 0xa0712d6800000000000000000000000000000000000000000000000000000000\ncalldatasize_StoneToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `mint(uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0xe241fef090664122e62eefe139a6c7a35f4989a4.sol",
        "function": "mint(uint256)",
        "lineno": 27,
        "title": "Integer Overflow ",
        "type": "Warning"
      }
    ],
    "success": true
  }
}