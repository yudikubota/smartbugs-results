{"error": null, "issues": [{"address": 814, "code": "int256)\n    {\n        return a", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_contracts/0xdcbb703095c4b7fae2a44ea0acffc53d97acde0e.sol", "function": "myDividends()", "lineno": 159, "title": "Message call to external contract", "type": "Informational"}, {"address": 1324, "code": "c \n    view \n    return", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_contracts/0xdcbb703095c4b7fae2a44ea0acffc53d97acde0e.sol", "function": "donate()", "lineno": 146, "title": "Message call to external contract", "type": "Informational"}, {"address": 1324, "code": "c \n    view \n    return", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3541\nCall at address: 2828\n", "filename": "/unique_contracts/0xdcbb703095c4b7fae2a44ea0acffc53d97acde0e.sol", "function": "donate()", "lineno": 146, "title": "Multiple Calls", "type": "Information"}, {"address": 1738, "code": "oublrAddress) \n    public\n    onlyOwner()\n    {\n        d", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_contracts/0xdcbb703095c4b7fae2a44ea0acffc53d97acde0e.sol", "function": "transferAnyERC20Token(address,address,uint256)", "lineno": 190, "title": "Message call to external contract", "type": "Warning"}, {"address": 1962, "code": "          doublr.payout();\n            ", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2122\n", "filename": "/unique_contracts/0xdcbb703095c4b7fae2a44ea0acffc53d97acde0e.sol", "function": "donate()", "lineno": 73, "title": "Multiple Calls", "type": "Information"}, {"address": 1962, "code": "          doublr.payout();\n            ", "debug": "", "description": "A possible transaction order independence vulnerability exists in function donate(). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_contracts/0xdcbb703095c4b7fae2a44ea0acffc53d97acde0e.sol", "function": "donate()", "lineno": 73, "title": "Transaction order dependence", "type": "Warning"}, {"address": 2122, "code": "    uint256 Poo", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_contracts/0xdcbb703095c4b7fae2a44ea0acffc53d97acde0e.sol", "function": "donate()", "lineno": 78, "title": "Message call to external contract", "type": "Informational"}, {"address": 2122, "code": "    uint256 Poo", "debug": "", "description": "A possible transaction order independence vulnerability exists in function donate(). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_contracts/0xdcbb703095c4b7fae2a44ea0acffc53d97acde0e.sol", "function": "donate()", "lineno": 78, "title": "Transaction order dependence", "type": "Warning"}, {"address": 2362, "code": "r = address(this).b", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_contracts/0xdcbb703095c4b7fae2a44ea0acffc53d97acde0e.sol", "function": "donate()", "lineno": 86, "title": "Message call to external contract", "type": "Informational"}, {"address": 2362, "code": "r = address(this).b", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2498\n", "filename": "/unique_contracts/0xdcbb703095c4b7fae2a44ea0acffc53d97acde0e.sol", "function": "donate()", "lineno": 86, "title": "Multiple Calls", "type": "Information"}, {"address": 2390, "code": "      owner.tran", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_contracts/0xdcbb703095c4b7fae2a44ea0acffc53d97acde0e.sol", "function": "donate()", "lineno": 88, "title": "State change after external call", "type": "Warning"}, {"address": 2828, "code": "ddress(this).balanc", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_contracts/0xdcbb703095c4b7fae2a44ea0acffc53d97acde0e.sol", "function": "donate()", "lineno": 102, "title": "Message call to external contract", "type": "Informational"}, {"address": 2856, "code": " if(ethToTransfe", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_contracts/0xdcbb703095c4b7fae2a44ea0acffc53d97acde0e.sol", "function": "donate()", "lineno": 104, "title": "State change after external call", "type": "Warning"}, {"address": 3541, "code": "//Emit a deposit event.\n                  ", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_contracts/0xdcbb703095c4b7fae2a44ea0acffc53d97acde0e.sol", "function": "donate()", "lineno": 122, "title": "Message call to external contract", "type": "Informational"}], "success": true}