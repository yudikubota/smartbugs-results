{
  "contract": "0x994239eec04766aade286f151a5fc13335ef1d26",
  "tool": "mythril",
  "start": 1563533415.327362,
  "end": 1563533420.5392032,
  "duration": 5.211841106414795,
  "analysis": {
    "success": false,
    "error": "Solc experienced a fatal error (code 1).\n\n/unique_chucks/10/0x994239eec04766aade286f151a5fc13335ef1d26.sol:10:1: Error: Source file requires different compiler version (current compiler is 0.4.25+commit.59dbf8f1.Linux.g++ - note that nightly builds are considered to be strictly less than the released version\npragma solidity 0.4.24;\r\n^---------------------^\n/unique_chucks/10/0x994239eec04766aade286f151a5fc13335ef1d26.sol:466:31: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n        bytes32 dsname_hash = keccak256(\r\n                              ^ (Relevant source part starts here and spans across multiple lines).\n/unique_chucks/10/0x994239eec04766aade286f151a5fc13335ef1d26.sol:482:31: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n        bytes32 dsname_hash = keccak256(\r\n                              ^ (Relevant source part starts here and spans across multiple lines).\n/unique_chucks/10/0x994239eec04766aade286f151a5fc13335ef1d26.sol:593:29: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n        uint256 i = uint256(keccak256(requestCounter[msg.sender])) % randomDS_sessionPublicKeyHash.length;\r\n                            ^-----------------------------------^\n/unique_chucks/10/0x994239eec04766aade286f151a5fc13335ef1d26.sol:593:29: Warning: The provided argument of type uint256 is not implicitly convertible to expected type bytes memory.\n        uint256 i = uint256(keccak256(requestCounter[msg.sender])) % randomDS_sessionPublicKeyHash.length;\r\n                            ^-----------------------------------^\n/unique_chucks/10/0x994239eec04766aade286f151a5fc13335ef1d26.sol:690:33: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n       _datasourcePrice = price[keccak256(\r\n                                ^ (Relevant source part starts here and spans across multiple lines).\n/unique_chucks/10/0x994239eec04766aade286f151a5fc13335ef1d26.sol:718:33: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n       _datasourcePrice = price[keccak256(\r\n                                ^ (Relevant source part starts here and spans across multiple lines).\n/unique_chucks/10/0x994239eec04766aade286f151a5fc13335ef1d26.sol:1040:15: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n        _id = keccak256(\r\n              ^ (Relevant source part starts here and spans across multiple lines).\n/unique_chucks/10/0x994239eec04766aade286f151a5fc13335ef1d26.sol:1069:15: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n        _id = keccak256(\r\n              ^ (Relevant source part starts here and spans across multiple lines).\n/unique_chucks/10/0x994239eec04766aade286f151a5fc13335ef1d26.sol:1099:15: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n        _id = keccak256(\r\n              ^ (Relevant source part starts here and spans across multiple lines).\n/unique_chucks/10/0x994239eec04766aade286f151a5fc13335ef1d26.sol:1130:15: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n        _id = keccak256(\r\n              ^ (Relevant source part starts here and spans across multiple lines).\n/unique_chucks/10/0x994239eec04766aade286f151a5fc13335ef1d26.sol:1160:15: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n        _id = keccak256(\r\n              ^ (Relevant source part starts here and spans across multiple lines).\n/unique_chucks/10/0x994239eec04766aade286f151a5fc13335ef1d26.sol:1189:15: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n        _id = keccak256(\r\n              ^ (Relevant source part starts here and spans across multiple lines).\n/unique_chucks/10/0x994239eec04766aade286f151a5fc13335ef1d26.sol:1298:15: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n        _id = keccak256(\r\n              ^ (Relevant source part starts here and spans across multiple lines).\n",
    "issues": []
  }
}