{"error": null, "issues": [{"address": 1891, "code": "= (funds.length > 0) ?\n            fu", "debug": "The exception is triggered under the following conditions:\n\ntimestamp: 0x0\ncalldata_Fundraiser_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_16: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_20: 0x0\nstorage_5: 0xffffffffffffffffffffffffffffffffffffffff00\nstorage_4: 0xffffffffffffffffffffffffffffffffffffffff00\nstorage_1: 0xffffffffffffffffffffffffffffffffffffffff00\nstorage_0: 0xffffffffffffffffffffffffffffffffffffffff00\ncaller: 0x0\nstorage_10: 0x1\ncalldata_Fundraiser_0: 0xa14504c00000000000000000000000000000000000000000000000000000000\ncalldatasize_Fundraiser: 0x4\nstorage_8: 0x0\nstorage_1 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\nstorage_0 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/14/0x5f78a0bb08c7679729ba1816ba1a050e3907b348.sol", "function": "participate(bytes32)", "lineno": 310, "title": "Exception state", "type": "Informational"}, {"address": 3373, "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/14/0x5f78a0bb08c7679729ba1816ba1a050e3907b348.sol", "function": "recover(address)", "lineno": 512, "title": "Message call to external contract", "type": "Warning"}, {"address": 3373, "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3634\n", "filename": "/unique_chucks/14/0x5f78a0bb08c7679729ba1816ba1a050e3907b348.sol", "function": "recover(address)", "lineno": 512, "title": "Multiple Calls", "type": "Information"}, {"address": 3634, "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/14/0x5f78a0bb08c7679729ba1816ba1a050e3907b348.sol", "function": "recover(address)", "lineno": 512, "title": "Message call to external contract", "type": "Warning"}], "success": true}