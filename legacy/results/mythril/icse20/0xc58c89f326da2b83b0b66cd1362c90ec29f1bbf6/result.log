{"success": false, "error": "Solc experienced a fatal error (code 1).\n\n/unique_chucks/24/0xc58c89f326da2b83b0b66cd1362c90ec29f1bbf6.sol:37:1: Error: Source file requires different compiler version (current compiler is 0.4.25+commit.59dbf8f1.Linux.g++ - note that nightly builds are considered to be strictly less than the released version\n ... pragma solidity >=0.4.18 <=0.4.20; ... \n     ^--------------------------------^\n/unique_chucks/24/0xc58c89f326da2b83b0b66cd1362c90ec29f1bbf6.sol:1243:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use \"constructor(...) { ... }\" instead.\n  function Ownable() public {\r\n  ^ (Relevant source part starts here and spans across multiple lines).\n/unique_chucks/24/0xc58c89f326da2b83b0b66cd1362c90ec29f1bbf6.sol:1288:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use \"constructor(...) { ... }\" instead.\n  function HasNoEther() public payable {\r\n  ^ (Relevant source part starts here and spans across multiple lines).\n/unique_chucks/24/0xc58c89f326da2b83b0b66cd1362c90ec29f1bbf6.sol:981:50: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n        oraclize_randomDS_setCommitment(queryId, keccak256(delay_bytes8_left, args[1], sha256(args[0]), args[2]));\r\n                                                 ^-------------------------------------------------------------^\n/unique_chucks/24/0xc58c89f326da2b83b0b66cd1362c90ec29f1bbf6.sol:1093:47: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;\r\n                                              ^---------------------------^\n/unique_chucks/24/0xc58c89f326da2b83b0b66cd1362c90ec29f1bbf6.sol:1093:37: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;\r\n                                    ^--------------------------------------^\n/unique_chucks/24/0xc58c89f326da2b83b0b66cd1362c90ec29f1bbf6.sol:1093:37: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.\n        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;\r\n                                    ^--------------------------------------^\n/unique_chucks/24/0xc58c89f326da2b83b0b66cd1362c90ec29f1bbf6.sol:1111:48: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n        if (oraclize_randomDS_args[queryId] == keccak256(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match\r\n                                               ^--------------------------------------------^\n/unique_chucks/24/0xc58c89f326da2b83b0b66cd1362c90ec29f1bbf6.sol:1261:5: Warning: Invoking events without \"emit\" prefix is deprecated.\n    OwnershipTransferred(owner, newOwner);\r\n    ^-----------------------------------^\n/unique_chucks/24/0xc58c89f326da2b83b0b66cd1362c90ec29f1bbf6.sol:1302:23: Warning: Using contract member \"balance\" inherited from the address type is deprecated. Convert the contract to \"address\" type to access the member, for example use \"address(contract).balance\" instead.\n    assert(owner.send(this.balance));\r\n                      ^----------^\n/unique_chucks/24/0xc58c89f326da2b83b0b66cd1362c90ec29f1bbf6.sol:1415:5: Warning: Invoking events without \"emit\" prefix is deprecated.\n    VerificationStarted(oraclizeID, msg.sender, _appNickname, _postId);\r\n    ^----------------------------------------------------------------^\n/unique_chucks/24/0xc58c89f326da2b83b0b66cd1362c90ec29f1bbf6.sol:1435:7: Warning: Invoking events without \"emit\" prefix is deprecated.\n      VerificatioFailed(_oraclizeID);\r\n      ^----------------------------^\n", "issues": []}