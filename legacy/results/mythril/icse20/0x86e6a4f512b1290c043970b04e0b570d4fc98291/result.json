{
  "contract": "0x86e6a4f512b1290c043970b04e0b570d4fc98291",
  "tool": "mythril",
  "start": 1563472237.6598978,
  "end": 1563472481.4886656,
  "duration": 243.82876777648926,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 894,
        "code": "balances[msg.sender] >= amount);\n  \n      balances[msg.sender] = balances[msg.sender].sub(amount);\n      for (uint i = 0; i < cnt; i++) {\n          balances[_receivers[i]] = balances[_receivers[i]].add(_value);\n          emit Transfer(msg.sender, _receivers[i], _value);\n      }\n      return true;\n    }\n\n  /**\n  * @dev Gets the balance of the specified address.\n  * @param _owner The address to query the the balance of.\n  * @return An uint256 representing the amount owned by the passed address.\n  */\n  function balanceOf(address _owner) public vie",
        "debug": "calldata_StandardToken_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_StandardToken_0: 0x83f12fec00000000000000000000000000000000000000000000000000000000\ncalldatasize_StandardToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `batchTransfer(address[],uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/1/0x86e6a4f512b1290c043970b04e0b570d4fc98291.sol",
        "function": "batchTransfer(address[],uint256)",
        "lineno": 240,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 6084,
        "code": " paus",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_StandardToken_4: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncalldata_StandardToken_32 + 4: 0x57f25cd000000000000000000000000000000000000000000000000000000000\ncalldata_StandardToken_0: 0xd73dd62300000000000000000000000000000000000000000000000000000000\ncalldatasize_StandardToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `increaseApproval(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/1/0x86e6a4f512b1290c043970b04e0b570d4fc98291.sol",
        "function": "increaseApproval(address,uint256)",
        "lineno": 142,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 6097,
        "code": "lse;\n\n\n  /**\n ",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_StandardToken_4: 0x1\ncalldata_StandardToken_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_StandardToken_0: 0xd73dd62300000000000000000000000000000000000000000000000000000000\ncalldatasize_StandardToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/1/0x86e6a4f512b1290c043970b04e0b570d4fc98291.sol",
        "function": "increaseApproval(address,uint256)",
        "lineno": 142,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}