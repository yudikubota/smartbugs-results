{"error": null, "issues": [{"address": 325, "code": " socket)\n        public\n        noEmptyString(socket)\n    {\n        string storage old_socket = address_to_socket[msg.sender];\n\n        // Compare if the new socket matches the old one, if it does just return\n        if (equals(old_socket, socket)) {\n            return;\n        }\n\n        // Put the ethereum address 0 in front of the old_socket,old_socket:0x0\n        socket_to_address[old_socket] = address(0);\n        address_to_socket[msg.sender] = socket;\n        socket_to_address[socket] = msg.sender;\n        AddressRegistered(msg.sender, socket);\n    }\n\n    /*\n     * @notice Finds the socket if give", "debug": "calldata_EndpointRegistry_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_EndpointRegistry_0: 0x8b5a85a00000000000000000000000000000000000000000000000000000000\ncalldatasize_EndpointRegistry: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `registerEndpoint(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/29/0x12a01d97c7976a08504bdcef1afdd5daf8e20d97.sol", "function": "registerEndpoint(string)", "lineno": 33, "title": "Integer Overflow ", "type": "Warning"}, {"address": 337, "code": " socket)\n        public\n        noEmptyString(socket)\n    {\n        string storage old_socket = address_to_socket[msg.sender];\n\n        // Compare if the new socket matches the old one, if it does just return\n        if (equals(old_socket, socket)) {\n            return;\n        }\n\n        // Put the ethereum address 0 in front of the old_socket,old_socket:0x0\n        socket_to_address[old_socket] = address(0);\n        address_to_socket[msg.sender] = socket;\n        socket_to_address[socket] = msg.sender;\n        AddressRegistered(msg.sender, socket);\n    }\n\n    /*\n     * @notice Finds the socket if give", "debug": "calldata_EndpointRegistry_4 + calldata_EndpointRegistry_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8\ncalldata_EndpointRegistry_0: 0x8b5a85a00000000000000000000000000000000000000000000000000000000\ncalldatasize_EndpointRegistry: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `registerEndpoint(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/29/0x12a01d97c7976a08504bdcef1afdd5daf8e20d97.sol", "function": "registerEndpoint(string)", "lineno": 33, "title": "Integer Overflow ", "type": "Warning"}, {"address": 346, "code": " socket)\n        public\n        noEmptyString(socket)\n    {\n        string storage old_socket = address_to_socket[msg.sender];\n\n        // Compare if the new socket matches the old one, if it does just return\n        if (equals(old_socket, socket)) {\n            return;\n        }\n\n        // Put the ethereum address 0 in front of the old_socket,old_socket:0x0\n        socket_to_address[old_socket] = address(0);\n        address_to_socket[msg.sender] = socket;\n        socket_to_address[socket] = msg.sender;\n        AddressRegistered(msg.sender, socket);\n    }\n\n    /*\n     * @notice Finds the socket if give", "debug": "calldata_EndpointRegistry_4 + calldata_EndpointRegistry_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc1\ncalldata_EndpointRegistry_0: 0x8b5a85a00000000000000000000000000000000000000000000000000000000\ncalldatasize_EndpointRegistry: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `registerEndpoint(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/29/0x12a01d97c7976a08504bdcef1afdd5daf8e20d97.sol", "function": "registerEndpoint(string)", "lineno": 33, "title": "Integer Overflow ", "type": "Warning"}, {"address": 352, "code": " socket)\n        public\n        noEmptyString(socket)\n    {\n        string storage old_socket = address_to_socket[msg.sender];\n\n        // Compare if the new socket matches the old one, if it does just return\n        if (equals(old_socket, socket)) {\n            return;\n        }\n\n        // Put the ethereum address 0 in front of the old_socket,old_socket:0x0\n        socket_to_address[old_socket] = address(0);\n        address_to_socket[msg.sender] = socket;\n        socket_to_address[socket] = msg.sender;\n        AddressRegistered(msg.sender, socket);\n    }\n\n    /*\n     * @notice Finds the socket if give", "debug": "calldata_EndpointRegistry_4 + calldata_EndpointRegistry_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff41\ncalldata_EndpointRegistry_0: 0x8b5a85a00000000000000000000000000000000000000000000000000000000\ncalldatasize_EndpointRegistry: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `registerEndpoint(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/29/0x12a01d97c7976a08504bdcef1afdd5daf8e20d97.sol", "function": "registerEndpoint(string)", "lineno": 33, "title": "Integer Overflow ", "type": "Warning"}, {"address": 430, "code": "ns (address eth_address)\n    {\n        return socket_to_address[socket];\n    }\n\n    function equals(string a, string b) internal pure returns (bool ", "debug": "calldata_EndpointRegistry_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_EndpointRegistry_0: 0x460123cf00000000000000000000000000000000000000000000000000000000\ncalldatasize_EndpointRegistry: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `findAddressByEndpoint(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/29/0x12a01d97c7976a08504bdcef1afdd5daf8e20d97.sol", "function": "findAddressByEndpoint(string)", "lineno": 68, "title": "Integer Overflow ", "type": "Warning"}, {"address": 952, "code": ");\n        _;\n ", "debug": "calldata_EndpointRegistry_4 + calldata_EndpointRegistry_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff21\ncalldata_EndpointRegistry_0: 0x8b5a85a00000000000000000000000000000000000000000000000000000000\ncalldatasize_EndpointRegistry: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `registerEndpoint(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/29/0x12a01d97c7976a08504bdcef1afdd5daf8e20d97.sol", "function": "registerEndpoint(string)", "lineno": 24, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2129, "code": "    }\n}", "debug": "mem_128 +\n32 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_EndpointRegistry_4 + calldata_EndpointRegistry_4)): 0xc0\ncalldata_EndpointRegistry_4 + calldata_EndpointRegistry_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe61\ncalldata_EndpointRegistry_0: 0x8b5a85a00000000000000000000000000000000000000000000000000000000\ncalldatasize_EndpointRegistry: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `registerEndpoint(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/29/0x12a01d97c7976a08504bdcef1afdd5daf8e20d97.sol", "function": "registerEndpoint(string)", "lineno": 80, "title": "Integer Overflow ", "type": "Warning"}], "success": true}