{
  "contract": "0xbcd7964eb52f25a134a5a2f38e28dd9a45039857",
  "tool": "mythril",
  "start": 1563501191.6483395,
  "end": 1563501341.3983107,
  "duration": 149.74997115135193,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 987,
        "code": " _beneficiary.length; i++){\n            freeze storage _freeze = freezedTokens[_beneficiary[i]];\n            _freeze.amount = _amount[i];\n            _freeze.when = _when[i];\n        }\n    }\n\n    function transfer(address _to, uint256 _value) public returns (bool) {\n        require(balanceOf(msg.sender) >= freezedTokenOf(msg.sender) + _value);\n        return super.transfer(_to,_value);\n    }\n\n    function transferFrom(address _from, address _to, uint256 _value) public ",
        "debug": "calldata_managedToken_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_managedToken_0: 0x24db1f5000000000000000000000000000000000000000000000000000000000\ncalldatasize_managedToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `masFreezedTokens(address[],uint256[],uint256[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/4/0xbcd7964eb52f25a134a5a2f38e28dd9a45039857.sol",
        "function": "masFreezedTokens(address[],uint256[],uint256[])",
        "lineno": 279,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1438,
        "code": "s[i], _values[i]);\n        }\n    }\n    function massBurn(uint8[] _types, address[] _addreses, uint256[] _values) public {\n        require(rightAndRoles.onlyRoles(msg.sender,3));\n        require(_types.length == _addreses.length && _addreses.length == _values.length);\n        for(uint256 i = 0; i < _types.length; i++){\n            internalBurn(_types[i], _addreses",
        "debug": "calldata_managedToken_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_managedToken_0: 0x461c89b300000000000000000000000000000000000000000000000000000000\ncalldatasize_managedToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `massMint(uint8[],address[],uint256[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/4/0xbcd7964eb52f25a134a5a2f38e28dd9a45039857.sol",
        "function": "massMint(uint8[],address[],uint256[])",
        "lineno": 330,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1861,
        "code": "    sumValue += _values[i]; \n            uint256 _value = getBalance(_type,_addresses[i]) + _values[i];\n            setBalance(_type,_addresses[i],_value);\n            emit Transfer(msg.sender, _addresses[i], _values[i]);\n            if(_when[i] > 0){\n                _value = balanceOf(_addresses[i]);\n                freeze storage _freeze = freezedTokens[_addresses[i]];\n                _freeze.amount = _value;\n                _freeze.when = _when[i];\n            }\n        }\n        uint256 _balance = getBalance(_type, msg.sender);\n        require(_balance >= sumValue);\n        setBalance(_type,msg.sender,_balance-sumValue);\n    }\n}\n\n\n\ncontract Creator{\n\n    IRightAndRoles public rightAndRoles;\n    managedToken public token;\n\n    constructor() public{\n        address[] memory tmp = new address[](3);\n        tmp[0] = address(this);\n        tmp[1] = msg.sender;\n        tmp[2] = 0x19557B8beb5cC065fe001dc466b3642b747DA62B;\n\n        rightAndRoles = new RightAndRoles(tmp);\n\n        token=",
        "debug": "calldata_managedToken_32 + 4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_managedToken_0: 0x6689e28b00000000000000000000000000000000000000000000000000000000\ncalldatasize_managedToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `distribution(uint8,address[],uint256[],uint256[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/4/0xbcd7964eb52f25a134a5a2f38e28dd9a45039857.sol",
        "function": "distribution(uint8,address[],uint256[],uint256[])",
        "lineno": 346,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 4153,
        "code": "eeze.amount = _amount[i];\n           ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/4/0xbcd7964eb52f25a134a5a2f38e28dd9a45039857.sol",
        "function": "masFreezedTokens(address[],uint256[],uint256[])",
        "lineno": 281,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 4470,
        "code": "e;\n    }\n    \n    address[][] it",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_managedToken_4: 0x2\ncalldata_managedToken_0: 0x3540302300000000000000000000000000000000000000000000000000000000\ncalldatasize_managedToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/4/0xbcd7964eb52f25a134a5a2f38e28dd9a45039857.sol",
        "function": "_function_0x35403023",
        "lineno": 105,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 4612,
        "code": "roval(msg.sender, _spender, _tmpAllowed);\n ",
        "debug": "calldata_managedToken_32 + 4: 0x57f25cd000000000000000000000000000000000000000000000000000000000\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_managedToken_4: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncalldata_managedToken_0: 0x3950935100000000000000000000000000000000000000000000000000000000\ncalldatasize_managedToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `increaseAllowance(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/4/0xbcd7964eb52f25a134a5a2f38e28dd9a45039857.sol",
        "function": "increaseAllowance(address,uint256)",
        "lineno": 165,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 5077,
        "code": "6[] _values) public {\n        require",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/4/0xbcd7964eb52f25a134a5a2f38e28dd9a45039857.sol",
        "function": "massMint(uint8[],address[],uint256[])",
        "lineno": 333,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 5640,
        "code": "Balance(_type,_addresses[i],_value);\n",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/4/0xbcd7964eb52f25a134a5a2f38e28dd9a45039857.sol",
        "function": "distribution(uint8,address[],uint256[],uint256[])",
        "lineno": 348,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 6540,
        "code": "6[] _values, uint256[] _when) public ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/4/0xbcd7964eb52f25a134a5a2f38e28dd9a45039857.sol",
        "function": "massBurn(uint8[],address[],uint256[])",
        "lineno": 341,
        "title": "Message call to external contract",
        "type": "Informational"
      }
    ],
    "success": true
  }
}