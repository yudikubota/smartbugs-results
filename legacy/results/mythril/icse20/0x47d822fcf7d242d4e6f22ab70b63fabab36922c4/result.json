{
  "contract": "0x47d822fcf7d242d4e6f22ab70b63fabab36922c4",
  "tool": "mythril",
  "start": 1563580325.7017748,
  "end": 1563580540.5044267,
  "duration": 214.80265188217163,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 1461,
        "code": "      // --------------------\n        ",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_38: 0x8000\ncalldata_iE4RowEscrow_0: 0x5f437e4800000000000000000000000000000000000000000000000000000000\ncalldatasize_iE4RowEscrow: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/19/0x47d822fcf7d242d4e6f22ab70b63fabab36922c4.sol",
        "function": "_function_0x5f437e48",
        "lineno": 114,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3455,
        "code": "-----------\n        functi",
        "debug": "storage_17: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncallvalue: 0x57f25cd000000000000000000000000000000000000000000000000000000000\nstorage_38: 0x400\nstorage_4: 0x0\ncaller: 0x0\ncalldata_iE4RowEscrow_0: 0x33c7c02600000000000000000000000000000000000000000000000000000000\ncalldatasize_iE4RowEscrow: 0x4\n",
        "description": "A possible integer overflow exists in the function `feePayment()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/19/0x47d822fcf7d242d4e6f22ab70b63fabab36922c4.sol",
        "function": "feePayment()",
        "lineno": 406,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 3471,
        "code": "address _addr) public\n   ",
        "debug": "storage_8: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncallvalue: 0x57f25cd000000000000000000000000000000000000000000000000000000000\nstorage_38: 0x400\nstorage_4: 0x0\ncaller: 0x0\ncalldata_iE4RowEscrow_0: 0x33c7c02600000000000000000000000000000000000000000000000000000000\ncalldatasize_iE4RowEscrow: 0x4\n",
        "description": "A possible integer overflow exists in the function `feePayment()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/19/0x47d822fcf7d242d4e6f22ab70b63fabab36922c4.sol",
        "function": "feePayment()",
        "lineno": 407,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 3667,
        "code": "(npurchaser);\n\n  ",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_4: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldatasize_iE4RowEscrow: 0x3\nstorage_13: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/19/0x47d822fcf7d242d4e6f22ab70b63fabab36922c4.sol",
        "function": "fallback",
        "lineno": 360,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 4459,
        "code": "ckedRelease)\n                         throw;\n   ",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_38: 0x8000\nstorage_1: 0x0\ncaller: 0x0\ncalldata_iE4RowEscrow_0: 0x2ff1fac00000000000000000000000000000000000000000000000000000000\ncalldatasize_iE4RowEscrow: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/19/0x47d822fcf7d242d4e6f22ab70b63fabab36922c4.sol",
        "function": "changeDevevoperAccont(address)",
        "lineno": 783,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 5039,
        "code": "ted;\n        }\n\n        function tra",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_38: 0x8000\ncalldata_iE4RowEscrow_0: 0x18160ddd00000000000000000000000000000000000000000000000000000000\ncalldatasize_iE4RowEscrow: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/19/0x47d822fcf7d242d4e6f22ab70b63fabab36922c4.sol",
        "function": "totalSupply()",
        "lineno": 230,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 6283,
        "code": " this will eventually fail\n          ",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_38: 0x8000\nstorage_4: 0x0\ncaller: 0x0\ncalldata_iE4RowEscrow_0: 0x33c7c02600000000000000000000000000000000000000000000000000000000\ncalldatasize_iE4RowEscrow: 0x4\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/19/0x47d822fcf7d242d4e6f22ab70b63fabab36922c4.sol",
        "function": "feePayment()",
        "lineno": 472,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 7431,
        "code": "    rwGas = _rw;\n                }\n        ",
        "debug": "",
        "description": "In the function `withdrawDividends()` the following predictable state variables are used to determine Ether recipient:\n- block.timestamp\n",
        "filename": "/unique_chucks/19/0x47d822fcf7d242d4e6f22ab70b63fabab36922c4.sol",
        "function": "withdrawDividends()",
        "lineno": 649,
        "title": "Dependence on predictable environment variable",
        "type": "Warning"
      },
      {
        "address": 7431,
        "code": "    rwGas = _rw;\n                }\n        ",
        "debug": "",
        "description": "This contract executes a message call to the address of the transaction sender. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/19/0x47d822fcf7d242d4e6f22ab70b63fabab36922c4.sol",
        "function": "withdrawDividends()",
        "lineno": 649,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 7927,
        "code": " (_sender == owner) { //",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/19/0x47d822fcf7d242d4e6f22ab70b63fabab36922c4.sol",
        "function": "fallback",
        "lineno": 449,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 12380,
        "code": "        _games = uint(pe4.getN",
        "debug": "storage_38: 0x100\nstorage_16: 0x0\nstorage_30: 0x1\nstorage_4: 0x0\ncaller: 0x0\ncalldatasize_iE4RowEscrow: 0x3\n",
        "description": "A possible integer underflow exists in the function `fallback`.\nThe subtraction may result in a value < 0.",
        "filename": "/unique_chucks/19/0x47d822fcf7d242d4e6f22ab70b63fabab36922c4.sol",
        "function": "fallback",
        "lineno": 438,
        "title": "Integer Underflow",
        "type": "Warning"
      },
      {
        "address": 13950,
        "code": "tEventI(\"StartRun\", uint(curP",
        "debug": "storage_24: 0x57f25cd000000000000000000000000000000000000000000000000000000000\nstorage_28: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_16: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_17: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_0: 0x0\nstorage_1: 0xffffffffffffffffffffffffffffffffffffffff00\ncaller: 0x0\ncalldata_iE4RowEscrow_0: 0x151d7d3200000000000000000000000000000000000000000000000000000000\ncalldatasize_iE4RowEscrow: 0x4\nstorage_18: 0x0\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `flushDividends()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/19/0x47d822fcf7d242d4e6f22ab70b63fabab36922c4.sol",
        "function": "flushDividends()",
        "lineno": 572,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 13971,
        "code": "        // wo",
        "debug": "storage_21: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ntimestamp: 0x1\nstorage_24: 0x0\nstorage_28: 0x0\nstorage_16: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_17: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_0: 0x0\nstorage_1: 0xffffffffffffffffffffffffffffffffffffffff00\ncaller: 0x0\ncalldata_iE4RowEscrow_0: 0x151d7d3200000000000000000000000000000000000000000000000000000000\ncalldatasize_iE4RowEscrow: 0x4\nstorage_18: 0x0\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `flushDividends()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/19/0x47d822fcf7d242d4e6f22ab70b63fabab36922c4.sol",
        "function": "flushDividends()",
        "lineno": 574,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 14192,
        "code": "  if ((held > 0) && (pid != curPayoutI",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_16: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_18: 0x1\nstorage_0: 0x0\nstorage_1: 0xffffffffffffffffffffffffffffffffffffffff00\ncaller: 0x0\ncalldata_iE4RowEscrow_0: 0x151d7d3200000000000000000000000000000000000000000000000000000000\ncalldatasize_iE4RowEscrow: 0x4\nstorage_20: 0x0\nstorage_17: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/19/0x47d822fcf7d242d4e6f22ab70b63fabab36922c4.sol",
        "function": "flushDividends()",
        "lineno": 585,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 15104,
        "code": "    function totalSuppl",
        "debug": "storage_21: 0x5080505015552c7c2c2c0aaad3001d1000012cffe0ee30020400000000014320\ncalldata_iE4RowEscrow_32 + 36: 0x2\ntimestamp: 0x0\nstorage_1 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_iE4RowEscrow_4: 0x2\nstorage_0 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_iE4RowEscrow_32_+_4: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x2\nstorage_29: 0x0\nstorage_0: 0x0\ncalldata_iE4RowEscrow_4: 0x0\ncalldata_iE4RowEscrow_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_iE4RowEscrow: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `transferFrom(address,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/19/0x47d822fcf7d242d4e6f22ab70b63fabab36922c4.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 224,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 15192,
        "code": "ly)\n        {",
        "debug": "storage_7: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_iE4RowEscrow_32 + 36: 0x2\ntimestamp: 0x0\nstorage_1 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_iE4RowEscrow_4: 0x2\nstorage_0 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_iE4RowEscrow_32_+_4: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x2\nstorage_29: 0x0\nstorage_0: 0x0\ncalldata_iE4RowEscrow_4: 0x0\ncalldata_iE4RowEscrow_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_iE4RowEscrow: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `transferFrom(address,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/19/0x47d822fcf7d242d4e6f22ab70b63fabab36922c4.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 224,
        "title": "Integer Overflow ",
        "type": "Warning"
      }
    ],
    "success": true
  }
}