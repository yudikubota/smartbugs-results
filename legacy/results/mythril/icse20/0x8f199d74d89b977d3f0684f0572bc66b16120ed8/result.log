{"error": null, "issues": [{"address": 339, "code": " send all available ", "debug": "The exception is triggered under the following conditions:\n\nstorage_4: 0x0\nreturndatasize: 0x20\nretval_3236: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_7: 0xff00\ntimestamp: 0x0\ncalldatasize_TokenHolders: 0x3\nstorage_5: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/22/0x8f199d74d89b977d3f0684f0572bc66b16120ed8.sol", "function": "fallback", "lineno": 215, "title": "Exception state", "type": "Informational"}, {"address": 366, "code": "    }\n\n        // calculate the change fo", "debug": "The exception is triggered under the following conditions:\n\ncallvalue: 0x1000000000000000000000000000000000000000000000000bbbfffffe\nstorage_5: 0x7ffffffffffffffffffffffffffffffffffffffffffffffff800000802000000\nstorage_4: 0x0\nreturndatasize: 0x20\nretval_3236: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_7: 0xff00\ntimestamp: 0x0\ncalldatasize_TokenHolders: 0x3\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/22/0x8f199d74d89b977d3f0684f0572bc66b16120ed8.sol", "function": "fallback", "lineno": 216, "title": "Exception state", "type": "Informational"}, {"address": 622, "code": "\n\n        // new balance should be les", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/22/0x8f199d74d89b977d3f0684f0572bc66b16120ed8.sol", "function": "fallback", "lineno": 229, "title": "Message call to external contract", "type": "Informational"}, {"address": 622, "code": "\n\n        // new balance should be les", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3236\n", "filename": "/unique_chucks/22/0x8f199d74d89b977d3f0684f0572bc66b16120ed8.sol", "function": "fallback", "lineno": 229, "title": "Multiple Calls", "type": "Information"}, {"address": 3236, "code": "6 supply) {\n        // total s", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/22/0x8f199d74d89b977d3f0684f0572bc66b16120ed8.sol", "function": "balanceOf(address)", "lineno": 100, "title": "Message call to external contract", "type": "Informational"}, {"address": 3236, "code": "6 supply) {\n        // total s", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3236\nCall at address: 622\nCall at address: 3236\nCall at address: 622\nCall at address: 3236\nCall at address: 622\nCall at address: 3236\nCall at address: 622\n", "filename": "/unique_chucks/22/0x8f199d74d89b977d3f0684f0572bc66b16120ed8.sol", "function": "fallback", "lineno": 100, "title": "Multiple Calls", "type": "Information"}, {"address": 3236, "code": "6 supply) {\n        // total s", "debug": "", "description": "A possible transaction order independence vulnerability exists in function balanceOf(address). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/22/0x8f199d74d89b977d3f0684f0572bc66b16120ed8.sol", "function": "balanceOf(address)", "lineno": 100, "title": "Transaction order dependence", "type": "Warning"}, {"address": 3730, "code": "lue);\n        return true;\n    }\n\n\n    /* A contra", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/22/0x8f199d74d89b977d3f0684f0572bc66b16120ed8.sol", "function": "approve(address,uint256)", "lineno": 125, "title": "Message call to external contract", "type": "Informational"}, {"address": 3730, "code": "lue);\n        return true;\n    }\n\n\n    /* A contra", "debug": "", "description": "A possible transaction order independence vulnerability exists in function approve(address,uint256). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/22/0x8f199d74d89b977d3f0684f0572bc66b16120ed8.sol", "function": "approve(address,uint256)", "lineno": 125, "title": "Transaction order dependence", "type": "Warning"}, {"address": 4107, "code": "transfer(address _to, uin", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/22/0x8f199d74d89b977d3f0684f0572bc66b16120ed8.sol", "function": "withdraw()", "lineno": 106, "title": "Message call to external contract", "type": "Informational"}, {"address": 4107, "code": "transfer(address _to, uin", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 5075\n", "filename": "/unique_chucks/22/0x8f199d74d89b977d3f0684f0572bc66b16120ed8.sol", "function": "withdraw()", "lineno": 106, "title": "Multiple Calls", "type": "Information"}, {"address": 4107, "code": "transfer(address _to, uin", "debug": "", "description": "A possible transaction order independence vulnerability exists in function withdraw(). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/22/0x8f199d74d89b977d3f0684f0572bc66b16120ed8.sol", "function": "withdraw()", "lineno": 106, "title": "Transaction order dependence", "type": "Warning"}, {"address": 4493, "code": "      return true;\n    }\n\n    function allowance(address _owner, a", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/22/0x8f199d74d89b977d3f0684f0572bc66b16120ed8.sol", "function": "transferFrom(address,address,uint256)", "lineno": 140, "title": "Message call to external contract", "type": "Informational"}, {"address": 4493, "code": "      return true;\n    }\n\n    function allowance(address _owner, a", "debug": "", "description": "A possible transaction order independence vulnerability exists in function transferFrom(address,address,uint256). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/22/0x8f199d74d89b977d3f0684f0572bc66b16120ed8.sol", "function": "transferFrom(address,address,uint256)", "lineno": 140, "title": "Transaction order dependence", "type": "Warning"}, {"address": 5075, "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/22/0x8f199d74d89b977d3f0684f0572bc66b16120ed8.sol", "function": "withdraw()", "lineno": 263, "title": "Message call to external contract", "type": "Informational"}, {"address": 5075, "debug": "", "description": "A possible transaction order independence vulnerability exists in function withdraw(). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/22/0x8f199d74d89b977d3f0684f0572bc66b16120ed8.sol", "function": "withdraw()", "lineno": 263, "title": "Transaction order dependence", "type": "Warning"}, {"address": 5197, "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/22/0x8f199d74d89b977d3f0684f0572bc66b16120ed8.sol", "function": "withdraw()", "lineno": 263, "title": "State change after external call", "type": "Warning"}, {"address": 5263, "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/22/0x8f199d74d89b977d3f0684f0572bc66b16120ed8.sol", "function": "withdraw()", "lineno": 263, "title": "State change after external call", "type": "Warning"}, {"address": 5290, "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/22/0x8f199d74d89b977d3f0684f0572bc66b16120ed8.sol", "function": "withdraw()", "lineno": 263, "title": "State change after external call", "type": "Warning"}, {"address": 5851, "code": " = _name;\n        symbo", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/22/0x8f199d74d89b977d3f0684f0572bc66b16120ed8.sol", "function": "_function_0x5d593462", "lineno": 165, "title": "Message call to external contract", "type": "Warning"}, {"address": 5851, "code": " = _name;\n        symbo", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 6054\n", "filename": "/unique_chucks/22/0x8f199d74d89b977d3f0684f0572bc66b16120ed8.sol", "function": "_function_0x5d593462", "lineno": 165, "title": "Multiple Calls", "type": "Information"}, {"address": 5916, "code": "   name = _name;\n        symbol = _s", "debug": "The exception is triggered under the following conditions:\n\nreturndatasize: 0x20\nretval_5851: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_7: 0x0\nstorage_3: 0x0\ncaller: 0x0\ncalldata_TokenHolders_0: 0x5d59346200000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenHolders: 0x4\nmem_160 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_TokenHolders_4 + calldata_TokenHolders_32 + 36)) +\n32 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_TokenHolders_4 + calldata_TokenHolders_32 + 68)): 0x0\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/22/0x8f199d74d89b977d3f0684f0572bc66b16120ed8.sol", "function": "_function_0x5d593462", "lineno": 165, "title": "Exception state", "type": "Informational"}, {"address": 6054, "code": "mals();\n\n        _initi", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/22/0x8f199d74d89b977d3f0684f0572bc66b16120ed8.sol", "function": "_function_0x5d593462", "lineno": 170, "title": "Message call to external contract", "type": "Warning"}, {"address": 6945, "code": "_value); // Notify anyone listening that this ", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/22/0x8f199d74d89b977d3f0684f0572bc66b16120ed8.sol", "function": "transfer(address,uint256)", "lineno": 113, "title": "Message call to external contract", "type": "Informational"}, {"address": 6945, "code": "_value); // Notify anyone listening that this ", "debug": "", "description": "A possible transaction order independence vulnerability exists in function transfer(address,uint256). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/22/0x8f199d74d89b977d3f0684f0572bc66b16120ed8.sol", "function": "transfer(address,uint256)", "lineno": 113, "title": "Transaction order dependence", "type": "Warning"}, {"address": 8115, "code": "o init() function.\n        Only contract", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/22/0x8f199d74d89b977d3f0684f0572bc66b16120ed8.sol", "function": "allowance(address,address)", "lineno": 150, "title": "Message call to external contract", "type": "Informational"}, {"address": 8115, "code": "o init() function.\n        Only contract", "debug": "", "description": "A possible transaction order independence vulnerability exists in function allowance(address,address). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/22/0x8f199d74d89b977d3f0684f0572bc66b16120ed8.sol", "function": "allowance(address,address)", "lineno": 150, "title": "Transaction order dependence", "type": "Warning"}], "success": true}