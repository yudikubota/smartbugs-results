{"error": null, "issues": [{"address": 2431, "code": "true);\n\n        Race storag", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/2/0x6b6220677b93e8fc9dc3ffe582e481b7a56c79a9.sol", "function": "registerForRace(uint256)", "lineno": 135, "title": "Message call to external contract", "type": "Informational"}, {"address": 2431, "code": "true);\n\n        Race storag", "debug": "", "description": "A possible transaction order independence vulnerability exists in function registerForRace(uint256). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/2/0x6b6220677b93e8fc9dc3ffe582e481b7a56c79a9.sol", "function": "registerForRace(uint256)", "lineno": 135, "title": "Transaction order dependence", "type": "Warning"}, {"address": 2926, "code": "ttyId\n        });\n\n        race.racers.push(race", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/2/0x6b6220677b93e8fc9dc3ffe582e481b7a56c79a9.sol", "function": "registerForRace(uint256)", "lineno": 153, "title": "State change after external call", "type": "Warning"}, {"address": 2984, "code": ";\n\ncontract KittyR", "debug": "storage_1 +\nkeccac_4294967295_&\n4294967295_&\nUDiv(256*Concat(0,_1_+_Extract(39,_8,_storage_5))_|\n_____Concat(Extract(255,_40,_storage_5),\n____________0,\n____________Extract(7,_0,_storage_5)),\n_____256): 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nretval_2431: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_1 + keccac_4294967295_&_4294967295_&_UDiv(storage_5,_256): 0x0\nstorage_5: 0x0\nstorage_keccac_4294967295_&_4294967295_&_UDiv(storage_5,_256): 0x0\nstorage_keccac_calldata_KittyRace_4: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\nreturndatasize: 0x20\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_2: 0xff00\ncalldata_KittyRace_0: 0x44dc4dec00000000000000000000000000000000000000000000000000000000\ncalldatasize_KittyRace: 0x4\nstorage_3: 0x0\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `registerForRace(uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/2/0x6b6220677b93e8fc9dc3ffe582e481b7a56c79a9.sol", "function": "registerForRace(uint256)", "lineno": 1, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2987, "code": "{\n    struct Race {\n   ", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/2/0x6b6220677b93e8fc9dc3ffe582e481b7a56c79a9.sol", "function": "registerForRace(uint256)", "lineno": 3, "title": "State change after external call", "type": "Warning"}, {"address": 3090, "code": " racer.kittyId,\n       ", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/2/0x6b6220677b93e8fc9dc3ffe582e481b7a56c79a9.sol", "function": "registerForRace(uint256)", "lineno": 163, "title": "State change after external call", "type": "Warning"}, {"address": 3101, "code": " racer.kittyId,\n       ", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/2/0x6b6220677b93e8fc9dc3ffe582e481b7a56c79a9.sol", "function": "registerForRace(uint256)", "lineno": 163, "title": "State change after external call", "type": "Warning"}, {"address": 3147, "code": "ers.length - 1 // Race positi", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/2/0x6b6220677b93e8fc9dc3ffe582e481b7a56c79a9.sol", "function": "registerForRace(uint256)", "lineno": 164, "title": "State change after external call", "type": "Warning"}, {"address": 5187, "code": "rRace(uint256 _kittyId)\n        ex", "debug": "The exception is triggered under the following conditions:\n\ncalldata_KittyRace_32 + 4: 0x0\nstorage_1 + keccac_4294967295_&_4294967295_&_calldata_KittyRace_4: 0x0\ncalldata_KittyRace_0: 0x80e9f98c00000000000000000000000000000000000000000000000000000000\ncalldatasize_KittyRace: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/2/0x6b6220677b93e8fc9dc3ffe582e481b7a56c79a9.sol", "function": "getRacer(uint32,uint256)", "lineno": 121, "title": "Exception state", "type": "Informational"}], "success": true}