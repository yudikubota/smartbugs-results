{
  "contract": "0xc971af31326977c45a9c31fbc05c5faa45021e19",
  "tool": "mythril",
  "start": 1563742902.955535,
  "end": 1563742907.8474336,
  "duration": 4.8918986320495605,
  "analysis": {
    "success": false,
    "error": "Solc experienced a fatal error (code 1).\n\n/unique_chucks/41/0xc971af31326977c45a9c31fbc05c5faa45021e19.sol:2:5: Error: No visibility specified. Did you intend to add \"public\"?\n    function add(address _add, uint _req) {\r\n    ^ (Relevant source part starts here and spans across multiple lines).\n/unique_chucks/41/0xc971af31326977c45a9c31fbc05c5faa45021e19.sol:1:1: Warning: Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.5.8;\"\ncontract check {\r\n^ (Relevant source part starts here and spans across multiple lines).\n/unique_chucks/41/0xc971af31326977c45a9c31fbc05c5faa45021e19.sol:3:9: Error: Wrong argument count for function call: 2 arguments given but expected 1. This function requires a single bytes argument. If all your arguments are value types, you can use abi.encode(...) to properly generate it.\n        _add.callcode(bytes4(keccak256(\"changeRequirement(uint256)\")), _req);\r\n        ^------------------------------------------------------------------^\n/unique_chucks/41/0xc971af31326977c45a9c31fbc05c5faa45021e19.sol:3:9: Warning: Return value of low-level calls not used.\n        _add.callcode(bytes4(keccak256(\"changeRequirement(uint256)\")), _req);\r\n        ^------------------------------------------------------------------^\n",
    "issues": []
  }
}