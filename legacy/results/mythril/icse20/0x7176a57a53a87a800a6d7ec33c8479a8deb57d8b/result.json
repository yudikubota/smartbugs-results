{
  "contract": "0x7176a57a53a87a800a6d7ec33c8479a8deb57d8b",
  "tool": "mythril",
  "start": 1563570315.9585242,
  "end": 1563570377.2251565,
  "duration": 61.266632318496704,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 332,
        "code": "Created;\n    uint public totalSupply = 0;",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0x8000\ncalldata_ARIToken_0: 0x55ad42e00000000000000000000000000000000000000000000000000000000\ncalldatasize_ARIToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/18/0x7176a57a53a87a800a6d7ec33c8479a8deb57d8b.sol",
        "function": "_function_0x055ad42e",
        "lineno": 35,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 1721,
        "code": "uint newTokens = msg.value * ",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0x8000\ncalldatasize_ARIToken: 0x3\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/18/0x7176a57a53a87a800a6d7ec33c8479a8deb57d8b.sol",
        "function": "fallback",
        "lineno": 85,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2163,
        "code": "e.Paused)\n                // ",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0x8000\nstorage_4: 0x0\ncaller: 0x0\ncalldata_ARIToken_0: 0x1ca2e94a00000000000000000000000000000000000000000000000000000000\ncalldatasize_ARIToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/18/0x7176a57a53a87a800a6d7ec33c8479a8deb57d8b.sol",
        "function": "_function_0x1ca2e94a",
        "lineno": 131,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2196,
        "code": "ch to migration phase only ",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_ARIToken_4: 0x80\nstorage_0: 0x0\nstorage_4: 0x0\ncaller: 0x0\ncalldata_ARIToken_0: 0x1ca2e94a00000000000000000000000000000000000000000000000000000000\ncalldatasize_ARIToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/18/0x7176a57a53a87a800a6d7ec33c8479a8deb57d8b.sol",
        "function": "_function_0x1ca2e94a",
        "lineno": 132,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2276,
        "code": "Phase == Phase.Running || ",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_ARIToken_4: 0x80\nstorage_0: 0x100\nstorage_4: 0x0\ncaller: 0x0\ncalldata_ARIToken_0: 0x1ca2e94a00000000000000000000000000000000000000000000000000000000\ncalldatasize_ARIToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/18/0x7176a57a53a87a800a6d7ec33c8479a8deb57d8b.sol",
        "function": "_function_0x1ca2e94a",
        "lineno": 133,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2990,
        "code": "      if (!transferable) throw;",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0x8000\nstorage_4: 0x0\ncaller: 0x0\ncalldata_ARIToken_0: 0x4defd1bf00000000000000000000000000000000000000000000000000000000\ncalldatasize_ARIToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/18/0x7176a57a53a87a800a6d7ec33c8479a8deb57d8b.sol",
        "function": "setCrowdsaleManager(address)",
        "lineno": 167,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3521,
        "code": "  {\n        if(currentPhase ",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0x8000\nstorage_4: 0x0\ncaller: 0x0\ncalldata_ARIToken_0: 0x91b7f5ed00000000000000000000000000000000000000000000000000000000\ncalldatasize_ARIToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/18/0x7176a57a53a87a800a6d7ec33c8479a8deb57d8b.sol",
        "function": "setPrice(uint256)",
        "lineno": 192,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}