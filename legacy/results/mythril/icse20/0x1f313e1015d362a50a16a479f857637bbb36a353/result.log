{"error": null, "issues": [{"address": 441, "code": "nlyOwner {\n        require(_accounts.length == _values.length);\n        \n        for (uint i = 0; i < _accounts.length; i++) {\n            accounts.push(_accounts[i]);\n            values.push(_values[i]);\n        }\n    }\n    \n    \n    function terminate() onlyOwner {\n        selfde", "debug": "calldata_LineOfTransfers_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_LineOfTransfers_0: 0xb487b69900000000000000000000000000000000000000000000000000000000\ncalldatasize_LineOfTransfers: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `_function_0xb487b699`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/24/0x1f313e1015d362a50a16a479f857637bbb36a353.sol", "function": "_function_0xb487b699", "lineno": 56, "title": "Integer Overflow ", "type": "Warning"}, {"address": 981, "code": "] public values;\n   ", "debug": "The exception is triggered under the following conditions:\n\ncalldata_LineOfTransfers_4: 0x0\nstorage_1: 0x0\ncalldata_LineOfTransfers_0: 0x5e383d2100000000000000000000000000000000000000000000000000000000\ncalldatasize_LineOfTransfers: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/24/0x1f313e1015d362a50a16a479f857637bbb36a353.sol", "function": "_function_0x5e383d21", "lineno": 6, "title": "Exception state", "type": "Informational"}, {"address": 1197, "code": ";\n\ncontract LineOf", "debug": "storage_0: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nmem_128 +\n32 +\n32*calldata_LineOfTransfers_4 + calldata_LineOfTransfers_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_3: 0x0\ncaller: 0x0\ncalldata_LineOfTransfers_0: 0xb487b69900000000000000000000000000000000000000000000000000000000\ncalldatasize_LineOfTransfers: 0x4\ncalldata_LineOfTransfers_4 + calldata_LineOfTransfers_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `_function_0xb487b699`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/24/0x1f313e1015d362a50a16a479f857637bbb36a353.sol", "function": "_function_0xb487b699", "lineno": 1, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1322, "code": ";\n\ncontract LineOf", "debug": "storage_1: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nmem_128 +\n32 +\n32*calldata_LineOfTransfers_4 + calldata_LineOfTransfers_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_3: 0x0\ncaller: 0x0\ncalldata_LineOfTransfers_0: 0xb487b69900000000000000000000000000000000000000000000000000000000\ncalldatasize_LineOfTransfers: 0x4\ncalldata_LineOfTransfers_4 + calldata_LineOfTransfers_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `_function_0xb487b699`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/24/0x1f313e1015d362a50a16a479f857637bbb36a353.sol", "function": "_function_0xb487b699", "lineno": 1, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1394, "code": "ess[] public accounts;\n  ", "debug": "The exception is triggered under the following conditions:\n\ncalldata_LineOfTransfers_4: 0x0\nstorage_0: 0x0\ncalldata_LineOfTransfers_0: 0xf2a40db800000000000000000000000000000000000000000000000000000000\ncalldatasize_LineOfTransfers: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/24/0x1f313e1015d362a50a16a479f857637bbb36a353.sol", "function": "_function_0xf2a40db8", "lineno": 5, "title": "Exception state", "type": "Informational"}, {"address": 1461, "code": "unts.length);\n        assert(in", "debug": "The exception is triggered under the following conditions:\n\nstorage_2: 0x0\nstorage_0: 0x0\ncalldata_LineOfTransfers_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_LineOfTransfers_0: 0x53fafd1500000000000000000000000000000000000000000000000000000000\ncalldatasize_LineOfTransfers: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/24/0x1f313e1015d362a50a16a479f857637bbb36a353.sol", "function": "makeTransfer(uint256)", "lineno": 20, "title": "Exception state", "type": "Informational"}, {"address": 1477, "code": "s.length);\n        _;\n    }\n ", "debug": "The exception is triggered under the following conditions:\n\nstorage_2: 0x0\nstorage_1: 0x0\nstorage_0: 0x1\ncalldata_LineOfTransfers_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_LineOfTransfers_0: 0x53fafd1500000000000000000000000000000000000000000000000000000000\ncalldatasize_LineOfTransfers: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/24/0x1f313e1015d362a50a16a479f857637bbb36a353.sol", "function": "makeTransfer(uint256)", "lineno": 21, "title": "Exception state", "type": "Informational"}, {"address": 1675, "code": "      Transfer(accounts[index], ", "debug": "", "description": "A possible transaction order independence vulnerability exists in function makeTransfer(uint256). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/24/0x1f313e1015d362a50a16a479f857637bbb36a353.sol", "function": "makeTransfer(uint256)", "lineno": 40, "title": "Transaction order dependence", "type": "Warning"}], "success": true}