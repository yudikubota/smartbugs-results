{
  "contract": "0xe79c61b12279d65413ff6c670d5d7aac689158f6",
  "tool": "mythril",
  "start": 1563560639.8192754,
  "end": 1563560789.5707216,
  "duration": 149.75144624710083,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 280,
        "code": "nal \n        onlyVendor \n        ratePlanExist(dataSource.vendorIds(msg.sender), _rpid) \n        returns(bool) {\n\n        uint256 vendorId = dataSource.vendorIds(msg.sender);\n        dataSource.updateRatePlan(vendorId, _rpid, _name, _ipfs);\n\n        // Event \n        emit RatePlanModified(msg.sender, _rpid, _name, _ipfs);\n        return true;\n    }\n\n    /**\n     * @dev Returns a list of all rate plan IDs assigned to a vendor.\n     * @param _vendorId The Id of vendor\n     * @param _from The begin ratePlan Id\n     * @param _limit How many ratePlan Ids one page \n     * @return A list of all rate plan IDs assigned to a vendor\n     */\n    function ratePlansOfVe",
        "debug": "calldata_TripioToken_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_TripioToken_0: 0x17a5f8cc00000000000000000000000000000000000000000000000000000000\ncalldatasize_TripioToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `createRatePlan(string,bytes32)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/17/0xe79c61b12279d65413ff6c670d5d7aac689158f6.sol",
        "function": "createRatePlan(string,bytes32)",
        "lineno": 1570,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 503,
        "code": "{\n            (uint16 _inventory,, uint256 _price) = dataSource.getPrice(_vendorId, _rpid, _dates[index], _token);\n            prices[index] = _price;\n            inventories[index] = _inventory;\n        }\n        return (prices, inventories);\n    }\n\n    /**\n     * @dev Returns the RP's price and inventory of `_date`.\n     *      Throw when `_rpid` not exist\n     * @param _vendorId The vendor Id\n     * @param _rpid The rate plan identifier\n     * @param _date The price and inventory to be returneed of `_date`\n     * @param _token The digital currency token\n     * @return The price and inventory\n     */\n    function priceOf",
        "debug": "calldata_TripioToken_32 + 36: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_TripioToken_0: 0x21edbe2400000000000000000000000000000000000000000000000000000000\ncalldatasize_TripioToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `pricesAndInventoriesOfDate(uint256,uint256,uint256[],uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/17/0xe79c61b12279d65413ff6c670d5d7aac689158f6.sol",
        "function": "pricesAndInventoriesOfDate(uint256,uint256,uint256[],uint256)",
        "lineno": 376,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 640,
        "code": "{\n            (uint16 _inventory,, uint256 _price) = dataSource.getPrice(_vendorId, _rpid, _dates[index], _token);\n            prices[index] = _price;\n            inventories[index] = _inventory;\n        }\n        return (prices, inventories);\n    }\n\n    /**\n     * @dev Returns the RP's price and inventory of `_date`.\n     *      Throw when `_rpid` not exist\n     * @param _vendorId The vendor Id\n     * @param _rpid The rate plan identifier\n     * @param _date The price and inventory to be returneed of `_date`\n     * @param _token The digital currency token\n     * @return The price and inventory\n     */\n    function priceOf",
        "debug": "mem_128 +\n32 +\n32*calldata_TripioToken_4 + calldata_TripioToken_32 + 36: 0x8421003f084001f4210815cf88407c00000000000000037c1d000e8d178001f\ncalldata_TripioToken_4 + calldata_TripioToken_32 + 36: 0x1\nreturndatasize: 0x60\nretval_4678: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_TripioToken_0: 0x21edbe2400000000000000000000000000000000000000000000000000000000\ncalldatasize_TripioToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `pricesAndInventoriesOfDate(uint256,uint256,uint256[],uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/17/0xe79c61b12279d65413ff6c670d5d7aac689158f6.sol",
        "function": "pricesAndInventoriesOfDate(uint256,uint256,uint256[],uint256)",
        "lineno": 376,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2445,
        "code": "    dataSource.updateRatePlan(ve",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/17/0xe79c61b12279d65413ff6c670d5d7aac689158f6.sol",
        "function": "createRatePlan(string,bytes32)",
        "lineno": 1576,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 2445,
        "code": "    dataSource.updateRatePlan(ve",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3333\nCall at address: 3064\nCall at address: 3333\nCall at address: 3064\nCall at address: 3333\nCall at address: 3064\nCall at address: 3333\nCall at address: 3064\nCall at address: 2732\n",
        "filename": "/unique_chucks/17/0xe79c61b12279d65413ff6c670d5d7aac689158f6.sol",
        "function": "createRatePlan(string,bytes32)",
        "lineno": 1576,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 2732,
        "code": "_ipfs);\n\n        // Event \n        emit Rate",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/17/0xe79c61b12279d65413ff6c670d5d7aac689158f6.sol",
        "function": "createRatePlan(string,bytes32)",
        "lineno": 1576,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 2732,
        "code": "_ipfs);\n\n        // Event \n        emit Rate",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3333\nCall at address: 3064\nCall at address: 3333\nCall at address: 3064\n",
        "filename": "/unique_chucks/17/0xe79c61b12279d65413ff6c670d5d7aac689158f6.sol",
        "function": "createRatePlan(string,bytes32)",
        "lineno": 1576,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 3064,
        "code": "param _vendorId The Id of vendor",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/17/0xe79c61b12279d65413ff6c670d5d7aac689158f6.sol",
        "function": "createRatePlan(string,bytes32)",
        "lineno": 1585,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 3064,
        "code": "param _vendorId The Id of vendor",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3333\n",
        "filename": "/unique_chucks/17/0xe79c61b12279d65413ff6c670d5d7aac689158f6.sol",
        "function": "createRatePlan(string,bytes32)",
        "lineno": 1585,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 3333,
        "code": " begin ratePlan Id\n     * @param _limit How many rateP",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/17/0xe79c61b12279d65413ff6c670d5d7aac689158f6.sol",
        "function": "createRatePlan(string,bytes32)",
        "lineno": 1586,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 3668,
        "code": "e.ratePlanIsExist(_vendorId, _r",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/17/0xe79c61b12279d65413ff6c670d5d7aac689158f6.sol",
        "function": "priceOfDate(uint256,uint256,uint256,uint256)",
        "lineno": 85,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 4678,
        "code": "lan identifier\n     * @param _date The price and inventory t",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/17/0xe79c61b12279d65413ff6c670d5d7aac689158f6.sol",
        "function": "pricesAndInventoriesOfDate(uint256,uint256,uint256[],uint256)",
        "lineno": 388,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 4678,
        "code": "lan identifier\n     * @param _date The price and inventory t",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 4678\n",
        "filename": "/unique_chucks/17/0xe79c61b12279d65413ff6c670d5d7aac689158f6.sol",
        "function": "pricesAndInventoriesOfDate(uint256,uint256,uint256[],uint256)",
        "lineno": 388,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 4802,
        "code": "igital currency to",
        "debug": "The exception is triggered under the following conditions:\n\nreturndatasize: 0x60\nretval_4678: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_TripioToken_4 + calldata_TripioToken_32 + 36: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_TripioToken_0: 0x21edbe2400000000000000000000000000000000000000000000000000000000\ncalldatasize_TripioToken: 0x4\nmem_128 +\n32 +\n32*calldata_TripioToken_4 + calldata_TripioToken_32 + 36: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/17/0xe79c61b12279d65413ff6c670d5d7aac689158f6.sol",
        "function": "pricesAndInventoriesOfDate(uint256,uint256,uint256[],uint256)",
        "lineno": 390,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 5059,
        "code": "endorId > 0);\n        (,,,bool v",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/17/0xe79c61b12279d65413ff6c670d5d7aac689158f6.sol",
        "function": "modifyRatePlan(uint256,string,bytes32)",
        "lineno": 53,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 5059,
        "code": "endorId > 0);\n        (,,,bool v",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 5280\n",
        "filename": "/unique_chucks/17/0xe79c61b12279d65413ff6c670d5d7aac689158f6.sol",
        "function": "modifyRatePlan(uint256,string,bytes32)",
        "lineno": 53,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 5280,
        "code": ");\n        _;\n    }\n\n    /**\n ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/17/0xe79c61b12279d65413ff6c670d5d7aac689158f6.sol",
        "function": "modifyRatePlan(uint256,string,bytes32)",
        "lineno": 55,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 7058,
        "code": "\n\n    /**\n     * Rate plan exis",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/17/0xe79c61b12279d65413ff6c670d5d7aac689158f6.sol",
        "function": "ratePlanOfVendor(uint256,uint256)",
        "lineno": 77,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 7747,
        "code": "\n\n    /**\n     * Rate plan exis",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/17/0xe79c61b12279d65413ff6c670d5d7aac689158f6.sol",
        "function": "ratePlansOfVendor(uint256,uint256,uint256)",
        "lineno": 77,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 8482,
        "code": "ntory(vendorId, _rpid, _inventor",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/17/0xe79c61b12279d65413ff6c670d5d7aac689158f6.sol",
        "function": "updateBasePrice(uint256,uint256[],uint256[],uint16)",
        "lineno": 254,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 8482,
        "code": "ntory(vendorId, _rpid, _inventor",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 8689\n",
        "filename": "/unique_chucks/17/0xe79c61b12279d65413ff6c670d5d7aac689158f6.sol",
        "function": "updateBasePrice(uint256,uint256[],uint256[],uint16)",
        "lineno": 254,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 8689,
        "code": "e.ratePlanIsExist(_vendorId, _r",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/17/0xe79c61b12279d65413ff6c670d5d7aac689158f6.sol",
        "function": "updateBasePrice(uint256,uint256[],uint256[],uint16)",
        "lineno": 85,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 10069,
        "code": "e.ratePlanIsExist(_vendorId, _r",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/17/0xe79c61b12279d65413ff6c670d5d7aac689158f6.sol",
        "function": "pricesOfDate(uint256,uint256,uint256[],uint256)",
        "lineno": 85,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 11699,
        "code": "rices(_rpid, _dates[index], _inv",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/17/0xe79c61b12279d65413ff6c670d5d7aac689158f6.sol",
        "function": "updatePrices(uint256,uint256[],uint16,uint256[],uint256[])",
        "lineno": 283,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 11699,
        "code": "rices(_rpid, _dates[index], _inv",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 11906\n",
        "filename": "/unique_chucks/17/0xe79c61b12279d65413ff6c670d5d7aac689158f6.sol",
        "function": "updatePrices(uint256,uint256[],uint16,uint256[],uint256[])",
        "lineno": 283,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 11906,
        "code": "e.ratePlanIsExist(_vendorId, _r",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/17/0xe79c61b12279d65413ff6c670d5d7aac689158f6.sol",
        "function": "updatePrices(uint256,uint256[],uint16,uint256[],uint256[])",
        "lineno": 85,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 12758,
        "code": "e.ratePlanIsExist(_vendorId, _r",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/17/0xe79c61b12279d65413ff6c670d5d7aac689158f6.sol",
        "function": "inventoriesOfDate(uint256,uint256,uint256[])",
        "lineno": 85,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 13821,
        "code": "endorId > 0);\n        (,,,bool v",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/17/0xe79c61b12279d65413ff6c670d5d7aac689158f6.sol",
        "function": "removeRatePlan(uint256)",
        "lineno": 53,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 15912,
        "code": "    /**\n     * @dev Returns the ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/17/0xe79c61b12279d65413ff6c670d5d7aac689158f6.sol",
        "function": "updateInventories(uint256,uint256[],uint16)",
        "lineno": 312,
        "title": "Message call to external contract",
        "type": "Informational"
      }
    ],
    "success": true
  }
}