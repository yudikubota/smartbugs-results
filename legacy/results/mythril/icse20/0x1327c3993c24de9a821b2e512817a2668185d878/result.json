{
  "contract": "0x1327c3993c24de9a821b2e512817a2668185d878",
  "tool": "mythril",
  "start": 1563541413.6703546,
  "end": 1563541466.0373113,
  "duration": 52.36695671081543,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 948,
        "code": "ID]==0); //country unowne",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_Risk_4: 0xb2\ncalldata_Risk_0: 0xb1dcc8800000000000000000000000000000000000000000000000000000000\ncalldatasize_Risk: 0x4\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/16/0x1327c3993c24de9a821b2e512817a2668185d878.sol",
        "function": "buyCountry(uint8)",
        "lineno": 23,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 1013,
        "code": "countryID]==0); //country unowned\n  ",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_Concat(0, Extract(7, 0, calldata_Risk_4)) + 2: 0xffffffffffffffffffffffffffffffffffffffff00\ncalldata_Risk_4: 0xb1\ncalldata_Risk_0: 0xb1dcc8800000000000000000000000000000000000000000000000000000000\ncalldatasize_Risk: 0x4\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/16/0x1327c3993c24de9a821b2e512817a2668185d878.sol",
        "function": "buyCountry(uint8)",
        "lineno": 23,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 1031,
        "code": "finney); //0.01 ether\n        ",
        "debug": "The exception is triggered under the following conditions:\n\ncallvalue: 0xffffffffffffffffffffffffffffffffffffffffffffffffffdc790d903effff\nstorage_Concat(0, Extract(7, 0, calldata_Risk_4)) + 2: 0x0\ncalldata_Risk_4: 0xb1\ncalldata_Risk_0: 0xb1dcc8800000000000000000000000000000000000000000000000000000000\ncalldatasize_Risk: 0x4\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/16/0x1327c3993c24de9a821b2e512817a2668185d878.sol",
        "function": "buyCountry(uint8)",
        "lineno": 24,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 1041,
        "code": "       playerCountries",
        "debug": "storage_181: 0xffffffffffffffffffffffffffffffffffffffffffffffffffde3ec788000000\nstorage_Concat(0, Extract(7, 0, calldata_Risk_4)) + 2: 0x0\ncalldata_Risk_4: 0xb1\ncalldata_Risk_0: 0xb1dcc8800000000000000000000000000000000000000000000000000000000\ncalldatasize_Risk: 0x4\ncallvalue: 0x2386f26fc10000\n",
        "description": "A possible integer overflow exists in the function `buyCountry(uint8)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/16/0x1327c3993c24de9a821b2e512817a2668185d878.sol",
        "function": "buyCountry(uint8)",
        "lineno": 27,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1119,
        "code": ";\n\ncontract Risk\n{",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_Concat(0, Extract(7, 0, calldata_Risk_4)) + 2: 0x0\ncalldata_Risk_4: 0xb1\ncalldata_Risk_0: 0xb1dcc8800000000000000000000000000000000000000000000000000000000\ncalldatasize_Risk: 0x4\ncallvalue: 0x2386f26fc10000\n",
        "description": "A possible integer overflow exists in the function `buyCountry(uint8)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/16/0x1327c3993c24de9a821b2e512817a2668185d878.sol",
        "function": "buyCountry(uint8)",
        "lineno": 1,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1131,
        "code": "].push(countryID);\n        ownerofCountry[c",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_Concat(0, Extract(7, 0, calldata_Risk_4)) + 2: 0x0\ncalldata_Risk_4: 0xb1\ncalldata_Risk_0: 0xb1dcc8800000000000000000000000000000000000000000000000000000000\ncalldatasize_Risk: 0x4\ncallvalue: 0x2386f26fc10000\n",
        "description": "A possible integer underflow exists in the function `buyCountry(uint8)`.\nThe subtraction may result in a value < 0.",
        "filename": "/unique_chucks/16/0x1327c3993c24de9a821b2e512817a2668185d878.sol",
        "function": "buyCountry(uint8)",
        "lineno": 27,
        "title": "Integer Underflow",
        "type": "Warning"
      },
      {
        "address": 1168,
        "code": "].push(countryID);\n        ownerofCountry[c",
        "debug": "256_EXP_Concat(0,\n       Extract(4,\n               0,\n               storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller)): 0x2140f110c002c4886470ccc00b9b2d6d95001010208126a0883c050408b56210\nstorage_Concat(0, Extract(7, 0, calldata_Risk_4)) + 2: 0x0\ncalldata_Risk_4: 0xb1\ncalldata_Risk_0: 0xb1dcc8800000000000000000000000000000000000000000000000000000000\ncalldatasize_Risk: 0x4\ncallvalue: 0x2386f26fc10000\n",
        "description": "A possible integer overflow exists in the function `buyCountry(uint8)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/16/0x1327c3993c24de9a821b2e512817a2668185d878.sol",
        "function": "buyCountry(uint8)",
        "lineno": 27,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1176,
        "code": "].push(countryID);\n        ownerofCountry[c",
        "debug": "256_EXP_Concat(0,\n       Extract(4,\n               0,\n               storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller)): 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_Concat(0, Extract(7, 0, calldata_Risk_4)) + 2: 0x0\ncalldata_Risk_4: 0x9c\ncalldata_Risk_0: 0xb1dcc8800000000000000000000000000000000000000000000000000000000\ncalldatasize_Risk: 0x4\ncallvalue: 0x2386f26fc10000\n",
        "description": "A possible integer overflow exists in the function `buyCountry(uint8)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/16/0x1327c3993c24de9a821b2e512817a2668185d878.sol",
        "function": "buyCountry(uint8)",
        "lineno": 27,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1273,
        "code": ";\n\ncontract Risk\n{",
        "debug": "storage_180: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_Concat(0, Extract(7, 0, calldata_Risk_4)) + 2: 0x0\ncalldata_Risk_4: 0xb1\ncalldata_Risk_0: 0xb1dcc8800000000000000000000000000000000000000000000000000000000\ncalldatasize_Risk: 0x4\ncallvalue: 0x2386f26fc10000\n",
        "description": "A possible integer overflow exists in the function `buyCountry(uint8)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/16/0x1327c3993c24de9a821b2e512817a2668185d878.sol",
        "function": "buyCountry(uint8)",
        "lineno": 1,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1471,
        "code": "ddress[178])\n    {\n      ",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_Risk_0: 0x2139c2aa00000000000000000000000000000000000000000000000000000000\ncalldatasize_Risk: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/16/0x1327c3993c24de9a821b2e512817a2668185d878.sol",
        "function": "_function_0x2139c2aa",
        "lineno": 118,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 1760,
        "code": "length!=0); //player owns county\n        asse",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_Risk_0: 0x7bba061300000000000000000000000000000000000000000000000000000000\ncalldatasize_Risk: 0x4\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/16/0x1327c3993c24de9a821b2e512817a2668185d878.sol",
        "function": "attackCountry(uint8)",
        "lineno": 36,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 1802,
        "code": ")); //country owned\n     ",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_Risk_4: 0xb2\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_Risk_0: 0x7bba061300000000000000000000000000000000000000000000000000000000\ncalldatasize_Risk: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/16/0x1327c3993c24de9a821b2e512817a2668185d878.sol",
        "function": "attackCountry(uint8)",
        "lineno": 37,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 1868,
        "code": "dress(0)); //country owned\n        assert(msg",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_Concat(0, Extract(7, 0, calldata_Risk_4)) + 2: 0x0\ncalldata_Risk_4: 0xb1\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_Risk_0: 0x7bba061300000000000000000000000000000000000000000000000000000000\ncalldatasize_Risk: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/16/0x1327c3993c24de9a821b2e512817a2668185d878.sol",
        "function": "attackCountry(uint8)",
        "lineno": 37,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 1975,
        "code": "ntryID]); //not attacking its own country\n   ",
        "debug": "The exception is triggered under the following conditions:\n\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\nstorage_Concat(0, Extract(7, 0, calldata_Risk_4)) + 2: 0xffffffffffffffffffffffffffffffffffffffff00\ncalldata_Risk_4: 0xb1\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_Risk_0: 0x7bba061300000000000000000000000000000000000000000000000000000000\ncalldatasize_Risk: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/16/0x1327c3993c24de9a821b2e512817a2668185d878.sol",
        "function": "attackCountry(uint8)",
        "lineno": 38,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 4584,
        "code": "        totalmoney=0;\n          ",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 4702\n",
        "filename": "/unique_chucks/16/0x1327c3993c24de9a821b2e512817a2668185d878.sol",
        "function": "isGameEnd()",
        "lineno": 101,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 4584,
        "code": "        totalmoney=0;\n          ",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function isGameEnd(). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/16/0x1327c3993c24de9a821b2e512817a2668185d878.sol",
        "function": "isGameEnd()",
        "lineno": 101,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 4702,
        "code": "        for (i=0;i<178;i++)\n ",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function isGameEnd(). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/16/0x1327c3993c24de9a821b2e512817a2668185d878.sol",
        "function": "isGameEnd()",
        "lineno": 103,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 5255,
        "code": "gth;\n    }\n    function",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_Risk_4: 0x0\ncalldata_Risk_32 + 4: 0x0\ncalldata_Risk_0: 0xb340a97200000000000000000000000000000000000000000000000000000000\ncalldatasize_Risk: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/16/0x1327c3993c24de9a821b2e512817a2668185d878.sol",
        "function": "getaddr(address,uint8)",
        "lineno": 132,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}