{"error": null, "issues": [{"address": 380, "code": "stamp\n  uint start_date;\n  uin", "debug": "The exception is triggered under the following conditions:\n\nstorage_6: 0x8000\ncalldata_TokenToTokenSwap_0: 0x5b04cbb500000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenToTokenSwap: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/43/0x98f7d9405e9b973e51cd4d85a5b2327a9ca55359.sol", "function": "_function_0x5b04cbb5", "lineno": 107, "title": "Exception state", "type": "Informational"}, {"address": 1391, "code": "s of the factory that created t", "debug": "The exception is triggered under the following conditions:\n\nstorage_6: 0x8000\ncalldata_TokenToTokenSwap_0: 0x4d0c69d900000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenToTokenSwap: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/43/0x98f7d9405e9b973e51cd4d85a5b2327a9ca55359.sol", "function": "EnterSwap(uint256,uint256,bool,address)", "lineno": 177, "title": "Exception state", "type": "Informational"}, {"address": 2405, "code": "s of the factory that created t", "debug": "The exception is triggered under the following conditions:\n\nstorage_6: 0x8000\ncalldata_TokenToTokenSwap_0: 0x67e9b86000000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenToTokenSwap: 0x4\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/43/0x98f7d9405e9b973e51cd4d85a5b2327a9ca55359.sol", "function": "CreateSwap(uint256,uint256,bool,address)", "lineno": 177, "title": "Exception state", "type": "Informational"}, {"address": 3338, "code": "(this));\n    uint loop_count = count", "debug": "The exception is triggered under the following conditions:\n\nstorage_6: 0x8000\ncalldata_TokenToTokenSwap_0: 0x70f9c02100000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenToTokenSwap: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/43/0x98f7d9405e9b973e51cd4d85a5b2327a9ca55359.sol", "function": "forcePay(uint256,uint256)", "lineno": 388, "title": "Exception state", "type": "Informational"}, {"address": 3697, "code": "n = DRCT_Token_Interface(short_to", "debug": "", "description": "This contract executes a message call to an address found at storage slot 16. This storage slot can be written to by calling the function `createTokens()`. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/43/0x98f7d9405e9b973e51cd4d85a5b2327a9ca55359.sol", "function": "forcePay(uint256,uint256)", "lineno": 397, "title": "Message call to external contract", "type": "Warning"}, {"address": 3697, "code": "n = DRCT_Token_Interface(short_to", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 4621\nCall at address: 3988\nCall at address: 4621\nCall at address: 3988\n", "filename": "/unique_chucks/43/0x98f7d9405e9b973e51cd4d85a5b2327a9ca55359.sol", "function": "forcePay(uint256,uint256)", "lineno": 397, "title": "Multiple Calls", "type": "Information"}, {"address": 3697, "code": "n = DRCT_Token_Interface(short_to", "debug": "", "description": "A possible transaction order independence vulnerability exists in function forcePay(uint256,uint256). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/43/0x98f7d9405e9b973e51cd4d85a5b2327a9ca55359.sol", "function": "forcePay(uint256,uint256)", "lineno": 397, "title": "Transaction order dependence", "type": "Warning"}, {"address": 3776, "code": "loop_count-1", "debug": "retval_3697: 0x4000000000000000000000000000000000000000000000000000000000000000\nstorage_6: 0x400\ncalldata_TokenToTokenSwap_32 + 4: 0x0\nreturndatasize: 0x20\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_TokenToTokenSwap_0: 0x70f9c02100000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenToTokenSwap: 0x4\ncallvalue: 0x0\n", "description": "A possible integer underflow exists in the function `forcePay(uint256,uint256)`.\nThe subtraction may result in a value < 0.", "filename": "/unique_chucks/43/0x98f7d9405e9b973e51cd4d85a5b2327a9ca55359.sol", "function": "forcePay(uint256,uint256)", "lineno": 400, "title": "Integer Underflow", "type": "Warning"}, {"address": 3988, "code": "token.getHolderByIndex(j, address(this))", "debug": "", "description": "This contract executes a message call to an address found at storage slot 16. This storage slot can be written to by calling the function `createTokens()`. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/43/0x98f7d9405e9b973e51cd4d85a5b2327a9ca55359.sol", "function": "forcePay(uint256,uint256)", "lineno": 401, "title": "Message call to external contract", "type": "Warning"}, {"address": 3988, "code": "token.getHolderByIndex(j, address(this))", "debug": "", "description": "A possible transaction order independence vulnerability exists in function forcePay(uint256,uint256). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/43/0x98f7d9405e9b973e51cd4d85a5b2327a9ca55359.sol", "function": "forcePay(uint256,uint256)", "lineno": 401, "title": "Transaction order dependence", "type": "Warning"}, {"address": 4428, "code": "f (loop_count == count){\n        token_a.transfer", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/43/0x98f7d9405e9b973e51cd4d85a5b2327a9ca55359.sol", "function": "forcePay(uint256,uint256)", "lineno": 406, "title": "State change after external call", "type": "Warning"}, {"address": 4621, "code": "s, token_a.balanceOf(address(this", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/43/0x98f7d9405e9b973e51cd4d85a5b2327a9ca55359.sol", "function": "forcePay(uint256,uint256)", "lineno": 407, "title": "Message call to external contract", "type": "Informational"}, {"address": 6979, "code": "s of the factory that created t", "debug": "The exception is triggered under the following conditions:\n\nstorage_6: 0x8000\ncalldata_TokenToTokenSwap_0: 0xb442726300000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenToTokenSwap: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/43/0x98f7d9405e9b973e51cd4d85a5b2327a9ca55359.sol", "function": "createTokens()", "lineno": 177, "title": "Exception state", "type": "Informational"}, {"address": 7012, "code": " num_DRCT_longtok", "debug": "storage_6: 0x200\nstorage_30: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffef00\ncalldata_TokenToTokenSwap_0: 0xb442726300000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenToTokenSwap: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `createTokens()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/43/0x98f7d9405e9b973e51cd4d85a5b2327a9ca55359.sol", "function": "createTokens()", "lineno": 286, "title": "Integer Overflow ", "type": "Warning"}, {"address": 7216, "code": "a_amount.div(tokenratio);\n    (s", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/43/0x98f7d9405e9b973e51cd4d85a5b2327a9ca55359.sol", "function": "createTokens()", "lineno": 286, "title": "Message call to external contract", "type": "Informational"}, {"address": 7216, "code": "a_amount.div(tokenratio);\n    (s", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 7809\nCall at address: 7477\n", "filename": "/unique_chucks/43/0x98f7d9405e9b973e51cd4d85a5b2327a9ca55359.sol", "function": "createTokens()", "lineno": 286, "title": "Multiple Calls", "type": "Information"}, {"address": 7477, "code": ") = factory.createToken(token_b_", "debug": "", "description": "This contract executes a message call to an address found at storage slot 23. This storage slot can be written to by calling the function `EnterSwap(uint256,uint256,bool,address)`. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/43/0x98f7d9405e9b973e51cd4d85a5b2327a9ca55359.sol", "function": "createTokens()", "lineno": 287, "title": "Message call to external contract", "type": "Warning"}, {"address": 7477, "code": ") = factory.createToken(token_b_", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 7809\n", "filename": "/unique_chucks/43/0x98f7d9405e9b973e51cd4d85a5b2327a9ca55359.sol", "function": "createTokens()", "lineno": 287, "title": "Multiple Calls", "type": "Information"}, {"address": 7477, "code": ") = factory.createToken(token_b_", "debug": "", "description": "A possible transaction order independence vulnerability exists in function createTokens(). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/43/0x98f7d9405e9b973e51cd4d85a5b2327a9ca55359.sol", "function": "createTokens()", "lineno": 287, "title": "Transaction order dependence", "type": "Warning"}, {"address": 7809, "code": "o);\n    current_state = SwapState.tokenized;\n    if (premium > ", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/43/0x98f7d9405e9b973e51cd4d85a5b2327a9ca55359.sol", "function": "createTokens()", "lineno": 288, "title": "Message call to external contract", "type": "Informational"}, {"address": 7944, "code": "ens = token_b_amount.div(tokenratio);\n    current_state = SwapState.tokenized;\n    if (premium > ", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/43/0x98f7d9405e9b973e51cd4d85a5b2327a9ca55359.sol", "function": "createTokens()", "lineno": 288, "title": "State change after external call", "type": "Warning"}, {"address": 8865, "code": "r == token_a_party || msg.sende", "debug": "The exception is triggered under the following conditions:\n\nstorage_6: 0x8000\ncalldata_TokenToTokenSwap_0: 0xcff410b400000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenToTokenSwap: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/43/0x98f7d9405e9b973e51cd4d85a5b2327a9ca55359.sol", "function": "Exit()", "lineno": 457, "title": "Exception state", "type": "Informational"}, {"address": 9197, "code": "sfer(token_b_party, token_b.balanceOf(address(t", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/43/0x98f7d9405e9b973e51cd4d85a5b2327a9ca55359.sol", "function": "Exit()", "lineno": 458, "title": "Message call to external contract", "type": "Informational"}, {"address": 9197, "code": "sfer(token_b_party, token_b.balanceOf(address(t", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 9315\n", "filename": "/unique_chucks/43/0x98f7d9405e9b973e51cd4d85a5b2327a9ca55359.sol", "function": "Exit()", "lineno": 458, "title": "Multiple Calls", "type": "Information"}, {"address": 9315, "code": "oken_a_party, token_a.balanc", "debug": "", "description": "A possible transaction order independence vulnerability exists in function Exit(). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/43/0x98f7d9405e9b973e51cd4d85a5b2327a9ca55359.sol", "function": "Exit()", "lineno": 459, "title": "Transaction order dependence", "type": "Warning"}, {"address": 9345, "code": ");\n        current_st", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/43/0x98f7d9405e9b973e51cd4d85a5b2327a9ca55359.sol", "function": "Exit()", "lineno": 459, "title": "State change after external call", "type": "Warning"}, {"address": 9351, "code": "pState.ended;\n       ", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/43/0x98f7d9405e9b973e51cd4d85a5b2327a9ca55359.sol", "function": "Exit()", "lineno": 460, "title": "State change after external call", "type": "Warning"}, {"address": 9357, "code": "ium > 0) { cre", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/43/0x98f7d9405e9b973e51cd4d85a5b2327a9ca55359.sol", "function": "Exit()", "lineno": 461, "title": "State change after external call", "type": "Warning"}, {"address": 11179, "code": "ntering with\n  * do no", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/43/0x98f7d9405e9b973e51cd4d85a5b2327a9ca55359.sol", "function": "CreateSwap(uint256,uint256,bool,address)", "lineno": 234, "title": "Message call to external contract", "type": "Informational"}, {"address": 11357, "code": "ring party is entering the correct swap. Note that the tokens you are entering with\n  * do no", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/43/0x98f7d9405e9b973e51cd4d85a5b2327a9ca55359.sol", "function": "CreateSwap(uint256,uint256,bool,address)", "lineno": 234, "title": "State change after external call", "type": "Warning"}, {"address": 11420, "code": "ring party is entering the correct swap. Note that the tokens you are entering with\n  * do no", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/43/0x98f7d9405e9b973e51cd4d85a5b2327a9ca55359.sol", "function": "CreateSwap(uint256,uint256,bool,address)", "lineno": 234, "title": "State change after external call", "type": "Warning"}, {"address": 11426, "code": "ring party is entering the correct swap. Note that the tokens you are entering with\n  * do no", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/43/0x98f7d9405e9b973e51cd4d85a5b2327a9ca55359.sol", "function": "CreateSwap(uint256,uint256,bool,address)", "lineno": 234, "title": "State change after external call", "type": "Warning"}, {"address": 11431, "code": "ring party is entering the correct swap. Note that the tokens you are entering with\n  * do no", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/43/0x98f7d9405e9b973e51cd4d85a5b2327a9ca55359.sol", "function": "CreateSwap(uint256,uint256,bool,address)", "lineno": 234, "title": "State change after external call", "type": "Warning"}, {"address": 11493, "code": "ring party is entering the correct swap. Note that the tokens you are entering with\n  * do no", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/43/0x98f7d9405e9b973e51cd4d85a5b2327a9ca55359.sol", "function": "CreateSwap(uint256,uint256,bool,address)", "lineno": 234, "title": "State change after external call", "type": "Warning"}, {"address": 11858, "code": "   ratio = 100000;\n    if (rati", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/43/0x98f7d9405e9b973e51cd4d85a5b2327a9ca55359.sol", "function": "forcePay(uint256,uint256)", "lineno": 320, "title": "Message call to external contract", "type": "Informational"}, {"address": 11858, "code": "   ratio = 100000;\n    if (rati", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 12066\n", "filename": "/unique_chucks/43/0x98f7d9405e9b973e51cd4d85a5b2327a9ca55359.sol", "function": "forcePay(uint256,uint256)", "lineno": 320, "title": "Multiple Calls", "type": "Information"}, {"address": 11858, "code": "   ratio = 100000;\n    if (rati", "debug": "", "description": "A possible transaction order independence vulnerability exists in function forcePay(uint256,uint256). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/43/0x98f7d9405e9b973e51cd4d85a5b2327a9ca55359.sol", "function": "forcePay(uint256,uint256)", "lineno": 320, "title": "Transaction order dependence", "type": "Warning"}, {"address": 12066, "code": "re_long = share_short = ratio", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/43/0x98f7d9405e9b973e51cd4d85a5b2327a9ca55359.sol", "function": "forcePay(uint256,uint256)", "lineno": 322, "title": "Message call to external contract", "type": "Informational"}, {"address": 12066, "code": "re_long = share_short = ratio", "debug": "", "description": "A possible transaction order independence vulnerability exists in function forcePay(uint256,uint256). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/43/0x98f7d9405e9b973e51cd4d85a5b2327a9ca55359.sol", "function": "forcePay(uint256,uint256)", "lineno": 322, "title": "Transaction order dependence", "type": "Warning"}], "success": true}