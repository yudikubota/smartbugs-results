{
  "contract": "0xaf8eabf89f5664a2bc82ca415a4337821cd54d65",
  "tool": "mythril",
  "start": 1563529737.0873592,
  "end": 1563529764.2228007,
  "duration": 27.135441541671753,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 291,
        "code": "exMap[_beneficiary]-1;\n            whitelistArray[index] = whitelistArray[whitelistLength-1];\n            whitelistArray[whitelistLength-1] = 0;\n            whitelistIndexMap[_beneficiary] = 0;\n           ",
        "debug": "calldata_Whitelist_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_Whitelist_0: 0x8c10671c00000000000000000000000000000000000000000000000000000000\ncalldatasize_Whitelist: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `addManyToWhitelist(address[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/10/0xaf8eabf89f5664a2bc82ca415a4337821cd54d65.sol",
        "function": "addManyToWhitelist(address[])",
        "lineno": 417,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 888,
        "code": "wner));\n ",
        "debug": "",
        "description": "Function removeFromWhitelist(address) retrieves the transaction origin (tx.origin) using the ORIGIN opcode. Use msg.sender instead.\nSee also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin",
        "filename": "/unique_chucks/10/0xaf8eabf89f5664a2bc82ca415a4337821cd54d65.sol",
        "function": "removeFromWhitelist(address)",
        "lineno": 15,
        "title": "Use of tx.origin",
        "type": "Warning"
      },
      {
        "address": 1171,
        "code": "\"AFI\";\n    uint8 public constant ",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_Whitelist_4: 0xffffffffffffffffffffffffffdfffffffffffefffffffffffffffffffff00ff\nstorage_3: 0x0\nstorage_4: 0x1\norigin: 0x0\nstorage_0: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_Whitelist_0: 0x8ab1d68100000000000000000000000000000000000000000000000000000000\ncalldatasize_Whitelist: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/10/0xaf8eabf89f5664a2bc82ca415a4337821cd54d65.sol",
        "function": "removeFromWhitelist(address)",
        "lineno": 431,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 1229,
        "code": "ublic constant symbol",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_3: 0x1ffffffffffffffffffffe000000000000000000000000000000000000000000\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_Whitelist_4: 0xfffffffffffffffffffffe000000000000000000000000000000000000000000\nstorage_4: 0x1ffffffffffffffffffffe000000000000000000000000000000000000000000\norigin: 0x0\nstorage_0: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_Whitelist_0: 0x8ab1d68100000000000000000000000000000000000000000000000000000000\ncalldatasize_Whitelist: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/10/0xaf8eabf89f5664a2bc82ca415a4337821cd54d65.sol",
        "function": "removeFromWhitelist(address)",
        "lineno": 431,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 1643,
        "code": "wner));\n ",
        "debug": "",
        "description": "Function addManyToWhitelist(address[]) retrieves the transaction origin (tx.origin) using the ORIGIN opcode. Use msg.sender instead.\nSee also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin",
        "filename": "/unique_chucks/10/0xaf8eabf89f5664a2bc82ca415a4337821cd54d65.sol",
        "function": "addManyToWhitelist(address[])",
        "lineno": 15,
        "title": "Use of tx.origin",
        "type": "Warning"
      },
      {
        "address": 1924,
        "code": "= whitelistLength){\n           ",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_Whitelist_4: 0x0\nstorage_3: 0x0\ncalldata_Whitelist_0: 0xd251fefc00000000000000000000000000000000000000000000000000000000\ncalldatasize_Whitelist: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/10/0xaf8eabf89f5664a2bc82ca415a4337821cd54d65.sol",
        "function": "_function_0xd251fefc",
        "lineno": 398,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2115,
        "code": "wner));\n ",
        "debug": "",
        "description": "Function addToWhitelist(address) retrieves the transaction origin (tx.origin) using the ORIGIN opcode. Use msg.sender instead.\nSee also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin",
        "filename": "/unique_chucks/10/0xaf8eabf89f5664a2bc82ca415a4337821cd54d65.sol",
        "function": "addToWhitelist(address)",
        "lineno": 15,
        "title": "Use of tx.origin",
        "type": "Warning"
      },
      {
        "address": 2768,
        "code": "wner));\n ",
        "debug": "",
        "description": "Function transferOwnership(address) retrieves the transaction origin (tx.origin) using the ORIGIN opcode. Use msg.sender instead.\nSee also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin",
        "filename": "/unique_chucks/10/0xaf8eabf89f5664a2bc82ca415a4337821cd54d65.sol",
        "function": "transferOwnership(address)",
        "lineno": 15,
        "title": "Use of tx.origin",
        "type": "Warning"
      }
    ],
    "success": true
  }
}