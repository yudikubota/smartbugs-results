{
  "contract": "0xf6d9d890baa03a8eceef42839d35f2bf7c02fdf1",
  "tool": "mythril",
  "start": 1563696593.4329233,
  "end": 1563696636.4779744,
  "duration": 43.04505109786987,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 794,
        "code": "        require(amount <= balances[msg.sender]);\n        for (uint256 j = 0; j < len; j = j.add(1)) {\n            address _to = _tos[j];\n            require(_to != address(0));\n            balances[_to] = balances[_to].add(_values[j]);\n            balances[msg.sender] = balances[msg.sender].sub(_values[j]);\n            emit Transfer(msg.sender, _to, _values[j]);\n        }\n        return true;\n    }\n    \n    //\u67e5\u8be2\u8d26\u6237\u662f\u5426\u5b58\u5728\u9501\u5b9a\u65f6\u95f4\u6233\n    function getFrozenTimestamp(address _target) public view returns (uint256) {\n        require(_target != address(0));\n        return frozenTimestamp[_target];\n    }\n\n \n \n   /**\n    * \u4ece\u8c03\u7528\u8005\u4f5c\u4e3afrom\u4ee3\u7406\u5c06from\u8d26\u6237\u4e2d\u7684token\u8f6c\u8d26\u81f3to\n    * \u8c03\u7528\u8005\u5728from\u7684\u8bb8\u53ef\u989d\u5ea6\u4e2d\u5fc5\u987b>=value\n    * @dev Transfer tokens from one address to another\n    * @param _from address The address which you want to send tokens from\n    * ",
        "debug": "calldata_VGameToken_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_VGameToken_0: 0x1e89d54500000000000000000000000000000000000000000000000000000000\ncalldatasize_VGameToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `multiTransfer(address[],uint256[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/39/0xf6d9d890baa03a8eceef42839d35f2bf7c02fdf1.sol",
        "function": "multiTransfer(address[],uint256[])",
        "lineno": 331,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 8615,
        "code": "}\n}\n\n",
        "debug": "calldata_VGameToken_32 + 4: 0x57f25cd000000000000000000000000000000000000000000000000000000000\nstorage_1: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_5: 0x0\ncaller: 0x0\ncalldata_VGameToken_0: 0x40c10f1900000000000000000000000000000000000000000000000000000000\ncalldatasize_VGameToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `mint(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/39/0xf6d9d890baa03a8eceef42839d35f2bf7c02fdf1.sol",
        "function": "mint(address,uint256)",
        "lineno": 47,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 8628,
        "code": "@title ERC20Ba",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_5: 0x0\nstorage_1: 0x1\ncalldata_VGameToken_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncaller: 0x0\ncalldata_VGameToken_0: 0x40c10f1900000000000000000000000000000000000000000000000000000000\ncalldatasize_VGameToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/39/0xf6d9d890baa03a8eceef42839d35f2bf7c02fdf1.sol",
        "function": "mint(address,uint256)",
        "lineno": 51,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}