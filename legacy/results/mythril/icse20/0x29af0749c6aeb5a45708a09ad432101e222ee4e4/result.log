{"error": null, "issues": [{"address": 906, "code": "msg.sender, _addresses[i], _value);\n         }\n         // Can be removed in one call instead of each time within the loop\n         balanceOf[msg.sender] = safeSub(balanceOf[msg.sender], safeMul(_value, _addresses.length));\n    }\n\n    /**\n     * Implementation to retrieve accidentally sent EIP-20 compliant tokens\n     * @param _token The contract address of the EIP-20 compliant token\n     */\n\n    function retrieveERC(address _token) external canWithdraw(_", "debug": "calldata_SMILE_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_SMILE_0: 0x8fd5a39e00000000000000000000000000000000000000000000000000000000\ncalldatasize_SMILE: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `distributeSMILE(address[],uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x29af0749c6aeb5a45708a09ad432101e222ee4e4.sol", "function": "distributeSMILE(address[],uint256)", "lineno": 227, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2823, "code": ";\n    }\n\n    /**\n     * Contract constructor which ass", "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0xff00\ncaller: 0xff\ncalldata_SMILE_0: 0x8fd5a39e00000000000000000000000000000000000000000000000000000000\ncalldatasize_SMILE: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_contracts/0x29af0749c6aeb5a45708a09ad432101e222ee4e4.sol", "function": "distributeSMILE(address[],uint256)", "lineno": 67, "title": "Exception state", "type": "Informational"}, {"address": 2952, "code": "b(balanceOf[msg.sender], safeMul(_", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_SMILE_0_+_36_+_calldata_SMILE_4: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncalldata_SMILE_32 + 4: 0x57f25cd000000000000000000000000000000000000000000000000000000000\nstorage_0: 0x0\ncalldata_SMILE_4 + calldata_SMILE_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncaller: 0x0\ncalldata_SMILE_0: 0x8fd5a39e00000000000000000000000000000000000000000000000000000000\ncalldatasize_SMILE: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `distributeSMILE(address[],uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x29af0749c6aeb5a45708a09ad432101e222ee4e4.sol", "function": "distributeSMILE(address[],uint256)", "lineno": 230, "title": "Integer Overflow ", "type": "Warning"}, {"address": 3368, "code": "Contract(_to, _val", "debug": "The exception is triggered under the following conditions:\n\ncalldata_SMILE_4: 0x0\ncalldata_SMILE_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncalldatasize_SMILE: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_contracts/0x29af0749c6aeb5a45708a09ad432101e222ee4e4.sol", "function": "transfer(address,uint256)", "lineno": 112, "title": "Exception state", "type": "Informational"}, {"address": 3456, "code": "\n            retur", "debug": "The exception is triggered under the following conditions:\n\ncalldata_SMILE_4: 0x0\ncalldata_SMILE_0: 0xbe45fd6200000000000000000000000000000000000000000000000000000000\ncalldatasize_SMILE: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_contracts/0x29af0749c6aeb5a45708a09ad432101e222ee4e4.sol", "function": "transfer(address,uint256,bytes)", "lineno": 130, "title": "Exception state", "type": "Informational"}, {"address": 3679, "code": "ss(this));\n        _;\n    }\n\n    /**\n     *      Ensures that t", "debug": "The exception is triggered under the following conditions:\n\ncalldata_SMILE_4: 0x0\nstorage_0: 0x0\ncaller: 0x0\ncalldata_SMILE_0: 0xd4afc8b600000000000000000000000000000000000000000000000000000000\ncalldatasize_SMILE: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_contracts/0x29af0749c6aeb5a45708a09ad432101e222ee4e4.sol", "function": "retrieveERC(address)", "lineno": 55, "title": "Exception state", "type": "Informational"}, {"address": 3870, "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_contracts/0x29af0749c6aeb5a45708a09ad432101e222ee4e4.sol", "function": "retrieveERC(address)", "lineno": 250, "title": "Message call to external contract", "type": "Warning"}, {"address": 4167, "code": "ication", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncalldata_SMILE_32 + 4: 0x1\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_SMILE_4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_SMILE_0: 0xbe45fd6200000000000000000000000000000000000000000000000000000000\ncalldatasize_SMILE: 0x4\ncallvalue: 0x0\n", "description": "A possible integer underflow exists in the function `transfer(address,uint256,bytes)`.\nThe subtraction may result in a value < 0.", "filename": "/unique_contracts/0x29af0749c6aeb5a45708a09ad432101e222ee4e4.sol", "function": "transfer(address,uint256,bytes)", "lineno": 91, "title": "Integer Underflow", "type": "Warning"}, {"address": 4179, "code": "safe multiplication\n     * ", "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncalldata_SMILE_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_SMILE_4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_SMILE_0: 0xbe45fd6200000000000000000000000000000000000000000000000000000000\ncalldatasize_SMILE: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_contracts/0x29af0749c6aeb5a45708a09ad432101e222ee4e4.sol", "function": "transfer(address,uint256,bytes)", "lineno": 91, "title": "Exception state", "type": "Informational"}, {"address": 4204, "code": " The address to se", "debug": "The exception is triggered under the following conditions:\n\ncalldata_SMILE_4 + calldata_SMILE_4: 0x1\nstorage_0: 0x0\ncaller: 0x0\ncalldata_SMILE_0: 0x8fd5a39e00000000000000000000000000000000000000000000000000000000\ncalldatasize_SMILE: 0x4\ncalldata_SMILE_32 + 4: 0x0\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_contracts/0x29af0749c6aeb5a45708a09ad432101e222ee4e4.sol", "function": "distributeSMILE(address[],uint256)", "lineno": 103, "title": "Exception state", "type": "Informational"}, {"address": 4454, "code": "er, _to, _value);\n      ", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x8a007bfffffffffffffffff5ffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_SMILE_4: 0xbe00000000000000000000000010000000000000420000000020000000000000\ncalldata_SMILE_32 + 4: 0x83ffff0000000000000000000000000000000000000000000000000000000000\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_SMILE_4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_SMILE_0: 0xbe45fd6200000000000000000000000000000000000000000000000000000000\ncalldatasize_SMILE: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `transfer(address,uint256,bytes)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x29af0749c6aeb5a45708a09ad432101e222ee4e4.sol", "function": "transfer(address,uint256,bytes)", "lineno": 174, "title": "Integer Overflow ", "type": "Warning"}, {"address": 5085, "code": "ntract existance in\n    ", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x8a007bfffffffffffffffff5ffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_SMILE_4: 0xbe00000000000000000000000010000000000000420000000020000000000000\ncalldata_SMILE_32 + 4: 0x83ffff0000000000000000000000000000000000000000000000000000000000\ncalldata_SMILE_4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_SMILE_0: 0xbe45fd6200000000000000000000000000000000000000000000000000000000\ncalldatasize_SMILE: 0x4\nextcodesize: 0x0\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `transfer(address,uint256,bytes)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x29af0749c6aeb5a45708a09ad432101e222ee4e4.sol", "function": "transfer(address,uint256,bytes)", "lineno": 206, "title": "Integer Overflow ", "type": "Warning"}], "success": true}