{
  "contract": "0x992d6d699d3f7c627a9be1a5f6020a05ecb86200",
  "tool": "mythril",
  "start": 1563585313.0307205,
  "end": 1563585479.4310575,
  "duration": 166.4003369808197,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 5082,
        "code": "old\n        dutchAuctio",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_EtherScrolls_4: 0x0\nstorage_3: 0x0\ncaller: 0x0\nstorage_keccac_calldata_EtherScrolls_32_+_4: 0x0\ncalldata_EtherScrolls_0: 0x13916c2e00000000000000000000000000000000000000000000000000000000\ncalldatasize_EtherScrolls: 0x4\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/21/0x992d6d699d3f7c627a9be1a5f6020a05ecb86200.sol",
        "function": "bidOnCraftAuction(uint256,uint256)",
        "lineno": 380,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 5113,
        "code": "cardIdToBidOn);\n        spa",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_3: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_EtherScrolls_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_EtherScrolls_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncaller: 0x0\nstorage_keccac_calldata_EtherScrolls_32_+_4: 0x0\ncalldata_EtherScrolls_0: 0x13916c2e00000000000000000000000000000000000000000000000000000000\ncalldatasize_EtherScrolls: 0x4\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/21/0x992d6d699d3f7c627a9be1a5f6020a05ecb86200.sol",
        "function": "bidOnCraftAuction(uint256,uint256)",
        "lineno": 381,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 5394,
        "code": "      _startCraftRecovery(rightCard);\n        _startCraftRecovery(leftCard);",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/21/0x992d6d699d3f7c627a9be1a5f6020a05ecb86200.sol",
        "function": "bidOnCraftAuction(uint256,uint256)",
        "lineno": 389,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 5622,
        "code": " return address(dutchAuctionToCraft);\n    }\n\n  ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/21/0x992d6d699d3f7c627a9be1a5f6020a05ecb86200.sol",
        "function": "_function_0x17a432f5",
        "lineno": 346,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 6366,
        "code": "ionAddress(address _address) p",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/21/0x992d6d699d3f7c627a9be1a5f6020a05ecb86200.sol",
        "function": "withdraw()",
        "lineno": 252,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 8069,
        "code": "uction(_cardNumber) == false);\n        require(dutchAuctio",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/21/0x992d6d699d3f7c627a9be1a5f6020a05ecb86200.sol",
        "function": "cancelCraftingAuction(uint256)",
        "lineno": 281,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 18069,
        "code": "        i++;\n   ",
        "debug": "block_number: 0x0\nstorage_16: 0xf9\nstorage_1: 0x0\nstorage_0: 0xffffffffffffffffffffffffffffffffffffffff00\ncaller: 0x0\ncalldata_EtherScrolls_0: 0xa075a3200000000000000000000000000000000000000000000000000000000\ncalldatasize_EtherScrolls: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer underflow exists in the function `spawnNewZeroCard()`.\nThe subtraction may result in a value < 0.",
        "filename": "/unique_chucks/21/0x992d6d699d3f7c627a9be1a5f6020a05ecb86200.sol",
        "function": "spawnNewZeroCard()",
        "lineno": 476,
        "title": "Integer Underflow",
        "type": "Warning"
      },
      {
        "address": 18082,
        "code": " lastBaseIndex);\n            i++;\n            base2 = u",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_16: 0xf9\nstorage_1: 0x0\nstorage_0: 0xffffffffffffffffffffffffffffffffffffffff00\ncaller: 0x0\ncalldata_EtherScrolls_0: 0xa075a3200000000000000000000000000000000000000000000000000000000\ncalldatasize_EtherScrolls: 0x4\nstorage_12: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/21/0x992d6d699d3f7c627a9be1a5f6020a05ecb86200.sol",
        "function": "spawnNewZeroCard()",
        "lineno": 475,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 18098,
        "code": "      i++;\n     ",
        "debug": "block_number: 0x1\nstorage_12: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_16: 0xf9\nstorage_1: 0x0\nstorage_0: 0xffffffffffffffffffffffffffffffffffffffff00\ncaller: 0x0\ncalldata_EtherScrolls_0: 0xa075a3200000000000000000000000000000000000000000000000000000000\ncalldatasize_EtherScrolls: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer underflow exists in the function `spawnNewZeroCard()`.\nThe subtraction may result in a value < 0.",
        "filename": "/unique_chucks/21/0x992d6d699d3f7c627a9be1a5f6020a05ecb86200.sol",
        "function": "spawnNewZeroCard()",
        "lineno": 478,
        "title": "Integer Underflow",
        "type": "Warning"
      }
    ],
    "success": true
  }
}