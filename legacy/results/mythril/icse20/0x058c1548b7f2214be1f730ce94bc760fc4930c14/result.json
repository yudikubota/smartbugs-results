{
  "contract": "0x058c1548b7f2214be1f730ce94bc760fc4930c14",
  "tool": "mythril",
  "start": 1563782545.205049,
  "end": 1563783117.4878507,
  "duration": 572.2828016281128,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 420,
        "code": "guess) public payable {\n        require(isActive);\n        require(msg.value >= 0.33 ether);\n        require(bytes(guess).length > 0);\n        \n        Guess newGuess;\n        newGuess.player = msg.sender;\n        newGuess.guess = guess;\n        PreviousGuesses.push(newGuess);\n        \n        if (keccak256(guess) == answerHash) {\n            Answer = guess;\n            isActive = false;\n            msg.sender.transfer(this.balance);\n        }\n    }\n    \n    function end(string _answe",
        "debug": "calldata_GalaxyQuest_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_GalaxyQuest_0: 0x718e630200000000000000000000000000000000000000000000000000000000\ncalldatasize_GalaxyQuest: 0x4\n",
        "description": "A possible integer overflow exists in the function `play(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/48/0x058c1548b7f2214be1f730ce94bc760fc4930c14.sol",
        "function": "play(string)",
        "lineno": 22,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 525,
        "code": "        require(msg.sender == riddler);\n        Answer = _answer;\n        isActive = false;\n        msg.sender.transfer(this.balance);\n    }\n}",
        "debug": "calldata_GalaxyQuest_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_GalaxyQuest_0: 0x900a974e00000000000000000000000000000000000000000000000000000000\ncalldatasize_GalaxyQuest: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `end(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/48/0x058c1548b7f2214be1f730ce94bc760fc4930c14.sol",
        "function": "end(string)",
        "lineno": 40,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1299,
        "code": ";\n\ncontract Galaxy",
        "debug": "storage_2: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_GalaxyQuest_4 + calldata_GalaxyQuest_4: 0x4\nstorage_1: 0x7fc0\ncallvalue: 0x494654067e10000\ncalldata_GalaxyQuest_0: 0x718e630200000000000000000000000000000000000000000000000000000000\ncalldatasize_GalaxyQuest: 0x4\n",
        "description": "A possible integer overflow exists in the function `play(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/48/0x058c1548b7f2214be1f730ce94bc760fc4930c14.sol",
        "function": "play(string)",
        "lineno": 1,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1999,
        "code": "[] public PreviousGuesses;\n   ",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_GalaxyQuest_4: 0x0\nstorage_2: 0x0\ncalldata_GalaxyQuest_0: 0xa3e18b4f00000000000000000000000000000000000000000000000000000000\ncalldatasize_GalaxyQuest: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/48/0x058c1548b7f2214be1f730ce94bc760fc4930c14.sol",
        "function": "_function_0xa3e18b4f",
        "lineno": 6,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2288,
        "code": "ntract GalaxyQuest {\n    bytes32 private answerHash;\n    bool private isActive;\n    Guess[] public PreviousGuesses;\n    string public Riddle;\n    string public Answer;\n\n    struct Guess { address player; string guess; }\n    address private riddler;\n\n    function () payable public {}\n    \n    constructor (string _riddle, string _answer) public payable {\n        riddler = msg.sender;\n        Riddle = _riddle;\n        answerHash = keccak256(_answer);\n        isActive = true;\n    }\n\n    function play(string guess) public payable {\n        require(isActive);\n        require(msg.value >= 0.33 ether);\n        require(bytes(guess).length > 0);\n        \n        Guess newGuess;\n        newGuess.player = msg.sender;\n        newGuess.guess = guess;\n        PreviousGuesses.push(newGuess);\n        \n        if (keccak256(guess) == answerHash) {\n            Answer = guess;\n            isActive = false;\n            msg.sender.transfer(this.balance);\n        }\n    }\n    \n    function end(string _answer) public {\n        require(msg.sender == riddler);\n        Answer = _answer;\n        isActive = false;\n        msg.sender.transfer(this.balance);\n    }\n}",
        "debug": "calldata_GalaxyQuest_4 + calldata_GalaxyQuest_4: 0x8000000000000000000000000000000000000000000000000000000000000000\nstorage_5: 0x0\ncaller: 0x0\ncalldata_GalaxyQuest_0: 0x900a974e00000000000000000000000000000000000000000000000000000000\ncalldatasize_GalaxyQuest: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `end(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/48/0x058c1548b7f2214be1f730ce94bc760fc4930c14.sol",
        "function": "end(string)",
        "lineno": 3,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2302,
        "code": "ntract GalaxyQuest {\n    bytes32 private answerHash;\n    bool private isActive;\n    Guess[] public PreviousGuesses;\n    string public Riddle;\n    string public Answer;\n\n    struct Guess { address player; string guess; }\n    address private riddler;\n\n    function () payable public {}\n    \n    constructor (string _riddle, string _answer) public payable {\n        riddler = msg.sender;\n        Riddle = _riddle;\n        answerHash = keccak256(_answer);\n        isActive = true;\n    }\n\n    function play(string guess) public payable {\n        require(isActive);\n        require(msg.value >= 0.33 ether);\n        require(bytes(guess).length > 0);\n        \n        Guess newGuess;\n        newGuess.player = msg.sender;\n        newGuess.guess = guess;\n        PreviousGuesses.push(newGuess);\n        \n        if (keccak256(guess) == answerHash) {\n            Answer = guess;\n            isActive = false;\n            msg.sender.transfer(this.balance);\n        }\n    }\n    \n    function end(string _answer) public {\n        require(msg.sender == riddler);\n        Answer = _answer;\n        isActive = false;\n        msg.sender.transfer(this.balance);\n    }\n}",
        "debug": "calldata_GalaxyQuest_4 + calldata_GalaxyQuest_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\nstorage_5: 0x0\ncaller: 0x0\ncalldata_GalaxyQuest_0: 0x900a974e00000000000000000000000000000000000000000000000000000000\ncalldatasize_GalaxyQuest: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `end(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/48/0x058c1548b7f2214be1f730ce94bc760fc4930c14.sol",
        "function": "end(string)",
        "lineno": 3,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2387,
        "code": "ntract GalaxyQuest {\n    bytes32 private answerHash;\n    bool private isActive;\n    Guess[] public PreviousGuesses;\n    string public Riddle;\n    string public Answer;\n\n    struct Guess { address player; string guess; }\n    address private riddler;\n\n    function () payable public {}\n    \n    constructor (string _riddle, string _answer) public payable {\n        riddler = msg.sender;\n        Riddle = _riddle;\n        answerHash = keccak256(_answer);\n        isActive = true;\n    }\n\n    function play(string guess) public payable {\n        require(isActive);\n        require(msg.value >= 0.33 ether);\n        require(bytes(guess).length > 0);\n        \n        Guess newGuess;\n        newGuess.player = msg.sender;\n        newGuess.guess = guess;\n        PreviousGuesses.push(newGuess);\n        \n        if (keccak256(guess) == answerHash) {\n            Answer = guess;\n            isActive = false;\n            msg.sender.transfer(this.balance);\n        }\n    }\n    \n    function end(string _answer) public {\n        require(msg.sender == riddler);\n        Answer = _answer;\n        isActive = false;\n        msg.sender.transfer(this.balance);\n    }\n}",
        "debug": "storage_1 +\n29102676481673041902632991033461445430619272659676223336789171408008386403022 +\n2*storage_2: 0x4bff3b0000000000000000000000041fb2fd9c128200080000000000000000c3\ncalldata_GalaxyQuest_4 + calldata_GalaxyQuest_4: 0x10\nkeccac_1_+\n29102676481673041902632991033461445430619272659676223336789171408008386403022_+\n2*storage_2: 0xffaffccffffffffffffffffffffbffc6800800480023ffdffffffffffffffffc\nstorage_1: 0x208c000007f00\ncallvalue: 0x494654067e10000\ncalldata_GalaxyQuest_0: 0x718e630200000000000000000000000000000000000000000000000000000000\ncalldatasize_GalaxyQuest: 0x4\n",
        "description": "A possible integer overflow exists in the function `play(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/48/0x058c1548b7f2214be1f730ce94bc760fc4930c14.sol",
        "function": "play(string)",
        "lineno": 3,
        "title": "Integer Overflow ",
        "type": "Warning"
      }
    ],
    "success": true
  }
}