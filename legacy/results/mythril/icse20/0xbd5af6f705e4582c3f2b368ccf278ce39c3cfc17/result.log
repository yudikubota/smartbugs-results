{"error": null, "issues": [{"address": 703, "code": "from, Acc.Balance, _amount); // cash o", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/30/0xbd5af6f705e4582c3f2b368ccf278ce39c3cfc17.sol", "function": "_function_0x29377d61", "lineno": 505, "title": "Message call to external contract", "type": "Informational"}, {"address": 703, "code": "from, Acc.Balance, _amount); // cash o", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2269\nCall at address: 2075\nCall at address: 1820\n", "filename": "/unique_chucks/30/0xbd5af6f705e4582c3f2b368ccf278ce39c3cfc17.sol", "function": "_function_0x29377d61", "lineno": 505, "title": "Multiple Calls", "type": "Information"}, {"address": 703, "code": "from, Acc.Balance, _amount); // cash o", "debug": "", "description": "A possible transaction order independence vulnerability exists in function _function_0x29377d61. The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/30/0xbd5af6f705e4582c3f2b368ccf278ce39c3cfc17.sol", "function": "_function_0x29377d61", "lineno": 505, "title": "Transaction order dependence", "type": "Warning"}, {"address": 815, "code": "mount)) {\n", "debug": "The exception is triggered under the following conditions:\n\ncalldata_FlightDelayLedgerInterface_4: 0x80\nreturndatasize: 0x20\nretval_703: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_FlightDelayLedgerInterface_0: 0x29377d6100000000000000000000000000000000000000000000000000000000\ncalldatasize_FlightDelayLedgerInterface: 0x4\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/30/0xbd5af6f705e4582c3f2b368ccf278ce39c3cfc17.sol", "function": "_function_0x29377d61", "lineno": 507, "title": "Exception state", "type": "Informational"}, {"address": 1272, "code": "und + acc_Payout + acc_Balance + acc_R", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/30/0xbd5af6f705e4582c3f2b368ccf278ce39c3cfc17.sol", "function": "_function_0x50bed043", "lineno": 515, "title": "Message call to external contract", "type": "Informational"}, {"address": 1272, "code": "und + acc_Payout + acc_Balance + acc_R", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2075\nCall at address: 1820\n", "filename": "/unique_chucks/30/0xbd5af6f705e4582c3f2b368ccf278ce39c3cfc17.sol", "function": "_function_0x50bed043", "lineno": 515, "title": "Multiple Calls", "type": "Information"}, {"address": 1272, "code": "und + acc_Payout + acc_Balance + acc_R", "debug": "", "description": "A possible transaction order independence vulnerability exists in function _function_0x50bed043. The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/30/0xbd5af6f705e4582c3f2b368ccf278ce39c3cfc17.sol", "function": "_function_0x50bed043", "lineno": 515, "title": "Transaction order dependence", "type": "Warning"}, {"address": 1424, "code": "sg.sender));", "debug": "The exception is triggered under the following conditions:\n\ncalldata_FlightDelayLedgerInterface_32 + 4: 0x80\nbalance_at_1461501637330902918203684832716283019655932542975 & 0: 0x0\ncalldata_FlightDelayLedgerInterface_32 + 36: 0x0\nreturndatasize: 0x20\nretval_1272: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_FlightDelayLedgerInterface_0: 0x50bed04300000000000000000000000000000000000000000000000000000000\ncalldatasize_FlightDelayLedgerInterface: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/30/0xbd5af6f705e4582c3f2b368ccf278ce39c3cfc17.sol", "function": "_function_0x50bed043", "lineno": 518, "title": "Exception state", "type": "Informational"}, {"address": 1820, "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/30/0xbd5af6f705e4582c3f2b368ccf278ce39c3cfc17.sol", "function": "fund()", "lineno": 527, "title": "Message call to external contract", "type": "Informational"}, {"address": 1820, "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2269\nCall at address: 2075\n", "filename": "/unique_chucks/30/0xbd5af6f705e4582c3f2b368ccf278ce39c3cfc17.sol", "function": "fund()", "lineno": 527, "title": "Multiple Calls", "type": "Information"}, {"address": 1820, "debug": "", "description": "A possible transaction order independence vulnerability exists in function fund(). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/30/0xbd5af6f705e4582c3f2b368ccf278ce39c3cfc17.sol", "function": "fund()", "lineno": 527, "title": "Transaction order dependence", "type": "Warning"}, {"address": 1898, "debug": "The exception is triggered under the following conditions:\n\ncallvalue: 0x0\nretval_1820: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nreturndatasize: 0x20\nretval_2499: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_FlightDelayLedgerInterface_0: 0xb60d428800000000000000000000000000000000000000000000000000000000\ncalldatasize_FlightDelayLedgerInterface: 0x4\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/30/0xbd5af6f705e4582c3f2b368ccf278ce39c3cfc17.sol", "function": "fund()", "lineno": 527, "title": "Exception state", "type": "Informational"}, {"address": 1972, "debug": "The exception is triggered under the following conditions:\n\ncalldata_FlightDelayLedgerInterface_4: 0x80\ncalldata_FlightDelayLedgerInterface_32 + 36: 0x1\nreturndatasize: 0x20\nretval_1820: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_FlightDelayLedgerInterface_0: 0xb5675ee400000000000000000000000000000000000000000000000000000000\ncalldatasize_FlightDelayLedgerInterface: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/30/0xbd5af6f705e4582c3f2b368ccf278ce39c3cfc17.sol", "function": "_function_0xb5675ee4", "lineno": 527, "title": "Exception state", "type": "Informational"}, {"address": 2075, "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/30/0xbd5af6f705e4582c3f2b368ccf278ce39c3cfc17.sol", "function": "fund()", "lineno": 527, "title": "Message call to external contract", "type": "Informational"}, {"address": 2075, "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2269\n", "filename": "/unique_chucks/30/0xbd5af6f705e4582c3f2b368ccf278ce39c3cfc17.sol", "function": "fund()", "lineno": 527, "title": "Multiple Calls", "type": "Information"}, {"address": 2075, "debug": "", "description": "A possible transaction order independence vulnerability exists in function fund(). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/30/0xbd5af6f705e4582c3f2b368ccf278ce39c3cfc17.sol", "function": "fund()", "lineno": 527, "title": "Transaction order dependence", "type": "Warning"}, {"address": 2169, "debug": "The exception is triggered under the following conditions:\n\ncalldata_FlightDelayLedgerInterface_32 + 4: 0x6\ncalldata_FlightDelayLedgerInterface_4: 0x0\nretval_2075: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_FlightDelayLedgerInterface_32 + 36: 0x1\nreturndatasize: 0x20\nretval_1820: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_FlightDelayLedgerInterface_0: 0xb5675ee400000000000000000000000000000000000000000000000000000000\ncalldatasize_FlightDelayLedgerInterface: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/30/0xbd5af6f705e4582c3f2b368ccf278ce39c3cfc17.sol", "function": "_function_0xb5675ee4", "lineno": 527, "title": "Exception state", "type": "Informational"}, {"address": 2269, "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/30/0xbd5af6f705e4582c3f2b368ccf278ce39c3cfc17.sol", "function": "fund()", "lineno": 527, "title": "Message call to external contract", "type": "Informational"}, {"address": 2269, "debug": "", "description": "A possible transaction order independence vulnerability exists in function fund(). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/30/0xbd5af6f705e4582c3f2b368ccf278ce39c3cfc17.sol", "function": "fund()", "lineno": 527, "title": "Transaction order dependence", "type": "Warning"}, {"address": 2499, "code": "C.checkPermission(102, msg.sender));\n\n", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/30/0xbd5af6f705e4582c3f2b368ccf278ce39c3cfc17.sol", "function": "fund()", "lineno": 497, "title": "Message call to external contract", "type": "Informational"}, {"address": 2499, "code": "C.checkPermission(102, msg.sender));\n\n", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2269\nCall at address: 2075\nCall at address: 1820\n", "filename": "/unique_chucks/30/0xbd5af6f705e4582c3f2b368ccf278ce39c3cfc17.sol", "function": "fund()", "lineno": 497, "title": "Multiple Calls", "type": "Information"}, {"address": 2499, "code": "C.checkPermission(102, msg.sender));\n\n", "debug": "", "description": "A possible transaction order independence vulnerability exists in function fund(). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/30/0xbd5af6f705e4582c3f2b368ccf278ce39c3cfc17.sol", "function": "fund()", "lineno": 497, "title": "Transaction order dependence", "type": "Warning"}, {"address": 2881, "code": "d(102, \"FD.Owner\");\n\n        FD_AC.setPermissionById(103, \"FD.Fu", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/30/0xbd5af6f705e4582c3f2b368ccf278ce39c3cfc17.sol", "function": "setContracts()", "lineno": 464, "title": "State change after external call", "type": "Warning"}, {"address": 3074, "code": "   FD_AC.setPermissionById(103, \"FD.Underwri", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/30/0xbd5af6f705e4582c3f2b368ccf278ce39c3cfc17.sol", "function": "setContracts()", "lineno": 467, "title": "Message call to external contract", "type": "Informational"}, {"address": 6274, "code": " setPermissionById(uin", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/30/0xbd5af6f705e4582c3f2b368ccf278ce39c3cfc17.sol", "function": "setContracts()", "lineno": 162, "title": "Message call to external contract", "type": "Informational"}, {"address": 6274, "code": " setPermissionById(uin", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3074\nCall at address: 6274\n", "filename": "/unique_chucks/30/0xbd5af6f705e4582c3f2b368ccf278ce39c3cfc17.sol", "function": "setContracts()", "lineno": 162, "title": "Multiple Calls", "type": "Information"}], "success": true}