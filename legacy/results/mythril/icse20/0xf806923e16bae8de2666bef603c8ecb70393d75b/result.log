{"error": null, "issues": [{"address": 579, "code": " in `_locale`.\n     */\n    function description(string _locale) public view returns (string) {\n        ret", "debug": "calldata_Template_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_Template_0: 0x5b43bc9900000000000000000000000000000000000000000000000000000000\ncalldatasize_Template: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `name(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/31/0xf806923e16bae8de2666bef603c8ecb70393d75b.sol", "function": "name(string)", "lineno": 236, "title": "Integer Overflow ", "type": "Warning"}, {"address": 591, "code": " in `_locale`.\n     */\n    function description(string _locale) public view returns (string) {\n        ret", "debug": "calldata_Template_4 + calldata_Template_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8\ncalldata_Template_0: 0x5b43bc9900000000000000000000000000000000000000000000000000000000\ncalldatasize_Template: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `name(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/31/0xf806923e16bae8de2666bef603c8ecb70393d75b.sol", "function": "name(string)", "lineno": 236, "title": "Integer Overflow ", "type": "Warning"}, {"address": 600, "code": " in `_locale`.\n     */\n    function description(string _locale) public view returns (string) {\n        ret", "debug": "calldata_Template_4 + calldata_Template_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc1\ncalldata_Template_0: 0x5b43bc9900000000000000000000000000000000000000000000000000000000\ncalldatasize_Template: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `name(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/31/0xf806923e16bae8de2666bef603c8ecb70393d75b.sol", "function": "name(string)", "lineno": 236, "title": "Integer Overflow ", "type": "Warning"}, {"address": 606, "code": " in `_locale`.\n     */\n    function description(string _locale) public view returns (string) {\n        ret", "debug": "calldata_Template_4 + calldata_Template_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff41\ncalldata_Template_0: 0x5b43bc9900000000000000000000000000000000000000000000000000000000\ncalldatasize_Template: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `name(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/31/0xf806923e16bae8de2666bef603c8ecb70393d75b.sol", "function": "name(string)", "lineno": 236, "title": "Integer Overflow ", "type": "Warning"}, {"address": 792, "code": "ontractAddress := create(0, add(calldata, 0x20), mload(calldata))\n        }\n        if (contractAddress == address(0)) {\n            revert(\"Cannot instantiate contract\");\n        } else {\n            Contract c = Contract(contractAddress);\n            // InterfaceId_ERC165\n            require(c.supportsInterface(0x01ffc9a7));\n            // InterfaceId_Contract\n            require(c.supportsInterface(0x6125ede5));\n\n            if (price > 0) {\n                require(msg.value == price);\n                beneficiary.transfer(msg.value);\n            }\n            emit Instantiated(msg.sender, contractAddress);\n        }\n    }\n}\n\n\n/**\n * @title Registry\n * @notice Registry maintains Contracts by version.\n */\ncontract Registry is Ownable {\n    bool opened;\n    string[] identifiers;\n    mapping(string => address) registrantOfIdentifier;\n    mapping(string => uint[]) versionsOfIdentifier;\n    mapping(s", "debug": "calldata_Template_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_Template_0: 0x6535b4a500000000000000000000000000000000000000000000000000000000\ncalldatasize_Template: 0x4\n", "description": "A possible integer overflow exists in the function `instantiate(bytes,bytes)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/31/0xf806923e16bae8de2666bef603c8ecb70393d75b.sol", "function": "instantiate(bytes,bytes)", "lineno": 262, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1159, "code": "Name to set\n     * @param _description Description to set\n     */\n    function setNameAndDescription(string _locale, str", "debug": "calldata_Template_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_Template_0: 0x8825519900000000000000000000000000000000000000000000000000000000\ncalldatasize_Template: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `description(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/31/0xf806923e16bae8de2666bef603c8ecb70393d75b.sol", "function": "description(string)", "lineno": 244, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1171, "code": "Name to set\n     * @param _description Description to set\n     */\n    function setNameAndDescription(string _locale, str", "debug": "calldata_Template_4 + calldata_Template_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8\ncalldata_Template_0: 0x8825519900000000000000000000000000000000000000000000000000000000\ncalldatasize_Template: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `description(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/31/0xf806923e16bae8de2666bef603c8ecb70393d75b.sol", "function": "description(string)", "lineno": 244, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1180, "code": "Name to set\n     * @param _description Description to set\n     */\n    function setNameAndDescription(string _locale, str", "debug": "calldata_Template_4 + calldata_Template_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc1\ncalldata_Template_0: 0x8825519900000000000000000000000000000000000000000000000000000000\ncalldatasize_Template: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `description(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/31/0xf806923e16bae8de2666bef603c8ecb70393d75b.sol", "function": "description(string)", "lineno": 244, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1186, "code": "Name to set\n     * @param _description Description to set\n     */\n    function setNameAndDescription(string _locale, str", "debug": "calldata_Template_4 + calldata_Template_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff41\ncalldata_Template_0: 0x8825519900000000000000000000000000000000000000000000000000000000\ncalldatasize_Template: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `description(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/31/0xf806923e16bae8de2666bef603c8ecb70393d75b.sol", "function": "description(string)", "lineno": 244, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1515, "code": "as first argument for the newly created `Contract`.\n     * @param _bytecode Bytecode corresponding to `bytecodeHash`\n     * @param _args If arguments where passed to this function, those will be append", "debug": "calldata_Template_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_Template_0: 0xb649c91300000000000000000000000000000000000000000000000000000000\ncalldatasize_Template: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `setNameAndDescription(string,string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/31/0xf806923e16bae8de2666bef603c8ecb70393d75b.sol", "function": "setNameAndDescription(string,string,string)", "lineno": 253, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1527, "code": "as first argument for the newly created `Contract`.\n     * @param _bytecode Bytecode corresponding to `bytecodeHash`\n     * @param _args If arguments where passed to this function, those will be append", "debug": "calldata_Template_4 + calldata_Template_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8\ncalldata_Template_0: 0xb649c91300000000000000000000000000000000000000000000000000000000\ncalldatasize_Template: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `setNameAndDescription(string,string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/31/0xf806923e16bae8de2666bef603c8ecb70393d75b.sol", "function": "setNameAndDescription(string,string,string)", "lineno": 253, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1536, "code": "as first argument for the newly created `Contract`.\n     * @param _bytecode Bytecode corresponding to `bytecodeHash`\n     * @param _args If arguments where passed to this function, those will be append", "debug": "calldata_Template_4 + calldata_Template_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc1\ncalldata_Template_0: 0xb649c91300000000000000000000000000000000000000000000000000000000\ncalldatasize_Template: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `setNameAndDescription(string,string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/31/0xf806923e16bae8de2666bef603c8ecb70393d75b.sol", "function": "setNameAndDescription(string,string,string)", "lineno": 253, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1542, "code": "as first argument for the newly created `Contract`.\n     * @param _bytecode Bytecode corresponding to `bytecodeHash`\n     * @param _args If arguments where passed to this function, those will be append", "debug": "calldata_Template_4 + calldata_Template_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff41\ncalldata_Template_0: 0xb649c91300000000000000000000000000000000000000000000000000000000\ncalldatasize_Template: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `setNameAndDescription(string,string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/31/0xf806923e16bae8de2666bef603c8ecb70393d75b.sol", "function": "setNameAndDescription(string,string,string)", "lineno": 253, "title": "Integer Overflow ", "type": "Warning"}, {"address": 4824, "code": "   ^ this.bytecodeHash.selector ^ this.price.selector ^ this.beneficiary.selector\n        ^ this.name.selector ^ this.description.selector ^ this.setNameAndDescription.selector\n        ^ this.instantiate.selector\n     */\n    bytes4 public constant InterfaceId_Template = 0xd48445ff;\n\n    mapping(string => string) nameOfLocale;\n    mapping(string => string) descriptionOfLocale;\n    /**\n     * @notice Hash of EVM bytecode to be instantiated.\n     */\n    bytes32 public bytecodeHash;\n    /**\n     * @notice Price to pay when instantiating\n     */\n    uint public price;\n    /**\n     * @notice Address to receive payment\n     */\n    address public beneficiary;\n\n    /**\n     * @notice Logged when a new `Contract` instantiated.\n     */\n    event Instantiated(address indexed creator, address indexed contractAddress);\n\n    /**\n     * @param _bytecodeHash Hash of EVM bytecode\n     * @param _price Price of instantiating in wei\n     * @param _beneficiary Address to transfer _price when instantiating\n     */\n    constructor(\n        bytes32 _bytecodeHash,\n        uint _price,\n        address _beneficiary\n    ) public {\n        bytecodeHash = _bytecodeHash;\n        price = _price;\n        beneficiary = _beneficiary;\n        if (price > 0) {\n            require(beneficiary != address(0));\n        }\n\n        _registerInterface(InterfaceId_Template);\n    }\n\n    /**\n     * @param _locale IETF language tag(https://en.wikipedia.org/wiki/IETF_language_tag)\n     * @return Name in `_locale`.\n     */\n    function name(string _locale) public view returns (string) {\n        return nameOfLocale[_locale];\n    }\n\n    /**\n     * @param _locale IETF language tag(https://en.wikipedia.org/wiki/IETF_language_tag)\n     * @return Description in `_locale`.\n     */\n    function description(string _locale) public view returns (string) {\n        return descriptionOfLocale[_locale];\n    }\n\n    /**\n     * @param _locale IETF language tag(https://en.wikipedia.org/wiki/IETF_language_tag)\n     * @param _name Name to set\n     * @param _description Description to set\n     */\n    function setNameAndDescription(string _locale, string _name, string _description) public onlyOwner {\n        nameOfLocale[_locale] = _name;\n        descriptionOfLocale[_locale] = _description;\n    }\n\n    /**\n     * @notice `msg.sender` is passed as first argument for the newly created `Contract`.\n     * @param _bytecode Bytecode corresponding to `bytecodeHash`\n     * @param _args If arguments where passed to this function, those will be appended to the arguments for `Contract`.\n     * @return Newly created contract account's address\n     */\n    function instantiate(bytes _bytecode, bytes _args) public payable returns (address contractAddress) {\n        require(bytecodeHash == keccak256(_bytecode));\n        bytes memory calldata = abi.encodePacked(_bytecode, _args);\n        assembly {\n            contractAddress := create(0, add(calldata, 0x20), mload(calldata))\n        }\n        if (contractAddress == address(0)) {\n            revert(\"Cannot instantiate contract\");\n        } else {\n            Contract c = Contract(contractAddress);\n            // InterfaceId_ERC165\n            require(c.supportsInterface(0x01ffc9a7));\n            // InterfaceId_Contract\n            require(c.supportsInterface(0x6125ede5));\n\n            if (price > 0) {\n                require(msg.value == price);\n                beneficiary.transfer(msg.value);\n            }\n            emit Instantiated(msg.sender, contractAddress);\n        }\n    }\n}\n\n\n/**\n * @title Registry\n * @notice Registry maintains Contracts by version.\n */\ncontract Registry is Ownable {\n    bool opened;\n    string[] identifiers;\n    mapping(string => address) registrantOfIdentifier;\n    mapping(string => uint[]) versionsOfIdentifier;\n    mapping(stri", "debug": "storage_KECCAC_mem_192 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_Template_4 + calldata_Template_4)) +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_Template_4 + calldata_Template_32 + 4)) +\n32 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_Template_4 + calldata_Template_32 + 36))): 0xbac1c3147749165dd7d1977fffffffffffffffffffffffffffffffffffffffc5\nkeccac_KECCAC_mem_192_+\n32*\nConcat(0,\n_______Extract(255,\n_______________5,\n_______________31_+\n_______________calldata_Template_4_+_calldata_Template_4))_+\n32*\nConcat(0,\n_______Extract(255,\n_______________5,\n_______________31_+\n_______________calldata_Template_4_+_calldata_Template_32_+_4))_+\n32_+\n32*\nConcat(0,\n_______Extract(255,\n_______________5,\n_______________31_+\n_______________calldata_Template_4_+_calldata_Template_32_+_36))): 0xff13e6a7459ae5a4c49c419171c3f89100a371508000000000129200000219e2\ncalldata_Template_4 + calldata_Template_4: 0x1f\nstorage_0: 0x0\ncaller: 0x0\ncalldata_Template_0: 0xb649c91300000000000000000000000000000000000000000000000000000000\ncalldatasize_Template: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `setNameAndDescription(string,string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/31/0xf806923e16bae8de2666bef603c8ecb70393d75b.sol", "function": "setNameAndDescription(string,string,string)", "lineno": 180, "title": "Integer Overflow ", "type": "Warning"}, {"address": 4853, "code": "   ^ this.bytecodeHash.selector ^ this.price.selector ^ this.beneficiary.selector\n        ^ this.name.selector ^ this.description.selector ^ this.setNameAndDescription.selector\n        ^ this.instantiate.selector\n     */\n    bytes4 public constant InterfaceId_Template = 0xd48445ff;\n\n    mapping(string => string) nameOfLocale;\n    mapping(string => string) descriptionOfLocale;\n    /**\n     * @notice Hash of EVM bytecode to be instantiated.\n     */\n    bytes32 public bytecodeHash;\n    /**\n     * @notice Price to pay when instantiating\n     */\n    uint public price;\n    /**\n     * @notice Address to receive payment\n     */\n    address public beneficiary;\n\n    /**\n     * @notice Logged when a new `Contract` instantiated.\n     */\n    event Instantiated(address indexed creator, address indexed contractAddress);\n\n    /**\n     * @param _bytecodeHash Hash of EVM bytecode\n     * @param _price Price of instantiating in wei\n     * @param _beneficiary Address to transfer _price when instantiating\n     */\n    constructor(\n        bytes32 _bytecodeHash,\n        uint _price,\n        address _beneficiary\n    ) public {\n        bytecodeHash = _bytecodeHash;\n        price = _price;\n        beneficiary = _beneficiary;\n        if (price > 0) {\n            require(beneficiary != address(0));\n        }\n\n        _registerInterface(InterfaceId_Template);\n    }\n\n    /**\n     * @param _locale IETF language tag(https://en.wikipedia.org/wiki/IETF_language_tag)\n     * @return Name in `_locale`.\n     */\n    function name(string _locale) public view returns (string) {\n        return nameOfLocale[_locale];\n    }\n\n    /**\n     * @param _locale IETF language tag(https://en.wikipedia.org/wiki/IETF_language_tag)\n     * @return Description in `_locale`.\n     */\n    function description(string _locale) public view returns (string) {\n        return descriptionOfLocale[_locale];\n    }\n\n    /**\n     * @param _locale IETF language tag(https://en.wikipedia.org/wiki/IETF_language_tag)\n     * @param _name Name to set\n     * @param _description Description to set\n     */\n    function setNameAndDescription(string _locale, string _name, string _description) public onlyOwner {\n        nameOfLocale[_locale] = _name;\n        descriptionOfLocale[_locale] = _description;\n    }\n\n    /**\n     * @notice `msg.sender` is passed as first argument for the newly created `Contract`.\n     * @param _bytecode Bytecode corresponding to `bytecodeHash`\n     * @param _args If arguments where passed to this function, those will be appended to the arguments for `Contract`.\n     * @return Newly created contract account's address\n     */\n    function instantiate(bytes _bytecode, bytes _args) public payable returns (address contractAddress) {\n        require(bytecodeHash == keccak256(_bytecode));\n        bytes memory calldata = abi.encodePacked(_bytecode, _args);\n        assembly {\n            contractAddress := create(0, add(calldata, 0x20), mload(calldata))\n        }\n        if (contractAddress == address(0)) {\n            revert(\"Cannot instantiate contract\");\n        } else {\n            Contract c = Contract(contractAddress);\n            // InterfaceId_ERC165\n            require(c.supportsInterface(0x01ffc9a7));\n            // InterfaceId_Contract\n            require(c.supportsInterface(0x6125ede5));\n\n            if (price > 0) {\n                require(msg.value == price);\n                beneficiary.transfer(msg.value);\n            }\n            emit Instantiated(msg.sender, contractAddress);\n        }\n    }\n}\n\n\n/**\n * @title Registry\n * @notice Registry maintains Contracts by version.\n */\ncontract Registry is Ownable {\n    bool opened;\n    string[] identifiers;\n    mapping(string => address) registrantOfIdentifier;\n    mapping(string => uint[]) versionsOfIdentifier;\n    mapping(stri", "debug": "mem_128 +\n32 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_Template_4 + calldata_Template_4)): 0x8000000000000000000000000000000000000000000000000000000000000000\ncalldata_Template_4 + calldata_Template_4: 0x20\nstorage_0: 0x0\ncaller: 0x0\ncalldata_Template_0: 0xb649c91300000000000000000000000000000000000000000000000000000000\ncalldatasize_Template: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `setNameAndDescription(string,string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/31/0xf806923e16bae8de2666bef603c8ecb70393d75b.sol", "function": "setNameAndDescription(string,string,string)", "lineno": 180, "title": "Integer Overflow ", "type": "Warning"}, {"address": 4867, "code": "   ^ this.bytecodeHash.selector ^ this.price.selector ^ this.beneficiary.selector\n        ^ this.name.selector ^ this.description.selector ^ this.setNameAndDescription.selector\n        ^ this.instantiate.selector\n     */\n    bytes4 public constant InterfaceId_Template = 0xd48445ff;\n\n    mapping(string => string) nameOfLocale;\n    mapping(string => string) descriptionOfLocale;\n    /**\n     * @notice Hash of EVM bytecode to be instantiated.\n     */\n    bytes32 public bytecodeHash;\n    /**\n     * @notice Price to pay when instantiating\n     */\n    uint public price;\n    /**\n     * @notice Address to receive payment\n     */\n    address public beneficiary;\n\n    /**\n     * @notice Logged when a new `Contract` instantiated.\n     */\n    event Instantiated(address indexed creator, address indexed contractAddress);\n\n    /**\n     * @param _bytecodeHash Hash of EVM bytecode\n     * @param _price Price of instantiating in wei\n     * @param _beneficiary Address to transfer _price when instantiating\n     */\n    constructor(\n        bytes32 _bytecodeHash,\n        uint _price,\n        address _beneficiary\n    ) public {\n        bytecodeHash = _bytecodeHash;\n        price = _price;\n        beneficiary = _beneficiary;\n        if (price > 0) {\n            require(beneficiary != address(0));\n        }\n\n        _registerInterface(InterfaceId_Template);\n    }\n\n    /**\n     * @param _locale IETF language tag(https://en.wikipedia.org/wiki/IETF_language_tag)\n     * @return Name in `_locale`.\n     */\n    function name(string _locale) public view returns (string) {\n        return nameOfLocale[_locale];\n    }\n\n    /**\n     * @param _locale IETF language tag(https://en.wikipedia.org/wiki/IETF_language_tag)\n     * @return Description in `_locale`.\n     */\n    function description(string _locale) public view returns (string) {\n        return descriptionOfLocale[_locale];\n    }\n\n    /**\n     * @param _locale IETF language tag(https://en.wikipedia.org/wiki/IETF_language_tag)\n     * @param _name Name to set\n     * @param _description Description to set\n     */\n    function setNameAndDescription(string _locale, string _name, string _description) public onlyOwner {\n        nameOfLocale[_locale] = _name;\n        descriptionOfLocale[_locale] = _description;\n    }\n\n    /**\n     * @notice `msg.sender` is passed as first argument for the newly created `Contract`.\n     * @param _bytecode Bytecode corresponding to `bytecodeHash`\n     * @param _args If arguments where passed to this function, those will be appended to the arguments for `Contract`.\n     * @return Newly created contract account's address\n     */\n    function instantiate(bytes _bytecode, bytes _args) public payable returns (address contractAddress) {\n        require(bytecodeHash == keccak256(_bytecode));\n        bytes memory calldata = abi.encodePacked(_bytecode, _args);\n        assembly {\n            contractAddress := create(0, add(calldata, 0x20), mload(calldata))\n        }\n        if (contractAddress == address(0)) {\n            revert(\"Cannot instantiate contract\");\n        } else {\n            Contract c = Contract(contractAddress);\n            // InterfaceId_ERC165\n            require(c.supportsInterface(0x01ffc9a7));\n            // InterfaceId_Contract\n            require(c.supportsInterface(0x6125ede5));\n\n            if (price > 0) {\n                require(msg.value == price);\n                beneficiary.transfer(msg.value);\n            }\n            emit Instantiated(msg.sender, contractAddress);\n        }\n    }\n}\n\n\n/**\n * @title Registry\n * @notice Registry maintains Contracts by version.\n */\ncontract Registry is Ownable {\n    bool opened;\n    string[] identifiers;\n    mapping(string => address) registrantOfIdentifier;\n    mapping(string => uint[]) versionsOfIdentifier;\n    mapping(stri", "debug": "mem_128 +\n32 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_Template_4 + calldata_Template_4)): 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\ncalldata_Template_4 + calldata_Template_4: 0x4\nstorage_0: 0x0\ncaller: 0x0\ncalldata_Template_0: 0xb649c91300000000000000000000000000000000000000000000000000000000\ncalldatasize_Template: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `setNameAndDescription(string,string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/31/0xf806923e16bae8de2666bef603c8ecb70393d75b.sol", "function": "setNameAndDescription(string,string,string)", "lineno": 180, "title": "Integer Overflow ", "type": "Warning"}], "success": true}