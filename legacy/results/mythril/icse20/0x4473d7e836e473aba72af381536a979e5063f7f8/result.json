{
  "contract": "0x4473d7e836e473aba72af381536a979e5063f7f8",
  "tool": "mythril",
  "start": 1563560013.6656177,
  "end": 1563560054.4417179,
  "duration": 40.776100158691406,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 404,
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xbbe416692e208d5616ad4106c4b81bbfb3ce856ce8db85e05d6c8efe6f9e7995\ncallvalue: 0x887cdf158eb81d1dd70dedd66a975bf833a6e8b2011b5de258488ef84f188565\nbalance_at_1461501637330902918203684832716283019655932542975 & 0: 0x0\nstorage_6: 0x1\nstorage_1: 0x0\nstorage_3: 0x0\ncalldata_ERC20_0: 0x3900000000000000000000000000000000000000000000000000000000\ncalldatasize_ERC20: 0x4\n",
        "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/17/0x4473d7e836e473aba72af381536a979e5063f7f8.sol",
        "function": "fallback",
        "lineno": 144,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1091,
        "code": "the kill switch if the sender is the developer or the password is correct.\n    require(msg.sender == developer || sha3(password) == password_hash);\n\n    // Irreversibly activate the kill switch.\n    kill_switch = true;\n  }\n\n  // Withdraws all ETH deposited or tokens purchased by the given user.\n  ",
        "debug": "calldata_ERC20_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_ERC20_0: 0xd4701c3500000000000000000000000000000000000000000000000000000000\ncalldatasize_ERC20: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `activate_kill_switch(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/17/0x4473d7e836e473aba72af381536a979e5063f7f8.sol",
        "function": "activate_kill_switch(string)",
        "lineno": 72,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2097,
        "code": " purchased them.\n    else {\n  ",
        "debug": "",
        "description": "In the function `withdraw(address)` the following predictable state variables are used to determine Ether recipient:\n- block.timestamp\n",
        "filename": "/unique_chucks/17/0x4473d7e836e473aba72af381536a979e5063f7f8.sol",
        "function": "withdraw(address)",
        "lineno": 94,
        "title": "Dependence on predictable environment variable",
        "type": "Warning"
      },
      {
        "address": 2317,
        "code": "thdraw.\n      require(contract",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/17/0x4473d7e836e473aba72af381536a979e5063f7f8.sol",
        "function": "withdraw(address)",
        "lineno": 98,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 2317,
        "code": "thdraw.\n      require(contract",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2866\n",
        "filename": "/unique_chucks/17/0x4473d7e836e473aba72af381536a979e5063f7f8.sol",
        "function": "withdraw(address)",
        "lineno": 98,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 2317,
        "code": "thdraw.\n      require(contract",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function withdraw(address). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/17/0x4473d7e836e473aba72af381536a979e5063f7f8.sol",
        "function": "withdraw(address)",
        "lineno": 98,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 2467,
        "code": "currently held by the contract.\n      contract_eth_value -= ba",
        "debug": "The exception is triggered under the following conditions:\n\nreturndatasize: 0x20\nretval_2317: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_3: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_ERC20_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_1: 0xff00\ncalldata_ERC20_0: 0x51cff8d900000000000000000000000000000000000000000000000000000000\ncalldatasize_ERC20: 0x4\nstorage_2: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/17/0x4473d7e836e473aba72af381536a979e5063f7f8.sol",
        "function": "withdraw(address)",
        "lineno": 102,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2542,
        "code": "ecursive call.\n      balances[user] ",
        "debug": "storage_2: 0xfffffffffffffffffffffffffffffffffffffffffffe\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_ERC20_4: 0x100000000000000000000000000000000000000000000\nreturndatasize: 0x20\nretval_2317: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_3: 0x0\nstorage_1: 0xff00\ncalldata_ERC20_0: 0x51cff8d900000000000000000000000000000000000000000000000000000000\ncalldatasize_ERC20: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer underflow exists in the function `withdraw(address)`.\nThe subtraction may result in a value < 0.",
        "filename": "/unique_chucks/17/0x4473d7e836e473aba72af381536a979e5063f7f8.sol",
        "function": "withdraw(address)",
        "lineno": 104,
        "title": "Integer Underflow",
        "type": "Warning"
      },
      {
        "address": 2548,
        "code": "ecursive call.\n      balances[user] ",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/17/0x4473d7e836e473aba72af381536a979e5063f7f8.sol",
        "function": "withdraw(address)",
        "lineno": 104,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 2616,
        "code": "o_withdraw / 100;\n",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/17/0x4473d7e836e473aba72af381536a979e5063f7f8.sol",
        "function": "withdraw(address)",
        "lineno": 107,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 2866,
        "code": "   require(token.transfer(user, ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/17/0x4473d7e836e473aba72af381536a979e5063f7f8.sol",
        "function": "withdraw(address)",
        "lineno": 111,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 2866,
        "code": "   require(token.transfer(user, ",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function withdraw(address). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/17/0x4473d7e836e473aba72af381536a979e5063f7f8.sol",
        "function": "withdraw(address)",
        "lineno": 111,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 3405,
        "code": " true;\n      }\n  }\n\n  // Allow",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/17/0x4473d7e836e473aba72af381536a979e5063f7f8.sol",
        "function": "received_tokens()",
        "lineno": 66,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 3405,
        "code": " true;\n      }\n  }\n\n  // Allow",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function received_tokens(). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/17/0x4473d7e836e473aba72af381536a979e5063f7f8.sol",
        "function": "received_tokens()",
        "lineno": 66,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 3723,
        "code": "e {\n    // Disallow deposits if",
        "debug": "",
        "description": "In the function `purchase()` the following predictable state variables are used to determine Ether recipient:\n- block.timestamp\n",
        "filename": "/unique_chucks/17/0x4473d7e836e473aba72af381536a979e5063f7f8.sol",
        "function": "purchase()",
        "lineno": 134,
        "title": "Dependence on predictable environment variable",
        "type": "Warning"
      },
      {
        "address": 3723,
        "code": "e {\n    // Disallow deposits if",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/17/0x4473d7e836e473aba72af381536a979e5063f7f8.sol",
        "function": "purchase()",
        "lineno": 134,
        "title": "Message call to external contract",
        "type": "Informational"
      }
    ],
    "success": true
  }
}