{"error": null, "issues": [{"address": 350, "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xed5e330f0f37e95caf809248936cf6e92cb560c18506e73fedfb65fee75bee8f\ncallvalue: 0xac5c365957c20f9af002d04edb7afca532104569f5f8403411f299c0e61b8e8d\nbalance_at_1461501637330902918203684832716283019655932542975 & 0: 0x0\nstorage_4: 0x1\nstorage_1: 0x0\nstorage_3: 0x0\ncalldata_ICOSyndicate_0: 0x2b00000000000000000000000000000000000000000000000000000000\ncalldatasize_ICOSyndicate: 0x4\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/32/0xb3b476df77086b227d480c99b69b08a77631f2cf.sol", "function": "fallback", "lineno": 119, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1951, "code": "if there are no tokens to with", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/32/0xb3b476df77086b227d480c99b69b08a77631f2cf.sol", "function": "withdraw(address)", "lineno": 76, "title": "Message call to external contract", "type": "Informational"}, {"address": 1951, "code": "if there are no tokens to with", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2451\n", "filename": "/unique_chucks/32/0xb3b476df77086b227d480c99b69b08a77631f2cf.sol", "function": "withdraw(address)", "lineno": 76, "title": "Multiple Calls", "type": "Information"}, {"address": 1951, "code": "if there are no tokens to with", "debug": "", "description": "A possible transaction order independence vulnerability exists in function withdraw(address). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/32/0xb3b476df77086b227d480c99b69b08a77631f2cf.sol", "function": "withdraw(address)", "lineno": 76, "title": "Transaction order dependence", "type": "Warning"}, {"address": 2101, "code": " Update the value of tokens currently held by the contract.\n  ", "debug": "The exception is triggered under the following conditions:\n\nreturndatasize: 0x20\nretval_1951: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_ICOSyndicate_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_1: 0xff00\ncalldata_ICOSyndicate_0: 0x51cff8d900000000000000000000000000000000000000000000000000000000\ncalldatasize_ICOSyndicate: 0x4\nstorage_2: 0x0\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/32/0xb3b476df77086b227d480c99b69b08a77631f2cf.sol", "function": "withdraw(address)", "lineno": 80, "title": "Exception state", "type": "Informational"}, {"address": 2176, "code": "rior to sending to prevent recursive", "debug": "storage_2: 0xfffffffffffffffffffffffffffffffffffffffffffe\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_ICOSyndicate_4: 0x100000000000000000000000000000000000000000000\nreturndatasize: 0x20\nretval_1951: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_1: 0xff00\ncalldata_ICOSyndicate_0: 0x51cff8d900000000000000000000000000000000000000000000000000000000\ncalldatasize_ICOSyndicate: 0x4\ncallvalue: 0x0\n", "description": "A possible integer underflow exists in the function `withdraw(address)`.\nThe subtraction may result in a value < 0.", "filename": "/unique_chucks/32/0xb3b476df77086b227d480c99b69b08a77631f2cf.sol", "function": "withdraw(address)", "lineno": 82, "title": "Integer Underflow", "type": "Warning"}, {"address": 2182, "code": "rior to sending to prevent recursive", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/32/0xb3b476df77086b227d480c99b69b08a77631f2cf.sol", "function": "withdraw(address)", "lineno": 82, "title": "State change after external call", "type": "Warning"}, {"address": 2250, "code": "oss of funds.\n    ", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/32/0xb3b476df77086b227d480c99b69b08a77631f2cf.sol", "function": "withdraw(address)", "lineno": 84, "title": "State change after external call", "type": "Warning"}, {"address": 2451, "code": "the crowdsale and rewards the caller, ca", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/32/0xb3b476df77086b227d480c99b69b08a77631f2cf.sol", "function": "withdraw(address)", "lineno": 91, "title": "Message call to external contract", "type": "Informational"}, {"address": 2451, "code": "the crowdsale and rewards the caller, ca", "debug": "", "description": "A possible transaction order independence vulnerability exists in function withdraw(address). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/32/0xb3b476df77086b227d480c99b69b08a77631f2cf.sol", "function": "withdraw(address)", "lineno": 91, "title": "Transaction order dependence", "type": "Warning"}, {"address": 2979, "code": " the contract.\n    function () public", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/32/0xb3b476df77086b227d480c99b69b08a77631f2cf.sol", "function": "buy()", "lineno": 108, "title": "Message call to external contract", "type": "Informational"}, {"address": 2979, "code": " the contract.\n    function () public", "debug": "", "description": "A possible transaction order independence vulnerability exists in function buy(). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/32/0xb3b476df77086b227d480c99b69b08a77631f2cf.sol", "function": "buy()", "lineno": 108, "title": "Transaction order dependence", "type": "Warning"}], "success": true}