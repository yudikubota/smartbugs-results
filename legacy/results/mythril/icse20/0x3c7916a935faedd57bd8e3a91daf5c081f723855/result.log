{"error": null, "issues": [{"address": 568, "code": "esses[i] != address(0));\n      require(_amounts[i] <= balances[msg.sender]);\n      require(_amounts[i] > 0);\n\n      // SafeMath.sub will throw if there is not enough balance.\n      balances[msg.sender] = balances[msg.sender].sub(_amounts[i]);\n      balances[_addresses[i]] = balances[_addresses[i]].add(_amounts[i]);\n      Transfer(msg.sender, _addresses[i], _amounts[i]);\n    }\n    return true;\n  }\n\n    /**\n     * Destroy tokens\n     *\n     * Remove `_value` tokens from the system irreversibly\n     *\n     * @param _value the amount of money to burn\n     */\n    function burn(uint256", "debug": "calldata_TokenRecipient_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_TokenRecipient_0: 0x204009d200000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenRecipient: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `transferForMultiAddresses(address[],uint256[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/46/0x3c7916a935faedd57bd8e3a91daf5c081f723855.sol", "function": "transferForMultiAddresses(address[],uint256[])", "lineno": 178, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2789, "code": "sender].sub", "debug": "The exception is triggered under the following conditions:\n\ncalldata_TokenRecipient_cpy: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_TokenRecipient_4 + calldata_TokenRecipient_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_TokenRecipient_0: 0x204009d200000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenRecipient: 0x4\nmem_128 +\n32 +\n32*calldata_TokenRecipient_4 + calldata_TokenRecipient_4: 0x0\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/46/0x3c7916a935faedd57bd8e3a91daf5c081f723855.sol", "function": "transferForMultiAddresses(address[],uint256[])", "lineno": 183, "title": "Exception state", "type": "Informational"}, {"address": 7981, "code": "urn a - b;\n  }", "debug": "The exception is triggered under the following conditions:\n\ncalldata_TokenRecipient_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_0: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_TokenRecipient_0: 0x42966c6800000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenRecipient: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/46/0x3c7916a935faedd57bd8e3a91daf5c081f723855.sol", "function": "burn(uint256)", "lineno": 25, "title": "Exception state", "type": "Informational"}, {"address": 7999, "code": "   re", "debug": "calldata_TokenRecipient_32 + 36: 0xb135d1e4a0020a903239033aa9b45a69384c906b52a71e0575829626809581fd\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TokenRecipient_32_+_4: 0xa7e6e147bc0ca40011bf9bbaadf7593cb8cc90b17cb7d73775f0d8eb1435e9c1\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TokenRecipient_4: 0xb135d1e4a0020a903239033aa9b45a69384c906b52a71e0575829626809581fd\ncalldata_TokenRecipient_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_TokenRecipient_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenRecipient: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `transferFrom(address,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/46/0x3c7916a935faedd57bd8e3a91daf5c081f723855.sol", "function": "transferFrom(address,address,uint256)", "lineno": 31, "title": "Integer Overflow ", "type": "Warning"}, {"address": 8012, "code": "\n  }\n}\n\n\ncontr", "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TokenRecipient_4: 0x1\ncalldata_TokenRecipient_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_TokenRecipient_0: 0xd73dd62300000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenRecipient: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/46/0x3c7916a935faedd57bd8e3a91daf5c081f723855.sol", "function": "increaseApproval(address,uint256)", "lineno": 31, "title": "Exception state", "type": "Informational"}], "success": true}