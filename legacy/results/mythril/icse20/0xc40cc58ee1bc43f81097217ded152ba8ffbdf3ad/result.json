{
  "contract": "0xc40cc58ee1bc43f81097217ded152ba8ffbdf3ad",
  "tool": "mythril",
  "start": 1563589857.6167767,
  "end": 1563589937.3565552,
  "duration": 79.73977851867676,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 1879,
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/23/0xc40cc58ee1bc43f81097217ded152ba8ffbdf3ad.sol",
        "function": "kill()",
        "lineno": 433,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 1879,
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2716\nCall at address: 2420\nCall at address: 2129\n",
        "filename": "/unique_chucks/23/0xc40cc58ee1bc43f81097217ded152ba8ffbdf3ad.sol",
        "function": "kill()",
        "lineno": 433,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 1879,
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function kill(). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/23/0xc40cc58ee1bc43f81097217ded152ba8ffbdf3ad.sol",
        "function": "kill()",
        "lineno": 433,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 2129,
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/23/0xc40cc58ee1bc43f81097217ded152ba8ffbdf3ad.sol",
        "function": "kill()",
        "lineno": 433,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 2129,
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2716\nCall at address: 2420\n",
        "filename": "/unique_chucks/23/0xc40cc58ee1bc43f81097217ded152ba8ffbdf3ad.sol",
        "function": "kill()",
        "lineno": 433,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 2129,
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function kill(). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/23/0xc40cc58ee1bc43f81097217ded152ba8ffbdf3ad.sol",
        "function": "kill()",
        "lineno": 433,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 2420,
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/23/0xc40cc58ee1bc43f81097217ded152ba8ffbdf3ad.sol",
        "function": "kill()",
        "lineno": 433,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 2420,
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2716\n",
        "filename": "/unique_chucks/23/0xc40cc58ee1bc43f81097217ded152ba8ffbdf3ad.sol",
        "function": "kill()",
        "lineno": 433,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 2420,
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function kill(). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/23/0xc40cc58ee1bc43f81097217ded152ba8ffbdf3ad.sol",
        "function": "kill()",
        "lineno": 433,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 2716,
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/23/0xc40cc58ee1bc43f81097217ded152ba8ffbdf3ad.sol",
        "function": "kill()",
        "lineno": 433,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 2716,
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function kill(). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/23/0xc40cc58ee1bc43f81097217ded152ba8ffbdf3ad.sol",
        "function": "kill()",
        "lineno": 433,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 2988,
        "code": " /// @param _expiration expiration timestamp\n    /// @pa",
        "debug": "",
        "description": "The return value of an external call is not checked. Note that execution continue even if the called contract throws.",
        "filename": "/unique_chucks/23/0xc40cc58ee1bc43f81097217ded152ba8ffbdf3ad.sol",
        "function": "buyNDC(uint256,uint256,uint8,bytes32,bytes32)",
        "lineno": 383,
        "title": "Unchecked CALL return value",
        "type": "Informational"
      },
      {
        "address": 3321,
        "code": "PTprice,\n                  ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/23/0xc40cc58ee1bc43f81097217ded152ba8ffbdf3ad.sol",
        "function": "buyNDC(uint256,uint256,uint8,bytes32,bytes32)",
        "lineno": 387,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 3321,
        "code": "PTprice,\n                  ",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function buyNDC(uint256,uint256,uint8,bytes32,bytes32). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/23/0xc40cc58ee1bc43f81097217ded152ba8ffbdf3ad.sol",
        "function": "buyNDC(uint256,uint256,uint8,bytes32,bytes32)",
        "lineno": 387,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 3743,
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/23/0xc40cc58ee1bc43f81097217ded152ba8ffbdf3ad.sol",
        "function": "withdraw(address)",
        "lineno": 433,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 3743,
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 4000\n",
        "filename": "/unique_chucks/23/0xc40cc58ee1bc43f81097217ded152ba8ffbdf3ad.sol",
        "function": "withdraw(address)",
        "lineno": 433,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 4000,
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/23/0xc40cc58ee1bc43f81097217ded152ba8ffbdf3ad.sol",
        "function": "withdraw(address)",
        "lineno": 433,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 4363,
        "code": "dardToken ptoken = HumanStandardToken(_PTaddress);\n        uint256 ptAmount;\n      ",
        "debug": "",
        "description": "The return value of an external call is not checked. Note that execution continue even if the called contract throws.",
        "filename": "/unique_chucks/23/0xc40cc58ee1bc43f81097217ded152ba8ffbdf3ad.sol",
        "function": "swap(uint256,address,uint256,uint256,uint8,bytes32,bytes32)",
        "lineno": 322,
        "title": "Unchecked CALL return value",
        "type": "Informational"
      },
      {
        "address": 4607,
        "code": "dc.transferFrom(_",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/23/0xc40cc58ee1bc43f81097217ded152ba8ffbdf3ad.sol",
        "function": "swap(uint256,address,uint256,uint256,uint8,bytes32,bytes32)",
        "lineno": 331,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 5638,
        "code": "tokens and ether to owner\n  ",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function withdrawEther(). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/23/0xc40cc58ee1bc43f81097217ded152ba8ffbdf3ad.sol",
        "function": "withdrawEther()",
        "lineno": 425,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 5860,
        "code": " returned amount \n    ///    ",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_1: 0x0\ncalldata_TokenSwap_32 + 36: 0x0\ncalldata_TokenSwap_0: 0x8f4ffcb100000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenSwap: 0x4\nretval_5850: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/23/0xc40cc58ee1bc43f81097217ded152ba8ffbdf3ad.sol",
        "function": "receiveApproval(address,uint256,address,bytes)",
        "lineno": 294,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 6017,
        "code": "ble public { \n        revert(); \n    }\n\n    /// @dev wit",
        "debug": "",
        "description": "The return value of an external call is not checked. Note that execution continue even if the called contract throws.",
        "filename": "/unique_chucks/23/0xc40cc58ee1bc43f81097217ded152ba8ffbdf3ad.sol",
        "function": "buyTPT(uint256,uint256,uint8,bytes32,bytes32)",
        "lineno": 408,
        "title": "Unchecked CALL return value",
        "type": "Informational"
      },
      {
        "address": 6350,
        "code": "ev withdraw token\n    /// @",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/23/0xc40cc58ee1bc43f81097217ded152ba8ffbdf3ad.sol",
        "function": "buyTPT(uint256,uint256,uint8,bytes32,bytes32)",
        "lineno": 417,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 6350,
        "code": "ev withdraw token\n    /// @",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function buyTPT(uint256,uint256,uint8,bytes32,bytes32). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/23/0xc40cc58ee1bc43f81097217ded152ba8ffbdf3ad.sol",
        "function": "buyTPT(uint256,uint256,uint8,bytes32,bytes32)",
        "lineno": 417,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 7213,
        "code": ") int",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_TokenSwap_32 + 4: 0x0\nstorage_3: 0x0\ntimestamp: 0x0\ncalldata_TokenSwap_0: 0xcee7363000000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenSwap: 0x4\ncalldata_TokenSwap_4: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/23/0xc40cc58ee1bc43f81097217ded152ba8ffbdf3ad.sol",
        "function": "buyTPT(uint256,uint256,uint8,bytes32,bytes32)",
        "lineno": 162,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}