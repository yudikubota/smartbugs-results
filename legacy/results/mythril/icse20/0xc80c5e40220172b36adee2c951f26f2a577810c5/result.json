{
  "contract": "0xc80c5e40220172b36adee2c951f26f2a577810c5",
  "tool": "mythril",
  "start": 1563473105.9570541,
  "end": 1563473130.7427502,
  "duration": 24.785696029663086,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 416,
        "code": "urn a - b;\n\t}\n",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_SafeMath_4: 0x0\ncalldata_SafeMath_32 + 4: 0x1\ncalldata_SafeMath_0: 0xa293d1e800000000000000000000000000000000000000000000000000000000\ncalldatasize_SafeMath: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/1/0xc80c5e40220172b36adee2c951f26f2a577810c5.sol",
        "function": "safeSub(uint256,uint256)",
        "lineno": 23,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 440,
        "code": "ion s",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_SafeMath_0: 0xb5931f7c00000000000000000000000000000000000000000000000000000000\ncalldatasize_SafeMath: 0x4\ncalldata_SafeMath_32 + 4: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/1/0xc80c5e40220172b36adee2c951f26f2a577810c5.sol",
        "function": "safeDiv(uint256,uint256)",
        "lineno": 21,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 507,
        "code": "=b);\n",
        "debug": "calldata_SafeMath_4: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncalldata_SafeMath_32 + 4: 0x57f25cd000000000000000000000000000000000000000000000000000000000\ncalldata_SafeMath_0: 0xe6cb901300000000000000000000000000000000000000000000000000000000\ncalldatasize_SafeMath: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `safeAdd(uint256,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/1/0xc80c5e40220172b36adee2c951f26f2a577810c5.sol",
        "function": "safeAdd(uint256,uint256)",
        "lineno": 28,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 532,
        "code": "urn c;\n\t}\n\n}\n/*\n * E",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_SafeMath_4: 0x1\ncalldata_SafeMath_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_SafeMath_0: 0xe6cb901300000000000000000000000000000000000000000000000000000000\ncalldatasize_SafeMath: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/1/0xc80c5e40220172b36adee2c951f26f2a577810c5.sol",
        "function": "safeAdd(uint256,uint256)",
        "lineno": 29,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}