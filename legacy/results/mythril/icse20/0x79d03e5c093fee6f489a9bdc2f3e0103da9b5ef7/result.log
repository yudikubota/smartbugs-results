{"error": null, "issues": [{"address": 1252, "code": "       logoURL = url;\n    }\n}\n\n// Sample constructor args\n// \"0x54686520746f6b656e20666f7220617765736f6d65207065", "debug": "calldata_Token_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_Token_0: 0x818e8cfa00000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `setLogoURL(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/15/0x79d03e5c093fee6f489a9bdc2f3e0103da9b5ef7.sol", "function": "setLogoURL(string)", "lineno": 85, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2563, "code": "\n        if (allowance ", "debug": "calldata_Token_32 + 36: 0xfe51000008ce80008001c1d33616877ffffffffffffff7ffffe10000398d50ac\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_Token_32_+_4: 0xc050fffff320c00020003d81af848540000000000000040000110001bd062022\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xfe51000008ce80008001c1d33616877ffffffffffffff7ffffe10000398d50ac\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_Token_4: 0xfe51000008ce80008001c1d33616877ffffffffffffff7ffffe10000398d50ac\ncalldata_Token_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `transferFrom(address,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/15/0x79d03e5c093fee6f489a9bdc2f3e0103da9b5ef7.sol", "function": "transferFrom(address,address,uint256)", "lineno": 61, "title": "Integer Overflow ", "type": "Warning"}, {"address": 3748, "code": "r, _to, _value);\n      ", "debug": "calldata_Token_32 + 4: 0xc290137095b13347e55005a6dc184559e0489f1233480050d0fb4bba17d34179\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_Token_4: 0x9c9efb7ae5acd378025256a3945f5859076e809243093d9ecae2636c9fd28979\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xc290137095b13347e55005a6dc184559e0489f1233480050d0fb4bba17d34179\ncalldata_Token_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `transfer(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/15/0x79d03e5c093fee6f489a9bdc2f3e0103da9b5ef7.sol", "function": "transfer(address,uint256)", "lineno": 53, "title": "Integer Overflow ", "type": "Warning"}, {"address": 4227, "code": "tract Token {\n\n    uint256 constant private MAX_UINT256 = 2**256 - 1;\n    mapping(address => uint) public balances;\n    mapping(address => mapping(address => uint)) public allowed;\n\n    string public description;\n    uint8 public decimals;\n    string public logoURL;\n    string public name;\n    string public symbol;\n    uint public totalSupply;\n\n    address public creator;\n\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\n    \n    event Created(address creator, uint supply);\n\n    function Token(\n        string _description,\n        string _logoURL,\n        string _name,\n        string _symbol,\n        uint256 _totalSupply\n    ) public\n    {\n        description = _description;\n        logoURL = _logoURL;\n        name = _name;\n        symbol = _symbol;\n        decimals = 18;\n        totalSupply = _totalSupply;\n\n        creator = tx.origin;\n        Created(creator, _totalSupply);\n        balances[creator] = _totalSupply;\n    }\n\n    // Don't let people randomly send ETH to contract\n    function() public payable {\n        revert();\n    }\n\n    function transfer(address _to, uint256 _value) public returns (bool success) {\n        require(balances[msg.sender] >= _value);\n        balances[msg.sender] -= _value;\n        balances[_to] += _value;\n        Transfer(msg.sender, _to, _value);\n        return true;\n    }\n\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\n        uint256 allowance = allowed[_from][msg.sender];\n        require(balances[_from] >= _value && allowance >= _value);\n        balances[_to] += _value;\n        balances[_from] -= _value;\n        if (allowance < MAX_UINT256) {\n            allowed[_from][msg.sender] -= _value;\n        }\n        Transfer(_from, _to, _value);\n        return true;\n    }\n\n    function balanceOf(address _owner) public view returns (uint256 balance) {\n        return balances[_owner];\n    }\n\n    function approve(address _spender, uint256 _value) public returns (bool success) {\n        allowed[msg.sender][_spender] = _value;\n        Approval(msg.sender, _spender, _value);\n        return true;\n    }\n\n    function allowance(address _owner, address _spender) public view returns (uint256 remaining) {\n        return allowed[_owner][_spender];\n    }\n    \n    function setLogoURL(string url) public {\n        require(msg.sender == creator);\n        logoURL = url;\n    }\n}\n\n// Sample constructor args\n// \"0x54686520746f6b656e20666f7220617765736f6d652070656f7", "debug": "calldata_Token_4 + calldata_Token_4: 0x8000000000000000000000000000000000000000000000000000000000000000\nstorage_8: 0x0\ncaller: 0x0\ncalldata_Token_0: 0x818e8cfa00000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `setLogoURL(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/15/0x79d03e5c093fee6f489a9bdc2f3e0103da9b5ef7.sol", "function": "setLogoURL(string)", "lineno": 4, "title": "Integer Overflow ", "type": "Warning"}, {"address": 4241, "code": "tract Token {\n\n    uint256 constant private MAX_UINT256 = 2**256 - 1;\n    mapping(address => uint) public balances;\n    mapping(address => mapping(address => uint)) public allowed;\n\n    string public description;\n    uint8 public decimals;\n    string public logoURL;\n    string public name;\n    string public symbol;\n    uint public totalSupply;\n\n    address public creator;\n\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\n    \n    event Created(address creator, uint supply);\n\n    function Token(\n        string _description,\n        string _logoURL,\n        string _name,\n        string _symbol,\n        uint256 _totalSupply\n    ) public\n    {\n        description = _description;\n        logoURL = _logoURL;\n        name = _name;\n        symbol = _symbol;\n        decimals = 18;\n        totalSupply = _totalSupply;\n\n        creator = tx.origin;\n        Created(creator, _totalSupply);\n        balances[creator] = _totalSupply;\n    }\n\n    // Don't let people randomly send ETH to contract\n    function() public payable {\n        revert();\n    }\n\n    function transfer(address _to, uint256 _value) public returns (bool success) {\n        require(balances[msg.sender] >= _value);\n        balances[msg.sender] -= _value;\n        balances[_to] += _value;\n        Transfer(msg.sender, _to, _value);\n        return true;\n    }\n\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\n        uint256 allowance = allowed[_from][msg.sender];\n        require(balances[_from] >= _value && allowance >= _value);\n        balances[_to] += _value;\n        balances[_from] -= _value;\n        if (allowance < MAX_UINT256) {\n            allowed[_from][msg.sender] -= _value;\n        }\n        Transfer(_from, _to, _value);\n        return true;\n    }\n\n    function balanceOf(address _owner) public view returns (uint256 balance) {\n        return balances[_owner];\n    }\n\n    function approve(address _spender, uint256 _value) public returns (bool success) {\n        allowed[msg.sender][_spender] = _value;\n        Approval(msg.sender, _spender, _value);\n        return true;\n    }\n\n    function allowance(address _owner, address _spender) public view returns (uint256 remaining) {\n        return allowed[_owner][_spender];\n    }\n    \n    function setLogoURL(string url) public {\n        require(msg.sender == creator);\n        logoURL = url;\n    }\n}\n\n// Sample constructor args\n// \"0x54686520746f6b656e20666f7220617765736f6d652070656f7", "debug": "calldata_Token_4 + calldata_Token_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\nstorage_8: 0x0\ncaller: 0x0\ncalldata_Token_0: 0x818e8cfa00000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `setLogoURL(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/15/0x79d03e5c093fee6f489a9bdc2f3e0103da9b5ef7.sol", "function": "setLogoURL(string)", "lineno": 4, "title": "Integer Overflow ", "type": "Warning"}], "success": true}