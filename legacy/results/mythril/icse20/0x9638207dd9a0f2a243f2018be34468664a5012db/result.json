{
  "contract": "0x9638207dd9a0f2a243f2018be34468664a5012db",
  "tool": "mythril",
  "start": 1563741912.9063504,
  "end": 1563742068.6930902,
  "duration": 155.7867398262024,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 794,
        "code": "iodNum - count );\n   ",
        "debug": "timestamp: 0x0\nstorage_1: 0x1\nreturndatasize: 0x20\nretval_1867: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_YeeLockerForYeeTeam_0: 0x8fd6589000000000000000000000000000000000000000000000000000000000\ncalldatasize_YeeLockerForYeeTeam: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer underflow exists in the function `getCurrentAvailableFunds()`.\nThe subtraction may result in a value < 0.",
        "filename": "/unique_chucks/43/0x9638207dd9a0f2a243f2018be34468664a5012db.sol",
        "function": "getCurrentAvailableFunds()",
        "lineno": 260,
        "title": "Integer Underflow",
        "type": "Warning"
      },
      {
        "address": 802,
        "code": "riodNum - count );\n            retur",
        "debug": "The exception is triggered under the following conditions:\n\nreturndatasize: 0x20\nretval_1867: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_YeeLockerForYeeTeam_0: 0x8fd6589000000000000000000000000000000000000000000000000000000000\ncalldatasize_YeeLockerForYeeTeam: 0x4\nstorage_3: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/43/0x9638207dd9a0f2a243f2018be34468664a5012db.sol",
        "function": "getCurrentAvailableFunds()",
        "lineno": 260,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 844,
        "code": "int256 needLock = getNeedLockFunds()",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_3: 0x7ffffffffffffffffffffffffffffffffffffffffffffffff800000802000000\ntimestamp: 0x1000000000000000000000000000000000000000000000000bbbfffffe\nstorage_1: 0x0\nreturndatasize: 0x20\nretval_1867: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_YeeLockerForYeeTeam_0: 0x8fd6589000000000000000000000000000000000000000000000000000000000\ncalldatasize_YeeLockerForYeeTeam: 0x4\nstorage_4: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/43/0x9638207dd9a0f2a243f2018be34468664a5012db.sol",
        "function": "getCurrentAvailableFunds()",
        "lineno": 267,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 1130,
        "code": "kedStart)/unlockPeriod; //if first unloc",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/43/0x9638207dd9a0f2a243f2018be34468664a5012db.sol",
        "function": "unlockCurrentAvailableFunds()",
        "lineno": 255,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 1531,
        "code": "{\n            bool ret =",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/43/0x9638207dd9a0f2a243f2018be34468664a5012db.sol",
        "function": "_balance()",
        "lineno": 247,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 1603,
        "code": "      return needLo",
        "debug": "calldata_YeeLockerForYeeTeam_4: 0x0\ncalldata_YeeLockerForYeeTeam_32 + 4: 0x1\ncalldata_YeeLockerForYeeTeam_0: 0x6986ab8200000000000000000000000000000000000000000000000000000000\ncalldatasize_YeeLockerForYeeTeam: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer underflow exists in the function `getNeedLockFundsFromPeriod(uint256,uint256)`.\nThe subtraction may result in a value < 0.",
        "filename": "/unique_chucks/43/0x9638207dd9a0f2a243f2018be34468664a5012db.sol",
        "function": "getNeedLockFundsFromPeriod(uint256,uint256)",
        "lineno": 283,
        "title": "Integer Underflow",
        "type": "Warning"
      },
      {
        "address": 1611,
        "code": "       return needLock;\n        }\n",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_YeeLockerForYeeTeam_0: 0x6986ab8200000000000000000000000000000000000000000000000000000000\ncalldatasize_YeeLockerForYeeTeam: 0x4\nstorage_3: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/43/0x9638207dd9a0f2a243f2018be34468664a5012db.sol",
        "function": "getNeedLockFundsFromPeriod(uint256,uint256)",
        "lineno": 283,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 1653,
        "code": "der; \n        uint256 base = 1000000",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_3: 0x7ffffffffffffffffffffffffffffffffffffffffffffffff800000802000000\ncalldata_YeeLockerForYeeTeam_4: 0x1000000000000000000000000000000000000000000000000bbbfffffe\ncalldata_YeeLockerForYeeTeam_32 + 4: 0x0\ncalldata_YeeLockerForYeeTeam_0: 0x6986ab8200000000000000000000000000000000000000000000000000000000\ncalldatasize_YeeLockerForYeeTeam: 0x4\nstorage_4: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/43/0x9638207dd9a0f2a243f2018be34468664a5012db.sol",
        "function": "getNeedLockFundsFromPeriod(uint256,uint256)",
        "lineno": 290,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 1867,
        "code": "Time, uint256 startTime)",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/43/0x9638207dd9a0f2a243f2018be34468664a5012db.sol",
        "function": "getCurrentAvailableFunds()",
        "lineno": 276,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 1867,
        "code": "Time, uint256 startTime)",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1130\nCall at address: 1130\n",
        "filename": "/unique_chucks/43/0x9638207dd9a0f2a243f2018be34468664a5012db.sol",
        "function": "unlockCurrentAvailableFunds()",
        "lineno": 276,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 2271,
        "code": "eeToken.balanceOf",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/43/0x9638207dd9a0f2a243f2018be34468664a5012db.sol",
        "function": "_unlockOther(address)",
        "lineno": 239,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 2271,
        "code": "eeToken.balanceOf",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2547\n",
        "filename": "/unique_chucks/43/0x9638207dd9a0f2a243f2018be34468664a5012db.sol",
        "function": "_unlockOther(address)",
        "lineno": 239,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 2547,
        "code": "ublic returns(bool result){\n  ",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/43/0x9638207dd9a0f2a243f2018be34468664a5012db.sol",
        "function": "_unlockOther(address)",
        "lineno": 242,
        "title": "Message call to external contract",
        "type": "Warning"
      }
    ],
    "success": true
  }
}