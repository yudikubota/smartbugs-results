{
  "contract": "0x3b96990a8ef293cdd37c8e1ad3d210a0166f40e1",
  "tool": "mythril",
  "start": 1563821827.3731186,
  "end": 1563821856.8247192,
  "duration": 29.451600551605225,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 739,
        "code": " }\n\n    function die() public onlyOwner {\n      selfdestruct(msg.sender);\n    }\n}",
        "debug": "calldata_ZipToken_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_ZipToken_0: 0x4bd09c2a00000000000000000000000000000000000000000000000000000000\ncalldatasize_ZipToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `_function_0x4bd09c2a`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/31/0x3b96990a8ef293cdd37c8e1ad3d210a0166f40e1.sol",
        "function": "_function_0x4bd09c2a",
        "lineno": 363,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 6673,
        "code": " @tit",
        "debug": "calldata_ZipToken_32 + 36: 0xfe51000008ce80008001c1d33616877ffffffffffffff7ffffe10000398d50ac\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_ZipToken_32_+_4: 0xc050fffff320c00020003d81af848540000000000000040000110001bd062022\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xfe51000008ce80008001c1d33616877ffffffffffffff7ffffe10000398d50ac\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_ZipToken_4: 0xfe51000008ce80008001c1d33616877ffffffffffffff7ffffe10000398d50ac\ncalldata_ZipToken_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\nstorage_3: 0x0\ncalldata_ZipToken_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_ZipToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `transferFrom(address,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/31/0x3b96990a8ef293cdd37c8e1ad3d210a0166f40e1.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 142,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 6686,
        "code": "0Basic\n * @dev",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_ZipToken_32 + 36: 0x53632f08ddbb360427befb69cb0d577a76825c1eb02b4cefbf971939ae256117\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_ZipToken_32_+_4: 0xd32ba62e013a1e544c40f8298f8c838ef0ca495e903244487f8ba1f8c2a013e7\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x53632f08ddbb360427befb69cb0d577a76825c1eb02b4cefbf971939ae256117\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_ZipToken_4: 0x53632f08ddbb360427befb69cb0d577a76825c1eb02b4cefbf971939ae256117\ncalldata_ZipToken_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\nstorage_3: 0x0\ncalldata_ZipToken_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_ZipToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/31/0x3b96990a8ef293cdd37c8e1ad3d210a0166f40e1.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 142,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}