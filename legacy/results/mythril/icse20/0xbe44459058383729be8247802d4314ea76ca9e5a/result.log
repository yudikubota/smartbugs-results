{"error": null, "issues": [{"address": 447, "code": "     assert(partnersPromo[promo]==address(0x0));\n        assert(partnersInfo[msg.sender].create==false);\n        assert(str_length(code)>0 && str_length(code)<=6);\n\n        partnersPromo[promo] = msg.sender;\n        partnersInfo[msg.sender].attracted_investments = 0;\n        partnersInfo[msg.sender].promo = promo;\n        partnersInfo[msg.sender].create = true;\n    }\n\n    function checkPromo(string promo) constant returns(bool){\n        bytes32 result = stringTobytes", "debug": "calldata_BMICOAffiliateProgramm_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_BMICOAffiliateProgramm_0: 0x6faebbe00000000000000000000000000000000000000000000000000000000\ncalldatasize_BMICOAffiliateProgramm: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `setPromoToPartner(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/10/0xbe44459058383729be8247802d4314ea76ca9e5a.sol", "function": "setPromoToPartner(string)", "lineno": 95, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1056, "code": "nt256[] h_invest, address[] h_referrals){\n        if(partner_address != address(0x0) && partnersInfo[partner_address].create){\n            promo = partnersInfo[partner_address].promo;\n            attracted_investments = partnersInfo[partner_address].attracted_investments;\n\n            h_datetime = new uint256[](history[partner_address].length);\n            h_invest = new uint256[](history[partner_address].length);\n            h_referrals = new address[](history[partner_address].length);\n\n            for(uint256 i=0; i<history[partner_address].length; i++){\n                h_datetime[i] = history[partner_address][i].datetime;\n                h_invest[i] = history[partner_address][i].amount_invest;\n                h_referrals[i] = history[partner_address][i].referral;\n            }\n        }\n        else{\n            promo = '-1';\n            attracted_investments = 0;\n            h_datetime = new uint256[](0);\n            h_invest = new uint256[](0);\n            h_referrals = new address[](0);\n        }\n    }\n\n    function referralAmountInvest(address referral) constant external returns (uint256 amount){\n        amount = referralsInfo[referral];\n    }\n\n    function add", "debug": "mem_128 +\n32 +\n32*\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_BMICOAffiliateProgramm_4: 0x800000000000000000000000000000000000000000000000000000000000000\nstorage_2 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_BMICOAffiliateProgramm_4: 0xff00\ncalldata_BMICOAffiliateProgramm_4: 0xffffffffffffffffffffffffffffffffffffffff\nstorage_6: 0x0\ncaller: 0x0\ncalldata_BMICOAffiliateProgramm_0: 0x5cb4f54800000000000000000000000000000000000000000000000000000000\ncalldatasize_BMICOAffiliateProgramm: 0x4\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_BMICOAffiliateProgramm_4: 0x0\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `partnerInfo(address)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/10/0xbe44459058383729be8247802d4314ea76ca9e5a.sol", "function": "partnerInfo(address)", "lineno": 142, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1122, "code": "nt256[] h_invest, address[] h_referrals){\n        if(partner_address != address(0x0) && partnersInfo[partner_address].create){\n            promo = partnersInfo[partner_address].promo;\n            attracted_investments = partnersInfo[partner_address].attracted_investments;\n\n            h_datetime = new uint256[](history[partner_address].length);\n            h_invest = new uint256[](history[partner_address].length);\n            h_referrals = new address[](history[partner_address].length);\n\n            for(uint256 i=0; i<history[partner_address].length; i++){\n                h_datetime[i] = history[partner_address][i].datetime;\n                h_invest[i] = history[partner_address][i].amount_invest;\n                h_referrals[i] = history[partner_address][i].referral;\n            }\n        }\n        else{\n            promo = '-1';\n            attracted_investments = 0;\n            h_datetime = new uint256[](0);\n            h_invest = new uint256[](0);\n            h_referrals = new address[](0);\n        }\n    }\n\n    function referralAmountInvest(address referral) constant external returns (uint256 amount){\n        amount = referralsInfo[referral];\n    }\n\n    function add", "debug": "mem_160 +\n32*\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_BMICOAffiliateProgramm_4 +\n32 +\n32*\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_BMICOAffiliateProgramm_4: 0x800000000000000000000000000000000000000000000000000000000000000\nmem_128 +\n32 +\n32*\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_BMICOAffiliateProgramm_4: 0x0\nstorage_2 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_BMICOAffiliateProgramm_4: 0xff00\ncalldata_BMICOAffiliateProgramm_4: 0xffffffffffffffffffffffffffffffffffffffff\nstorage_6: 0x0\ncaller: 0x0\ncalldata_BMICOAffiliateProgramm_0: 0x5cb4f54800000000000000000000000000000000000000000000000000000000\ncalldatasize_BMICOAffiliateProgramm: 0x4\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_BMICOAffiliateProgramm_4: 0x0\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `partnerInfo(address)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/10/0xbe44459058383729be8247802d4314ea76ca9e5a.sol", "function": "partnerInfo(address)", "lineno": 142, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1806, "code": "] partners, bytes32[] promo_codes, uint256[] attracted_invests) isOwner {\n        assert(partners.length==promo_codes.length && partners.length==attracted_invests.length);\n\n        for(uint256 i=0; i<partners.length; i++){\n            if(!partnersInfo[partners[i]].create){\n                partnersPromo[promo_codes[i]] = partners[i];\n                partnersInfo[partners[i]].attracted_investments = attracted_invests[i];\n                partnersInfo[partners[i]].promo = promo_codes[i];\n                partnersInfo[partners[i]].create = true;\n            }\n        }\n    }\n\n    function setReferralPercent(uint16 new_percent) isOw", "debug": "calldata_BMICOAffiliateProgramm_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_BMICOAffiliateProgramm_0: 0xde63dc3500000000000000000000000000000000000000000000000000000000\ncalldatasize_BMICOAffiliateProgramm: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `setPartnerFromPreICOAffiliate(address[],bytes32[],uint256[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/10/0xbe44459058383729be8247802d4314ea76ca9e5a.sol", "function": "setPartnerFromPreICOAffiliate(address[],bytes32[],uint256[])", "lineno": 48, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2583, "code": "y[partner].push(itemHistory(now, ", "debug": "calldata_BMICOAffiliateProgramm_32 + 36: 0x57f25cd000000000000000000000000000000000000000000000000000000000\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_BMICOAffiliateProgramm_4: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_7: 0x0\ncaller: 0x0\ncalldata_BMICOAffiliateProgramm_4: 0x0\nstorage_75506153327051474587906755573858019282972751592871715030499431892688993766217: 0xffffffffffffffffffffffffffffffffffffffff00\ncalldata_BMICOAffiliateProgramm_0: 0x64d61800000000000000000000000000000000000000000000000000000000\ncalldatasize_BMICOAffiliateProgramm: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/10/0xbe44459058383729be8247802d4314ea76ca9e5a.sol", "function": "fallback", "lineno": 182, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2599, "code": "\n                p_partner = (am", "debug": "calldata_BMICOAffiliateProgramm_32 + 36: 0x57f25cd000000000000000000000000000000000000000000000000000000000\nstorage_5: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_7: 0x0\ncaller: 0x0\ncalldata_BMICOAffiliateProgramm_4: 0x0\nstorage_75506153327051474587906755573858019282972751592871715030499431892688993766217: 0xffffffffffffffffffffffffffffffffffffffff00\ncalldata_BMICOAffiliateProgramm_0: 0x64d61800000000000000000000000000000000000000000000000000000000\ncalldatasize_BMICOAffiliateProgramm: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/10/0xbe44459058383729be8247802d4314ea76ca9e5a.sol", "function": "fallback", "lineno": 182, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2679, "code": "artnerPercent(partner)))/10000;\n                p_ref", "debug": "calldata_BMICOAffiliateProgramm_32 + 36: 0x57f25cd000000000000000000000000000000000000000000000000000000000\nstorage_0 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\nUDiv(storage_75506153327051474587906755573858019282972751592871715030499431892688993766217,\n_____256): 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_7: 0x0\ncaller: 0x0\ncalldata_BMICOAffiliateProgramm_4: 0x0\nstorage_75506153327051474587906755573858019282972751592871715030499431892688993766217: 0xffffffffffffffffffffffffffffffffffffffff00\ncalldata_BMICOAffiliateProgramm_0: 0x64d61800000000000000000000000000000000000000000000000000000000\ncalldatasize_BMICOAffiliateProgramm: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/10/0xbe44459058383729be8247802d4314ea76ca9e5a.sol", "function": "fallback", "lineno": 183, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2806, "code": ";\n\n\ncontract BMICO", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\nUDiv(storage_75506153327051474587906755573858019282972751592871715030499431892688993766217,\n_____256): 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_7: 0x0\ncaller: 0x0\ncalldata_BMICOAffiliateProgramm_4: 0x0\nstorage_75506153327051474587906755573858019282972751592871715030499431892688993766217: 0xffffffffffffffffffffffffffffffffffffffff00\ncalldata_BMICOAffiliateProgramm_0: 0x64d61800000000000000000000000000000000000000000000000000000000\ncalldatasize_BMICOAffiliateProgramm: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/10/0xbe44459058383729be8247802d4314ea76ca9e5a.sol", "function": "fallback", "lineno": 1, "title": "Integer Overflow ", "type": "Warning"}, {"address": 3144, "code": "lse);\n        assert(str_length(code)>0 &&", "debug": "The exception is triggered under the following conditions:\n\nstorage_75506153327051474587906755573858019282972751592871715030499431892688993766217: 0xffffffffffffffffffffffffffffffffffffffff00\ncalldata_BMICOAffiliateProgramm_0: 0x6faebbe00000000000000000000000000000000000000000000000000000000\ncalldatasize_BMICOAffiliateProgramm: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/10/0xbe44459058383729be8247802d4314ea76ca9e5a.sol", "function": "setPromoToPartner(string)", "lineno": 96, "title": "Exception state", "type": "Informational"}, {"address": 3239, "code": "(code)<=6);\n\n        partnersPromo[promo] = ms", "debug": "The exception is triggered under the following conditions:\n\nstorage_2 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xff00\nstorage_75506153327051474587906755573858019282972751592871715030499431892688993766217: 0x0\ncalldata_BMICOAffiliateProgramm_0: 0x6faebbe00000000000000000000000000000000000000000000000000000000\ncalldatasize_BMICOAffiliateProgramm: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/10/0xbe44459058383729be8247802d4314ea76ca9e5a.sol", "function": "setPromoToPartner(string)", "lineno": 97, "title": "Exception state", "type": "Informational"}, {"address": 3280, "code": "       partnersInfo[msg.sender].attracted_investm", "debug": "The exception is triggered under the following conditions:\n\ncalldata_BMICOAffiliateProgramm_4 + calldata_BMICOAffiliateProgramm_4: 0x7\nstorage_2 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\nstorage_75506153327051474587906755573858019282972751592871715030499431892688993766217: 0x0\ncalldata_BMICOAffiliateProgramm_0: 0x6faebbe00000000000000000000000000000000000000000000000000000000\ncalldatasize_BMICOAffiliateProgramm: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/10/0xbe44459058383729be8247802d4314ea76ca9e5a.sol", "function": "setPromoToPartner(string)", "lineno": 100, "title": "Exception state", "type": "Informational"}, {"address": 4032, "code": " _;\n    }\n\n    function cha", "debug": "The exception is triggered under the following conditions:\n\nstorage_6: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_BMICOAffiliateProgramm_0: 0x4e40616700000000000000000000000000000000000000000000000000000000\ncalldatasize_BMICOAffiliateProgramm: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/10/0xbe44459058383729be8247802d4314ea76ca9e5a.sol", "function": "setContractICO(address)", "lineno": 38, "title": "Exception state", "type": "Informational"}, {"address": 4122, "code": "0));\n        assert(new_address!=", "debug": "The exception is triggered under the following conditions:\n\nstorage_7: 0xffffffffffffffffffffffffffffffffffffffff00\nstorage_6: 0x0\ncaller: 0x0\ncalldata_BMICOAffiliateProgramm_0: 0x4e40616700000000000000000000000000000000000000000000000000000000\ncalldatasize_BMICOAffiliateProgramm: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/10/0xbe44459058383729be8247802d4314ea76ca9e5a.sol", "function": "setContractICO(address)", "lineno": 75, "title": "Exception state", "type": "Informational"}, {"address": 4179, "code": "s));\n\n        contractICO = new_a", "debug": "The exception is triggered under the following conditions:\n\ncalldata_BMICOAffiliateProgramm_4: 0x0\nstorage_7: 0x0\nstorage_6: 0x0\ncaller: 0x0\ncalldata_BMICOAffiliateProgramm_0: 0x4e40616700000000000000000000000000000000000000000000000000000000\ncalldatasize_BMICOAffiliateProgramm: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/10/0xbe44459058383729be8247802d4314ea76ca9e5a.sol", "function": "setContractICO(address)", "lineno": 76, "title": "Exception state", "type": "Informational"}, {"address": 4408, "code": " _;\n    }\n\n    function cha", "debug": "The exception is triggered under the following conditions:\n\nstorage_6: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_BMICOAffiliateProgramm_0: 0x5cb4f54800000000000000000000000000000000000000000000000000000000\ncalldatasize_BMICOAffiliateProgramm: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/10/0xbe44459058383729be8247802d4314ea76ca9e5a.sol", "function": "partnerInfo(address)", "lineno": 38, "title": "Exception state", "type": "Informational"}, {"address": 5345, "code": "        els", "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_BMICOAffiliateProgramm_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_2 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_BMICOAffiliateProgramm_4: 0xff00\ncalldata_BMICOAffiliateProgramm_4: 0xffffffffffffffffffffffffffffffffffffffff\nstorage_6: 0x0\ncaller: 0x0\ncalldata_BMICOAffiliateProgramm_0: 0x5cb4f54800000000000000000000000000000000000000000000000000000000\ncalldatasize_BMICOAffiliateProgramm: 0x4\nmem_128 +\n32 +\n32*\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_BMICOAffiliateProgramm_4: 0x0\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/10/0xbe44459058383729be8247802d4314ea76ca9e5a.sol", "function": "partnerInfo(address)", "lineno": 157, "title": "Exception state", "type": "Informational"}, {"address": 5945, "code": " _;\n    }\n\n    function cha", "debug": "The exception is triggered under the following conditions:\n\nstorage_6: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_BMICOAffiliateProgramm_0: 0xa6f9dae100000000000000000000000000000000000000000000000000000000\ncalldatasize_BMICOAffiliateProgramm: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/10/0xbe44459058383729be8247802d4314ea76ca9e5a.sol", "function": "changeOwner(address)", "lineno": 38, "title": "Exception state", "type": "Informational"}, {"address": 6002, "code": "assert(new_owner!=address(this)", "debug": "The exception is triggered under the following conditions:\n\ncalldata_BMICOAffiliateProgramm_4: 0x0\nstorage_6: 0x0\ncaller: 0x0\ncalldata_BMICOAffiliateProgramm_0: 0xa6f9dae100000000000000000000000000000000000000000000000000000000\ncalldatasize_BMICOAffiliateProgramm: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/10/0xbe44459058383729be8247802d4314ea76ca9e5a.sol", "function": "changeOwner(address)", "lineno": 43, "title": "Exception state", "type": "Informational"}, {"address": 6287, "code": " _;\n    }\n\n    function cha", "debug": "The exception is triggered under the following conditions:\n\nstorage_6: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_BMICOAffiliateProgramm_0: 0xca1ad32c00000000000000000000000000000000000000000000000000000000\ncalldatasize_BMICOAffiliateProgramm: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/10/0xbe44459058383729be8247802d4314ea76ca9e5a.sol", "function": "setPartnerPercent(address,uint16)", "lineno": 38, "title": "Exception state", "type": "Informational"}, {"address": 6344, "code": "is));\n        assert(partners", "debug": "The exception is triggered under the following conditions:\n\ncalldata_BMICOAffiliateProgramm_4: 0x0\nstorage_6: 0x0\ncaller: 0x0\ncalldata_BMICOAffiliateProgramm_0: 0xca1ad32c00000000000000000000000000000000000000000000000000000000\ncalldatasize_BMICOAffiliateProgramm: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/10/0xbe44459058383729be8247802d4314ea76ca9e5a.sol", "function": "setPartnerPercent(address,uint16)", "lineno": 67, "title": "Exception state", "type": "Informational"}, {"address": 6495, "code": "ent<=1500);\n        partnersInfo[partner].", "debug": "The exception is triggered under the following conditions:\n\nstorage_2 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_BMICOAffiliateProgramm_4: 0x0\ncalldata_BMICOAffiliateProgramm_4: 0xffffffffffffffffffffffffffffffffffffffff\nstorage_6: 0x0\ncaller: 0x0\ncalldata_BMICOAffiliateProgramm_0: 0xca1ad32c00000000000000000000000000000000000000000000000000000000\ncalldatasize_BMICOAffiliateProgramm: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/10/0xbe44459058383729be8247802d4314ea76ca9e5a.sol", "function": "setPartnerPercent(address,uint16)", "lineno": 69, "title": "Exception state", "type": "Informational"}, {"address": 6513, "code": "rcent = new_percent;\n    ", "debug": "The exception is triggered under the following conditions:\n\ncalldata_BMICOAffiliateProgramm_32 + 4: 0x8000\nstorage_2 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_BMICOAffiliateProgramm_4: 0xff00\ncalldata_BMICOAffiliateProgramm_4: 0xffffffffffffffffffffffffffffffffffffffff\nstorage_6: 0x0\ncaller: 0x0\ncalldata_BMICOAffiliateProgramm_0: 0xca1ad32c00000000000000000000000000000000000000000000000000000000\ncalldatasize_BMICOAffiliateProgramm: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/10/0xbe44459058383729be8247802d4314ea76ca9e5a.sol", "function": "setPartnerPercent(address,uint16)", "lineno": 70, "title": "Exception state", "type": "Informational"}, {"address": 6718, "code": " _;\n    }\n\n    function cha", "debug": "The exception is triggered under the following conditions:\n\nstorage_6: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_BMICOAffiliateProgramm_0: 0xcc2eacb100000000000000000000000000000000000000000000000000000000\ncalldatasize_BMICOAffiliateProgramm: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/10/0xbe44459058383729be8247802d4314ea76ca9e5a.sol", "function": "setReferralPercent(uint16)", "lineno": 38, "title": "Exception state", "type": "Informational"}, {"address": 6841, "code": " _;\n    }\n\n    function cha", "debug": "The exception is triggered under the following conditions:\n\nstorage_6: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_BMICOAffiliateProgramm_0: 0xde63dc3500000000000000000000000000000000000000000000000000000000\ncalldatasize_BMICOAffiliateProgramm: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/10/0xbe44459058383729be8247802d4314ea76ca9e5a.sol", "function": "setPartnerFromPreICOAffiliate(address[],bytes32[],uint256[])", "lineno": 38, "title": "Exception state", "type": "Informational"}, {"address": 6867, "code": "rtners.length==attracted_invests.length);\n\n        for(uint256 i=0; i<partners.length; i", "debug": "The exception is triggered under the following conditions:\n\nmem_160 +\n32*\ncalldata_BMICOAffiliateProgramm_4 + calldata_BMICOAffiliateProgramm_4 +\n32 +\n32*\ncalldata_BMICOAffiliateProgramm_4 + calldata_BMICOAffiliateProgramm_32 + 4: 0x0\nmem_128 +\n32 +\n32*\ncalldata_BMICOAffiliateProgramm_4 + calldata_BMICOAffiliateProgramm_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_6: 0x0\ncaller: 0x0\ncalldata_BMICOAffiliateProgramm_0: 0xde63dc3500000000000000000000000000000000000000000000000000000000\ncalldatasize_BMICOAffiliateProgramm: 0x4\ncalldata_BMICOAffiliateProgramm_4 + calldata_BMICOAffiliateProgramm_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/10/0xbe44459058383729be8247802d4314ea76ca9e5a.sol", "function": "setPartnerFromPreICOAffiliate(address[],bytes32[],uint256[])", "lineno": 49, "title": "Exception state", "type": "Informational"}], "success": true}