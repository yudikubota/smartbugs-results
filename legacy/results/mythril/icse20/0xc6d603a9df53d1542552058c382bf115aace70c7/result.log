{"error": null, "issues": [{"address": 1116, "code": "s[i], _amount);\n    }\n\n    function updateTokensPerEth(uint _tokensPerEth) public onlyOwner {        \n        tokensPerEth = _tokensPerEth;\n        emit TokensPerEthUpdated(_tokensPerEth);\n    ", "debug": "calldata_TRET_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_TRET_0: 0x67220fd700000000000000000000000000000000000000000000000000000000\ncalldatasize_TRET: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `adminClaimAirdropMultiple(address[],uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/5/0xc6d603a9df53d1542552058c382bf115aace70c7.sol", "function": "adminClaimAirdropMultiple(address[],uint256)", "lineno": 172, "title": "Integer Overflow ", "type": "Warning"}, {"address": 3194, "code": "ount <= balances[msg.sender]);\n    ", "debug": "The exception is triggered under the following conditions:\n\ncalldatasize_TRET: 0x60\ncalldata_TRET_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/5/0xc6d603a9df53d1542552058c382bf115aace70c7.sol", "function": "transferFrom(address,address,uint256)", "lineno": 231, "title": "Exception state", "type": "Informational"}, {"address": 5839, "code": "ount <= balances[msg.sender]);\n    ", "debug": "The exception is triggered under the following conditions:\n\ncalldatasize_TRET: 0x4\ncalldata_TRET_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/5/0xc6d603a9df53d1542552058c382bf115aace70c7.sol", "function": "transfer(address,uint256)", "lineno": 231, "title": "Exception state", "type": "Informational"}, {"address": 8375, "code": "- b;\n    }\n\n  ", "debug": "The exception is triggered under the following conditions:\n\ncalldata_TRET_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_1: 0x0\ncaller: 0x0\ncalldata_TRET_0: 0x42966c6800000000000000000000000000000000000000000000000000000000\ncalldatasize_TRET: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/5/0xc6d603a9df53d1542552058c382bf115aace70c7.sol", "function": "burn(uint256)", "lineno": 35, "title": "Exception state", "type": "Informational"}, {"address": 8392, "code": "turn ", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TRET_4: 0xb2c81e3be60b809eebca250ae5f3958de8241f3c0942692d3cecd1fd00743211\ncalldata_TRET_32 + 4: 0x93931c13e507cbbcbf74d9eee4fb920eeaef84aa5110428da2eddb017d5ebcdd\nstorage_5: 0x0\nstorage_4: 0x1\nstorage_1: 0x0\ncaller: 0x0\ncalldata_TRET_0: 0x4a63464d00000000000000000000000000000000000000000000000000000000\ncalldatasize_TRET: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `adminClaimAirdrop(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/5/0xc6d603a9df53d1542552058c382bf115aace70c7.sol", "function": "adminClaimAirdrop(address,uint256)", "lineno": 44, "title": "Integer Overflow ", "type": "Warning"}, {"address": 8405, "code": "\ncontract Fore", "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TRET_cpy: 0xc63a21246c99b000ea0030728005ea6909080a424a47ca48059be3c0ff803205\ncalldata_TRET_32 + 4: 0xd2bd697b67b8b7eebcef8ebaf405ca6a0b728a06c347eda3d5dbebfeffbdb977\nstorage_5: 0x0\nstorage_4: 0x1\ncalldata_TRET_4 + calldata_TRET_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_1: 0x0\ncaller: 0x0\ncalldata_TRET_0: 0x67220fd700000000000000000000000000000000000000000000000000000000\ncalldatasize_TRET: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/5/0xc6d603a9df53d1542552058c382bf115aace70c7.sol", "function": "adminClaimAirdropMultiple(address[],uint256)", "lineno": 47, "title": "Exception state", "type": "Informational"}], "success": true}