{"error": null, "issues": [{"address": 920, "code": "freeze = freezedTokens[_beneficiary[i]];\n            _freeze.amount = _amount[i];\n            _freeze.when = _when[i];\n        }\n    }\n\n\n    function transferAndFreeze(address _to, uint256 _value, uint256 _when) external {\n        require(unpausedWallet[msg.sender]);\n        require(freezedTokenOf(_to) == 0);\n        if(_when > 0){\n            freeze storage _freeze = freezedTokens[_to];\n            _freeze.amount = _value;\n            _freeze.when = _when;\n        }\n        transfer(_to,_valu", "debug": "calldata_Token_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_Token_0: 0x24db1f5000000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `masFreezedTokens(address[],uint256[],uint256[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x2b4dd5851da6e7ea0bc2d2c814c229abecf5dc80.sol", "function": "masFreezedTokens(address[],uint256[],uint256[])", "lineno": 361, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1705, "code": "oken, KycToken,ERC20Provider {\n    function Token(ICreator _creator) GuidedByRoles(_creator.rightAndRoles()) public {}\n    string public constant name = \"MOBU token\";\n    string public constant symbol = \"MOBU\";\n    uin", "debug": "calldata_Token_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_Token_0: 0x680b3bdf00000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `migrateAll(address[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x2b4dd5851da6e7ea0bc2d2c814c229abecf5dc80.sol", "function": "migrateAll(address[])", "lineno": 453, "title": "Integer Overflow ", "type": "Warning"}, {"address": 4044, "code": "e totalSupply, which *should* be an a", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_contracts/0x2b4dd5851da6e7ea0bc2d2c814c229abecf5dc80.sol", "function": "markTokens(address,uint256)", "lineno": 220, "title": "Message call to external contract", "type": "Informational"}, {"address": 4334, "code": "\n}\n\ncontract StandardToken is ERC20, BasicToken {\n\n    mapp", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_contracts/0x2b4dd5851da6e7ea0bc2d2c814c229abecf5dc80.sol", "function": "markTokens(address,uint256)", "lineno": 226, "title": "State change after external call", "type": "Warning"}, {"address": 4361, "code": "s => mapping (address => uint256)) inte", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_contracts/0x2b4dd5851da6e7ea0bc2d2c814c229abecf5dc80.sol", "function": "markTokens(address,uint256)", "lineno": 231, "title": "State change after external call", "type": "Warning"}, {"address": 4758, "code": "dress indexed _from, address indexed ", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_contracts/0x2b4dd5851da6e7ea0bc2d2c814c229abecf5dc80.sol", "function": "mint(address,uint256)", "lineno": 415, "title": "Message call to external contract", "type": "Informational"}, {"address": 4851, "code": " _value);\n\n    function setMigrationAgen", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_contracts/0x2b4dd5851da6e7ea0bc2d2c814c229abecf5dc80.sol", "function": "mint(address,uint256)", "lineno": 415, "title": "State change after external call", "type": "Warning"}, {"address": 4998, "code": "migrationAgent) public {\n        require(r", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_contracts/0x2b4dd5851da6e7ea0bc2d2c814c229abecf5dc80.sol", "function": "mint(address,uint256)", "lineno": 417, "title": "State change after external call", "type": "Warning"}, {"address": 6213, "code": "r) GuidedByRoles(_creator.rightAndRol", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_contracts/0x2b4dd5851da6e7ea0bc2d2c814c229abecf5dc80.sol", "function": "migrateAll(address[])", "lineno": 454, "title": "Message call to external contract", "type": "Informational"}, {"address": 6620, "code": "ent(migrationAgent).migrateFrom(_hold", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_contracts/0x2b4dd5851da6e7ea0bc2d2c814c229abecf5dc80.sol", "function": "setMigrationAgent(address)", "lineno": 433, "title": "Message call to external contract", "type": "Informational"}, {"address": 9387, "code": "a);\n ", "debug": "calldata_Token_32 + 4: 0x57f25cd000000000000000000000000000000000000000000000000000000000\nstorage_1: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nreturndatasize: 0x20\nretval_4758: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_Token_0: 0x40c10f1900000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `mint(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x2b4dd5851da6e7ea0bc2d2c814c229abecf5dc80.sol", "function": "mint(address,uint256)", "lineno": 29, "title": "Integer Overflow ", "type": "Warning"}, {"address": 9400, "code": "rn c;\n    }\n  ", "debug": "The exception is triggered under the following conditions:\n\nstorage_1: 0x1\ncalldata_Token_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nreturndatasize: 0x20\nretval_4758: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_Token_0: 0x40c10f1900000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_contracts/0x2b4dd5851da6e7ea0bc2d2c814c229abecf5dc80.sol", "function": "mint(address,uint256)", "lineno": 30, "title": "Exception state", "type": "Informational"}, {"address": 9836, "code": " pause\". Available to the owner of th", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_contracts/0x2b4dd5851da6e7ea0bc2d2c814c229abecf5dc80.sol", "function": "masFreezedTokens(address[],uint256[],uint256[])", "lineno": 93, "title": "Message call to external contract", "type": "Informational"}, {"address": 9918, "code": " return a - b;", "debug": "The exception is triggered under the following conditions:\n\ncalldata_Token_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_1: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_Token_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nreturndatasize: 0x20\nretval_4044: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_Token_0: 0x264282f200000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_contracts/0x2b4dd5851da6e7ea0bc2d2c814c229abecf5dc80.sol", "function": "markTokens(address,uint256)", "lineno": 25, "title": "Exception state", "type": "Informational"}], "success": true}