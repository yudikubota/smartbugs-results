{"error": null, "issues": [{"address": 562, "code": "set implementation contract address.\n     address pendingVer", "debug": "", "description": "This contract executes a message call to the address of the transaction sender. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_contracts/0x33b7a018934c6e90fd63189d7c4517f0f776142f.sol", "function": "fallback", "lineno": 349, "title": "Message call to external contract", "type": "Warning"}, {"address": 562, "code": "set implementation contract address.\n     address pendingVer", "debug": "", "description": "A possible transaction order independence vulnerability exists in function fallback. The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_contracts/0x33b7a018934c6e90fd63189d7c4517f0f776142f.sol", "function": "fallback", "lineno": 349, "title": "Transaction order dependence", "type": "Warning"}, {"address": 1708, "code": "  }\n\n     /**\n      * Prforms allowance transfer of asset balance between holders.\n      *\n      * @param _from holder address to take from.\n      * @param _to holder address to give to.\n      * @param _value amount to transfer.\n      *\n      * @re", "debug": "calldata_ERC20_32 + 36: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_ERC20_0: 0x6a630ee700000000000000000000000000000000000000000000000000000000\ncalldatasize_ERC20: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `__transferWithReference(address,uint256,string,address)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x33b7a018934c6e90fd63189d7c4517f0f776142f.sol", "function": "__transferWithReference(address,uint256,string,address)", "lineno": 246, "title": "Integer Overflow ", "type": "Warning"}, {"address": 4028, "code": "assigned to sender.\n      *\n      * @param _spender", "debug": "", "description": "This contract executes a message call to the address of the transaction sender. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_contracts/0x33b7a018934c6e90fd63189d7c4517f0f776142f.sol", "function": "approve(address,uint256)", "lineno": 303, "title": "Message call to external contract", "type": "Warning"}, {"address": 4028, "code": "assigned to sender.\n      *\n      * @param _spender", "debug": "", "description": "A possible transaction order independence vulnerability exists in function approve(address,uint256). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_contracts/0x33b7a018934c6e90fd63189d7c4517f0f776142f.sol", "function": "approve(address,uint256)", "lineno": 303, "title": "Transaction order dependence", "type": "Warning"}, {"address": 4186, "code": "       if (userOptOutVersion[msg.sender] != 0", "debug": "storage_7: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc4980\nstorage_6: 0xffffffffffffffffffffffffffffffffffffffff00\ncalldata_ERC20_0: 0xba12c8300000000000000000000000000000000000000000000000000000000\ncalldatasize_ERC20: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `commitUpgrade()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x33b7a018934c6e90fd63189d7c4517f0f776142f.sol", "function": "commitUpgrade()", "lineno": 483, "title": "Integer Overflow ", "type": "Warning"}, {"address": 4553, "code": "ess.\n      *\n      * @return holder ", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_contracts/0x33b7a018934c6e90fd63189d7c4517f0f776142f.sol", "function": "totalSupply()", "lineno": 158, "title": "Message call to external contract", "type": "Informational"}, {"address": 5137, "code": " *\n      * Can only be called by asset implementation contract assigned to ", "debug": "", "description": "This contract executes a message call to the address of the transaction sender. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_contracts/0x33b7a018934c6e90fd63189d7c4517f0f776142f.sol", "function": "transferFrom(address,address,uint256)", "lineno": 268, "title": "Message call to external contract", "type": "Warning"}, {"address": 5137, "code": " *\n      * Can only be called by asset implementation contract assigned to ", "debug": "", "description": "A possible transaction order independence vulnerability exists in function transferFrom(address,address,uint256). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_contracts/0x33b7a018934c6e90fd63189d7c4517f0f776142f.sol", "function": "transferFrom(address,address,uint256)", "lineno": 268, "title": "Transaction order dependence", "type": "Warning"}, {"address": 5565, "code": "* @param _value amount to transfe", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_contracts/0x33b7a018934c6e90fd63189d7c4517f0f776142f.sol", "function": "decimals()", "lineno": 191, "title": "Message call to external contract", "type": "Informational"}, {"address": 5886, "code": "ntract for current caller.\n      *\n      * @", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_contracts/0x33b7a018934c6e90fd63189d7c4517f0f776142f.sol", "function": "purgeUpgrade()", "lineno": 138, "title": "Message call to external contract", "type": "Informational"}, {"address": 6904, "code": "allowed spending.\n      * @param _spender ", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_contracts/0x33b7a018934c6e90fd63189d7c4517f0f776142f.sol", "function": "balanceOf(address)", "lineno": 169, "title": "Message call to external contract", "type": "Informational"}], "success": true}