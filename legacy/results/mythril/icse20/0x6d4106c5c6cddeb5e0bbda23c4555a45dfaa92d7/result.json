{
  "contract": "0x6d4106c5c6cddeb5e0bbda23c4555a45dfaa92d7",
  "tool": "mythril",
  "start": 1563548653.2367635,
  "end": 1563548817.9709988,
  "duration": 164.73423528671265,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 2850,
        "code": "s) public onlyOw",
        "debug": "calldata_token_4: 0x888888888888888888888888888888888888888888888888888888888888889\nstorage_0: 0x0\nstorage_12: 0xffffffffffffffffffffffffffffffffffffffff00\ncaller: 0x0\ncalldata_token_0: 0x303b52c800000000000000000000000000000000000000000000000000000000\ncalldatasize_token: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `setGlobalLocktime(uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/14/0x6d4106c5c6cddeb5e0bbda23c4555a45dfaa92d7.sol",
        "function": "setGlobalLocktime(uint256)",
        "lineno": 148,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2852,
        "code": "nt mins) public onlyOw",
        "debug": "timestamp: 0x8c80c03a01475ebe634179fe2e850b1d4e07e19d33da227eb8de6399c708a08c\ncalldata_token_4: 0x7a54eacf4b0078020790207a13ee2209dc2d8b124130d4204ae40e8da75b8db\nstorage_0: 0x0\nstorage_12: 0xffffffffffffffffffffffffffffffffffffffff00\ncaller: 0x0\ncalldata_token_0: 0x303b52c800000000000000000000000000000000000000000000000000000000\ncalldatasize_token: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `setGlobalLocktime(uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/14/0x6d4106c5c6cddeb5e0bbda23c4555a45dfaa92d7.sol",
        "function": "setGlobalLocktime(uint256)",
        "lineno": 148,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 3388,
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/14/0x6d4106c5c6cddeb5e0bbda23c4555a45dfaa92d7.sol",
        "function": "getLeftOver(uint256)",
        "lineno": 177,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 4093,
        "code": "      emit IsCharged(charged);\n     ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/14/0x6d4106c5c6cddeb5e0bbda23c4555a45dfaa92d7.sol",
        "function": "doChargeCrowdsale(uint256)",
        "lineno": 98,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 4154,
        "code": "harged = true;\n        emit IsCharged(charged);\n     ",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/14/0x6d4106c5c6cddeb5e0bbda23c4555a45dfaa92d7.sol",
        "function": "doChargeCrowdsale(uint256)",
        "lineno": 97,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 4567,
        "code": "\n    address public owner",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_token_4: 0x0\nstorage_11: 0x0\ncalldata_token_0: 0xd8e75f6200000000000000000000000000000000000000000000000000000000\ncalldatasize_token: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/14/0x6d4106c5c6cddeb5e0bbda23c4555a45dfaa92d7.sol",
        "function": "_function_0xd8e75f62",
        "lineno": 27,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}