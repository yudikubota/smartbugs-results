{
  "contract": "0x38b40f36f62ed95539c1ab81928bc45b36f5fb71",
  "tool": "mythril",
  "start": 1563257766.925912,
  "end": 1563257893.9566936,
  "duration": 127.03078174591064,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 385,
        "code": "let;\n    uint reward;\n    bool isItContract;\n    for(uint i=0; i<wallets.length; i++) {\n      wallet = wallets[i];\n      isItContract = isContract(wallet);\n      if(!isItContract || (isItContract && !stopContract)) {\n        reward = tokens[i];\n        crowdsale.mintTokensExternal(wallet, reward);\n        if(balances[wallet] == 0) {\n          rewardHolders.push(wallet);\n        }\n        balances[wallet] = balances[wallet].add(reward);\n        emit RewardTransfer(wallet, reward);\n      }\n    }\n  }\n    \n}",
        "debug": "calldata_TokenDistributor_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_TokenDistributor_0: 0x1c0c3d3300000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenDistributor: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `_function_0x1c0c3d33`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x38b40f36f62ed95539c1ab81928bc45b36f5fb71.sol",
        "function": "_function_0x1c0c3d33",
        "lineno": 116,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 755,
        "code": "ts.length; i++) crowdsale.mintTokensExternal(wallets[i], tokens[i]);\n  }\n\n  function mintAuthorizedBatch(address[] wallets, uint[] tokens) public onlyAuthorized {\n    for(",
        "debug": "calldata_TokenDistributor_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_TokenDistributor_0: 0x7c88e3d900000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenDistributor: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `_function_0x7c88e3d9`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x38b40f36f62ed95539c1ab81928bc45b36f5fb71.sol",
        "function": "_function_0x7c88e3d9",
        "lineno": 99,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1098,
        "code": "=0; i<wallets.length; i++) crowdsale.mintTokensExternal(wallets[i], tokens[i]);\n  }\n\n  function isContract(address addr) public view returns(bool) {\n    uint codeLength;\n    assembly {\n ",
        "debug": "calldata_TokenDistributor_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_TokenDistributor_0: 0xa5d6d4c300000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenDistributor: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `_function_0xa5d6d4c3`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x38b40f36f62ed95539c1ab81928bc45b36f5fb71.sol",
        "function": "_function_0xa5d6d4c3",
        "lineno": 103,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1890,
        "code": "rs.push(w",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0x0\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_TokenDistributor_4 + calldata_TokenDistributor_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xff00\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_TokenDistributor_0: 0x1c0c3d3300000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenDistributor: 0x4\nmem_128 +\n32 +\n32*calldata_TokenDistributor_4 + calldata_TokenDistributor_4: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0x38b40f36f62ed95539c1ab81928bc45b36f5fb71.sol",
        "function": "_function_0x1c0c3d33",
        "lineno": 126,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2103,
        "code": "     }\n        balances[wallet] = balances[w",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_contracts/0x38b40f36f62ed95539c1ab81928bc45b36f5fb71.sol",
        "function": "_function_0x1c0c3d33",
        "lineno": 127,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 2206,
        "code": ";\n\n/**\n * @title S",
        "debug": "storage_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_0: 0x0\nretval_2103: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nmem_128 +\n32 +\n32*calldata_TokenDistributor_4 + calldata_TokenDistributor_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_TokenDistributor_4 + calldata_TokenDistributor_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xff00\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_TokenDistributor_0: 0x1c0c3d3300000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenDistributor: 0x4\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TokenDistributor_cpy: 0x0\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `_function_0x1c0c3d33`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x38b40f36f62ed95539c1ab81928bc45b36f5fb71.sol",
        "function": "_function_0x1c0c3d33",
        "lineno": 1,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2447,
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_contracts/0x38b40f36f62ed95539c1ab81928bc45b36f5fb71.sol",
        "function": "_function_0x1c0c3d33",
        "lineno": 134,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 3080,
        "code": "rized {\n ",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_TokenDistributor_4 + calldata_TokenDistributor_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_0: 0x0\ncaller: 0x0\ncalldata_TokenDistributor_0: 0x7c88e3d900000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenDistributor: 0x4\nmem_128 +\n32 +\n32*calldata_TokenDistributor_4 + calldata_TokenDistributor_4: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0x38b40f36f62ed95539c1ab81928bc45b36f5fb71.sol",
        "function": "_function_0x7c88e3d9",
        "lineno": 102,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3227,
        "code": " wallets, uint[] tokens) public onlyAuthorized {\n  ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_contracts/0x38b40f36f62ed95539c1ab81928bc45b36f5fb71.sol",
        "function": "_function_0x7c88e3d9",
        "lineno": 102,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 3227,
        "code": " wallets, uint[] tokens) public onlyAuthorized {\n  ",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3227\n",
        "filename": "/unique_contracts/0x38b40f36f62ed95539c1ab81928bc45b36f5fb71.sol",
        "function": "_function_0x7c88e3d9",
        "lineno": 102,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 3631,
        "code": "    assem",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_TokenDistributor_4 + calldata_TokenDistributor_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xff00\nstorage_0: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_TokenDistributor_0: 0xa5d6d4c300000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenDistributor: 0x4\nmem_128 +\n32 +\n32*calldata_TokenDistributor_4 + calldata_TokenDistributor_4: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0x38b40f36f62ed95539c1ab81928bc45b36f5fb71.sol",
        "function": "_function_0xa5d6d4c3",
        "lineno": 108,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3778,
        "code": "iew returns(bool) {\n    uint codeLength;\n    assemb",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_contracts/0x38b40f36f62ed95539c1ab81928bc45b36f5fb71.sol",
        "function": "_function_0xa5d6d4c3",
        "lineno": 106,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 4045,
        "code": "uint amount);\n\n  modifier only",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_TokenDistributor_4: 0x0\nstorage_4: 0x0\ncalldata_TokenDistributor_0: 0xe6bd7ed100000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenDistributor: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0x38b40f36f62ed95539c1ab81928bc45b36f5fb71.sol",
        "function": "_function_0xe6bd7ed1",
        "lineno": 79,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 4440,
        "code": "  ret",
        "debug": "mem_0 +\n192 +\n32*calldata_TokenDistributor_4 + calldata_TokenDistributor_4: 0xe6089257c80ac0cbe60d5926ff262844c7005edbab82a162281118017d351c97\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TokenDistributor_cpy: 0x83ffb3569638cea3622d597040d78d7ab7ae5c8a2d8bbb012cad3fb961bad806\nstorage_0: 0x0\nretval_2103: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nmem_128 +\n32 +\n32*calldata_TokenDistributor_4 + calldata_TokenDistributor_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_TokenDistributor_4 + calldata_TokenDistributor_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xff00\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_TokenDistributor_0: 0x1c0c3d3300000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenDistributor: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `_function_0x1c0c3d33`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x38b40f36f62ed95539c1ab81928bc45b36f5fb71.sol",
        "function": "_function_0x1c0c3d33",
        "lineno": 32,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 4453,
        "code": "  }\n}\n\ncontrac",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TokenDistributor_cpy: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_0: 0x0\nmem_0 +\n192 +\n32*calldata_TokenDistributor_4 + calldata_TokenDistributor_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nretval_2103: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nmem_128 +\n32 +\n32*calldata_TokenDistributor_4 + calldata_TokenDistributor_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_TokenDistributor_4 + calldata_TokenDistributor_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xff00\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_TokenDistributor_0: 0x1c0c3d3300000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenDistributor: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0x38b40f36f62ed95539c1ab81928bc45b36f5fb71.sol",
        "function": "_function_0x1c0c3d33",
        "lineno": 33,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}