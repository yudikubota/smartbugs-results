{"error": null, "issues": [{"address": 379, "code": ";\n\n/**\n\n  EN:\n  Mu", "debug": "storage_3: 0xf000018000000\ncallvalue: 0x24be03c0000000\nstorage_0: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ngas: 0x3d090\nblock_number: 0x65a492\ncalldata_MultiEther_0: 0x300000000000000000000000000000000000000000000000000000000\ncalldatasize_MultiEther: 0x4\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x41c0542f41251d6d81526ed2dbc8f0008b13fe48.sol", "function": "fallback", "lineno": 1, "title": "Integer Overflow ", "type": "Warning"}, {"address": 591, "code": "Payout > 0) {\n            ", "debug": "storage_3: 0xfffffffffffffffffffffffffffffffffffffffffffffffffeef04cb4580780f\ncallvalue: 0xbfb24cbd5d678ef\ngas: 0x3d090\nblock_number: 0x65a492\ncalldata_MultiEther_0: 0x300000000000000000000000000000000000000000000000000000000\ncalldatasize_MultiEther: 0x4\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x41c0542f41251d6d81526ed2dbc8f0008b13fe48.sol", "function": "fallback", "lineno": 197, "title": "Integer Overflow ", "type": "Warning"}, {"address": 729, "code": "              delete ", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2022\nCall at address: 2022\nCall at address: 2022\nCall at address: 1729\nCall at address: 2022\nCall at address: 1729\n", "filename": "/unique_contracts/0x41c0542f41251d6d81526ed2dbc8f0008b13fe48.sol", "function": "fallback", "lineno": 204, "title": "Multiple Calls", "type": "Information"}, {"address": 1567, "code": "first inve", "debug": "The exception is triggered under the following conditions:\n\nstorage_3: 0x1150c060810500000\ncallvalue: 0x23bffa7fe40100\nstorage_0: 0x0\nstorage_2: 0x1\nretval_729: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_5: 0x8ac7230489e7ffff\ngas: 0x3d090\nblock_number: 0x65a492\ncalldatasize_MultiEther: 0x3\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_contracts/0x41c0542f41251d6d81526ed2dbc8f0008b13fe48.sol", "function": "fallback", "lineno": 220, "title": "Exception state", "type": "Informational"}, {"address": 1593, "code": "blic view returns (uint)", "debug": "storage_3: 0x487f924af8aac539\nstorage_1 +\n18569430475105882587588266137607568536673111973893317399460219858819262702947 +\n3*storage_2: 0xc80000204000025dbe80b2eeca88092002680400008e19483432222222222223\ncallvalue: 0x3c23ff743640000\nstorage_0: 0x0\nstorage_2: 0x0\nstorage_5: 0x8ac7230489e80000\ngas: 0x3d090\nblock_number: 0x65a492\ncalldatasize_MultiEther: 0x3\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x41c0542f41251d6d81526ed2dbc8f0008b13fe48.sol", "function": "fallback", "lineno": 224, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1729, "code": "if (totalInvested <= 100 ether", "debug": "", "description": "The return value of an external call is not checked. Note that execution continue even if the called contract throws.", "filename": "/unique_contracts/0x41c0542f41251d6d81526ed2dbc8f0008b13fe48.sol", "function": "fallback", "lineno": 235, "title": "Unchecked CALL return value", "type": "Informational"}, {"address": 2022, "code": "n 120;\n        } else if ", "debug": "", "description": "The return value of an external call is not checked. Note that execution continue even if the called contract throws.", "filename": "/unique_contracts/0x41c0542f41251d6d81526ed2dbc8f0008b13fe48.sol", "function": "fallback", "lineno": 249, "title": "Unchecked CALL return value", "type": "Informational"}, {"address": 2342, "code": "\n                suppo", "debug": "The exception is triggered under the following conditions:\n\ncalldata_MultiEther_4: 0x0\nstorage_0: 0x0\ncalldata_MultiEther_0: 0xddf0b00900000000000000000000000000000000000000000000000000000000\ncalldatasize_MultiEther: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_contracts/0x41c0542f41251d6d81526ed2dbc8f0008b13fe48.sol", "function": "_function_0xddf0b009", "lineno": 163, "title": "Exception state", "type": "Informational"}], "success": true}