{"error": null, "issues": [{"address": 2506, "code": "     requ", "debug": "", "description": "Function BuyTorpedo(int256,uint256,address,bytes32,bytes32,uint8) retrieves the transaction origin (tx.origin) using the ORIGIN opcode. Use msg.sender instead.\nSee also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin", "filename": "/unique_chucks/7/0xdef439cb500cfba0b66d29592776cb2df40c1cf1.sol", "function": "BuyTorpedo(int256,uint256,address,bytes32,bytes32,uint8)", "lineno": 190, "title": "Use of tx.origin", "type": "Warning"}, {"address": 2629, "code": "dData_s storage  _Ga", "debug": "storage_10: 0x1a00d8dca0a08067020000001c2809f0c11c68000870231c08800881089bc000\ncallvalue: 0xe5ff27235f5f7f98fdffffffe3d7f60f3ee397fff78fdce3f77ff77ef7643fff\nstorage_8: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_7: 0x0\norigin: 0x0\ncaller: 0x0\ncalldata_TorpedoLaunchGame_0: 0x908c7fa00000000000000000000000000000000000000000000000000000000\ncalldatasize_TorpedoLaunchGame: 0x4\n", "description": "A possible integer overflow exists in the function `BuyTorpedo(int256,uint256,address,bytes32,bytes32,uint8)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/7/0xdef439cb500cfba0b66d29592776cb2df40c1cf1.sol", "function": "BuyTorpedo(int256,uint256,address,bytes32,bytes32,uint8)", "lineno": 895, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2644, "code": "ta = GameRoundData[ t", "debug": "storage_10: 0x838e391c71c71c71c71c71c71c71c71c71c71c71c71c71c71c71c00000000000\ncallvalue: 0x38e391c71c71c71c71c71c71c71c71c71c71c71c71c71c71c71c00000000000\nstorage_8: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_7: 0x0\norigin: 0x0\ncaller: 0x0\ncalldata_TorpedoLaunchGame_0: 0x908c7fa00000000000000000000000000000000000000000000000000000000\ncalldatasize_TorpedoLaunchGame: 0x4\n", "description": "A possible integer overflow exists in the function `BuyTorpedo(int256,uint256,address,bytes32,bytes32,uint8)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/7/0xdef439cb500cfba0b66d29592776cb2df40c1cf1.sol", "function": "BuyTorpedo(int256,uint256,address,bytes32,bytes32,uint8)", "lineno": 895, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2789, "code": "erData[ _player_address", "debug": "The exception is triggered under the following conditions:\n\nblock_number: 0x0\nstorage_1 + keccac_storage_8: 0x1\nstorage_8: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_7: 0x0\norigin: 0x0\ncaller: 0x0\ncalldata_TorpedoLaunchGame_0: 0x908c7fa00000000000000000000000000000000000000000000000000000000\ncalldatasize_TorpedoLaunchGame: 0x4\nstorage_10: 0x0\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/7/0xdef439cb500cfba0b66d29592776cb2df40c1cf1.sol", "function": "BuyTorpedo(int256,uint256,address,bytes32,bytes32,uint8)", "lineno": 905, "title": "Exception state", "type": "Informational"}, {"address": 4170, "code": "     requ", "debug": "", "description": "Function ValidTorpedoScore(int256,uint256,bytes32,bytes32,uint8) retrieves the transaction origin (tx.origin) using the ORIGIN opcode. Use msg.sender instead.\nSee also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin", "filename": "/unique_chucks/7/0xdef439cb500cfba0b66d29592776cb2df40c1cf1.sol", "function": "ValidTorpedoScore(int256,uint256,bytes32,bytes32,uint8)", "lineno": 190, "title": "Use of tx.origin", "type": "Warning"}, {"address": 4845, "code": "edoBatchID;\n        gamevar.r = r;\n        gamevar.s = s;\n    ", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/7/0xdef439cb500cfba0b66d29592776cb2df40c1cf1.sol", "function": "BuyName(bytes32)", "lineno": 874, "title": "Message call to external contract", "type": "Informational"}, {"address": 4845, "code": "edoBatchID;\n        gamevar.r = r;\n        gamevar.s = s;\n    ", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 5039\n", "filename": "/unique_chucks/7/0xdef439cb500cfba0b66d29592776cb2df40c1cf1.sol", "function": "BuyName(bytes32)", "lineno": 874, "title": "Multiple Calls", "type": "Information"}, {"address": 4845, "code": "edoBatchID;\n        gamevar.r = r;\n        gamevar.s = s;\n    ", "debug": "", "description": "A possible transaction order independence vulnerability exists in function BuyName(bytes32). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/7/0xdef439cb500cfba0b66d29592776cb2df40c1cf1.sol", "function": "BuyName(bytes32)", "lineno": 874, "title": "Transaction order dependence", "type": "Warning"}, {"address": 5039, "code": "       \n       \n        gamevar.multiplier =uin", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/7/0xdef439cb500cfba0b66d29592776cb2df40c1cf1.sol", "function": "BuyName(bytes32)", "lineno": 878, "title": "Message call to external contract", "type": "Informational"}, {"address": 5039, "code": "       \n       \n        gamevar.multiplier =uin", "debug": "", "description": "A possible transaction order independence vulnerability exists in function BuyName(bytes32). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/7/0xdef439cb500cfba0b66d29592776cb2df40c1cf1.sol", "function": "BuyName(bytes32)", "lineno": 878, "title": "Transaction order dependence", "type": "Warning"}, {"address": 5132, "code": "rePrice);\n   \n        CoreBuyTorpedo( _cust", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/7/0xdef439cb500cfba0b66d29592776cb2df40c1cf1.sol", "function": "BuyName(bytes32)", "lineno": 880, "title": "State change after external call", "type": "Warning"}], "success": true}