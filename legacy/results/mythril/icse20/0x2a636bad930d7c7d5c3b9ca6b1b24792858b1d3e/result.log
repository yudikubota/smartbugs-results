{"error": null, "issues": [{"address": 1093, "code": "    require(_accountAddresses.length == _levels.length && _accountAddresses.length == _limits.length);\n\n        for (uint cnt = 0; cnt < _accountAddresses.length; cnt++) {\n\n            accounts[_accountAddresses[cnt]].active = true;\n            accounts[_accountAddresses[cnt]].level = _levels[cnt];\n            accounts[_accountAddresses[cnt]].limit = _limits[cnt];\n\n            if (!accounts[_accountAddresses[cnt]].wasActive) {\n                accounts[_accountAddresses[cnt]].wasActive = true;\n                accountIds[accountslength] = _accountAddresses[cnt];\n                accountslength++;\n            }\n        }\n    }\n\n    //\n    // @public asks about account loyalty level for the account\n    // @param _accountAddress address to get data for\n ", "debug": "calldata_PriorityPassContract_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_PriorityPassContract_0: 0x9453b95d00000000000000000000000000000000000000000000000000000000\ncalldatasize_PriorityPassContract: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `_function_0x9453b95d`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/14/0x2a636bad930d7c7d5c3b9ca6b1b24792858b1d3e.sol", "function": "_function_0x9453b95d", "lineno": 115, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2230, "code": "\n        _;\n    }\n\n    func", "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_PriorityPassContract_0: 0x63385ad100000000000000000000000000000000000000000000000000000000\ncalldatasize_PriorityPassContract: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/14/0x2a636bad930d7c7d5c3b9ca6b1b24792858b1d3e.sol", "function": "addNewAccount(address,uint256,uint256)", "lineno": 29, "title": "Exception state", "type": "Informational"}, {"address": 2830, "code": "ar account\n    /", "debug": "storage_2: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_3 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_PriorityPassContract_4: 0x0\nstorage_0 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_PriorityPassContract_4: 0x0\nstorage_0: 0x0\ncaller: 0x0\ncalldata_PriorityPassContract_0: 0x63385ad100000000000000000000000000000000000000000000000000000000\ncalldatasize_PriorityPassContract: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `addNewAccount(address,uint256,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/14/0x2a636bad930d7c7d5c3b9ca6b1b24792858b1d3e.sol", "function": "addNewAccount(address,uint256,uint256)", "lineno": 87, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2928, "code": "\n        _;\n    }\n\n    func", "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_PriorityPassContract_0: 0x7037602a00000000000000000000000000000000000000000000000000000000\ncalldatasize_PriorityPassContract: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/14/0x2a636bad930d7c7d5c3b9ca6b1b24792858b1d3e.sol", "function": "setAccountData(address,uint256,uint256)", "lineno": 29, "title": "Exception state", "type": "Informational"}, {"address": 3769, "code": "\n        _;\n    }\n\n    func", "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_PriorityPassContract_0: 0x9453b95d00000000000000000000000000000000000000000000000000000000\ncalldatasize_PriorityPassContract: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/14/0x2a636bad930d7c7d5c3b9ca6b1b24792858b1d3e.sol", "function": "_function_0x9453b95d", "lineno": 29, "title": "Exception state", "type": "Informational"}, {"address": 4730, "code": "\n        _;\n    }\n\n    func", "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_PriorityPassContract_0: 0xde14e54d00000000000000000000000000000000000000000000000000000000\ncalldatasize_PriorityPassContract: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/14/0x2a636bad930d7c7d5c3b9ca6b1b24792858b1d3e.sol", "function": "setActivity(address,bool)", "lineno": 29, "title": "Exception state", "type": "Informational"}, {"address": 4912, "code": "\n        _;\n    }\n\n    func", "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_PriorityPassContract_0: 0xf2fde38b00000000000000000000000000000000000000000000000000000000\ncalldatasize_PriorityPassContract: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/14/0x2a636bad930d7c7d5c3b9ca6b1b24792858b1d3e.sol", "function": "transferOwnership(address)", "lineno": 29, "title": "Exception state", "type": "Informational"}], "success": true}