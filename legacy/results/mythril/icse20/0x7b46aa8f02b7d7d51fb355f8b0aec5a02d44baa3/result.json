{
  "contract": "0x7b46aa8f02b7d7d51fb355f8b0aec5a02d44baa3",
  "tool": "mythril",
  "start": 1563663802.010158,
  "end": 1563664120.4455557,
  "duration": 318.4353976249695,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 2164,
        "code": "  balances[_to] += _va",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TestCoin_32_+_4: 0xc050fffff320c00020003d81af848540000000000000040000110001bd062022\ncalldata_TestCoin_32 + 36: 0xfe51000008ce80008001c1d33616877ffffffffffffff7ffffe10000398d50ac\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xfe51000008ce80008001c1d33616877ffffffffffffff7ffffe10000398d50ac\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TestCoin_4: 0xfe51000008ce80008001c1d33616877ffffffffffffff7ffffe10000398d50ac\ncalldata_TestCoin_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_TestCoin_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_TestCoin: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `transferFrom(address,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/33/0x7b46aa8f02b7d7d51fb355f8b0aec5a02d44baa3.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 54,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2761,
        "code": ");\n        return true;\n ",
        "debug": "storage_4: 0x3d\ncalldata_TestCoin_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_2: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_TestCoin_0: 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000\ncalldatasize_TestCoin: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer underflow exists in the function `withdraw(uint256)`.\nThe subtraction may result in a value < 0.",
        "filename": "/unique_chucks/33/0x7b46aa8f02b7d7d51fb355f8b0aec5a02d44baa3.sol",
        "function": "withdraw(uint256)",
        "lineno": 175,
        "title": "Integer Underflow",
        "type": "Warning"
      },
      {
        "address": 2871,
        "code": "y 2%\n    function checkP",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2942\n",
        "filename": "/unique_chucks/33/0x7b46aa8f02b7d7d51fb355f8b0aec5a02d44baa3.sol",
        "function": "withdraw(uint256)",
        "lineno": 181,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 2871,
        "code": "y 2%\n    function checkP",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function withdraw(uint256). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/33/0x7b46aa8f02b7d7d51fb355f8b0aec5a02d44baa3.sol",
        "function": "withdraw(uint256)",
        "lineno": 181,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 2942,
        "code": "ic returns (uint256)\n    {\n    ",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function withdraw(uint256). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/33/0x7b46aa8f02b7d7d51fb355f8b0aec5a02d44baa3.sol",
        "function": "withdraw(uint256)",
        "lineno": 182,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 3110,
        "code": "    /// @dev Contract ",
        "debug": "timestamp: 0x0\nstorage_4: 0x1\ncalldata_TestCoin_0: 0xb60d428800000000000000000000000000000000000000000000000000000000\ncalldatasize_TestCoin: 0x4\n",
        "description": "A possible integer underflow exists in the function `fund()`.\nThe subtraction may result in a value < 0.",
        "filename": "/unique_chucks/33/0x7b46aa8f02b7d7d51fb355f8b0aec5a02d44baa3.sol",
        "function": "fund()",
        "lineno": 192,
        "title": "Integer Underflow",
        "type": "Warning"
      },
      {
        "address": 3117,
        "code": "ction sets initial token ",
        "debug": "timestamp: 0x0\nstorage_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_TestCoin_0: 0xb60d428800000000000000000000000000000000000000000000000000000000\ncalldatasize_TestCoin: 0x4\n",
        "description": "A possible integer underflow exists in the function `fund()`.\nThe subtraction may result in a value < 0.",
        "filename": "/unique_chucks/33/0x7b46aa8f02b7d7d51fb355f8b0aec5a02d44baa3.sol",
        "function": "fund()",
        "lineno": 192,
        "title": "Integer Underflow",
        "type": "Warning"
      },
      {
        "address": 3498,
        "code": "o]) {\n            bala",
        "debug": "calldata_TestCoin_32 + 4: 0xc290137095b13347e55005a6dc184559e0489f1233480050d0fb4bba17d34179\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TestCoin_4: 0x9c9efb7ae5acd378025256a3945f5859076e809243093d9ecae2636c9fd28979\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xc290137095b13347e55005a6dc184559e0489f1233480050d0fb4bba17d34179\ncalldata_TestCoin_4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_TestCoin_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncalldatasize_TestCoin: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `transfer(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/33/0x7b46aa8f02b7d7d51fb355f8b0aec5a02d44baa3.sol",
        "function": "transfer(address,uint256)",
        "lineno": 37,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 3804,
        "code": "   totalSupply +=",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_4: 0x0\ncalldata_TestCoin_0: 0xb60d428800000000000000000000000000000000000000000000000000000000\ncalldatasize_TestCoin: 0x4\nstorage_3: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/33/0x7b46aa8f02b7d7d51fb355f8b0aec5a02d44baa3.sol",
        "function": "fund()",
        "lineno": 155,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}