{
  "contract": "0x8b4519ed0d21c10f89dad11ba2ce0641aea211c9",
  "tool": "mythril",
  "start": 1563584831.813747,
  "end": 1563585097.7669742,
  "duration": 265.95322728157043,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 1507,
        "code": " @dev transfer token for a specified address",
        "debug": "The exception is triggered under the following conditions:\n\ncalldatasize_StandardToken: 0x4\ncalldata_StandardToken_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/18/0x8b4519ed0d21c10f89dad11ba2ce0641aea211c9.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 83,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2531,
        "code": "    require(balances[",
        "debug": "storage_7: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1c0f00\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ntimestamp: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1c0f00\nstorage_5: 0x0\ncaller: 0x0\nstorage_3: 0xff00\ncalldata_StandardToken_32 + 4: 0x0\ncalldata_StandardToken_4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_StandardToken_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncalldatasize_StandardToken: 0x44\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `transfer(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/18/0x8b4519ed0d21c10f89dad11ba2ce0641aea211c9.sol",
        "function": "transfer(address,uint256)",
        "lineno": 116,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2549,
        "code": "dTeam.mul(95).div(100",
        "debug": "storage_7: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff800800\ntimestamp: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdffdfe\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\nstorage_5: 0x0\ncaller: 0x0\nstorage_3: 0xff00\ncalldata_StandardToken_32 + 4: 0x0\ncalldata_StandardToken_4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_StandardToken_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncalldatasize_StandardToken: 0x44\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `transfer(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/18/0x8b4519ed0d21c10f89dad11ba2ce0641aea211c9.sol",
        "function": "transfer(address,uint256)",
        "lineno": 116,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2742,
        "code": "require(balances[addr",
        "debug": "storage_7: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffe9ffe00\ntimestamp: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9feffe\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\nstorage_5: 0x0\ncaller: 0x0\nstorage_3: 0xff00\ncalldata_StandardToken_32 + 4: 0x0\ncalldata_StandardToken_4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_StandardToken_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncalldatasize_StandardToken: 0x44\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `transfer(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/18/0x8b4519ed0d21c10f89dad11ba2ce0641aea211c9.sol",
        "function": "transfer(address,uint256)",
        "lineno": 120,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2760,
        "code": "m.mul(85).div(100));\n",
        "debug": "storage_7: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff200001\ncalldata_StandardToken_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa1fe08\ncalldata_StandardToken_0: 0x5603a50d00000000000000000000000000000000000000000000000000000000\ncalldatasize_StandardToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `checkVesting(uint256,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/18/0x8b4519ed0d21c10f89dad11ba2ce0641aea211c9.sol",
        "function": "checkVesting(uint256,uint256)",
        "lineno": 120,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2953,
        "code": "uire(balances[address",
        "debug": "storage_7: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffe000400\ncalldata_StandardToken_32 + 4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdfe\ncalldata_StandardToken_0: 0x5603a50d00000000000000000000000000000000000000000000000000000000\ncalldatasize_StandardToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `checkVesting(uint256,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/18/0x8b4519ed0d21c10f89dad11ba2ce0641aea211c9.sol",
        "function": "checkVesting(uint256,uint256)",
        "lineno": 124,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2971,
        "code": "ul(65).div(100));\n    ",
        "debug": "storage_7: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe03c00\ncalldata_StandardToken_32 + 4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00efe\ncalldata_StandardToken_0: 0x5603a50d00000000000000000000000000000000000000000000000000000000\ncalldatasize_StandardToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `checkVesting(uint256,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/18/0x8b4519ed0d21c10f89dad11ba2ce0641aea211c9.sol",
        "function": "checkVesting(uint256,uint256)",
        "lineno": 124,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 3164,
        "code": "e(balances[addressFund",
        "debug": "storage_7: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff201d00\ncalldata_StandardToken_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff77fe18\ncalldata_StandardToken_0: 0x5603a50d00000000000000000000000000000000000000000000000000000000\ncalldatasize_StandardToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `checkVesting(uint256,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/18/0x8b4519ed0d21c10f89dad11ba2ce0641aea211c9.sol",
        "function": "checkVesting(uint256,uint256)",
        "lineno": 128,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 3182,
        "code": "5).div(100));\n        ",
        "debug": "storage_7: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820700\ncalldata_StandardToken_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffeff7fe\ncalldata_StandardToken_0: 0x5603a50d00000000000000000000000000000000000000000000000000000000\ncalldatasize_StandardToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `checkVesting(uint256,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/18/0x8b4519ed0d21c10f89dad11ba2ce0641aea211c9.sol",
        "function": "checkVesting(uint256,uint256)",
        "lineno": 128,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 3375,
        "code": ";\n        }\n    }\n}\n\n\n",
        "debug": "storage_7: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff143c00\ncalldata_StandardToken_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff63ff34\ncalldata_StandardToken_0: 0x5603a50d00000000000000000000000000000000000000000000000000000000\ncalldatasize_StandardToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `checkVesting(uint256,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/18/0x8b4519ed0d21c10f89dad11ba2ce0641aea211c9.sol",
        "function": "checkVesting(uint256,uint256)",
        "lineno": 132,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 4316,
        "code": " @dev transfer token for a specified address",
        "debug": "The exception is triggered under the following conditions:\n\ncalldatasize_StandardToken: 0x4\ncalldata_StandardToken_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/18/0x8b4519ed0d21c10f89dad11ba2ce0641aea211c9.sol",
        "function": "transfer(address,uint256)",
        "lineno": 83,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 5557,
        "code": " @dev transfer token for a specified address",
        "debug": "The exception is triggered under the following conditions:\n\ncalldatasize_StandardToken: 0x4\ncalldata_StandardToken_0: 0xdd62ed3e00000000000000000000000000000000000000000000000000000000\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/18/0x8b4519ed0d21c10f89dad11ba2ce0641aea211c9.sol",
        "function": "allowance(address,address)",
        "lineno": 83,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 5705,
        "code": "      return a",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_7: 0x1200100\ncalldata_StandardToken_32 + 4: 0x21ffffe\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\nUDiv(storage_5,_256): 0x0\ncalldata_StandardToken_4: 0x1\ncalldata_StandardToken_0: 0x5603a50d00000000000000000000000000000000000000000000000000000000\ncalldatasize_StandardToken: 0x4\nstorage_6: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/18/0x8b4519ed0d21c10f89dad11ba2ce0641aea211c9.sol",
        "function": "checkVesting(uint256,uint256)",
        "lineno": 20,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 5723,
        "code": " >= a",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_StandardToken_4: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncalldata_StandardToken_32 + 4: 0x57f25cd000000000000000000000000000000000000000000000000000000000\ncalldata_StandardToken_0: 0xd73dd62300000000000000000000000000000000000000000000000000000000\ncalldatasize_StandardToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `increaseApproval(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/18/0x8b4519ed0d21c10f89dad11ba2ce0641aea211c9.sol",
        "function": "increaseApproval(address,uint256)",
        "lineno": 25,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 5736,
        "code": "return c;\n    ",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_StandardToken_4: 0x1\ncalldata_StandardToken_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_StandardToken_0: 0xd73dd62300000000000000000000000000000000000000000000000000000000\ncalldatasize_StandardToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/18/0x8b4519ed0d21c10f89dad11ba2ce0641aea211c9.sol",
        "function": "increaseApproval(address,uint256)",
        "lineno": 26,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}