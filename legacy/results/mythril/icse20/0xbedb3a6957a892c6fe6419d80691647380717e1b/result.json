{
  "contract": "0xbedb3a6957a892c6fe6419d80691647380717e1b",
  "tool": "mythril",
  "start": 1563745974.4361262,
  "end": 1563746031.0365827,
  "duration": 56.60045647621155,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 863,
        "code": "g.value);\n    }\n}",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/41/0xbedb3a6957a892c6fe6419d80691647380717e1b.sol",
        "function": "fallback",
        "lineno": 118,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 863,
        "code": "g.value);\n    }\n}",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1086\n",
        "filename": "/unique_chucks/41/0xbedb3a6957a892c6fe6419d80691647380717e1b.sol",
        "function": "fallback",
        "lineno": 118,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 863,
        "code": "g.value);\n    }\n}",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function fallback. The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/41/0xbedb3a6957a892c6fe6419d80691647380717e1b.sol",
        "function": "fallback",
        "lineno": 118,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 1086,
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function fallback. The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/41/0xbedb3a6957a892c6fe6419d80691647380717e1b.sol",
        "function": "fallback",
        "lineno": 120,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 2551,
        "code": " _price) isCre",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_Token_4: 0x0\nstorage_4: 0x0\nstorage_1: 0x0\ncaller: 0x0\ncalldata_Token_0: 0x22ec93600000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/41/0xbedb3a6957a892c6fe6419d80691647380717e1b.sol",
        "function": "updatePeriod(uint256,uint256)",
        "lineno": 72,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3486,
        "code": "       selfdestruct(owner);\n    }",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/41/0xbedb3a6957a892c6fe6419d80691647380717e1b.sol",
        "function": "sendToken(address,uint256)",
        "lineno": 93,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 3486,
        "code": "       selfdestruct(owner);\n    }",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function sendToken(address,uint256). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/41/0xbedb3a6957a892c6fe6419d80691647380717e1b.sol",
        "function": "sendToken(address,uint256)",
        "lineno": 93,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 4011,
        "code": ";\n\ninterface Token",
        "debug": "storage_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_1: 0x0\ncaller: 0x0\ncalldata_Token_0: 0x7df68a8b00000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `addPeriod(uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/41/0xbedb3a6957a892c6fe6419d80691647380717e1b.sol",
        "function": "addPeriod(uint256)",
        "lineno": 1,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 4155,
        "code": "uint256 _peri",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_Token_4: 0x0\nstorage_3: 0x0\nstorage_1: 0x0\ncaller: 0x0\ncalldata_Token_0: 0x82367b2d00000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/41/0xbedb3a6957a892c6fe6419d80691647380717e1b.sol",
        "function": "updatePrice(uint256,uint256)",
        "lineno": 64,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}