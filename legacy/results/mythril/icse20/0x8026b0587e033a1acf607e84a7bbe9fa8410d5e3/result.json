{
  "contract": "0x8026b0587e033a1acf607e84a7bbe9fa8410d5e3",
  "tool": "mythril",
  "start": 1563829097.1457825,
  "end": 1563829117.849167,
  "duration": 20.70338463783264,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 676,
        "code": " = 70 * (10**24);\n\tuint256 private Partne",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_4: 0x8000\ncalldata_TokenSale_0: 0xc3f6acf00000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenSale: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/30/0x8026b0587e033a1acf607e84a7bbe9fa8410d5e3.sol",
        "function": "_function_0x0c3f6acf",
        "lineno": 237,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2289,
        "code": " {\n\t    require(currentState ",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_4: 0x8000\ncalldata_TokenSale_0: 0x4e23176c00000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenSale: 0x4\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/30/0x8026b0587e033a1acf607e84a7bbe9fa8410d5e3.sol",
        "function": "buyRBCTokens()",
        "lineno": 258,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3951,
        "code": "nlyOwner {\n\t    currentState",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_4: 0x8000\ncaller: 0x0\nstorage_2: 0x0\ncalldata_TokenSale_0: 0x56de96db00000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenSale: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/30/0x8026b0587e033a1acf607e84a7bbe9fa8410d5e3.sol",
        "function": "_function_0x56de96db",
        "lineno": 272,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 7097,
        "code": "turn x * y;\n  }\n  \n  \n   func",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_4: 0x0\ncallvalue: 0x18725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f22\nstorage_11: 0x0\nstorage_8: 0x1\ncalldatasize_TokenSale: 0x3\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/30/0x8026b0587e033a1acf607e84a7bbe9fa8410d5e3.sol",
        "function": "fallback",
        "lineno": 39,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 7123,
        "code": "strac",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_4: 0x0\ncallvalue: 0x65afe700000000000\nstorage_11: 0x0\nstorage_8: 0x1\ncalldatasize_TokenSale: 0x3\nstorage_5: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/30/0x8026b0587e033a1acf607e84a7bbe9fa8410d5e3.sol",
        "function": "fallback",
        "lineno": 51,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}