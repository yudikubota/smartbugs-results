{
  "contract": "0x35d672846d18e8a8ca6e036cb85828d38c9d7fa0",
  "tool": "mythril",
  "start": 1563723577.1282547,
  "end": 1563723601.4341228,
  "duration": 24.30586814880371,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 1165,
        "code": "y) {\n          uint256 MAX_UINT = 2 ** 256 - 1;\n      ",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/38/0x35d672846d18e8a8ca6e036cb85828d38c9d7fa0.sol",
        "function": "sellToken(address,address,uint256,uint256,uint256)",
        "lineno": 88,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 1165,
        "code": "y) {\n          uint256 MAX_UINT = 2 ** 256 - 1;\n      ",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2542\nCall at address: 2320\nCall at address: 2125\nCall at address: 1823\nCall at address: 2320\nCall at address: 2125\nCall at address: 1823\nCall at address: 1432\n",
        "filename": "/unique_chucks/38/0x35d672846d18e8a8ca6e036cb85828d38c9d7fa0.sol",
        "function": "sellToken(address,address,uint256,uint256,uint256)",
        "lineno": 88,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 1432,
        "code": "require(ERC20(tokenAddress).transferFrom(msg.sender, t",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/38/0x35d672846d18e8a8ca6e036cb85828d38c9d7fa0.sol",
        "function": "sellToken(address,address,uint256,uint256,uint256)",
        "lineno": 92,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 1432,
        "code": "require(ERC20(tokenAddress).transferFrom(msg.sender, t",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2320\nCall at address: 2125\nCall at address: 1823\n",
        "filename": "/unique_chucks/38/0x35d672846d18e8a8ca6e036cb85828d38c9d7fa0.sol",
        "function": "sellToken(address,address,uint256,uint256,uint256)",
        "lineno": 92,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 1823,
        "code": "   uint256 ethBought = UNISWAP(exchangeAddress).tokenToEthSw",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/38/0x35d672846d18e8a8ca6e036cb85828d38c9d7fa0.sol",
        "function": "sellToken(address,address,uint256,uint256,uint256)",
        "lineno": 93,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 1823,
        "code": "   uint256 ethBought = UNISWAP(exchangeAddress).tokenToEthSw",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2320\nCall at address: 2125\n",
        "filename": "/unique_chucks/38/0x35d672846d18e8a8ca6e036cb85828d38c9d7fa0.sol",
        "function": "sellToken(address,address,uint256,uint256,uint256)",
        "lineno": 93,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 2125,
        "code": "ethAddress).deposit.value(ethBought)();\n      WETH(wethAddress).transfer(msg.s",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/38/0x35d672846d18e8a8ca6e036cb85828d38c9d7fa0.sol",
        "function": "sellToken(address,address,uint256,uint256,uint256)",
        "lineno": 94,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 2125,
        "code": "ethAddress).deposit.value(ethBought)();\n      WETH(wethAddress).transfer(msg.s",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2320\n",
        "filename": "/unique_chucks/38/0x35d672846d18e8a8ca6e036cb85828d38c9d7fa0.sol",
        "function": "sellToken(address,address,uint256,uint256,uint256)",
        "lineno": 94,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 2320,
        "code": "hBought);\n    }\n}",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/38/0x35d672846d18e8a8ca6e036cb85828d38c9d7fa0.sol",
        "function": "sellToken(address,address,uint256,uint256,uint256)",
        "lineno": 95,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 2320,
        "code": "hBought);\n    }\n}",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2542\n",
        "filename": "/unique_chucks/38/0x35d672846d18e8a8ca6e036cb85828d38c9d7fa0.sol",
        "function": "sellToken(address,address,uint256,uint256,uint256)",
        "lineno": 95,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 2542,
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/38/0x35d672846d18e8a8ca6e036cb85828d38c9d7fa0.sol",
        "function": "sellToken(address,address,uint256,uint256,uint256)",
        "lineno": 97,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 3079,
        "code": "\n\n    function buyToken(address toke",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/38/0x35d672846d18e8a8ca6e036cb85828d38c9d7fa0.sol",
        "function": "withdrawToken(address,uint256)",
        "lineno": 71,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 3532,
        "code": "ess token, uint256 amo",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function withdrawETH(uint256). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/38/0x35d672846d18e8a8ca6e036cb85828d38c9d7fa0.sol",
        "function": "withdrawETH(uint256)",
        "lineno": 66,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 4326,
        "code": "led\");\n      WETH(wethAddress).withdraw(ethPay);\n      u",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/38/0x35d672846d18e8a8ca6e036cb85828d38c9d7fa0.sol",
        "function": "buyToken(address,address,uint256,uint256,uint256)",
        "lineno": 77,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 4326,
        "code": "led\");\n      WETH(wethAddress).withdraw(ethPay);\n      u",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 5047\nCall at address: 4789\nCall at address: 4646\n",
        "filename": "/unique_chucks/38/0x35d672846d18e8a8ca6e036cb85828d38c9d7fa0.sol",
        "function": "buyToken(address,address,uint256,uint256,uint256)",
        "lineno": 77,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 4646,
        "code": "ngeAddress).ethToTokenSwapInput.va",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/38/0x35d672846d18e8a8ca6e036cb85828d38c9d7fa0.sol",
        "function": "buyToken(address,address,uint256,uint256,uint256)",
        "lineno": 79,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 4646,
        "code": "ngeAddress).ethToTokenSwapInput.va",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 5047\nCall at address: 4789\n",
        "filename": "/unique_chucks/38/0x35d672846d18e8a8ca6e036cb85828d38c9d7fa0.sol",
        "function": "buyToken(address,address,uint256,uint256,uint256)",
        "lineno": 79,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 4789,
        "code": "dline);\n      ERC20(tokenAddress).transfer(owner, tokenBought);\n    }\n\n    function ",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/38/0x35d672846d18e8a8ca6e036cb85828d38c9d7fa0.sol",
        "function": "buyToken(address,address,uint256,uint256,uint256)",
        "lineno": 79,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 4789,
        "code": "dline);\n      ERC20(tokenAddress).transfer(owner, tokenBought);\n    }\n\n    function ",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 5047\n",
        "filename": "/unique_chucks/38/0x35d672846d18e8a8ca6e036cb85828d38c9d7fa0.sol",
        "function": "buyToken(address,address,uint256,uint256,uint256)",
        "lineno": 79,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 5047,
        "code": "(address tokenAddress, address exchangeAddress,u",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/38/0x35d672846d18e8a8ca6e036cb85828d38c9d7fa0.sol",
        "function": "buyToken(address,address,uint256,uint256,uint256)",
        "lineno": 83,
        "title": "Message call to external contract",
        "type": "Warning"
      }
    ],
    "success": true
  }
}