{"error": null, "issues": [{"address": 887, "code": " ///@notice Returns the sum of supplied values.\n  ///@param _values The collection of values to create the sum from.\n  function sumOf(uint256[] _values) private pure returns(uint256) {\n    uint256 total = 0;\n\n    for (uint256 i = 0; i < _values.length; i++) {\n      total = total.add(_values[i]);\n    }\n\n    return total;\n  }\n}\n/*\nCopyright 2018 Binod Nirvan\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n    http://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\ndistr", "debug": "calldata_xCryptToken_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_xCryptToken_0: 0x153a1f3e00000000000000000000000000000000000000000000000000000000\ncalldatasize_xCryptToken: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `bulkTransfer(address[],uint256[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/7/0xd2bb16cf38ca086cab5128d5c25de9477ebd596b.sol", "function": "bulkTransfer(address[],uint256[])", "lineno": 656, "title": "Integer Overflow ", "type": "Warning"}, {"address": 6735, "code": "mins\n///to lock token", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/7/0xd2bb16cf38ca086cab5128d5c25de9477ebd596b.sol", "function": "reclaimToken(address)", "lineno": 776, "title": "Message call to external contract", "type": "Warning"}, {"address": 6735, "code": "mins\n///to lock token", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 18798\n", "filename": "/unique_chucks/7/0xd2bb16cf38ca086cab5128d5c25de9477ebd596b.sol", "function": "reclaimToken(address)", "lineno": 776, "title": "Multiple Calls", "type": "Information"}, {"address": 18798, "code": "ner.\n  function reclaimEther", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/7/0xd2bb16cf38ca086cab5128d5c25de9477ebd596b.sol", "function": "reclaimToken(address)", "lineno": 740, "title": "Message call to external contract", "type": "Warning"}], "success": true}