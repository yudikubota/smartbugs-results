{
  "contract": "0x0920b6fa89cc70475c9725cf29169437131217d5",
  "tool": "mythril",
  "start": 1563706475.4255452,
  "end": 1563706492.1988978,
  "duration": 16.77335262298584,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 118,
        "code": " > 0 ether && msg.value < 10 ether);\n        _;\n   ",
        "debug": "The exception is triggered under the following conditions:\n\ncallvalue: 0x8ac7230489e80000\ncalldata_TwoUp_0: 0x200000000000000000000000000000000000000000000000000000000\ncalldatasize_TwoUp: 0x4\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/39/0x0920b6fa89cc70475c9725cf29169437131217d5.sol",
        "function": "fallback",
        "lineno": 17,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 305,
        "code": "tAmount);\n                if ((msg.value-_",
        "debug": "SOLVER OUTPUT:\ncallvalue: 0x800000000000000\nkeccac_79228162514264337593543950336*\nConcat(0,_Extract(167,_8,_storage_0)): 0x0\nkeccac_79228162514264337593543950336*\nConcat(0,_Extract(159,_0,_caller)): 0x0\nstorage_1: 0x7ffffffffffffff\nstorage_2: 0xff00\ncalldata_TwoUp_0: 0x200000000000000000000000000000000000000000000000000000000\ncalldatasize_TwoUp: 0x4\n",
        "description": "In the function `fallback` a non-zero amount of Ether is sent to an address taken from storage slot 0.\nThere is a check on storage index 0. This storage slot can be written to by calling the function `fallback`.\n\nThere is a check on storage index 2. This storage slot can be written to by calling the function `fallback`.\nThere is a check on storage index 1. This storage slot can be written to by calling the function `fallback`.\nThere is a check on storage index 0. This storage slot can be written to by calling the function `fallback`.",
        "filename": "/unique_chucks/39/0x0920b6fa89cc70475c9725cf29169437131217d5.sol",
        "function": "fallback",
        "lineno": 35,
        "title": "Ether send",
        "type": "Warning"
      },
      {
        "address": 305,
        "code": "tAmount);\n                if ((msg.value-_",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 389\n",
        "filename": "/unique_chucks/39/0x0920b6fa89cc70475c9725cf29169437131217d5.sol",
        "function": "fallback",
        "lineno": 35,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 305,
        "code": "tAmount);\n                if ((msg.value-_",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function fallback. The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/39/0x0920b6fa89cc70475c9725cf29169437131217d5.sol",
        "function": "fallback",
        "lineno": 35,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 389,
        "code": "t);\n            } else {\n             ",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function fallback. The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/39/0x0920b6fa89cc70475c9725cf29169437131217d5.sol",
        "function": "fallback",
        "lineno": 37,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 468,
        "code": ";\n                if ((puntAmount-_pay",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 589\n",
        "filename": "/unique_chucks/39/0x0920b6fa89cc70475c9725cf29169437131217d5.sol",
        "function": "fallback",
        "lineno": 39,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 468,
        "code": ";\n                if ((puntAmount-_pay",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function fallback. The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/39/0x0920b6fa89cc70475c9725cf29169437131217d5.sol",
        "function": "fallback",
        "lineno": 39,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 589,
        "code": "t);\n            }\n            punterWaitin",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function fallback. The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/39/0x0920b6fa89cc70475c9725cf29169437131217d5.sol",
        "function": "fallback",
        "lineno": 41,
        "title": "Transaction order dependence",
        "type": "Warning"
      }
    ],
    "success": true
  }
}