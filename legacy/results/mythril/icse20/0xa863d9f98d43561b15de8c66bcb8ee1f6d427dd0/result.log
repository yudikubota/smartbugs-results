{"error": null, "issues": [{"address": 3558, "code": "t yet set\");\n        return db.getIntArray(keccak256(abi.encodePacked('oracles', pro", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/24/0xa863d9f98d43561b15de8c66bcb8ee1f6d427dd0.sol", "function": "getProviderCurve(address,bytes32)", "lineno": 272, "title": "Message call to external contract", "type": "Informational"}, {"address": 3558, "code": "t yet set\");\n        return db.getIntArray(keccak256(abi.encodePacked('oracles', pro", "debug": "", "description": "A possible transaction order independence vulnerability exists in function getProviderCurve(address,bytes32). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/24/0xa863d9f98d43561b15de8c66bcb8ee1f6d427dd0.sol", "function": "getProviderCurve(address,bytes32)", "lineno": 272, "title": "Transaction order dependence", "type": "Warning"}, {"address": 7329, "code": "dex);\n    }\n\n    /// @dev get all oracle addresses\n    function getAllOracles() external v", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/24/0xa863d9f98d43561b15de8c66bcb8ee1f6d427dd0.sol", "function": "getCurveUnset(address,bytes32)", "lineno": 315, "title": "Message call to external contract", "type": "Informational"}, {"address": 7329, "code": "dex);\n    }\n\n    /// @dev get all oracle addresses\n    function getAllOracles() external v", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3558\n", "filename": "/unique_chucks/24/0xa863d9f98d43561b15de8c66bcb8ee1f6d427dd0.sol", "function": "getProviderCurve(address,bytes32)", "lineno": 315, "title": "Multiple Calls", "type": "Information"}, {"address": 7329, "code": "dex);\n    }\n\n    /// @dev get all oracle addresses\n    function getAllOracles() external v", "debug": "", "description": "A possible transaction order independence vulnerability exists in function getCurveUnset(address,bytes32). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/24/0xa863d9f98d43561b15de8c66bcb8ee1f6d427dd0.sol", "function": "getCurveUnset(address,bytes32)", "lineno": 315, "title": "Transaction order dependence", "type": "Warning"}, {"address": 9398, "code": "tBytes32(keccak256(abi.encodePacked('oracles', provider, \"titl", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/24/0xa863d9f98d43561b15de8c66bcb8ee1f6d427dd0.sol", "function": "getAllOracles()", "lineno": 326, "title": "Message call to external contract", "type": "Informational"}, {"address": 9398, "code": "tBytes32(keccak256(abi.encodePacked('oracles', provider, \"titl", "debug": "", "description": "A possible transaction order independence vulnerability exists in function getAllOracles(). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/24/0xa863d9f98d43561b15de8c66bcb8ee1f6d427dd0.sol", "function": "getAllOracles()", "lineno": 326, "title": "Transaction order dependence", "type": "Warning"}, {"address": 10178, "code": "\n\n    /// @dev get the endpoints of a provider\n    function getProviderEndp", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/24/0xa863d9f98d43561b15de8c66bcb8ee1f6d427dd0.sol", "function": "getPublicKey(address)", "lineno": 292, "title": "Message call to external contract", "type": "Informational"}, {"address": 10178, "code": "\n\n    /// @dev get the endpoints of a provider\n    function getProviderEndp", "debug": "", "description": "A possible transaction order independence vulnerability exists in function getPublicKey(address). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/24/0xa863d9f98d43561b15de8c66bcb8ee1f6d427dd0.sol", "function": "getPublicKey(address)", "lineno": 292, "title": "Transaction order dependence", "type": "Warning"}, {"address": 11325, "code": "    function createOracle(address provider, uint256 publicKey, bytes32 tit", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/24/0xa863d9f98d43561b15de8c66bcb8ee1f6d427dd0.sol", "function": "getOracleAddress(uint256)", "lineno": 324, "title": "Message call to external contract", "type": "Informational"}, {"address": 11325, "code": "    function createOracle(address provider, uint256 publicKey, bytes32 tit", "debug": "", "description": "A possible transaction order independence vulnerability exists in function getOracleAddress(uint256). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/24/0xa863d9f98d43561b15de8c66bcb8ee1f6d427dd0.sol", "function": "getOracleAddress(uint256)", "lineno": 324, "title": "Transaction order dependence", "type": "Warning"}, {"address": 14249, "code": ", \"endpoints\")));\n    }\n\n    /// @dev get all endpoint params\n    functi", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/24/0xa863d9f98d43561b15de8c66bcb8ee1f6d427dd0.sol", "function": "setProviderParameter(bytes32,bytes)", "lineno": 296, "title": "Message call to external contract", "type": "Informational"}, {"address": 14249, "code": ", \"endpoints\")));\n    }\n\n    /// @dev get all endpoint params\n    functi", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 7329\n", "filename": "/unique_chucks/24/0xa863d9f98d43561b15de8c66bcb8ee1f6d427dd0.sol", "function": "initiateProviderCurve(bytes32,int256[],address)", "lineno": 296, "title": "Multiple Calls", "type": "Information"}, {"address": 14249, "code": ", \"endpoints\")));\n    }\n\n    /// @dev get all endpoint params\n    functi", "debug": "", "description": "A possible transaction order independence vulnerability exists in function setProviderParameter(bytes32,bytes). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/24/0xa863d9f98d43561b15de8c66bcb8ee1f6d427dd0.sol", "function": "setProviderParameter(bytes32,bytes)", "lineno": 296, "title": "Transaction order dependence", "type": "Warning"}, {"address": 16872, "code": "pping exists, Oracle object is crea", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/24/0xa863d9f98d43561b15de8c66bcb8ee1f6d427dd0.sol", "function": "updateDependencies()", "lineno": 166, "title": "Message call to external contract", "type": "Informational"}, {"address": 16994, "code": " @param publicKey unique id for provide", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/24/0xa863d9f98d43561b15de8c66bcb8ee1f6d427dd0.sol", "function": "updateDependencies()", "lineno": 167, "title": "State change after external call", "type": "Warning"}], "success": true}