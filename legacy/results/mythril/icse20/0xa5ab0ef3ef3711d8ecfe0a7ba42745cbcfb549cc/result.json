{
  "contract": "0xa5ab0ef3ef3711d8ecfe0a7ba42745cbcfb549cc",
  "tool": "mythril",
  "start": 1563659772.5249302,
  "end": 1563659790.9607446,
  "duration": 18.435814380645752,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 831,
        "code": "nder] = false;\n    }\n\n    fu",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncalldata_TokenPool_0: 0x50963bc400000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenPool: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/30/0xa5ab0ef3ef3711d8ecfe0a7ba42745cbcfb549cc.sol",
        "function": "returnTokensTo(address)",
        "lineno": 230,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 1087,
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/30/0xa5ab0ef3ef3711d8ecfe0a7ba42745cbcfb549cc.sol",
        "function": "returnTokensTo(address)",
        "lineno": 266,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 1087,
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1279\n",
        "filename": "/unique_chucks/30/0xa5ab0ef3ef3711d8ecfe0a7ba42745cbcfb549cc.sol",
        "function": "returnTokensTo(address)",
        "lineno": 266,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 1279,
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/30/0xa5ab0ef3ef3711d8ecfe0a7ba42745cbcfb549cc.sol",
        "function": "returnTokensTo(address)",
        "lineno": 266,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 1533,
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/30/0xa5ab0ef3ef3711d8ecfe0a7ba42745cbcfb549cc.sol",
        "function": "getTokenAmount()",
        "lineno": 266,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 1718,
        "code": "ewOwner != owner);\n        ",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_TokenPool_0: 0xa5e90eee00000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenPool: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/30/0xa5ab0ef3ef3711d8ecfe0a7ba42745cbcfb549cc.sol",
        "function": "setManager(address,bool)",
        "lineno": 200,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2005,
        "code": "nder] = false;\n    }\n\n    fu",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncalldata_TokenPool_0: 0xd8e09dac00000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenPool: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/30/0xa5ab0ef3ef3711d8ecfe0a7ba42745cbcfb549cc.sol",
        "function": "setTrustee(address,bool)",
        "lineno": 230,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2267,
        "code": "**@dev Returns all to",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/30/0xa5ab0ef3ef3711d8ecfe0a7ba42745cbcfb549cc.sol",
        "function": "setTrustee(address,bool)",
        "lineno": 262,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 2267,
        "code": "**@dev Returns all to",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2459\n",
        "filename": "/unique_chucks/30/0xa5ab0ef3ef3711d8ecfe0a7ba42745cbcfb549cc.sol",
        "function": "setTrustee(address,bool)",
        "lineno": 262,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 2459,
        "code": "eOf(this);\n    }\n\n    /**@dev Returns all tok",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/30/0xa5ab0ef3ef3711d8ecfe0a7ba42745cbcfb549cc.sol",
        "function": "setTrustee(address,bool)",
        "lineno": 259,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 2722,
        "code": " returnTokensTo(address t",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/30/0xa5ab0ef3ef3711d8ecfe0a7ba42745cbcfb549cc.sol",
        "function": "setTrustee(address,bool)",
        "lineno": 263,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 2871,
        "code": "ewOwner != owner);\n        ",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_TokenPool_0: 0xf2fde38b00000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenPool: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/30/0xa5ab0ef3ef3711d8ecfe0a7ba42745cbcfb549cc.sol",
        "function": "transferOwnership(address)",
        "lineno": 200,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}