{"error": null, "issues": [{"address": 272, "code": "nder, amount / price);", "debug": "storage_2: 0x85869526cbd1e0c78782be1017b440b869b18662a03337e3dbdbcf5974ffee7d\ncallvalue: 0xf3a0eaaaf9cda4f3f6a2bf9f97ae8e70181d90903fbb31081b9b8f9258660c61\nstorage_9: 0x0\ncalldata_SOCTokenSale_0: 0x300000000000000000000000000000000000000000000000000000000\ncalldatasize_SOCTokenSale: 0x4\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/29/0x302ee98862a56ada967e7e61af3e3795d0d59712.sol", "function": "fallback", "lineno": 61, "title": "Integer Overflow ", "type": "Warning"}, {"address": 354, "code": "ue);\n    }\n\n  ", "debug": "The exception is triggered under the following conditions:\n\nstorage_9: 0x0\ncalldata_SOCTokenSale_0: 0x1cb3b2100000000000000000000000000000000000000000000000000000000\ncalldatasize_SOCTokenSale: 0x4\nstorage_4: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/29/0x302ee98862a56ada967e7e61af3e3795d0d59712.sol", "function": "fallback", "lineno": 62, "title": "Exception state", "type": "Informational"}, {"address": 492, "code": "ndTransfer(msg.sender, amount, true);\n    }\n\n   ", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/29/0x302ee98862a56ada967e7e61af3e3795d0d59712.sol", "function": "fallback", "lineno": 62, "title": "Message call to external contract", "type": "Informational"}, {"address": 2076, "code": "               } else {", "debug": "", "description": "In the function `safeWithdrawal()` the following predictable state variables are used to determine Ether recipient:\n- block.timestamp\n", "filename": "/unique_chucks/29/0x302ee98862a56ada967e7e61af3e3795d0d59712.sol", "function": "safeWithdrawal()", "lineno": 92, "title": "Dependence on predictable environment variable", "type": "Warning"}, {"address": 2076, "code": "               } else {", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2495\nCall at address: 2495\nCall at address: 2495\nCall at address: 2495\n", "filename": "/unique_chucks/29/0x302ee98862a56ada967e7e61af3e3795d0d59712.sol", "function": "safeWithdrawal()", "lineno": 92, "title": "Multiple Calls", "type": "Information"}, {"address": 2495, "code": "            } else {\n         ", "debug": "", "description": "In the function `safeWithdrawal()` the following predictable state variables are used to determine Ether recipient:\n- block.timestamp\n", "filename": "/unique_chucks/29/0x302ee98862a56ada967e7e61af3e3795d0d59712.sol", "function": "safeWithdrawal()", "lineno": 101, "title": "Dependence on predictable environment variable", "type": "Warning"}], "success": true}