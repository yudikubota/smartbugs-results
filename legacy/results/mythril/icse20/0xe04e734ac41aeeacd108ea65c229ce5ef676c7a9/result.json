{
  "contract": "0xe04e734ac41aeeacd108ea65c229ce5ef676c7a9",
  "tool": "mythril",
  "start": 1563670433.4889424,
  "end": 1563670713.6005347,
  "duration": 280.11159229278564,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 1461,
        "code": "unded the remainder, the actual contribution ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/35/0xe04e734ac41aeeacd108ea65c229ce5ef676c7a9.sol",
        "function": "fallback",
        "lineno": 277,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 1915,
        "code": "turns(uint tokenAmount, uin",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/35/0xe04e734ac41aeeacd108ea65c229ce5ef676c7a9.sol",
        "function": "withdrawTokensRemaining()",
        "lineno": 209,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 1915,
        "code": "turns(uint tokenAmount, uin",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2339\n",
        "filename": "/unique_chucks/35/0xe04e734ac41aeeacd108ea65c229ce5ef676c7a9.sol",
        "function": "withdrawTokensRemaining()",
        "lineno": 209,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 2339,
        "code": "ning() public\n         returns (bool)\n    {\n",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/35/0xe04e734ac41aeeacd108ea65c229ce5ef676c7a9.sol",
        "function": "withdrawTokensRemaining()",
        "lineno": 188,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 2536,
        "code": "tExchangeRate(uint256 _rate) {\n         // Onl",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_7: 0x1\nstorage_0: 0x0\nstorage_1: 0x0\ncaller: 0x0\ncalldata_VRCoinCrowdsale_0: 0x673a7e2800000000000000000000000000000000000000000000000000000000\ncalldatasize_VRCoinCrowdsale: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/35/0xe04e734ac41aeeacd108ea65c229ce5ef676c7a9.sol",
        "function": "updatePrice()",
        "lineno": 78,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2599,
        "code": "     } else if (block.timestamp < ",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_3: 0x0\ntimestamp: 0x0\nstorage_1: 0xff00\ncalldata_VRCoinCrowdsale_0: 0xd7bb99ba00000000000000000000000000000000000000000000000000000000\ncalldatasize_VRCoinCrowdsale: 0x4\nstorage_4: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/35/0xe04e734ac41aeeacd108ea65c229ce5ef676c7a9.sol",
        "function": "contribute()",
        "lineno": 231,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2949,
        "code": "6)\n    {\n         return tok",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function withdrawEtherRemaining(). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/35/0xe04e734ac41aeeacd108ea65c229ce5ef676c7a9.sol",
        "function": "withdrawEtherRemaining()",
        "lineno": 202,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 3594,
        "code": "g has gone wrong, the owner no longer controls all the token",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/35/0xe04e734ac41aeeacd108ea65c229ce5ef676c7a9.sol",
        "function": "startSale()",
        "lineno": 99,
        "title": "Message call to external contract",
        "type": "Informational"
      }
    ],
    "success": true
  }
}