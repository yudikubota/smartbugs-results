{"error": null, "issues": [{"address": 8520, "code": "t256 Amount of tokens to be withdrawn\n   */\n  function withd", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/8/0xbeeb655808e3bdb83b6998f09dfe1e0f2c66a9be.sol", "function": "depositToken(address,uint256)", "lineno": 343, "title": "Message call to external contract", "type": "Warning"}, {"address": 14645, "debug": "", "description": "The return value of an external call is not checked. Note that execution continue even if the called contract throws.", "filename": "/unique_chucks/8/0xbeeb655808e3bdb83b6998f09dfe1e0f2c66a9be.sol", "function": "cancelOrder(address,uint256,address,uint256,uint256,uint256,uint8,bytes32,bytes32)", "lineno": 712, "title": "Unchecked CALL return value", "type": "Informational"}, {"address": 14713, "code": "e: ze", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xf6c5c2fae8fe8c2bd75f6962890f51911eabece300271310469b224c904f0af7\ncalldata_SwissCryptoExchange_32 + 4: 0x5299c6800978cc0e9e5838261bae01dbdd530eeb51b7d31c4604206ad62b0605\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_SwissCryptoExchange_4: 0xff00\ncalldata_SwissCryptoExchange_4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_SwissCryptoExchange_0: 0x338b5dea00000000000000000000000000000000000000000000000000000000\ncalldatasize_SwissCryptoExchange: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `depositToken(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/8/0xbeeb655808e3bdb83b6998f09dfe1e0f2c66a9be.sol", "function": "depositToken(address,uint256)", "lineno": 61, "title": "Integer Overflow ", "type": "Warning"}, {"address": 14726, "code": "solidity/contr", "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xfffffffffffffffffff7ffffffffffffffffffffffffffffffffffffffffffff\ncalldata_SwissCryptoExchange_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_SwissCryptoExchange_4: 0xff00\ncalldata_SwissCryptoExchange_4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_SwissCryptoExchange_0: 0x338b5dea00000000000000000000000000000000000000000000000000000000\ncalldatasize_SwissCryptoExchange: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/8/0xbeeb655808e3bdb83b6998f09dfe1e0f2c66a9be.sol", "function": "depositToken(address,uint256)", "lineno": 61, "title": "Exception state", "type": "Informational"}], "success": true}