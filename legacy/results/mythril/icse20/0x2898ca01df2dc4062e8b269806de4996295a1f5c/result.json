{
  "contract": "0x2898ca01df2dc4062e8b269806de4996295a1f5c",
  "tool": "mythril",
  "start": 1563587481.8602927,
  "end": 1563587500.5436363,
  "duration": 18.683343648910522,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 1223,
        "code": "auction.seller;\n        _bid(",
        "debug": "",
        "description": "The return value of an external call is not checked. Note that execution continue even if the called contract throws.",
        "filename": "/unique_chucks/23/0x2898ca01df2dc4062e8b269806de4996295a1f5c.sol",
        "function": "withdrawBalance()",
        "lineno": 210,
        "title": "Unchecked CALL return value",
        "type": "Informational"
      },
      {
        "address": 1804,
        "code": ") internal {\n        tokenIdToAuction[_tokenId] =",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/23/0x2898ca01df2dc4062e8b269806de4996295a1f5c.sol",
        "function": "bidCustomAuction(uint256,uint256,address)",
        "lineno": 121,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 1804,
        "code": ") internal {\n        tokenIdToAuction[_tokenId] =",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 948\n",
        "filename": "/unique_chucks/23/0x2898ca01df2dc4062e8b269806de4996295a1f5c.sol",
        "function": "bid(uint256)",
        "lineno": 121,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 2080,
        "code": " contract to another address.\n    /// Returns true if th",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/23/0x2898ca01df2dc4062e8b269806de4996295a1f5c.sol",
        "function": "createAuction(uint256,uint256,address)",
        "lineno": 112,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 2195,
        "code": "n.sellPrice)\n        );\n    }\n\n    //",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/23/0x2898ca01df2dc4062e8b269806de4996295a1f5c.sol",
        "function": "createAuction(uint256,uint256,address)",
        "lineno": 125,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 2206,
        "code": "n.sellPrice)\n        );\n    }\n\n    //",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/23/0x2898ca01df2dc4062e8b269806de4996295a1f5c.sol",
        "function": "createAuction(uint256,uint256,address)",
        "lineno": 125,
        "title": "State change after external call",
        "type": "Warning"
      }
    ],
    "success": true
  }
}