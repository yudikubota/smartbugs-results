{"error": null, "issues": [{"address": 463, "code": "eference, _sender);\n    }\n\n    /**\n     * Calls back without modifications if an asset is not stopped.\n     * Checks whether _from/_sender are not in blacklist.\n     *\n     * @return success.\n     * @dev", "debug": "calldata_CAVPlatform_32 + 36: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_CAVPlatform_0: 0x6a630ee700000000000000000000000000000000000000000000000000000000\ncalldatasize_CAVPlatform: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `__transferWithReference(address,uint256,string,address)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x96b2cd70523aefe92e1cb56de72856ea30498547.sol", "function": "__transferWithReference(address,uint256,string,address)", "lineno": 178, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1048, "code": "reference, _sender);\n    }\n\n    /**\n     * Calls back without modifications if an asset is not stopped.\n     * Checks whether _from/_sender are not in blacklist.\n     *\n     * @return success.\n     * @dev function is virtual, and mea", "debug": "calldata_CAVPlatform_32 + 68: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_CAVPlatform_0: 0xec698a2800000000000000000000000000000000000000000000000000000000\ncalldatasize_CAVPlatform: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `__transferFromWithReference(address,address,uint256,string,address)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x96b2cd70523aefe92e1cb56de72856ea30498547.sol", "function": "__transferFromWithReference(address,address,uint256,string,address)", "lineno": 207, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2743, "code": "ransfers for giv", "debug": "", "description": "This contract executes a message call to an address found at storage slot 0. This storage slot can be written to by calling the function `_function_0x19ab453c`. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_contracts/0x96b2cd70523aefe92e1cb56de72856ea30498547.sol", "function": "isAuthorized(address)", "lineno": 132, "title": "Message call to external contract", "type": "Warning"}, {"address": 2743, "code": "ransfers for giv", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2966\n", "filename": "/unique_contracts/0x96b2cd70523aefe92e1cb56de72856ea30498547.sol", "function": "isAuthorized(address)", "lineno": 132, "title": "Multiple Calls", "type": "Information"}, {"address": 2743, "code": "ransfers for giv", "debug": "", "description": "A possible transaction order independence vulnerability exists in function isAuthorized(address). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_contracts/0x96b2cd70523aefe92e1cb56de72856ea30498547.sol", "function": "isAuthorized(address)", "lineno": 132, "title": "Transaction order dependence", "type": "Warning"}, {"address": 2966, "code": "] _restricte", "debug": "", "description": "This contract executes a message call to an address found at storage slot 0. This storage slot can be written to by calling the function `_function_0x19ab453c`. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_contracts/0x96b2cd70523aefe92e1cb56de72856ea30498547.sol", "function": "isAuthorized(address)", "lineno": 134, "title": "Message call to external contract", "type": "Warning"}, {"address": 2966, "code": "] _restricte", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3166\n", "filename": "/unique_contracts/0x96b2cd70523aefe92e1cb56de72856ea30498547.sol", "function": "_function_0xee47af00", "lineno": 134, "title": "Multiple Calls", "type": "Information"}, {"address": 2966, "code": "] _restricte", "debug": "", "description": "A possible transaction order independence vulnerability exists in function isAuthorized(address). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_contracts/0x96b2cd70523aefe92e1cb56de72856ea30498547.sol", "function": "isAuthorized(address)", "lineno": 134, "title": "Transaction order dependence", "type": "Warning"}, {"address": 3166, "code": "\n    function restrict(address [] _restricted", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_contracts/0x96b2cd70523aefe92e1cb56de72856ea30498547.sol", "function": "_function_0xee47af00", "lineno": 133, "title": "Message call to external contract", "type": "Informational"}, {"address": 3799, "code": "   * @return success.\n     * @dev function is final, and must n", "debug": "", "description": "This contract executes a message call to an address found at storage slot 0. This storage slot can be written to by calling the function `_function_0x19ab453c`. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_contracts/0x96b2cd70523aefe92e1cb56de72856ea30498547.sol", "function": "__transferWithReference(address,uint256,string,address)", "lineno": 203, "title": "Message call to external contract", "type": "Warning"}, {"address": 3799, "code": "   * @return success.\n     * @dev function is final, and must n", "debug": "", "description": "A possible transaction order independence vulnerability exists in function __transferWithReference(address,uint256,string,address). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_contracts/0x96b2cd70523aefe92e1cb56de72856ea30498547.sol", "function": "__transferWithReference(address,uint256,string,address)", "lineno": 203, "title": "Transaction order dependence", "type": "Warning"}, {"address": 4292, "debug": "", "description": "This contract executes a message call to an address found at storage slot 0. This storage slot can be written to by calling the function `_function_0x19ab453c`. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_contracts/0x96b2cd70523aefe92e1cb56de72856ea30498547.sol", "function": "__approve(address,uint256,address)", "lineno": 254, "title": "Message call to external contract", "type": "Warning"}, {"address": 4292, "debug": "", "description": "A possible transaction order independence vulnerability exists in function __approve(address,uint256,address). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_contracts/0x96b2cd70523aefe92e1cb56de72856ea30498547.sol", "function": "__approve(address,uint256,address)", "lineno": 254, "title": "Transaction order dependence", "type": "Warning"}, {"address": 5066, "code": "s.\n     * @dev function is final, and must not be overridden.\n     */\n    ", "debug": "", "description": "This contract executes a message call to an address found at storage slot 0. This storage slot can be written to by calling the function `_function_0x19ab453c`. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_contracts/0x96b2cd70523aefe92e1cb56de72856ea30498547.sol", "function": "__transferFromWithReference(address,address,uint256,string,address)", "lineno": 233, "title": "Message call to external contract", "type": "Warning"}, {"address": 5066, "code": "s.\n     * @dev function is final, and must not be overridden.\n     */\n    ", "debug": "", "description": "A possible transaction order independence vulnerability exists in function __transferFromWithReference(address,address,uint256,string,address). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_contracts/0x96b2cd70523aefe92e1cb56de72856ea30498547.sol", "function": "__transferFromWithReference(address,address,uint256,string,address)", "lineno": 233, "title": "Transaction order dependence", "type": "Warning"}], "success": true}