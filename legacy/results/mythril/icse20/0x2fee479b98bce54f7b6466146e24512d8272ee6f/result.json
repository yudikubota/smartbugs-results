{
  "contract": "0x2fee479b98bce54f7b6466146e24512d8272ee6f",
  "tool": "mythril",
  "start": 1563593950.9067929,
  "end": 1563594078.442817,
  "duration": 127.53602409362793,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 1020,
        "code": "emainingLimit(\n\t\t\tsignature,\n\t\t\tkeccak256(address(th",
        "debug": "The exception is triggered under the following conditions:\n\ntimestamp: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_MultiKeyDailyLimitWallet_4: 0x1\ncalldata_MultiKeyDailyLimitWallet_32 + 36: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_MultiKeyDailyLimitWallet_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_MultiKeyDailyLimitWallet_0: 0x3884f30700000000000000000000000000000000000000000000000000000000\ncalldatasize_MultiKeyDailyLimitWallet: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/23/0x2fee479b98bce54f7b6466146e24512d8272ee6f.sol",
        "function": "withdrawTo(address,uint256,address,bytes)",
        "lineno": 85,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 1882,
        "code": "balance > 0)\n\t\t\tamt =",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_MultiKeyDailyLimitWallet_4: 0xe6089257c80ac0cbe60d5926ff262844c7005edbab82a162281118017d351c97\nretval_2312: 0x83ffb3569638cea3622d597040d78d7ab7ae5c8a2d8bbb012cad3fb961bad806\nreturndatasize: 0x20\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_MultiKeyDailyLimitWallet_4: 0xffffffffffffffffffffffffffffffffffffffff\ntimestamp: 0xe6089257c80ac0cbe60d5926ff262844c7005edbab82a162281118017d366e16\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_MultiKeyDailyLimitWallet_32_+_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_MultiKeyDailyLimitWallet_0: 0xad9171df00000000000000000000000000000000000000000000000000000000\ncalldatasize_MultiKeyDailyLimitWallet: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `getRemainingLimit(address,address)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/23/0x2fee479b98bce54f7b6466146e24512d8272ee6f.sol",
        "function": "getRemainingLimit(address,address)",
        "lineno": 69,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2100,
        "code": "s)\n\t\t\t_dailyCount = 0;\n\t\treturn _dailyCount",
        "debug": "timestamp: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_MultiKeyDailyLimitWallet_4: 0x1\ncalldata_MultiKeyDailyLimitWallet_0: 0xe4772ae300000000000000000000000000000000000000000000000000000000\ncalldatasize_MultiKeyDailyLimitWallet: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer underflow exists in the function `getDailyCount(address)`.\nThe subtraction may result in a value < 0.",
        "filename": "/unique_chucks/23/0x2fee479b98bce54f7b6466146e24512d8272ee6f.sol",
        "function": "getDailyCount(address)",
        "lineno": 54,
        "title": "Integer Underflow",
        "type": "Warning"
      },
      {
        "address": 2312,
        "code": " token, address to, uint amount)\n\t \t\tpriva",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/23/0x2fee479b98bce54f7b6466146e24512d8272ee6f.sol",
        "function": "getBalance(address)",
        "lineno": 108,
        "title": "Message call to external contract",
        "type": "Warning"
      }
    ],
    "success": true
  }
}