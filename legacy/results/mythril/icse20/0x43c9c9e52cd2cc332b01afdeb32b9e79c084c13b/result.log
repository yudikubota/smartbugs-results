{"error": null, "issues": [{"address": 1201, "code": "whitelisted) = contr.contribut", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/46/0x43c9c9e52cd2cc332b01afdeb32b9e79c084c13b.sol", "function": "withdraw()", "lineno": 70, "title": "Message call to external contract", "type": "Informational"}, {"address": 1201, "code": "whitelisted) = contr.contribut", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2130\nCall at address: 1450\n", "filename": "/unique_chucks/46/0x43c9c9e52cd2cc332b01afdeb32b9e79c084c13b.sol", "function": "withdraw()", "lineno": 70, "title": "Multiple Calls", "type": "Information"}, {"address": 1201, "code": "whitelisted) = contr.contribut", "debug": "", "description": "A possible transaction order independence vulnerability exists in function withdraw(). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/46/0x43c9c9e52cd2cc332b01afdeb32b9e79c084c13b.sol", "function": "withdraw()", "lineno": 70, "title": "Transaction order dependence", "type": "Warning"}, {"address": 1450, "code": "< rounds) {\n\t\t\tSnapshot storag", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/46/0x43c9c9e52cd2cc332b01afdeb32b9e79c084c13b.sol", "function": "withdraw()", "lineno": 71, "title": "Message call to external contract", "type": "Informational"}, {"address": 1450, "code": "< rounds) {\n\t\t\tSnapshot storag", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2130\n", "filename": "/unique_chucks/46/0x43c9c9e52cd2cc332b01afdeb32b9e79c084c13b.sol", "function": "withdraw()", "lineno": 71, "title": "Multiple Calls", "type": "Information"}, {"address": 1742, "code": "draw = (balance * snapshot.tokens_balance", "debug": "The exception is triggered under the following conditions:\n\nreturndatasize: 0x80\nstorage_5: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xfe00\nstorage_6: 0xff00\nretval_1450: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nretval_1201: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_HybridProxy_0: 0x3ccfd60b00000000000000000000000000000000000000000000000000000000\ncalldatasize_HybridProxy: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/46/0x43c9c9e52cd2cc332b01afdeb32b9e79c084c13b.sol", "function": "withdraw()", "lineno": 73, "title": "Exception state", "type": "Informational"}, {"address": 1779, "code": "tokens_balance -= tokens_to_withdraw;\n\t\t\tsnapshot.eth_bala", "debug": "The exception is triggered under the following conditions:\n\nreturndatasize: 0x80\nstorage_5: 0x1\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\nstorage_6: 0x100\nretval_1450: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nretval_1201: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_HybridProxy_0: 0x3ccfd60b00000000000000000000000000000000000000000000000000000000\ncalldatasize_HybridProxy: 0x4\nstorage_1 +\n1546678032441257452667456735582814959992782782816731922691272282333561699760 +\n2*\nConcat(0,\n       Extract(15,\n               8,\n               storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller)): 0x0\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/46/0x43c9c9e52cd2cc332b01afdeb32b9e79c084c13b.sol", "function": "withdraw()", "lineno": 74, "title": "Exception state", "type": "Informational"}, {"address": 1812, "code": "     require(token.transfer(msg", "debug": "returndatasize: 0x80\nstorage_1 +\n1546678032441257452667456735582814959992782782816731922691272282333561699760 +\n2*\nConcat(0,\n       Extract(15,\n               8,\n               storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller)): 0x1fbffffffffffffffffffffffffffffffffffffffffffe\nretval_1450: 0x2000000000000000000000000000000000000000000000\nstorage_5: 0x1\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\nstorage_6: 0x100\nretval_1201: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_HybridProxy_0: 0x3ccfd60b00000000000000000000000000000000000000000000000000000000\ncalldatasize_HybridProxy: 0x4\ncallvalue: 0x0\n", "description": "A possible integer underflow exists in the function `withdraw()`.\nThe subtraction may result in a value < 0.", "filename": "/unique_chucks/46/0x43c9c9e52cd2cc332b01afdeb32b9e79c084c13b.sol", "function": "withdraw()", "lineno": 77, "title": "Integer Underflow", "type": "Warning"}, {"address": 2130, "code": "ency_withdraw(address _token) {\n    require(ms", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/46/0x43c9c9e52cd2cc332b01afdeb32b9e79c084c13b.sol", "function": "withdraw()", "lineno": 81, "title": "Message call to external contract", "type": "Informational"}, {"address": 2130, "code": "ency_withdraw(address _token) {\n    require(ms", "debug": "", "description": "A possible transaction order independence vulnerability exists in function withdraw(). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/46/0x43c9c9e52cd2cc332b01afdeb32b9e79c084c13b.sol", "function": "withdraw()", "lineno": 81, "title": "Transaction order dependence", "type": "Warning"}, {"address": 2766, "code": "tokens_this_round = dev_fee(to", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/46/0x43c9c9e52cd2cc332b01afdeb32b9e79c084c13b.sol", "function": "set_tokens_received()", "lineno": 95, "title": "Message call to external contract", "type": "Informational"}, {"address": 2766, "code": "tokens_this_round = dev_fee(to", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 4006\n", "filename": "/unique_chucks/46/0x43c9c9e52cd2cc332b01afdeb32b9e79c084c13b.sol", "function": "set_tokens_received()", "lineno": 95, "title": "Multiple Calls", "type": "Information"}, {"address": 2766, "code": "tokens_this_round = dev_fee(to", "debug": "", "description": "A possible transaction order independence vulnerability exists in function set_tokens_received(). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/46/0x43c9c9e52cd2cc332b01afdeb32b9e79c084c13b.sol", "function": "set_tokens_received()", "lineno": 95, "title": "Transaction order dependence", "type": "Warning"}, {"address": 3410, "code": "re(msg.sender == owner);\n    ", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/46/0x43c9c9e52cd2cc332b01afdeb32b9e79c084c13b.sol", "function": "emergency_withdraw(address)", "lineno": 87, "title": "Message call to external contract", "type": "Warning"}, {"address": 3410, "code": "re(msg.sender == owner);\n    ", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3602\n", "filename": "/unique_chucks/46/0x43c9c9e52cd2cc332b01afdeb32b9e79c084c13b.sol", "function": "emergency_withdraw(address)", "lineno": 87, "title": "Multiple Calls", "type": "Information"}, {"address": 3602, "code": "_tokens_received() {\n    require(msg.sender == owner);\n    u", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/46/0x43c9c9e52cd2cc332b01afdeb32b9e79c084c13b.sol", "function": "emergency_withdraw(address)", "lineno": 86, "title": "Message call to external contract", "type": "Warning"}, {"address": 3692, "code": "\n  uint8 public rounds;\n\n  ", "debug": "The exception is triggered under the following conditions:\n\ncalldata_HybridProxy_4: 0x0\nstorage_5: 0x0\ncalldata_HybridProxy_0: 0xd6565a2d00000000000000000000000000000000000000000000000000000000\ncalldatasize_HybridProxy: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/46/0x43c9c9e52cd2cc332b01afdeb32b9e79c084c13b.sol", "function": "_function_0xd6565a2d", "lineno": 47, "title": "Exception state", "type": "Informational"}, {"address": 4006, "code": "(token.transfer(DEVELOPER2, tokens_individual", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/46/0x43c9c9e52cd2cc332b01afdeb32b9e79c084c13b.sol", "function": "set_tokens_received()", "lineno": 61, "title": "Message call to external contract", "type": "Informational"}, {"address": 4006, "code": "(token.transfer(DEVELOPER2, tokens_individual", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 4293\n", "filename": "/unique_chucks/46/0x43c9c9e52cd2cc332b01afdeb32b9e79c084c13b.sol", "function": "set_tokens_received()", "lineno": 61, "title": "Multiple Calls", "type": "Information"}, {"address": 4006, "code": "(token.transfer(DEVELOPER2, tokens_individual", "debug": "", "description": "A possible transaction order independence vulnerability exists in function set_tokens_received(). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/46/0x43c9c9e52cd2cc332b01afdeb32b9e79c084c13b.sol", "function": "set_tokens_received()", "lineno": 61, "title": "Transaction order dependence", "type": "Warning"}, {"address": 4293, "code": "his_round -= (2*tokens_individual);\n    retur", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/46/0x43c9c9e52cd2cc332b01afdeb32b9e79c084c13b.sol", "function": "set_tokens_received()", "lineno": 62, "title": "Message call to external contract", "type": "Informational"}, {"address": 4293, "code": "his_round -= (2*tokens_individual);\n    retur", "debug": "", "description": "A possible transaction order independence vulnerability exists in function set_tokens_received(). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/46/0x43c9c9e52cd2cc332b01afdeb32b9e79c084c13b.sol", "function": "set_tokens_received()", "lineno": 62, "title": "Transaction order dependence", "type": "Warning"}], "success": true}