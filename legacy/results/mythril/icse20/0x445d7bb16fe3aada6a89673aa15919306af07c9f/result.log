{"error": null, "issues": [{"address": 1427, "code": ";\ninterface TokenE", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_locksdc2_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_1: 0x0\ncaller: 0x0\ncalldata_locksdc2_0: 0x1459ad5900000000000000000000000000000000000000000000000000000000\ncalldatasize_locksdc2: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `inSdcForAdmin(address,uint256,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/11/0x445d7bb16fe3aada6a89673aa15919306af07c9f.sol", "function": "inSdcForAdmin(address,uint256,uint256)", "lineno": 1, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1824, "code": ";\ninterface TokenE", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_locksdc2_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_1: 0x0\ncaller: 0x0\ncalldata_locksdc2_0: 0x1459ad5900000000000000000000000000000000000000000000000000000000\ncalldatasize_locksdc2: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `inSdcForAdmin(address,uint256,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/11/0x445d7bb16fe3aada6a89673aa15919306af07c9f.sol", "function": "inSdcForAdmin(address,uint256,uint256)", "lineno": 1, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2107, "code": "utSdcLog[]) public accoutInputOutputSdcLogs;\n    mapping(address=>uint) pub", "debug": "The exception is triggered under the following conditions:\n\ncalldata_locksdc2_32 + 4: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\ncalldata_locksdc2_4: 0x0\ncalldata_locksdc2_0: 0x308a1ebb00000000000000000000000000000000000000000000000000000000\ncalldatasize_locksdc2: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/11/0x445d7bb16fe3aada6a89673aa15919306af07c9f.sol", "function": "_function_0x308a1ebb", "lineno": 33, "title": "Exception state", "type": "Informational"}, {"address": 2551, "code": "msg.sender][i] = accountInputSdc(msg.sender,0,99999999999", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x83ffb3569638cea3622d597040d78d7ab7ae5c8a2d8bbb012cad3fb961bad806\nstorage_1 +\nkeccac_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xe6089257c80ac0cbe60d5926ff262844c7005edbab82a162281118017d351c97\ntimestamp: 0x0\nstorage_2 +\nkeccac_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncalldata_locksdc2_0: 0x57417e7800000000000000000000000000000000000000000000000000000000\ncalldatasize_locksdc2: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `insetMoney()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/11/0x445d7bb16fe3aada6a89673aa15919306af07c9f.sol", "function": "insetMoney()", "lineno": 94, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2755, "code": " }\n        }\n        return tru", "debug": "The exception is triggered under the following conditions:\n\ntimestamp: 0x0\nstorage_2 +\nkeccac_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\nstorage_1 +\nkeccac_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_locksdc2_0: 0x57417e7800000000000000000000000000000000000000000000000000000000\ncalldatasize_locksdc2: 0x4\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x1\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/11/0x445d7bb16fe3aada6a89673aa15919306af07c9f.sol", "function": "insetMoney()", "lineno": 95, "title": "Exception state", "type": "Informational"}, {"address": 2930, "code": "dc[]) public accountInputSdcs;\n    mapping(address=>account", "debug": "The exception is triggered under the following conditions:\n\ncalldata_locksdc2_32 + 4: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\ncalldata_locksdc2_4: 0x0\ncalldata_locksdc2_0: 0x8916a50d00000000000000000000000000000000000000000000000000000000\ncalldatasize_locksdc2: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/11/0x445d7bb16fe3aada6a89673aa15919306af07c9f.sol", "function": "_function_0x8916a50d", "lineno": 31, "title": "Exception state", "type": "Informational"}, {"address": 3112, "code": "dc[]) public accountOutputSdcs;\n    mapping(address=>accoutIn", "debug": "The exception is triggered under the following conditions:\n\ncalldata_locksdc2_32 + 4: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\ncalldata_locksdc2_4: 0x0\ncalldata_locksdc2_0: 0x9b676e7200000000000000000000000000000000000000000000000000000000\ncalldatasize_locksdc2: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/11/0x445d7bb16fe3aada6a89673aa15919306af07c9f.sol", "function": "_function_0x9b676e72", "lineno": 32, "title": "Exception state", "type": "Informational"}, {"address": 3927, "code": "r][i].sdc;\n                accountInputSdcs[msg.sender][i", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x83ffb3569638cea3622d597040d78d7ab7ae5c8a2d8bbb012cad3fb961bad806\nstorage_1 +\nkeccac_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xe6089257c80ac0cbe60d5926ff262844c7005edbab82a162281118017d351c97\ntimestamp: 0x0\nstorage_2 +\nkeccac_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncalldata_locksdc2_0: 0xecc2c47c00000000000000000000000000000000000000000000000000000000\ncalldatasize_locksdc2: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `outSdcForUser(uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/11/0x445d7bb16fe3aada6a89673aa15919306af07c9f.sol", "function": "outSdcForUser(uint256)", "lineno": 49, "title": "Integer Overflow ", "type": "Warning"}, {"address": 4131, "code": "(msg.sender,0,999999999999,now)", "debug": "The exception is triggered under the following conditions:\n\ntimestamp: 0x0\nstorage_2 +\nkeccac_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\nstorage_1 +\nkeccac_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_locksdc2_0: 0xecc2c47c00000000000000000000000000000000000000000000000000000000\ncalldatasize_locksdc2: 0x4\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x1\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/11/0x445d7bb16fe3aada6a89673aa15919306af07c9f.sol", "function": "outSdcForUser(uint256)", "lineno": 50, "title": "Exception state", "type": "Informational"}, {"address": 4542, "code": "c[msg.sender] = unlockSdc[msg.se", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/11/0x445d7bb16fe3aada6a89673aa15919306af07c9f.sol", "function": "outSdcForUser(uint256)", "lineno": 55, "title": "Message call to external contract", "type": "Informational"}, {"address": 4695, "code": "      lockLogs(msg.sender,msg.sender,_sdc,now,fals", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/11/0x445d7bb16fe3aada6a89673aa15919306af07c9f.sol", "function": "outSdcForUser(uint256)", "lineno": 56, "title": "State change after external call", "type": "Warning"}, {"address": 4941, "code": "{\n    function transfer", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/11/0x445d7bb16fe3aada6a89673aa15919306af07c9f.sol", "function": "outSdcForUser(uint256)", "lineno": 2, "title": "State change after external call", "type": "Warning"}, {"address": 5044, "code": "sender,_sdc,now));\n        accoutInputOutputSdcLogs[msg.sender].push(acco", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/11/0x445d7bb16fe3aada6a89673aa15919306af07c9f.sol", "function": "outSdcForUser(uint256)", "lineno": 57, "title": "State change after external call", "type": "Warning"}, {"address": 5055, "code": "sender,_sdc,now));\n        accoutInputOutputSdcLogs[msg.sender].push(acco", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/11/0x445d7bb16fe3aada6a89673aa15919306af07c9f.sol", "function": "outSdcForUser(uint256)", "lineno": 57, "title": "State change after external call", "type": "Warning"}, {"address": 5065, "code": "sender,_sdc,now));\n        accoutInputOutputSdcLogs[msg.sender].push(acco", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/11/0x445d7bb16fe3aada6a89673aa15919306af07c9f.sol", "function": "outSdcForUser(uint256)", "lineno": 57, "title": "State change after external call", "type": "Warning"}, {"address": 5211, "code": "{\n    function transfer", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/11/0x445d7bb16fe3aada6a89673aa15919306af07c9f.sol", "function": "outSdcForUser(uint256)", "lineno": 2, "title": "State change after external call", "type": "Warning"}, {"address": 5314, "code": "utSdcLog(msg.sender,_sdc,999999999999,false,now));\n        return true;\n    }\n\n   function nowInSeconds() ", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/11/0x445d7bb16fe3aada6a89673aa15919306af07c9f.sol", "function": "outSdcForUser(uint256)", "lineno": 58, "title": "State change after external call", "type": "Warning"}, {"address": 5325, "code": "utSdcLog(msg.sender,_sdc,999999999999,false,now));\n        return true;\n    }\n\n   function nowInSeconds() ", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/11/0x445d7bb16fe3aada6a89673aa15919306af07c9f.sol", "function": "outSdcForUser(uint256)", "lineno": 58, "title": "State change after external call", "type": "Warning"}, {"address": 5335, "code": "utSdcLog(msg.sender,_sdc,999999999999,false,now));\n        return true;\n    }\n\n   function nowInSeconds() ", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/11/0x445d7bb16fe3aada6a89673aa15919306af07c9f.sol", "function": "outSdcForUser(uint256)", "lineno": 58, "title": "State change after external call", "type": "Warning"}, {"address": 5366, "code": "utSdcLog(msg.sender,_sdc,999999999999,false,now));\n        return true;\n    }\n\n   function nowInSeconds() ", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/11/0x445d7bb16fe3aada6a89673aa15919306af07c9f.sol", "function": "outSdcForUser(uint256)", "lineno": 58, "title": "State change after external call", "type": "Warning"}, {"address": 5377, "code": "utSdcLog(msg.sender,_sdc,999999999999,false,now));\n        return true;\n    }\n\n   function nowInSeconds() ", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/11/0x445d7bb16fe3aada6a89673aa15919306af07c9f.sol", "function": "outSdcForUser(uint256)", "lineno": 58, "title": "State change after external call", "type": "Warning"}], "success": true}