{
  "contract": "0xd186865848ed869932032d00f54998a7d0581117",
  "tool": "mythril",
  "start": 1563626219.3281553,
  "end": 1563626276.1893494,
  "duration": 56.861194133758545,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 1790,
        "code": "(payToken, payAmt, wethToken, minBuyAmt);\n     ",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/26/0xd186865848ed869932032d00f54998a7d0581117.sol",
        "function": "_function_0x03e1b3c6",
        "lineno": 204,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 1790,
        "code": "(payToken, payAmt, wethToken, minBuyAmt);\n     ",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3103\nCall at address: 2833\nCall at address: 2576\nCall at address: 3103\nCall at address: 2833\nCall at address: 2576\nCall at address: 2328\nCall at address: 2068\n",
        "filename": "/unique_chucks/26/0xd186865848ed869932032d00f54998a7d0581117.sol",
        "function": "_function_0x03e1b3c6",
        "lineno": 204,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 2068,
        "code": " uint wethAmtRemainder) = fee",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/26/0xd186865848ed869932032d00f54998a7d0581117.sol",
        "function": "_function_0x03e1b3c6",
        "lineno": 205,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 2068,
        "code": " uint wethAmtRemainder) = fee",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3103\nCall at address: 2833\nCall at address: 2576\nCall at address: 3103\nCall at address: 2833\nCall at address: 2576\nCall at address: 2328\n",
        "filename": "/unique_chucks/26/0xd186865848ed869932032d00f54998a7d0581117.sol",
        "function": "_function_0x03e1b3c6",
        "lineno": 205,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 2328,
        "code": "en);\n        require(wethToken.",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/26/0xd186865848ed869932032d00f54998a7d0581117.sol",
        "function": "_function_0x03e1b3c6",
        "lineno": 205,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 2328,
        "code": "en);\n        require(wethToken.",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3103\nCall at address: 2833\nCall at address: 2576\n",
        "filename": "/unique_chucks/26/0xd186865848ed869932032d00f54998a7d0581117.sol",
        "function": "_function_0x03e1b3c6",
        "lineno": 205,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 2576,
        "code": "aken in WETH */ \n        withdrawAndSend(wethToken, wethA",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/26/0xd186865848ed869932032d00f54998a7d0581117.sol",
        "function": "_function_0x03e1b3c6",
        "lineno": 206,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 2576,
        "code": "aken in WETH */ \n        withdrawAndSend(wethToken, wethA",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3103\nCall at address: 2833\n",
        "filename": "/unique_chucks/26/0xd186865848ed869932032d00f54998a7d0581117.sol",
        "function": "_function_0x03e1b3c6",
        "lineno": 206,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 2833,
        "code": " }\n\n    function buyAllAmount(\n ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/26/0xd186865848ed869932032d00f54998a7d0581117.sol",
        "function": "_function_0x03e1b3c6",
        "lineno": 209,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 2833,
        "code": " }\n\n    function buyAllAmount(\n ",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3103\n",
        "filename": "/unique_chucks/26/0xd186865848ed869932032d00f54998a7d0581117.sol",
        "function": "_function_0x03e1b3c6",
        "lineno": 209,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 2833,
        "code": " }\n\n    function buyAllAmount(\n ",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function _function_0x03e1b3c6. The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/26/0xd186865848ed869932032d00f54998a7d0581117.sol",
        "function": "_function_0x03e1b3c6",
        "lineno": 209,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 3103,
        "code": " otc, \n        TokenInterface buy",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/26/0xd186865848ed869932032d00f54998a7d0581117.sol",
        "function": "_function_0x03e1b3c6",
        "lineno": 212,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 3316,
        "code": "   }\n\n    func",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/26/0xd186865848ed869932032d00f54998a7d0581117.sol",
        "function": "setOwner(address)",
        "lineno": 53,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 3645,
        "code": "    uint buyAmt = otc.sellAllAmount(payToken, p",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/26/0xd186865848ed869932032d00f54998a7d0581117.sol",
        "function": "_function_0x1ebf0d11",
        "lineno": 168,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 3645,
        "code": "    uint buyAmt = otc.sellAllAmount(payToken, p",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 4903\nCall at address: 4647\nCall at address: 4431\nCall at address: 4647\nCall at address: 4431\nCall at address: 4183\nCall at address: 3923\n",
        "filename": "/unique_chucks/26/0xd186865848ed869932032d00f54998a7d0581117.sol",
        "function": "_function_0x1ebf0d11",
        "lineno": 168,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 3923,
        "code": " minBuyAmt);\n        buyToken",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/26/0xd186865848ed869932032d00f54998a7d0581117.sol",
        "function": "_function_0x1ebf0d11",
        "lineno": 168,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 3923,
        "code": " minBuyAmt);\n        buyToken",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 4903\nCall at address: 4647\nCall at address: 4431\nCall at address: 4647\nCall at address: 4431\nCall at address: 4183\n",
        "filename": "/unique_chucks/26/0xd186865848ed869932032d00f54998a7d0581117.sol",
        "function": "_function_0x1ebf0d11",
        "lineno": 168,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 4183,
        "code": "(uint feeAmt, uint buyAmtRemain",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/26/0xd186865848ed869932032d00f54998a7d0581117.sol",
        "function": "_function_0x1ebf0d11",
        "lineno": 170,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 4183,
        "code": "(uint feeAmt, uint buyAmtRemain",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 4647\nCall at address: 4431\n",
        "filename": "/unique_chucks/26/0xd186865848ed869932032d00f54998a7d0581117.sol",
        "function": "_function_0x1ebf0d11",
        "lineno": 170,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 4431,
        "code": ");\n        require(buyToken.transfer(owner, feeAmt)); /*",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/26/0xd186865848ed869932032d00f54998a7d0581117.sol",
        "function": "_function_0x1ebf0d11",
        "lineno": 170,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 4431,
        "code": ");\n        require(buyToken.transfer(owner, feeAmt)); /*",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 4647\n",
        "filename": "/unique_chucks/26/0xd186865848ed869932032d00f54998a7d0581117.sol",
        "function": "_function_0x1ebf0d11",
        "lineno": 170,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 4647,
        "code": "en */\n        require(bu",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/26/0xd186865848ed869932032d00f54998a7d0581117.sol",
        "function": "_function_0x1ebf0d11",
        "lineno": 171,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 4647,
        "code": "en */\n        require(bu",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 4903\n",
        "filename": "/unique_chucks/26/0xd186865848ed869932032d00f54998a7d0581117.sol",
        "function": "_function_0x1ebf0d11",
        "lineno": 171,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 4903,
        "code": "      return buyAmtRemainder;\n",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/26/0xd186865848ed869932032d00f54998a7d0581117.sol",
        "function": "_function_0x1ebf0d11",
        "lineno": 173,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 4903,
        "code": "      return buyAmtRemainder;\n",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function _function_0x1ebf0d11. The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/26/0xd186865848ed869932032d00f54998a7d0581117.sol",
        "function": "_function_0x1ebf0d11",
        "lineno": 173,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 5712,
        "code": "        payToken.approve(otc, uint(-1));\n   ",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/26/0xd186865848ed869932032d00f54998a7d0581117.sol",
        "function": "_function_0x3c0ab650",
        "lineno": 222,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 5712,
        "code": "        payToken.approve(otc, uint(-1));\n   ",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 6789\nCall at address: 6789\nCall at address: 6541\nCall at address: 6281\nCall at address: 6003\n",
        "filename": "/unique_chucks/26/0xd186865848ed869932032d00f54998a7d0581117.sol",
        "function": "_function_0x3c0ab650",
        "lineno": 222,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 6003,
        "code": "ayToken, payAmtNow);\n        min(buyAmt, buyToken.",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/26/0xd186865848ed869932032d00f54998a7d0581117.sol",
        "function": "_function_0x3c0ab650",
        "lineno": 224,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 6003,
        "code": "ayToken, payAmtNow);\n        min(buyAmt, buyToken.",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 6789\nCall at address: 6789\nCall at address: 6541\nCall at address: 6281\n",
        "filename": "/unique_chucks/26/0xd186865848ed869932032d00f54998a7d0581117.sol",
        "function": "_function_0x3c0ab650",
        "lineno": 224,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 6281,
        "code": "; // To avoid rounding issues",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/26/0xd186865848ed869932032d00f54998a7d0581117.sol",
        "function": "_function_0x3c0ab650",
        "lineno": 225,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 6281,
        "code": "; // To avoid rounding issues",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 6789\nCall at address: 6789\nCall at address: 6541\n",
        "filename": "/unique_chucks/26/0xd186865848ed869932032d00f54998a7d0581117.sol",
        "function": "_function_0x3c0ab650",
        "lineno": 225,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 6541,
        "code": "       (uint feeAmt, uint buyAm",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/26/0xd186865848ed869932032d00f54998a7d0581117.sol",
        "function": "_function_0x3c0ab650",
        "lineno": 226,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 6541,
        "code": "       (uint feeAmt, uint buyAm",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 6789\n",
        "filename": "/unique_chucks/26/0xd186865848ed869932032d00f54998a7d0581117.sol",
        "function": "_function_0x3c0ab650",
        "lineno": 226,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 6789,
        "code": "t, buyToken);\n        require(buyToken.transfer(owner, ",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/26/0xd186865848ed869932032d00f54998a7d0581117.sol",
        "function": "_function_0x3c0ab650",
        "lineno": 226,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 8463,
        "code": "uyAmt = min(buyAmt, buyToken.balance",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/26/0xd186865848ed869932032d00f54998a7d0581117.sol",
        "function": "_function_0x9a22dec5",
        "lineno": 243,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 8463,
        "code": "uyAmt = min(buyAmt, buyToken.balance",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 9424\nCall at address: 9204\nCall at address: 9204\nCall at address: 8956\nCall at address: 8696\n",
        "filename": "/unique_chucks/26/0xd186865848ed869932032d00f54998a7d0581117.sol",
        "function": "_function_0x9a22dec5",
        "lineno": 243,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 8696,
        "code": "o avoid rounding issues we che",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/26/0xd186865848ed869932032d00f54998a7d0581117.sol",
        "function": "_function_0x9a22dec5",
        "lineno": 243,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 8696,
        "code": "o avoid rounding issues we che",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 9424\nCall at address: 9204\nCall at address: 9204\nCall at address: 8956\n",
        "filename": "/unique_chucks/26/0xd186865848ed869932032d00f54998a7d0581117.sol",
        "function": "_function_0x9a22dec5",
        "lineno": 243,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 8956,
        "code": "(uint feeAmt, uint buyAmtRemaind",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/26/0xd186865848ed869932032d00f54998a7d0581117.sol",
        "function": "_function_0x9a22dec5",
        "lineno": 244,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 8956,
        "code": "(uint feeAmt, uint buyAmtRemaind",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 9204\n",
        "filename": "/unique_chucks/26/0xd186865848ed869932032d00f54998a7d0581117.sol",
        "function": "_function_0x9a22dec5",
        "lineno": 244,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 9204,
        "code": "ken); \n        require(buyToken.transfer(owner, feeAmt))",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/26/0xd186865848ed869932032d00f54998a7d0581117.sol",
        "function": "_function_0x9a22dec5",
        "lineno": 244,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 9204,
        "code": "ken); \n        require(buyToken.transfer(owner, feeAmt))",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 9424\n",
        "filename": "/unique_chucks/26/0xd186865848ed869932032d00f54998a7d0581117.sol",
        "function": "_function_0x9a22dec5",
        "lineno": 244,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 9424,
        "code": "uire(buyToken.transfer(m",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/26/0xd186865848ed869932032d00f54998a7d0581117.sol",
        "function": "_function_0x9a22dec5",
        "lineno": 246,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 10431,
        "code": "lAllAmount(wethToken, msg.value, buy",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/26/0xd186865848ed869932032d00f54998a7d0581117.sol",
        "function": "_function_0xe50278a6",
        "lineno": 186,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 10431,
        "code": "lAllAmount(wethToken, msg.value, buy",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 11172\nCall at address: 11172\nCall at address: 10924\nCall at address: 10664\n",
        "filename": "/unique_chucks/26/0xd186865848ed869932032d00f54998a7d0581117.sol",
        "function": "_function_0xe50278a6",
        "lineno": 186,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 10664,
        "code": "t); \n        (uint feeAmt, uin",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/26/0xd186865848ed869932032d00f54998a7d0581117.sol",
        "function": "_function_0xe50278a6",
        "lineno": 186,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 10664,
        "code": "t); \n        (uint feeAmt, uin",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 11172\nCall at address: 11172\nCall at address: 10924\n",
        "filename": "/unique_chucks/26/0xd186865848ed869932032d00f54998a7d0581117.sol",
        "function": "_function_0xe50278a6",
        "lineno": 186,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 10924,
        "code": "eFee(buyAmt, buyToken);\n        ",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/26/0xd186865848ed869932032d00f54998a7d0581117.sol",
        "function": "_function_0xe50278a6",
        "lineno": 187,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 10924,
        "code": "eFee(buyAmt, buyToken);\n        ",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 11172\n",
        "filename": "/unique_chucks/26/0xd186865848ed869932032d00f54998a7d0581117.sol",
        "function": "_function_0xe50278a6",
        "lineno": 187,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 11172,
        "code": "Amt)); /* fee is taken */\n        require(buyToken.transfer(",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/26/0xd186865848ed869932032d00f54998a7d0581117.sol",
        "function": "_function_0xe50278a6",
        "lineno": 188,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 12237,
        "code": "));\n        }\n        payAmt = otc.buyAllAmoun",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/26/0xd186865848ed869932032d00f54998a7d0581117.sol",
        "function": "_function_0xf9a87d4f",
        "lineno": 261,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 12237,
        "code": "));\n        }\n        payAmt = otc.buyAllAmoun",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 12528\n",
        "filename": "/unique_chucks/26/0xd186865848ed869932032d00f54998a7d0581117.sol",
        "function": "_function_0xf9a87d4f",
        "lineno": 261,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 12528,
        "code": "Amt, uint wethAmtRemainder) = fees.takeFee(wethAmt",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/26/0xd186865848ed869932032d00f54998a7d0581117.sol",
        "function": "_function_0xf9a87d4f",
        "lineno": 264,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 14690,
        "code": "Auth {\n    function kill() public",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/26/0xd186865848ed869932032d00f54998a7d0581117.sol",
        "function": "_function_0x8a957929",
        "lineno": 81,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 14690,
        "code": "Auth {\n    function kill() public",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function _function_0x8a957929. The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/26/0xd186865848ed869932032d00f54998a7d0581117.sol",
        "function": "_function_0x8a957929",
        "lineno": 81,
        "title": "Transaction order dependence",
        "type": "Warning"
      }
    ],
    "success": true
  }
}