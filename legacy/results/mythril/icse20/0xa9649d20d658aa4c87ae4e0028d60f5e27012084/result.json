{
  "contract": "0xa9649d20d658aa4c87ae4e0028d60f5e27012084",
  "tool": "mythril",
  "start": 1563691459.8903863,
  "end": 1563691972.88253,
  "duration": 512.9921436309814,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 451,
        "code": "t256 Tests) public onlyOwner {\n        uint256 amount = Tests * (10 ** uint256(decimals));\n        require((Test",
        "debug": "calldata_Test_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_Test_0: 0x801baca00000000000000000000000000000000000000000000000000000000\ncalldatasize_Test: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `talkToWorld(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/36/0xa9649d20d658aa4c87ae4e0028d60f5e27012084.sol",
        "function": "talkToWorld(string)",
        "lineno": 209,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 463,
        "code": "t256 Tests) public onlyOwner {\n        uint256 amount = Tests * (10 ** uint256(decimals));\n        require((Test",
        "debug": "calldata_Test_4 + calldata_Test_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8\ncalldata_Test_0: 0x801baca00000000000000000000000000000000000000000000000000000000\ncalldatasize_Test: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `talkToWorld(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/36/0xa9649d20d658aa4c87ae4e0028d60f5e27012084.sol",
        "function": "talkToWorld(string)",
        "lineno": 209,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 472,
        "code": "t256 Tests) public onlyOwner {\n        uint256 amount = Tests * (10 ** uint256(decimals));\n        require((Test",
        "debug": "calldata_Test_4 + calldata_Test_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc1\ncalldata_Test_0: 0x801baca00000000000000000000000000000000000000000000000000000000\ncalldatasize_Test: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `talkToWorld(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/36/0xa9649d20d658aa4c87ae4e0028d60f5e27012084.sol",
        "function": "talkToWorld(string)",
        "lineno": 209,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 478,
        "code": "t256 Tests) public onlyOwner {\n        uint256 amount = Tests * (10 ** uint256(decimals));\n        require((Test",
        "debug": "calldata_Test_4 + calldata_Test_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff41\ncalldata_Test_0: 0x801baca00000000000000000000000000000000000000000000000000000000\ncalldatasize_Test: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `talkToWorld(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/36/0xa9649d20d658aa4c87ae4e0028d60f5e27012084.sol",
        "function": "talkToWorld(string)",
        "lineno": 209,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1170,
        "code": "nt256 i = 0;\n        uint256 dropAmount = 0;\n        while (i < dests.length) {\n          \n           if(dests[i].balance > 50 finney) {\n               balances[dests[i]] += amount;\n               dropAmount += amount;\n               Transfer(this, dests[i], amount);\n           }\n           i += 1;\n        }\n        TestIssued += dropAmount;\n        TestsDroped(i, dropAmount);\n    }\n\n  /* Constructor function - initialize Test*/\n  function Test() {\n    totalSupply = 100000000 * (10 ** uint256(decimals)); \n    TestIssued = totalSupply;\n    TestTalk = \"Test\";\n    balances[msg.sender] = totalSupply;\n  }\n ",
        "debug": "calldata_Test_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_Test_0: 0x6e7b698f00000000000000000000000000000000000000000000000000000000\ncalldatasize_Test: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `drops(address[],uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/36/0xa9649d20d658aa4c87ae4e0028d60f5e27012084.sol",
        "function": "drops(address[],uint256)",
        "lineno": 212,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 4622,
        "code": "          if(dests[i].balance > 5",
        "debug": "calldata_Test_32 + 4: 0x1a00d8dca0a08067020000001c2809f0c11c68000870231c08800881089bc000\nstorage_3: 0x0\ncaller: 0x0\ncalldata_Test_0: 0x6e7b698f00000000000000000000000000000000000000000000000000000000\ncalldatasize_Test: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `drops(address[],uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/36/0xa9649d20d658aa4c87ae4e0028d60f5e27012084.sol",
        "function": "drops(address[],uint256)",
        "lineno": 216,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 4820,
        "code": "ropAmount);\n    }\n\n  /* Cons",
        "debug": "calldata_Test_32 + 4: 0x5bbdf20f963a079a2688aea3be20bd6da1e724604201443711e13847e7a629c6\nbalance_at_1461501637330902918203684832716283019655932542975 &\ncalldata_Test_cpy: 0x40000000004068e012430000\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_Test_cpy: 0xfb0599db1e87f137d512370672b6383fe528802eb1fc21e621281b30a350d620\ncalldata_Test_4 + calldata_Test_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_0: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_4: 0x956b749bde444c058156d2656d47664853076bc2940caa26b2cc32cf0c7da1bb\nstorage_3: 0x0\ncaller: 0x0\ncalldata_Test_0: 0x6e7b698f00000000000000000000000000000000000000000000000000000000\ncalldatasize_Test: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `drops(address[],uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/36/0xa9649d20d658aa4c87ae4e0028d60f5e27012084.sol",
        "function": "drops(address[],uint256)",
        "lineno": 224,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 4977,
        "code": "\n    TestTalk = \"Test\";\n",
        "debug": "storage_4: 0xe81998a8c2920c177c840012f77fcea715a9efffda2068446cf9bdd0108172a4\ncalldata_Test_32 + 4: 0x1c7942530ab885601001000100135058e8406000066810000000000000000000\nbalance_at_1461501637330902918203684832716283019655932542975 &\ncalldata_Test_cpy: 0xf1927c1ec20001\ncalldata_Test_4 + calldata_Test_4: 0x1\nstorage_0: 0x4d62fe72dc741d81c8e001cf840f220282db0001a3108446cf9bdd0108172a4\nstorage_3: 0x0\ncaller: 0x0\ncalldata_Test_0: 0x6e7b698f00000000000000000000000000000000000000000000000000000000\ncalldatasize_Test: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `drops(address[],uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/36/0xa9649d20d658aa4c87ae4e0028d60f5e27012084.sol",
        "function": "drops(address[],uint256)",
        "lineno": 230,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 6691,
        "code": "a == ",
        "debug": "callvalue: 0x89eb5ee377ba3105d09f6ee50c706add92b7d6f27b1d5f07ba4a6936b9eed07f\ncalldatasize_Test: 0x3\n",
        "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/36/0xa9649d20d658aa4c87ae4e0028d60f5e27012084.sol",
        "function": "fallback",
        "lineno": 20,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 6742,
        "code": "n c;\n",
        "debug": "calldata_Test_32 + 36: 0xc290137095b13347e55005a6dc184559e0489f1233480050d0fb4bba17d34179\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_Test_32_+_4: 0x9c9efb7ae5acd378025256a3945f5859076e809243093d9ecae2636c9fd28979\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_Test_4: 0xc290137095b13347e55005a6dc184559e0489f1233480050d0fb4bba17d34179\ncalldata_Test_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_Test_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_Test: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `transferFrom(address,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/36/0xa9649d20d658aa4c87ae4e0028d60f5e27012084.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 39,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 6755,
        "code": "contract Basic",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_Test_4: 0x1\ncalldata_Test_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_Test_0: 0xd73dd62300000000000000000000000000000000000000000000000000000000\ncalldatasize_Test: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/36/0xa9649d20d658aa4c87ae4e0028d60f5e27012084.sol",
        "function": "_function_0xd73dd623",
        "lineno": 43,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 6779,
        "code": "b;\n  }\n\n  func",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncalldata_Test_32 + 4: 0x1\ncalldata_Test_4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_Test_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncalldatasize_Test: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/36/0xa9649d20d658aa4c87ae4e0028d60f5e27012084.sol",
        "function": "transfer(address,uint256)",
        "lineno": 33,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 6859,
        "code": "public TestIssued;\n  string public TestTalk;\n    \n    uint256 public constant RATE = 10000000;\n    \n    \n    function () payable{\n        createTokens();\n    }\n  \n  event TestTalked(string newWord);\n  function talkToWorld(string talk_) public onlyOwner {\n      TestTalk = talk_;\n      TestTalked(TestTalk);\n  }\n  \n \n  event TestsDroped(uint256 count, uint256 kit);\n  function drops(address[] dests, uint256 Tests) public onlyOwner {\n        uint256 amount = Tests * (10 ** uint256(decimals));\n        require((TestIssued + (dests.length * amount)) <= totalSupply);\n        uint256 i = 0;\n        uint256 dropAmount = 0;\n        while (i < dests.length) {\n          \n           if(dests[i].balance > 50 finney) {\n               balances[dests[i]] += amount;\n               dropAmount += amount;\n               Transfer(this, dests[i], amount);\n           }\n           i += 1;\n        }\n        TestIssued += dropAmount;\n        TestsDroped(i, dropAmount);\n    }\n\n  /* Constructor function - initialize Test*/\n  function Test() {\n    totalSupply = 100000000 * (10 ** uint256(decimals)); \n    TestIssued = totalSupply;\n    TestTalk = \"Test\";\n    balances[msg.sender] = totalSupply;\n  }\n  function createTokens() payable {\n      require(msg.value > 0);\n      \n     uint256 tokens = msg.value.mul(RATE);\n     balances[msg.sender] = balances[msg.sender].add(tokens);\n     totalSupply = totalSupply.sub(tokens);\n     owner.transfer(msg.value);\n    \n  }\n}",
        "debug": "calldata_Test_4 + calldata_Test_4: 0x8000000000000000000000000000000000000000000000000000000000000000\nstorage_3: 0x0\ncaller: 0x0\ncalldata_Test_0: 0x801baca00000000000000000000000000000000000000000000000000000000\ncalldatasize_Test: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `talkToWorld(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/36/0xa9649d20d658aa4c87ae4e0028d60f5e27012084.sol",
        "function": "talkToWorld(string)",
        "lineno": 191,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 6873,
        "code": "public TestIssued;\n  string public TestTalk;\n    \n    uint256 public constant RATE = 10000000;\n    \n    \n    function () payable{\n        createTokens();\n    }\n  \n  event TestTalked(string newWord);\n  function talkToWorld(string talk_) public onlyOwner {\n      TestTalk = talk_;\n      TestTalked(TestTalk);\n  }\n  \n \n  event TestsDroped(uint256 count, uint256 kit);\n  function drops(address[] dests, uint256 Tests) public onlyOwner {\n        uint256 amount = Tests * (10 ** uint256(decimals));\n        require((TestIssued + (dests.length * amount)) <= totalSupply);\n        uint256 i = 0;\n        uint256 dropAmount = 0;\n        while (i < dests.length) {\n          \n           if(dests[i].balance > 50 finney) {\n               balances[dests[i]] += amount;\n               dropAmount += amount;\n               Transfer(this, dests[i], amount);\n           }\n           i += 1;\n        }\n        TestIssued += dropAmount;\n        TestsDroped(i, dropAmount);\n    }\n\n  /* Constructor function - initialize Test*/\n  function Test() {\n    totalSupply = 100000000 * (10 ** uint256(decimals)); \n    TestIssued = totalSupply;\n    TestTalk = \"Test\";\n    balances[msg.sender] = totalSupply;\n  }\n  function createTokens() payable {\n      require(msg.value > 0);\n      \n     uint256 tokens = msg.value.mul(RATE);\n     balances[msg.sender] = balances[msg.sender].add(tokens);\n     totalSupply = totalSupply.sub(tokens);\n     owner.transfer(msg.value);\n    \n  }\n}",
        "debug": "calldata_Test_4 + calldata_Test_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\nstorage_3: 0x0\ncaller: 0x0\ncalldata_Test_0: 0x801baca00000000000000000000000000000000000000000000000000000000\ncalldatasize_Test: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `talkToWorld(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/36/0xa9649d20d658aa4c87ae4e0028d60f5e27012084.sol",
        "function": "talkToWorld(string)",
        "lineno": 191,
        "title": "Integer Overflow ",
        "type": "Warning"
      }
    ],
    "success": true
  }
}