{"error": null, "issues": [{"address": 909, "code": "dTokens[_beneficiary[i]];\n            _freeze.amount = _amount[i];\n            _freeze.when = _when[i];\n        }\n    }\n\n\n    function transferAndFreeze(address _to, uint256 _value, uint256 _when) external {\n        require(unpausedWallet[msg.sender]);\n        require(freezedTokenOf(_to) == 0);\n        if(_when > 0){\n            freeze storage _freeze = freezedTokens[_to];\n            _freeze.amount = _value;\n            _freeze.when ", "debug": "calldata_Token_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_Token_0: 0x24db1f5000000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `masFreezedTokens(address[],uint256[],uint256[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/40/0xe02588147988c6feb3ad58c94729f9e5c78d8a60.sol", "function": "masFreezedTokens(address[],uint256[],uint256[])", "lineno": 316, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1617, "code": "ntract IToken{\n    function setUnpausedWallet(address _wallet, bool mode) public;\n    function mint(address _to, uint256 _amount) public returns (bool);\n    function totalSupply() public view returns (uint256);\n    fun", "debug": "calldata_Token_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_Token_0: 0x680b3bdf00000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `migrateAll(address[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/40/0xe02588147988c6feb3ad58c94729f9e5c78d8a60.sol", "function": "migrateAll(address[])", "lineno": 388, "title": "Integer Overflow ", "type": "Warning"}, {"address": 3862, "code": "tAndRoles) public {}\n    string publi", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/40/0xe02588147988c6feb3ad58c94729f9e5c78d8a60.sol", "function": "mint(address,uint256)", "lineno": 422, "title": "Message call to external contract", "type": "Informational"}, {"address": 3955, "code": "ame = \"Ale Coin\";\n    string public cons", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/40/0xe02588147988c6feb3ad58c94729f9e5c78d8a60.sol", "function": "mint(address,uint256)", "lineno": 423, "title": "State change after external call", "type": "Warning"}, {"address": 4102, "code": " = \"ALE\";\n    uint8 public constant decima", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/40/0xe02588147988c6feb3ad58c94729f9e5c78d8a60.sol", "function": "mint(address,uint256)", "lineno": 424, "title": "State change after external call", "type": "Warning"}, {"address": 5317, "code": "l mode) public;\n    function mint(add", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/40/0xe02588147988c6feb3ad58c94729f9e5c78d8a60.sol", "function": "migrateAll(address[])", "lineno": 389, "title": "Message call to external contract", "type": "Informational"}, {"address": 5724, "code": "   totalMigrated = totalMigrated.add(", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/40/0xe02588147988c6feb3ad58c94729f9e5c78d8a60.sol", "function": "setMigrationAgent(address)", "lineno": 366, "title": "Message call to external contract", "type": "Informational"}, {"address": 8693, "code": ";\n   ", "debug": "calldata_Token_32 + 4: 0x57f25cd000000000000000000000000000000000000000000000000000000000\nstorage_1: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nreturndatasize: 0x20\nretval_3862: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_Token_0: 0x40c10f1900000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `mint(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/40/0xe02588147988c6feb3ad58c94729f9e5c78d8a60.sol", "function": "mint(address,uint256)", "lineno": 31, "title": "Integer Overflow ", "type": "Warning"}, {"address": 8706, "code": " c;\n    }\n    ", "debug": "The exception is triggered under the following conditions:\n\nstorage_1: 0x1\ncalldata_Token_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nreturndatasize: 0x20\nretval_3862: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_Token_0: 0x40c10f1900000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/40/0xe02588147988c6feb3ad58c94729f9e5c78d8a60.sol", "function": "mint(address,uint256)", "lineno": 32, "title": "Exception state", "type": "Informational"}, {"address": 9142, "code": "xchange pause\". Available to the owne", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/40/0xe02588147988c6feb3ad58c94729f9e5c78d8a60.sol", "function": "masFreezedTokens(address[],uint256[],uint256[])", "lineno": 86, "title": "Message call to external contract", "type": "Informational"}], "success": true}