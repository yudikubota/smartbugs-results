{"error": null, "issues": [{"address": 1286, "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/23/0x1c8654c680c3f18a3b3a0ee943d40848a9fffd0d.sol", "function": "fallback", "lineno": 575, "title": "Message call to external contract", "type": "Informational"}, {"address": 1610, "code": "20 is ERC20Basi", "debug": "The exception is triggered under the following conditions:\n\nstorage_3: 0xfffffffffffffffffffffffffffffffebffffffffffffffffffffffe000045de\ncallvalue: 0x7ffffffffffffffffffffffffffffffffffffefffffefffcfffffffffffd78b6\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_SuperCrowdsale_0: 0x300000000000000000000000000000000000000000000000000000000\ncalldatasize_SuperCrowdsale: 0x4\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/23/0x1c8654c680c3f18a3b3a0ee943d40848a9fffd0d.sol", "function": "fallback", "lineno": 56, "title": "Exception state", "type": "Informational"}, {"address": 1692, "code": "acts tw", "debug": "The exception is triggered under the following conditions:\n\nreturndatasize: 0x20\nretval_1286: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_SuperCrowdsale_0: 0xc2507ac100000000000000000000000000000000000000000000000000000000\ncalldatasize_SuperCrowdsale: 0x4\nstorage_4: 0x0\ncalldata_SuperCrowdsale_4: 0x0\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/23/0x1c8654c680c3f18a3b3a0ee943d40848a9fffd0d.sol", "function": "getTokenAmount(uint256)", "lineno": 39, "title": "Exception state", "type": "Informational"}], "success": true}