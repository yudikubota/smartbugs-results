{"error": null, "issues": [{"address": 703, "code": "out\n        tokenRedemption(msg.sender, message);\n    }\n\n    /**\n     * Function using the Golden ticket - the current holder will be able to get the prize only based on the \"goldenTicketUsed\" event\n     * @dev First checks the GT owner, then fires the event and then changes the owner to null so GT can't be used again\n     * @param message should contain an encrypted contract info of the redeemer to cla", "debug": "calldata_TokenOfGratitude_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_TokenOfGratitude_0: 0x1222c25a00000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenOfGratitude: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `redeem(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/41/0xc79f025b6a48192dbcac11a1fe6d2aafb6911894.sol", "function": "redeem(string)", "lineno": 350, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1100, "code": ", then change the owner and fire an event about the ticket changing owner\n     * @dev The Golden ticket isn't a standard ERC20 token and therefore it needs special handling\n     * @", "debug": "calldata_TokenOfGratitude_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_TokenOfGratitude_0: 0x38f8461400000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenOfGratitude: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `useGoldenTicket(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/41/0xc79f025b6a48192dbcac11a1fe6d2aafb6911894.sol", "function": "useGoldenTicket(string)", "lineno": 367, "title": "Integer Overflow ", "type": "Warning"}, {"address": 7421, "code": " a);\n", "debug": "calldata_TokenOfGratitude_32 + 4: 0x57f25cd000000000000000000000000000000000000000000000000000000000\nstorage_0: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_3: 0x0\ncaller: 0x0\ncalldata_TokenOfGratitude_0: 0x40c10f1900000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenOfGratitude: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `mint(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/41/0xc79f025b6a48192dbcac11a1fe6d2aafb6911894.sol", "function": "mint(address,uint256)", "lineno": 28, "title": "Integer Overflow ", "type": "Warning"}, {"address": 7434, "code": "urn c;\n    }\n}", "debug": "The exception is triggered under the following conditions:\n\nstorage_3: 0x0\nstorage_0: 0x1\ncalldata_TokenOfGratitude_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncaller: 0x0\ncalldata_TokenOfGratitude_0: 0x40c10f1900000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenOfGratitude: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/41/0xc79f025b6a48192dbcac11a1fe6d2aafb6911894.sol", "function": "mint(address,uint256)", "lineno": 29, "title": "Exception state", "type": "Informational"}], "success": true}