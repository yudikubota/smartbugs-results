{"error": null, "issues": [{"address": 268, "code": "0; \n    while (i < dests.length){\n        if(dests[i] != address(0)) \n        {\n            uint256 toRevoke = values[i] * 10**18;\n            if(redeemBalanceOf[dests[i]]>=toRevoke)\n            {\n                redeemBalanceOf[dests[i]] -= toRevoke;\n                BalanceCleared(dests[i],values[i]);\n            }\n        }\n        i++;\n    }\n\n  }\n  \n  function getAvailableTokenCount() public view returns (uint256 balance)  {return token.balanceOf(this);", "debug": "calldata_Token_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_Token_0: 0x56451bc200000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `removeBalances(address[],uint256[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/31/0x13d380f0a736cc2708e8612d8993759011b55baa.sol", "function": "removeBalances(address[],uint256[])", "lineno": 96, "title": "Integer Overflow ", "type": "Warning"}, {"address": 547, "code": "lic {\n    uint256 i = 0; \n    while (i < dests.length){\n        if(dests[i] != address(0)) \n        {\n            uint256 toSend = values[i] * 10**18;\n            redeemBalanceOf[dests[i]] += toSend;\n            BalanceSet(dests[i],values[i]);\n        }\n        i++;\n    }\n  }\n\n  function redeem(uint256 quantity) public {\n      uint256 baseUnits = quantit", "debug": "calldata_Token_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_Token_0: 0xb7e39b4f00000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `setBalances(address[],uint256[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/31/0x13d380f0a736cc2708e8612d8993759011b55baa.sol", "function": "setBalances(address[],uint256[])", "lineno": 70, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1068, "code": "   redeem", "debug": "The exception is triggered under the following conditions:\n\ncalldata_Token_cpy: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_Token_4 + calldata_Token_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_0: 0x0\ncaller: 0x0\ncalldata_Token_0: 0x56451bc200000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\nmem_128 + 32 + 32*calldata_Token_4 + calldata_Token_4: 0x0\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/31/0x13d380f0a736cc2708e8612d8993759011b55baa.sol", "function": "removeBalances(address[],uint256[])", "lineno": 103, "title": "Exception state", "type": "Informational"}, {"address": 1080, "code": "   redeemBalanceOf", "debug": "mem_0 + 192 + 32*calldata_Token_4 + calldata_Token_4: 0xf77124b52a24e057d8a070024000e4e0e29fe1280e6ec1bac4ce6c09cd081036\nmem_128 + 32 + 32*calldata_Token_4 + calldata_Token_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_Token_cpy: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_Token_4 + calldata_Token_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_0: 0x0\ncaller: 0x0\ncalldata_Token_0: 0x56451bc200000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `removeBalances(address[],uint256[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/31/0x13d380f0a736cc2708e8612d8993759011b55baa.sol", "function": "removeBalances(address[],uint256[])", "lineno": 103, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1707, "code": "  } \n\n}", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/31/0x13d380f0a736cc2708e8612d8993759011b55baa.sol", "function": "destroy()", "lineno": 116, "title": "Message call to external contract", "type": "Informational"}, {"address": 1707, "code": "  } \n\n}", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2013\n", "filename": "/unique_chucks/31/0x13d380f0a736cc2708e8612d8993759011b55baa.sol", "function": "destroy()", "lineno": 116, "title": "Multiple Calls", "type": "Information"}, {"address": 2013, "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/31/0x13d380f0a736cc2708e8612d8993759011b55baa.sol", "function": "destroy()", "lineno": 118, "title": "Message call to external contract", "type": "Informational"}, {"address": 2372, "code": "       Ba", "debug": "The exception is triggered under the following conditions:\n\ncalldata_Token_cpy: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_Token_4 + calldata_Token_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_0: 0x0\ncaller: 0x0\ncalldata_Token_0: 0xb7e39b4f00000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\nmem_128 + 32 + 32*calldata_Token_4 + calldata_Token_4: 0x0\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/31/0x13d380f0a736cc2708e8612d8993759011b55baa.sol", "function": "setBalances(address[],uint256[])", "lineno": 77, "title": "Exception state", "type": "Informational"}, {"address": 2384, "code": "       BalanceSet(", "debug": "mem_0 + 192 + 32*calldata_Token_4 + calldata_Token_4: 0xf77124b52a24e057d8a070024000e4e0e29fe1280e6ec1bac4ce6c09cd081036\nmem_128 + 32 + 32*calldata_Token_4 + calldata_Token_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_Token_cpy: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_Token_4 + calldata_Token_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_0: 0x0\ncaller: 0x0\ncalldata_Token_0: 0xb7e39b4f00000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `setBalances(address[],uint256[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/31/0x13d380f0a736cc2708e8612d8993759011b55baa.sol", "function": "setBalances(address[],uint256[])", "lineno": 77, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2479, "code": "[i]);\n        }\n        i++;\n    }\n", "debug": "mem_0 + 192 + 32*calldata_Token_4 + calldata_Token_4: 0x30c0a13b47a897a2e806bb57dd6cfbc147e285f48aa90122eec66ddf542f\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_Token_cpy: 0x8cfcf72bfffccb8c3d575aa5a921c137fc900387f1e53ffe1fa7e65d9d9c0000\nmem_128 + 32 + 32*calldata_Token_4 + calldata_Token_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_Token_cpy: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_Token_4 + calldata_Token_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_0: 0x0\ncaller: 0x0\ncalldata_Token_0: 0xb7e39b4f00000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `setBalances(address[],uint256[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/31/0x13d380f0a736cc2708e8612d8993759011b55baa.sol", "function": "setBalances(address[],uint256[])", "lineno": 77, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2824, "code": "lic { uint256 tokensA", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/31/0x13d380f0a736cc2708e8612d8993759011b55baa.sol", "function": "getAvailableTokenCount()", "lineno": 116, "title": "Message call to external contract", "type": "Informational"}, {"address": 2901, "code": "     uint256 toke", "debug": "calldata_Token_4: 0xf77124b52a24e057d8a070024000e4e0e29fe1280e6ec1bac4ce6c09cd081036\ncalldata_Token_0: 0xdb006a7500000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `redeem(uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/31/0x13d380f0a736cc2708e8612d8993759011b55baa.sol", "function": "redeem(uint256)", "lineno": 86, "title": "Integer Overflow ", "type": "Warning"}, {"address": 3161, "code": "tokensAvailable >= ba", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/31/0x13d380f0a736cc2708e8612d8993759011b55baa.sol", "function": "redeem(uint256)", "lineno": 88, "title": "Message call to external contract", "type": "Informational"}, {"address": 3161, "code": "tokensAvailable >= ba", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3449\n", "filename": "/unique_chucks/31/0x13d380f0a736cc2708e8612d8993759011b55baa.sol", "function": "redeem(uint256)", "lineno": 88, "title": "Multiple Calls", "type": "Information"}, {"address": 3449, "code": "\n        Redeemed(msg.sender,quantit", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/31/0x13d380f0a736cc2708e8612d8993759011b55baa.sol", "function": "redeem(uint256)", "lineno": 90, "title": "Message call to external contract", "type": "Informational"}], "success": true}