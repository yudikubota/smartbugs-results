{
  "contract": "0x584af734a101538cad9b9522d1b9c87f1c08f9c4",
  "tool": "mythril",
  "start": 1563664142.4894688,
  "end": 1563664162.6498094,
  "duration": 20.160340547561646,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 2728,
        "code": "  }\n\n    function mintForMarketing",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/33/0x584af734a101538cad9b9522d1b9c87f1c08f9c4.sol",
        "function": "getTokenSCADARequiresHardCap()",
        "lineno": 398,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 3213,
        "code": "ress)\n        public\n        o",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/33/0x584af734a101538cad9b9522d1b9c87f1c08f9c4.sol",
        "function": "mintForMarketingPool(address,uint256)",
        "lineno": 418,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 3640,
        "code": "kenEntity.mint(_to, _amount);\n",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/33/0x584af734a101538cad9b9522d1b9c87f1c08f9c4.sol",
        "function": "mint(address,uint256)",
        "lineno": 406,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 4760,
        "code": ";\n    }\n\n    function getAppBylawUint256(bytes32",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/33/0x584af734a101538cad9b9522d1b9c87f1c08f9c4.sol",
        "function": "getApplicationState()",
        "lineno": 208,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 5460,
        "code": "ApplicationState() public view returns (uint8) {\n       ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/33/0x584af734a101538cad9b9522d1b9c87f1c08f9c4.sol",
        "function": "getApplicationAssetAddressByName(bytes32)",
        "lineno": 203,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 5460,
        "code": "ApplicationState() public view returns (uint8) {\n       ",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3640\n",
        "filename": "/unique_chucks/33/0x584af734a101538cad9b9522d1b9c87f1c08f9c4.sol",
        "function": "mint(address,uint256)",
        "lineno": 203,
        "title": "Multiple Calls",
        "type": "Information"
      }
    ],
    "success": true
  }
}