{"error": null, "issues": [{"address": 1139, "code": "   \n// Const", "debug": "The exception is triggered under the following conditions:\n\ncalldata_PassDao_0: 0x7e3310700000000000000000000000000000000000000000000000000000000\ncalldatasize_PassDao: 0x4\nstorage_0: 0x0\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/32/0xad2d970edff30d8f166989470aaf4be3ff6375ae.sol", "function": "addMetaProject(address)", "lineno": 88, "title": "Exception state", "type": "Informational"}, {"address": 1428, "code": "ct project {\n        // The", "debug": "The exception is triggered under the following conditions:\n\ncalldata_PassDao_4: 0x0\nstorage_0: 0x0\ncalldata_PassDao_0: 0xef486d100000000000000000000000000000000000000000000000000000000\ncalldatasize_PassDao: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/32/0xad2d970edff30d8f166989470aaf4be3ff6375ae.sol", "function": "_function_0x0ef486d1", "lineno": 41, "title": "Exception state", "type": "Informational"}, {"address": 1587, "code": " indexes of the projects\n", "debug": "The exception is triggered under the following conditions:\n\ncalldata_PassDao_4: 0x0\nstorage_1: 0x0\ncalldata_PassDao_0: 0x107046bd00000000000000000000000000000000000000000000000000000000\ncalldatasize_PassDao: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/32/0xad2d970edff30d8f166989470aaf4be3ff6375ae.sol", "function": "_function_0x107046bd", "lineno": 50, "title": "Exception state", "type": "Informational"}, {"address": 1715, "code": "   \n// Const", "debug": "The exception is triggered under the following conditions:\n\ncalldata_PassDao_0: 0x7c56b79800000000000000000000000000000000000000000000000000000000\ncalldatasize_PassDao: 0x4\nstorage_0: 0x0\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/32/0xad2d970edff30d8f166989470aaf4be3ff6375ae.sol", "function": "addProject(address)", "lineno": 88, "title": "Exception state", "type": "Informational"}, {"address": 2004, "code": "   p.contractAddr", "debug": "storage_1: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_18569430475105882587588266137607568536673111973893317399460219858819262702947: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\nstorage_0: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_PassDao_0: 0x7c56b79800000000000000000000000000000000000000000000000000000000\ncalldatasize_PassDao: 0x4\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_PassDao_4: 0x0\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `addProject(address)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/32/0xad2d970edff30d8f166989470aaf4be3ff6375ae.sol", "function": "addProject(address)", "lineno": 141, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2030, "code": "         p.startDate", "debug": "The exception is triggered under the following conditions:\n\nstorage_1: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_18569430475105882587588266137607568536673111973893317399460219858819262702947: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\nstorage_0: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_PassDao_0: 0x7c56b79800000000000000000000000000000000000000000000000000000000\ncalldatasize_PassDao: 0x4\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_PassDao_4: 0x0\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/32/0xad2d970edff30d8f166989470aaf4be3ff6375ae.sol", "function": "addProject(address)", "lineno": 142, "title": "Exception state", "type": "Informational"}, {"address": 2312, "code": "er\n    funct", "debug": "The exception is triggered under the following conditions:\n\ncalldata_PassDao_0: 0xbe67f4fd00000000000000000000000000000000000000000000000000000000\ncalldatasize_PassDao: 0x4\nstorage_0: 0x0\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/32/0xad2d970edff30d8f166989470aaf4be3ff6375ae.sol", "function": "ActualShareManager()", "lineno": 79, "title": "Exception state", "type": "Informational"}, {"address": 2384, "code": "om {if (msg.", "debug": "The exception is triggered under the following conditions:\n\ncalldata_PassDao_0: 0xcbbe219900000000000000000000000000000000000000000000000000000000\ncalldatasize_PassDao: 0x4\nstorage_0: 0x0\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/32/0xad2d970edff30d8f166989470aaf4be3ff6375ae.sol", "function": "ActualTokenManager()", "lineno": 86, "title": "Exception state", "type": "Informational"}, {"address": 2456, "code": "roject\n    f", "debug": "The exception is triggered under the following conditions:\n\ncalldata_PassDao_0: 0xe934ab0c00000000000000000000000000000000000000000000000000000000\ncalldatasize_PassDao: 0x4\nstorage_0: 0x0\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/32/0xad2d970edff30d8f166989470aaf4be3ff6375ae.sol", "function": "ActualCommitteeRoom()", "lineno": 69, "title": "Exception state", "type": "Informational"}, {"address": 2531, "code": "   \n// Const", "debug": "The exception is triggered under the following conditions:\n\ncalldata_PassDao_0: 0xf000999e00000000000000000000000000000000000000000000000000000000\ncalldatasize_PassDao: 0x4\nstorage_0: 0x0\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/32/0xad2d970edff30d8f166989470aaf4be3ff6375ae.sol", "function": "upgrade(address,address,address)", "lineno": 88, "title": "Exception state", "type": "Informational"}, {"address": 2748, "code": "mitteeRoom = _newC", "debug": "storage_0: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_18569430475105882587588266137607568536673111973893317399460219858819262702947: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_PassDao_0: 0xf000999e00000000000000000000000000000000000000000000000000000000\ncalldatasize_PassDao: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `upgrade(address,address,address)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/32/0xad2d970edff30d8f166989470aaf4be3ff6375ae.sol", "function": "upgrade(address,address,address)", "lineno": 111, "title": "Integer Overflow ", "type": "Warning"}], "success": true}