{
  "contract": "0x7402c0574d7bb1230d0d0cf6ee50baa1f98af762",
  "tool": "mythril",
  "start": 1563547889.791945,
  "end": 1563547961.3617172,
  "duration": 71.56977224349976,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 1244,
        "code": "erred\n    );\n  }\n\n  function terminateTokenLock() public onlyOwner() ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/11/0x7402c0574d7bb1230d0d0cf6ee50baa1f98af762.sol",
        "function": "withdrawFunds()",
        "lineno": 137,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 1244,
        "code": "erred\n    );\n  }\n\n  function terminateTokenLock() public onlyOwner() ",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function withdrawFunds(). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/11/0x7402c0574d7bb1230d0d0cf6ee50baa1f98af762.sol",
        "function": "withdrawFunds()",
        "lineno": 137,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 1616,
        "code": ";\n    _;\n  }\n\n  modifier checkValidLockingTime(",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/11/0x7402c0574d7bb1230d0d0cf6ee50baa1f98af762.sol",
        "function": "lockFunds(uint256,uint256)",
        "lineno": 55,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 1616,
        "code": ";\n    _;\n  }\n\n  modifier checkValidLockingTime(",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1990\nCall at address: 1990\n",
        "filename": "/unique_chucks/11/0x7402c0574d7bb1230d0d0cf6ee50baa1f98af762.sol",
        "function": "lockFunds(uint256,uint256)",
        "lineno": 55,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 1616,
        "code": ";\n    _;\n  }\n\n  modifier checkValidLockingTime(",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function lockFunds(uint256,uint256). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/11/0x7402c0574d7bb1230d0d0cf6ee50baa1f98af762.sol",
        "function": "lockFunds(uint256,uint256)",
        "lineno": 55,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 1990,
        "code": "mount\"] += _tokens;\n    lockingData[msg.sender][\"nodes\"] += _nodes;\n\n    e",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/11/0x7402c0574d7bb1230d0d0cf6ee50baa1f98af762.sol",
        "function": "lockFunds(uint256,uint256)",
        "lineno": 117,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 2193,
        "code": "\n      msg.sender,\n      _tokens,\n      _nod",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/11/0x7402c0574d7bb1230d0d0cf6ee50baa1f98af762.sol",
        "function": "lockFunds(uint256,uint256)",
        "lineno": 120,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 2330,
        "code": ");\n  }\n\n  function withdrawFunds()\n    pub",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/11/0x7402c0574d7bb1230d0d0cf6ee50baa1f98af762.sol",
        "function": "lockFunds(uint256,uint256)",
        "lineno": 124,
        "title": "State change after external call",
        "type": "Warning"
      }
    ],
    "success": true
  }
}