{"error": null, "issues": [{"address": 974, "code": "nt cnt = _receivers.length;\n\t    uint256 amount = _value.mul(uint256(cnt));\n\t\n\t    require(cnt > 0 && cnt <= 20);\n\t    require(_value > 0 && balances[msg.sender] >= amount);\n\n\t    balances[msg.sender] = balances[msg.sender].sub(amount);\n\t    for (uint i = 0; i < cnt; i++) {\n\t\t    balances[_receivers[i]] = balances[_receivers[i]].add(_value);\n\t\t    Transfer(msg.sender, _receivers[i], _value);\n\t    }\n\t    return true;\n    }\n\n    function transferFrom(address _from, address _to, uint256 _value) returns \n    (bool success) {\n   ", "debug": "calldata_Token_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_Token_0: 0x83f12fec00000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `batchTransfer(address[],uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/41/0xcf36920a7b0d8414a1848ec7432ca7fa4826c522.sol", "function": "batchTransfer(address[],uint256)", "lineno": 94, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1397, "code": "(msg.sender, _spender, _value);\n        //call the receiveApproval function on the contract you want to be notified. This crafts the function signature manually so one doesn't have to include a contract in here just for this.\n        //receiveApproval(address _from, uint256 _value, address _tokenContract, bytes _extraData)\n        //it is assumed that when does this that the call *should* succeed, otherwise one would use vanilla approve instead.\n        require(_spender.call(bytes4(bytes32(sha3(\"receiveApproval(address,uint256,address,bytes)\"))), msg.sender, _value, this, _extraData));\n        return true;\n    }\n\n}", "debug": "calldata_Token_32 + 36: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_Token_0: 0xcae9ca5100000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `approveAndCall(address,uint256,bytes)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/41/0xcf36920a7b0d8414a1848ec7432ca7fa4826c522.sol", "function": "approveAndCall(address,uint256,bytes)", "lineno": 168, "title": "Integer Overflow ", "type": "Warning"}, {"address": 5222, "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/41/0xcf36920a7b0d8414a1848ec7432ca7fa4826c522.sol", "function": "approveAndCall(address,uint256,bytes)", "lineno": 176, "title": "Message call to external contract", "type": "Warning"}, {"address": 5389, "code": " a);\n", "debug": "calldata_Token_32 + 36: 0x800000000000000003ffd0badcb9b7000000002781000000000000000006bfff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_Token_32_+_4: 0x800000000000000000008eb2e34648ee0801030820000000000000000000a000\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x800000000000000003ffd0badcb9b7000000002781000000000000000006bfff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_Token_4: 0x800000000000000003ffd0badcb9b7000000002781000000000000000006bfff\ncalldata_Token_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_Token_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `transferFrom(address,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/41/0xcf36920a7b0d8414a1848ec7432ca7fa4826c522.sol", "function": "transferFrom(address,address,uint256)", "lineno": 24, "title": "Integer Overflow ", "type": "Warning"}, {"address": 5402, "code": "urn c;\n  }\n}\n\n", "debug": "The exception is triggered under the following conditions:\n\ncalldata_Token_32 + 4: 0x950dff78e666f73fd36ffedf5fe656f42f732f95edbafb7bf77fedeee4c653a9\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_Token_4: 0xf71ca024c4e4c48edb080090575702d73908a831c1b8c07b8480010000f10f3b\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x950dff78e666f73fd36ffedf5fe656f42f732f95edbafb7bf77fedeee4c653a9\ncalldata_Token_4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_Token_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/41/0xcf36920a7b0d8414a1848ec7432ca7fa4826c522.sol", "function": "transfer(address,uint256)", "lineno": 25, "title": "Exception state", "type": "Informational"}], "success": true}