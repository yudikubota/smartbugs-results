{"error": null, "issues": [{"address": 2382, "code": "price_coeff), totalSup", "debug": "storage_5: 0xce000f749f6976b078f079019010083ccbd37fa15fc1109903cc948df1359e75\ncalldata_OpenPoWH_4: 0x9941df413b0548070000bf2f01004702090a9bbdd8400b7eebefc9a1f9b59ec5\nstorage_3: 0x0\nstorage_4: 0x1\nstorage_2: 0x10041a070ff04000000000003ffc2000008000000000000000000000000000\ncalldata_OpenPoWH_0: 0x62dbf26100000000000000000000000000000000000000000000000000000000\ncalldatasize_OpenPoWH: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `getTokensForEther(uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/44/0x6e692023289738afd6ec4a89bf048c5fbe2db884.sol", "function": "getTokensForEther(uint256)", "lineno": 402, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2587, "code": "at should be\n\t// quite rare unless interacting directly with the sm", "debug": "storage_4: 0x74b2f52771f917b0fc0fc0fc0fc0fc0fc0fc0fc0fc0fc0fc0fc0fc0fc0fc0fc2\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xfd7fffffffffffefffffffffffffffffffffffffffffffffffffffffffffffbf\ncalldata_OpenPoWH_0: 0x957b2e5600000000000000000000000000000000000000000000000000000000\ncalldatasize_OpenPoWH: 0x4\ncallvalue: 0x0\n", "description": "A possible integer underflow exists in the function `reinvestDividends()`.\nThe subtraction may result in a value < 0.", "filename": "/unique_chucks/44/0x6e692023289738afd6ec4a89bf048c5fbe2db884.sol", "function": "reinvestDividends()", "lineno": 255, "title": "Integer Underflow", "type": "Warning"}, {"address": 3506, "code": "79ac;\n\tint256  const", "debug": "storage_2: 0xc0000c60000\nstorage_4: 0x0\nstorage_5: 0x0\nstorage_3: 0x0\ncalldata_OpenPoWH_0: 0x4b75033400000000000000000000000000000000000000000000000000000000\ncalldatasize_OpenPoWH: 0x4\ncallvalue: 0x0\n", "description": "A possible integer underflow exists in the function `sellPrice()`.\nThe subtraction may result in a value < 0.", "filename": "/unique_chucks/44/0x6e692023289738afd6ec4a89bf048c5fbe2db884.sol", "function": "sellPrice()", "lineno": 426, "title": "Integer Underflow", "type": "Warning"}, {"address": 3695, "debug": "callvalue: 0x48656c90e2b9a9\nstorage_5: 0xfffffffffffffffffffffffffffffffffffffffffffffffffff036630100a171\nblock_number: 0x0\nstorage_6: 0xff00\nstorage_7: 0x0\ncalldatasize_OpenPoWH: 0x3\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/44/0x6e692023289738afd6ec4a89bf048c5fbe2db884.sol", "function": "fallback", "lineno": 517, "title": "Integer Overflow ", "type": "Warning"}, {"address": 3708, "debug": "The exception is triggered under the following conditions:\n\ncallvalue: 0x1104056bf7ef7cb\nstorage_5: 0xffffffffffffffffffffffffffffffffffffffffffffffffff730a10bc00f007\nblock_number: 0x0\nstorage_6: 0xff00\nstorage_7: 0x0\ncalldatasize_OpenPoWH: 0x3\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/44/0x6e692023289738afd6ec4a89bf048c5fbe2db884.sol", "function": "fallback", "lineno": 517, "title": "Exception state", "type": "Informational"}, {"address": 4233, "code": "}\n}", "debug": "The exception is triggered under the following conditions:\n\nstorage_5: 0xfffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_3: 0x0\nstorage_4: 0x1\nstorage_2: 0xffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000\ncalldata_OpenPoWH_0: 0x8620410b00000000000000000000000000000000000000000000000000000000\ncalldatasize_OpenPoWH: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/44/0x6e692023289738afd6ec4a89bf048c5fbe2db884.sol", "function": "buyPrice()", "lineno": 516, "title": "Exception state", "type": "Informational"}, {"address": 4305, "code": "ervalue)*crr_n/crr_d + price_c", "debug": "storage_4: 0xff3717ddf147ba7fd6976a72ee859c9c251431c6dd4346e384e0fd941c87b69c\nstorage_2: 0xde9aa0007ffff9dbbb05d00001000207fffdffbfffbfbfbfffbfbfefbfbff7f6\ncalldata_OpenPoWH_0: 0x62dbf26100000000000000000000000000000000000000000000000000000000\ncalldatasize_OpenPoWH: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `getTokensForEther(uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/44/0x6e692023289738afd6ec4a89bf048c5fbe2db884.sol", "function": "getTokensForEther(uint256)", "lineno": 397, "title": "Integer Overflow ", "type": "Warning"}, {"address": 4306, "code": "ve() + ethervalue)*crr_n/crr_d + price_coeff), totalSupp", "debug": "storage_3: 0x1\nstorage_4: 0x1\nstorage_2: 0x0\ncalldata_OpenPoWH_0: 0x62dbf26100000000000000000000000000000000000000000000000000000000\ncalldatasize_OpenPoWH: 0x4\ncallvalue: 0x0\n", "description": "A possible integer underflow exists in the function `getTokensForEther(uint256)`.\nThe subtraction may result in a value < 0.", "filename": "/unique_chucks/44/0x6e692023289738afd6ec4a89bf048c5fbe2db884.sol", "function": "getTokensForEther(uint256)", "lineno": 397, "title": "Integer Underflow", "type": "Warning"}], "success": true}