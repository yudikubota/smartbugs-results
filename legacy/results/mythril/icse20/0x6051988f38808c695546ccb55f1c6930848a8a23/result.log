{"error": null, "issues": [{"address": 966, "code": "blic balance;\n\n    // Begin: only for testi", "debug": "The exception is triggered under the following conditions:\n\nstorage_15: 0xfc00\ncalldata_TriipInvestorsServices_0: 0x91f11f6a00000000000000000000000000000000000000000000000000000000\ncalldatasize_TriipInvestorsServices: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/27/0x6051988f38808c695546ccb55f1c6930848a8a23.sol", "function": "_function_0x91f11f6a", "lineno": 60, "title": "Exception state", "type": "Informational"}, {"address": 1583, "code": "alance();\n\n      ", "debug": "storage_14: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_9: 0x0\ncalldata_TriipInvestorsServices_0: 0x4e71d92d00000000000000000000000000000000000000000000000000000000\ncalldatasize_TriipInvestorsServices: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `claim()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/27/0x6051988f38808c695546ccb55f1c6930848a8a23.sol", "function": "claim()", "lineno": 149, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1828, "code": "f(seller, payoffAmount, KPI_1", "debug": "", "description": "A possible transaction order independence vulnerability exists in function claim(). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/27/0x6051988f38808c695546ccb55f1c6930848a8a23.sol", "function": "claim()", "lineno": 163, "title": "Transaction order dependence", "type": "Warning"}, {"address": 2213, "debug": "", "description": "In the function `refund()` the following predictable state variables are used to determine Ether recipient:\n- block.timestamp\n", "filename": "/unique_chucks/27/0x6051988f38808c695546ccb55f1c6930848a8a23.sol", "function": "refund()", "lineno": 248, "title": "Dependence on predictable environment variable", "type": "Warning"}], "success": true}