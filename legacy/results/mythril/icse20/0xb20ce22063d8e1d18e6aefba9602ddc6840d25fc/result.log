{"error": null, "issues": [{"address": 501, "code": "an owner allowed to a spender and execute a call with the sent data.\n     *\n     * approve should be called when allowed[_spender] == 0. To decrement\n     * allowed value is better to use this function to avoid 2 calls (and wait until\n     * the first transaction is", "debug": "calldata_StandardTokenExt_32 + 36: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_StandardTokenExt_0: 0x16ca3b6300000000000000000000000000000000000000000000000000000000\ncalldatasize_StandardTokenExt: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `increaseApproval(address,uint256,bytes)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/15/0xb20ce22063d8e1d18e6aefba9602ddc6840d25fc.sol", "function": "increaseApproval(address,uint256,bytes)", "lineno": 370, "title": "Integer Overflow ", "type": "Warning"}, {"address": 848, "code": " tokens to a specified\n       address and execute a call with the sent data on the same transaction\n\n       @param _to address The address which you want to transfer to\n       @param _value uint256 the amout of tokens to be transfered\n      ", "debug": "calldata_StandardTokenExt_32 + 36: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_StandardTokenExt_0: 0x5c17f9f400000000000000000000000000000000000000000000000000000000\ncalldatasize_StandardTokenExt: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `approve(address,uint256,bytes)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/15/0xb20ce22063d8e1d18e6aefba9602ddc6840d25fc.sol", "function": "approve(address,uint256,bytes)", "lineno": 308, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1207, "code": "rization control\n   * functions, this simplifies the implementation of \"user permissions\".\n   */\n  contract Ownable {\n    address public owner;\n\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n\n    /**\n     * @dev The Ownable constru", "debug": "calldata_StandardTokenExt_32 + 36: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_StandardTokenExt_0: 0x7272ad4900000000000000000000000000000000000000000000000000000000\ncalldatasize_StandardTokenExt: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `decreaseApproval(address,uint256,bytes)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/15/0xb20ce22063d8e1d18e6aefba9602ddc6840d25fc.sol", "function": "decreaseApproval(address,uint256,bytes)", "lineno": 395, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2827, "code": "face marker.\n   *\n   * @notice Interface marker ", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/15/0xb20ce22063d8e1d18e6aefba9602ddc6840d25fc.sol", "function": "_function_0x16114acd", "lineno": 456, "title": "Message call to external contract", "type": "Warning"}, {"address": 3091, "code": "lls (and wait until\n", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/15/0xb20ce22063d8e1d18e6aefba9602ddc6840d25fc.sol", "function": "increaseApproval(address,uint256,bytes)", "lineno": 373, "title": "Message call to external contract", "type": "Warning"}, {"address": 4284, "code": "uint256 the amout of", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/15/0xb20ce22063d8e1d18e6aefba9602ddc6840d25fc.sol", "function": "approve(address,uint256,bytes)", "lineno": 312, "title": "Message call to external contract", "type": "Warning"}, {"address": 5242, "code": "ewOwner);\n\n\n    /**\n", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/15/0xb20ce22063d8e1d18e6aefba9602ddc6840d25fc.sol", "function": "decreaseApproval(address,uint256,bytes)", "lineno": 402, "title": "Message call to external contract", "type": "Warning"}, {"address": 6468, "code": "or a group investor o", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/15/0xb20ce22063d8e1d18e6aefba9602ddc6840d25fc.sol", "function": "_function_0xc45d19db", "lineno": 470, "title": "Message call to external contract", "type": "Warning"}, {"address": 6468, "code": "or a group investor o", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2827\n", "filename": "/unique_chucks/15/0xb20ce22063d8e1d18e6aefba9602ddc6840d25fc.sol", "function": "_function_0x16114acd", "lineno": 470, "title": "Multiple Calls", "type": "Information"}, {"address": 7558, "code": " }\n  ", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_StandardTokenExt_4: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncalldata_StandardTokenExt_32 + 4: 0x57f25cd000000000000000000000000000000000000000000000000000000000\ncalldata_StandardTokenExt_0: 0xd73dd62300000000000000000000000000000000000000000000000000000000\ncalldatasize_StandardTokenExt: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `increaseApproval(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/15/0xb20ce22063d8e1d18e6aefba9602ddc6840d25fc.sol", "function": "increaseApproval(address,uint256)", "lineno": 52, "title": "Integer Overflow ", "type": "Warning"}, {"address": 7571, "code": "\n   * Safe uns", "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_StandardTokenExt_4: 0x1\ncalldata_StandardTokenExt_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_StandardTokenExt_0: 0xd73dd62300000000000000000000000000000000000000000000000000000000\ncalldatasize_StandardTokenExt: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/15/0xb20ce22063d8e1d18e6aefba9602ddc6840d25fc.sol", "function": "increaseApproval(address,uint256)", "lineno": 56, "title": "Exception state", "type": "Informational"}], "success": true}