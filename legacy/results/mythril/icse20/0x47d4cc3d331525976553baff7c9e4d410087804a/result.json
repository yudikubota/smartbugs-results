{
  "contract": "0x47d4cc3d331525976553baff7c9e4d410087804a",
  "tool": "mythril",
  "start": 1563525794.8767815,
  "end": 1563525815.918845,
  "duration": 21.04206347465515,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 809,
        "code": "r);\n      uint256 contract_token",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/10/0x47d4cc3d331525976553baff7c9e4d410087804a.sol",
        "function": "withdraw()",
        "lineno": 31,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 809,
        "code": "r);\n      uint256 contract_token",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1351\nCall at address: 1059\n",
        "filename": "/unique_chucks/10/0x47d4cc3d331525976553baff7c9e4d410087804a.sol",
        "function": "withdraw()",
        "lineno": 31,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 1059,
        "code": "\n      uint256 tokens_to_withd",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/10/0x47d4cc3d331525976553baff7c9e4d410087804a.sol",
        "function": "withdraw()",
        "lineno": 32,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 1059,
        "code": "\n      uint256 tokens_to_withd",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1351\n",
        "filename": "/unique_chucks/10/0x47d4cc3d331525976553baff7c9e4d410087804a.sol",
        "function": "withdraw()",
        "lineno": 32,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 1131,
        "code": "/eth_balance;\n      eth_balance -= balance;\n",
        "debug": "The exception is triggered under the following conditions:\n\nretval_1059: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nreturndatasize: 0x20\nretval_809: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncalldata_Proxy_0: 0x3ccfd60b00000000000000000000000000000000000000000000000000000000\ncalldatasize_Proxy: 0x4\nstorage_1: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/10/0x47d4cc3d331525976553baff7c9e4d410087804a.sol",
        "function": "withdraw()",
        "lineno": 33,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 1144,
        "code": "uire(token.transfer(ms",
        "debug": "retval_809: 0x100000000000000000000000000000000000000000000\nstorage_1: 0xfffffffffffffffffffffffffffffffffffffffffffe\nretval_1059: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nreturndatasize: 0x20\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncalldata_Proxy_0: 0x3ccfd60b00000000000000000000000000000000000000000000000000000000\ncalldatasize_Proxy: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer underflow exists in the function `withdraw()`.\nThe subtraction may result in a value < 0.",
        "filename": "/unique_chucks/10/0x47d4cc3d331525976553baff7c9e4d410087804a.sol",
        "function": "withdraw()",
        "lineno": 35,
        "title": "Integer Underflow",
        "type": "Warning"
      },
      {
        "address": 1150,
        "code": "uire(token.transfer(ms",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/10/0x47d4cc3d331525976553baff7c9e4d410087804a.sol",
        "function": "withdraw()",
        "lineno": 35,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 1351,
        "code": "to_withdraw));\n\n  }\n\n  function emergency_with",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/10/0x47d4cc3d331525976553baff7c9e4d410087804a.sol",
        "function": "withdraw()",
        "lineno": 35,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 1736,
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/10/0x47d4cc3d331525976553baff7c9e4d410087804a.sol",
        "function": "emergency_withdraw(address)",
        "lineno": 44,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 1736,
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1928\n",
        "filename": "/unique_chucks/10/0x47d4cc3d331525976553baff7c9e4d410087804a.sol",
        "function": "emergency_withdraw(address)",
        "lineno": 44,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 1928,
        "code": "en).balanceOf(this)));\n  }\n\n}",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/10/0x47d4cc3d331525976553baff7c9e4d410087804a.sol",
        "function": "emergency_withdraw(address)",
        "lineno": 41,
        "title": "Message call to external contract",
        "type": "Warning"
      }
    ],
    "success": true
  }
}