{
  "contract": "0x25543db4ff6a57affb219cca074a1e983c024c18",
  "tool": "mythril",
  "start": 1563521183.1484315,
  "end": 1563521731.4780872,
  "duration": 548.3296556472778,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 5577,
        "code": ", tokens);\n                } ",
        "debug": "storage_4: 0x4020022000002220000000000010000000000000000000000cca9100800fc40\nstorage_9: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd\nstorage_12: 0x66\nstorage_6: 0x1\ncallvalue: 0x73d3f3d7f00013d3f0000000000000000000000000000000101bd800c020ffc\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xff00\nstorage_11: 0xff00\ncalldatasize_EPCToken: 0x3\n",
        "description": "A possible integer underflow exists in the function `fallback`.\nThe subtraction may result in a value < 0.",
        "filename": "/unique_chucks/5/0x25543db4ff6a57affb219cca074a1e983c024c18.sol",
        "function": "fallback",
        "lineno": 127,
        "title": "Integer Underflow",
        "type": "Warning"
      },
      {
        "address": 6820,
        "code": "  if (tokensToUnfreeze > frozenAwardedTokens[_owner]) {",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_EPCToken_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ntimestamp: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncalldata_EPCToken_0: 0x1247443500000000000000000000000000000000000000000000000000000000\ncalldatasize_EPCToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer underflow exists in the function `unfreezeAwardedTokens(address)`.\nThe subtraction may result in a value < 0.",
        "filename": "/unique_chucks/5/0x25543db4ff6a57affb219cca074a1e983c024c18.sol",
        "function": "unfreezeAwardedTokens(address)",
        "lineno": 297,
        "title": "Integer Underflow",
        "type": "Warning"
      },
      {
        "address": 9227,
        "code": "ught = 75;   // % of tokens you buy that",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_EPCToken_0: 0x2693ed9b00000000000000000000000000000000000000000000000000000000\ncalldatasize_EPCToken: 0x4\nstorage_4: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/5/0x25543db4ff6a57affb219cca074a1e983c024c18.sol",
        "function": "calcTokenSold(uint256)",
        "lineno": 95,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 9455,
        "code": "= _delta * weisPerEth;\n        ret",
        "debug": "storage_5: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_4: 0x1\ncalldata_EPCToken_4: 0x57f25cd000000000000000000000000000000000000000000000000000000000\nstorage_7: 0x0\ncaller: 0x0\nstorage_8: 0xffffffffffffffffffffffffffffffffffffffff00\ncalldata_EPCToken_0: 0x28ce884500000000000000000000000000000000000000000000000000000000\ncalldatasize_EPCToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `addToTotalSupply(uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/5/0x25543db4ff6a57affb219cca074a1e983c024c18.sol",
        "function": "addToTotalSupply(uint256)",
        "lineno": 61,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 9475,
        "code": "ibuted;\n    }\n    \n    function with",
        "debug": "storage_10: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_4: 0x1\ncalldata_EPCToken_4: 0x57f25cd000000000000000000000000000000000000000000000000000000000\nstorage_7: 0x0\ncaller: 0x0\nstorage_8: 0xffffffffffffffffffffffffffffffffffffffff00\ncalldata_EPCToken_0: 0x28ce884500000000000000000000000000000000000000000000000000000000\ncalldatasize_EPCToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `addToTotalSupply(uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/5/0x25543db4ff6a57affb219cca074a1e983c024c18.sol",
        "function": "addToTotalSupply(uint256)",
        "lineno": 62,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 15912,
        "code": "{\n                    tokensToUnfreeze = frozenT",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_EPCToken_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ntimestamp: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncalldata_EPCToken_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_EPCToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer underflow exists in the function `transferFrom(address,address,uint256)`.\nThe subtraction may result in a value < 0.",
        "filename": "/unique_chucks/5/0x25543db4ff6a57affb219cca074a1e983c024c18.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 275,
        "title": "Integer Underflow",
        "type": "Warning"
      }
    ],
    "success": true
  }
}