{"error": null, "issues": [{"address": 1347, "code": "event Transfer(address in", "debug": "The exception is triggered under the following conditions:\n\ncaller: 0x0\ncalldata_bbvipToken_0: 0x95ea7b300000000000000000000000000000000000000000000000000000000\ncalldatasize_bbvipToken: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/42/0xb1a595c17d0d467eb1e99aabbb3e9a22a0d60c57.sol", "function": "approve(address,uint256)", "lineno": 58, "title": "Exception state", "type": "Informational"}, {"address": 1708, "code": "event Transfer(address in", "debug": "The exception is triggered under the following conditions:\n\ncaller: 0x0\ncalldata_bbvipToken_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_bbvipToken: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/42/0xb1a595c17d0d467eb1e99aabbb3e9a22a0d60c57.sol", "function": "transferFrom(address,address,uint256)", "lineno": 58, "title": "Exception state", "type": "Informational"}, {"address": 2183, "code": "event Transfer(address in", "debug": "The exception is triggered under the following conditions:\n\ncaller: 0x0\ncalldata_bbvipToken_0: 0x42966c6800000000000000000000000000000000000000000000000000000000\ncalldatasize_bbvipToken: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/42/0xb1a595c17d0d467eb1e99aabbb3e9a22a0d60c57.sol", "function": "burn(uint256)", "lineno": 58, "title": "Exception state", "type": "Informational"}, {"address": 2758, "code": "event Transfer(address in", "debug": "The exception is triggered under the following conditions:\n\ncaller: 0x0\ncalldata_bbvipToken_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncalldatasize_bbvipToken: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/42/0xb1a595c17d0d467eb1e99aabbb3e9a22a0d60c57.sol", "function": "transfer(address,uint256)", "lineno": 58, "title": "Exception state", "type": "Informational"}, {"address": 2830, "code": "return a - b;\n", "debug": "The exception is triggered under the following conditions:\n\ncalldata_bbvipToken_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_5: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_bbvipToken_0: 0x42966c6800000000000000000000000000000000000000000000000000000000\ncalldatasize_bbvipToken: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/42/0xb1a595c17d0d467eb1e99aabbb3e9a22a0d60c57.sol", "function": "burn(uint256)", "lineno": 22, "title": "Exception state", "type": "Informational"}, {"address": 3368, "code": ";\n   ", "debug": "calldata_bbvipToken_32 + 4: 0xc290137095b13347e55005a6dc184559e0489f1233480050d0fb4bba17d34179\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_bbvipToken_4: 0x9c9efb7ae5acd378025256a3945f5859076e809243093d9ecae2636c9fd28979\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xc290137095b13347e55005a6dc184559e0489f1233480050d0fb4bba17d34179\ncalldata_bbvipToken_4: 0xffffffffffffffffffffffffffffffffffffffff\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_bbvipToken_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncalldatasize_bbvipToken: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `transfer(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/42/0xb1a595c17d0d467eb1e99aabbb3e9a22a0d60c57.sol", "function": "transfer(address,uint256)", "lineno": 27, "title": "Integer Overflow ", "type": "Warning"}, {"address": 3381, "code": " c;\n  }\n}\n\ncon", "debug": "The exception is triggered under the following conditions:\n\ncalldata_bbvipToken_32 + 4: 0x6218000d800000000000000000000000039800002005500633e06f771baff7fc\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_bbvipToken_4: 0xbd5dfeabad0efffffffffeffffffffffd599ffefbfe6f24271e80e64322c0700\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x6218000d800000000000000000000000039800002005500633e06f771baff7fc\ncalldata_bbvipToken_4: 0xffffffffffffffffffffffffffffffffffffffff\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_bbvipToken_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncalldatasize_bbvipToken: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/42/0xb1a595c17d0d467eb1e99aabbb3e9a22a0d60c57.sol", "function": "transfer(address,uint256)", "lineno": 28, "title": "Exception state", "type": "Informational"}], "success": true}