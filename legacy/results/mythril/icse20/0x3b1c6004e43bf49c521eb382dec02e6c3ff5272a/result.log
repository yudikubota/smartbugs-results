{"error": null, "issues": [{"address": 770, "code": "nction () payable {\n    // Delega", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xabbbb0ce8dd4b0201de000000000000000100208080000000001400000002032\ncallvalue: 0xa8888ffc92536ddfe220000000000000001002080800000000005c2900340dbc\ncalldata_LINKFund_0: 0x2f00000000000000000000000000000000000000000000000000000000\ncalldatasize_LINKFund: 0x4\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/12/0x3b1c6004e43bf49c521eb382dec02e6c3ff5272a.sol", "function": "fallback", "lineno": 121, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1015, "code": "to interact.\n  function default_h", "debug": "", "description": "In the function `buy_the_tokens()` the following predictable state variables are used to determine Ether recipient:\n- block.number\n", "filename": "/unique_chucks/12/0x3b1c6004e43bf49c521eb382dec02e6c3ff5272a.sol", "function": "buy_the_tokens()", "lineno": 114, "title": "Dependence on predictable environment variable", "type": "Warning"}, {"address": 1323, "code": " buy_the_tokens() {\n    // Short cir", "debug": "", "description": "In the function `refund_me()` the following predictable state variables are used to determine Ether recipient:\n- block.number\n", "filename": "/unique_chucks/12/0x3b1c6004e43bf49c521eb382dec02e6c3ff5272a.sol", "function": "refund_me()", "lineno": 94, "title": "Dependence on predictable environment variable", "type": "Warning"}, {"address": 1323, "code": " buy_the_tokens() {\n    // Short cir", "debug": "SOLVER OUTPUT:\nstorage_1: 0x0\ncalldata_LINKFund_0: 0x81702c3400000000000000000000000000000000000000000000000000000000\ncalldatasize_LINKFund: 0x4\ncallvalue: 0x0\n", "description": "In the function `refund_me()` a non-zero amount of Ether is sent to msg.sender.\n\nThere is a check on storage index 1. This storage slot can be written to by calling the function `buy_the_tokens()`.", "filename": "/unique_chucks/12/0x3b1c6004e43bf49c521eb382dec02e6c3ff5272a.sol", "function": "refund_me()", "lineno": 94, "title": "Ether send", "type": "Warning"}, {"address": 1554, "code": "ken withdrawals if there are n", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/12/0x3b1c6004e43bf49c521eb382dec02e6c3ff5272a.sol", "function": "perform_withdraw(address)", "lineno": 60, "title": "Message call to external contract", "type": "Warning"}, {"address": 1554, "code": "ken withdrawals if there are n", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2018\n", "filename": "/unique_chucks/12/0x3b1c6004e43bf49c521eb382dec02e6c3ff5272a.sol", "function": "perform_withdraw(address)", "lineno": 60, "title": "Multiple Calls", "type": "Information"}, {"address": 1702, "code": "value;\n      \n    // Update the value of tokens currently held by th", "debug": "The exception is triggered under the following conditions:\n\nreturndatasize: 0x20\nretval_1554: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_1: 0xff00\ncalldata_LINKFund_0: 0xfcfdbc2300000000000000000000000000000000000000000000000000000000\ncalldatasize_LINKFund: 0x4\nstorage_2: 0x0\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/12/0x3b1c6004e43bf49c521eb382dec02e6c3ff5272a.sol", "function": "perform_withdraw(address)", "lineno": 64, "title": "Exception state", "type": "Informational"}, {"address": 1777, "code": "he user's balance prior to sending to prev", "debug": "storage_2: 0x1\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x2\nreturndatasize: 0x20\nretval_1554: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_1: 0xff00\ncalldata_LINKFund_0: 0xfcfdbc2300000000000000000000000000000000000000000000000000000000\ncalldatasize_LINKFund: 0x4\ncallvalue: 0x0\n", "description": "A possible integer underflow exists in the function `perform_withdraw(address)`.\nThe subtraction may result in a value < 0.", "filename": "/unique_chucks/12/0x3b1c6004e43bf49c521eb382dec02e6c3ff5272a.sol", "function": "perform_withdraw(address)", "lineno": 69, "title": "Integer Underflow", "type": "Warning"}, {"address": 1783, "code": "he user's balance prior to sending to prev", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/12/0x3b1c6004e43bf49c521eb382dec02e6c3ff5272a.sol", "function": "perform_withdraw(address)", "lineno": 69, "title": "State change after external call", "type": "Warning"}, {"address": 1851, "code": "to prevent loss of funds", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/12/0x3b1c6004e43bf49c521eb382dec02e6c3ff5272a.sol", "function": "perform_withdraw(address)", "lineno": 72, "title": "State change after external call", "type": "Warning"}, {"address": 2018, "code": "s any user to get his eth refunded before the ", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/12/0x3b1c6004e43bf49c521eb382dec02e6c3ff5272a.sol", "function": "perform_withdraw(address)", "lineno": 76, "title": "Message call to external contract", "type": "Warning"}], "success": true}