{"success": false, "error": "Solc experienced a fatal error (code 1).\n\n/unique_chucks/28/0xe2c122847767effbb3f306724cded7e93a9dd9b9.sol:33:1: Error: Source file requires different compiler version (current compiler is 0.4.25+commit.59dbf8f1.Linux.g++ - note that nightly builds are considered to be strictly less than the released version\n ... pragma solidity >=0.4.18 <=0.4.20; ... \n     ^--------------------------------^\n/unique_chucks/28/0xe2c122847767effbb3f306724cded7e93a9dd9b9.sol:1256:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use \"constructor(...) { ... }\" instead.\n    function Dice() public {\r\n    ^ (Relevant source part starts here and spans across multiple lines).\n/unique_chucks/28/0xe2c122847767effbb3f306724cded7e93a9dd9b9.sol:974:50: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n        oraclize_randomDS_setCommitment(queryId, keccak256(delay_bytes8_left, args[1], sha256(args[0]), args[2]));\r\n                                                 ^-------------------------------------------------------------^\n/unique_chucks/28/0xe2c122847767effbb3f306724cded7e93a9dd9b9.sol:1086:47: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;\r\n                                              ^---------------------------^\n/unique_chucks/28/0xe2c122847767effbb3f306724cded7e93a9dd9b9.sol:1086:37: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;\r\n                                    ^--------------------------------------^\n/unique_chucks/28/0xe2c122847767effbb3f306724cded7e93a9dd9b9.sol:1086:37: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.\n        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;\r\n                                    ^--------------------------------------^\n/unique_chucks/28/0xe2c122847767effbb3f306724cded7e93a9dd9b9.sol:1104:48: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n        if (oraclize_randomDS_args[queryId] == keccak256(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match\r\n                                               ^--------------------------------------------^\n/unique_chucks/28/0xe2c122847767effbb3f306724cded7e93a9dd9b9.sol:1367:13: Warning: Invoking events without \"emit\" prefix is deprecated.\n            LOG_ZeroSend();\r\n            ^------------^\n/unique_chucks/28/0xe2c122847767effbb3f306724cded7e93a9dd9b9.sol:1371:13: Warning: Using contract member \"balance\" inherited from the address type is deprecated. Convert the contract to \"address\" type to access the member, for example use \"address(contract).balance\" instead.\n        if (this.balance < value) {\r\n            ^----------^\n/unique_chucks/28/0xe2c122847767effbb3f306724cded7e93a9dd9b9.sol:1372:13: Warning: Invoking events without \"emit\" prefix is deprecated.\n            LOG_ValueIsTooBig();\r\n            ^-----------------^\n/unique_chucks/28/0xe2c122847767effbb3f306724cded7e93a9dd9b9.sol:1377:13: Warning: Invoking events without \"emit\" prefix is deprecated.\n            LOG_FailedSend(addr, value);\r\n            ^-------------------------^\n/unique_chucks/28/0xe2c122847767effbb3f306724cded7e93a9dd9b9.sol:1380:9: Warning: Invoking events without \"emit\" prefix is deprecated.\n        LOG_SuccessfulSend(addr,value);\r\n        ^----------------------------^\n/unique_chucks/28/0xe2c122847767effbb3f306724cded7e93a9dd9b9.sol:1394:13: Warning: Invoking events without \"emit\" prefix is deprecated.\n            LOG_NewBet(msg.sender, betValue);\r\n            ^------------------------------^\n/unique_chucks/28/0xe2c122847767effbb3f306724cded7e93a9dd9b9.sol:1425:9: Warning: Invoking events without \"emit\" prefix is deprecated.\n        LOG_BetWon(thisBet.playerAddress, numberRolled, winAmount);\r\n        ^--------------------------------------------------------^\n/unique_chucks/28/0xe2c122847767effbb3f306724cded7e93a9dd9b9.sol:1440:9: Warning: Invoking events without \"emit\" prefix is deprecated.\n        LOG_BetLost(thisBet.playerAddress, numberRolled);\r\n        ^----------------------------------------------^\n/unique_chucks/28/0xe2c122847767effbb3f306724cded7e93a9dd9b9.sol:1461:9: Warning: Invoking events without \"emit\" prefix is deprecated.\n        LOG_ContractStopped();\r\n        ^-------------------^\n/unique_chucks/28/0xe2c122847767effbb3f306724cded7e93a9dd9b9.sol:1466:9: Warning: Invoking events without \"emit\" prefix is deprecated.\n        LOG_ContractResumed();\r\n        ^-------------------^\n/unique_chucks/28/0xe2c122847767effbb3f306724cded7e93a9dd9b9.sol:1472:9: Warning: Invoking events without \"emit\" prefix is deprecated.\n        LOG_OwnerAddressChanged(owner, newOwner);\r\n        ^--------------------------------------^\n/unique_chucks/28/0xe2c122847767effbb3f306724cded7e93a9dd9b9.sol:1476:9: Warning: Invoking events without \"emit\" prefix is deprecated.\n        LOG_GasLimitChanged(safeGas, newGasLimit);\r\n        ^---------------------------------------^\n/unique_chucks/28/0xe2c122847767effbb3f306724cded7e93a9dd9b9.sol:1481:27: Warning: Using contract member \"balance\" inherited from the address type is deprecated. Convert the contract to \"address\" type to access the member, for example use \"address(contract).balance\" instead.\n        require(amount <= this.balance);\r\n                          ^----------^\n", "issues": []}