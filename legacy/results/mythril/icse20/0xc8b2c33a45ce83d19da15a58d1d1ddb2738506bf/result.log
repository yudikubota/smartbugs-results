{"error": null, "issues": [{"address": 3884, "code": "erID = holders.length++;\n    ", "debug": "", "description": "This contract executes a message call to an address found at storage slot 6. This storage slot can be written to by calling the function `initialTokenSupply(address,uint256,bool)`. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/15/0xc8b2c33a45ce83d19da15a58d1d1ddb2738506bf.sol", "function": "cloneTokens(uint256,uint256)", "lineno": 672, "title": "Message call to external contract", "type": "Warning"}, {"address": 3884, "code": "erID = holders.length++;\n    ", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 4308\nCall at address: 4092\nCall at address: 4308\nCall at address: 4092\nCall at address: 4308\nCall at address: 4092\nCall at address: 4308\nCall at address: 4092\n", "filename": "/unique_chucks/15/0xc8b2c33a45ce83d19da15a58d1d1ddb2738506bf.sol", "function": "cloneTokens(uint256,uint256)", "lineno": 672, "title": "Multiple Calls", "type": "Information"}, {"address": 3884, "code": "erID = holders.length++;\n    ", "debug": "", "description": "A possible transaction order independence vulnerability exists in function cloneTokens(uint256,uint256). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/15/0xc8b2c33a45ce83d19da15a58d1d1ddb2738506bf.sol", "function": "cloneTokens(uint256,uint256)", "lineno": 672, "title": "Transaction order dependence", "type": "Warning"}, {"address": 4092, "code": "_holder] += _tokenAmount; \n ", "debug": "", "description": "This contract executes a message call to an address found at storage slot 6. This storage slot can be written to by calling the function `initialTokenSupply(address,uint256,bool)`. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/15/0xc8b2c33a45ce83d19da15a58d1d1ddb2738506bf.sol", "function": "cloneTokens(uint256,uint256)", "lineno": 682, "title": "Message call to external contract", "type": "Warning"}, {"address": 4092, "code": "_holder] += _tokenAmount; \n ", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 4308\n", "filename": "/unique_chucks/15/0xc8b2c33a45ce83d19da15a58d1d1ddb2738506bf.sol", "function": "cloneTokens(uint256,uint256)", "lineno": 682, "title": "Multiple Calls", "type": "Information"}, {"address": 4092, "code": "_holder] += _tokenAmount; \n ", "debug": "", "description": "A possible transaction order independence vulnerability exists in function cloneTokens(uint256,uint256). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/15/0xc8b2c33a45ce83d19da15a58d1d1ddb2738506bf.sol", "function": "cloneTokens(uint256,uint256)", "lineno": 682, "title": "Transaction order dependence", "type": "Warning"}, {"address": 4308, "code": " _tokenAmount;\n        TokensC", "debug": "", "description": "This contract executes a message call to an address found at storage slot 6. This storage slot can be written to by calling the function `initialTokenSupply(address,uint256,bool)`. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/15/0xc8b2c33a45ce83d19da15a58d1d1ddb2738506bf.sol", "function": "cloneTokens(uint256,uint256)", "lineno": 683, "title": "Message call to external contract", "type": "Warning"}, {"address": 4308, "code": " _tokenAmount;\n        TokensC", "debug": "", "description": "A possible transaction order independence vulnerability exists in function cloneTokens(uint256,uint256). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/15/0xc8b2c33a45ce83d19da15a58d1d1ddb2738506bf.sol", "function": "cloneTokens(uint256,uint256)", "lineno": 683, "title": "Transaction order dependence", "type": "Warning"}, {"address": 8131, "code": "6 remaining) {\n        return", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/15/0xc8b2c33a45ce83d19da15a58d1d1ddb2738506bf.sol", "function": "blockTransfer(address,uint256)", "lineno": 506, "title": "Message call to external contract", "type": "Informational"}, {"address": 9112, "code": " createTokens(_r", "debug": "storage_7: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_6: 0x0\ncalldata_PassTokenManagerInterface_0: 0xd7519a900000000000000000000000000000000000000000000000000000000\ncalldatasize_PassTokenManagerInterface: 0x4\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_PassTokenManagerInterface_4: 0x0\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `initialTokenSupply(address,uint256,bool)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/15/0xc8b2c33a45ce83d19da15a58d1d1ddb2738506bf.sol", "function": "initialTokenSupply(address,uint256,bool)", "lineno": 696, "title": "Integer Overflow ", "type": "Warning"}, {"address": 9139, "code": "nAmount);\n\n       ", "debug": "The exception is triggered under the following conditions:\n\nstorage_7: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_6: 0x0\ncalldata_PassTokenManagerInterface_0: 0xd7519a900000000000000000000000000000000000000000000000000000000\ncalldatasize_PassTokenManagerInterface: 0x4\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_PassTokenManagerInterface_4: 0x0\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/15/0xc8b2c33a45ce83d19da15a58d1d1ddb2738506bf.sol", "function": "initialTokenSupply(address,uint256,bool)", "lineno": 696, "title": "Exception state", "type": "Informational"}, {"address": 9355, "code": "dingPeriod, \n        uint _inflat", "debug": "calldata_PassTokenManagerInterface_32 + 4: 0xcd08000000000630000000050000028799a0052ec7d007107008000000000000\nstorage_7: 0xcaf800000000000ffffffffa6d3ae57725bb0005170ff8deffffffffffffffff\ncalldata_PassTokenManagerInterface_4: 0xffffffffffffffffffffffffffffffffffffffff\nstorage_6: 0x0\ncalldata_PassTokenManagerInterface_0: 0xd7519a900000000000000000000000000000000000000000000000000000000\ncalldatasize_PassTokenManagerInterface: 0x4\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_PassTokenManagerInterface_4: 0x0\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `initialTokenSupply(address,uint256,bool)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/15/0xc8b2c33a45ce83d19da15a58d1d1ddb2738506bf.sol", "function": "initialTokenSupply(address,uint256,bool)", "lineno": 705, "title": "Integer Overflow ", "type": "Warning"}, {"address": 9371, "code": "     uint _proposalID\n    ) exte", "debug": "calldata_PassTokenManagerInterface_32 + 4: 0xe204e0be10616105c0fb21d5d596fdb81a928dda3afd7ae7261643b6ad9d7527\nstorage_7: 0x82b9397c880007a460408000c01000006e000000000000000000010000000000\nstorage_5: 0xab50bbfe5ebd7d0108f7b815405060860016b192f3cdb8933754aa010e3df9af\ncalldata_PassTokenManagerInterface_4: 0xffffffffffffffffffffffffffffffffffffffff\nstorage_6: 0x0\ncalldata_PassTokenManagerInterface_0: 0xd7519a900000000000000000000000000000000000000000000000000000000\ncalldatasize_PassTokenManagerInterface: 0x4\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_PassTokenManagerInterface_4: 0x0\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `initialTokenSupply(address,uint256,bool)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/15/0xc8b2c33a45ce83d19da15a58d1d1ddb2738506bf.sol", "function": "initialTokenSupply(address,uint256,bool)", "lineno": 707, "title": "Integer Overflow ", "type": "Warning"}, {"address": 9917, "code": " = _value;\n        ret", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_PassTokenManagerInterface_4: 0xd5125717ad1dffe9fffdb8f4c85447af803b33fca50100ca0011ffd662ec435e\ntimestamp: 0xeb09a24237fcb880deaf6240c13f76bec57f2b122a4885e82218fffa3ffa40f1\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_PassTokenManagerInterface_32_+_4: 0xe55a29a8df1571b41fb6d6a5c4458b6287e6597899843403be77fbbdcfcc9129\ncalldata_PassTokenManagerInterface_32 + 36: 0x9818e3e99087fbcb57f5d7bff7756a93f6184c73a38075189084e324482b5139\ncalldata_PassTokenManagerInterface_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\nstorage_6: 0xff00\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x9818e3e99087fbcb57f5d7bff7756a93f6184c73a38075189084e324482b5139\ncalldata_PassTokenManagerInterface_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_PassTokenManagerInterface: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `transferFrom(address,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/15/0xc8b2c33a45ce83d19da15a58d1d1ddb2738506bf.sol", "function": "transferFrom(address,address,uint256)", "lineno": 905, "title": "Integer Overflow ", "type": "Warning"}], "success": true}