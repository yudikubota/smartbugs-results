{"error": null, "issues": [{"address": 3733, "code": "if (!pricingStrategy.isSane(address(t", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol", "function": "isPricingSane()", "lineno": 472, "title": "Message call to external contract", "type": "Informational"}, {"address": 3733, "code": "if (!pricingStrategy.isSane(address(t", "debug": "", "description": "A possible transaction order independence vulnerability exists in function isPricingSane(). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol", "function": "isPricingSane()", "lineno": 472, "title": "Transaction order dependence", "type": "Warning"}, {"address": 4492, "code": "e;\n  }\n\n  /** This is ", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol", "function": "bitcoinInvest(address,uint256,uint256)", "lineno": 477, "title": "Message call to external contract", "type": "Informational"}, {"address": 4492, "code": "e;\n  }\n\n  /** This is ", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 4755\n", "filename": "/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol", "function": "getState()", "lineno": 477, "title": "Multiple Calls", "type": "Information"}, {"address": 4492, "code": "e;\n  }\n\n  /** This is ", "debug": "", "description": "A possible transaction order independence vulnerability exists in function bitcoinInvest(address,uint256,uint256). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol", "function": "bitcoinInvest(address,uint256,uint256)", "lineno": 477, "title": "Transaction order dependence", "type": "Warning"}, {"address": 4755, "code": "eraction */\n  function setOwnerTestVa", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol", "function": "getState()", "lineno": 480, "title": "Message call to external contract", "type": "Informational"}, {"address": 4755, "code": "eraction */\n  function setOwnerTestVa", "debug": "", "description": "A possible transaction order independence vulnerability exists in function getState(). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol", "function": "getState()", "lineno": 480, "title": "Transaction order dependence", "type": "Warning"}, {"address": 5258, "code": "ey are doing.\n   *\n   */\n  func", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol", "function": "_function_0x19b667da", "lineno": 369, "title": "Message call to external contract", "type": "Warning"}, {"address": 6673, "code": "imal places adde", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol", "function": "preallocate(address,uint256,uint256)", "lineno": 848, "title": "Message call to external contract", "type": "Informational"}, {"address": 7566, "code": "  function setMultisig(address addr", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol", "function": "_function_0x50c67734", "lineno": 407, "title": "Message call to external contract", "type": "Warning"}, {"address": 12550, "code": "ntract Finaliz", "debug": "The exception is triggered under the following conditions:\n\nstorage_10: 0x1\ncalldata_WaWlletTokenCrowdsale_32 + 4: 0x1\ncalldata_WaWlletTokenCrowdsale_32 + 36: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nreturndatasize: 0x20\nretval_6673: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_0: 0x0\ncaller: 0x0\ncalldata_WaWlletTokenCrowdsale_0: 0x32013ac300000000000000000000000000000000000000000000000000000000\ncalldatasize_WaWlletTokenCrowdsale: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol", "function": "preallocate(address,uint256,uint256)", "lineno": 45, "title": "Exception state", "type": "Informational"}], "success": true}