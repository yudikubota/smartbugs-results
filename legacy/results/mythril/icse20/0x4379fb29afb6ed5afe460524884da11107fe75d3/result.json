{
  "contract": "0x4379fb29afb6ed5afe460524884da11107fe75d3",
  "tool": "mythril",
  "start": 1563257118.7273395,
  "end": 1563257851.9220717,
  "duration": 733.1947321891785,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 1320,
        "code": "0;\n    uint256 maxeth=total*outRate;\n",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_contracts/0x4379fb29afb6ed5afe460524884da11107fe75d3.sol",
        "function": "fallback",
        "lineno": 89,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 1320,
        "code": "0;\n    uint256 maxeth=total*outRate;\n",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1692\nCall at address: 1692\nCall at address: 1692\nCall at address: 1475\n",
        "filename": "/unique_contracts/0x4379fb29afb6ed5afe460524884da11107fe75d3.sol",
        "function": "TokensOut()",
        "lineno": 89,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 1475,
        "code": "rt();\n    outRate=outRa",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1692\n",
        "filename": "/unique_contracts/0x4379fb29afb6ed5afe460524884da11107fe75d3.sol",
        "function": "TokensOut()",
        "lineno": 93,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 1692,
        "code": "  inRate=inRate+tokens*leveRage;\n    Sent",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_contracts/0x4379fb29afb6ed5afe460524884da11107fe75d3.sol",
        "function": "TokensOut()",
        "lineno": 95,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 1773,
        "code": "value, tokens);\n  }\n  function ",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_contracts/0x4379fb29afb6ed5afe460524884da11107fe75d3.sol",
        "function": "fallback",
        "lineno": 96,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 1788,
        "code": "ble public {TokensOut();}\n}",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_contracts/0x4379fb29afb6ed5afe460524884da11107fe75d3.sol",
        "function": "fallback",
        "lineno": 98,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 2230,
        "code": "    uint256 sum = tokens*inRate;\n    if (!msg.sender.send(su",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_contracts/0x4379fb29afb6ed5afe460524884da11107fe75d3.sol",
        "function": "TokensIn(uint256)",
        "lineno": 74,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 2230,
        "code": "    uint256 sum = tokens*inRate;\n    if (!msg.sender.send(su",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2352\n",
        "filename": "/unique_contracts/0x4379fb29afb6ed5afe460524884da11107fe75d3.sol",
        "function": "TokensIn(uint256)",
        "lineno": 74,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 2713,
        "code": "(uint256 newrate) ",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function WithdrawEther(uint256). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_contracts/0x4379fb29afb6ed5afe460524884da11107fe75d3.sol",
        "function": "WithdrawEther(uint256)",
        "lineno": 58,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 3282,
        "code": "();\n  }\n  function WithdrawEther(uint256 et",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_contracts/0x4379fb29afb6ed5afe460524884da11107fe75d3.sol",
        "function": "WithdrawToken(address,uint256)",
        "lineno": 52,
        "title": "Message call to external contract",
        "type": "Warning"
      }
    ],
    "success": true
  }
}