{"error": null, "issues": [{"address": 829, "code": "limit;\n    }\n    \n   ", "debug": "The exception is triggered under the following conditions:\n\ncalldata_soccerGo_4: 0x4\nstorage_4: 0x3\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xff00\ncalldata_soccerGo_0: 0xde839300000000000000000000000000000000000000000000000000000000\ncalldatasize_soccerGo: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/22/0xf88629b22dcd3b3eff99b63f7380bac3f939d8a8.sol", "function": "fallback", "lineno": 29, "title": "Exception state", "type": "Informational"}, {"address": 1035, "code": "nder);\n        _;\n    }\n\n    mo", "debug": "", "description": "A possible transaction order independence vulnerability exists in function withdrawAmount(uint256). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/22/0xf88629b22dcd3b3eff99b63f7380bac3f939d8a8.sol", "function": "withdrawAmount(uint256)", "lineno": 134, "title": "Transaction order dependence", "type": "Warning"}, {"address": 1497, "code": " \n    function", "debug": "calldata_soccerGo_4: 0xd00000491c32de98180b70887cfe0ab2c67cc01571af712e1c4d7faa8baecc7d\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xff00\ncalldata_soccerGo_0: 0x5884afe100000000000000000000000000000000000000000000000000000000\ncalldatasize_soccerGo: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `setBetLimit(uint256,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/22/0xf88629b22dcd3b3eff99b63f7380bac3f939d8a8.sol", "function": "setBetLimit(uint256,uint256)", "lineno": 65, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1506, "code": "ess _caller) p", "debug": "calldata_soccerGo_32 + 4: 0xd00000491c32de98180b70887cfe0ab2c67cc01571af712e1c4d7faa8baecc7d\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xff00\ncalldata_soccerGo_0: 0x5884afe100000000000000000000000000000000000000000000000000000000\ncalldatasize_soccerGo: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `setBetLimit(uint256,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/22/0xf88629b22dcd3b3eff99b63f7380bac3f939d8a8.sol", "function": "setBetLimit(uint256,uint256)", "lineno": 66, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1893, "code": " uint256 value = 1.0 ether;\n", "debug": "", "description": "A possible transaction order independence vulnerability exists in function withdrawAll(). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/22/0xf88629b22dcd3b3eff99b63f7380bac3f939d8a8.sol", "function": "withdrawAll()", "lineno": 127, "title": "Transaction order dependence", "type": "Warning"}, {"address": 3112, "code": " setDevfee(uint256 _value) internal onlyAdmins() {", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/22/0xf88629b22dcd3b3eff99b63f7380bac3f939d8a8.sol", "function": "buy(uint256,uint256)", "lineno": 79, "title": "Message call to external contract", "type": "Informational"}, {"address": 3112, "code": " setDevfee(uint256 _value) internal onlyAdmins() {", "debug": "", "description": "A possible transaction order independence vulnerability exists in function buy(uint256,uint256). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/22/0xf88629b22dcd3b3eff99b63f7380bac3f939d8a8.sol", "function": "buy(uint256,uint256)", "lineno": 79, "title": "Transaction order dependence", "type": "Warning"}], "success": true}