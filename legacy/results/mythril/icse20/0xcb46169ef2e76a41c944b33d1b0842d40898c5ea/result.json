{
  "contract": "0xcb46169ef2e76a41c944b33d1b0842d40898c5ea",
  "tool": "mythril",
  "start": 1563618663.9532275,
  "end": 1563619014.7826684,
  "duration": 350.82944083213806,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 2351,
        "code": "lue)*crr_n/crr_d + pri",
        "debug": "calldata_Etheramid_4: 0x9941df413b0548070000bf2f01004702090a9bbdd8400b7eebefc9a1f9b59ec5\nstorage_5: 0xce000f749f6976b078f079019010083ccbd37fa15fc1109903cc948df1359e75\nstorage_3: 0x0\nstorage_4: 0x1\nstorage_2: 0x10041a070ff04000000000003ffc2000008000000000000000000000000000\ncalldata_Etheramid_0: 0x62dbf26100000000000000000000000000000000000000000000000000000000\ncalldatasize_Etheramid: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `getTokensForEther(uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/24/0xcb46169ef2e76a41c944b33d1b0842d40898c5ea.sol",
        "function": "getTokensForEther(uint256)",
        "lineno": 383,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2556,
        "code": "= dividends(_owner);\n\t\t\n\t\t// Update the payouts array, incrementing",
        "debug": "storage_4: 0x74b2f52771f917b0fc0fc0fc0fc0fc0fc0fc0fc0fc0fc0fc0fc0fc0fc0fc0fc2\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xfd7fffffffffffefffffffffffffffffffffffffffffffffffffffffffffffbf\ncalldata_Etheramid_0: 0x957b2e5600000000000000000000000000000000000000000000000000000000\ncalldatasize_Etheramid: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer underflow exists in the function `reinvestDividends()`.\nThe subtraction may result in a value < 0.",
        "filename": "/unique_chucks/24/0xcb46169ef2e76a41c944b33d1b0842d40898c5ea.sol",
        "function": "reinvestDividends()",
        "lineno": 217,
        "title": "Integer Underflow",
        "type": "Warning"
      },
      {
        "address": 3475,
        "code": "sed to simulate appr",
        "debug": "storage_2: 0xc0000c60000\nstorage_4: 0x0\nstorage_5: 0x0\nstorage_3: 0x0\ncalldata_Etheramid_0: 0x4b75033400000000000000000000000000000000000000000000000000000000\ncalldatasize_Etheramid: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer underflow exists in the function `sellPrice()`.\nThe subtraction may result in a value < 0.",
        "filename": "/unique_chucks/24/0xcb46169ef2e76a41c944b33d1b0842d40898c5ea.sol",
        "function": "sellPrice()",
        "lineno": 411,
        "title": "Integer Underflow",
        "type": "Warning"
      },
      {
        "address": 3664,
        "debug": "callvalue: 0xc80101fff7fffffffffffffffffffffffffffffffffffffffff0009112813861\nstorage_5: 0xedb979000000000000000000000000000000000000000000000ffd621205e76d\ncalldatasize_Etheramid: 0x3\n",
        "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/24/0xcb46169ef2e76a41c944b33d1b0842d40898c5ea.sol",
        "function": "fallback",
        "lineno": 506,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 3677,
        "debug": "The exception is triggered under the following conditions:\n\ncallvalue: 0x763e13de1d21f0eefd76cc101181fed719cfa49fe65f75410e1b5cea0ae792b0\nstorage_5: 0xe47d05621209816401349c1188b5f8c6d14c201f803a69008c00770dac875d31\ncalldata_Etheramid_0: 0xb60d428800000000000000000000000000000000000000000000000000000000\ncalldatasize_Etheramid: 0x4\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/24/0xcb46169ef2e76a41c944b33d1b0842d40898c5ea.sol",
        "function": "fund()",
        "lineno": 506,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 4202,
        "code": "der);\n\t\t}\n\t}\n}",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_5: 0xfffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_3: 0x0\nstorage_4: 0x1\nstorage_2: 0xffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000\ncalldata_Etheramid_0: 0x8620410b00000000000000000000000000000000000000000000000000000000\ncalldatasize_Etheramid: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/24/0xcb46169ef2e76a41c944b33d1b0842d40898c5ea.sol",
        "function": "buyPrice()",
        "lineno": 503,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 4434,
        "code": "re unless interacting",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2107\n",
        "filename": "/unique_chucks/24/0xcb46169ef2e76a41c944b33d1b0842d40898c5ea.sol",
        "function": "withdraw()",
        "lineno": 237,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 4528,
        "code": "Log(reserve() + ethervalue)*cr",
        "debug": "storage_4: 0xff3717ddf147ba7fd6976a72ee859c9c251431c6dd4346e384e0fd941c87b69c\nstorage_2: 0xde9aa0007ffff9dbbb05d00001000207fffdffbfffbfbfbfffbfbfefbfbff7f6\ncalldata_Etheramid_0: 0x62dbf26100000000000000000000000000000000000000000000000000000000\ncalldatasize_Etheramid: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `getTokensForEther(uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/24/0xcb46169ef2e76a41c944b33d1b0842d40898c5ea.sol",
        "function": "getTokensForEther(uint256)",
        "lineno": 378,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 4529,
        "code": "dExp(fixedLog(reserve() + ethervalue)*crr_n/crr_d + pric",
        "debug": "storage_3: 0x1\nstorage_4: 0x1\nstorage_2: 0x0\ncalldata_Etheramid_0: 0x62dbf26100000000000000000000000000000000000000000000000000000000\ncalldatasize_Etheramid: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer underflow exists in the function `getTokensForEther(uint256)`.\nThe subtraction may result in a value < 0.",
        "filename": "/unique_chucks/24/0xcb46169ef2e76a41c944b33d1b0842d40898c5ea.sol",
        "function": "getTokensForEther(uint256)",
        "lineno": 378,
        "title": "Integer Underflow",
        "type": "Warning"
      }
    ],
    "success": true
  }
}