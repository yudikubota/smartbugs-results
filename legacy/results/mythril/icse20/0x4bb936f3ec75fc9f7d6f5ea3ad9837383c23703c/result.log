{"error": null, "issues": [{"address": 4434, "code": "\n        require(", "debug": "storage_1: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x1\ncalldata_StattmToken_0: 0x44df8e7000000000000000000000000000000000000000000000000000000000\ncalldatasize_StattmToken: 0x4\ncallvalue: 0x0\n", "description": "A possible integer underflow exists in the function `burn()`.\nThe subtraction may result in a value < 0.", "filename": "/unique_contracts/0x4bb936f3ec75fc9f7d6f5ea3ad9837383c23703c.sol", "function": "burn()", "lineno": 405, "title": "Integer Underflow", "type": "Warning"}, {"address": 7448, "code": "de_modu", "debug": "calldata_StattmToken_32 + 4: 0x57f25cd000000000000000000000000000000000000000000000000000000000\nstorage_1: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_3: 0x0\ncaller: 0x0\ncalldata_StattmToken_0: 0x40c10f1900000000000000000000000000000000000000000000000000000000\ncalldatasize_StattmToken: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `mint(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x4bb936f3ec75fc9f7d6f5ea3ad9837383c23703c.sol", "function": "mint(address,uint256)", "lineno": 69, "title": "Integer Overflow ", "type": "Warning"}, {"address": 7461, "code": "pelin-solidity\\", "debug": "The exception is triggered under the following conditions:\n\nstorage_3: 0x0\nstorage_1: 0x1\ncalldata_StattmToken_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncaller: 0x0\ncalldata_StattmToken_0: 0x40c10f1900000000000000000000000000000000000000000000000000000000\ncalldatasize_StattmToken: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_contracts/0x4bb936f3ec75fc9f7d6f5ea3ad9837383c23703c.sol", "function": "mint(address,uint256)", "lineno": 69, "title": "Exception state", "type": "Informational"}], "success": true}