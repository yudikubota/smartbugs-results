{"error": null, "issues": [{"address": 1749, "code": ", uint _colourB) {\n        _colourR = pixels[_pixelId].colourR;\n        _colourG = pixels[_pixelId].colourG;\n     ", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_etherdoodleToken_4: 0x800000000000000000000000000000000000000000000000000000000000000\ncalldata_etherdoodleToken_0: 0x5fa382ea00000000000000000000000000000000000000000000000000000000\ncalldatasize_etherdoodleToken: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `getPixelsOwned(address)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/23/0x7f53080daefbf41e727fdaff1538ef6052ddb994.sol", "function": "getPixelsOwned(address)", "lineno": 421, "title": "Integer Overflow ", "type": "Warning"}, {"address": 4672, "code": "      address newOwner = msg.sender;\n     ", "debug": "", "description": "A possible transaction order independence vulnerability exists in function payout(address). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/23/0x7f53080daefbf41e727fdaff1538ef6052ddb994.sol", "function": "payout(address)", "lineno": 440, "title": "Transaction order dependence", "type": "Warning"}, {"address": 5450, "code": "[_pixelId].pixel", "debug": "The exception is triggered under the following conditions:\n\ncalldata_etherdoodleToken_4: 0xf4240\ncalldata_etherdoodleToken_0: 0x5840b0f800000000000000000000000000000000000000000000000000000000\ncalldatasize_etherdoodleToken: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/23/0x7f53080daefbf41e727fdaff1538ef6052ddb994.sol", "function": "getPixelData(uint256)", "lineno": 396, "title": "Exception state", "type": "Informational"}, {"address": 5885, "code": "G = pixels[_pixelId].colour", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_etherdoodleToken_4: 0x8421003f084001f4210815cf88407c00000000000000037c1d000e8d178001f\ncalldata_etherdoodleToken_0: 0x5fa382ea00000000000000000000000000000000000000000000000000000000\ncalldatasize_etherdoodleToken: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `getPixelsOwned(address)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/23/0x7f53080daefbf41e727fdaff1538ef6052ddb994.sol", "function": "getPixelsOwned(address)", "lineno": 423, "title": "Integer Overflow ", "type": "Warning"}, {"address": 5887, "code": "G = pixels[_pixelId].colour", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_etherdoodleToken_4: 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffb\ncalldata_etherdoodleToken_0: 0x5fa382ea00000000000000000000000000000000000000000000000000000000\ncalldatasize_etherdoodleToken: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `getPixelsOwned(address)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/23/0x7f53080daefbf41e727fdaff1538ef6052ddb994.sol", "function": "getPixelsOwned(address)", "lineno": 423, "title": "Integer Overflow ", "type": "Warning"}, {"address": 6020, "code": "he same time\n   ", "debug": "The exception is triggered under the following conditions:\n\ncalldata_etherdoodleToken_4: 0xf4240\ncalldata_etherdoodleToken_0: 0x642fd0f600000000000000000000000000000000000000000000000000000000\ncalldatasize_etherdoodleToken: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/23/0x7f53080daefbf41e727fdaff1538ef6052ddb994.sol", "function": "getPixelColour(uint256)", "lineno": 436, "title": "Exception state", "type": "Informational"}], "success": true}