{"error": null, "issues": [{"address": 477, "code": " amounts) public onlyGamblica {\n      require(winners.length == amounts.length, \"Invalid arguments\");\n      require(state == State.DEPOSIT, \"Invalid contract state\");\n      \n      uint length = winners.length;\n      for (uint i = 0; i < length; i++) {\n        deposit[winners[i]] += amounts[i];\n      }\n    }\n    \n    function end() public onlyGamblica {      \n      require(", "debug": "calldata_GamblicaEarlyAccess_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_GamblicaEarlyAccess_0: 0x3cbd428500000000000000000000000000000000000000000000000000000000\ncalldatasize_GamblicaEarlyAccess: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `_function_0x3cbd4285`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/12/0x4ca65f54f923be2fb3efc3a7758e88a6f910806e.sol", "function": "_function_0x3cbd4285", "lineno": 60, "title": "Integer Overflow ", "type": "Warning"}, {"address": 868, "code": ";    \n    uint pub", "debug": "The exception is triggered under the following conditions:\n\nstorage_1: 0x8000\ncalldata_GamblicaEarlyAccess_0: 0xc19d93fb00000000000000000000000000000000000000000000000000000000\ncalldatasize_GamblicaEarlyAccess: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/12/0x4ca65f54f923be2fb3efc3a7758e88a6f910806e.sol", "function": "_function_0xc19d93fb", "lineno": 19, "title": "Exception state", "type": "Informational"}, {"address": 1082, "code": "uint amount = deposi", "debug": "The exception is triggered under the following conditions:\n\nstorage_1: 0x8000\ncalldata_GamblicaEarlyAccess_0: 0x500000000000000000000000000000000000000000000000000000000\ncalldatasize_GamblicaEarlyAccess: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/12/0x4ca65f54f923be2fb3efc3a7758e88a6f910806e.sol", "function": "fallback", "lineno": 79, "title": "Exception state", "type": "Informational"}, {"address": 1572, "code": "nlyGamblica {\n      uint amount = gmbc", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/12/0x4ca65f54f923be2fb3efc3a7758e88a6f910806e.sol", "function": "fallback", "lineno": 84, "title": "Message call to external contract", "type": "Informational"}, {"address": 1906, "code": ";\n      require(gmbcTo", "debug": "The exception is triggered under the following conditions:\n\nstorage_1: 0x8000\ncaller: 0x80\ncalldata_GamblicaEarlyAccess_0: 0x219dabeb00000000000000000000000000000000000000000000000000000000\ncalldatasize_GamblicaEarlyAccess: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/12/0x4ca65f54f923be2fb3efc3a7758e88a6f910806e.sol", "function": "registerDeposit(address,uint256)", "lineno": 50, "title": "Exception state", "type": "Informational"}, {"address": 2215, "code": " that deposit\");\n\n      gmbcTotal ", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/12/0x4ca65f54f923be2fb3efc3a7758e88a6f910806e.sol", "function": "registerDeposit(address,uint256)", "lineno": 51, "title": "Message call to external contract", "type": "Informational"}, {"address": 2403, "code": "amount;\n\n      emit", "debug": "storage_2: 0x58c5e8efcdc82a6407dda8a1eaa57285c2edeb083b861a16ce88903b42aff5d9\nstorage_1: 0x100\nretval_2215: 0x80444e9bb4e560037e09367d49ba7174df03ce81f7ddfc0c2f11f0ef800f3010\ncalldata_GamblicaEarlyAccess_32 + 4: 0xce83fc8bd053a802f61d320df4b4f32924cd8207b0d7d3d7d7ab5de3ca200613\nreturndatasize: 0x20\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncaller: 0x1\ncalldata_GamblicaEarlyAccess_0: 0x219dabeb00000000000000000000000000000000000000000000000000000000\ncalldatasize_GamblicaEarlyAccess: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `registerDeposit(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/12/0x4ca65f54f923be2fb3efc3a7758e88a6f910806e.sol", "function": "registerDeposit(address,uint256)", "lineno": 54, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2409, "code": "amount;\n\n      emit", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/12/0x4ca65f54f923be2fb3efc3a7758e88a6f910806e.sol", "function": "registerDeposit(address,uint256)", "lineno": 54, "title": "State change after external call", "type": "Warning"}, {"address": 2480, "code": "red(player, amount);\n    ", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_GamblicaEarlyAccess_4: 0x9188f9586f953f7757f360887b20a0771a0ae61943ebd1ec531f9e480e102ea1\nstorage_1: 0x100\nretval_2215: 0xe6dffb663cdf7fff77df7effffffd6ffdfffffffffffffefffffd77effbf5fff\ncalldata_GamblicaEarlyAccess_32 + 4: 0xa0a1cd9b6e992044560b7ec4834088004b1ab560e1121dda44cb90002e0c223d\nstorage_2: 0x463e2dcace465fbb21d4003b7cbf4eff94e54a9f1eede215bb34477ed1b33dc2\nreturndatasize: 0x20\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncaller: 0x1\ncalldata_GamblicaEarlyAccess_0: 0x219dabeb00000000000000000000000000000000000000000000000000000000\ncalldatasize_GamblicaEarlyAccess: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `registerDeposit(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/12/0x4ca65f54f923be2fb3efc3a7758e88a6f910806e.sol", "function": "registerDeposit(address,uint256)", "lineno": 56, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2486, "code": "red(player, amount);\n    ", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/12/0x4ca65f54f923be2fb3efc3a7758e88a6f910806e.sol", "function": "registerDeposit(address,uint256)", "lineno": 56, "title": "State change after external call", "type": "Warning"}, {"address": 3026, "code": "    selfdestruct(msg.sender);\n    ", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/12/0x4ca65f54f923be2fb3efc3a7758e88a6f910806e.sol", "function": "die()", "lineno": 87, "title": "Message call to external contract", "type": "Informational"}, {"address": 3026, "code": "    selfdestruct(msg.sender);\n    ", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3283\n", "filename": "/unique_chucks/12/0x4ca65f54f923be2fb3efc3a7758e88a6f910806e.sol", "function": "die()", "lineno": 87, "title": "Multiple Calls", "type": "Information"}, {"address": 3283, "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/12/0x4ca65f54f923be2fb3efc3a7758e88a6f910806e.sol", "function": "die()", "lineno": 89, "title": "Message call to external contract", "type": "Informational"}, {"address": 3763, "code": "   uint length = winne", "debug": "The exception is triggered under the following conditions:\n\nstorage_1: 0x8000\ncaller: 0x80\ncalldata_GamblicaEarlyAccess_0: 0x3cbd428500000000000000000000000000000000000000000000000000000000\ncalldatasize_GamblicaEarlyAccess: 0x4\nmem_128 +\n32 +\n32*\ncalldata_GamblicaEarlyAccess_4 + calldata_GamblicaEarlyAccess_4: 0x0\ncalldata_GamblicaEarlyAccess_4 + calldata_GamblicaEarlyAccess_4: 0x0\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/12/0x4ca65f54f923be2fb3efc3a7758e88a6f910806e.sol", "function": "_function_0x3cbd4285", "lineno": 64, "title": "Exception state", "type": "Informational"}, {"address": 4014, "code": "n end() public onlyGamblica {    ", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_GamblicaEarlyAccess_cpy: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nmem_0 +\n192 +\n32*\ncalldata_GamblicaEarlyAccess_4 + calldata_GamblicaEarlyAccess_4: 0x57f25cd000000000000000000000000000000000000000000000000000000000\nstorage_1: 0x100\nmem_128 +\n32 +\n32*\ncalldata_GamblicaEarlyAccess_4 + calldata_GamblicaEarlyAccess_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncaller: 0x1\ncalldata_GamblicaEarlyAccess_0: 0x3cbd428500000000000000000000000000000000000000000000000000000000\ncalldatasize_GamblicaEarlyAccess: 0x4\ncalldata_GamblicaEarlyAccess_4 + calldata_GamblicaEarlyAccess_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `_function_0x3cbd4285`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/12/0x4ca65f54f923be2fb3efc3a7758e88a6f910806e.sol", "function": "_function_0x3cbd4285", "lineno": 70, "title": "Integer Overflow ", "type": "Warning"}, {"address": 4553, "code": "ZE_FUND_GMBC, \"Contract can only b", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/12/0x4ca65f54f923be2fb3efc3a7758e88a6f910806e.sol", "function": "start()", "lineno": 42, "title": "Message call to external contract", "type": "Informational"}, {"address": 4804, "code": "state\");\n\n      gmbcTo", "debug": "The exception is triggered under the following conditions:\n\nretval_4553: 0x52b7d2dcc80cd2f0000000\nstorage_1: 0x300\nreturndatasize: 0x20\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncaller: 0x3\ncalldata_GamblicaEarlyAccess_0: 0xbe9a655500000000000000000000000000000000000000000000000000000000\ncalldatasize_GamblicaEarlyAccess: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/12/0x4ca65f54f923be2fb3efc3a7758e88a6f910806e.sol", "function": "start()", "lineno": 43, "title": "Exception state", "type": "Informational"}, {"address": 4939, "code": "tate.DEPOSIT;\n    }\n\n    fu", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/12/0x4ca65f54f923be2fb3efc3a7758e88a6f910806e.sol", "function": "start()", "lineno": 46, "title": "State change after external call", "type": "Warning"}, {"address": 4974, "code": "gisterDeposit(address", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/12/0x4ca65f54f923be2fb3efc3a7758e88a6f910806e.sol", "function": "start()", "lineno": 49, "title": "State change after external call", "type": "Warning"}, {"address": 5276, "code": "e.CLAIM;\n    }\n\n    fu", "debug": "The exception is triggered under the following conditions:\n\nstorage_1: 0x8000\ncaller: 0x80\ncalldata_GamblicaEarlyAccess_0: 0xefbe1c1c00000000000000000000000000000000000000000000000000000000\ncalldatasize_GamblicaEarlyAccess: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/12/0x4ca65f54f923be2fb3efc3a7758e88a6f910806e.sol", "function": "end()", "lineno": 73, "title": "Exception state", "type": "Informational"}], "success": true}