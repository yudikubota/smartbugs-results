{
  "contract": "0xc07021b1875e2c4a885e73ad43557c7e40d63556",
  "tool": "mythril",
  "start": 1563562861.1594167,
  "end": 1563563013.5440571,
  "duration": 152.38464045524597,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 513,
        "code": ";\n\n/**\n   QuickQue",
        "debug": "callvalue: 0x200004000010\nstorage_0: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ngas: 0x35b60\ncalldata_QuickQueue_0: 0x1900000000000000000000000000000000000000000000000000000000\ncalldatasize_QuickQueue: 0x4\n",
        "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/12/0xc07021b1875e2c4a885e73ad43557c7e40d63556.sol",
        "function": "fallback",
        "lineno": 1,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 835,
        "code": "       return (dep.de",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2198\nCall at address: 1890\n",
        "filename": "/unique_chucks/12/0xc07021b1875e2c4a885e73ad43557c7e40d63556.sol",
        "function": "fallback",
        "lineno": 147,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 1662,
        "code": "\n    funct",
        "debug": "The exception is triggered under the following conditions:\n\ncallvalue: 0x400000000000000\nstorage_0: 0x0\nstorage_1: 0x1\nretval_835: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ngas: 0x35b60\ncalldata_QuickQueue_0: 0x300000000000000000000000000000000000000000000000000000000\ncalldatasize_QuickQueue: 0x4\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/12/0xc07021b1875e2c4a885e73ad43557c7e40d63556.sol",
        "function": "fallback",
        "lineno": 160,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 1890,
        "code": " idxs, uint128[] deposits, uint128",
        "debug": "SOLVER OUTPUT:\ncallvalue: 0x400000000000000\nstorage_0: 0x0\nbalance_at_1461501637330902918203684832716283019655932542975 & 0: 0x0\nstorage_1 +\n18569430475105882587588266137607568536673111973893317399460219858819262702947 +\n2*storage_1: 0x0\nstorage_1: 0x0\nretval_835: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ngas: 0x35b60\ncalldata_QuickQueue_0: 0x300000000000000000000000000000000000000000000000000000000\ncalldatasize_QuickQueue: 0x4\n",
        "description": "In the function `fallback` a non-zero amount of Ether is sent to an address taken from storage slot 0.\nThere is a check on storage index 0. This storage slot can be written to by calling the function `fallback`.\n\nThere is a check on storage index 0. This storage slot can be written to by calling the function `fallback`.\nThere is a check on storage index 1. This storage slot can be written to by calling the function `fallback`.\nThere is a check on storage index 1. This storage slot can be written to by calling the function `fallback`.",
        "filename": "/unique_chucks/12/0xc07021b1875e2c4a885e73ad43557c7e40d63556.sol",
        "function": "fallback",
        "lineno": 161,
        "title": "Ether send",
        "type": "Warning"
      },
      {
        "address": 1890,
        "code": " idxs, uint128[] deposits, uint128",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2198\nCall at address: 1890\n",
        "filename": "/unique_chucks/12/0xc07021b1875e2c4a885e73ad43557c7e40d63556.sol",
        "function": "fallback",
        "lineno": 161,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 1890,
        "code": " idxs, uint128[] deposits, uint128",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function fallback. The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/12/0xc07021b1875e2c4a885e73ad43557c7e40d63556.sol",
        "function": "fallback",
        "lineno": 161,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 2198,
        "code": "t128[](c);\n        expects = ",
        "debug": "SOLVER OUTPUT:\ncallvalue: 0x400000000000000\nstorage_0: 0x0\nbalance_at_1461501637330902918203684832716283019655932542975 & 0: 0x0\nstorage_1 +\n18569430475105882587588266137607568536673111973893317399460219858819262702947 +\n2*storage_1: 0x100\nstorage_1: 0x0\nretval_835: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ngas: 0x35b60\ncalldata_QuickQueue_0: 0x300000000000000000000000000000000000000000000000000000000\ncalldatasize_QuickQueue: 0x4\n",
        "description": "In the function `fallback` a non-zero amount of Ether is sent to an address taken from storage slot 0.\nThere is a check on storage index 0. This storage slot can be written to by calling the function `fallback`.\n\nThere is a check on storage index 0. This storage slot can be written to by calling the function `fallback`.\nThere is a check on storage index 1. This storage slot can be written to by calling the function `fallback`.\nThere is a check on storage index 1. This storage slot can be written to by calling the function `fallback`.",
        "filename": "/unique_chucks/12/0xc07021b1875e2c4a885e73ad43557c7e40d63556.sol",
        "function": "fallback",
        "lineno": 165,
        "title": "Ether send",
        "type": "Warning"
      },
      {
        "address": 2198,
        "code": "t128[](c);\n        expects = ",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function fallback. The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/12/0xc07021b1875e2c4a885e73ad43557c7e40d63556.sol",
        "function": "fallback",
        "lineno": 165,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 2259,
        "code": "        if(c > 0) {",
        "debug": "callvalue: 0x16466e7cf4c0000\nstorage_0: 0x0\nbalance_at_1461501637330902918203684832716283019655932542975 & 0: 0x43ff293577a23575de4766e1419cf0162\nretval_2198: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_1 +\n18569430475105882587588266137607568536673111973893317399460219858819262702947 +\n2*storage_1: 0x805512c4d8988eb3e1560e0ac03b010800\nstorage_1: 0x0\nretval_835: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ngas: 0x35b60\ncalldata_QuickQueue_0: 0x1f00000000000000000000000000000000000000000000000000000000\ncalldatasize_QuickQueue: 0x4\n",
        "description": "A possible integer underflow exists in the function `fallback`.\nThe subtraction may result in a value < 0.",
        "filename": "/unique_chucks/12/0xc07021b1875e2c4a885e73ad43557c7e40d63556.sol",
        "function": "fallback",
        "lineno": 168,
        "title": "Integer Underflow",
        "type": "Warning"
      },
      {
        "address": 2999,
        "code": "on getQueu",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_QuickQueue_4: 0x0\nstorage_0: 0x0\ncalldata_QuickQueue_0: 0x9f9fb96800000000000000000000000000000000000000000000000000000000\ncalldatasize_QuickQueue: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/12/0xc07021b1875e2c4a885e73ad43557c7e40d63556.sol",
        "function": "getDeposit(uint256)",
        "lineno": 183,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}