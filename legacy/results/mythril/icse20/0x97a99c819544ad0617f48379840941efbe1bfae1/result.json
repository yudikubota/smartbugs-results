{
  "contract": "0x97a99c819544ad0617f48379840941efbe1bfae1",
  "tool": "mythril",
  "start": 1563565267.065706,
  "end": 1563565420.9701293,
  "duration": 153.90442323684692,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 347,
        "code": " // messages are intended to be encrypted using the recipient's public key.\n  function directMessage(uint8 _toMemberId, string _message) public membersOnly ",
        "debug": "calldata_theCyber_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_theCyber_0: 0x186690b000000000000000000000000000000000000000000000000000000000\ncalldatasize_theCyber: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `broadcastMessage(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/18/0x97a99c819544ad0617f48379840941efbe1bfae1.sol",
        "function": "broadcastMessage(string)",
        "lineno": 243,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 484,
        "code": " the target contract and pass in the message.\n    SupportedContract(_contractAddress).theCyberMessage(_message);\n  }\n\n  // The contract is not payable by design, but could end up with a balance as\n  // a recipient of a selfdestruct / coinbase of a mined block.\n  function donateFunds() public membersOnly {\n    // Log the donation of any funds that have made their way int",
        "debug": "calldata_theCyber_32 + 4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_theCyber_0: 0x1c14b34000000000000000000000000000000000000000000000000000000000\ncalldatasize_theCyber: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `passMessage(address,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/18/0x97a99c819544ad0617f48379840941efbe1bfae1.sol",
        "function": "passMessage(address,string)",
        "lineno": 255,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1349,
        "code": "mberKey(addressToMember_[msg.sender], _newMemberKey);\n\n    // Change the member's public key.\n    members_[addressToMember_[msg.sender]].pubkey = _newMemberKey;\n  }\n\n  // Members can transfer their membership to a new address; when they do, the\n  // fields on the membership are all reset.\n  function trans",
        "debug": "calldata_theCyber_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_theCyber_0: 0xbbbff57100000000000000000000000000000000000000000000000000000000\ncalldatasize_theCyber: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `changeKey(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/18/0x97a99c819544ad0617f48379840941efbe1bfae1.sol",
        "function": "changeKey(string)",
        "lineno": 139,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1566,
        "code": "orts it (via the\n  // `theCyberMessage(string)` function), designated by the contract address.\n  function passMessage(address _contractAddress, string _message) public membersOnly {\n",
        "debug": "calldata_theCyber_32 + 4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_theCyber_0: 0xe998db2a00000000000000000000000000000000000000000000000000000000\ncalldatasize_theCyber: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `directMessage(uint8,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/18/0x97a99c819544ad0617f48379840941efbe1bfae1.sol",
        "function": "directMessage(uint8,string)",
        "lineno": 249,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2145,
        "code": "ress _memberAddress) public view returns (bo",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/18/0x97a99c819544ad0617f48379840941efbe1bfae1.sol",
        "function": "donateTokens(address)",
        "lineno": 281,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 2145,
        "code": "ress _memberAddress) public view returns (bo",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2672\nCall at address: 2480\n",
        "filename": "/unique_chucks/18/0x97a99c819544ad0617f48379840941efbe1bfae1.sol",
        "function": "donateTokens(address)",
        "lineno": 281,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 2480,
        "code": "MemberInformation(uint8 _memberId) public vi",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/18/0x97a99c819544ad0617f48379840941efbe1bfae1.sol",
        "function": "donateTokens(address)",
        "lineno": 288,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 2480,
        "code": "MemberInformation(uint8 _memberId) public vi",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2672\n",
        "filename": "/unique_chucks/18/0x97a99c819544ad0617f48379840941efbe1bfae1.sol",
        "function": "donateTokens(address)",
        "lineno": 288,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 2672,
        "code": "ressToMember_[_memberAddress]\n    );\n  }\n\n  function getMemberInformation(uint8 _memberId) public vie",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/18/0x97a99c819544ad0617f48379840941efbe1bfae1.sol",
        "function": "donateTokens(address)",
        "lineno": 284,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 3625,
        "code": "{\n    // Log the donation of any funds that have made their w",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/18/0x97a99c819544ad0617f48379840941efbe1bfae1.sol",
        "function": "passMessage(address,string)",
        "lineno": 261,
        "title": "Message call to external contract",
        "type": "Warning"
      }
    ],
    "success": true
  }
}