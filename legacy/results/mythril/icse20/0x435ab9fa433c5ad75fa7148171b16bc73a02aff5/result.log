{"error": null, "issues": [{"address": 1295, "code": "urn Returns array of owner addresses.\n    function getConfirmations(uint transactionId)\n        public\n        view\n        ", "debug": "storage_3: 0x800000000000000000000000000000000000000000000000000000000000000\ncalldata_SolidifiedVault_0: 0xa0e67e2b00000000000000000000000000000000000000000000000000000000\ncalldatasize_SolidifiedVault: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `getOwners()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x435ab9fa433c5ad75fa7148171b16bc73a02aff5.sol", "function": "getOwners()", "lineno": 266, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1473, "code": "<transactionCount; i++)\n            if (   pending && !transactions[i].executed\n                || executed && transactions[i].executed)\n            {\n                transactionIdsTemp[count] = i;\n                count += 1;\n            }\n        _transactionIds = new uint[](to - from);\n        for (i=from; i<to; i++)\n            _transactionIds[i - from] = transactionIdsTemp[i];\n    }\n}", "debug": "calldatasize_SolidifiedVault: 0x4000000000000000000000000000000000000000000000000000000000000000\ncalldata_SolidifiedVault_32 + 4: 0x482000240280120010000442504a2000000000000000000000001\nmem_128 + 32 + 32*storage_5: 0x800000000000003df000000000000000000000000000003def80001a0001efc0\ncalldata_SolidifiedVault_4: 0xfffffffffe9494a52a601b1b24ad59519fee4ccfe00000000000000000000000\ncalldata_SolidifiedVault_0: 0xa8abe69a00000000000000000000000000000000000000000000000000000000\nstorage_5: 0x0\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `getTransactionIds(uint256,uint256,bool,bool)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x435ab9fa433c5ad75fa7148171b16bc73a02aff5.sol", "function": "getTransactionIds(uint256,uint256,bool,bool)", "lineno": 299, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1617, "code": "wners.length; i++)\n            if (confirmations[transactionId][owners[i]]) {\n                confirmationsTemp[count] = owners[i];\n                count += 1;\n            }\n        _confirmations = new address[](count);\n        for (i=0; i<count; i++)\n            _confirmations[i] = confirmationsTemp[i];\n    }\n\n    /// @dev Returns list of transaction IDs in defined range.\n    /// @param from Index start position of transaction array.\n    /// @param to Index end position of transaction array.\n    /// @param pending Include pending transactions.\n    /// @param executed Include executed t", "debug": "calldatasize_SolidifiedVault: 0x8000000000000000000000000000000000000000000000\nmem_128 + 32 + 32*storage_3: 0x104210800000003df000000000000000000000000000003def800360884258f8\ncalldata_SolidifiedVault_0: 0xb5dc40c300000000000000000000000000000000000000000000000000000000\nstorage_3: 0x0\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `getConfirmations(uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x435ab9fa433c5ad75fa7148171b16bc73a02aff5.sol", "function": "getConfirmations(uint256)", "lineno": 275, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1931, "code": "t public required;\n    ", "debug": "The exception is triggered under the following conditions:\n\ncalldatasize_SolidifiedVault: 0xa0\ncalldata_SolidifiedVault_4: 0x0\nstorage_3: 0x0\ncalldata_SolidifiedVault_0: 0x25e7c2700000000000000000000000000000000000000000000000000000000\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_contracts/0x435ab9fa433c5ad75fa7148171b16bc73a02aff5.sol", "function": "_function_0x025e7c27", "lineno": 34, "title": "Exception state", "type": "Informational"}, {"address": 3613, "code": "        view\n", "debug": "storage_3: 0x8421003f084001f4210815cf88407c00000000000000037c1d000e8d178001f\ncalldata_SolidifiedVault_0: 0xa0e67e2b00000000000000000000000000000000000000000000000000000000\ncalldatasize_SolidifiedVault: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `getOwners()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x435ab9fa433c5ad75fa7148171b16bc73a02aff5.sol", "function": "getOwners()", "lineno": 269, "title": "Integer Overflow ", "type": "Warning"}, {"address": 3615, "code": "        view\n", "debug": "storage_3: 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffb\ncalldata_SolidifiedVault_0: 0xa0e67e2b00000000000000000000000000000000000000000000000000000000\ncalldatasize_SolidifiedVault: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `getOwners()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x435ab9fa433c5ad75fa7148171b16bc73a02aff5.sol", "function": "getOwners()", "lineno": 269, "title": "Integer Overflow ", "type": "Warning"}, {"address": 3940, "debug": "calldatasize_SolidifiedVault: 0x280\ncalldata_SolidifiedVault_32 + 4: 0x0\ncalldata_SolidifiedVault_4: 0x1\ncalldata_SolidifiedVault_0: 0xa8abe69a00000000000000000000000000000000000000000000000000000000\nstorage_5: 0x0\ncallvalue: 0x0\n", "description": "A possible integer underflow exists in the function `getTransactionIds(uint256,uint256,bool,bool)`.\nThe subtraction may result in a value < 0.", "filename": "/unique_contracts/0x435ab9fa433c5ad75fa7148171b16bc73a02aff5.sol", "function": "getTransactionIds(uint256,uint256,bool,bool)", "lineno": 310, "title": "Integer Underflow", "type": "Warning"}, {"address": 4014, "debug": "The exception is triggered under the following conditions:\n\ncalldatasize_SolidifiedVault: 0x280\ncalldata_SolidifiedVault_32 + 4: 0x100000000\ncalldata_SolidifiedVault_4: 0xfffffffe\ncalldata_SolidifiedVault_0: 0xa8abe69a00000000000000000000000000000000000000000000000000000000\nstorage_5: 0x0\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_contracts/0x435ab9fa433c5ad75fa7148171b16bc73a02aff5.sol", "function": "getTransactionIds(uint256,uint256,bool,bool)", "lineno": 310, "title": "Exception state", "type": "Informational"}, {"address": 6880, "code": ".\n    /// @return Num", "debug": "calldatasize_SolidifiedVault: 0x400000000000000000000000000000000000000000000000000000000000\nstorage_5: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_SolidifiedVault_4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_SolidifiedVault_0: 0x1d43b65300000000000000000000000000000000000000000000000000000000\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `submitTransaction(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x435ab9fa433c5ad75fa7148171b16bc73a02aff5.sol", "function": "submitTransaction(address,uint256)", "lineno": 227, "title": "Integer Overflow ", "type": "Warning"}], "success": true}