{
  "contract": "0xd980442a6ba33931cfaa57c0fd3b2c3826433dd5",
  "tool": "mythril",
  "start": 1563744089.9560194,
  "end": 1563744144.6973045,
  "duration": 54.7412850856781,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 988,
        "code": "sfer(msg.value);\n  }\n  // @retu",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/41/0xd980442a6ba33931cfaa57c0fd3b2c3826433dd5.sol",
        "function": "fallback",
        "lineno": 284,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 1431,
        "code": "hases and the ",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_5: 0x1\ncallvalue: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_VentureCoinCrowdsale_0: 0x2c5e72ae00000000000000000000000000000000000000000000000000000000\ncalldatasize_VentureCoinCrowdsale: 0x4\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/41/0xd980442a6ba33931cfaa57c0fd3b2c3826433dd5.sol",
        "function": "fallback",
        "lineno": 223,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}