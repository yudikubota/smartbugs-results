{"error": null, "issues": [{"address": 3106, "code": "ozenFunds(_target, freeze);\n }\n", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/15/0x5b47180e5f07fb5e10f86761df0c34ce952c6974.sol", "function": "refundTokens(address,address,uint256)", "lineno": 371, "title": "Message call to external contract", "type": "Warning"}, {"address": 5266, "code": " }\n\n  function", "debug": "The exception is triggered under the following conditions:\n\nstorage_4: 0xde0b6b3a7640001\ncalldata_VICToken_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_2: 0x0\ncaller: 0x0\ncalldata_VICToken_0: 0x7e1f2bb800000000000000000000000000000000000000000000000000000000\ncalldatasize_VICToken: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/15/0x5b47180e5f07fb5e10f86761df0c34ce952c6974.sol", "function": "createTokens(uint256)", "lineno": 38, "title": "Exception state", "type": "Informational"}, {"address": 5284, "code": "\n  }\n", "debug": "storage_4: 0x200b6b7a0640000\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xfffffffffffffffffffffffffffffffffffffffffffffffff9ad90e199f984e9\ncalldata_VICToken_4: 0x821100188493676\nstorage_2: 0x0\ncaller: 0x0\ncalldata_VICToken_0: 0x7e1f2bb800000000000000000000000000000000000000000000000000000000\ncalldatasize_VICToken: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `createTokens(uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/15/0x5b47180e5f07fb5e10f86761df0c34ce952c6974.sol", "function": "createTokens(uint256)", "lineno": 43, "title": "Integer Overflow ", "type": "Warning"}, {"address": 5297, "code": "**\n * ERC-20 s", "debug": "The exception is triggered under the following conditions:\n\nstorage_4: 0x5e186b201400000\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xfffffffffffffffffffffffffffffffffffffffffffffffffe002806ffffffff\ncalldata_VICToken_4: 0x3ff800000000001\nstorage_2: 0x0\ncaller: 0x0\ncalldata_VICToken_0: 0x7e1f2bb800000000000000000000000000000000000000000000000000000000\ncalldatasize_VICToken: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/15/0x5b47180e5f07fb5e10f86761df0c34ce952c6974.sol", "function": "createTokens(uint256)", "lineno": 50, "title": "Exception state", "type": "Informational"}], "success": true}