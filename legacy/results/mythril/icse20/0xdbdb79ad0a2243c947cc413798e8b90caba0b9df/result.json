{
  "contract": "0xdbdb79ad0a2243c947cc413798e8b90caba0b9df",
  "tool": "mythril",
  "start": 1563517408.5041444,
  "end": 1563517439.0015936,
  "duration": 30.497449159622192,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 1691,
        "code": "dSale(DSToken v",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_12: 0xfc00\ncalldatasize_ViewlySeedSale: 0x3\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/7/0xdbdb79ad0a2243c947cc413798e8b90caba0b9df.sol",
        "function": "fallback",
        "lineno": 388,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2475,
        "code": "rity_)\n       ",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/7/0xdbdb79ad0a2243c947cc413798e8b90caba0b9df.sol",
        "function": "setOwner(address)",
        "lineno": 99,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 2665,
        "code": "dSale(DSToken v",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_12: 0xfc00\ncaller: 0x0\ncalldata_ViewlySeedSale_0: 0x1f1886e400000000000000000000000000000000000000000000000000000000\ncalldatasize_ViewlySeedSale: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/7/0xdbdb79ad0a2243c947cc413798e8b90caba0b9df.sol",
        "function": "extendSale(uint256)",
        "lineno": 388,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2866,
        "code": "dSale(DSToken v",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_12: 0xfc00\ncaller: 0x0\ncalldata_ViewlySeedSale_0: 0x380d831b00000000000000000000000000000000000000000000000000000000\ncalldatasize_ViewlySeedSale: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/7/0xdbdb79ad0a2243c947cc413798e8b90caba0b9df.sol",
        "function": "endSale()",
        "lineno": 388,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3126,
        "code": "nce;\n        tot",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/7/0xdbdb79ad0a2243c947cc413798e8b90caba0b9df.sol",
        "function": "endSale()",
        "lineno": 458,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 3687,
        "code": "dSale(DSToken v",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_12: 0xfc00\ncalldata_ViewlySeedSale_0: 0xb5545a3c00000000000000000000000000000000000000000000000000000000\ncalldatasize_ViewlySeedSale: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/7/0xdbdb79ad0a2243c947cc413798e8b90caba0b9df.sol",
        "function": "claimRefund()",
        "lineno": 388,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 5050,
        "code": "y) >=",
        "debug": "storage_5: 0xb2c81e3be60b809eebca250ae5f3958de8241f3c0942692d3cecd1fd00743211\ncalldata_ViewlySeedSale_4: 0x93931c13e507cbbcbf74d9eee4fb920eeaef84aa5110428da2eddb017d5ebcdd\nstorage_12: 0x100\ncaller: 0x0\ncalldata_ViewlySeedSale_0: 0x1f1886e400000000000000000000000000000000000000000000000000000000\ncalldatasize_ViewlySeedSale: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `extendSale(uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/7/0xdbdb79ad0a2243c947cc413798e8b90caba0b9df.sol",
        "function": "extendSale(uint256)",
        "lineno": 5,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 5638,
        "code": "g,\n        address  indexed  guy,",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/7/0xdbdb79ad0a2243c947cc413798e8b90caba0b9df.sol",
        "function": "_function_0x7a9e5e4b",
        "lineno": 127,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 5638,
        "code": "g,\n        address  indexed  guy,",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3126\n",
        "filename": "/unique_chucks/7/0xdbdb79ad0a2243c947cc413798e8b90caba0b9df.sol",
        "function": "endSale()",
        "lineno": 127,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 5638,
        "code": "g,\n        address  indexed  guy,",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function _function_0x7a9e5e4b. The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/7/0xdbdb79ad0a2243c947cc413798e8b90caba0b9df.sol",
        "function": "_function_0x7a9e5e4b",
        "lineno": 127,
        "title": "Transaction order dependence",
        "type": "Warning"
      }
    ],
    "success": true
  }
}