{
  "contract": "0x0b7bda8ad804cb3318ae8490b984c2883ada2154",
  "tool": "mythril",
  "start": 1563506603.7547343,
  "end": 1563506650.0145242,
  "duration": 46.25978994369507,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 1728,
        "code": "atomId, bool _flag) {\n        uin",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/7/0x0b7bda8ad804cb3318ae8490b984c2883ada2154.sol",
        "function": "evolveByAtom(uint256)",
        "lineno": 308,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 1728,
        "code": "atomId, bool _flag) {\n        uin",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2615\nCall at address: 2429\nCall at address: 1993\n",
        "filename": "/unique_chucks/7/0x0b7bda8ad804cb3318ae8490b984c2883ada2154.sol",
        "function": "evolveByAtom(uint256)",
        "lineno": 308,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 1807,
        "code": "Buying(ui",
        "debug": "",
        "description": "Function evolveByAtom(uint256) retrieves the transaction origin (tx.origin) using the ORIGIN opcode. Use msg.sender instead.\nSee also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin",
        "filename": "/unique_chucks/7/0x0b7bda8ad804cb3318ae8490b984c2883ada2154.sol",
        "function": "evolveByAtom(uint256)",
        "lineno": 308,
        "title": "Use of tx.origin",
        "type": "Warning"
      },
      {
        "address": 1993,
        "code": "rigin,true);\n        uint id ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/7/0x0b7bda8ad804cb3318ae8490b984c2883ada2154.sol",
        "function": "evolveByAtom(uint256)",
        "lineno": 426,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 1993,
        "code": "rigin,true);\n        uint id ",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2615\nCall at address: 2429\n",
        "filename": "/unique_chucks/7/0x0b7bda8ad804cb3318ae8490b984c2883ada2154.sol",
        "function": "evolveByAtom(uint256)",
        "lineno": 426,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 2429,
        "code": "n,id);\n    }\n    \n}",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/7/0x0b7bda8ad804cb3318ae8490b984c2883ada2154.sol",
        "function": "evolveByAtom(uint256)",
        "lineno": 428,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 2429,
        "code": "n,id);\n    }\n    \n}",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2615\n",
        "filename": "/unique_chucks/7/0x0b7bda8ad804cb3318ae8490b984c2883ada2154.sol",
        "function": "evolveByAtom(uint256)",
        "lineno": 428,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 2615,
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/7/0x0b7bda8ad804cb3318ae8490b984c2883ada2154.sol",
        "function": "evolveByAtom(uint256)",
        "lineno": 431,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 2670,
        "debug": "",
        "description": "Function evolveByAtom(uint256) retrieves the transaction origin (tx.origin) using the ORIGIN opcode. Use msg.sender instead.\nSee also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin",
        "filename": "/unique_chucks/7/0x0b7bda8ad804cb3318ae8490b984c2883ada2154.sol",
        "function": "evolveByAtom(uint256)",
        "lineno": 431,
        "title": "Use of tx.origin",
        "type": "Warning"
      },
      {
        "address": 2902,
        "debug": "",
        "description": "Function receiveBonus() retrieves the transaction origin (tx.origin) using the ORIGIN opcode. Use msg.sender instead.\nSee also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin",
        "filename": "/unique_chucks/7/0x0b7bda8ad804cb3318ae8490b984c2883ada2154.sol",
        "function": "receiveBonus()",
        "lineno": 431,
        "title": "Use of tx.origin",
        "type": "Warning"
      },
      {
        "address": 3031,
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/7/0x0b7bda8ad804cb3318ae8490b984c2883ada2154.sol",
        "function": "receiveBonus()",
        "lineno": 431,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 3031,
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3465\nCall at address: 3307\n",
        "filename": "/unique_chucks/7/0x0b7bda8ad804cb3318ae8490b984c2883ada2154.sol",
        "function": "receiveBonus()",
        "lineno": 431,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 3165,
        "debug": "",
        "description": "Function receiveBonus() retrieves the transaction origin (tx.origin) using the ORIGIN opcode. Use msg.sender instead.\nSee also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin",
        "filename": "/unique_chucks/7/0x0b7bda8ad804cb3318ae8490b984c2883ada2154.sol",
        "function": "receiveBonus()",
        "lineno": 431,
        "title": "Use of tx.origin",
        "type": "Warning"
      },
      {
        "address": 3307,
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/7/0x0b7bda8ad804cb3318ae8490b984c2883ada2154.sol",
        "function": "receiveBonus()",
        "lineno": 431,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 3307,
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3465\n",
        "filename": "/unique_chucks/7/0x0b7bda8ad804cb3318ae8490b984c2883ada2154.sol",
        "function": "receiveBonus()",
        "lineno": 431,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 3465,
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/7/0x0b7bda8ad804cb3318ae8490b984c2883ada2154.sol",
        "function": "receiveBonus()",
        "lineno": 431,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 3557,
        "debug": "",
        "description": "Function receiveBonus() retrieves the transaction origin (tx.origin) using the ORIGIN opcode. Use msg.sender instead.\nSee also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin",
        "filename": "/unique_chucks/7/0x0b7bda8ad804cb3318ae8490b984c2883ada2154.sol",
        "function": "receiveBonus()",
        "lineno": 431,
        "title": "Use of tx.origin",
        "type": "Warning"
      },
      {
        "address": 3842,
        "code": "atomId, bool _flag) {\n        uin",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/7/0x0b7bda8ad804cb3318ae8490b984c2883ada2154.sol",
        "function": "rentByAtom(uint256,uint256)",
        "lineno": 308,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 3842,
        "code": "atomId, bool _flag) {\n        uin",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 4112\n",
        "filename": "/unique_chucks/7/0x0b7bda8ad804cb3318ae8490b984c2883ada2154.sol",
        "function": "rentByAtom(uint256,uint256)",
        "lineno": 308,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 3921,
        "code": "Buying(ui",
        "debug": "",
        "description": "Function rentByAtom(uint256,uint256) retrieves the transaction origin (tx.origin) using the ORIGIN opcode. Use msg.sender instead.\nSee also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin",
        "filename": "/unique_chucks/7/0x0b7bda8ad804cb3318ae8490b984c2883ada2154.sol",
        "function": "rentByAtom(uint256,uint256)",
        "lineno": 308,
        "title": "Use of tx.origin",
        "type": "Warning"
      },
      {
        "address": 4112,
        "code": "lyReady(uint _atomId) {\n     ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/7/0x0b7bda8ad804cb3318ae8490b984c2883ada2154.sol",
        "function": "rentByAtom(uint256,uint256)",
        "lineno": 315,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 6147,
        "code": "DataContract.atomOwn",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/7/0x0b7bda8ad804cb3318ae8490b984c2883ada2154.sol",
        "function": "setFee(uint128)",
        "lineno": 297,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 6147,
        "code": "DataContract.atomOwn",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 6638\nCall at address: 6638\nCall at address: 6392\n",
        "filename": "/unique_chucks/7/0x0b7bda8ad804cb3318ae8490b984c2883ada2154.sol",
        "function": "setFee(uint128)",
        "lineno": 297,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 6392,
        "code": "lag);\n        _;\n   ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/7/0x0b7bda8ad804cb3318ae8490b984c2883ada2154.sol",
        "function": "setFee(uint128)",
        "lineno": 297,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 6392,
        "code": "lag);\n        _;\n   ",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 6638\n",
        "filename": "/unique_chucks/7/0x0b7bda8ad804cb3318ae8490b984c2883ada2154.sol",
        "function": "setFee(uint128)",
        "lineno": 297,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 6638,
        "code": "er onlyRenting(uint ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/7/0x0b7bda8ad804cb3318ae8490b984c2883ada2154.sol",
        "function": "setFee(uint128)",
        "lineno": 301,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 6808,
        "code": "omId,true) onlyRenti",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/7/0x0b7bda8ad804cb3318ae8490b984c2883ada2154.sol",
        "function": "setFee(uint128)",
        "lineno": 352,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 7000,
        "code": "atomId, bool _flag) {\n        uin",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/7/0x0b7bda8ad804cb3318ae8490b984c2883ada2154.sol",
        "function": "setIsRentByAtom(uint256,uint128)",
        "lineno": 308,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 7000,
        "code": "atomId, bool _flag) {\n        uin",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 7663\nCall at address: 7269\n",
        "filename": "/unique_chucks/7/0x0b7bda8ad804cb3318ae8490b984c2883ada2154.sol",
        "function": "setIsRentByAtom(uint256,uint128)",
        "lineno": 308,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 7079,
        "code": "Buying(ui",
        "debug": "",
        "description": "Function setIsRentByAtom(uint256,uint128) retrieves the transaction origin (tx.origin) using the ORIGIN opcode. Use msg.sender instead.\nSee also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin",
        "filename": "/unique_chucks/7/0x0b7bda8ad804cb3318ae8490b984c2883ada2154.sol",
        "function": "setIsRentByAtom(uint256,uint128)",
        "lineno": 308,
        "title": "Use of tx.origin",
        "type": "Warning"
      },
      {
        "address": 7269,
        "code": "lyReady(uint _atomId) {\n     ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/7/0x0b7bda8ad804cb3318ae8490b984c2883ada2154.sol",
        "function": "setIsRentByAtom(uint256,uint128)",
        "lineno": 315,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 7269,
        "code": "lyReady(uint _atomId) {\n     ",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 7663\n",
        "filename": "/unique_chucks/7/0x0b7bda8ad804cb3318ae8490b984c2883ada2154.sol",
        "function": "setIsRentByAtom(uint256,uint128)",
        "lineno": 315,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 7663,
        "code": "       CaCoreContract = CaCor",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/7/0x0b7bda8ad804cb3318ae8490b984c2883ada2154.sol",
        "function": "setIsRentByAtom(uint256,uint128)",
        "lineno": 329,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 8459,
        "code": "atomId, bool _flag) {\n        uin",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/7/0x0b7bda8ad804cb3318ae8490b984c2883ada2154.sol",
        "function": "autoRentByAtom(uint256,uint256)",
        "lineno": 308,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 8459,
        "code": "atomId, bool _flag) {\n        uin",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 8997\nCall at address: 8729\n",
        "filename": "/unique_chucks/7/0x0b7bda8ad804cb3318ae8490b984c2883ada2154.sol",
        "function": "autoRentByAtom(uint256,uint256)",
        "lineno": 308,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 8538,
        "code": "Buying(ui",
        "debug": "",
        "description": "Function autoRentByAtom(uint256,uint256) retrieves the transaction origin (tx.origin) using the ORIGIN opcode. Use msg.sender instead.\nSee also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin",
        "filename": "/unique_chucks/7/0x0b7bda8ad804cb3318ae8490b984c2883ada2154.sol",
        "function": "autoRentByAtom(uint256,uint256)",
        "lineno": 308,
        "title": "Use of tx.origin",
        "type": "Warning"
      },
      {
        "address": 8729,
        "code": "atomId, bool _flag) {\n        uin",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/7/0x0b7bda8ad804cb3318ae8490b984c2883ada2154.sol",
        "function": "autoRentByAtom(uint256,uint256)",
        "lineno": 308,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 8729,
        "code": "atomId, bool _flag) {\n        uin",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 8997\n",
        "filename": "/unique_chucks/7/0x0b7bda8ad804cb3318ae8490b984c2883ada2154.sol",
        "function": "autoRentByAtom(uint256,uint256)",
        "lineno": 308,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 8808,
        "code": "Buying(ui",
        "debug": "",
        "description": "Function autoRentByAtom(uint256,uint256) retrieves the transaction origin (tx.origin) using the ORIGIN opcode. Use msg.sender instead.\nSee also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin",
        "filename": "/unique_chucks/7/0x0b7bda8ad804cb3318ae8490b984c2883ada2154.sol",
        "function": "autoRentByAtom(uint256,uint256)",
        "lineno": 308,
        "title": "Use of tx.origin",
        "type": "Warning"
      },
      {
        "address": 8997,
        "code": "       CaCoreContract = CaCor",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/7/0x0b7bda8ad804cb3318ae8490b984c2883ada2154.sol",
        "function": "autoRentByAtom(uint256,uint256)",
        "lineno": 329,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 10288,
        "code": "alse);\n        _;\n  ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/7/0x0b7bda8ad804cb3318ae8490b984c2883ada2154.sol",
        "function": "kill()",
        "lineno": 292,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 10614,
        "code": "atomId, bool _flag) {\n        uin",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/7/0x0b7bda8ad804cb3318ae8490b984c2883ada2154.sol",
        "function": "setIsBuyByAtom(uint256,uint128)",
        "lineno": 308,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 10614,
        "code": "atomId, bool _flag) {\n        uin",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 10883\n",
        "filename": "/unique_chucks/7/0x0b7bda8ad804cb3318ae8490b984c2883ada2154.sol",
        "function": "setIsBuyByAtom(uint256,uint128)",
        "lineno": 308,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 10693,
        "code": "Buying(ui",
        "debug": "",
        "description": "Function setIsBuyByAtom(uint256,uint128) retrieves the transaction origin (tx.origin) using the ORIGIN opcode. Use msg.sender instead.\nSee also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin",
        "filename": "/unique_chucks/7/0x0b7bda8ad804cb3318ae8490b984c2883ada2154.sol",
        "function": "setIsBuyByAtom(uint256,uint128)",
        "lineno": 308,
        "title": "Use of tx.origin",
        "type": "Warning"
      },
      {
        "address": 10883,
        "code": " uint _atomId2) {\n        req",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/7/0x0b7bda8ad804cb3318ae8490b984c2883ada2154.sol",
        "function": "setIsBuyByAtom(uint256,uint128)",
        "lineno": 322,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 11644,
        "code": "DataContract.atomOwn",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/7/0x0b7bda8ad804cb3318ae8490b984c2883ada2154.sol",
        "function": "setRate(uint8)",
        "lineno": 297,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 11644,
        "code": "DataContract.atomOwn",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 12135\nCall at address: 11889\n",
        "filename": "/unique_chucks/7/0x0b7bda8ad804cb3318ae8490b984c2883ada2154.sol",
        "function": "setRate(uint8)",
        "lineno": 297,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 11889,
        "code": "lag);\n        _;\n   ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/7/0x0b7bda8ad804cb3318ae8490b984c2883ada2154.sol",
        "function": "setRate(uint8)",
        "lineno": 297,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 12135,
        "code": "er onlyRenting(uint ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/7/0x0b7bda8ad804cb3318ae8490b984c2883ada2154.sol",
        "function": "setRate(uint8)",
        "lineno": 301,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 12275,
        "code": ".setAtomIsRent(_atomI",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/7/0x0b7bda8ad804cb3318ae8490b984c2883ada2154.sol",
        "function": "setRate(uint8)",
        "lineno": 354,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 12510,
        "code": "DataContract.atomOwn",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/7/0x0b7bda8ad804cb3318ae8490b984c2883ada2154.sol",
        "function": "setLevelup(uint8[4])",
        "lineno": 297,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 13324,
        "code": "atomId, bool _flag) {\n        uin",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/7/0x0b7bda8ad804cb3318ae8490b984c2883ada2154.sol",
        "function": "unsetIsBuyByAtom(uint256)",
        "lineno": 308,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 14444,
        "code": "DataContract.atomOwn",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/7/0x0b7bda8ad804cb3318ae8490b984c2883ada2154.sol",
        "function": "setGiftMode(bool)",
        "lineno": 297,
        "title": "Message call to external contract",
        "type": "Informational"
      }
    ],
    "success": true
  }
}