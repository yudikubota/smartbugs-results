{
  "contract": "0x3875151e877cb7c048d9b8f5045debf46babe02b",
  "tool": "mythril",
  "start": 1563565835.8291247,
  "end": 1563565953.813718,
  "duration": 117.98459339141846,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 499,
        "code": "ress ofAsset)\n        view\n        returns (uint price, uint timestamp)\n    {\n        Data data = assetsToPrices[ofAsset];\n        return (data.",
        "debug": "calldata_VersionInterface_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_VersionInterface_0: 0x2c10e90c00000000000000000000000000000000000000000000000000000000\ncalldatasize_VersionInterface: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `_function_0x2c10e90c`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/12/0x3875151e877cb7c048d9b8f5045debf46babe02b.sol",
        "function": "_function_0x2c10e90c",
        "lineno": 774,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1004,
        "code": "(uint i = 0; i < ofAssets.length; ++i) {\n            require(registrar.assetIsRegistered(ofAssets[i]));\n            require(assetsToPrices[ofAssets[i]].timestamp != now); // prevent two updates in one block\n            assetsToPrices[ofAssets[i]].timestamp = now;\n            assetsToPrices[ofAssets[i]].price = newPrices[i];\n        }\n        emit PriceUpdated(keccak256(ofAssets, newPrices));\n    }\n}\n\ncontract StakingPriceFeed is SimplePriceFeed {\n\n    Op",
        "debug": "calldata_VersionInterface_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_VersionInterface_0: 0x8fb5a48200000000000000000000000000000000000000000000000000000000\ncalldatasize_VersionInterface: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `getPrices(address[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/12/0x3875151e877cb7c048d9b8f5045debf46babe02b.sol",
        "function": "getPrices(address[])",
        "lineno": 813,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1108,
        "code": "(uint i = 0; i < ofAssets.length; ++i) {\n            require(registrar.assetIsRegistered(ofAssets[i]));\n            require(assetsToPrices[ofAssets[i]].timestamp != now); // prevent two updates in one block\n            assetsToPrices[ofAssets[i]].timestamp = now;\n            assetsToPrices[ofAssets[i]].price = newPrices[i];\n        }\n        emit PriceUpdated(keccak256(ofAssets, newPrices));\n    }\n}\n\ncontract StakingPriceFeed is SimplePriceFeed {\n\n    Op",
        "debug": "mem_128 +\n32 +\n32*calldata_VersionInterface_4 + calldata_VersionInterface_4: 0x800000000000000000000000000000000000000000000000000000000000000\ncalldata_VersionInterface_0: 0x8fb5a48200000000000000000000000000000000000000000000000000000000\ncalldatasize_VersionInterface: 0x4\ncalldata_VersionInterface_4 + calldata_VersionInterface_4: 0x0\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `getPrices(address[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/12/0x3875151e877cb7c048d9b8f5045debf46babe02b.sol",
        "function": "getPrices(address[])",
        "lineno": 813,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1174,
        "code": "(uint i = 0; i < ofAssets.length; ++i) {\n            require(registrar.assetIsRegistered(ofAssets[i]));\n            require(assetsToPrices[ofAssets[i]].timestamp != now); // prevent two updates in one block\n            assetsToPrices[ofAssets[i]].timestamp = now;\n            assetsToPrices[ofAssets[i]].price = newPrices[i];\n        }\n        emit PriceUpdated(keccak256(ofAssets, newPrices));\n    }\n}\n\ncontract StakingPriceFeed is SimplePriceFeed {\n\n    Op",
        "debug": "mem_160 +\n32*calldata_VersionInterface_4 + calldata_VersionInterface_4 +\n32 +\n32*calldata_VersionInterface_4 + calldata_VersionInterface_4: 0x800000000000000000000000000000000000000000000000000000000000000\nmem_128 +\n32 +\n32*calldata_VersionInterface_4 + calldata_VersionInterface_4: 0x1\ncalldata_VersionInterface_0: 0x8fb5a48200000000000000000000000000000000000000000000000000000000\ncalldatasize_VersionInterface: 0x4\ncalldata_VersionInterface_4 + calldata_VersionInterface_4: 0x0\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `getPrices(address[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/12/0x3875151e877cb7c048d9b8f5045debf46babe02b.sol",
        "function": "getPrices(address[])",
        "lineno": 813,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1520,
        "code": "\n    // FIELDS\n\n    // INTERNAL FIELDS\n    Node[] internal stakeNodes; // Sorted circular linked l",
        "debug": "calldata_VersionInterface_32 + 4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_VersionInterface_0: 0xc8fd6ed000000000000000000000000000000000000000000000000000000000\ncalldatasize_VersionInterface: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `unstake(uint256,bytes)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/12/0x3875151e877cb7c048d9b8f5045debf46babe02b.sol",
        "function": "unstake(uint256,bytes)",
        "lineno": 894,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2042,
        "code": "gSetOwner(owne",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/12/0x3875151e877cb7c048d9b8f5045debf46babe02b.sol",
        "function": "setOwner(address)",
        "lineno": 28,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 2963,
        "code": "emit Pric",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_VersionInterface_4 + calldata_VersionInterface_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_VersionInterface_0: 0x8fb5a48200000000000000000000000000000000000000000000000000000000\ncalldatasize_VersionInterface: 0x4\nmem_128 +\n32 +\n32*calldata_VersionInterface_4 + calldata_VersionInterface_4: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/12/0x3875151e877cb7c048d9b8f5045debf46babe02b.sol",
        "function": "getPrices(address[])",
        "lineno": 819,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2992,
        "code": "sets, newPric",
        "debug": "The exception is triggered under the following conditions:\n\nmem_128 +\n32 +\n32*calldata_VersionInterface_4 + calldata_VersionInterface_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_VersionInterface_4 + calldata_VersionInterface_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_VersionInterface_0: 0x8fb5a48200000000000000000000000000000000000000000000000000000000\ncalldatasize_VersionInterface: 0x4\nmem_160 +\n32*calldata_VersionInterface_4 + calldata_VersionInterface_4 +\n32 +\n32*calldata_VersionInterface_4 + calldata_VersionInterface_4: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/12/0x3875151e877cb7c048d9b8f5045debf46babe02b.sol",
        "function": "getPrices(address[])",
        "lineno": 819,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3323,
        "code": "atterns-doubly-linked-list/)\n\n    // PUBLIC FI",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/12/0x3875151e877cb7c048d9b8f5045debf46babe02b.sol",
        "function": "withdrawStake()",
        "lineno": 898,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 4109,
        "code": "ernal stakeNodes; // Sorted circular ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/12/0x3875151e877cb7c048d9b8f5045debf46babe02b.sol",
        "function": "unstake(uint256,bytes)",
        "lineno": 898,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 5703,
        "code": "}\n\ncontract DSExec {\n    function",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/12/0x3875151e877cb7c048d9b8f5045debf46babe02b.sol",
        "function": "withdrawStake()",
        "lineno": 55,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 5703,
        "code": "}\n\ncontract DSExec {\n    function",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 6034\n",
        "filename": "/unique_chucks/12/0x3875151e877cb7c048d9b8f5045debf46babe02b.sol",
        "function": "_function_0x2c10e90c",
        "lineno": 55,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 5703,
        "code": "}\n\ncontract DSExec {\n    function",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function withdrawStake(). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/12/0x3875151e877cb7c048d9b8f5045debf46babe02b.sol",
        "function": "withdrawStake()",
        "lineno": 55,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 5800,
        "code": "ss ofQuote",
        "debug": "storage_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncaller: 0x0\ncalldata_VersionInterface_0: 0x2c10e90c00000000000000000000000000000000000000000000000000000000\ncalldatasize_VersionInterface: 0x4\nmem_128 +\n32 +\n32*calldata_VersionInterface_4 + calldata_VersionInterface_4: 0x0\ncalldata_VersionInterface_4 + calldata_VersionInterface_4: 0x0\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `_function_0x2c10e90c`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/12/0x3875151e877cb7c048d9b8f5045debf46babe02b.sol",
        "function": "_function_0x2c10e90c",
        "lineno": 835,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 6034,
        "code": " ofQuoteAsset, ofSuperFeed)\n    {\n      ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/12/0x3875151e877cb7c048d9b8f5045debf46babe02b.sol",
        "function": "_function_0x2c10e90c",
        "lineno": 838,
        "title": "Message call to external contract",
        "type": "Informational"
      }
    ],
    "success": true
  }
}