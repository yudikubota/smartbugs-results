{"error": null, "issues": [{"address": 2551, "code": " }\n\n    function handlePayment", "debug": "The exception is triggered under the following conditions:\n\nstorage_7: 0x0\ncalldata_TokenLogic_4: 0x0\nstorage_10: 0x0\nstorage_8: 0x108b2a2c28029093ffffff\ntimestamp: 0x1\ncaller: 0x0\ncalldata_TokenLogic_0: 0x56e25e300000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenLogic: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/23/0x7c1d82a70285f11bffe5de9053f93af9d270c411.sol", "function": "returnIcoInvestments(uint256)", "lineno": 657, "title": "Exception state", "type": "Informational"}, {"address": 4666, "code": "    function tra", "debug": "calldata_TokenLogic_32 + 4: 0x49f49f49f49f49f49f49f49f49f49f49f49f49f49f49f49f49f49f49f49f4a0\ncaller: 0x0\ncalldata_TokenLogic_0: 0x9a555c000000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenLogic: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `setIcoStart(uint256,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/23/0x7c1d82a70285f11bffe5de9053f93af9d270c411.sol", "function": "setIcoStart(uint256,uint256)", "lineno": 598, "title": "Integer Overflow ", "type": "Warning"}, {"address": 4670, "code": "    }\n    \n    function tra", "debug": "calldata_TokenLogic_4: 0xdf8c96b78a77f041c41eba96634e2e0aff91000619eacf4058407a080701c870\ncalldata_TokenLogic_32 + 4: 0x4cbc9ab83f98fc91e63d04926000ca42c001012100dbc3f2348b1b59ae97f28\ncaller: 0x0\ncalldata_TokenLogic_0: 0x9a555c000000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenLogic: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `setIcoStart(uint256,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/23/0x7c1d82a70285f11bffe5de9053f93af9d270c411.sol", "function": "setIcoStart(uint256,uint256)", "lineno": 596, "title": "Integer Overflow ", "type": "Warning"}, {"address": 4822, "code": "nction setPresale(bool presale_) auth {\n        presale = presale_;", "debug": "The exception is triggered under the following conditions:\n\nstorage_3: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_TokenLogic_0: 0x13af403500000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenLogic: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/23/0x7c1d82a70285f11bffe5de9053f93af9d270c411.sol", "function": "setOwner(address)", "lineno": 577, "title": "Exception state", "type": "Informational"}, {"address": 5215, "code": " function balanceOf(", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/23/0x7c1d82a70285f11bffe5de9053f93af9d270c411.sol", "function": "setOwner(address)", "lineno": 590, "title": "Message call to external contract", "type": "Informational"}, {"address": 5503, "code": "ess src, addr", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/23/0x7c1d82a70285f11bffe5de9053f93af9d270c411.sol", "function": "totalSupply()", "lineno": 607, "title": "Message call to external contract", "type": "Informational"}, {"address": 5714, "code": "nction setPresale(bool presale_) auth {\n        presale = presale_;", "debug": "The exception is triggered under the following conditions:\n\nstorage_3: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_TokenLogic_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenLogic: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/23/0x7c1d82a70285f11bffe5de9053f93af9d270c411.sol", "function": "transferFrom(address,address,uint256)", "lineno": 577, "title": "Exception state", "type": "Informational"}, {"address": 5908, "code": "ner(), add(data.ba", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/23/0x7c1d82a70285f11bffe5de9053f93af9d270c411.sol", "function": "transferFrom(address,address,uint256)", "lineno": 628, "title": "Message call to external contract", "type": "Informational"}, {"address": 5908, "code": "ner(), add(data.ba", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 6222\n", "filename": "/unique_chucks/23/0x7c1d82a70285f11bffe5de9053f93af9d270c411.sol", "function": "transferFrom(address,address,uint256)", "lineno": 628, "title": "Multiple Calls", "type": "Information"}, {"address": 6222, "code": ";\n        data.setSupply", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/23/0x7c1d82a70285f11bffe5de9053f93af9d270c411.sol", "function": "transferFrom(address,address,uint256)", "lineno": 628, "title": "Message call to external contract", "type": "Informational"}, {"address": 8072, "code": "nction setPresale(bool presale_) auth {\n        presale = presale_;", "debug": "The exception is triggered under the following conditions:\n\nstorage_3: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_TokenLogic_0: 0x68ce90ac00000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenLogic: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/23/0x7c1d82a70285f11bffe5de9053f93af9d270c411.sol", "function": "handlePayment(address,uint256)", "lineno": 577, "title": "Exception state", "type": "Informational"}, {"address": 10225, "code": "nction setPresale(bool presale_) auth {\n        presale = presale_;", "debug": "The exception is triggered under the following conditions:\n\nstorage_3: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_TokenLogic_0: 0x69d3e20e00000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenLogic: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/23/0x7c1d82a70285f11bffe5de9053f93af9d270c411.sol", "function": "mint(uint128)", "lineno": 577, "title": "Exception state", "type": "Informational"}, {"address": 10425, "code": "(src != addr", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/23/0x7c1d82a70285f11bffe5de9053f93af9d270c411.sol", "function": "mint(uint128)", "lineno": 643, "title": "Message call to external contract", "type": "Informational"}, {"address": 10425, "code": "(src != addr", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 10683\n", "filename": "/unique_chucks/23/0x7c1d82a70285f11bffe5de9053f93af9d270c411.sol", "function": "mint(uint128)", "lineno": 643, "title": "Multiple Calls", "type": "Information"}, {"address": 10683, "code": "nt srcBalanc", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/23/0x7c1d82a70285f11bffe5de9053f93af9d270c411.sol", "function": "mint(uint128)", "lineno": 645, "title": "Message call to external contract", "type": "Informational"}, {"address": 11690, "code": "     require(data.", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/23/0x7c1d82a70285f11bffe5de9053f93af9d270c411.sol", "function": "burn(address,uint128)", "lineno": 609, "title": "Message call to external contract", "type": "Informational"}, {"address": 11895, "code": "nction setPresale(bool presale_) auth {\n        presale = presale_;", "debug": "The exception is triggered under the following conditions:\n\nstorage_3: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_TokenLogic_0: 0x7261e46900000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenLogic: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/23/0x7c1d82a70285f11bffe5de9053f93af9d270c411.sol", "function": "burn(address,uint128)", "lineno": 577, "title": "Exception state", "type": "Informational"}, {"address": 16404, "code": "  Copyright 2017 DappHub, LLC\n\n  ", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/23/0x7c1d82a70285f11bffe5de9053f93af9d270c411.sol", "function": "setTokensPerWei(uint256)", "lineno": 63, "title": "Message call to external contract", "type": "Informational"}, {"address": 16404, "code": "  Copyright 2017 DappHub, LLC\n\n  ", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 11690\nCall at address: 11690\n", "filename": "/unique_chucks/23/0x7c1d82a70285f11bffe5de9053f93af9d270c411.sol", "function": "returnIcoInvestments(uint256)", "lineno": 63, "title": "Multiple Calls", "type": "Information"}], "success": true}