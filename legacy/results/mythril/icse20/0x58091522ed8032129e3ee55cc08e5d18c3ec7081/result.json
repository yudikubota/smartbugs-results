{
  "contract": "0x58091522ed8032129e3ee55cc08e5d18c3ec7081",
  "tool": "mythril",
  "start": 1563489544.7922971,
  "end": 1563489575.0701888,
  "duration": 30.277891635894775,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 1445,
        "code": "     return(i);\n    }\n\n}\n\n\n/**\n * @title Ownable\n * @dev The Ownable contract has an owner address, and provides basic authorization control\n * functions, this simplifies the implementation of \"user permissions\".\n */\ncontract Ownable {\n  add",
        "debug": "calldata_WeGoldToken_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_WeGoldToken_0: 0xaad41a4100000000000000000000000000000000000000000000000000000000\ncalldatasize_WeGoldToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `multisend(address[],uint256[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/6/0x58091522ed8032129e3ee55cc08e5d18c3ec7081.sol",
        "function": "multisend(address[],uint256[])",
        "lineno": 220,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 3053,
        "code": "he implem",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_WeGoldToken_4 + calldata_WeGoldToken_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_WeGoldToken_0: 0xaad41a4100000000000000000000000000000000000000000000000000000000\ncalldatasize_WeGoldToken: 0x4\nmem_128 +\n32 +\n32*calldata_WeGoldToken_4 + calldata_WeGoldToken_4: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/6/0x58091522ed8032129e3ee55cc08e5d18c3ec7081.sol",
        "function": "multisend(address[],uint256[])",
        "lineno": 229,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 6552,
        "code": " }\n}\n",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_WeGoldToken_32_+_4: 0xc050fffff320c00020003d81af848540000000000000040000110001bd062022\ncalldata_WeGoldToken_32 + 36: 0xfe51000008ce80008001c1d33616877ffffffffffffff7ffffe10000398d50ac\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xfe51000008ce80008001c1d33616877ffffffffffffff7ffffe10000398d50ac\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_WeGoldToken_4: 0xfe51000008ce80008001c1d33616877ffffffffffffff7ffffe10000398d50ac\ncalldata_WeGoldToken_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\nstorage_3: 0x0\ncalldata_WeGoldToken_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_WeGoldToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `transferFrom(address,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/6/0x58091522ed8032129e3ee55cc08e5d18c3ec7081.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 46,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 6565,
        "code": " @title ERC20B",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_WeGoldToken_32_+_4: 0xd32ba62e013a1e544c40f8298f8c838ef0ca495e903244487f8ba1f8c2a013e7\ncalldata_WeGoldToken_32 + 36: 0x53632f08ddbb360427befb69cb0d577a76825c1eb02b4cefbf971939ae256117\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x53632f08ddbb360427befb69cb0d577a76825c1eb02b4cefbf971939ae256117\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_WeGoldToken_4: 0x53632f08ddbb360427befb69cb0d577a76825c1eb02b4cefbf971939ae256117\ncalldata_WeGoldToken_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\nstorage_3: 0x0\ncalldata_WeGoldToken_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_WeGoldToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/6/0x58091522ed8032129e3ee55cc08e5d18c3ec7081.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 50,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}