{
  "contract": "0x6cdcc0f443b358698bcbda64d3c29390226ededd",
  "tool": "mythril",
  "start": 1563613877.534989,
  "end": 1563614028.6354866,
  "duration": 151.10049748420715,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 88,
        "code": "n;\n        if (msg.val",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_token_0: 0xeae7a76500000000000000000000000000000000000000000000000000000000\ncalldatasize_token: 0x4\nstorage_4: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/20/0x6cdcc0f443b358698bcbda64d3c29390226ededd.sol",
        "function": "fallback",
        "lineno": 22,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 545,
        "code": "g.sender, sendtoken);\n        \n        ether10 = (msg.",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/20/0x6cdcc0f443b358698bcbda64d3c29390226ededd.sol",
        "function": "fallback",
        "lineno": 35,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 545,
        "code": "g.sender, sendtoken);\n        \n        ether10 = (msg.",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 823\nCall at address: 716\n",
        "filename": "/unique_chucks/20/0x6cdcc0f443b358698bcbda64d3c29390226ededd.sol",
        "function": "fallback",
        "lineno": 35,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 620,
        "code": "her90 = (msg.value)-ethe",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/20/0x6cdcc0f443b358698bcbda64d3c29390226ededd.sol",
        "function": "fallback",
        "lineno": 38,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 631,
        "code": "  owner.transfer(ether90);\n  ",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/20/0x6cdcc0f443b358698bcbda64d3c29390226ededd.sol",
        "function": "fallback",
        "lineno": 39,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 716,
        "code": "10.transfer(ether10);\n ",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 823\n",
        "filename": "/unique_chucks/20/0x6cdcc0f443b358698bcbda64d3c29390226ededd.sol",
        "function": "fallback",
        "lineno": 40,
        "title": "Multiple Calls",
        "type": "Information"
      }
    ],
    "success": true
  }
}