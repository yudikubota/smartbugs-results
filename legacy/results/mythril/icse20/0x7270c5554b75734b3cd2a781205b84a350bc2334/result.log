{"error": null, "issues": [{"address": 2037, "code": "ner];\n  }\n\n  /**\n  * @dev Transfer token for a specified address\n  * @param _to", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol", "function": "transferFrom(address,address,uint256)", "lineno": 403, "title": "Message call to external contract", "type": "Informational"}, {"address": 2037, "code": "ner];\n  }\n\n  /**\n  * @dev Transfer token for a specified address\n  * @param _to", "debug": "", "description": "A possible transaction order independence vulnerability exists in function transferFrom(address,address,uint256). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol", "function": "transferFrom(address,address,uint256)", "lineno": 403, "title": "Transaction order dependence", "type": "Warning"}, {"address": 2414, "code": "okens will be the company contract.\n    addre", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol", "function": "transferFrom(address,address,uint256)", "lineno": 444, "title": "State change after external call", "type": "Warning"}, {"address": 2563, "code": "panyAddress = ContractManagementSystem(ma", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol", "function": "transferFrom(address,address,uint256)", "lineno": 445, "title": "State change after external call", "type": "Warning"}, {"address": 3464, "code": "ner];\n  }\n\n  /**\n  * @dev Transfer token for a specified address\n  * @param _to", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol", "function": "mint(uint256)", "lineno": 403, "title": "Message call to external contract", "type": "Informational"}, {"address": 3464, "code": "ner];\n  }\n\n  /**\n  * @dev Transfer token for a specified address\n  * @param _to", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3726\n", "filename": "/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol", "function": "mint(uint256)", "lineno": 403, "title": "Multiple Calls", "type": "Information"}, {"address": 3464, "code": "ner];\n  }\n\n  /**\n  * @dev Transfer token for a specified address\n  * @param _to", "debug": "", "description": "A possible transaction order independence vulnerability exists in function mint(uint256). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol", "function": "mint(uint256)", "lineno": 403, "title": "Transaction order dependence", "type": "Warning"}, {"address": 3726, "code": " TOKEN_CONTRACT_ID = 1;\n\n  /**\n   * @dev Create a new instance of the company c", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol", "function": "mint(uint256)", "lineno": 459, "title": "Message call to external contract", "type": "Informational"}, {"address": 3726, "code": " TOKEN_CONTRACT_ID = 1;\n\n  /**\n   * @dev Create a new instance of the company c", "debug": "", "description": "A possible transaction order independence vulnerability exists in function mint(uint256). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol", "function": "mint(uint256)", "lineno": 459, "title": "Transaction order dependence", "type": "Warning"}, {"address": 4306, "code": "ner];\n  }\n\n  /**\n  * @dev Transfer token for a specified address\n  * @param _to", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol", "function": "transfer(address,uint256)", "lineno": 403, "title": "Message call to external contract", "type": "Informational"}, {"address": 4306, "code": "ner];\n  }\n\n  /**\n  * @dev Transfer token for a specified address\n  * @param _to", "debug": "", "description": "A possible transaction order independence vulnerability exists in function transfer(address,uint256). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol", "function": "transfer(address,uint256)", "lineno": 403, "title": "Transaction order dependence", "type": "Warning"}, {"address": 4981, "code": "w ret", "debug": "calldata_Versionable_32 + 36: 0xc290137095b13347e55005a6dc184559e0489f1233480050d0fb4bba17d34179\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_Versionable_32_+_4: 0x9c9efb7ae5acd378025256a3945f5859076e809243093d9ecae2636c9fd28979\nretval_2037: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_Versionable_4: 0xc290137095b13347e55005a6dc184559e0489f1233480050d0fb4bba17d34179\ncalldata_Versionable_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\nreturndatasize: 0x20\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_1: 0xff00\ncalldata_Versionable_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_Versionable: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `transferFrom(address,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol", "function": "transferFrom(address,address,uint256)", "lineno": 347, "title": "Integer Overflow ", "type": "Warning"}, {"address": 4994, "code": "int256);\n  fun", "debug": "The exception is triggered under the following conditions:\n\ncalldata_Versionable_32 + 36: 0x6218000d800000000000000000000000039800002005500633e06f771baff7fc\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_Versionable_32_+_4: 0xbd5dfeabad0efffffffffeffffffffffd599ffefbfe6f24271e80e64322c0700\nretval_2037: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_Versionable_4: 0x6218000d800000000000000000000000039800002005500633e06f771baff7fc\ncalldata_Versionable_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\nreturndatasize: 0x20\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_1: 0xff00\ncalldata_Versionable_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_Versionable: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol", "function": "transferFrom(address,address,uint256)", "lineno": 347, "title": "Exception state", "type": "Informational"}], "success": true}