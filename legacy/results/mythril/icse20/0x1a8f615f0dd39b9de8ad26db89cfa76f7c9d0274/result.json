{
  "contract": "0x1a8f615f0dd39b9de8ad26db89cfa76f7c9d0274",
  "tool": "mythril",
  "start": 1563465527.6308572,
  "end": 1563465749.2690191,
  "duration": 221.6381618976593,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 1362,
        "code": " spender = tokenRecipient(_spender);\n        if (approve(_spender, _value)) {\n            spender.receiveApproval(msg.sender, _value, this, _extraData);\n            return true;\n        }\n    }\n\n    function increaseApproval (address _spender, uint _addedValue) public returns (bool success) {\n        allowance[msg.sender][_spen",
        "debug": "calldata_tokenRecipient_32 + 36: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_tokenRecipient_0: 0xcae9ca5100000000000000000000000000000000000000000000000000000000\ncalldatasize_tokenRecipient: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `approveAndCall(address,uint256,bytes)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/1/0x1a8f615f0dd39b9de8ad26db89cfa76f7c9d0274.sol",
        "function": "approveAndCall(address,uint256,bytes)",
        "lineno": 132,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 4346,
        "code": "l (address _spender, uint _addedValue) public returns (bool s",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/1/0x1a8f615f0dd39b9de8ad26db89cfa76f7c9d0274.sol",
        "function": "approveAndCall(address,uint256,bytes)",
        "lineno": 139,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 4927,
        "code": "b <= ",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncalldata_tokenRecipient_32 + 4: 0x1\ncalldata_tokenRecipient_4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_tokenRecipient_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncalldatasize_tokenRecipient: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer underflow exists in the function `transfer(address,uint256)`.\nThe subtraction may result in a value < 0.",
        "filename": "/unique_chucks/1/0x1a8f615f0dd39b9de8ad26db89cfa76f7c9d0274.sol",
        "function": "transfer(address,uint256)",
        "lineno": 24,
        "title": "Integer Underflow",
        "type": "Warning"
      },
      {
        "address": 4940,
        "code": " assert(a == c",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncalldata_tokenRecipient_32 + 4: 0x1\ncalldata_tokenRecipient_4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_tokenRecipient_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncalldatasize_tokenRecipient: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/1/0x1a8f615f0dd39b9de8ad26db89cfa76f7c9d0274.sol",
        "function": "transfer(address,uint256)",
        "lineno": 25,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 5394,
        "code": ";\n   ",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_tokenRecipient_4: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncalldata_tokenRecipient_32 + 4: 0x57f25cd000000000000000000000000000000000000000000000000000000000\ncalldata_tokenRecipient_0: 0xd73dd62300000000000000000000000000000000000000000000000000000000\ncalldatasize_tokenRecipient: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `_function_0xd73dd623`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/1/0x1a8f615f0dd39b9de8ad26db89cfa76f7c9d0274.sol",
        "function": "_function_0xd73dd623",
        "lineno": 31,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 5407,
        "code": "(a == c - b);\n",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_tokenRecipient_4: 0x1\ncalldata_tokenRecipient_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_tokenRecipient_0: 0xd73dd62300000000000000000000000000000000000000000000000000000000\ncalldatasize_tokenRecipient: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/1/0x1a8f615f0dd39b9de8ad26db89cfa76f7c9d0274.sol",
        "function": "_function_0xd73dd623",
        "lineno": 32,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}