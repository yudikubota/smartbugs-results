{
  "contract": "0xc3ee57fa8ed253e3f214048879977265967ae745",
  "tool": "mythril",
  "start": 1563352835.7965448,
  "end": 1563352875.1936924,
  "duration": 39.39714765548706,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 203,
        "code": "     if (removeAddressFromWhitelist(addrs[i])) {\n           success = true;\n         }\n       }\n     }\n   }\n    /**\n    * @title ERC20 interface\n    * @dev see https://github.com/ethereum/EIPs/issues/20\n    */\n    contract ERC20 is ERC20Basic {\n     function a",
        "debug": "calldata_Whitelist_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_Whitelist_0: 0x24953eaa00000000000000000000000000000000000000000000000000000000\ncalldatasize_Whitelist: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `removeAddressesFromWhitelist(address[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0xc3ee57fa8ed253e3f214048879977265967ae745.sol",
        "function": "removeAddressesFromWhitelist(address[])",
        "lineno": 155,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 782,
        "code": "s.length; i++) {\n         if (addAddressToWhitelist(addrs[i])) {\n           success = true;\n         }\n       }\n     }\n     /**\n      * @dev remove an address from the whitelist\n      * @param addr address\n      * @return true if the address was remo",
        "debug": "calldata_Whitelist_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_Whitelist_0: 0xe2ec6ec300000000000000000000000000000000000000000000000000000000\ncalldatasize_Whitelist: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `addAddressesToWhitelist(address[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0xc3ee57fa8ed253e3f214048879977265967ae745.sol",
        "function": "addAddressesToWhitelist(address[])",
        "lineno": 128,
        "title": "Integer Overflow ",
        "type": "Warning"
      }
    ],
    "success": true
  }
}