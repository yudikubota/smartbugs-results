{
  "contract": "0xfd3473ade3db26db08a42153bcfb64ffeb44a0c8",
  "tool": "mythril",
  "start": 1563584587.8165388,
  "end": 1563584695.0680346,
  "duration": 107.25149583816528,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 362,
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xb52f63828fd54ece223fa592433f036340ec43932c8d65d21811ba26802e0ace\nbalance_at_1461501637330902918203684832716283019655932542975 & 0: 0x2a94909f3c1300100\ncallvalue: 0xa46f3799b1aab4cfb870349302305e01394eb28b06e963600000220e00058ec4\nstorage_1: 0x0\ncalldata_ERC20_0: 0x13f00000000000000000000000000000000000000000000000000000000\ncalldatasize_ERC20: 0x4\n",
        "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/21/0xfd3473ade3db26db08a42153bcfb64ffeb44a0c8.sol",
        "function": "fallback",
        "lineno": 108,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 405,
        "code": ".balance >= min_amount);\n    require(!bought_tokens);\n    require(sale != 0x0);\n    require(msg.sender == creator || hash_pwd == keccak256(_password));\n    //Registers the buy block number\n    buy_block = block.number;\n    // Record that the contract has bought the tokens.\n    bought_tokens = true;\n    // Record the amount of ETH sent as the contract's current value.\n    contract_eth_value = this.balance;\n    // Transfer all the funds to the crowdsale address.\n    sale.transfer(contract_eth_value);\n  }\n  \n  function set_sale_address(address _sale, string _password) {\n    //",
        "debug": "calldata_ERC20_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_ERC20_0: 0xadc6700000000000000000000000000000000000000000000000000000000\ncalldatasize_ERC20: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/21/0xfd3473ade3db26db08a42153bcfb64ffeb44a0c8.sol",
        "function": "fallback",
        "lineno": 62,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1025,
        "code": "er == creator || hash_pwd == keccak256(_password));\n    token = ERC20(_token);\n  }\n\n  function emergy_withdraw(address _token) {\n    //Allows to withdraw all the tokens",
        "debug": "calldata_ERC20_32 + 4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_ERC20_0: 0xb987154800000000000000000000000000000000000000000000000000000000\ncalldatasize_ERC20: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `set_token_address(address,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/21/0xfd3473ade3db26db08a42153bcfb64ffeb44a0c8.sol",
        "function": "set_token_address(address,string)",
        "lineno": 85,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1205,
        "code": "e the creator or someone with the password\n    require(msg.sender == creator || hash_pwd == keccak256(_password));\n    require(sale == 0x0);\n    require(!bought_tokens);\n    sale = _sale;\n  }\n\n  function set_token_address(address _token, string _password) {\n    require(ms",
        "debug": "calldata_ERC20_32 + 4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_ERC20_0: 0xda6aabbe00000000000000000000000000000000000000000000000000000000\ncalldatasize_ERC20: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `set_sale_address(address,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/21/0xfd3473ade3db26db08a42153bcfb64ffeb44a0c8.sol",
        "function": "set_sale_address(address,string)",
        "lineno": 77,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1920,
        "code": "dress _sale, string _password) {\n",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function fallback. The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/21/0xfd3473ade3db26db08a42153bcfb64ffeb44a0c8.sol",
        "function": "fallback",
        "lineno": 76,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 2231,
        "code": "    // Disallow token withdraw",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/21/0xfd3473ade3db26db08a42153bcfb64ffeb44a0c8.sol",
        "function": "withdraw()",
        "lineno": 34,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 2231,
        "code": "    // Disallow token withdraw",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3035\nCall at address: 2766\n",
        "filename": "/unique_chucks/21/0xfd3473ade3db26db08a42153bcfb64ffeb44a0c8.sol",
        "function": "withdraw()",
        "lineno": 34,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 2231,
        "code": "    // Disallow token withdraw",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function withdraw(). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/21/0xfd3473ade3db26db08a42153bcfb64ffeb44a0c8.sol",
        "function": "withdraw()",
        "lineno": 34,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 2381,
        "code": "en_balance) / contract_eth_value;\n    // Update the value of tokens ",
        "debug": "The exception is triggered under the following conditions:\n\nreturndatasize: 0x20\nretval_2231: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_1: 0xff00\ncalldata_ERC20_0: 0x3ccfd60b00000000000000000000000000000000000000000000000000000000\ncalldatasize_ERC20: 0x4\nstorage_2: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/21/0xfd3473ade3db26db08a42153bcfb64ffeb44a0c8.sol",
        "function": "withdraw()",
        "lineno": 37,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2456,
        "code": "der];\n    // Update the user's balance pri",
        "debug": "storage_2: 0x1\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x2\nreturndatasize: 0x20\nretval_2231: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_1: 0xff00\ncalldata_ERC20_0: 0x3ccfd60b00000000000000000000000000000000000000000000000000000000\ncalldatasize_ERC20: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer underflow exists in the function `withdraw()`.\nThe subtraction may result in a value < 0.",
        "filename": "/unique_chucks/21/0xfd3473ade3db26db08a42153bcfb64ffeb44a0c8.sol",
        "function": "withdraw()",
        "lineno": 39,
        "title": "Integer Underflow",
        "type": "Warning"
      },
      {
        "address": 2462,
        "code": "der];\n    // Update the user's balance pri",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/21/0xfd3473ade3db26db08a42153bcfb64ffeb44a0c8.sol",
        "function": "withdraw()",
        "lineno": 39,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 2530,
        "code": "e = tokens_to_withdraw /",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/21/0xfd3473ade3db26db08a42153bcfb64ffeb44a0c8.sol",
        "function": "withdraw()",
        "lineno": 42,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 2766,
        "code": "the funds.  Throws on failur",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/21/0xfd3473ade3db26db08a42153bcfb64ffeb44a0c8.sol",
        "function": "withdraw()",
        "lineno": 45,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 2766,
        "code": "the funds.  Throws on failur",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3035\n",
        "filename": "/unique_chucks/21/0xfd3473ade3db26db08a42153bcfb64ffeb44a0c8.sol",
        "function": "withdraw()",
        "lineno": 45,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 2766,
        "code": "the funds.  Throws on failur",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function withdraw(). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/21/0xfd3473ade3db26db08a42153bcfb64ffeb44a0c8.sol",
        "function": "withdraw()",
        "lineno": 45,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 3035,
        "code": " - fee));\n  }\n  \n  // Allows any user to get his eth",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/21/0xfd3473ade3db26db08a42153bcfb64ffeb44a0c8.sol",
        "function": "withdraw()",
        "lineno": 46,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 3035,
        "code": " - fee));\n  }\n  \n  // Allows any user to get his eth",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function withdraw(). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/21/0xfd3473ade3db26db08a42153bcfb64ffeb44a0c8.sol",
        "function": "withdraw()",
        "lineno": 46,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 4240,
        "code": "nder] = 0;\n    // Send the fun",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/21/0xfd3473ade3db26db08a42153bcfb64ffeb44a0c8.sol",
        "function": "emergy_withdraw(address)",
        "lineno": 97,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 4381,
        "code": "  require(token.transfer",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/21/0xfd3473ade3db26db08a42153bcfb64ffeb44a0c8.sol",
        "function": "emergy_withdraw(address)",
        "lineno": 99,
        "title": "State change after external call",
        "type": "Warning"
      }
    ],
    "success": true
  }
}