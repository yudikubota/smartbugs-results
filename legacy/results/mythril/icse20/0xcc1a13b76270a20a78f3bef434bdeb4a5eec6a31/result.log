{"error": null, "issues": [{"address": 321, "code": "nder] += msg.value;\n      if (thi", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xdddf7a7820c00113398511090d2402232d6a050e859c0ac10077a8fe7e6cb3d1\ncallvalue: 0x2220e9b8000c8107233910892ce15bbc70280b1d69ba6aeb89034c00904c2bf9\nstorage_2: 0x0\ncalldata_ERC20_0: 0x4a00000000000000000000000000000000000000000000000000000000\ncalldatasize_ERC20: 0x4\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/24/0xcc1a13b76270a20a78f3bef434bdeb4a5eec6a31.sol", "function": "fallback", "lineno": 69, "title": "Integer Overflow ", "type": "Warning"}, {"address": 398, "code": " < eth_minimum) return;\n      if (kill_switc", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x35\ncallvalue: 0x8000000000000000000000000000000000000000000000000000000000000000\nstorage_2: 0x0\ncalldata_ERC20_0: 0x1f00000000000000000000000000000000000000000000000000000000\ncalldatasize_ERC20: 0x4\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/24/0xcc1a13b76270a20a78f3bef434bdeb4a5eec6a31.sol", "function": "fallback", "lineno": 70, "title": "Integer Overflow ", "type": "Warning"}, {"address": 704, "code": " } else {\n\n      require(msg.sender =", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/24/0xcc1a13b76270a20a78f3bef434bdeb4a5eec6a31.sol", "function": "fallback", "lineno": 78, "title": "Message call to external contract", "type": "Informational"}, {"address": 863, "debug": "callvalue: 0x2220e9b8000c8107233910892ce15bbc70280b1d69ba6aeb89034c00904c2bf9\nstorage_5: 0xdddf7a7820c00113398511090d2402232d6a050e859c0ac10077a8fe7e6cb3d1\nstorage_9: 0x0\ncaller: 0x0\nstorage_2: 0xff00\ncalldata_ERC20_0: 0x4a00000000000000000000000000000000000000000000000000000000\ncalldatasize_ERC20: 0x4\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/24/0xcc1a13b76270a20a78f3bef434bdeb4a5eec6a31.sol", "function": "fallback", "lineno": 84, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2055, "code": "und_contract_eth_value;\n    refund_contract_eth_value -= balances_for_refund[msg", "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_5: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_ERC20_0: 0x50d7d29000000000000000000000000000000000000000000000000000000000\ncalldatasize_ERC20: 0x4\nstorage_4: 0x0\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/24/0xcc1a13b76270a20a78f3bef434bdeb4a5eec6a31.sol", "function": "withdraw_refund()", "lineno": 59, "title": "Exception state", "type": "Informational"}, {"address": 2131, "code": "];\n    refund_eth_value -= eth_to_withdraw;\n    balances_for", "debug": "storage_4: 0xfffffffffffffffffffffffffffffffffffffffffffe\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x100000000000000000000000000000000000000000000\nstorage_5: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_ERC20_0: 0x50d7d29000000000000000000000000000000000000000000000000000000000\ncalldatasize_ERC20: 0x4\ncallvalue: 0x0\n", "description": "A possible integer underflow exists in the function `withdraw_refund()`.\nThe subtraction may result in a value < 0.", "filename": "/unique_chucks/24/0xcc1a13b76270a20a78f3bef434bdeb4a5eec6a31.sol", "function": "withdraw_refund()", "lineno": 60, "title": "Integer Underflow", "type": "Warning"}, {"address": 2271, "code": "le {\n    if (!bought_tokens) {\n     ", "debug": "", "description": "A possible transaction order independence vulnerability exists in function withdraw_refund(). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/24/0xcc1a13b76270a20a78f3bef434bdeb4a5eec6a31.sol", "function": "withdraw_refund()", "lineno": 66, "title": "Transaction order dependence", "type": "Warning"}, {"address": 3148, "code": "uire(contract_token_balance != 0", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/24/0xcc1a13b76270a20a78f3bef434bdeb4a5eec6a31.sol", "function": "withdraw_token(address)", "lineno": 45, "title": "Message call to external contract", "type": "Warning"}, {"address": 3298, "code": "e) / contract_eth_value;\n      contract_eth_value -= balances[msg.se", "debug": "The exception is triggered under the following conditions:\n\nreturndatasize: 0x20\nretval_3148: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_2: 0xff00\nstorage_9: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_ERC20_0: 0x9cd3cb5d00000000000000000000000000000000000000000000000000000000\ncalldatasize_ERC20: 0x4\nstorage_3: 0x0\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/24/0xcc1a13b76270a20a78f3bef434bdeb4a5eec6a31.sol", "function": "withdraw_token(address)", "lineno": 46, "title": "Exception state", "type": "Informational"}, {"address": 3373, "code": "    balances[msg.sender] = 0;\n      uint25", "debug": "storage_3: 0xfffffffffffffffffffffffffffffffffffffffffffe\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x100000000000000000000000000000000000000000000\nreturndatasize: 0x20\nretval_3148: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_2: 0xff00\nstorage_9: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_ERC20_0: 0x9cd3cb5d00000000000000000000000000000000000000000000000000000000\ncalldatasize_ERC20: 0x4\ncallvalue: 0x0\n", "description": "A possible integer underflow exists in the function `withdraw_token(address)`.\nThe subtraction may result in a value < 0.", "filename": "/unique_chucks/24/0xcc1a13b76270a20a78f3bef434bdeb4a5eec6a31.sol", "function": "withdraw_token(address)", "lineno": 48, "title": "Integer Underflow", "type": "Warning"}, {"address": 3379, "code": "    balances[msg.sender] = 0;\n      uint25", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/24/0xcc1a13b76270a20a78f3bef434bdeb4a5eec6a31.sol", "function": "withdraw_token(address)", "lineno": 48, "title": "State change after external call", "type": "Warning"}, {"address": 3447, "code": "okens_to_withdraw / 100;", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/24/0xcc1a13b76270a20a78f3bef434bdeb4a5eec6a31.sol", "function": "withdraw_token(address)", "lineno": 49, "title": "State change after external call", "type": "Warning"}], "success": true}