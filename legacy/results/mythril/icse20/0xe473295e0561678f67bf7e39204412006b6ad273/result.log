{"error": null, "issues": [{"address": 112, "code": "ess[] recipients, uint256[] amounts) public {\n    require(admin == msg.sender);\n    require(recipients.length == amounts.length);\n    for (uint i = 0; i < recipients.length; i++) {\n      Payout(\n        msg.sender,\n        recipients[i],\n        i + 1,\n        amounts[i],\n        recipients[i].send(amounts[i])\n      );\n    }\n  }\n  \n  function () public payable", "debug": "calldata_BountyEscrow_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_BountyEscrow_0: 0xc176e63900000000000000000000000000000000000000000000000000000000\ncalldatasize_BountyEscrow: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `payout(address[],uint256[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0xe473295e0561678f67bf7e39204412006b6ad273.sol", "function": "payout(address[],uint256[])", "lineno": 21, "title": "Integer Overflow ", "type": "Warning"}, {"address": 681, "code": ")\n      );\n    }\n  }\n  \n  func", "debug": "", "description": "The return value of an external call is not checked. Note that execution continue even if the called contract throws.", "filename": "/unique_contracts/0xe473295e0561678f67bf7e39204412006b6ad273.sol", "function": "payout(address[],uint256[])", "lineno": 30, "title": "Unchecked CALL return value", "type": "Informational"}], "success": true}