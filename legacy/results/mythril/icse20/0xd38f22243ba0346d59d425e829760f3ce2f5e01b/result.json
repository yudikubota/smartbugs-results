{
  "contract": "0xd38f22243ba0346d59d425e829760f3ce2f5e01b",
  "tool": "mythril",
  "start": 1563314821.9778838,
  "end": 1563315047.9420218,
  "duration": 225.96413803100586,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 293,
        "code": "return hasRole(roleName) && roles.roleList(contractHash, keccak256(roleName), msg.sender);\n    }\n\n    function stop() public roleOrOwner(\"stopper\") {\n        stopped = true;\n ",
        "debug": "calldata_SecuredWithRolesI_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_SecuredWithRolesI_0: 0x1ca03b8e00000000000000000000000000000000000000000000000000000000\ncalldatasize_SecuredWithRolesI: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `senderHasRole(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0xd38f22243ba0346d59d425e829760f3ce2f5e01b.sol",
        "function": "senderHasRole(string)",
        "lineno": 79,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 784,
        "code": "turn roles.knownRoleNames(contractHash, keccak256(roleName));\n    }\n\n    function senderHasRole(string roleName) public view returns (bool) {\n",
        "debug": "calldata_SecuredWithRolesI_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_SecuredWithRolesI_0: 0xe3c33a9b00000000000000000000000000000000000000000000000000000000\ncalldatasize_SecuredWithRolesI: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `hasRole(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0xd38f22243ba0346d59d425e829760f3ce2f5e01b.sol",
        "function": "hasRole(string)",
        "lineno": 75,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1066,
        "code": "      stopped ",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_contracts/0xd38f22243ba0346d59d425e829760f3ce2f5e01b.sol",
        "function": "stop()",
        "lineno": 87,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 1702,
        "code": "tion stop() public roleOrOwner(\"stopper\") {\n        stopped =",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_contracts/0xd38f22243ba0346d59d425e829760f3ce2f5e01b.sol",
        "function": "restart()",
        "lineno": 82,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 1702,
        "code": "tion stop() public roleOrOwner(\"stopper\") {\n        stopped =",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function restart(). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_contracts/0xd38f22243ba0346d59d425e829760f3ce2f5e01b.sol",
        "function": "restart()",
        "lineno": 82,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 2583,
        "code": "on senderHasRole(string roleName) public view returns (",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_contracts/0xd38f22243ba0346d59d425e829760f3ce2f5e01b.sol",
        "function": "hasRole(string)",
        "lineno": 78,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 2583,
        "code": "on senderHasRole(string roleName) public view returns (",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1702\n",
        "filename": "/unique_contracts/0xd38f22243ba0346d59d425e829760f3ce2f5e01b.sol",
        "function": "restart()",
        "lineno": 78,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 2583,
        "code": "on senderHasRole(string roleName) public view returns (",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function hasRole(string). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_contracts/0xd38f22243ba0346d59d425e829760f3ce2f5e01b.sol",
        "function": "hasRole(string)",
        "lineno": 78,
        "title": "Transaction order dependence",
        "type": "Warning"
      }
    ],
    "success": true
  }
}