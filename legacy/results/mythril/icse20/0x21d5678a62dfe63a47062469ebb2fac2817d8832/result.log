{"error": null, "issues": [{"address": 1661, "code": "ddressList[i]] == 0);\n          transfer(_addressList[i], _amounts[i]);\n        }\n    }\n\n    event Transfer(\n        address indexed _from,\n        address indexed _to,\n        uint256 _amount\n        );\n\n    event Approval(\n        address indexed _owner,\n        address indexed _spender,\n        uint256 _amount\n  ", "debug": "calldata_tokenRecipient_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_tokenRecipient_0: 0xb7e39b4f00000000000000000000000000000000000000000000000000000000\ncalldatasize_tokenRecipient: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `_function_0xb7e39b4f`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/4/0x21d5678a62dfe63a47062469ebb2fac2817d8832.sol", "function": "_function_0xb7e39b4f", "lineno": 228, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2412, "code": "e(_addressList.length == _amounts.length);\n        for (uint i = ", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/4/0x21d5678a62dfe63a47062469ebb2fac2817d8832.sol", "function": "authenticate(uint256,uint256,uint256)", "lineno": 226, "title": "Message call to external contract", "type": "Informational"}, {"address": 2412, "code": "e(_addressList.length == _amounts.length);\n        for (uint i = ", "debug": "", "description": "A possible transaction order independence vulnerability exists in function authenticate(uint256,uint256,uint256). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/4/0x21d5678a62dfe63a47062469ebb2fac2817d8832.sol", "function": "authenticate(uint256,uint256,uint256)", "lineno": 226, "title": "Transaction order dependence", "type": "Warning"}, {"address": 5703, "code": "// @return The balance of `_owner`\n    functio", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/4/0x21d5678a62dfe63a47062469ebb2fac2817d8832.sol", "function": "authenticate(uint256,uint256,uint256)", "lineno": 162, "title": "State change after external call", "type": "Warning"}, {"address": 5852, "code": "(address _owner) public constant returns (", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/4/0x21d5678a62dfe63a47062469ebb2fac2817d8832.sol", "function": "authenticate(uint256,uint256,uint256)", "lineno": 163, "title": "State change after external call", "type": "Warning"}, {"address": 5972, "code": ", throws on ov", "debug": "The exception is triggered under the following conditions:\n\ncalldata_tokenRecipient_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_0: 0x0\ncaller: 0x0\ncalldata_tokenRecipient_0: 0x42966c6800000000000000000000000000000000000000000000000000000000\ncalldatasize_tokenRecipient: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/4/0x21d5678a62dfe63a47062469ebb2fac2817d8832.sol", "function": "burn(uint256)", "lineno": 76, "title": "Exception state", "type": "Informational"}, {"address": 5990, "code": "ion a", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_tokenRecipient_32_+_4: 0xc050fffff320c00020003d81af848540000000000000040000110001bd062022\ncalldata_tokenRecipient_32 + 36: 0xfe51000008ce80008001c1d33616877ffffffffffffff7ffffe10000398d50ac\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_tokenRecipient_4: 0xfe51000008ce80008001c1d33616877ffffffffffffff7ffffe10000398d50ac\ncalldata_tokenRecipient_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xfe51000008ce80008001c1d33616877ffffffffffffff7ffffe10000398d50ac\ncalldata_tokenRecipient_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_tokenRecipient: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `transferFrom(address,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/4/0x21d5678a62dfe63a47062469ebb2fac2817d8832.sol", "function": "transferFrom(address,address,uint256)", "lineno": 86, "title": "Integer Overflow ", "type": "Warning"}, {"address": 6003, "code": "cate(address _", "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_tokenRecipient_32_+_4: 0xd32ba62e013a1e544c40f8298f8c838ef0ca495e903244487f8ba1f8c2a013e7\ncalldata_tokenRecipient_32 + 36: 0x53632f08ddbb360427befb69cb0d577a76825c1eb02b4cefbf971939ae256117\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_tokenRecipient_4: 0x53632f08ddbb360427befb69cb0d577a76825c1eb02b4cefbf971939ae256117\ncalldata_tokenRecipient_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x53632f08ddbb360427befb69cb0d577a76825c1eb02b4cefbf971939ae256117\ncalldata_tokenRecipient_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_tokenRecipient: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/4/0x21d5678a62dfe63a47062469ebb2fac2817d8832.sol", "function": "transferFrom(address,address,uint256)", "lineno": 86, "title": "Exception state", "type": "Informational"}], "success": true}