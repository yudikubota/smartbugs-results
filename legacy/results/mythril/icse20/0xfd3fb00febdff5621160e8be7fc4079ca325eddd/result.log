{"error": null, "issues": [{"address": 935, "code": "        emit Shake(msg.sender,", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_contracts/0xfd3fb00febdff5621160e8be7fc4079ca325eddd.sol", "function": "withdrawToken(address,address,uint256)", "lineno": 263, "title": "Message call to external contract", "type": "Warning"}, {"address": 935, "code": "        emit Shake(msg.sender,", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1127\n", "filename": "/unique_contracts/0xfd3fb00febdff5621160e8be7fc4079ca325eddd.sol", "function": "withdrawToken(address,address,uint256)", "lineno": 263, "title": "Multiple Calls", "type": "Information"}, {"address": 1127, "code": "_chaos_the_algo));\n        emit Shake(msg.sender, ", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_contracts/0xfd3fb00febdff5621160e8be7fc4079ca325eddd.sol", "function": "withdrawToken(address,address,uint256)", "lineno": 262, "title": "Message call to external contract", "type": "Warning"}, {"address": 1319, "code": "  \n    function () public p", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_contracts/0xfd3fb00febdff5621160e8be7fc4079ca325eddd.sol", "function": "withdrawToken(address,address,uint256)", "lineno": 265, "title": "Message call to external contract", "type": "Warning"}, {"address": 1829, "code": "00000000000000000);\n        ERC20Interface(0xbfd18F20423694a69e35d65cB9c9D74396CC2c2d).tr", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_contracts/0xfd3fb00febdff5621160e8be7fc4079ca325eddd.sol", "function": "PlayX10()", "lineno": 97, "title": "Message call to external contract", "type": "Informational"}, {"address": 3295, "code": ", 200000000000000000000);\n        uint8 _random = random();\n\n        if (_random + ", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_contracts/0xfd3fb00febdff5621160e8be7fc4079ca325eddd.sol", "function": "Playforfreetoken()", "lineno": 199, "title": "Message call to external contract", "type": "Informational"}, {"address": 3295, "code": ", 200000000000000000000);\n        uint8 _random = random();\n\n        if (_random + ", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 4259\nCall at address: 3972\nCall at address: 3685\nCall at address: 3559\n", "filename": "/unique_contracts/0xfd3fb00febdff5621160e8be7fc4079ca325eddd.sol", "function": "Playforfreetoken()", "lineno": 199, "title": "Multiple Calls", "type": "Information"}, {"address": 3559, "code": " < address(this).balance) {\n                msg.sender.transfer(msg.value);\n                uint256 wi", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_contracts/0xfd3fb00febdff5621160e8be7fc4079ca325eddd.sol", "function": "Playforfreetoken()", "lineno": 203, "title": "Message call to external contract", "type": "Informational"}, {"address": 3559, "code": " < address(this).balance) {\n                msg.sender.transfer(msg.value);\n                uint256 wi", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 4259\nCall at address: 3972\nCall at address: 3685\n", "filename": "/unique_contracts/0xfd3fb00febdff5621160e8be7fc4079ca325eddd.sol", "function": "Playforfreetoken()", "lineno": 203, "title": "Multiple Calls", "type": "Information"}, {"address": 4679, "code": "(msg.sender)) >= 50000000000000000000);\n        ERC20Interface(0xbfd18F20423694a69e35d65c", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_contracts/0xfd3fb00febdff5621160e8be7fc4079ca325eddd.sol", "function": "PlayX5()", "lineno": 77, "title": "Message call to external contract", "type": "Informational"}, {"address": 6123, "code": "5d65cB9c9D74396CC2c2d).balanceOf(address(msg.sender)) >= 50000000000000000000);\n        E", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_contracts/0xfd3fb00febdff5621160e8be7fc4079ca325eddd.sol", "function": "PlayX2()", "lineno": 37, "title": "Message call to external contract", "type": "Informational"}, {"address": 7567, "code": "ce(0xbfd18F20423694a69e35d65cB9c9D74396CC2c2d).transferFrom(msg.sender, address(this), 50", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_contracts/0xfd3fb00febdff5621160e8be7fc4079ca325eddd.sol", "function": "PlayX30()", "lineno": 138, "title": "Message call to external contract", "type": "Informational"}, {"address": 9011, "code": "C2c2d).transferFrom(msg.sender, address(this), 50000000000000000000);\n        uint8 _rand", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_contracts/0xfd3fb00febdff5621160e8be7fc4079ca325eddd.sol", "function": "PlayX100()", "lineno": 178, "title": "Message call to external contract", "type": "Informational"}, {"address": 10419, "code": "69e35d65cB9c9D74396CC2c2d).transferFrom(msg.sender, address(this), 50000000000000000000);", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_contracts/0xfd3fb00febdff5621160e8be7fc4079ca325eddd.sol", "function": "PlayX50()", "lineno": 158, "title": "Message call to external contract", "type": "Informational"}, {"address": 12061, "code": "00000);\n        uint8 _random = random();\n\n        if (_random + 50 >= 100) {\n     ", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_contracts/0xfd3fb00febdff5621160e8be7fc4079ca325eddd.sol", "function": "Playforbulktoken()", "lineno": 221, "title": "Message call to external contract", "type": "Informational"}, {"address": 12061, "code": "00000);\n        uint8 _random = random();\n\n        if (_random + 50 >= 100) {\n     ", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 12326\n", "filename": "/unique_contracts/0xfd3fb00febdff5621160e8be7fc4079ca325eddd.sol", "function": "Playforbulktoken()", "lineno": 221, "title": "Multiple Calls", "type": "Information"}, {"address": 12326, "code": "ance) {\n                msg.sender.transfer(msg.value);\n                emit PlayResult(msg.sender, \"bul", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_contracts/0xfd3fb00febdff5621160e8be7fc4079ca325eddd.sol", "function": "Playforbulktoken()", "lineno": 225, "title": "Message call to external contract", "type": "Informational"}, {"address": 13479, "code": "d).balanceOf(address(msg.sender)) >= 50000000000000000000);\n        ERC20Interface(0xbfd1", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_contracts/0xfd3fb00febdff5621160e8be7fc4079ca325eddd.sol", "function": "PlayX3()", "lineno": 57, "title": "Message call to external contract", "type": "Informational"}, {"address": 14923, "code": "        ERC20Interface(0xbfd18F20423694a69e35d65cB9c9D74396CC2c2d).transferFrom(msg.sende", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_contracts/0xfd3fb00febdff5621160e8be7fc4079ca325eddd.sol", "function": "PlayX20()", "lineno": 118, "title": "Message call to external contract", "type": "Informational"}], "success": true}