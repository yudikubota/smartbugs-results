{
  "contract": "0x2a37f3c4ce5ee6b1dbcdb593b21eee1c418ad403",
  "tool": "mythril",
  "start": 1563787623.1127346,
  "end": 1563787657.1470306,
  "duration": 34.0342960357666,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 368,
        "code": "endFunds(address _recipient, Acc _from",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/47/0x2a37f3c4ce5ee6b1dbcdb593b21eee1c418ad403.sol",
        "function": "fallback",
        "lineno": 631,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 368,
        "code": "endFunds(address _recipient, Acc _from",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1181\n",
        "filename": "/unique_chucks/47/0x2a37f3c4ce5ee6b1dbcdb593b21eee1c418ad403.sol",
        "function": "fallback",
        "lineno": 631,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 368,
        "code": "endFunds(address _recipient, Acc _from",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function fallback. The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/47/0x2a37f3c4ce5ee6b1dbcdb593b21eee1c418ad403.sol",
        "function": "fallback",
        "lineno": 631,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 1181,
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/47/0x2a37f3c4ce5ee6b1dbcdb593b21eee1c418ad403.sol",
        "function": "fallback",
        "lineno": 662,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 1181,
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1630\nCall at address: 1436\n",
        "filename": "/unique_chucks/47/0x2a37f3c4ce5ee6b1dbcdb593b21eee1c418ad403.sol",
        "function": "_function_0xb5675ee4",
        "lineno": 662,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 1181,
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function fallback. The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/47/0x2a37f3c4ce5ee6b1dbcdb593b21eee1c418ad403.sol",
        "function": "fallback",
        "lineno": 662,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 1259,
        "debug": "The exception is triggered under the following conditions:\n\ncallvalue: 0x0\nretval_1181: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nreturndatasize: 0x20\nretval_368: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_FlightDelayLedgerInterface_0: 0x29377d6000000000000000000000000000000000000000000000000000000000\ncalldatasize_FlightDelayLedgerInterface: 0x4\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/47/0x2a37f3c4ce5ee6b1dbcdb593b21eee1c418ad403.sol",
        "function": "fallback",
        "lineno": 662,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 1333,
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_FlightDelayLedgerInterface_4: 0x80\ncalldata_FlightDelayLedgerInterface_32 + 36: 0x1\nreturndatasize: 0x20\nretval_1181: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_FlightDelayLedgerInterface_0: 0xb5675ee400000000000000000000000000000000000000000000000000000000\ncalldatasize_FlightDelayLedgerInterface: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/47/0x2a37f3c4ce5ee6b1dbcdb593b21eee1c418ad403.sol",
        "function": "_function_0xb5675ee4",
        "lineno": 662,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 1436,
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/47/0x2a37f3c4ce5ee6b1dbcdb593b21eee1c418ad403.sol",
        "function": "_function_0xb5675ee4",
        "lineno": 662,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 1436,
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1630\n",
        "filename": "/unique_chucks/47/0x2a37f3c4ce5ee6b1dbcdb593b21eee1c418ad403.sol",
        "function": "_function_0xb5675ee4",
        "lineno": 662,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 1436,
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function _function_0xb5675ee4. The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/47/0x2a37f3c4ce5ee6b1dbcdb593b21eee1c418ad403.sol",
        "function": "_function_0xb5675ee4",
        "lineno": 662,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 1530,
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_FlightDelayLedgerInterface_32 + 4: 0x6\ncalldata_FlightDelayLedgerInterface_4: 0x0\nretval_1436: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_FlightDelayLedgerInterface_32 + 36: 0x1\nreturndatasize: 0x20\nretval_1181: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_FlightDelayLedgerInterface_0: 0xb5675ee400000000000000000000000000000000000000000000000000000000\ncalldatasize_FlightDelayLedgerInterface: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/47/0x2a37f3c4ce5ee6b1dbcdb593b21eee1c418ad403.sol",
        "function": "_function_0xb5675ee4",
        "lineno": 662,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 1630,
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/47/0x2a37f3c4ce5ee6b1dbcdb593b21eee1c418ad403.sol",
        "function": "_function_0xb5675ee4",
        "lineno": 662,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 1630,
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function _function_0xb5675ee4. The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/47/0x2a37f3c4ce5ee6b1dbcdb593b21eee1c418ad403.sol",
        "function": "_function_0xb5675ee4",
        "lineno": 662,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 1860,
        "code": "from, _amount);\n            _success =",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/47/0x2a37f3c4ce5ee6b1dbcdb593b21eee1c418ad403.sol",
        "function": "_function_0x29377d61",
        "lineno": 643,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 1860,
        "code": "from, _amount);\n            _success =",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1630\nCall at address: 1436\nCall at address: 1181\n",
        "filename": "/unique_chucks/47/0x2a37f3c4ce5ee6b1dbcdb593b21eee1c418ad403.sol",
        "function": "_function_0x29377d61",
        "lineno": 643,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 1860,
        "code": "from, _amount);\n            _success =",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function _function_0x29377d61. The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/47/0x2a37f3c4ce5ee6b1dbcdb593b21eee1c418ad403.sol",
        "function": "_function_0x29377d61",
        "lineno": 643,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 1972,
        "code": "ess = true",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_FlightDelayLedgerInterface_4: 0x80\nreturndatasize: 0x20\nretval_1860: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_FlightDelayLedgerInterface_0: 0x29377d6100000000000000000000000000000000000000000000000000000000\ncalldatasize_FlightDelayLedgerInterface: 0x4\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/47/0x2a37f3c4ce5ee6b1dbcdb593b21eee1c418ad403.sol",
        "function": "_function_0x29377d61",
        "lineno": 646,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2427,
        "code": " _amount) {\n            return false; ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/47/0x2a37f3c4ce5ee6b1dbcdb593b21eee1c418ad403.sol",
        "function": "withdraw(uint256)",
        "lineno": 634,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 2427,
        "code": " _amount) {\n            return false; ",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1630\nCall at address: 1436\nCall at address: 1181\n",
        "filename": "/unique_chucks/47/0x2a37f3c4ce5ee6b1dbcdb593b21eee1c418ad403.sol",
        "function": "withdraw(uint256)",
        "lineno": 634,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 2427,
        "code": " _amount) {\n            return false; ",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function withdraw(uint256). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/47/0x2a37f3c4ce5ee6b1dbcdb593b21eee1c418ad403.sol",
        "function": "withdraw(uint256)",
        "lineno": 634,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 2865,
        "code": "lic {\n        require(FD_AC.checkPermi",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/47/0x2a37f3c4ce5ee6b1dbcdb593b21eee1c418ad403.sol",
        "function": "_function_0x50bed043",
        "lineno": 652,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 2865,
        "code": "lic {\n        require(FD_AC.checkPermi",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1436\nCall at address: 1181\n",
        "filename": "/unique_chucks/47/0x2a37f3c4ce5ee6b1dbcdb593b21eee1c418ad403.sol",
        "function": "_function_0x50bed043",
        "lineno": 652,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 2865,
        "code": "lic {\n        require(FD_AC.checkPermi",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function _function_0x50bed043. The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/47/0x2a37f3c4ce5ee6b1dbcdb593b21eee1c418ad403.sol",
        "function": "_function_0x50bed043",
        "lineno": 652,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 3017,
        "code": "e in FD_DB\n ",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_FlightDelayLedgerInterface_32 + 4: 0x80\nbalance_at_1461501637330902918203684832716283019655932542975 & 0: 0x0\ncalldata_FlightDelayLedgerInterface_32 + 36: 0x0\nreturndatasize: 0x20\nretval_2865: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_FlightDelayLedgerInterface_0: 0x50bed04300000000000000000000000000000000000000000000000000000000\ncalldatasize_FlightDelayLedgerInterface: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/47/0x2a37f3c4ce5ee6b1dbcdb593b21eee1c418ad403.sol",
        "function": "_function_0x50bed043",
        "lineno": 658,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3519,
        "code": "       FD_AC.setPermissionById(103, \"FD.Payout\");\n        FD_AC.",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/47/0x2a37f3c4ce5ee6b1dbcdb593b21eee1c418ad403.sol",
        "function": "setContracts()",
        "lineno": 596,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 6917,
        "code": "public MAX_DEPARTURE_L",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/47/0x2a37f3c4ce5ee6b1dbcdb593b21eee1c418ad403.sol",
        "function": "setContracts()",
        "lineno": 451,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 6917,
        "code": "public MAX_DEPARTURE_L",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 6917\n",
        "filename": "/unique_chucks/47/0x2a37f3c4ce5ee6b1dbcdb593b21eee1c418ad403.sol",
        "function": "setContracts()",
        "lineno": 451,
        "title": "Multiple Calls",
        "type": "Information"
      }
    ],
    "success": true
  }
}