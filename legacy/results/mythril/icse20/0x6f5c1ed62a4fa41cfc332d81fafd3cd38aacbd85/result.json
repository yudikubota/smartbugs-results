{
  "contract": "0x6f5c1ed62a4fa41cfc332d81fafd3cd38aacbd85",
  "tool": "mythril",
  "start": 1563609271.8986742,
  "end": 1563609290.4518216,
  "duration": 18.553147315979004,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 1233,
        "code": ", msg.value);\n        }\n    }\n\n  ",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xb74d60393e470db46819d8ff777be35757fdcfdf80bdfff6f3fed31532d70107\ncallvalue: 0xba59c289be74d8d79278d34ff4c2ca74852167de80854a8481faab933bd5e7f6\nstorage_3: 0xba59c289be74d8d79278d34ff4c2ca74852167de80854a8481faab933bd5e7f6\ncalldata_Vault_0: 0x2100000000000000000000000000000000000000000000000000000000\ncalldatasize_Vault: 0x4\n",
        "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/20/0x6f5c1ed62a4fa41cfc332d81fafd3cd38aacbd85.sol",
        "function": "fallback",
        "lineno": 67,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1575,
        "code": " amount);\n    }\n    \n    function",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/20/0x6f5c1ed62a4fa41cfc332d81fafd3cd38aacbd85.sol",
        "function": "emtpyTo(address,address)",
        "lineno": 26,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 1760,
        "code": "turn inited; }\n}",
        "debug": "SOLVER OUTPUT:\ncalldata_Vault_0: 0x41c0e1b500000000000000000000000000000000000000000000000000000000\ncalldatasize_Vault: 0x4\nbalance_at_1461501637330902918203684832716283019655932542975 & 0: 0x0\ncallvalue: 0x0\n",
        "description": "The function `kill()` executes the SUICIDE instruction. The remaining Ether is sent to a stored address.\n\nIt seems that this function can be called without restrictions.",
        "filename": "/unique_chucks/20/0x6f5c1ed62a4fa41cfc332d81fafd3cd38aacbd85.sol",
        "function": "kill()",
        "lineno": 89,
        "title": "Unchecked SUICIDE",
        "type": "Warning"
      },
      {
        "address": 2206,
        "code": ";\n    }\n    \n    function em",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/20/0x6f5c1ed62a4fa41cfc332d81fafd3cd38aacbd85.sol",
        "function": "withdrawToken(address)",
        "lineno": 30,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 2206,
        "code": ";\n    }\n    \n    function em",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1575\n",
        "filename": "/unique_chucks/20/0x6f5c1ed62a4fa41cfc332d81fafd3cd38aacbd85.sol",
        "function": "withdrawToken(address)",
        "lineno": 30,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 2483,
        "code": "  }\n}\n\n// store ether & toke",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/20/0x6f5c1ed62a4fa41cfc332d81fafd3cd38aacbd85.sol",
        "function": "emtpyTo(address,address)",
        "lineno": 35,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 2483,
        "code": "  }\n}\n\n// store ether & toke",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1575\n",
        "filename": "/unique_chucks/20/0x6f5c1ed62a4fa41cfc332d81fafd3cd38aacbd85.sol",
        "function": "emtpyTo(address,address)",
        "lineno": 35,
        "title": "Multiple Calls",
        "type": "Information"
      }
    ],
    "success": true
  }
}