{"error": null, "issues": [{"address": 304, "code": "(address adr,bytes data)\n    payable\n    public\n    {\n        require(msg.sender == Owner);\n        adr.call.value(msg.value)(data);\n    }\n    \n    function mul", "debug": "calldata_MultiplicatorX3_32 + 4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_MultiplicatorX3_0: 0xba21d62a00000000000000000000000000000000000000000000000000000000\ncalldatasize_MultiplicatorX3: 0x4\n", "description": "A possible integer overflow exists in the function `Command(address,bytes)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/33/0x5aa88d2901c68fda244f1d0584400368d2c8e739.sol", "function": "Command(address,bytes)", "lineno": 17, "title": "Integer Overflow ", "type": "Warning"}, {"address": 987, "code": "lue)(data);\n    }\n    \n    func", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/33/0x5aa88d2901c68fda244f1d0584400368d2c8e739.sol", "function": "Command(address,bytes)", "lineno": 22, "title": "Message call to external contract", "type": "Warning"}, {"address": 987, "code": "lue)(data);\n    }\n    \n    func", "debug": "", "description": "The return value of an external call is not checked. Note that execution continue even if the called contract throws.", "filename": "/unique_chucks/33/0x5aa88d2901c68fda244f1d0584400368d2c8e739.sol", "function": "Command(address,bytes)", "lineno": 22, "title": "Unchecked CALL return value", "type": "Informational"}], "success": true}