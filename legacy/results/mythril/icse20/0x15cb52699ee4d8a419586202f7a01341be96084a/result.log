{"error": null, "issues": [{"address": 2017, "code": "ion add(uint256 ", "debug": "The exception is triggered under the following conditions:\n\ntimestamp: 0x0\nstorage_1: 0x1\nstorage_0: 0x0\ncaller: 0x0\ncalldata_WhitelistDaonomicCrowdsale_0: 0x86d1a69f00000000000000000000000000000000000000000000000000000000\ncalldatasize_WhitelistDaonomicCrowdsale: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/19/0x15cb52699ee4d8a419586202f7a01341be96084a.sol", "function": "release()", "lineno": 116, "title": "Exception state", "type": "Informational"}, {"address": 2319, "code": " than m", "debug": "The exception is triggered under the following conditions:\n\ntimestamp: 0x0\nstorage_1: 0x0\nstorage_0: 0x0\ncaller: 0x0\ncalldata_WhitelistDaonomicCrowdsale_0: 0x86d1a69f00000000000000000000000000000000000000000000000000000000\ncalldatasize_WhitelistDaonomicCrowdsale: 0x4\nstorage_2: 0x0\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/19/0x15cb52699ee4d8a419586202f7a01341be96084a.sol", "function": "release()", "lineno": 106, "title": "Exception state", "type": "Informational"}], "success": true}