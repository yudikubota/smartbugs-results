{"error": null, "issues": [{"address": 1204, "code": "b;\n  ", "debug": "storage_7: 0x940321b3bd2baed4cf9442316f2ffeef9dfdff79ed7f5eff7327d67fff7ffcdb\ncallvalue: 0xe76125a833abeb18af8a2b3c206f80cc09edf0302e387cfffbc7df493e7fd983\ncalldata_TangentStake_0: 0xb00000000000000000000000000000000000000000000000000000000\ncalldatasize_TangentStake: 0x4\nstorage_2: 0x0\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/21/0x5db4b520284049d7dcb21c6317664190791bb8e5.sol", "function": "fallback", "lineno": 5, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2882, "code": "       lpurchase", "debug": "The exception is triggered under the following conditions:\n\ncalldata_TangentStake_4: 0x0\nstorage_2: 0x0\ncalldata_TangentStake_0: 0xdf7225eb00000000000000000000000000000000000000000000000000000000\ncalldatasize_TangentStake: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/21/0x5db4b520284049d7dcb21c6317664190791bb8e5.sol", "function": "getEarnings(uint256)", "lineno": 210, "title": "Exception state", "type": "Informational"}], "success": true}