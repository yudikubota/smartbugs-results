{"error": null, "issues": [{"address": 1542, "code": "irmations(uint transactionId)\n        public\n        constant\n        returns (address[] _confirmations)\n    {\n        ad", "debug": "storage_3: 0x800000000000000000000000000000000000000000000000000000000000000\ncalldata_MultiSigWalletWithDailyLimit_0: 0xa0e67e2b00000000000000000000000000000000000000000000000000000000\ncalldatasize_MultiSigWalletWithDailyLimit: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `getOwners()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/19/0x2355071753c957036707558e6ba56a72b5c70411.sol", "function": "getOwners()", "lineno": 322, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2521, "code": "rs;\n    uint public req", "debug": "The exception is triggered under the following conditions:\n\ncalldata_MultiSigWalletWithDailyLimit_4: 0x0\nstorage_3: 0x0\ncalldata_MultiSigWalletWithDailyLimit_0: 0x25e7c2700000000000000000000000000000000000000000000000000000000\ncalldatasize_MultiSigWalletWithDailyLimit: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/19/0x2355071753c957036707558e6ba56a72b5c70411.sol", "function": "_function_0x025e7c27", "lineno": 22, "title": "Exception state", "type": "Informational"}, {"address": 2820, "code": ";\n            }\n ", "debug": "storage_3: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_MultiSigWalletWithDailyLimit_4: 0xff00\ncaller: 0x0\ncalldata_MultiSigWalletWithDailyLimit_0: 0x173825d900000000000000000000000000000000000000000000000000000000\ncalldatasize_MultiSigWalletWithDailyLimit: 0x4\ncallvalue: 0x0\n", "description": "A possible integer underflow exists in the function `removeOwner(address)`.\nThe subtraction may result in a value < 0.", "filename": "/unique_chucks/19/0x2355071753c957036707558e6ba56a72b5c70411.sol", "function": "removeOwner(address)", "lineno": 142, "title": "Integer Underflow", "type": "Warning"}, {"address": 2864, "code": "1;\n      ", "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_MultiSigWalletWithDailyLimit_4: 0xff00\ncaller: 0x0\ncalldata_MultiSigWalletWithDailyLimit_0: 0x173825d900000000000000000000000000000000000000000000000000000000\ncalldatasize_MultiSigWalletWithDailyLimit: 0x4\nstorage_3: 0x0\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/19/0x2355071753c957036707558e6ba56a72b5c70411.sol", "function": "removeOwner(address)", "lineno": 144, "title": "Exception state", "type": "Informational"}, {"address": 3745, "debug": "storage_7: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffef00\ncalldata_MultiSigWalletWithDailyLimit_0: 0x4bc9fdc200000000000000000000000000000000000000000000000000000000\ncalldatasize_MultiSigWalletWithDailyLimit: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `calcMaxWithdraw()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/19/0x2355071753c957036707558e6ba56a72b5c70411.sol", "function": "calcMaxWithdraw()", "lineno": 459, "title": "Integer Overflow ", "type": "Warning"}, {"address": 4146, "code": "\n    }\n\n    /// @", "debug": "storage_3: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_MultiSigWalletWithDailyLimit_4: 0xffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_MultiSigWalletWithDailyLimit_4: 0x0\ncaller: 0x0\ncalldata_MultiSigWalletWithDailyLimit_0: 0x7065cb4800000000000000000000000000000000000000000000000000000000\ncalldatasize_MultiSigWalletWithDailyLimit: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `addOwner(address)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/19/0x2355071753c957036707558e6ba56a72b5c70411.sol", "function": "addOwner(address)", "lineno": 128, "title": "Integer Overflow ", "type": "Warning"}, {"address": 5180, "code": "ons)\n    {\n  ", "debug": "storage_3: 0x8421003f084001f4210815cf88407c00000000000000037c1d000e8d178001f\ncalldata_MultiSigWalletWithDailyLimit_0: 0xa0e67e2b00000000000000000000000000000000000000000000000000000000\ncalldatasize_MultiSigWalletWithDailyLimit: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `getOwners()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/19/0x2355071753c957036707558e6ba56a72b5c70411.sol", "function": "getOwners()", "lineno": 325, "title": "Integer Overflow ", "type": "Warning"}, {"address": 5182, "code": "ons)\n    {\n  ", "debug": "storage_3: 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffb\ncalldata_MultiSigWalletWithDailyLimit_0: 0xa0e67e2b00000000000000000000000000000000000000000000000000000000\ncalldatasize_MultiSigWalletWithDailyLimit: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `getOwners()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/19/0x2355071753c957036707558e6ba56a72b5c70411.sol", "function": "getOwners()", "lineno": 325, "title": "Integer Overflow ", "type": "Warning"}, {"address": 5508, "code": "LimitChan", "debug": "calldata_MultiSigWalletWithDailyLimit_32 + 4: 0x0\ncalldata_MultiSigWalletWithDailyLimit_4: 0x1\ncalldata_MultiSigWalletWithDailyLimit_0: 0xa8abe69a00000000000000000000000000000000000000000000000000000000\ncalldatasize_MultiSigWalletWithDailyLimit: 0x4\nstorage_5: 0x0\ncallvalue: 0x0\n", "description": "A possible integer underflow exists in the function `getTransactionIds(uint256,uint256,bool,bool)`.\nThe subtraction may result in a value < 0.", "filename": "/unique_chucks/19/0x2355071753c957036707558e6ba56a72b5c70411.sol", "function": "getTransactionIds(uint256,uint256,bool,bool)", "lineno": 371, "title": "Integer Underflow", "type": "Warning"}, {"address": 8834, "code": "of initial owners.\n    /// @param _required Number of required confirmations.\n    /// @param _dailyLimit Amount in wei, which can be withdrawn without confirmations on a daily basis.\n    function MultiSigWalletWithDailyLimit(address[] _owners, uint _required, uint _dailyLimit)\n        public\n        MultiSigWallet(_owners, _required)\n    {\n        dailyLimit = _dailyLimit;\n    }\n\n    /// @dev Allows to change the daily limit. Transaction has to be sent by wallet.\n    /// @param _dailyLimit Amount in wei.\n    function changeDailyLimit(uint _dailyLimit)\n        public\n        onlyWallet\n    {\n        dailyLimit = _dailyLimit;\n        DailyLimitChange(_dailyLimit);\n    }\n\n    /// @dev Allows anyone to execute a confirmed transaction or ether withdraws until daily limit is reached.\n    /// @param transactionId Transaction ID.\n    function executeTransaction(uint transactionId)\n        public\n        notExecuted(transactionId)\n    {\n        Transaction tx = transactions[transactionId];\n        bool confirmed = isConfirmed(transactionId);\n        if (confirmed || tx.data.length == 0 && isUnderLimit(tx.value)) {\n            tx.executed = true;\n            if (!confirmed)\n                spentToday += tx.value;\n            if (tx.destination.call.value(tx.value)(tx.data))\n                Execution(transactionId);\n            else {\n                ExecutionFailure(transactionId);\n                tx.executed = false;\n                if (!confirmed)\n                    spentToday -= tx.value;\n            }\n        }\n    }\n\n    /*\n     * Internal functions\n     */\n    /// @dev Returns if amount is within daily limit and resets spentToday after one day.\n    /// @param amount Amount to withdraw.\n    /// @return Returns if amount is under daily limit.\n    function isUnderLimit(uint amount)\n        internal\n        returns (bool)\n    {\n        if (now > lastDay + 24 hours) {\n            lastDay = now;\n            spentToday = 0;\n        }\n        if (spentToday + amount > dailyLimit || spentToday + amount < spentToday)\n            return false;\n        return true;\n    }\n\n    /*\n     * Web3 call functions\n     */\n    /// @dev Returns maximum withdraw amount.\n    /// @return Returns amount.\n    function calcMaxWithdraw()\n        public\n        constant\n        returns (uint)\n    {\n        if (now > lastDay + 24 hours)\n            return dailyLimit;\n        if (dailyLimit < spentToday)\n            return 0;\n        return dailyLimit - spentToday;\n    }\n}", "debug": "storage_3: 0x7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe2000\ncalldata_MultiSigWalletWithDailyLimit_4: 0x0\nstorage_87903029871075914254377627908054574944891091886930582284385770809450030037083: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_MultiSigWalletWithDailyLimit_4: 0xff00\ncaller: 0x0\ncalldata_MultiSigWalletWithDailyLimit_0: 0x173825d900000000000000000000000000000000000000000000000000000000\ncalldatasize_MultiSigWalletWithDailyLimit: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `removeOwner(address)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/19/0x2355071753c957036707558e6ba56a72b5c70411.sol", "function": "removeOwner(address)", "lineno": 381, "title": "Integer Overflow ", "type": "Warning"}, {"address": 8836, "code": "of initial owners.\n    /// @param _required Number of required confirmations.\n    /// @param _dailyLimit Amount in wei, which can be withdrawn without confirmations on a daily basis.\n    function MultiSigWalletWithDailyLimit(address[] _owners, uint _required, uint _dailyLimit)\n        public\n        MultiSigWallet(_owners, _required)\n    {\n        dailyLimit = _dailyLimit;\n    }\n\n    /// @dev Allows to change the daily limit. Transaction has to be sent by wallet.\n    /// @param _dailyLimit Amount in wei.\n    function changeDailyLimit(uint _dailyLimit)\n        public\n        onlyWallet\n    {\n        dailyLimit = _dailyLimit;\n        DailyLimitChange(_dailyLimit);\n    }\n\n    /// @dev Allows anyone to execute a confirmed transaction or ether withdraws until daily limit is reached.\n    /// @param transactionId Transaction ID.\n    function executeTransaction(uint transactionId)\n        public\n        notExecuted(transactionId)\n    {\n        Transaction tx = transactions[transactionId];\n        bool confirmed = isConfirmed(transactionId);\n        if (confirmed || tx.data.length == 0 && isUnderLimit(tx.value)) {\n            tx.executed = true;\n            if (!confirmed)\n                spentToday += tx.value;\n            if (tx.destination.call.value(tx.value)(tx.data))\n                Execution(transactionId);\n            else {\n                ExecutionFailure(transactionId);\n                tx.executed = false;\n                if (!confirmed)\n                    spentToday -= tx.value;\n            }\n        }\n    }\n\n    /*\n     * Internal functions\n     */\n    /// @dev Returns if amount is within daily limit and resets spentToday after one day.\n    /// @param amount Amount to withdraw.\n    /// @return Returns if amount is under daily limit.\n    function isUnderLimit(uint amount)\n        internal\n        returns (bool)\n    {\n        if (now > lastDay + 24 hours) {\n            lastDay = now;\n            spentToday = 0;\n        }\n        if (spentToday + amount > dailyLimit || spentToday + amount < spentToday)\n            return false;\n        return true;\n    }\n\n    /*\n     * Web3 call functions\n     */\n    /// @dev Returns maximum withdraw amount.\n    /// @return Returns amount.\n    function calcMaxWithdraw()\n        public\n        constant\n        returns (uint)\n    {\n        if (now > lastDay + 24 hours)\n            return dailyLimit;\n        if (dailyLimit < spentToday)\n            return 0;\n        return dailyLimit - spentToday;\n    }\n}", "debug": "storage_3: 0x7ffff9f100000000000000000000000000000000000000000000000000000000\ncalldata_MultiSigWalletWithDailyLimit_4: 0x0\nstorage_87903029871075914254377627908054574944891091886930582284385770809450030037083: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_MultiSigWalletWithDailyLimit_4: 0xff00\ncaller: 0x0\ncalldata_MultiSigWalletWithDailyLimit_0: 0x173825d900000000000000000000000000000000000000000000000000000000\ncalldatasize_MultiSigWalletWithDailyLimit: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `removeOwner(address)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/19/0x2355071753c957036707558e6ba56a72b5c70411.sol", "function": "removeOwner(address)", "lineno": 381, "title": "Integer Overflow ", "type": "Warning"}], "success": true}