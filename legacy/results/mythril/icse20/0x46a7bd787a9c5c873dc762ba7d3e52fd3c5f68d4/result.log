{"error": null, "issues": [{"address": 852, "code": "f (lockNum[_from] > 0) calcUnlock(_from);\n        uint256 i = 0;\n        uint256 totalValue = 0;\n        while (i < _value.length) {\n            totalValue = add(totalValue, _value[i]);\n            i++;\n        }\n        if (balanceP[_from] >= totalValue && totalValue > 0 && allowance[_from][msg.sender] >= totalValue) {\n            i = 0;\n            while (i < _time.length) {\n                balanceP[_from] = sub(balanceP[_from], _value[i]);\n                allowance[_from][msg.sender] = sub(allowance[_from][msg.sender], _value[i]);\n                lockTime[_to].length = lockNum[_to]+1;\n                lockValue[_to].length = lockNum[_to]+1;\n                lockTime[_to][lockNum[_to]] = add(now, _time[i]);\n                lockValue[_to][lockNum[_to]] = _value[i];\n\n                // emit custom TransferLocked event\n                emit TransferLocked(_from, _to, lockTime[_to][lockNum[_to]], lockValue[_to][lockNum[_to]]);\n\n                // emit standard Transfer event for wallets\n                emit Transfer(_from, _to, lockValue[_to][lockNum[_to]]);\n                lockNum[_to]++;\n                i++;\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n\n    // standard ERC20 transferFrom\n    function transferFrom(address _from, address _to, uint256 _value) public validAddress(_from) validAddress(_to) returns (bool success) {\n        if (lockNum[_from] > 0) calcUnlock(_from);\n        if (balanceP[_from] >= _value && _value > 0 && allowance[_fr", "debug": "calldata_Token_32 + 36: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_Token_0: 0xfce887b00000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `transferLockedFrom(address,address,uint256[],uint256[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x46a7bd787a9c5c873dc762ba7d3e52fd3c5f68d4.sol", "function": "transferLockedFrom(address,address,uint256[],uint256[])", "lineno": 267, "title": "Integer Overflow ", "type": "Warning"}, {"address": 864, "code": "f (lockNum[_from] > 0) calcUnlock(_from);\n        uint256 i = 0;\n        uint256 totalValue = 0;\n        while (i < _value.length) {\n            totalValue = add(totalValue, _value[i]);\n            i++;\n        }\n        if (balanceP[_from] >= totalValue && totalValue > 0 && allowance[_from][msg.sender] >= totalValue) {\n            i = 0;\n            while (i < _time.length) {\n                balanceP[_from] = sub(balanceP[_from], _value[i]);\n                allowance[_from][msg.sender] = sub(allowance[_from][msg.sender], _value[i]);\n                lockTime[_to].length = lockNum[_to]+1;\n                lockValue[_to].length = lockNum[_to]+1;\n                lockTime[_to][lockNum[_to]] = add(now, _time[i]);\n                lockValue[_to][lockNum[_to]] = _value[i];\n\n                // emit custom TransferLocked event\n                emit TransferLocked(_from, _to, lockTime[_to][lockNum[_to]], lockValue[_to][lockNum[_to]]);\n\n                // emit standard Transfer event for wallets\n                emit Transfer(_from, _to, lockValue[_to][lockNum[_to]]);\n                lockNum[_to]++;\n                i++;\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n\n    // standard ERC20 transferFrom\n    function transferFrom(address _from, address _to, uint256 _value) public validAddress(_from) validAddress(_to) returns (bool success) {\n        if (lockNum[_from] > 0) calcUnlock(_from);\n        if (balanceP[_from] >= _value && _value > 0 && allowance[_fr", "debug": "calldata_Token_4 + calldata_Token_32 + 36: 0x800000000000000000000000000000000000000000000000000000000000000\ncalldata_Token_0: 0xfce887b00000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `transferLockedFrom(address,address,uint256[],uint256[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x46a7bd787a9c5c873dc762ba7d3e52fd3c5f68d4.sol", "function": "transferLockedFrom(address,address,uint256[],uint256[])", "lineno": 267, "title": "Integer Overflow ", "type": "Warning"}, {"address": 867, "code": "f (lockNum[_from] > 0) calcUnlock(_from);\n        uint256 i = 0;\n        uint256 totalValue = 0;\n        while (i < _value.length) {\n            totalValue = add(totalValue, _value[i]);\n            i++;\n        }\n        if (balanceP[_from] >= totalValue && totalValue > 0 && allowance[_from][msg.sender] >= totalValue) {\n            i = 0;\n            while (i < _time.length) {\n                balanceP[_from] = sub(balanceP[_from], _value[i]);\n                allowance[_from][msg.sender] = sub(allowance[_from][msg.sender], _value[i]);\n                lockTime[_to].length = lockNum[_to]+1;\n                lockValue[_to].length = lockNum[_to]+1;\n                lockTime[_to][lockNum[_to]] = add(now, _time[i]);\n                lockValue[_to][lockNum[_to]] = _value[i];\n\n                // emit custom TransferLocked event\n                emit TransferLocked(_from, _to, lockTime[_to][lockNum[_to]], lockValue[_to][lockNum[_to]]);\n\n                // emit standard Transfer event for wallets\n                emit Transfer(_from, _to, lockValue[_to][lockNum[_to]]);\n                lockNum[_to]++;\n                i++;\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n\n    // standard ERC20 transferFrom\n    function transferFrom(address _from, address _to, uint256 _value) public validAddress(_from) validAddress(_to) returns (bool success) {\n        if (lockNum[_from] > 0) calcUnlock(_from);\n        if (balanceP[_from] >= _value && _value > 0 && allowance[_fr", "debug": "calldata_Token_4 + calldata_Token_32 + 36: 0x7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_Token_0: 0xfce887b00000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `transferLockedFrom(address,address,uint256[],uint256[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x46a7bd787a9c5c873dc762ba7d3e52fd3c5f68d4.sol", "function": "transferLockedFrom(address,address,uint256[],uint256[])", "lineno": 267, "title": "Integer Overflow ", "type": "Warning"}, {"address": 873, "code": "f (lockNum[_from] > 0) calcUnlock(_from);\n        uint256 i = 0;\n        uint256 totalValue = 0;\n        while (i < _value.length) {\n            totalValue = add(totalValue, _value[i]);\n            i++;\n        }\n        if (balanceP[_from] >= totalValue && totalValue > 0 && allowance[_from][msg.sender] >= totalValue) {\n            i = 0;\n            while (i < _time.length) {\n                balanceP[_from] = sub(balanceP[_from], _value[i]);\n                allowance[_from][msg.sender] = sub(allowance[_from][msg.sender], _value[i]);\n                lockTime[_to].length = lockNum[_to]+1;\n                lockValue[_to].length = lockNum[_to]+1;\n                lockTime[_to][lockNum[_to]] = add(now, _time[i]);\n                lockValue[_to][lockNum[_to]] = _value[i];\n\n                // emit custom TransferLocked event\n                emit TransferLocked(_from, _to, lockTime[_to][lockNum[_to]], lockValue[_to][lockNum[_to]]);\n\n                // emit standard Transfer event for wallets\n                emit Transfer(_from, _to, lockValue[_to][lockNum[_to]]);\n                lockNum[_to]++;\n                i++;\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n\n    // standard ERC20 transferFrom\n    function transferFrom(address _from, address _to, uint256 _value) public validAddress(_from) validAddress(_to) returns (bool success) {\n        if (lockNum[_from] > 0) calcUnlock(_from);\n        if (balanceP[_from] >= _value && _value > 0 && allowance[_fr", "debug": "calldata_Token_4 + calldata_Token_32 + 36: 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffb\ncalldata_Token_0: 0xfce887b00000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `transferLockedFrom(address,address,uint256[],uint256[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x46a7bd787a9c5c873dc762ba7d3e52fd3c5f68d4.sol", "function": "transferLockedFrom(address,address,uint256[],uint256[])", "lineno": 267, "title": "Integer Overflow ", "type": "Warning"}, {"address": 919, "code": "f (lockNum[_from] > 0) calcUnlock(_from);\n        uint256 i = 0;\n        uint256 totalValue = 0;\n        while (i < _value.length) {\n            totalValue = add(totalValue, _value[i]);\n            i++;\n        }\n        if (balanceP[_from] >= totalValue && totalValue > 0 && allowance[_from][msg.sender] >= totalValue) {\n            i = 0;\n            while (i < _time.length) {\n                balanceP[_from] = sub(balanceP[_from], _value[i]);\n                allowance[_from][msg.sender] = sub(allowance[_from][msg.sender], _value[i]);\n                lockTime[_to].length = lockNum[_to]+1;\n                lockValue[_to].length = lockNum[_to]+1;\n                lockTime[_to][lockNum[_to]] = add(now, _time[i]);\n                lockValue[_to][lockNum[_to]] = _value[i];\n\n                // emit custom TransferLocked event\n                emit TransferLocked(_from, _to, lockTime[_to][lockNum[_to]], lockValue[_to][lockNum[_to]]);\n\n                // emit standard Transfer event for wallets\n                emit Transfer(_from, _to, lockValue[_to][lockNum[_to]]);\n                lockNum[_to]++;\n                i++;\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n\n    // standard ERC20 transferFrom\n    function transferFrom(address _from, address _to, uint256 _value) public validAddress(_from) validAddress(_to) returns (bool success) {\n        if (lockNum[_from] > 0) calcUnlock(_from);\n        if (balanceP[_from] >= _value && _value > 0 && allowance[_fr", "debug": "calldata_Token_32 + 68: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_Token_0: 0xfce887b00000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `transferLockedFrom(address,address,uint256[],uint256[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x46a7bd787a9c5c873dc762ba7d3e52fd3c5f68d4.sol", "function": "transferLockedFrom(address,address,uint256[],uint256[])", "lineno": 267, "title": "Integer Overflow ", "type": "Warning"}, {"address": 931, "code": "f (lockNum[_from] > 0) calcUnlock(_from);\n        uint256 i = 0;\n        uint256 totalValue = 0;\n        while (i < _value.length) {\n            totalValue = add(totalValue, _value[i]);\n            i++;\n        }\n        if (balanceP[_from] >= totalValue && totalValue > 0 && allowance[_from][msg.sender] >= totalValue) {\n            i = 0;\n            while (i < _time.length) {\n                balanceP[_from] = sub(balanceP[_from], _value[i]);\n                allowance[_from][msg.sender] = sub(allowance[_from][msg.sender], _value[i]);\n                lockTime[_to].length = lockNum[_to]+1;\n                lockValue[_to].length = lockNum[_to]+1;\n                lockTime[_to][lockNum[_to]] = add(now, _time[i]);\n                lockValue[_to][lockNum[_to]] = _value[i];\n\n                // emit custom TransferLocked event\n                emit TransferLocked(_from, _to, lockTime[_to][lockNum[_to]], lockValue[_to][lockNum[_to]]);\n\n                // emit standard Transfer event for wallets\n                emit Transfer(_from, _to, lockValue[_to][lockNum[_to]]);\n                lockNum[_to]++;\n                i++;\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n\n    // standard ERC20 transferFrom\n    function transferFrom(address _from, address _to, uint256 _value) public validAddress(_from) validAddress(_to) returns (bool success) {\n        if (lockNum[_from] > 0) calcUnlock(_from);\n        if (balanceP[_from] >= _value && _value > 0 && allowance[_fr", "debug": "calldata_Token_4 + calldata_Token_32 + 68: 0x800000000000000000000000000000000000000000000000000000000000000\ncalldata_Token_0: 0xfce887b00000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `transferLockedFrom(address,address,uint256[],uint256[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x46a7bd787a9c5c873dc762ba7d3e52fd3c5f68d4.sol", "function": "transferLockedFrom(address,address,uint256[],uint256[])", "lineno": 267, "title": "Integer Overflow ", "type": "Warning"}, {"address": 934, "code": "f (lockNum[_from] > 0) calcUnlock(_from);\n        uint256 i = 0;\n        uint256 totalValue = 0;\n        while (i < _value.length) {\n            totalValue = add(totalValue, _value[i]);\n            i++;\n        }\n        if (balanceP[_from] >= totalValue && totalValue > 0 && allowance[_from][msg.sender] >= totalValue) {\n            i = 0;\n            while (i < _time.length) {\n                balanceP[_from] = sub(balanceP[_from], _value[i]);\n                allowance[_from][msg.sender] = sub(allowance[_from][msg.sender], _value[i]);\n                lockTime[_to].length = lockNum[_to]+1;\n                lockValue[_to].length = lockNum[_to]+1;\n                lockTime[_to][lockNum[_to]] = add(now, _time[i]);\n                lockValue[_to][lockNum[_to]] = _value[i];\n\n                // emit custom TransferLocked event\n                emit TransferLocked(_from, _to, lockTime[_to][lockNum[_to]], lockValue[_to][lockNum[_to]]);\n\n                // emit standard Transfer event for wallets\n                emit Transfer(_from, _to, lockValue[_to][lockNum[_to]]);\n                lockNum[_to]++;\n                i++;\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n\n    // standard ERC20 transferFrom\n    function transferFrom(address _from, address _to, uint256 _value) public validAddress(_from) validAddress(_to) returns (bool success) {\n        if (lockNum[_from] > 0) calcUnlock(_from);\n        if (balanceP[_from] >= _value && _value > 0 && allowance[_fr", "debug": "calldata_Token_4 + calldata_Token_32 + 68: 0x7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_Token_0: 0xfce887b00000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `transferLockedFrom(address,address,uint256[],uint256[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x46a7bd787a9c5c873dc762ba7d3e52fd3c5f68d4.sol", "function": "transferLockedFrom(address,address,uint256[],uint256[])", "lineno": 267, "title": "Integer Overflow ", "type": "Warning"}, {"address": 940, "code": "f (lockNum[_from] > 0) calcUnlock(_from);\n        uint256 i = 0;\n        uint256 totalValue = 0;\n        while (i < _value.length) {\n            totalValue = add(totalValue, _value[i]);\n            i++;\n        }\n        if (balanceP[_from] >= totalValue && totalValue > 0 && allowance[_from][msg.sender] >= totalValue) {\n            i = 0;\n            while (i < _time.length) {\n                balanceP[_from] = sub(balanceP[_from], _value[i]);\n                allowance[_from][msg.sender] = sub(allowance[_from][msg.sender], _value[i]);\n                lockTime[_to].length = lockNum[_to]+1;\n                lockValue[_to].length = lockNum[_to]+1;\n                lockTime[_to][lockNum[_to]] = add(now, _time[i]);\n                lockValue[_to][lockNum[_to]] = _value[i];\n\n                // emit custom TransferLocked event\n                emit TransferLocked(_from, _to, lockTime[_to][lockNum[_to]], lockValue[_to][lockNum[_to]]);\n\n                // emit standard Transfer event for wallets\n                emit Transfer(_from, _to, lockValue[_to][lockNum[_to]]);\n                lockNum[_to]++;\n                i++;\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n\n    // standard ERC20 transferFrom\n    function transferFrom(address _from, address _to, uint256 _value) public validAddress(_from) validAddress(_to) returns (bool success) {\n        if (lockNum[_from] > 0) calcUnlock(_from);\n        if (balanceP[_from] >= _value && _value > 0 && allowance[_fr", "debug": "calldata_Token_4 + calldata_Token_32 + 36: 0x67cfc752d384fdac7c76a8166cd8454d89836fffffffffffffffffffffffffc\ncalldata_Token_4 + calldata_Token_32 + 68: 0x3a37216edf01e4bff3729856012c233625106ffffffffffffffffffffffffff\ncalldata_Token_0: 0xfce887b00000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `transferLockedFrom(address,address,uint256[],uint256[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x46a7bd787a9c5c873dc762ba7d3e52fd3c5f68d4.sol", "function": "transferLockedFrom(address,address,uint256[],uint256[])", "lineno": 267, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1110, "code": "the timelock states of an account\n    function calcUnlock(address _address) private {\n        uint256 i = 0;\n        uint256 j = 0;\n        uint", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_Token_4: 0x800000000000000000000000000000000000000000000000000000000000000\ncalldata_Token_4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_Token_0: 0x10e24db500000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `showValue(address)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x46a7bd787a9c5c873dc762ba7d3e52fd3c5f68d4.sol", "function": "showValue(address)", "lineno": 178, "title": "Integer Overflow ", "type": "Warning"}, {"address": 7288, "code": "       uint256 j = 0;\n    ", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_Token_4: 0x8421003f084001f4210815cf88407c00000000000000037c1d000e8d178001f\ncalldata_Token_4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_Token_0: 0x10e24db500000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `showValue(address)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x46a7bd787a9c5c873dc762ba7d3e52fd3c5f68d4.sol", "function": "showValue(address)", "lineno": 181, "title": "Integer Overflow ", "type": "Warning"}, {"address": 7290, "code": "       uint256 j = 0;\n    ", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_Token_4: 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffb\ncalldata_Token_4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_Token_0: 0x10e24db500000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `showValue(address)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x46a7bd787a9c5c873dc762ba7d3e52fd3c5f68d4.sol", "function": "showValue(address)", "lineno": 181, "title": "Integer Overflow ", "type": "Warning"}, {"address": 8640, "code": "uint256) public lockNum;\n    mapping (address =", "debug": "The exception is triggered under the following conditions:\n\ncalldata_Token_32 + 4: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\ncalldata_Token_4: 0x0\ncalldata_Token_0: 0x32308cce00000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_contracts/0x46a7bd787a9c5c873dc762ba7d3e52fd3c5f68d4.sol", "function": "_function_0x32308cce", "lineno": 75, "title": "Exception state", "type": "Informational"}, {"address": 8688, "code": "uint256[]) public lockValue;\n    mapping (addr", "debug": "The exception is triggered under the following conditions:\n\ncalldata_Token_32 + 4: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\ncalldata_Token_4: 0x0\ncalldata_Token_0: 0x34af370f00000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_contracts/0x46a7bd787a9c5c873dc762ba7d3e52fd3c5f68d4.sol", "function": "_function_0x34af370f", "lineno": 74, "title": "Exception state", "type": "Informational"}, {"address": 15414, "code": "     re", "debug": "storage_11: 0x57f25cd000000000000000000000000000000000000000000000000000000000\nstorage_keccac_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_Token_4 +\n0: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_Token_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_Token_0: 0x451f52000000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `balanceUnlocked(address)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x46a7bd787a9c5c873dc762ba7d3e52fd3c5f68d4.sol", "function": "balanceUnlocked(address)", "lineno": 40, "title": "Integer Overflow ", "type": "Warning"}, {"address": 15427, "code": " }\n\n    functio", "debug": "The exception is triggered under the following conditions:\n\nmem_128 + 32 + 32*calldata_Token_4 + calldata_Token_32 + 36: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nmem_0 + 192 + 32*calldata_Token_4 + calldata_Token_32 + 36: 0x1\nmem_32 + 192 + 32*calldata_Token_4 + calldata_Token_32 + 36: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xff00\ncalldata_Token_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_Token_4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_Token_0: 0xfce887b00000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_Token_4: 0x0\ncalldata_Token_4 + calldata_Token_32 + 36: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_contracts/0x46a7bd787a9c5c873dc762ba7d3e52fd3c5f68d4.sol", "function": "transferLockedFrom(address,address,uint256[],uint256[])", "lineno": 41, "title": "Exception state", "type": "Informational"}, {"address": 15533, "code": "ckValue[_address];\n        while", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_Token_4: 0x8421003f084001f4210815cf88407c00000000000000037c1d000e8d178001f\ncalldata_Token_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_Token_4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_Token_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `transferFrom(address,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x46a7bd787a9c5c873dc762ba7d3e52fd3c5f68d4.sol", "function": "transferFrom(address,address,uint256)", "lineno": 187, "title": "Integer Overflow ", "type": "Warning"}, {"address": 15536, "code": "ckValue[_address];\n        while", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_Token_4: 0x7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_Token_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_Token_4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_Token_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `transferFrom(address,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x46a7bd787a9c5c873dc762ba7d3e52fd3c5f68d4.sol", "function": "transferFrom(address,address,uint256)", "lineno": 187, "title": "Integer Overflow ", "type": "Warning"}, {"address": 15538, "code": "ckValue[_address];\n        while", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_Token_4: 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffb\ncalldata_Token_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_Token_4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_Token_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `transferFrom(address,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x46a7bd787a9c5c873dc762ba7d3e52fd3c5f68d4.sol", "function": "transferFrom(address,address,uint256)", "lineno": 187, "title": "Integer Overflow ", "type": "Warning"}, {"address": 15646, "code": "add(now, earlier) > add(currentL", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_Token_4: 0x8421003f084001f4210815cf88407c00000000000000037c1d000e8d178001f\ncalldata_Token_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_Token_4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_Token_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `transferFrom(address,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x46a7bd787a9c5c873dc762ba7d3e52fd3c5f68d4.sol", "function": "transferFrom(address,address,uint256)", "lineno": 189, "title": "Integer Overflow ", "type": "Warning"}, {"address": 15649, "code": "add(now, earlier) > add(currentL", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_Token_4: 0x7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_Token_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_Token_4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_Token_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `transferFrom(address,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x46a7bd787a9c5c873dc762ba7d3e52fd3c5f68d4.sol", "function": "transferFrom(address,address,uint256)", "lineno": 189, "title": "Integer Overflow ", "type": "Warning"}, {"address": 15651, "code": "add(now, earlier) > add(currentL", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_Token_4: 0x504a82203201925514000027fffffffffffffffffffffffffffffffffffffff\ncalldata_Token_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_Token_4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_Token_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `transferFrom(address,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x46a7bd787a9c5c873dc762ba7d3e52fd3c5f68d4.sol", "function": "transferFrom(address,address,uint256)", "lineno": 189, "title": "Integer Overflow ", "type": "Warning"}, {"address": 15753, "code": " later)) {\n                balanceP[", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_Token_4: 0x8421003f084001f4210815cf88407c00000000000000037c1d000e8d178001f\ncalldata_Token_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_Token_4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_Token_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `transferFrom(address,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x46a7bd787a9c5c873dc762ba7d3e52fd3c5f68d4.sol", "function": "transferFrom(address,address,uint256)", "lineno": 189, "title": "Integer Overflow ", "type": "Warning"}, {"address": 15756, "code": " later)) {\n                balanceP[", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_Token_4: 0x7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_Token_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_Token_4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_Token_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `transferFrom(address,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x46a7bd787a9c5c873dc762ba7d3e52fd3c5f68d4.sol", "function": "transferFrom(address,address,uint256)", "lineno": 189, "title": "Integer Overflow ", "type": "Warning"}, {"address": 15762, "code": " later)) {\n                balanceP[", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_Token_4: 0x2fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncalldata_Token_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_Token_4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_Token_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `transferFrom(address,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x46a7bd787a9c5c873dc762ba7d3e52fd3c5f68d4.sol", "function": "transferFrom(address,address,uint256)", "lineno": 189, "title": "Integer Overflow ", "type": "Warning"}, {"address": 15775, "code": " later)) {\n                balanceP[", "debug": "calldata_Token_4 + calldata_Token_32 + 36: 0x3e73c26bffffffffffffffffffffffffffffffffffffffffffffffffffffff7\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_Token_4: 0x20ad1ac00000000000000000000000000000000000000000000000000000000\ncalldata_Token_4 + calldata_Token_32 + 68: 0x3208140000000000000000000000000000000000000000000000000000000\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xff00\ncalldata_Token_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_Token_4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_Token_0: 0xfce887b00000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\nmem_128 + 32 + 32*calldata_Token_4 + calldata_Token_32 + 36: 0x3e73c26bffffffffffffffffffffffffffffffffffffffffffffffffffffff7\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `transferLockedFrom(address,address,uint256[],uint256[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x46a7bd787a9c5c873dc762ba7d3e52fd3c5f68d4.sol", "function": "transferLockedFrom(address,address,uint256[],uint256[])", "lineno": 189, "title": "Integer Overflow ", "type": "Warning"}, {"address": 15787, "code": " later)) {\n                balanceP[", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_Token_4: 0x8421003f084001f4210815cf88407c00000000000000037c1d000e8d178001f\ncalldata_Token_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_Token_4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_Token_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `transferFrom(address,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x46a7bd787a9c5c873dc762ba7d3e52fd3c5f68d4.sol", "function": "transferFrom(address,address,uint256)", "lineno": 189, "title": "Integer Overflow ", "type": "Warning"}, {"address": 15789, "code": " later)) {\n                balanceP[", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_Token_4: 0x2e880ba560ffcb236d900bfffffffffffffffffffffffffffffffffffffffff\ncalldata_Token_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_Token_4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_Token_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `transferFrom(address,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x46a7bd787a9c5c873dc762ba7d3e52fd3c5f68d4.sol", "function": "transferFrom(address,address,uint256)", "lineno": 189, "title": "Integer Overflow ", "type": "Warning"}, {"address": 15808, "code": " later)) {\n                balanceP[", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_Token_4: 0x3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_Token_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_Token_4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_Token_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `transferFrom(address,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x46a7bd787a9c5c873dc762ba7d3e52fd3c5f68d4.sol", "function": "transferFrom(address,address,uint256)", "lineno": 189, "title": "Integer Overflow ", "type": "Warning"}, {"address": 15897, "code": " add(balanceP[_address], currentLockVa", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x5aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\ncalldata_Token_4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_Token_0: 0x95ea7b300000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_Token_4: 0x0\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `approve(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x46a7bd787a9c5c873dc762ba7d3e52fd3c5f68d4.sol", "function": "approve(address,uint256)", "lineno": 190, "title": "Integer Overflow ", "type": "Warning"}, {"address": 15900, "code": " add(balanceP[_address], currentLockVa", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_Token_4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_Token_0: 0x95ea7b300000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_Token_4: 0x0\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `approve(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x46a7bd787a9c5c873dc762ba7d3e52fd3c5f68d4.sol", "function": "approve(address,uint256)", "lineno": 190, "title": "Integer Overflow ", "type": "Warning"}, {"address": 15906, "code": " add(balanceP[_address], currentLockVa", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x760005555555555555530000000000000000000000000000000000000ffffff\ncalldata_Token_4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_Token_0: 0x95ea7b300000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_Token_4: 0x0\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `approve(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x46a7bd787a9c5c873dc762ba7d3e52fd3c5f68d4.sol", "function": "approve(address,uint256)", "lineno": 190, "title": "Integer Overflow ", "type": "Warning"}, {"address": 15931, "code": " add(balanceP[_address], currentLockVa", "debug": "calldata_Token_4 + calldata_Token_32 + 36: 0x12269901231007b83bbbef7ea116f8feefc060fdc41f72d0a4002fb143c901\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_Token_4: 0xa4232088a6156935ef8a15e7fffe4e39bbdfb1030088a53fcfabfe17043abffa\ncalldata_Token_4 + calldata_Token_32 + 68: 0x5f163ffffce2e8c2bc33b0f80e3f075e4ffd607fff0ff45600000bff79bf708\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xff00\ncalldata_Token_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_Token_4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_Token_0: 0xfce887b00000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\nmem_128 + 32 + 32*calldata_Token_4 + calldata_Token_32 + 36: 0x12269901231007b83bbbef7ea116f8feefc060fdc41f72d0a4002fb143c901\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `transferLockedFrom(address,address,uint256[],uint256[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x46a7bd787a9c5c873dc762ba7d3e52fd3c5f68d4.sol", "function": "transferLockedFrom(address,address,uint256[],uint256[])", "lineno": 190, "title": "Integer Overflow ", "type": "Warning"}, {"address": 15933, "code": " add(balanceP[_address], currentLockVa", "debug": "calldata_Token_4 + calldata_Token_32 + 36: 0x2060ae7c0e2472e077effeffffd317be77f98f6abdf9ffe67fbdfffdfefebdd\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_Token_4: 0x4efc4f2a801210d5aec00271f81c72709802918cd081580c802200020002a07\ncalldata_Token_4 + calldata_Token_32 + 68: 0x33994740cac1a59f622ae0900130c8000000000000000000000000000000000\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xff00\ncalldata_Token_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_Token_4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_Token_0: 0xfce887b00000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\nmem_128 + 32 + 32*calldata_Token_4 + calldata_Token_32 + 36: 0x2060ae7c0e2472e077effeffffd317be77f98f6abdf9ffe67fbdfffdfefebdd\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `transferLockedFrom(address,address,uint256[],uint256[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x46a7bd787a9c5c873dc762ba7d3e52fd3c5f68d4.sol", "function": "transferLockedFrom(address,address,uint256[],uint256[])", "lineno": 190, "title": "Integer Overflow ", "type": "Warning"}, {"address": 16060, "code": "    } else {\n     ", "debug": "The exception is triggered under the following conditions:\n\ncalldata_Token_4 + calldata_Token_32 + 36: 0x34859ae147d5f8b2df80199003a2766b77edb4d0134518127259b3660208be8\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_Token_4: 0x79e617b29ea119bcad451724423f2966a4e049092906d3d79911121fe76b003\ncalldata_Token_4 + calldata_Token_32 + 68: 0x41c1b6d80bc1ea043806b3852820799487fe81a826a1381e9923c799804b391\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xff00\ncalldata_Token_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_Token_4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_Token_0: 0xfce887b00000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\nmem_224 +\n32*calldata_Token_4 + calldata_Token_32 + 36 +\n32*calldata_Token_4 + calldata_Token_32 + 68 +\n32*\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_Token_4 +\n32 +\n32*\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_Token_4: 0x0\nmem_128 + 32 + 32*calldata_Token_4 + calldata_Token_32 + 36: 0x34859ae147d5f8b2df80199003a2766b77edb4d0134518127259b3660208be8\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_contracts/0x46a7bd787a9c5c873dc762ba7d3e52fd3c5f68d4.sol", "function": "transferLockedFrom(address,address,uint256[],uint256[])", "lineno": 192, "title": "Exception state", "type": "Informational"}], "success": true}