{
  "contract": "0x17e4cc902015958839e693f179f49c75696381ce",
  "tool": "mythril",
  "start": 1563651417.6774569,
  "end": 1563651454.636477,
  "duration": 36.959020137786865,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 503,
        "code": "thbal) onlyOwner canDistr {\n         for (uint i = 0; i < addresses.length; i++) {\n\t     if (getEthBalance(addresses[i]) < _ethbal) {\n \t         continue;\n             }\n             balances[owner] -= _value;\n             balances[addresses[i]] += _value;\n             Transfer(owner, addresses[i], _value);\n         }\n    }\n    \n    function balanceOf(address _owner) constant returns (uint256) {\n\t retu",
        "debug": "calldata_ForeignToken_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_ForeignToken_0: 0x173a48a400000000000000000000000000000000000000000000000000000000\ncalldatasize_ForeignToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `distributeFUDD(address[],uint256,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/29/0x17e4cc902015958839e693f179f49c75696381ce.sol",
        "function": "distributeFUDD(address[],uint256,uint256)",
        "lineno": 72,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2349,
        "code": "           Transfer(owner",
        "debug": "calldata_ForeignToken_4 + calldata_ForeignToken_4: 0xfffffffffffff7efffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\nUDiv(storage_1,_256): 0x0\ncalldata_ForeignToken_32 + 36: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_ForeignToken_32 + 4: 0x1\nbalance_at_1461501637330902918203684832716283019655932542975 & 0: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nbalance_at_1461501637330902918203684832716283019655932542975 &\ncalldata_ForeignToken_cpy: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_5: 0x0\nstorage_1: 0x0\ncaller: 0x0\ncalldata_ForeignToken_0: 0x173a48a400000000000000000000000000000000000000000000000000000000\ncalldatasize_ForeignToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer underflow exists in the function `distributeFUDD(address[],uint256,uint256)`.\nThe subtraction may result in a value < 0.",
        "filename": "/unique_chucks/29/0x17e4cc902015958839e693f179f49c75696381ce.sol",
        "function": "distributeFUDD(address[],uint256,uint256)",
        "lineno": 79,
        "title": "Integer Underflow",
        "type": "Warning"
      },
      {
        "address": 2449,
        "code": "_value);\n         }\n    }\n    \n ",
        "debug": "calldata_ForeignToken_4 + calldata_ForeignToken_4: 0x80\nstorage_77889682276648159348121498188387380826073215901308117747004906171223545284475: 0x88e3e13f1f5eb12a348bf7edfedcb3a47a4a62d03d802123a031fefe630093d3\ncalldata_ForeignToken_32 + 4: 0x9a8fd130a61d1eb3a50ff40d00d9a3f38554f550313eb3a990bb00ce7beed0d3\ncalldata_ForeignToken_32 + 36: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nbalance_at_1461501637330902918203684832716283019655932542975 & 0: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nbalance_at_1461501637330902918203684832716283019655932542975 &\ncalldata_ForeignToken_cpy: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_5: 0x0\nstorage_1: 0x0\ncaller: 0x0\ncalldata_ForeignToken_0: 0x173a48a400000000000000000000000000000000000000000000000000000000\ncalldatasize_ForeignToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `distributeFUDD(address[],uint256,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/29/0x17e4cc902015958839e693f179f49c75696381ce.sol",
        "function": "distributeFUDD(address[],uint256,uint256)",
        "lineno": 79,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2669,
        "code": " _to, uint256 _value) onlyPayloadSi",
        "debug": "The exception is triggered under the following conditions:\n\ncalldatasize_ForeignToken: 0x60\ncalldata_ForeignToken_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/29/0x17e4cc902015958839e693f179f49c75696381ce.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 93,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3023,
        "code": "   balances[_to] += _v",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_ForeignToken_32_+_4: 0xcb1a200e8f5351c386ee5fc0850ceaa7adaf35f27bf67928aa0bbfbfd7b27cbb\ncalldatasize_ForeignToken: 0x10000000060\ncalldata_ForeignToken_32 + 36: 0x63120bb22e15c5f7e2cf022082cc08d7cd2fb5fb43c6e686cae830201f835994\ncalldata_ForeignToken_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `transferFrom(address,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/29/0x17e4cc902015958839e693f179f49c75696381ce.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 123,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 3198,
        "code": "(_from, _to, _value);\n   ",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_ForeignToken_4: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_ForeignToken_32_+_4: 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldatasize_ForeignToken: 0x64\ncalldata_ForeignToken_32 + 36: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_ForeignToken_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncallvalue: 0x0\n",
        "description": "A possible integer underflow exists in the function `transferFrom(address,address,uint256)`.\nThe subtraction may result in a value < 0.",
        "filename": "/unique_chucks/29/0x17e4cc902015958839e693f179f49c75696381ce.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 128,
        "title": "Integer Underflow",
        "type": "Warning"
      },
      {
        "address": 3336,
        "code": " } else { return false; }\n    }\n    ",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_ForeignToken_32_+_4: 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncalldatasize_ForeignToken: 0x64\ncalldata_ForeignToken_32 + 36: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_ForeignToken_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_ForeignToken_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncallvalue: 0x0\n",
        "description": "A possible integer underflow exists in the function `transferFrom(address,address,uint256)`.\nThe subtraction may result in a value < 0.",
        "filename": "/unique_chucks/29/0x17e4cc902015958839e693f179f49c75696381ce.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 130,
        "title": "Integer Underflow",
        "type": "Warning"
      },
      {
        "address": 3845,
        "code": " _to, uint256 _value) onlyPayloadSi",
        "debug": "The exception is triggered under the following conditions:\n\ncalldatasize_ForeignToken: 0x4\ncalldata_ForeignToken_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/29/0x17e4cc902015958839e693f179f49c75696381ce.sol",
        "function": "transfer(address,uint256)",
        "lineno": 93,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 4066,
        "code": "        balances[msg.s",
        "debug": "calldatasize_ForeignToken: 0x4000000000040\ncalldata_ForeignToken_32 + 4: 0x5025aaf6e9d246c24a402ae3078f171bfafec6fb5eedec6ba578b76aceee9556\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_ForeignToken_4: 0xe82fcb70919a608242e142b9d6cf8473fa81000250cc0f634044f67fe408f4cc\ncalldata_ForeignToken_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `transfer(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/29/0x17e4cc902015958839e693f179f49c75696381ce.sol",
        "function": "transfer(address,uint256)",
        "lineno": 103,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 4776,
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/29/0x17e4cc902015958839e693f179f49c75696381ce.sol",
        "function": "withdrawForeignTokens(address)",
        "lineno": 161,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 4776,
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 5034\n",
        "filename": "/unique_chucks/29/0x17e4cc902015958839e693f179f49c75696381ce.sol",
        "function": "withdrawForeignTokens(address)",
        "lineno": 161,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 5034,
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/29/0x17e4cc902015958839e693f179f49c75696381ce.sol",
        "function": "withdrawForeignTokens(address)",
        "lineno": 161,
        "title": "Message call to external contract",
        "type": "Warning"
      }
    ],
    "success": true
  }
}