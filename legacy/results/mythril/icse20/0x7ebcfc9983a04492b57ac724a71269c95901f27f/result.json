{
  "contract": "0x7ebcfc9983a04492b57ac724a71269c95901f27f",
  "tool": "mythril",
  "start": 1563339391.669297,
  "end": 1563339468.7500987,
  "duration": 77.08080172538757,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 148,
        "code": "pient, uint256[] amount) public onlyOwner returns (uint256) {\n    uint256 i = 0;\n      while (i < recipient.length) {\n        token.transfer(recipient[i], amount[i]);\n        i += 1;\n      }\n    return(i);\n  }\n  function airdropToSubscribers(addre",
        "debug": "calldata_PublicAirdrop_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_PublicAirdrop_0: 0x6724348200000000000000000000000000000000000000000000000000000000\ncalldatasize_PublicAirdrop: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `airdrop(address[],uint256[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x7ebcfc9983a04492b57ac724a71269c95901f27f.sol",
        "function": "airdrop(address[],uint256[])",
        "lineno": 32,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 424,
        "code": " recipient, uint256 amount) public onlyOwner returns (uint256) {\n    uint256 i = 0;\n      while (i < recipient.length) {\n        token.transfer(recipient[i], amount);\n        i += 1;\n      }\n    return(i);\n  }\n}",
        "debug": "calldata_PublicAirdrop_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_PublicAirdrop_0: 0xd858944600000000000000000000000000000000000000000000000000000000\ncalldatasize_PublicAirdrop: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `airdropToSubscribers(address[],uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x7ebcfc9983a04492b57ac724a71269c95901f27f.sol",
        "function": "airdropToSubscribers(address[],uint256)",
        "lineno": 40,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 883,
        "code": "}\n    ret",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_PublicAirdrop_4 + calldata_PublicAirdrop_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_0: 0x0\ncaller: 0x0\ncalldata_PublicAirdrop_0: 0x6724348200000000000000000000000000000000000000000000000000000000\ncalldatasize_PublicAirdrop: 0x4\nmem_128 +\n32 +\n32*calldata_PublicAirdrop_4 + calldata_PublicAirdrop_4: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0x7ebcfc9983a04492b57ac724a71269c95901f27f.sol",
        "function": "airdrop(address[],uint256[])",
        "lineno": 37,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 1030,
        "code": "t[i]);\n        i += 1;\n      }\n    retu",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_contracts/0x7ebcfc9983a04492b57ac724a71269c95901f27f.sol",
        "function": "airdrop(address[],uint256[])",
        "lineno": 35,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 1030,
        "code": "t[i]);\n        i += 1;\n      }\n    retu",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1030\n",
        "filename": "/unique_contracts/0x7ebcfc9983a04492b57ac724a71269c95901f27f.sol",
        "function": "airdrop(address[],uint256[])",
        "lineno": 35,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 1476,
        "code": "    i += 1;\n      }\n    return(i);\n ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_contracts/0x7ebcfc9983a04492b57ac724a71269c95901f27f.sol",
        "function": "airdropToSubscribers(address[],uint256)",
        "lineno": 44,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 1476,
        "code": "    i += 1;\n      }\n    return(i);\n ",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1476\nCall at address: 1476\n",
        "filename": "/unique_contracts/0x7ebcfc9983a04492b57ac724a71269c95901f27f.sol",
        "function": "airdropToSubscribers(address[],uint256)",
        "lineno": 44,
        "title": "Multiple Calls",
        "type": "Information"
      }
    ],
    "success": true
  }
}