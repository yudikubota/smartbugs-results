{
  "contract": "0x7f2b1d5133053f9cc5b750d2245db607233a770d",
  "tool": "mythril",
  "start": 1563320263.3918266,
  "end": 1563347467.9972448,
  "duration": 27204.60541820526,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 6277,
        "code": ") - 1));\n    }\n\n    /// All",
        "debug": "SOLVER OUTPUT:\ncalldata_Dappster_0: 0x3ccfd60b00000000000000000000000000000000000000000000000000000000\ncalldatasize_Dappster: 0x4\ncallvalue: 0x0\n",
        "description": "In the function `withdraw()` a non-zero amount of Ether is sent to msg.sender.\nIt seems that this function can be called without restrictions.",
        "filename": "/unique_contracts/0x7f2b1d5133053f9cc5b750d2245db607233a770d.sol",
        "function": "withdraw()",
        "lineno": 363,
        "title": "Ether send",
        "type": "Warning"
      },
      {
        "address": 6543,
        "code": "ds details keys so we can enum",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_Dappster_4: 0x0\nstorage_4: 0x0\ncalldata_Dappster_0: 0x459a219200000000000000000000000000000000000000000000000000000000\ncalldatasize_Dappster: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0x7f2b1d5133053f9cc5b750d2245db607233a770d.sol",
        "function": "_function_0x459a2192",
        "lineno": 47,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}