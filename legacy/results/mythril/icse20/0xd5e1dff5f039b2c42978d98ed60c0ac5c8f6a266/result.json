{
  "contract": "0xd5e1dff5f039b2c42978d98ed60c0ac5c8f6a266",
  "tool": "mythril",
  "start": 1563536389.0272274,
  "end": 1563536423.792243,
  "duration": 34.765015602111816,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 321,
        "code": "mals();\n        uint256 price = cachedPrices[_token];\n        return price.mul(_amount).div(10**decimals);\n    }\n\n    //\n    // Internal\n    //\n\n    function kyb",
        "debug": "calldata_TokenPriceProvider_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_TokenPriceProvider_0: 0xd740b9a300000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenPriceProvider: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `_function_0xd740b9a3`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/14/0xd5e1dff5f039b2c42978d98ed60c0ac5c8f6a266.sol",
        "function": "_function_0xd740b9a3",
        "lineno": 586,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 588,
        "code": "  address destAddress,\n ",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/14/0xd5e1dff5f039b2c42978d98ed60c0ac5c8f6a266.sol",
        "function": "getEtherValue(uint256,address)",
        "lineno": 615,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 1081,
        "code": "mount tokens with contract _token\n     */\n    function getEtherValue(u",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/14/0xd5e1dff5f039b2c42978d98ed60c0ac5c8f6a266.sol",
        "function": "_function_0xe3503ca2",
        "lineno": 583,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 1081,
        "code": "mount tokens with contract _token\n     */\n    function getEtherValue(u",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1081\n",
        "filename": "/unique_chucks/14/0xd5e1dff5f039b2c42978d98ed60c0ac5c8f6a266.sol",
        "function": "_function_0xd740b9a3",
        "lineno": 583,
        "title": "Multiple Calls",
        "type": "Information"
      }
    ],
    "success": true
  }
}