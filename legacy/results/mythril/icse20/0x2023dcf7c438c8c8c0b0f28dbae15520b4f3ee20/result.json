{
  "contract": "0x2023dcf7c438c8c8c0b0f28dbae15520b4f3ee20",
  "tool": "mythril",
  "start": 1563470157.6480749,
  "end": 1563470456.6566916,
  "duration": 299.0086166858673,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 1575,
        "code": "lTime;\n    ContractLocked(_untilTime, _reason);\n  }\n}\n\n\ncontract Token is IERC20Token, LockableOwned {\n\n  using SafeMath for uint256;\n\n  /* Public v",
        "debug": "calldata_Token_32 + 4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_Token_0: 0xb26eafe400000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `lockUntil(uint256,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/3/0x2023dcf7c438c8c8c0b0f28dbae15520b4f3ee20.sol",
        "function": "lockUntil(uint256,string)",
        "lineno": 96,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 4475,
        "code": "on transferOwnership(addres",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_Token_0: 0xa0929cda00000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/3/0x2023dcf7c438c8c8c0b0f28dbae15520b4f3ee20.sol",
        "function": "salvageTokensFromContract(address,address,uint256)",
        "lineno": 62,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 4642,
        "code": "   name = \"FutouristToken\";\n    symbol = \"FTR\";\n ",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/3/0x2023dcf7c438c8c8c0b0f28dbae15520b4f3ee20.sol",
        "function": "salvageTokensFromContract(address,address,uint256)",
        "lineno": 190,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 5312,
        "code": "on transferOwnership(addres",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_Token_0: 0xb26eafe400000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/3/0x2023dcf7c438c8c8c0b0f28dbae15520b4f3ee20.sol",
        "function": "lockUntil(uint256,string)",
        "lineno": 62,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 6751,
        "code": "\n\n  function a",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\nstorage_2: 0x0\ncalldata_Token_32 + 4: 0x1\ncalldata_Token_4: 0xffffffffffffffffffffffffffffffffffffffff\ntimestamp: 0x1\ncalldata_Token_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/3/0x2023dcf7c438c8c8c0b0f28dbae15520b4f3ee20.sol",
        "function": "transfer(address,uint256)",
        "lineno": 40,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 6769,
        "code": " }\n}\n",
        "debug": "calldata_Token_32 + 36: 0xc290137095b13347e55005a6dc184559e0489f1233480050d0fb4bba17d34179\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_Token_32_+_4: 0x9c9efb7ae5acd378025256a3945f5859076e809243093d9ecae2636c9fd28979\nstorage_2: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_Token_4: 0xc290137095b13347e55005a6dc184559e0489f1233480050d0fb4bba17d34179\ncalldata_Token_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\ntimestamp: 0x1\ncalldata_Token_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `transferFrom(address,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/3/0x2023dcf7c438c8c8c0b0f28dbae15520b4f3ee20.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 46,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 6782,
        "code": "ct Owned {\n   ",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_Token_32 + 36: 0x6218000d800000000000000000000000039800002005500633e06f771baff7fc\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_Token_32_+_4: 0xbd5dfeabad0efffffffffeffffffffffd599ffefbfe6f24271e80e64322c0700\nstorage_2: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_Token_4: 0x6218000d800000000000000000000000039800002005500633e06f771baff7fc\ncalldata_Token_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\ntimestamp: 0x1\ncalldata_Token_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/3/0x2023dcf7c438c8c8c0b0f28dbae15520b4f3ee20.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 49,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}