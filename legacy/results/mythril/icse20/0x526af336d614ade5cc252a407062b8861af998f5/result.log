{"error": null, "issues": [{"address": 2140, "code": "rnal {\n        byt", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/5/0x526af336d614ade5cc252a407062b8861af998f5.sol", "function": "lockAndDraw(address,uint256)", "lineno": 171, "title": "Message call to external contract", "type": "Warning"}, {"address": 2140, "code": "rnal {\n        byt", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2264\n", "filename": "/unique_chucks/5/0x526af336d614ade5cc252a407062b8861af998f5.sol", "function": "lockAndDraw(address,uint256)", "lineno": 171, "title": "Multiple Calls", "type": "Information"}, {"address": 2264, "code": "   bool o", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/5/0x526af336d614ade5cc252a407062b8861af998f5.sol", "function": "lockAndDraw(address,uint256)", "lineno": 173, "title": "Message call to external contract", "type": "Warning"}, {"address": 2264, "code": "   bool o", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2485\n", "filename": "/unique_chucks/5/0x526af336d614ade5cc252a407062b8861af998f5.sol", "function": "lockAndDraw(address,bytes32,uint256)", "lineno": 173, "title": "Multiple Calls", "type": "Information"}, {"address": 2485, "code": "   bool ok;\n        (val, ok) = tub", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/5/0x526af336d614ade5cc252a407062b8861af998f5.sol", "function": "lockAndDraw(address,bytes32,uint256)", "lineno": 173, "title": "Message call to external contract", "type": "Informational"}, {"address": 2796, "code": " payable returns (address proxy, bytes32 cup) {\n   ", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/5/0x526af336d614ade5cc252a407062b8861af998f5.sol", "function": "createAndOpen(address,address)", "lineno": 274, "title": "Message call to external contract", "type": "Warning"}, {"address": 2796, "code": " payable returns (address proxy, bytes32 cup) {\n   ", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3039\nCall at address: 6550\n", "filename": "/unique_chucks/5/0x526af336d614ade5cc252a407062b8861af998f5.sol", "function": "createAndOpen(address,address)", "lineno": 274, "title": "Multiple Calls", "type": "Information"}, {"address": 3039, "code": "gistry_).build(msg.sender);\n       ", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/5/0x526af336d614ade5cc252a407062b8861af998f5.sol", "function": "createAndOpen(address,address)", "lineno": 275, "title": "Message call to external contract", "type": "Warning"}, {"address": 3202, "code": "d open a cup", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/5/0x526af336d614ade5cc252a407062b8861af998f5.sol", "function": "shut(address,bytes32,address)", "lineno": 266, "title": "Message call to external contract", "type": "Warning"}, {"address": 3202, "code": "d open a cup", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3361\n", "filename": "/unique_chucks/5/0x526af336d614ade5cc252a407062b8861af998f5.sol", "function": "shut(address,bytes32,address)", "lineno": 266, "title": "Multiple Calls", "type": "Information"}, {"address": 3361, "code": "   functi", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/5/0x526af336d614ade5cc252a407062b8861af998f5.sol", "function": "shut(address,bytes32,address)", "lineno": 267, "title": "Message call to external contract", "type": "Warning"}, {"address": 3871, "code": "         ", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/5/0x526af336d614ade5cc252a407062b8861af998f5.sol", "function": "wipeAndFree(address,bytes32,uint256,uint256)", "lineno": 198, "title": "Message call to external contract", "type": "Warning"}, {"address": 3871, "code": "         ", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 4334\nCall at address: 4144\n", "filename": "/unique_chucks/5/0x526af336d614ade5cc252a407062b8861af998f5.sol", "function": "wipe(address,bytes32,uint256)", "lineno": 198, "title": "Multiple Calls", "type": "Information"}, {"address": 4144, "code": "               tub.sai().approve(tub, uint(-1", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/5/0x526af336d614ade5cc252a407062b8861af998f5.sol", "function": "wipe(address,bytes32,uint256)", "lineno": 198, "title": "Message call to external contract", "type": "Informational"}, {"address": 4144, "code": "               tub.sai().approve(tub, uint(-1", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 4334\n", "filename": "/unique_chucks/5/0x526af336d614ade5cc252a407062b8861af998f5.sol", "function": "wipe(address,bytes32,uint256)", "lineno": 198, "title": "Multiple Calls", "type": "Information"}, {"address": 4334, "code": "wance(this, ", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/5/0x526af336d614ade5cc252a407062b8861af998f5.sol", "function": "wipe(address,bytes32,uint256)", "lineno": 200, "title": "Message call to external contract", "type": "Warning"}, {"address": 4334, "code": "wance(this, ", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 4512\n", "filename": "/unique_chucks/5/0x526af336d614ade5cc252a407062b8861af998f5.sol", "function": "wipe(address,bytes32,uint256,address)", "lineno": 200, "title": "Multiple Calls", "type": "Information"}, {"address": 4512, "code": "b) != uint(-", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/5/0x526af336d614ade5cc252a407062b8861af998f5.sol", "function": "wipe(address,bytes32,uint256,address)", "lineno": 200, "title": "Message call to external contract", "type": "Warning"}, {"address": 6550, "code": "e(cup, lad);\n    }\n\n    f", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/5/0x526af336d614ade5cc252a407062b8861af998f5.sol", "function": "createOpenAndLock(address,address)", "lineno": 136, "title": "Message call to external contract", "type": "Warning"}, {"address": 6550, "code": "e(cup, lad);\n    }\n\n    f", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3039\n", "filename": "/unique_chucks/5/0x526af336d614ade5cc252a407062b8861af998f5.sol", "function": "createAndOpen(address,address)", "lineno": 136, "title": "Multiple Calls", "type": "Information"}, {"address": 6748, "code": "tub.tab(cup)", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/5/0x526af336d614ade5cc252a407062b8861af998f5.sol", "function": "shut(address,bytes32)", "lineno": 255, "title": "Message call to external contract", "type": "Warning"}, {"address": 6748, "code": "tub.tab(cup)", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 6907\n", "filename": "/unique_chucks/5/0x526af336d614ade5cc252a407062b8861af998f5.sol", "function": "shut(address,bytes32)", "lineno": 255, "title": "Multiple Calls", "type": "Information"}, {"address": 6907, "code": "otc_);\n  ", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/5/0x526af336d614ade5cc252a407062b8861af998f5.sol", "function": "shut(address,bytes32)", "lineno": 255, "title": "Message call to external contract", "type": "Warning"}, {"address": 7437, "code": "t ink = rdiv(", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/5/0x526af336d614ade5cc252a407062b8861af998f5.sol", "function": "lock(address,bytes32)", "lineno": 148, "title": "Message call to external contract", "type": "Warning"}, {"address": 7437, "code": "t ink = rdiv(", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 7952\nCall at address: 7794\n", "filename": "/unique_chucks/5/0x526af336d614ade5cc252a407062b8861af998f5.sol", "function": "lock(address,bytes32)", "lineno": 148, "title": "Multiple Calls", "type": "Information"}, {"address": 7794, "code": "nk : ink ", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/5/0x526af336d614ade5cc252a407062b8861af998f5.sol", "function": "lock(address,bytes32)", "lineno": 149, "title": "Message call to external contract", "type": "Warning"}, {"address": 7794, "code": "nk : ink ", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 7952\n", "filename": "/unique_chucks/5/0x526af336d614ade5cc252a407062b8861af998f5.sol", "function": "lock(address,bytes32)", "lineno": 149, "title": "Multiple Calls", "type": "Information"}, {"address": 7952, "code": "nk : ink - 1;\n\n            if (tub.g", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/5/0x526af336d614ade5cc252a407062b8861af998f5.sol", "function": "lock(address,bytes32)", "lineno": 149, "title": "Message call to external contract", "type": "Informational"}, {"address": 7952, "code": "nk : ink - 1;\n\n            if (tub.g", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 8081\n", "filename": "/unique_chucks/5/0x526af336d614ade5cc252a407062b8861af998f5.sol", "function": "lockAndDraw(address,bytes32,uint256)", "lineno": 149, "title": "Multiple Calls", "type": "Information"}, {"address": 8081, "code": "         ", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/5/0x526af336d614ade5cc252a407062b8861af998f5.sol", "function": "lockAndDraw(address,bytes32,uint256)", "lineno": 152, "title": "Message call to external contract", "type": "Warning"}, {"address": 10471, "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/5/0x526af336d614ade5cc252a407062b8861af998f5.sol", "function": "createOpenLockAndDraw(address,address,uint256)", "lineno": 288, "title": "Message call to external contract", "type": "Warning"}, {"address": 10471, "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 6550\n", "filename": "/unique_chucks/5/0x526af336d614ade5cc252a407062b8861af998f5.sol", "function": "createOpenLockAndDraw(address,address,uint256)", "lineno": 288, "title": "Multiple Calls", "type": "Information"}, {"address": 10928, "code": "          TubInterface tub = TubI", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/5/0x526af336d614ade5cc252a407062b8861af998f5.sol", "function": "give(address,bytes32,address)", "lineno": 141, "title": "Message call to external contract", "type": "Warning"}, {"address": 11115, "code": " registry_, address tub_, uint wad) public payable ", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/5/0x526af336d614ade5cc252a407062b8861af998f5.sol", "function": "createOpenAndLock(address,address)", "lineno": 282, "title": "Message call to external contract", "type": "Warning"}, {"address": 11115, "code": " registry_, address tub_, uint wad) public payable ", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 6550\n", "filename": "/unique_chucks/5/0x526af336d614ade5cc252a407062b8861af998f5.sol", "function": "createOpenAndLock(address,address)", "lineno": 282, "title": "Multiple Calls", "type": "Information"}, {"address": 11519, "code": "-1));\n   ", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/5/0x526af336d614ade5cc252a407062b8861af998f5.sol", "function": "free(address,bytes32,uint256)", "lineno": 218, "title": "Message call to external contract", "type": "Warning"}], "success": true}