{
  "contract": "0xb6d85349ec816726bf07e1690d56d712acabe409",
  "tool": "mythril",
  "start": 1563581789.902614,
  "end": 1563581846.4871714,
  "duration": 56.58455729484558,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 5285,
        "code": "sert(",
        "debug": "calldata_YoloTokenPresale_4: 0x38e38e38e38ed097b43a188303ac9e3e2137e9b13b13ac24ca7ac0ff8e6184e9\nstorage_8: 0x0\ncaller: 0x0\ncalldata_YoloTokenPresale_0: 0x34fcf43700000000000000000000000000000000000000000000000000000000\ncalldatasize_YoloTokenPresale: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `setRate(uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/18/0xb6d85349ec816726bf07e1690d56d712acabe409.sol",
        "function": "setRate(uint256)",
        "lineno": 15,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 5419,
        "code": "retur",
        "debug": "callvalue: 0x57f25cd000000000000000000000000000000000000000000000000000000000\nstorage_5: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncalldatasize_YoloTokenPresale: 0x3\n",
        "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/18/0xb6d85349ec816726bf07e1690d56d712acabe409.sol",
        "function": "fallback",
        "lineno": 34,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 5432,
        "code": "}\n}\n\n// File: ",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_5: 0x1\ncallvalue: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldatasize_YoloTokenPresale: 0x3\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/18/0xb6d85349ec816726bf07e1690d56d712acabe409.sol",
        "function": "fallback",
        "lineno": 35,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}