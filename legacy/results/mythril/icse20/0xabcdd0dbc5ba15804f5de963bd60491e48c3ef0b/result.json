{
  "contract": "0xabcdd0dbc5ba15804f5de963bd60491e48c3ef0b",
  "tool": "mythril",
  "start": 1563588910.92421,
  "end": 1563589262.6574626,
  "duration": 351.7332525253296,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 927,
        "code": "\ncontract Investme",
        "debug": "storage_1: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncallvalue: 0xde0b6b3a7640000\nstorage_7: 0x0\ncalldata_Investment_0: 0x2300000000000000000000000000000000000000000000000000000000\ncalldatasize_Investment: 0x4\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\n",
        "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/23/0xabcdd0dbc5ba15804f5de963bd60491e48c3ef0b.sol",
        "function": "fallback",
        "lineno": 1,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1117,
        "code": "vestment(msg.sender, msg.",
        "debug": "storage_3: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncallvalue: 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_6: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa\nstorage_5: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa\nstorage_111414077815863400510004064629973595961579173665589224203503662149373724986687 +\n115792089237316195423570985008687907853269984665640564039457584007913129639935 +\nstorage_6: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_7: 0x0\ncalldatasize_Investment: 0x3\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\n",
        "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/23/0xabcdd0dbc5ba15804f5de963bd60491e48c3ef0b.sol",
        "function": "fallback",
        "lineno": 42,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1247,
        "code": "limits;\n    /** indi",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_Investment_4: 0x0\nstorage_6: 0x0\ncalldata_Investment_0: 0x20e9daf100000000000000000000000000000000000000000000000000000000\ncalldatasize_Investment: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/23/0xabcdd0dbc5ba15804f5de963bd60491e48c3ef0b.sol",
        "function": "_function_0x20e9daf1",
        "lineno": 15,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 1448,
        "code": "ed to pay the investor\n      ",
        "debug": "",
        "description": "The return value of an external call is not checked. Note that execution continue even if the called contract throws.",
        "filename": "/unique_chucks/23/0xabcdd0dbc5ba15804f5de963bd60491e48c3ef0b.sol",
        "function": "withdraw()",
        "lineno": 82,
        "title": "Unchecked CALL return value",
        "type": "Informational"
      },
      {
        "address": 1471,
        "code": "ss[] public investors;\n   ",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_Investment_4: 0x0\nstorage_1: 0x0\ncalldata_Investment_0: 0x3feb5f2b00000000000000000000000000000000000000000000000000000000\ncalldatasize_Investment: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/23/0xabcdd0dbc5ba15804f5de963bd60491e48c3ef0b.sol",
        "function": "_function_0x3feb5f2b",
        "lineno": 6,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 1752,
        "code": " rates;\n    uint[] ",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_Investment_4: 0x0\nstorage_5: 0x0\ncalldata_Investment_0: 0xdd418ae200000000000000000000000000000000000000000000000000000000\ncalldatasize_Investment: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/23/0xabcdd0dbc5ba15804f5de963bd60491e48c3ef0b.sol",
        "function": "_function_0xdd418ae2",
        "lineno": 14,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 1922,
        "code": "gth-1];\n         for(ui",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_6: 0x0\ncallvalue: 0xde0b6b3a7640000\nstorage_7: 0x0\ncalldata_Investment_0: 0xb00000000000000000000000000000000000000000000000000000000\ncalldatasize_Investment: 0x4\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/23/0xabcdd0dbc5ba15804f5de963bd60491e48c3ef0b.sol",
        "function": "fallback",
        "lineno": 58,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 1964,
        "code": "th-2; i >= 0; i--){\n  ",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_6: 0xffc0000000000000000000000000000000000000000000000000000000000000\nstorage_3: 0x0\nstorage_5: 0xffbfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_111414077815863400510004064629973595961579173665589224203503662149373724986687 +\n115792089237316195423570985008687907853269984665640564039457584007913129639935 +\nstorage_6: 0x0\ncallvalue: 0xde0b6b3a7640000\nstorage_7: 0x0\ncalldata_Investment_0: 0xb00000000000000000000000000000000000000000000000000000000\ncalldatasize_Investment: 0x4\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/23/0xabcdd0dbc5ba15804f5de963bd60491e48c3ef0b.sol",
        "function": "fallback",
        "lineno": 59,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2006,
        "code": "s[i]){\n        ",
        "debug": "storage_6: 0x1\nstorage_3: 0x0\nstorage_111414077815863400510004064629973595961579173665589224203503662149373724986687 +\n115792089237316195423570985008687907853269984665640564039457584007913129639935 +\nstorage_6: 0x1\ncallvalue: 0xde0b6b3a7640000\nstorage_7: 0x0\ncalldata_Investment_0: 0xb00000000000000000000000000000000000000000000000000000000\ncalldatasize_Investment: 0x4\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\n",
        "description": "A possible integer underflow exists in the function `fallback`.\nThe subtraction may result in a value < 0.",
        "filename": "/unique_chucks/23/0xabcdd0dbc5ba15804f5de963bd60491e48c3ef0b.sol",
        "function": "fallback",
        "lineno": 60,
        "title": "Integer Underflow",
        "type": "Warning"
      },
      {
        "address": 2033,
        "code": "ue;\n     ",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_6: 0x1\nstorage_3: 0x0\nstorage_111414077815863400510004064629973595961579173665589224203503662149373724986687 +\n115792089237316195423570985008687907853269984665640564039457584007913129639935 +\nstorage_6: 0x1\ncallvalue: 0xde0b6b3a7640000\nstorage_7: 0x0\ncalldata_Investment_0: 0xe8b5e51f00000000000000000000000000000000000000000000000000000000\ncalldatasize_Investment: 0x4\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/23/0xabcdd0dbc5ba15804f5de963bd60491e48c3ef0b.sol",
        "function": "invest()",
        "lineno": 61,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2056,
        "code": "\n         ",
        "debug": "storage_3: 0xa11a8aaa58dd40dcb5b7618b591abb3fd5baa7fdbdb6eeb7fbedeafb7e493f13\ncallvalue: 0xb653ebe451b9b9cf37d639829157319560f3d6fd21bca8c7838d1383f86db6d9\nstorage_6: 0x3000000000000000000000000000000000000000000000000000000000000000\nstorage_111414077815863400510004064629973595961579173665589224203503662149373724986687 +\n115792089237316195423570985008687907853269984665640564039457584007913129639934 +\nstorage_6: 0xa11a8aaa58dd40dcb5b7618b591abb3fd5baa7fdbdb6eeb7fbedeafb7e493f13\nstorage_111414077815863400510004064629973595961579173665589224203503662149373724986687 +\n115792089237316195423570985008687907853269984665640564039457584007913129639935 +\nstorage_6: 0xa11a8aaa58dd40dcb5b7618b591abb3fd5baa7fdbdb6eeb7fbedeafb7e493f14\nstorage_7: 0x0\ncalldatasize_Investment: 0x3\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\n",
        "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/23/0xabcdd0dbc5ba15804f5de963bd60491e48c3ef0b.sol",
        "function": "fallback",
        "lineno": 62,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2229,
        "code": "Enables ",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_111414077815863400510004064629973595961579173665589224203503662149373724986687 +\n115792089237316195423570985008687907853269984665640564039457584007913129639935 +\nstorage_6: 0xffffffffffffffffffffffffffffffffff800000000000000000000300000000\nstorage_3: 0x2ffffffff\ncallvalue: 0xde0b6b3ffffffff\nstorage_6: 0xfffffffffffffffffffffffffffffffffffffff8000000000000000000000001\nstorage_5: 0xfffffffffffffffffffffffffffffffffffffff7ffffffffffffffffffffffff\nstorage_111414077815863400510004064629973595961579173665589224203503662149373724986687 +\n115792089237316195423570985008687907853269984665640564039457584007913129639934 +\nstorage_6: 0x2ffffffff\nstorage_7: 0x0\ncalldatasize_Investment: 0x3\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/23/0xabcdd0dbc5ba15804f5de963bd60491e48c3ef0b.sol",
        "function": "fallback",
        "lineno": 73,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2268,
        "code": "nt ",
        "debug": "storage_6: 0x2\nstorage_3: 0x0\nstorage_111414077815863400510004064629973595961579173665589224203503662149373724986687 +\n115792089237316195423570985008687907853269984665640564039457584007913129639934 +\nstorage_6: 0x1\nstorage_111414077815863400510004064629973595961579173665589224203503662149373724986687 +\n115792089237316195423570985008687907853269984665640564039457584007913129639935 +\nstorage_6: 0x1\ncallvalue: 0xde0b6b3a7640000\nstorage_7: 0x0\ncalldatasize_Investment: 0x3\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\n",
        "description": "A possible integer underflow exists in the function `fallback`.\nThe subtraction may result in a value < 0.",
        "filename": "/unique_chucks/23/0xabcdd0dbc5ba15804f5de963bd60491e48c3ef0b.sol",
        "function": "fallback",
        "lineno": 61,
        "title": "Integer Underflow",
        "type": "Warning"
      },
      {
        "address": 2694,
        "code": "estorIndex]]>0){\n            uint va",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function returnInvestment(). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/23/0xabcdd0dbc5ba15804f5de963bd60491e48c3ef0b.sol",
        "function": "returnInvestment()",
        "lineno": 98,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 3206,
        "code": "Recursive(value-val);\n        } \n ",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function returnInvestment(). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/23/0xabcdd0dbc5ba15804f5de963bd60491e48c3ef0b.sol",
        "function": "returnInvestment()",
        "lineno": 103,
        "title": "Transaction order dependence",
        "type": "Warning"
      }
    ],
    "success": true
  }
}