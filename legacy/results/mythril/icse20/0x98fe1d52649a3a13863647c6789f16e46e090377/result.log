{"error": null, "issues": [{"address": 228, "code": "t256 amount) public payable onlyOwner {\n        if (msg.value > 0)\n            deposit();\n\n        require(addr.call.value(amount)(data));\n        Call(msg.sender, addr, amount);\n    }\n\n    function setEmergencySecrets(uint256 code, ", "debug": "calldata_WalletWithEmergencyTransfer_32 + 4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_WalletWithEmergencyTransfer_0: 0x4ae0004100000000000000000000000000000000000000000000000000000000\ncalldatasize_WalletWithEmergencyTransfer: 0x4\n", "description": "A possible integer overflow exists in the function `call(address,bytes,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/32/0x98fe1d52649a3a13863647c6789f16e46e090377.sol", "function": "call(address,bytes,uint256)", "lineno": 44, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1200, "code": "g.sender, addr, amount);\n    ", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/32/0x98fe1d52649a3a13863647c6789f16e46e090377.sol", "function": "call(address,bytes,uint256)", "lineno": 49, "title": "Message call to external contract", "type": "Warning"}], "success": true}