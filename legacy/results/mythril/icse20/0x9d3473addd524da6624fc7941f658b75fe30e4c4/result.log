{"error": null, "issues": [{"address": 604, "code": "ublic messages;\n    addre", "debug": "The exception is triggered under the following conditions:\n\ncalldata_BulletinBoard_4: 0x0\nstorage_0: 0x0\ncalldata_BulletinBoard_0: 0xd80fefd00000000000000000000000000000000000000000000000000000000\ncalldatasize_BulletinBoard: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/28/0x9d3473addd524da6624fc7941f658b75fe30e4c4.sol", "function": "_function_0x0d80fefd", "lineno": 12, "title": "Exception state", "type": "Informational"}, {"address": 1125, "code": ";\n\ncontract Bullet", "debug": "storage_0: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_BulletinBoard_4 + calldata_BulletinBoard_4: 0x25956ea418c7809e2f0c3037799f762ac6036218816686cc5c1c39ea07d62\ncallvalue: 0x2000\ncalldata_BulletinBoard_0: 0x6a226a4900000000000000000000000000000000000000000000000000000000\ncalldatasize_BulletinBoard: 0x4\n", "description": "A possible integer overflow exists in the function `addMessage(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/28/0x9d3473addd524da6624fc7941f658b75fe30e4c4.sol", "function": "addMessage(string)", "lineno": 1, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1248, "code": "e(msg.sender, text, block.timestamp, msg.value));\n    }\n\n    functio", "debug": "mem_160 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_BulletinBoard_4 + calldata_BulletinBoard_4)) +\n32: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\ncalldata_BulletinBoard_4 + calldata_BulletinBoard_4: 0x627ab5ce7a5c28914901219261f7610a22f294a756241000107e2029db608\ncallvalue: 0xecba4ada4e61a87ec0b6c3181d1260c3499d2957ef91003ae4161cece888000\ncalldata_BulletinBoard_0: 0x6a226a4900000000000000000000000000000000000000000000000000000000\ncalldatasize_BulletinBoard: 0x4\n", "description": "A possible integer overflow exists in the function `addMessage(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/28/0x9d3473addd524da6624fc7941f658b75fe30e4c4.sol", "function": "addMessage(string)", "lineno": 21, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1364, "code": "ntract BulletinBoard {\n\n    struct Message {\n        address sender;\n        string text;\n        uint timestamp;\n        uint payment;\n    }\n\n    Message[] public messages;\n    address public owner;\n\n    constructor() public {\n        owner = msg.sender;\n    }\n\n    function addMessage(string text) public payable {\n        require(msg.value >= 0.000001 ether * bytes(text).length);\n        messages.push(Message(msg.sender, text, block.timestamp, msg.value));\n    }\n\n    function numMessages() public constant returns (uint) {\n        return messages.length;\n    }\n\n    function withdraw() public {\n        require(msg.sender == owner);\n        msg.sender.transfer(address(this).balance);\n    }\n}", "debug": "keccac_1_+\n18569430475105882587588266137607568536673111973893317399460219858819262702947_+\n4*storage_0: 0xfe76c0bf0465f62ffe95c412a823da8e0adf3c31a1502cb6181ef5c44f432024\ncalldata_BulletinBoard_4 + calldata_BulletinBoard_4: 0xcd68b554f79aa7d2045b52000004d84964ac48f0056dfeb1b1b4842a7a00\nstorage_1 +\n18569430475105882587588266137607568536673111973893317399460219858819262702947 +\n4*storage_0: 0xdc70a1de59c1308fd44b75542ea343d8dbecd74fc1abbde18c11a1bb895fffc9\ncallvalue: 0x7c7e2c4d0f75b337df09938808bfb8533f41777068303b33e86634ab49a00000\ncalldata_BulletinBoard_0: 0x6a226a4900000000000000000000000000000000000000000000000000000000\ncalldatasize_BulletinBoard: 0x4\n", "description": "A possible integer overflow exists in the function `addMessage(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/28/0x9d3473addd524da6624fc7941f658b75fe30e4c4.sol", "function": "addMessage(string)", "lineno": 3, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1393, "code": "ntract BulletinBoard {\n\n    struct Message {\n        address sender;\n        string text;\n        uint timestamp;\n        uint payment;\n    }\n\n    Message[] public messages;\n    address public owner;\n\n    constructor() public {\n        owner = msg.sender;\n    }\n\n    function addMessage(string text) public payable {\n        require(msg.value >= 0.000001 ether * bytes(text).length);\n        messages.push(Message(msg.sender, text, block.timestamp, msg.value));\n    }\n\n    function numMessages() public constant returns (uint) {\n        return messages.length;\n    }\n\n    function withdraw() public {\n        require(msg.sender == owner);\n        msg.sender.transfer(address(this).balance);\n    }\n}", "debug": "calldata_BulletinBoard_4 + calldata_BulletinBoard_4: 0x0\nmem_mem_160 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_BulletinBoard_4 + calldata_BulletinBoard_4)) +\n32: 0x8000000000000000000000000000000000000000000000000000000000000000\ncallvalue: 0x0\ncalldata_BulletinBoard_0: 0x6a226a4900000000000000000000000000000000000000000000000000000000\ncalldatasize_BulletinBoard: 0x4\n", "description": "A possible integer overflow exists in the function `addMessage(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/28/0x9d3473addd524da6624fc7941f658b75fe30e4c4.sol", "function": "addMessage(string)", "lineno": 3, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1407, "code": "ntract BulletinBoard {\n\n    struct Message {\n        address sender;\n        string text;\n        uint timestamp;\n        uint payment;\n    }\n\n    Message[] public messages;\n    address public owner;\n\n    constructor() public {\n        owner = msg.sender;\n    }\n\n    function addMessage(string text) public payable {\n        require(msg.value >= 0.000001 ether * bytes(text).length);\n        messages.push(Message(msg.sender, text, block.timestamp, msg.value));\n    }\n\n    function numMessages() public constant returns (uint) {\n        return messages.length;\n    }\n\n    function withdraw() public {\n        require(msg.sender == owner);\n        msg.sender.transfer(address(this).balance);\n    }\n}", "debug": "mem_160 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_BulletinBoard_4 + calldata_BulletinBoard_4)) +\n32: 0xd1829ef3f2848999bbefa0906050b2da11cfaf36a06f7a04882c360103400849\ncalldata_BulletinBoard_4 + calldata_BulletinBoard_4: 0x3fb0d7ec0941149eb856e803530079d73fbe80d36a9feb1a1556c069c0002\nmem_mem_160 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_BulletinBoard_4 + calldata_BulletinBoard_4)) +\n32: 0x918817f3e9be1b1c9f083aed4248a1589b0e0c80a15e1fd7778b67eef6f7f3a2\ncallvalue: 0x1ae13454c70db00f6aef1cf847694c80c0ca58a6e1176cb996d034c7694a2000\ncalldata_BulletinBoard_0: 0x6a226a4900000000000000000000000000000000000000000000000000000000\ncalldatasize_BulletinBoard: 0x4\n", "description": "A possible integer overflow exists in the function `addMessage(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/28/0x9d3473addd524da6624fc7941f658b75fe30e4c4.sol", "function": "addMessage(string)", "lineno": 3, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1424, "code": "ntract BulletinBoard {\n\n    struct Message {\n        address sender;\n        string text;\n        uint timestamp;\n        uint payment;\n    }\n\n    Message[] public messages;\n    address public owner;\n\n    constructor() public {\n        owner = msg.sender;\n    }\n\n    function addMessage(string text) public payable {\n        require(msg.value >= 0.000001 ether * bytes(text).length);\n        messages.push(Message(msg.sender, text, block.timestamp, msg.value));\n    }\n\n    function numMessages() public constant returns (uint) {\n        return messages.length;\n    }\n\n    function withdraw() public {\n        require(msg.sender == owner);\n        msg.sender.transfer(address(this).balance);\n    }\n}", "debug": "mem_160 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_BulletinBoard_4 + calldata_BulletinBoard_4)) +\n32: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa9\ncalldata_BulletinBoard_4 + calldata_BulletinBoard_4: 0x6024020b08bed142028bda8bffffffffffffffffffebffcbeb43c\nmem_mem_160 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_BulletinBoard_4 + calldata_BulletinBoard_4)) +\n32: 0x21\ncallvalue: 0x57707da8e8a168fca5c579a42889e4bfffffffffffedcf33bcb2a57c5efc000\ncalldata_BulletinBoard_0: 0x6a226a4900000000000000000000000000000000000000000000000000000000\ncalldatasize_BulletinBoard: 0x4\n", "description": "A possible integer overflow exists in the function `addMessage(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/28/0x9d3473addd524da6624fc7941f658b75fe30e4c4.sol", "function": "addMessage(string)", "lineno": 3, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1429, "code": "ntract BulletinBoard {\n\n    struct Message {\n        address sender;\n        string text;\n        uint timestamp;\n        uint payment;\n    }\n\n    Message[] public messages;\n    address public owner;\n\n    constructor() public {\n        owner = msg.sender;\n    }\n\n    function addMessage(string text) public payable {\n        require(msg.value >= 0.000001 ether * bytes(text).length);\n        messages.push(Message(msg.sender, text, block.timestamp, msg.value));\n    }\n\n    function numMessages() public constant returns (uint) {\n        return messages.length;\n    }\n\n    function withdraw() public {\n        require(msg.sender == owner);\n        msg.sender.transfer(address(this).balance);\n    }\n}", "debug": "keccac_1_+\n18569430475105882587588266137607568536673111973893317399460219858819262702947_+\n4*storage_0: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nmem_160 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_BulletinBoard_4 + calldata_BulletinBoard_4)) +\n32: 0x59f79f5a44000080c81c0000004107188021c1b8800000040220082001630413\ncalldata_BulletinBoard_4 + calldata_BulletinBoard_4: 0x18a7ac150354957a25ba376de60835f2455db90d0119dfff2501764b22d7f\nmem_mem_160 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_BulletinBoard_4 + calldata_BulletinBoard_4)) +\n32: 0x2f7668bece91efe33dffffe079106f34e8b0d2be530340dffffd847f398fbd1\ncallvalue: 0x328cfb5f834f91264e0d73bd1e6c6e72ac5e54ef277d16b364f225e7a1b2f000\ncalldata_BulletinBoard_0: 0x6a226a4900000000000000000000000000000000000000000000000000000000\ncalldatasize_BulletinBoard: 0x4\n", "description": "A possible integer overflow exists in the function `addMessage(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/28/0x9d3473addd524da6624fc7941f658b75fe30e4c4.sol", "function": "addMessage(string)", "lineno": 3, "title": "Integer Overflow ", "type": "Warning"}], "success": true}