{
  "contract": "0x0c178237d47172440c5792526c4952a279fdadf1",
  "tool": "mythril",
  "start": 1563494954.3542604,
  "end": 1563494973.5694258,
  "duration": 19.215165376663208,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 5918,
        "code": "(uint) {\n     ",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffeffffffffffffffffffffffffffffffffffffe\ncalldata_TPCToken_4: 0x2\nstorage_5: 0x1\nstorage_0: 0x0\ncalldata_TPCToken_0: 0x6d1b229d00000000000000000000000000000000000000000000000000000000\ncalldatasize_TPCToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/6/0x0c178237d47172440c5792526c4952a279fdadf1.sol",
        "function": "burnTokens(uint256)",
        "lineno": 105,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 5936,
        "code": "ure r",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xf5be733820a8f284ff83fbeabdf90ffe681005ee01a2a9f03f1333e1078c007c\ncalldata_TPCToken_32 + 36: 0xd8822bb1e12165d0e10bf8a4b0fc6fbe89efe164fa89a3e682e425a964003d23\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TPCToken_32_+_4: 0xc0edbbdae05a3290112206d5713049bd25fdfd777ae90755fad7a58544233fbb\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TPCToken_4: 0xd8822bb1e12165d0e10bf8a4b0fc6fbe89efe164fa89a3e682e425a964003d23\nstorage_0: 0xff00\ncalldata_TPCToken_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_TPCToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `transferFrom(address,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/6/0x0c178237d47172440c5792526c4952a279fdadf1.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 111,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 5949,
        "code": "t64) {\n       ",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x9b6f802d9e4606141000d9119b8f7ffd8e0952049ed1e0300223e19fffe2003c\ncalldata_TPCToken_32 + 36: 0x362f5fa53cedcd604d71e5b4ef1b73dc89f8a902961b06625e7792d5fed2b421\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TPCToken_32_+_4: 0xe0ac9ff3f408a32ac331a586cf20f3ca6dfaa90a4e51091910881007f936e2b5\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TPCToken_4: 0x362f5fa53cedcd604d71e5b4ef1b73dc89f8a902961b06625e7792d5fed2b421\nstorage_0: 0xff00\ncalldata_TPCToken_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_TPCToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/6/0x0c178237d47172440c5792526c4952a279fdadf1.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 111,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}