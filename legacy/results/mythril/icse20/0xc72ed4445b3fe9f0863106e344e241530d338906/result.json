{
  "contract": "0xc72ed4445b3fe9f0863106e344e241530d338906",
  "tool": "mythril",
  "start": 1563470023.2250369,
  "end": 1563470071.59713,
  "duration": 48.372093200683594,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 800,
        "code": "approve(_spender, _value)) {\n            spender.receiveApproval(msg.sender, _value, this, _extraData);\n            return true;\n        }\n    }\n}\n\ncontract FrozenToken is StandardToken, Ownable {\n    mapping(address => bool) frozens;\n    mapping(address => uint256) frozenTokens;\n\n    event FrozenAddress(address addr);\n    even",
        "debug": "calldata_tokenRecipient_32 + 36: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_tokenRecipient_0: 0xcae9ca5100000000000000000000000000000000000000000000000000000000\ncalldatasize_tokenRecipient: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `approveAndCall(address,uint256,bytes)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/3/0xc72ed4445b3fe9f0863106e344e241530d338906.sol",
        "function": "approveAndCall(address,uint256,bytes)",
        "lineno": 182,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 3679,
        "code": "l) frozens;\n    mapping(address => uint256) frozenTokens;\n\n  ",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/3/0xc72ed4445b3fe9f0863106e344e241530d338906.sol",
        "function": "approveAndCall(address,uint256,bytes)",
        "lineno": 190,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 4374,
        "code": "    return a -",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncalldata_tokenRecipient_32 + 4: 0x1\ncalldata_tokenRecipient_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncalldatasize_tokenRecipient: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/3/0xc72ed4445b3fe9f0863106e344e241530d338906.sol",
        "function": "transfer(address,uint256)",
        "lineno": 20,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 4392,
        "code": "= a);",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_tokenRecipient_4: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncalldata_tokenRecipient_32 + 4: 0x57f25cd000000000000000000000000000000000000000000000000000000000\ncalldata_tokenRecipient_0: 0xd73dd62300000000000000000000000000000000000000000000000000000000\ncalldatasize_tokenRecipient: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `increaseApproval(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/3/0xc72ed4445b3fe9f0863106e344e241530d338906.sol",
        "function": "increaseApproval(address,uint256)",
        "lineno": 25,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 4405,
        "code": "turn c;\n    }\n",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_tokenRecipient_4: 0x1\ncalldata_tokenRecipient_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_tokenRecipient_0: 0xd73dd62300000000000000000000000000000000000000000000000000000000\ncalldatasize_tokenRecipient: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/3/0xc72ed4445b3fe9f0863106e344e241530d338906.sol",
        "function": "increaseApproval(address,uint256)",
        "lineno": 26,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}