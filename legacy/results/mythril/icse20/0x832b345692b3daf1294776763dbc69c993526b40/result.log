{"error": null, "issues": [{"address": 1023, "code": "oTotalSupply(uint _value) public {\n        require(msg.sender == creator);\n        require(_value > 0);", "debug": "calldata_UNTY_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_UNTY_0: 0x27afacad00000000000000000000000000000000000000000000000000000000\ncalldatasize_UNTY: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `setRewardsID(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/17/0x832b345692b3daf1294776763dbc69c993526b40.sol", "function": "setRewardsID(string)", "lineno": 140, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1760, "code": ";\n        Approval(msg.sender, _spender, _value);\n\n        if(!_spender.call(bytes4(bytes32(sha3(\"receiveApproval(address,uint256,address,bytes)\"))), msg.sender, _value, this, _extraData)) { throw; }\n        return true;\n    }\n}", "debug": "calldata_UNTY_32 + 36: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_UNTY_0: 0xcae9ca5100000000000000000000000000000000000000000000000000000000\ncalldatasize_UNTY: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `approveAndCall(address,uint256,bytes)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/17/0x832b345692b3daf1294776763dbc69c993526b40.sol", "function": "approveAndCall(address,uint256,bytes)", "lineno": 149, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2760, "code": " function approveAndCall(addr", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xb2c81e3be60b809eebca250ae5f3958de8241f3c0942692d3cecd1fd00743211\ncalldata_UNTY_4: 0x93931c13e507cbbcbf74d9eee4fb920eeaef84aa5110428da2eddb017d5ebcdd\nstorage_7: 0x0\ncaller: 0x0\ncalldata_UNTY_0: 0x11ab19f800000000000000000000000000000000000000000000000000000000\ncalldatasize_UNTY: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `addTokenToTotalSupply(uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/17/0x832b345692b3daf1294776763dbc69c993526b40.sol", "function": "addTokenToTotalSupply(uint256)", "lineno": 148, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2831, "code": "lue, bytes _extraDat", "debug": "storage_2: 0xb2c81e3be60b809eebca250ae5f3958de8241f3c0942692d3cecd1fd00743211\ncalldata_UNTY_4: 0x93931c13e507cbbcbf74d9eee4fb920eeaef84aa5110428da2eddb017d5ebcdd\nstorage_7: 0x0\ncaller: 0x0\ncalldata_UNTY_0: 0x11ab19f800000000000000000000000000000000000000000000000000000000\ncalldatasize_UNTY: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `addTokenToTotalSupply(uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/17/0x832b345692b3daf1294776763dbc69c993526b40.sol", "function": "addTokenToTotalSupply(uint256)", "lineno": 148, "title": "Integer Overflow ", "type": "Warning"}, {"address": 3136, "code": "[_from][msg.sender] -= ", "debug": "calldata_UNTY_32 + 36: 0x800000000000000003ffd0badcb9b7000000002781000000000000000006bfff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_UNTY_32_+_4: 0x800000000000000000008eb2e34648ee0801030820000000000000000000a000\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x800000000000000003ffd0badcb9b7000000002781000000000000000006bfff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_UNTY_4: 0x800000000000000003ffd0badcb9b7000000002781000000000000000006bfff\ncalldata_UNTY_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_UNTY: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `transferFrom(address,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/17/0x832b345692b3daf1294776763dbc69c993526b40.sol", "function": "transferFrom(address,address,uint256)", "lineno": 86, "title": "Integer Overflow ", "type": "Warning"}, {"address": 3752, "code": "     ", "debug": "calldata_UNTY_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_UNTY_0: 0x677342ce00000000000000000000000000000000000000000000000000000000\ncalldatasize_UNTY: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `sqrt(uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/17/0x832b345692b3daf1294776763dbc69c993526b40.sol", "function": "sqrt(uint256)", "lineno": 78, "title": "Integer Overflow ", "type": "Warning"}, {"address": 3792, "code": "ress ", "debug": "The exception is triggered under the following conditions:\n\ncalldata_UNTY_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_UNTY_0: 0x677342ce00000000000000000000000000000000000000000000000000000000\ncalldatasize_UNTY: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/17/0x832b345692b3daf1294776763dbc69c993526b40.sol", "function": "sqrt(uint256)", "lineno": 82, "title": "Exception state", "type": "Informational"}, {"address": 4061, "code": "ue/100) {\n ", "debug": "calldata_UNTY_32 + 4: 0x200024448e041042b936adc03422252c124014908019505c2524442448d00412\ncalldata_UNTY_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncalldatasize_UNTY: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `transfer(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/17/0x832b345692b3daf1294776763dbc69c993526b40.sol", "function": "transfer(address,uint256)", "lineno": 51, "title": "Integer Overflow ", "type": "Warning"}, {"address": 5361, "code": " true;\n    }\n}", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/17/0x832b345692b3daf1294776763dbc69c993526b40.sol", "function": "approveAndCall(address,uint256,bytes)", "lineno": 153, "title": "Message call to external contract", "type": "Warning"}, {"address": 5561, "code": "       throw;\n    }\n\n    string public name;                  \n    uint8 public decimals;              \n    string public symbol;\n    string public version = 'v1.0';\n    address public creator;\n    mapping(address => string) public rewardIdMap;\n\n    function UNTY() {\n        totalSupply = 0;\n        balances[msg.sender] = totalSupply;\n        name = \"Unity UNTY\";\n        decimals = 4;\n        symbol = \"UNTY\";\n        creator = msg.sender;\n    }\n    \n    function setRewardsID(string _rewardsId) public {\n        rewardIdMap[msg.sender] = _rewardsId;\n    }\n    \n    \n    function addTokenToTotalSupply(uint _value) public {\n        require(msg.sender == creator);\n        require(_value > 0);\n        balances[msg.sender] = balances[msg.sender] + _value;\n        totalSupply = totalSupply + _value;\n    }\n\n    /* Approves and then calls the receiving contract */\n    function approveAndCall(address _spender, uint256 _value, bytes _extraData) returns (bool success) {\n        allowed[msg.sender][_spender] = _value;\n        Approval(msg.sender, _spender, _value);\n\n        if(!_spender.call(bytes4(bytes32(sha3(\"receiveApproval(address,uint256,address,bytes)\"))), msg.sender, _value, this, _extraData)) { throw; }\n        return true;\n    }\n}", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xbac1c3147749165dd7d1977fffffffffffffffffffffffffffffffffffffffc5\nkeccac_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xff13e6a7459ae5a4c49c419171c3f89100a371508000000000129200000219e2\ncalldata_UNTY_0: 0x27afacad00000000000000000000000000000000000000000000000000000000\ncalldatasize_UNTY: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `setRewardsID(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/17/0x832b345692b3daf1294776763dbc69c993526b40.sol", "function": "setRewardsID(string)", "lineno": 116, "title": "Integer Overflow ", "type": "Warning"}, {"address": 5590, "code": "       throw;\n    }\n\n    string public name;                  \n    uint8 public decimals;              \n    string public symbol;\n    string public version = 'v1.0';\n    address public creator;\n    mapping(address => string) public rewardIdMap;\n\n    function UNTY() {\n        totalSupply = 0;\n        balances[msg.sender] = totalSupply;\n        name = \"Unity UNTY\";\n        decimals = 4;\n        symbol = \"UNTY\";\n        creator = msg.sender;\n    }\n    \n    function setRewardsID(string _rewardsId) public {\n        rewardIdMap[msg.sender] = _rewardsId;\n    }\n    \n    \n    function addTokenToTotalSupply(uint _value) public {\n        require(msg.sender == creator);\n        require(_value > 0);\n        balances[msg.sender] = balances[msg.sender] + _value;\n        totalSupply = totalSupply + _value;\n    }\n\n    /* Approves and then calls the receiving contract */\n    function approveAndCall(address _spender, uint256 _value, bytes _extraData) returns (bool success) {\n        allowed[msg.sender][_spender] = _value;\n        Approval(msg.sender, _spender, _value);\n\n        if(!_spender.call(bytes4(bytes32(sha3(\"receiveApproval(address,uint256,address,bytes)\"))), msg.sender, _value, this, _extraData)) { throw; }\n        return true;\n    }\n}", "debug": "calldata_UNTY_4 + calldata_UNTY_4: 0x8000000000000000000000000000000000000000000000000000000000000000\ncalldata_UNTY_0: 0x27afacad00000000000000000000000000000000000000000000000000000000\ncalldatasize_UNTY: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `setRewardsID(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/17/0x832b345692b3daf1294776763dbc69c993526b40.sol", "function": "setRewardsID(string)", "lineno": 116, "title": "Integer Overflow ", "type": "Warning"}, {"address": 5604, "code": "       throw;\n    }\n\n    string public name;                  \n    uint8 public decimals;              \n    string public symbol;\n    string public version = 'v1.0';\n    address public creator;\n    mapping(address => string) public rewardIdMap;\n\n    function UNTY() {\n        totalSupply = 0;\n        balances[msg.sender] = totalSupply;\n        name = \"Unity UNTY\";\n        decimals = 4;\n        symbol = \"UNTY\";\n        creator = msg.sender;\n    }\n    \n    function setRewardsID(string _rewardsId) public {\n        rewardIdMap[msg.sender] = _rewardsId;\n    }\n    \n    \n    function addTokenToTotalSupply(uint _value) public {\n        require(msg.sender == creator);\n        require(_value > 0);\n        balances[msg.sender] = balances[msg.sender] + _value;\n        totalSupply = totalSupply + _value;\n    }\n\n    /* Approves and then calls the receiving contract */\n    function approveAndCall(address _spender, uint256 _value, bytes _extraData) returns (bool success) {\n        allowed[msg.sender][_spender] = _value;\n        Approval(msg.sender, _spender, _value);\n\n        if(!_spender.call(bytes4(bytes32(sha3(\"receiveApproval(address,uint256,address,bytes)\"))), msg.sender, _value, this, _extraData)) { throw; }\n        return true;\n    }\n}", "debug": "calldata_UNTY_4 + calldata_UNTY_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\ncalldata_UNTY_0: 0x27afacad00000000000000000000000000000000000000000000000000000000\ncalldatasize_UNTY: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `setRewardsID(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/17/0x832b345692b3daf1294776763dbc69c993526b40.sol", "function": "setRewardsID(string)", "lineno": 116, "title": "Integer Overflow ", "type": "Warning"}, {"address": 5626, "code": "       throw;\n    }\n\n    string public name;                  \n    uint8 public decimals;              \n    string public symbol;\n    string public version = 'v1.0';\n    address public creator;\n    mapping(address => string) public rewardIdMap;\n\n    function UNTY() {\n        totalSupply = 0;\n        balances[msg.sender] = totalSupply;\n        name = \"Unity UNTY\";\n        decimals = 4;\n        symbol = \"UNTY\";\n        creator = msg.sender;\n    }\n    \n    function setRewardsID(string _rewardsId) public {\n        rewardIdMap[msg.sender] = _rewardsId;\n    }\n    \n    \n    function addTokenToTotalSupply(uint _value) public {\n        require(msg.sender == creator);\n        require(_value > 0);\n        balances[msg.sender] = balances[msg.sender] + _value;\n        totalSupply = totalSupply + _value;\n    }\n\n    /* Approves and then calls the receiving contract */\n    function approveAndCall(address _spender, uint256 _value, bytes _extraData) returns (bool success) {\n        allowed[msg.sender][_spender] = _value;\n        Approval(msg.sender, _spender, _value);\n\n        if(!_spender.call(bytes4(bytes32(sha3(\"receiveApproval(address,uint256,address,bytes)\"))), msg.sender, _value, this, _extraData)) { throw; }\n        return true;\n    }\n}", "debug": "calldata_UNTY_4 + calldata_UNTY_4: 0x4000f04100100000000000000000000000000000d6401413fffffffffffffe0\nkeccac_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_UNTY_0: 0x27afacad00000000000000000000000000000000000000000000000000000000\ncalldatasize_UNTY: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `setRewardsID(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/17/0x832b345692b3daf1294776763dbc69c993526b40.sol", "function": "setRewardsID(string)", "lineno": 116, "title": "Integer Overflow ", "type": "Warning"}], "success": true}