{
  "contract": "0x0230832ce8592a0e8c3a654b4ec7f3fdf2bbfbc0",
  "tool": "mythril",
  "start": 1563784686.2606382,
  "end": 1563786180.1578856,
  "duration": 1493.8972473144531,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 180,
        "code": "amp) public \n\tisValidHashsecret(_password, _addressOfInitiator) \n\tisTxValid(_addressOfInitiator, _blockTimestamp) \n\treturns(bool) {\n\t    confirmedInits[_addressOfInitiator][_txHash].addressFrom = inits[_addressOfInitiator].addressFrom;\n\t    confirmedInits[_addressOfInitiator][_txHash].addressTo = inits[_addressOfInitiator].addressTo;\n\t    confirmedInits[_addressOfInitiator][_txHash].isShow = inits[_addressOfInitiator].isShow;\n\t    confirmedInits[_addressOfInitiator][_txHash].isInit = inits[_addressOfInitiator].isInit;\n\t    confirmedInits[_addressOfInitiator][_txHash].amount = inits[_addressOfInitiator].amount;\n\t    confirmedInits[_addressOfInitiator][_txHash].blockTimestamp = inits[_addressOfInitiator].blockTimestamp;\n\t    confirmedInits[_addressOfInitiator][_txHash].hashSecret = inits[_addressOfInitiator].hashSecret;\n\t    \n\t    delete(inits[_addressOfInitiator]);\n\t    \n\t    return true;\n\t}\n}",
        "debug": "calldata_InitAtomicSwap_32 + 4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_InitAtomicSwap_0: 0x1800a44300000000000000000000000000000000000000000000000000000000\ncalldatasize_InitAtomicSwap: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `confirmInit(address,string,bytes32,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/48/0x0230832ce8592a0e8c3a654b4ec7f3fdf2bbfbc0.sol",
        "function": "confirmInit(address,string,bytes32,uint256)",
        "lineno": 103,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 640,
        "code": "ount, string _password) public \n    returns(bytes32) {\n        \n        if(inits[_addressFrom].isInit == true) {\n            return 0;\n        }\n        inits[_addressFrom].addressFrom = _addressFrom;\n        inits[_addressFrom].addressTo = _addressTo;\n        inits[_addressFrom].isShow = false;\n        inits[_addressFrom].isInit = true;\n        inits[_addressFrom].blockTimestamp = now;\n        inits[_addressFrom].amount = _amount;\n        \n        inits[_addressFrom].hashSecret = keccak256(abi.encodePacked(\n            _addressFrom, \n            _addressTo, \n            _amount, \n            inits[_addressFrom].blockTimestamp, \n            _password));\n        \n        return inits[_addressFrom].hashSecret;\n\t}\n\t\n\t//getInit - this function returns data about order of the special address\n\tfunction ",
        "debug": "calldata_InitAtomicSwap_32 + 68: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_InitAtomicSwap_0: 0x87e3a20f00000000000000000000000000000000000000000000000000000000\ncalldatasize_InitAtomicSwap: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `addInit(address,address,uint256,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/48/0x0230832ce8592a0e8c3a654b4ec7f3fdf2bbfbc0.sol",
        "function": "addInit(address,address,uint256,string)",
        "lineno": 68,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 652,
        "code": "ount, string _password) public \n    returns(bytes32) {\n        \n        if(inits[_addressFrom].isInit == true) {\n            return 0;\n        }\n        inits[_addressFrom].addressFrom = _addressFrom;\n        inits[_addressFrom].addressTo = _addressTo;\n        inits[_addressFrom].isShow = false;\n        inits[_addressFrom].isInit = true;\n        inits[_addressFrom].blockTimestamp = now;\n        inits[_addressFrom].amount = _amount;\n        \n        inits[_addressFrom].hashSecret = keccak256(abi.encodePacked(\n            _addressFrom, \n            _addressTo, \n            _amount, \n            inits[_addressFrom].blockTimestamp, \n            _password));\n        \n        return inits[_addressFrom].hashSecret;\n\t}\n\t\n\t//getInit - this function returns data about order of the special address\n\tfunction ",
        "debug": "calldata_InitAtomicSwap_4 + calldata_InitAtomicSwap_32 + 68: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8\ncalldata_InitAtomicSwap_0: 0x87e3a20f00000000000000000000000000000000000000000000000000000000\ncalldatasize_InitAtomicSwap: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `addInit(address,address,uint256,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/48/0x0230832ce8592a0e8c3a654b4ec7f3fdf2bbfbc0.sol",
        "function": "addInit(address,address,uint256,string)",
        "lineno": 68,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 661,
        "code": "ount, string _password) public \n    returns(bytes32) {\n        \n        if(inits[_addressFrom].isInit == true) {\n            return 0;\n        }\n        inits[_addressFrom].addressFrom = _addressFrom;\n        inits[_addressFrom].addressTo = _addressTo;\n        inits[_addressFrom].isShow = false;\n        inits[_addressFrom].isInit = true;\n        inits[_addressFrom].blockTimestamp = now;\n        inits[_addressFrom].amount = _amount;\n        \n        inits[_addressFrom].hashSecret = keccak256(abi.encodePacked(\n            _addressFrom, \n            _addressTo, \n            _amount, \n            inits[_addressFrom].blockTimestamp, \n            _password));\n        \n        return inits[_addressFrom].hashSecret;\n\t}\n\t\n\t//getInit - this function returns data about order of the special address\n\tfunction ",
        "debug": "calldata_InitAtomicSwap_4 + calldata_InitAtomicSwap_32 + 68: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc1\ncalldata_InitAtomicSwap_0: 0x87e3a20f00000000000000000000000000000000000000000000000000000000\ncalldatasize_InitAtomicSwap: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `addInit(address,address,uint256,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/48/0x0230832ce8592a0e8c3a654b4ec7f3fdf2bbfbc0.sol",
        "function": "addInit(address,address,uint256,string)",
        "lineno": 68,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 667,
        "code": "ount, string _password) public \n    returns(bytes32) {\n        \n        if(inits[_addressFrom].isInit == true) {\n            return 0;\n        }\n        inits[_addressFrom].addressFrom = _addressFrom;\n        inits[_addressFrom].addressTo = _addressTo;\n        inits[_addressFrom].isShow = false;\n        inits[_addressFrom].isInit = true;\n        inits[_addressFrom].blockTimestamp = now;\n        inits[_addressFrom].amount = _amount;\n        \n        inits[_addressFrom].hashSecret = keccak256(abi.encodePacked(\n            _addressFrom, \n            _addressTo, \n            _amount, \n            inits[_addressFrom].blockTimestamp, \n            _password));\n        \n        return inits[_addressFrom].hashSecret;\n\t}\n\t\n\t//getInit - this function returns data about order of the special address\n\tfunction ",
        "debug": "calldata_InitAtomicSwap_4 + calldata_InitAtomicSwap_32 + 68: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff41\ncalldata_InitAtomicSwap_0: 0x87e3a20f00000000000000000000000000000000000000000000000000000000\ncalldatasize_InitAtomicSwap: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `addInit(address,address,uint256,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/48/0x0230832ce8592a0e8c3a654b4ec7f3fdf2bbfbc0.sol",
        "function": "addInit(address,address,uint256,string)",
        "lineno": 68,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 4572,
        "code": "  _amount, \n            inits[_addressFrom].blockTimestamp, \n            _password));\n        \n        return inits[_addressFrom].hashSecret;\n\t}\n\t\n\t//getInit - this fun",
        "debug": "calldata_InitAtomicSwap_4 + calldata_InitAtomicSwap_32 + 68: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff21\nstorage_1 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_InitAtomicSwap_4: 0x0\ncalldata_InitAtomicSwap_0: 0x87e3a20f00000000000000000000000000000000000000000000000000000000\ncalldatasize_InitAtomicSwap: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `addInit(address,address,uint256,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/48/0x0230832ce8592a0e8c3a654b4ec7f3fdf2bbfbc0.sol",
        "function": "addInit(address,address,uint256,string)",
        "lineno": 84,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 4703,
        "code": "  _amount, \n            inits[_addressFrom].blockTimestamp, \n            _password));\n        \n        return inits[_addressFrom].hashSecret;\n\t}\n\t\n\t//getInit - this fun",
        "debug": "calldata_InitAtomicSwap_4 + calldata_InitAtomicSwap_32 + 68: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01\nstorage_1 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_InitAtomicSwap_4: 0x0\ncalldata_InitAtomicSwap_0: 0x87e3a20f00000000000000000000000000000000000000000000000000000000\ncalldatasize_InitAtomicSwap: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `addInit(address,address,uint256,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/48/0x0230832ce8592a0e8c3a654b4ec7f3fdf2bbfbc0.sol",
        "function": "addInit(address,address,uint256,string)",
        "lineno": 84,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 4709,
        "code": "  _amount, \n            inits[_addressFrom].blockTimestamp, \n            _password));\n        \n        return inits[_addressFrom].hashSecret;\n\t}\n\t\n\t//getInit - this fun",
        "debug": "calldata_InitAtomicSwap_4 + calldata_InitAtomicSwap_32 + 68: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffee1\nstorage_1 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_InitAtomicSwap_4: 0x0\ncalldata_InitAtomicSwap_0: 0x87e3a20f00000000000000000000000000000000000000000000000000000000\ncalldatasize_InitAtomicSwap: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `addInit(address,address,uint256,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/48/0x0230832ce8592a0e8c3a654b4ec7f3fdf2bbfbc0.sol",
        "function": "addInit(address,address,uint256,string)",
        "lineno": 84,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 4715,
        "code": "  _amount, \n            inits[_addressFrom].blockTimestamp, \n            _password));\n        \n        return inits[_addressFrom].hashSecret;\n\t}\n\t\n\t//getInit - this fun",
        "debug": "calldata_InitAtomicSwap_4 + calldata_InitAtomicSwap_32 + 68: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffec1\nstorage_1 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_InitAtomicSwap_4: 0x0\ncalldata_InitAtomicSwap_0: 0x87e3a20f00000000000000000000000000000000000000000000000000000000\ncalldatasize_InitAtomicSwap: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `addInit(address,address,uint256,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/48/0x0230832ce8592a0e8c3a654b4ec7f3fdf2bbfbc0.sol",
        "function": "addInit(address,address,uint256,string)",
        "lineno": 84,
        "title": "Integer Overflow ",
        "type": "Warning"
      }
    ],
    "success": true
  }
}