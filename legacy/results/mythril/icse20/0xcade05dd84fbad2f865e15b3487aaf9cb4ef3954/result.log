{"error": null, "issues": [{"address": 600, "code": " _to, uint256 _value, string _test1) public returns (bool) {\n     genCode = _value;\n     test1 = _test1;\n     \n     return true;\n }\n function getGenCode() external v", "debug": "calldata_PingToken_32 + 36: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_PingToken_0: 0x461ad9e900000000000000000000000000000000000000000000000000000000\ncalldatasize_PingToken: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `_function_0x461ad9e9`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/41/0xcade05dd84fbad2f865e15b3487aaf9cb4ef3954.sol", "function": "_function_0x461ad9e9", "lineno": 30, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1547, "code": " -= cost;\n    pings", "debug": "storage_1: 0x9\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xa\ncalldata_PingToken_0: 0x5c36b18600000000000000000000000000000000000000000000000000000000\ncalldatasize_PingToken: 0x4\ncallvalue: 0x0\n", "description": "A possible integer underflow exists in the function `ping()`.\nThe subtraction may result in a value < 0.", "filename": "/unique_chucks/41/0xcade05dd84fbad2f865e15b3487aaf9cb4ef3954.sol", "function": "ping()", "lineno": 47, "title": "Integer Underflow", "type": "Warning"}, {"address": 1643, "code": ";\n  }\n}", "debug": "storage_0: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xa\ncalldata_PingToken_0: 0x5c36b18600000000000000000000000000000000000000000000000000000000\ncalldatasize_PingToken: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `ping()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/41/0xcade05dd84fbad2f865e15b3487aaf9cb4ef3954.sol", "function": "ping()", "lineno": 50, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2340, "code": "   emit Transfer(msg.s", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_PingToken_4: 0x9c9efb7ae5acd378025256a3945f5859076e809243093d9ecae2636c9fd28979\ncalldata_PingToken_32 + 4: 0xc290137095b13347e55005a6dc184559e0489f1233480050d0fb4bba17d34179\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xc290137095b13347e55005a6dc184559e0489f1233480050d0fb4bba17d34179\ncalldata_PingToken_4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_PingToken_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncalldatasize_PingToken: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `transfer(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/41/0xcade05dd84fbad2f865e15b3487aaf9cb4ef3954.sol", "function": "transfer(address,uint256)", "lineno": 27, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2592, "code": "ontract PingToken {\n  \n  event Pong(uint256 pong);\n  event Transfer(address indexed from, address indexed to, uint256 value);\nuint256 public pings;\n  uint256 public totalSupply;\n  \n  string public constant name = \"PingToken\";\n  string public constant symbol = \"PING\";\n  uint8 public constant decimals = 18;\n  uint256 public constant INITIAL_SUPPLY = 100000000 * (10 ** uint256(decimals)); // 100M\n  \n  uint256 public genCode = 0;\n  string public test1 = \"ac\";\n  \n  mapping(address => uint256) balances;\nconstructor() public {\n    totalSupply = INITIAL_SUPPLY;\n    balances[msg.sender] = INITIAL_SUPPLY;\n  }\nfunction transfer(address _to, uint256 _value) public returns (bool) {\n    require(_to != address(0));\n    require(_value <= balances[msg.sender]);\nbalances[msg.sender] = balances[msg.sender] - _value;\n    balances[_to] = balances[_to] + _value;\n    emit Transfer(msg.sender, _to, _value);\n    return true;\n  }\n function saveGenCode (address _to, uint256 _value, string _test1) public returns (bool) {\n     genCode = _value;\n     test1 = _test1;\n     \n     return true;\n }\n function getGenCode() external view returns (uint256) {\n     return genCode;\n }\nfunction balanceOf(address _owner) public view returns (uint256 balance) {\n    return balances[_owner];\n  }\nfunction ping() external returns (uint256) {\n    // 1 token to use ping function\n    uint256 cost = 1 * (10 ** uint256(decimals));\n    require(cost <= balances[msg.sender]);\n    totalSupply -= cost;\n    balances[msg.sender] -= cost;\n    pings++;\n    emit Pong(pings);\n    return pings;\n  }\n}", "debug": "calldata_PingToken_4 + calldata_PingToken_32 + 36: 0x8000000000000000000000000000000000000000000000000000000000000000\ncalldata_PingToken_0: 0x461ad9e900000000000000000000000000000000000000000000000000000000\ncalldatasize_PingToken: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `_function_0x461ad9e9`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/41/0xcade05dd84fbad2f865e15b3487aaf9cb4ef3954.sol", "function": "_function_0x461ad9e9", "lineno": 2, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2606, "code": "ontract PingToken {\n  \n  event Pong(uint256 pong);\n  event Transfer(address indexed from, address indexed to, uint256 value);\nuint256 public pings;\n  uint256 public totalSupply;\n  \n  string public constant name = \"PingToken\";\n  string public constant symbol = \"PING\";\n  uint8 public constant decimals = 18;\n  uint256 public constant INITIAL_SUPPLY = 100000000 * (10 ** uint256(decimals)); // 100M\n  \n  uint256 public genCode = 0;\n  string public test1 = \"ac\";\n  \n  mapping(address => uint256) balances;\nconstructor() public {\n    totalSupply = INITIAL_SUPPLY;\n    balances[msg.sender] = INITIAL_SUPPLY;\n  }\nfunction transfer(address _to, uint256 _value) public returns (bool) {\n    require(_to != address(0));\n    require(_value <= balances[msg.sender]);\nbalances[msg.sender] = balances[msg.sender] - _value;\n    balances[_to] = balances[_to] + _value;\n    emit Transfer(msg.sender, _to, _value);\n    return true;\n  }\n function saveGenCode (address _to, uint256 _value, string _test1) public returns (bool) {\n     genCode = _value;\n     test1 = _test1;\n     \n     return true;\n }\n function getGenCode() external view returns (uint256) {\n     return genCode;\n }\nfunction balanceOf(address _owner) public view returns (uint256 balance) {\n    return balances[_owner];\n  }\nfunction ping() external returns (uint256) {\n    // 1 token to use ping function\n    uint256 cost = 1 * (10 ** uint256(decimals));\n    require(cost <= balances[msg.sender]);\n    totalSupply -= cost;\n    balances[msg.sender] -= cost;\n    pings++;\n    emit Pong(pings);\n    return pings;\n  }\n}", "debug": "calldata_PingToken_4 + calldata_PingToken_32 + 36: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\ncalldata_PingToken_0: 0x461ad9e900000000000000000000000000000000000000000000000000000000\ncalldatasize_PingToken: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `_function_0x461ad9e9`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/41/0xcade05dd84fbad2f865e15b3487aaf9cb4ef3954.sol", "function": "_function_0x461ad9e9", "lineno": 2, "title": "Integer Overflow ", "type": "Warning"}], "success": true}