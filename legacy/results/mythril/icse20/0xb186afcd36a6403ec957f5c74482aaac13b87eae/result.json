{
  "contract": "0xb186afcd36a6403ec957f5c74482aaac13b87eae",
  "tool": "mythril",
  "start": 1563630296.9582198,
  "end": 1563630403.0480542,
  "duration": 106.08983445167542,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 332,
        "code": ";\nif (this.balance < eth_minimum)",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xc6b8e86617ef8c1bf3f8900314be6017dfbbd1ffd59ba8215a9339ce807ec63d\ncallvalue: 0x90912e27910826d1f9615003ea297437d823d1a01efab011fca2554862a0c835\nstorage_2: 0x0\ncalldata_EnjinBuyer_0: 0x7f00000000000000000000000000000000000000000000000000000000\ncalldatasize_EnjinBuyer: 0x4\n",
        "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/28/0xb186afcd36a6403ec957f5c74482aaac13b87eae.sol",
        "function": "fallback",
        "lineno": 81,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 409,
        "code": "turn;\nif (kill_switch) return;\nrequire(sale ",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x807ffffffffffffffefffffffffffffffffffffffffffffffffffd\ncallvalue: 0x7fffffffffff7fffffffffffffff000000000000000000000000000000000001\nstorage_2: 0x0\ncalldata_EnjinBuyer_0: 0x1f00000000000000000000000000000000000000000000000000000000\ncalldatasize_EnjinBuyer: 0x4\n",
        "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/28/0xb186afcd36a6403ec957f5c74482aaac13b87eae.sol",
        "function": "fallback",
        "lineno": 82,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 715,
        "code": "be getting a full refund or partial r",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/28/0xb186afcd36a6403ec957f5c74482aaac13b87eae.sol",
        "function": "fallback",
        "lineno": 91,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 874,
        "debug": "callvalue: 0x90912e27910826d1f9615003ea297437d823d1a01efab011fca2554862a0c835\nstorage_5: 0xc6b8e86617ef8c1bf3f8900314be6017dfbbd1ffd59ba8215a9339ce807ec63d\nstorage_9: 0x0\ncaller: 0x0\nstorage_2: 0xff00\ncalldata_EnjinBuyer_0: 0x7f00000000000000000000000000000000000000000000000000000000\ncalldatasize_EnjinBuyer: 0x4\n",
        "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/28/0xb186afcd36a6403ec957f5c74482aaac13b87eae.sol",
        "function": "fallback",
        "lineno": 98,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1006,
        "code": "sword, uint256 transfer_amount){\nrequire(msg.sender == developer || sha3(password) == password_hash);\nmsg.sender.transfer(transfer_amount);\n}\n\n// Use with caution - use this withdra",
        "debug": "calldata_EnjinBuyer_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_EnjinBuyer_0: 0x2a707d2c00000000000000000000000000000000000000000000000000000000\ncalldatasize_EnjinBuyer: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `personal_withdraw(string,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/28/0xb186afcd36a6403ec957f5c74482aaac13b87eae.sol",
        "function": "personal_withdraw(string,uint256)",
        "lineno": 38,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1852,
        "code": "ring password) {\nrequire(msg.sender == developer || sha3(password) == password_hash);\nkill_switch = true;\n}\n\nfunction personal_withdraw(string",
        "debug": "calldata_EnjinBuyer_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_EnjinBuyer_0: 0xd4701c3500000000000000000000000000000000000000000000000000000000\ncalldatasize_EnjinBuyer: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `activate_kill_switch(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/28/0xb186afcd36a6403ec957f5c74482aaac13b87eae.sol",
        "function": "activate_kill_switch(string)",
        "lineno": 33,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2526,
        "code": "_eth_value;\nrefund_contract_eth_value -= balances_for_refund[msg.sender];\nrefund",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_5: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_EnjinBuyer_0: 0x50d7d29000000000000000000000000000000000000000000000000000000000\ncalldatasize_EnjinBuyer: 0x4\nstorage_4: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/28/0xb186afcd36a6403ec957f5c74482aaac13b87eae.sol",
        "function": "withdraw_refund()",
        "lineno": 71,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2602,
        "code": "h_value -= eth_to_withdraw;\nbalances_for_refund[msg.sender] ",
        "debug": "storage_4: 0xfffffffffffffffffffffffffffffffffffffffffffe\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x100000000000000000000000000000000000000000000\nstorage_5: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_EnjinBuyer_0: 0x50d7d29000000000000000000000000000000000000000000000000000000000\ncalldatasize_EnjinBuyer: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer underflow exists in the function `withdraw_refund()`.\nThe subtraction may result in a value < 0.",
        "filename": "/unique_chucks/28/0xb186afcd36a6403ec957f5c74482aaac13b87eae.sol",
        "function": "withdraw_refund()",
        "lineno": 73,
        "title": "Integer Underflow",
        "type": "Warning"
      },
      {
        "address": 2742,
        "code": "_tokens) {\nbalances[msg.sender] += m",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function withdraw_refund(). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/28/0xb186afcd36a6403ec957f5c74482aaac13b87eae.sol",
        "function": "withdraw_refund()",
        "lineno": 79,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 3419,
        "code": "n_balance != 0);\nuint256 tokens_",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/28/0xb186afcd36a6403ec957f5c74482aaac13b87eae.sol",
        "function": "withdraw_token(address)",
        "lineno": 57,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 3569,
        "code": "t_eth_value;\ncontract_eth_value -= balances[msg.sender];\nbalances[ms",
        "debug": "The exception is triggered under the following conditions:\n\nreturndatasize: 0x20\nretval_3419: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_2: 0xff00\nstorage_9: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_EnjinBuyer_0: 0x9cd3cb5d00000000000000000000000000000000000000000000000000000000\ncalldatasize_EnjinBuyer: 0x4\nstorage_3: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/28/0xb186afcd36a6403ec957f5c74482aaac13b87eae.sol",
        "function": "withdraw_token(address)",
        "lineno": 58,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3644,
        "code": "ender] = 0;\nuint256 fee = tokens_to_withdr",
        "debug": "storage_3: 0xfffffffffffffffffffffffffffffffffffffffffffe\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x100000000000000000000000000000000000000000000\nreturndatasize: 0x20\nretval_3419: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_2: 0xff00\nstorage_9: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_EnjinBuyer_0: 0x9cd3cb5d00000000000000000000000000000000000000000000000000000000\ncalldatasize_EnjinBuyer: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer underflow exists in the function `withdraw_token(address)`.\nThe subtraction may result in a value < 0.",
        "filename": "/unique_chucks/28/0xb186afcd36a6403ec957f5c74482aaac13b87eae.sol",
        "function": "withdraw_token(address)",
        "lineno": 60,
        "title": "Integer Underflow",
        "type": "Warning"
      },
      {
        "address": 3650,
        "code": "ender] = 0;\nuint256 fee = tokens_to_withdr",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/28/0xb186afcd36a6403ec957f5c74482aaac13b87eae.sol",
        "function": "withdraw_token(address)",
        "lineno": 60,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 3718,
        "code": "/ 100;\nrequire(myToken.t",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/28/0xb186afcd36a6403ec957f5c74482aaac13b87eae.sol",
        "function": "withdraw_token(address)",
        "lineno": 61,
        "title": "State change after external call",
        "type": "Warning"
      }
    ],
    "success": true
  }
}