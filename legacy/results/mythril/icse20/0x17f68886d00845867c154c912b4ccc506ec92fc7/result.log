{"error": null, "issues": [{"address": 1230, "code": "de));\n\n        /* Count the votes. */\n        var ( yea, nay, quorum ) = countVotes(proposalNumber);\n\n        /* Assert that a minimum quorum has been reached. */\n        require(quorum >= minimumQuorum);\n        \n        /* Mark proposal as finalized. */   \n        p.finalized = true;\n\n        if (yea > nay) {\n            /* Mark proposal as passed. */\n            p.proposalPassed = true;\n\n            /* Execute the function. */\n            require(p.recipient.call.value(p.amount)(transactionBytecode));\n\n        } else {\n            /* Proposal failed. */\n            p.proposalPassed = false;\n        }\n\n        /* Log event. */\n        ProposalTallied(proposalNumber, yea, nay, quorum, p.proposalPassed);\n    }\n}\n\ncontract WyvernDAO is DelegatedShareholderAssociation {\n\n    string public constant name = \"Project Wyvern DAO\";\n\n    uint public constant TOKEN_DECIMALS                     = 18;\n    uint public constant REQUIRED_SHARES_TO_BE_BOARD_MEMBER = 2000 * (10 ** TOKEN_DECIMALS); // set to ~ 0.1% of supply\n    uint public constant MINIMUM_QUORUM                     = 200000 * (10 ** TOKEN_DECIMALS); // set to 10% of supply", "debug": "calldata_WyvernDAO_32 + 4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_WyvernDAO_0: 0x237e949200000000000000000000000000000000000000000000000000000000\ncalldatasize_WyvernDAO: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `executeProposal(uint256,bytes)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x17f68886d00845867c154c912b4ccc506ec92fc7.sol", "function": "executeProposal(uint256,bytes)", "lineno": 398, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2880, "code": "/* Delegate addresses by de", "debug": "The exception is triggered under the following conditions:\n\ncalldata_WyvernDAO_4: 0x0\nstorage_2: 0x0\ncalldata_WyvernDAO_0: 0x13cf08b00000000000000000000000000000000000000000000000000000000\ncalldatasize_WyvernDAO: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_contracts/0x17f68886d00845867c154c912b4ccc506ec92fc7.sol", "function": "_function_0x013cf08b", "lineno": 106, "title": "Exception state", "type": "Informational"}, {"address": 3338, "code": ".inSupport) {\n           ", "debug": "The exception is triggered under the following conditions:\n\ncalldata_WyvernDAO_4: 0x0\nstorage_2: 0x0\ncalldata_WyvernDAO_0: 0x1840f0ca00000000000000000000000000000000000000000000000000000000\ncalldatasize_WyvernDAO: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_contracts/0x17f68886d00845867c154c912b4ccc506ec92fc7.sol", "function": "countVotes(uint256)", "lineno": 375, "title": "Exception state", "type": "Informational"}, {"address": 3647, "code": "votes proposal #`proposalNumber` and ", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_contracts/0x17f68886d00845867c154c912b4ccc506ec92fc7.sol", "function": "executeProposal(uint256,bytes)", "lineno": 386, "title": "Message call to external contract", "type": "Informational"}, {"address": 3976, "code": "as been reached. */\n     ", "debug": "The exception is triggered under the following conditions:\n\ncalldata_WyvernDAO_4: 0x0\nstorage_2: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_WyvernDAO_0: 0x237e949200000000000000000000000000000000000000000000000000000000\ncalldatasize_WyvernDAO: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_contracts/0x17f68886d00845867c154c912b4ccc506ec92fc7.sol", "function": "executeProposal(uint256,bytes)", "lineno": 403, "title": "Exception state", "type": "Informational"}, {"address": 4796, "code": "view returns (uint yea, u", "debug": "The exception is triggered under the following conditions:\n\ncalldata_WyvernDAO_4: 0x0\nstorage_2: 0x0\ncalldata_WyvernDAO_0: 0x4385963200000000000000000000000000000000000000000000000000000000\ncalldatasize_WyvernDAO: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_contracts/0x17f68886d00845867c154c912b4ccc506ec92fc7.sol", "function": "hasVoted(uint256,address)", "lineno": 366, "title": "Exception state", "type": "Informational"}, {"address": 5100, "code": " this modifier. */\n    modifier onlySelf {\n    ", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_contracts/0x17f68886d00845867c154c912b4ccc506ec92fc7.sol", "function": "setDelegateAndLockTokens(uint256,address)", "lineno": 158, "title": "Message call to external contract", "type": "Informational"}, {"address": 5448, "code": "add(totalLockedTokens, tokensToLock);\n        del", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_contracts/0x17f68886d00845867c154c912b4ccc506ec92fc7.sol", "function": "setDelegateAndLockTokens(uint256,address)", "lineno": 204, "title": "State change after external call", "type": "Warning"}, {"address": 8352, "code": "ata);\n    }\n\n    /**\n     * @dev ", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_contracts/0x17f68886d00845867c154c912b4ccc506ec92fc7.sol", "function": "receiveApproval(address,uint256,address,bytes)", "lineno": 87, "title": "Message call to external contract", "type": "Warning"}, {"address": 10928, "code": ";\n   ", "debug": "retval_3647: 0x83ffb3569638cea3622d597040d78d7ab7ae5c8a2d8bbb012cad3fb961bad806\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\nUDiv(storage_0_+\nkeccac_8_+\n29102676481673041902632991033461445430619272659676223336789171408008386403022_+\n10*calldata_WyvernDAO_4,\n_____256): 0xe6089257c80ac0cbe60d5926ff262844c7005edbab82a162281118017d351c97\ncalldata_WyvernDAO_4: 0x0\nreturndatasize: 0x20\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_8 +\n29102676481673041902632991033461445430619272659676223336789171408008386403022 +\n10*calldata_WyvernDAO_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_2: 0x1\ncalldata_WyvernDAO_0: 0x1840f0ca00000000000000000000000000000000000000000000000000000000\ncalldatasize_WyvernDAO: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `countVotes(uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x17f68886d00845867c154c912b4ccc506ec92fc7.sol", "function": "countVotes(uint256)", "lineno": 27, "title": "Integer Overflow ", "type": "Warning"}, {"address": 10941, "code": " c;\n  }\n}\n\ncon", "debug": "The exception is triggered under the following conditions:\n\nretval_3647: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_WyvernDAO_4: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\nUDiv(storage_0_+\nkeccac_8_+\n29102676481673041902632991033461445430619272659676223336789171408008386403022_+\n10*calldata_WyvernDAO_4,\n_____256): 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nreturndatasize: 0x20\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_8 +\n29102676481673041902632991033461445430619272659676223336789171408008386403022 +\n10*calldata_WyvernDAO_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_2: 0x1\ncalldata_WyvernDAO_0: 0x1840f0ca00000000000000000000000000000000000000000000000000000000\ncalldatasize_WyvernDAO: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_contracts/0x17f68886d00845867c154c912b4ccc506ec92fc7.sol", "function": "countVotes(uint256)", "lineno": 28, "title": "Exception state", "type": "Informational"}, {"address": 10965, "code": "return a - b;\n", "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffbfffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\nUDiv(storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller,\n_____256): 0xffffbffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_WyvernDAO_0: 0x645bd43600000000000000000000000000000000000000000000000000000000\ncalldatasize_WyvernDAO: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_contracts/0x17f68886d00845867c154c912b4ccc506ec92fc7.sol", "function": "clearDelegateAndUnlockTokens()", "lineno": 22, "title": "Exception state", "type": "Informational"}], "success": true}