{
  "contract": "0x500bdb15c836cd6562c8624b7441fef6eca5786a",
  "tool": "mythril",
  "start": 1563490479.4010997,
  "end": 1563490484.346537,
  "duration": 4.945437431335449,
  "analysis": {
    "success": false,
    "error": "Solc experienced a fatal error (code 1).\n\n/unique_chucks/6/0x500bdb15c836cd6562c8624b7441fef6eca5786a.sol:1:1: Error: Source file requires different compiler version (current compiler is 0.4.25+commit.59dbf8f1.Linux.g++ - note that nightly builds are considered to be strictly less than the released version\npragma solidity 0.4.21;\r\n^---------------------^\n/unique_chucks/6/0x500bdb15c836cd6562c8624b7441fef6eca5786a.sol:77:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use \"constructor(...) { ... }\" instead.\n    function UnicornAccessControl(address _unicornManagementAddress) public {\r\n    ^ (Relevant source part starts here and spans across multiple lines).\n/unique_chucks/6/0x500bdb15c836cd6562c8624b7441fef6eca5786a.sol:806:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use \"constructor(...) { ... }\" instead.\n    function UnicornContract(address _breedingDB, address _balances, address _unicornManagementAddress) UnicornAccessControl(_unicornManagementAddress) public {\r\n    ^ (Relevant source part starts here and spans across multiple lines).\n/unique_chucks/6/0x500bdb15c836cd6562c8624b7441fef6eca5786a.sol:742:24: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n        bytes32 hash = sha256(balances, tokenGet, amountGet, tokenGive, amountGive, expires, nonce);\r\n                       ^--------------------------------------------------------------------------^\n/unique_chucks/6/0x500bdb15c836cd6562c8624b7441fef6eca5786a.sol:744:66: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n            ecrecover(keccak256(keccak256(\"bytes32 Order hash\"), keccak256(hash)), v, r, s) == user &&\r\n                                                                 ^-------------^\n/unique_chucks/6/0x500bdb15c836cd6562c8624b7441fef6eca5786a.sol:744:66: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.\n            ecrecover(keccak256(keccak256(\"bytes32 Order hash\"), keccak256(hash)), v, r, s) == user &&\r\n                                                                 ^-------------^\n/unique_chucks/6/0x500bdb15c836cd6562c8624b7441fef6eca5786a.sol:744:23: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n            ecrecover(keccak256(keccak256(\"bytes32 Order hash\"), keccak256(hash)), v, r, s) == user &&\r\n                      ^---------------------------------------------------------^\n",
    "issues": []
  }
}