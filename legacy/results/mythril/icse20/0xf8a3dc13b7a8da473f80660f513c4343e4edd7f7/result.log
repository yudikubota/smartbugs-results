{"error": null, "issues": [{"address": 589, "code": "e sent data.\n   *\n   * approve should be called when allowed[_spender] == 0. To decrement\n   * allowed value is better to use this function to avoid 2 calls (and wait until\n   * the first transaction is mined)\n   * From MonolithDAO Token.sol\n   * @param _s", "debug": "calldata_UpgradeableToken_32 + 36: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_UpgradeableToken_0: 0x16ca3b6300000000000000000000000000000000000000000000000000000000\ncalldatasize_UpgradeableToken: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `increaseApproval(address,uint256,bytes)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/2/0xf8a3dc13b7a8da473f80660f513c4343e4edd7f7.sol", "function": "increaseApproval(address,uint256,bytes)", "lineno": 410, "title": "Integer Overflow ", "type": "Warning"}, {"address": 981, "code": " with the sent data on the same transaction\n\n     @param _to address The address which you want to transfer to\n     @param _value uint256 the amout of tokens to be transfered\n     @param _data ABI-encoded contract call to call `_to", "debug": "calldata_UpgradeableToken_32 + 36: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_UpgradeableToken_0: 0x5c17f9f400000000000000000000000000000000000000000000000000000000\ncalldatasize_UpgradeableToken: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `approve(address,uint256,bytes)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/2/0xf8a3dc13b7a8da473f80660f513c4343e4edd7f7.sol", "function": "approve(address,uint256,bytes)", "lineno": 349, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1514, "code": ", version 2.0: https://github.com/TokenMarketNet/ico/blob/master/LICENSE.txt\n */\n\n\n\n\n\n\ncontract Recoverable is Ownable {\n\n  /// @dev Empty constructor (for now)\n  function Recoverable() {\n  }\n\n  /// @dev This will be invoked by the owner, when owner wants to rescue ", "debug": "calldata_UpgradeableToken_32 + 36: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_UpgradeableToken_0: 0x7272ad4900000000000000000000000000000000000000000000000000000000\ncalldatasize_UpgradeableToken: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `decreaseApproval(address,uint256,bytes)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/2/0xf8a3dc13b7a8da473f80660f513c4343e4edd7f7.sol", "function": "decreaseApproval(address,uint256,bytes)", "lineno": 436, "title": "Integer Overflow ", "type": "Warning"}, {"address": 3415, "code": "re information see https://tokenmarket.net\n *\n *", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/2/0xf8a3dc13b7a8da473f80660f513c4343e4edd7f7.sol", "function": "_function_0x16114acd", "lineno": 465, "title": "Message call to external contract", "type": "Warning"}, {"address": 3679, "code": "\n   * From MonolithD", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/2/0xf8a3dc13b7a8da473f80660f513c4343e4edd7f7.sol", "function": "increaseApproval(address,uint256,bytes)", "lineno": 414, "title": "Message call to external contract", "type": "Warning"}, {"address": 5528, "code": "am _data ABI-encoded", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/2/0xf8a3dc13b7a8da473f80660f513c4343e4edd7f7.sol", "function": "approve(address,uint256,bytes)", "lineno": 353, "title": "Message call to external contract", "type": "Warning"}, {"address": 6562, "code": "voked by the owner, ", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/2/0xf8a3dc13b7a8da473f80660f513c4343e4edd7f7.sol", "function": "decreaseApproval(address,uint256,bytes)", "lineno": 450, "title": "Message call to external contract", "type": "Warning"}, {"address": 7924, "code": "act StandardTokenExt ", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/2/0xf8a3dc13b7a8da473f80660f513c4343e4edd7f7.sol", "function": "_function_0x16114acd", "lineno": 483, "title": "Message call to external contract", "type": "Warning"}, {"address": 7924, "code": "act StandardTokenExt ", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3415\n", "filename": "/unique_chucks/2/0xf8a3dc13b7a8da473f80660f513c4343e4edd7f7.sol", "function": "_function_0x16114acd", "lineno": 483, "title": "Multiple Calls", "type": "Information"}, {"address": 10018, "code": "Stand", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_UpgradeableToken_32_+_4: 0xc050fffff320c00020003d81af848540000000000000040000110001bd062022\ncalldata_UpgradeableToken_32 + 36: 0xfe51000008ce80008001c1d33616877ffffffffffffff7ffffe10000398d50ac\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xfe51000008ce80008001c1d33616877ffffffffffffff7ffffe10000398d50ac\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_UpgradeableToken_4: 0xfe51000008ce80008001c1d33616877ffffffffffffff7ffffe10000398d50ac\ncalldata_UpgradeableToken_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_UpgradeableToken_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_UpgradeableToken: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `transferFrom(address,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/2/0xf8a3dc13b7a8da473f80660f513c4343e4edd7f7.sol", "function": "transferFrom(address,address,uint256)", "lineno": 124, "title": "Integer Overflow ", "type": "Warning"}, {"address": 10031, "code": "n, with no all", "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_UpgradeableToken_32_+_4: 0xd32ba62e013a1e544c40f8298f8c838ef0ca495e903244487f8ba1f8c2a013e7\ncalldata_UpgradeableToken_32 + 36: 0x53632f08ddbb360427befb69cb0d577a76825c1eb02b4cefbf971939ae256117\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x53632f08ddbb360427befb69cb0d577a76825c1eb02b4cefbf971939ae256117\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_UpgradeableToken_4: 0x53632f08ddbb360427befb69cb0d577a76825c1eb02b4cefbf971939ae256117\ncalldata_UpgradeableToken_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_UpgradeableToken_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_UpgradeableToken: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/2/0xf8a3dc13b7a8da473f80660f513c4343e4edd7f7.sol", "function": "transferFrom(address,address,uint256)", "lineno": 124, "title": "Exception state", "type": "Informational"}], "success": true}