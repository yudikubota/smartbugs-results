{
  "contract": "0xc192da5c95ef0bf859e26deb583f27de6ae1ec65",
  "tool": "mythril",
  "start": 1563641281.5094829,
  "end": 1563641616.1007507,
  "duration": 334.591267824173,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 125,
        "code": "ord(uint i,string info) public{\n        require(msg.sender == owner);\n        require(goodsInfoMap[i].isVaild == false);\n        goodsInfoMap[i].info = info;\n        goodsInfoMap[i].isVaild = true;\n    }\n    function get",
        "debug": "calldata_GoodsInfo_32 + 4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_GoodsInfo_0: 0xaecef00e00000000000000000000000000000000000000000000000000000000\ncalldatasize_GoodsInfo: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `record(uint256,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/25/0xc192da5c95ef0bf859e26deb583f27de6ae1ec65.sol",
        "function": "record(uint256,string)",
        "lineno": 13,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 821,
        "code": "ntract GoodsInfo{\n    struct Goods{\n      string info;\n      bool isVaild;\n    }\n    mapping (uint => Goods) goodsInfoMap;\n    address owner;\n    constructor(address a) public{\n        owner = a;\n    }\n    function record(uint i,string info) public{\n        require(msg.sender == owner);\n        require(goodsInfoMap[i].isVaild == false);\n        goodsInfoMap[i].info = info;\n        goodsInfoMap[i].isVaild = true;\n    }\n    function getRecordById(uint i) constant public returns (string){\n        return goodsInfoMap[i].info;\n    }\n}",
        "debug": "storage_0 + keccac_calldata_GoodsInfo_4: 0xbac1c3147749165dd7d1977fffffffffffffffffffffffffffffffffffffffc5\nkeccac_0_+_keccac_calldata_GoodsInfo_4: 0xff13e6a7459ae5a4c49c419171c3f89100a371508000000000129200000219e2\nstorage_1 + keccac_calldata_GoodsInfo_4: 0x0\nstorage_1: 0x0\ncaller: 0x0\ncalldata_GoodsInfo_0: 0xaecef00e00000000000000000000000000000000000000000000000000000000\ncalldatasize_GoodsInfo: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `record(uint256,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/25/0xc192da5c95ef0bf859e26deb583f27de6ae1ec65.sol",
        "function": "record(uint256,string)",
        "lineno": 3,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 850,
        "code": "ntract GoodsInfo{\n    struct Goods{\n      string info;\n      bool isVaild;\n    }\n    mapping (uint => Goods) goodsInfoMap;\n    address owner;\n    constructor(address a) public{\n        owner = a;\n    }\n    function record(uint i,string info) public{\n        require(msg.sender == owner);\n        require(goodsInfoMap[i].isVaild == false);\n        goodsInfoMap[i].info = info;\n        goodsInfoMap[i].isVaild = true;\n    }\n    function getRecordById(uint i) constant public returns (string){\n        return goodsInfoMap[i].info;\n    }\n}",
        "debug": "calldata_GoodsInfo_4 + calldata_GoodsInfo_32 + 4: 0x8000000000000000000000000000000000000000000000000000000000000000\nstorage_1 + keccac_calldata_GoodsInfo_4: 0x0\nstorage_1: 0x0\ncaller: 0x0\ncalldata_GoodsInfo_0: 0xaecef00e00000000000000000000000000000000000000000000000000000000\ncalldatasize_GoodsInfo: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `record(uint256,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/25/0xc192da5c95ef0bf859e26deb583f27de6ae1ec65.sol",
        "function": "record(uint256,string)",
        "lineno": 3,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 864,
        "code": "ntract GoodsInfo{\n    struct Goods{\n      string info;\n      bool isVaild;\n    }\n    mapping (uint => Goods) goodsInfoMap;\n    address owner;\n    constructor(address a) public{\n        owner = a;\n    }\n    function record(uint i,string info) public{\n        require(msg.sender == owner);\n        require(goodsInfoMap[i].isVaild == false);\n        goodsInfoMap[i].info = info;\n        goodsInfoMap[i].isVaild = true;\n    }\n    function getRecordById(uint i) constant public returns (string){\n        return goodsInfoMap[i].info;\n    }\n}",
        "debug": "calldata_GoodsInfo_4 + calldata_GoodsInfo_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\nstorage_1 + keccac_calldata_GoodsInfo_4: 0x0\nstorage_1: 0x0\ncaller: 0x0\ncalldata_GoodsInfo_0: 0xaecef00e00000000000000000000000000000000000000000000000000000000\ncalldatasize_GoodsInfo: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `record(uint256,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/25/0xc192da5c95ef0bf859e26deb583f27de6ae1ec65.sol",
        "function": "record(uint256,string)",
        "lineno": 3,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 886,
        "code": "ntract GoodsInfo{\n    struct Goods{\n      string info;\n      bool isVaild;\n    }\n    mapping (uint => Goods) goodsInfoMap;\n    address owner;\n    constructor(address a) public{\n        owner = a;\n    }\n    function record(uint i,string info) public{\n        require(msg.sender == owner);\n        require(goodsInfoMap[i].isVaild == false);\n        goodsInfoMap[i].info = info;\n        goodsInfoMap[i].isVaild = true;\n    }\n    function getRecordById(uint i) constant public returns (string){\n        return goodsInfoMap[i].info;\n    }\n}",
        "debug": "calldata_GoodsInfo_4 + calldata_GoodsInfo_32 + 4: 0x4000f04100100000000000000000000000000000d6401413fffffffffffffe0\nkeccac_0_+_keccac_calldata_GoodsInfo_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_1 + keccac_calldata_GoodsInfo_4: 0x0\nstorage_1: 0x0\ncaller: 0x0\ncalldata_GoodsInfo_0: 0xaecef00e00000000000000000000000000000000000000000000000000000000\ncalldatasize_GoodsInfo: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `record(uint256,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/25/0xc192da5c95ef0bf859e26deb583f27de6ae1ec65.sol",
        "function": "record(uint256,string)",
        "lineno": 3,
        "title": "Integer Overflow ",
        "type": "Warning"
      }
    ],
    "success": true
  }
}