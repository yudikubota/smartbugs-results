{
  "contract": "0x7dedb9caddf41e3e8fa2fab0cb521a5dd4007648",
  "tool": "mythril",
  "start": 1563582830.4687042,
  "end": 1563582947.7054582,
  "duration": 117.23675394058228,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 289,
        "code": "\n    function _destroyContract() publ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/23/0x7dedb9caddf41e3e8fa2fab0cb521a5dd4007648.sol",
        "function": "fallback",
        "lineno": 53,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 289,
        "code": "\n    function _destroyContract() publ",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function fallback. The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/23/0x7dedb9caddf41e3e8fa2fab0cb521a5dd4007648.sol",
        "function": "fallback",
        "lineno": 53,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 391,
        "code": "public ownerOnly {\n        configString = _newConfig;\n    }     \n    \n    // fallback function tigered, w",
        "debug": "calldata_serverConfig_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_serverConfig_0: 0x1c51a8e000000000000000000000000000000000000000000000000000000000\ncalldatasize_serverConfig: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `setConfigString(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/23/0x7dedb9caddf41e3e8fa2fab0cb521a5dd4007648.sol",
        "function": "setConfigString(string)",
        "lineno": 45,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2415,
        "code": "ntract serverConfig {\n    \n    address public owner;\n    uint32 public masterServer;\n    uint32 public slaveServer;\n    uint16 public serverPort;\n    uint16 public serverPortUpdate;\n    string public configString;\n    \n    constructor() public {\n        owner = msg.sender;\n        serverPort = 5780;\n        serverPortUpdate = 5757;\n        masterServer = 0x58778024;\n        slaveServer = 0xd4751d07;\n    }\n    \n    modifier ownerOnly() {\n        require(msg.sender==owner);\n        _;\n    }\n    \n    function setNewOwner(address _newOwner) public ownerOnly {\n        owner = _newOwner;\n    }\n    \n    function setMasterServer(uint32 _newServerIp) public ownerOnly {\n        masterServer = _newServerIp;\n    }\n    \n    function setSlaveServer(uint32 _newServerIp) public ownerOnly {\n        slaveServer = _newServerIp;\n    }    \n    \n    function setPort(uint16 _newPort) public ownerOnly {\n        serverPort = _newPort;\n    }      \n    \n    function setPortUpdate(uint16 _newPort) public ownerOnly {\n        serverPortUpdate = _newPort;\n    }     \n    \n    function setConfigString(string _newConfig) public ownerOnly {\n        configString = _newConfig;\n    }     \n    \n    // fallback function tigered, when contract gets ETH\n    function() payable public {\n\t\trequire(owner.call.value(msg.value)(msg.data));\n    }\n    \n    function _destroyContract() public ownerOnly {\n        selfdestruct(owner);\n    }\n}",
        "debug": "calldata_serverConfig_4 + calldata_serverConfig_4: 0x8000000000000000000000000000000000000000000000000000000000000000\nstorage_0: 0x0\ncaller: 0x0\ncalldata_serverConfig_0: 0x1c51a8e000000000000000000000000000000000000000000000000000000000\ncalldatasize_serverConfig: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `setConfigString(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/23/0x7dedb9caddf41e3e8fa2fab0cb521a5dd4007648.sol",
        "function": "setConfigString(string)",
        "lineno": 3,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2429,
        "code": "ntract serverConfig {\n    \n    address public owner;\n    uint32 public masterServer;\n    uint32 public slaveServer;\n    uint16 public serverPort;\n    uint16 public serverPortUpdate;\n    string public configString;\n    \n    constructor() public {\n        owner = msg.sender;\n        serverPort = 5780;\n        serverPortUpdate = 5757;\n        masterServer = 0x58778024;\n        slaveServer = 0xd4751d07;\n    }\n    \n    modifier ownerOnly() {\n        require(msg.sender==owner);\n        _;\n    }\n    \n    function setNewOwner(address _newOwner) public ownerOnly {\n        owner = _newOwner;\n    }\n    \n    function setMasterServer(uint32 _newServerIp) public ownerOnly {\n        masterServer = _newServerIp;\n    }\n    \n    function setSlaveServer(uint32 _newServerIp) public ownerOnly {\n        slaveServer = _newServerIp;\n    }    \n    \n    function setPort(uint16 _newPort) public ownerOnly {\n        serverPort = _newPort;\n    }      \n    \n    function setPortUpdate(uint16 _newPort) public ownerOnly {\n        serverPortUpdate = _newPort;\n    }     \n    \n    function setConfigString(string _newConfig) public ownerOnly {\n        configString = _newConfig;\n    }     \n    \n    // fallback function tigered, when contract gets ETH\n    function() payable public {\n\t\trequire(owner.call.value(msg.value)(msg.data));\n    }\n    \n    function _destroyContract() public ownerOnly {\n        selfdestruct(owner);\n    }\n}",
        "debug": "calldata_serverConfig_4 + calldata_serverConfig_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\nstorage_0: 0x0\ncaller: 0x0\ncalldata_serverConfig_0: 0x1c51a8e000000000000000000000000000000000000000000000000000000000\ncalldatasize_serverConfig: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `setConfigString(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/23/0x7dedb9caddf41e3e8fa2fab0cb521a5dd4007648.sol",
        "function": "setConfigString(string)",
        "lineno": 3,
        "title": "Integer Overflow ",
        "type": "Warning"
      }
    ],
    "success": true
  }
}