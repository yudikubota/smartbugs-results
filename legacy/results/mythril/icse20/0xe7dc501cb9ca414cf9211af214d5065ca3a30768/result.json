{
  "contract": "0xe7dc501cb9ca414cf9211af214d5065ca3a30768",
  "tool": "mythril",
  "start": 1563420547.3569365,
  "end": 1563420562.9233346,
  "duration": 15.56639814376831,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 968,
        "code": "ue) internal {\n    Storage(storageAddr).setB",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_contracts/0xe7dc501cb9ca414cf9211af214d5065ca3a30768.sol",
        "function": "powerBalanceOf(address)",
        "lineno": 116,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 1252,
        "code": "rPool) internal {\n    Storage(storageAddr).setUIn",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_contracts/0xe7dc501cb9ca414cf9211af214d5065ca3a30768.sol",
        "function": "powerPool()",
        "lineno": 99,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 1550,
        "code": "wBytes >> (96 + 64));\n    return;\n  }\n\n  functi",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_contracts/0xe7dc501cb9ca414cf9211af214d5065ca3a30768.sol",
        "function": "downs(address)",
        "lineno": 141,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 1949,
        "code": "Of(address _owner, uint256 _newValue) inter",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_contracts/0xe7dc501cb9ca414cf9211af214d5065ca3a30768.sol",
        "function": "babzBalanceOf(address)",
        "lineno": 78,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 2233,
        "code": "wBurnPool) internal {\n    Storage(storageAddr).s",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_contracts/0xe7dc501cb9ca414cf9211af214d5065ca3a30768.sol",
        "function": "burnPool()",
        "lineno": 92,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 2515,
        "code": "ply(uint256 _newActiveSupply) internal {\n    Storage",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_contracts/0xe7dc501cb9ca414cf9211af214d5065ca3a30768.sol",
        "function": "activeSupply()",
        "lineno": 85,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 2797,
        "code": "ower) internal {\n    Storage(storageAddr).setUInt('Power'",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_contracts/0xe7dc501cb9ca414cf9211af214d5065ca3a30768.sol",
        "function": "outstandingPower()",
        "lineno": 124,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 3079,
        "code": "nal {\n    Storage(storageAddr).setUInt('Power', 'authori",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_contracts/0xe7dc501cb9ca414cf9211af214d5065ca3a30768.sol",
        "function": "authorizedPower()",
        "lineno": 132,
        "title": "Message call to external contract",
        "type": "Informational"
      }
    ],
    "success": true
  }
}