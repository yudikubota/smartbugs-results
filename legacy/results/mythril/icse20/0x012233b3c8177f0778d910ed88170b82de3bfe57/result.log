{"error": null, "issues": [{"address": 329, "code": "2);\n            h.deed.setOwner(msg.sender);\n            h.deed.closeDeed(1000);\n        }\n        HashInvalidated(hash, unhashedName, h.value, h.registrationDate);\n        h.deed = Deed(0);\n    }\n\n    /**\n     * @dev Transfers the deed to the current registrar, if different from this one.\n     * Used during the upgrade process to a permanent registrar.\n     * @param _hash The name hash to transfer.\n     */\n    function transferRegistrars(bytes32 _hash) onlyOwner(_hash) {\n        var registrar = ens.owner(rootNode);\n        if(registrar == address(this))\n            throw;\n\n        entry h = _entries[_hash];\n        h.deed.setRegistrar(registrar);\n    }\n}", "debug": "calldata_Registrar_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_Registrar_0: 0x15f7333100000000000000000000000000000000000000000000000000000000\ncalldatasize_Registrar: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `invalidateName(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/4/0x012233b3c8177f0778d910ed88170b82de3bfe57.sol", "function": "invalidateName(string)", "lineno": 462, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1481, "code": "hash\n     * @param owner The address which will own the \n     * @param value The bid amount\n     * @param salt A random value to ensure secrecy of the bid\n ", "debug": "calldata_Registrar_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_Registrar_0: 0xe27fe50f00000000000000000000000000000000000000000000000000000000\ncalldatasize_Registrar: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `startAuctions(bytes32[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/4/0x012233b3c8177f0778d910ed88170b82de3bfe57.sol", "function": "startAuctions(bytes32[])", "lineno": 290, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1859, "code": "  _;\n    }\n    \n    function", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/4/0x012233b3c8177f0778d910ed88170b82de3bfe57.sol", "function": "releaseDeed(bytes32)", "lineno": 179, "title": "Message call to external contract", "type": "Warning"}, {"address": 1859, "code": "  _;\n    }\n    \n    function", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2575\nCall at address: 2438\nCall at address: 2575\nCall at address: 2438\n", "filename": "/unique_chucks/4/0x012233b3c8177f0778d910ed88170b82de3bfe57.sol", "function": "releaseDeed(bytes32)", "lineno": 179, "title": "Multiple Calls", "type": "Information"}, {"address": 2052, "code": "he deed value. We are purpos", "debug": "storage_1 +\nkeccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\ncalldata_Registrar_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffe800400\nretval_1859: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\nreturndatasize: 0x20\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_0 +\nkeccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\ncalldata_Registrar_4: 0xffffffffffffffffffffffffffffffffffffffff00\nstorage_3 +\nkeccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\ncalldata_Registrar_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ntimestamp: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffe800400\ncalldata_Registrar_0: 0x230a07c00000000000000000000000000000000000000000000000000000000\ncalldatasize_Registrar: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `releaseDeed(bytes32)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/4/0x012233b3c8177f0778d910ed88170b82de3bfe57.sol", "function": "releaseDeed(bytes32)", "lineno": 447, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2155, "code": ".\n     * @p", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/4/0x012233b3c8177f0778d910ed88170b82de3bfe57.sol", "function": "releaseDeed(bytes32)", "lineno": 449, "title": "State change after external call", "type": "Warning"}, {"address": 2165, "code": "edName An invali", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/4/0x012233b3c8177f0778d910ed88170b82de3bfe57.sol", "function": "releaseDeed(bytes32)", "lineno": 450, "title": "State change after external call", "type": "Warning"}, {"address": 2233, "code": "earch for in the", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/4/0x012233b3c8177f0778d910ed88170b82de3bfe57.sol", "function": "releaseDeed(bytes32)", "lineno": 450, "title": "State change after external call", "type": "Warning"}, {"address": 2438, "code": "   * \n     */\n    function invalidateNa", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/4/0x012233b3c8177f0778d910ed88170b82de3bfe57.sol", "function": "releaseDeed(bytes32)", "lineno": 451, "title": "Message call to external contract", "type": "Informational"}, {"address": 2438, "code": "   * \n     */\n    function invalidateNa", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2575\n", "filename": "/unique_chucks/4/0x012233b3c8177f0778d910ed88170b82de3bfe57.sol", "function": "releaseDeed(bytes32)", "lineno": 451, "title": "Multiple Calls", "type": "Information"}, {"address": 2575, "code": "nhashedName) inState(sha3(un", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/4/0x012233b3c8177f0778d910ed88170b82de3bfe57.sol", "function": "releaseDeed(bytes32)", "lineno": 453, "title": "Message call to external contract", "type": "Warning"}, {"address": 3106, "code": "deed to the current registrar, if diff", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/4/0x012233b3c8177f0778d910ed88170b82de3bfe57.sol", "function": "invalidateName(string)", "lineno": 471, "title": "Message call to external contract", "type": "Informational"}, {"address": 4614, "code": " @param _hash The ", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/4/0x012233b3c8177f0778d910ed88170b82de3bfe57.sol", "function": "cancelBid(address,bytes32)", "lineno": 399, "title": "Message call to external contract", "type": "Warning"}, {"address": 4614, "code": " @param _hash The ", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 5169\nCall at address: 5033\nCall at address: 5169\nCall at address: 5033\nCall at address: 4785\n", "filename": "/unique_chucks/4/0x012233b3c8177f0778d910ed88170b82de3bfe57.sol", "function": "cancelBid(address,bytes32)", "lineno": 399, "title": "Multiple Calls", "type": "Information"}, {"address": 4671, "code": " @param _hash The hash of the name the au", "debug": "retval_4614: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8400\nreturndatasize: 0x20\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\ncalldata_Registrar_32_+_4: 0xffffffffffffffffffffffffffffffffffffffff00\ncalldata_Registrar_0: 0x2525f5c100000000000000000000000000000000000000000000000000000000\ncalldatasize_Registrar: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `cancelBid(address,bytes32)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/4/0x012233b3c8177f0778d910ed88170b82de3bfe57.sol", "function": "cancelBid(address,bytes32)", "lineno": 399, "title": "Integer Overflow ", "type": "Warning"}, {"address": 4785, "code": "*/ \n    fun", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/4/0x012233b3c8177f0778d910ed88170b82de3bfe57.sol", "function": "cancelBid(address,bytes32)", "lineno": 400, "title": "Message call to external contract", "type": "Warning"}, {"address": 4785, "code": "*/ \n    fun", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 5169\nCall at address: 5033\n", "filename": "/unique_chucks/4/0x012233b3c8177f0778d910ed88170b82de3bfe57.sol", "function": "cancelBid(address,bytes32)", "lineno": 400, "title": "Multiple Calls", "type": "Information"}, {"address": 5033, "code": "\n        h.value =  max(", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/4/0x012233b3c8177f0778d910ed88170b82de3bfe57.sol", "function": "cancelBid(address,bytes32)", "lineno": 403, "title": "Message call to external contract", "type": "Warning"}, {"address": 5033, "code": "\n        h.value =  max(", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 5169\n", "filename": "/unique_chucks/4/0x012233b3c8177f0778d910ed88170b82de3bfe57.sol", "function": "cancelBid(address,bytes32)", "lineno": 403, "title": "Multiple Calls", "type": "Information"}, {"address": 5169, "code": "nPrice);\n\n      ", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/4/0x012233b3c8177f0778d910ed88170b82de3bfe57.sol", "function": "cancelBid(address,bytes32)", "lineno": 404, "title": "Message call to external contract", "type": "Warning"}, {"address": 5341, "code": " the owner in ENS\n        ens.setS", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/4/0x012233b3c8177f0778d910ed88170b82de3bfe57.sol", "function": "cancelBid(address,bytes32)", "lineno": 406, "title": "State change after external call", "type": "Warning"}, {"address": 5812, "code": "  _;\n    }\n    \n    function", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/4/0x012233b3c8177f0778d910ed88170b82de3bfe57.sol", "function": "transferRegistrars(bytes32)", "lineno": 179, "title": "Message call to external contract", "type": "Warning"}, {"address": 6574, "code": "       } else {\n            if(entry.", "debug": "storage_1 +\nkeccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\ncalldata_Registrar_4: 0x8000\ntimestamp: 0x7fff\ncalldata_Registrar_0: 0x983b94fb00000000000000000000000000000000000000000000000000000000\ncalldatasize_Registrar: 0x4\ncallvalue: 0x0\n", "description": "A possible integer underflow exists in the function `finalizeAuction(bytes32)`.\nThe subtraction may result in a value < 0.", "filename": "/unique_chucks/4/0x012233b3c8177f0778d910ed88170b82de3bfe57.sol", "function": "finalizeAuction(bytes32)", "lineno": 156, "title": "Integer Underflow", "type": "Warning"}, {"address": 6939, "code": "  _;\n    }\n    \n    function", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/4/0x012233b3c8177f0778d910ed88170b82de3bfe57.sol", "function": "transfer(bytes32,address)", "lineno": 179, "title": "Message call to external contract", "type": "Warning"}, {"address": 9310, "code": "   BidRevealed(_hash", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/4/0x012233b3c8177f0778d910ed88170b82de3bfe57.sol", "function": "unsealBid(bytes32,address,uint256,bytes32)", "lineno": 345, "title": "Message call to external contract", "type": "Warning"}, {"address": 9310, "code": "   BidRevealed(_hash", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 9467\n", "filename": "/unique_chucks/4/0x012233b3c8177f0778d910ed88170b82de3bfe57.sol", "function": "unsealBid(bytes32,address,uint256,bytes32)", "lineno": 345, "title": "Multiple Calls", "type": "Information"}, {"address": 9467, "code": "          /", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/4/0x012233b3c8177f0778d910ed88170b82de3bfe57.sol", "function": "unsealBid(bytes32,address,uint256,bytes32)", "lineno": 347, "title": "Message call to external contract", "type": "Warning"}], "success": true}