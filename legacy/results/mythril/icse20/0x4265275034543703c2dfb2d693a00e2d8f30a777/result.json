{
  "contract": "0x4265275034543703c2dfb2d693a00e2d8f30a777",
  "tool": "mythril",
  "start": 1563661821.7608016,
  "end": 1563661854.847779,
  "duration": 33.08697748184204,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 782,
        "code": " (uint256 i = 0; i < _addresses.length; i++) {\n            require(transfer(_addresses[i], _value[i]));\n        }\n        return true;\n    }\n\n    /**\n    * @dev Gets the balance of the specified address.\n    * @param _owner The address to quer",
        "debug": "calldata_StandardToken_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_StandardToken_0: 0x88d695b200000000000000000000000000000000000000000000000000000000\ncalldatasize_StandardToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `batchTransfer(address[],uint256[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/33/0x4265275034543703c2dfb2d693a00e2d8f30a777.sol",
        "function": "batchTransfer(address[],uint256[])",
        "lineno": 100,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 3655,
        "code": "ied addre",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_StandardToken_4 + calldata_StandardToken_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_StandardToken_0: 0x88d695b200000000000000000000000000000000000000000000000000000000\ncalldatasize_StandardToken: 0x4\nmem_128 +\n32 +\n32*calldata_StandardToken_4 + calldata_StandardToken_4: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/33/0x4265275034543703c2dfb2d693a00e2d8f30a777.sol",
        "function": "batchTransfer(address[],uint256[])",
        "lineno": 107,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 5486,
        "code": "\ncont",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_StandardToken_4: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncalldata_StandardToken_32 + 4: 0x57f25cd000000000000000000000000000000000000000000000000000000000\nstorage_3: 0xff00\ncalldata_StandardToken_0: 0xd73dd62300000000000000000000000000000000000000000000000000000000\ncalldatasize_StandardToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `increaseApproval(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/33/0x4265275034543703c2dfb2d693a00e2d8f30a777.sol",
        "function": "increaseApproval(address,uint256)",
        "lineno": 154,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 5499,
        "code": "is ERC20Basic ",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_StandardToken_4: 0x1\ncalldata_StandardToken_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_3: 0xff00\ncalldata_StandardToken_0: 0xd73dd62300000000000000000000000000000000000000000000000000000000\ncalldatasize_StandardToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/33/0x4265275034543703c2dfb2d693a00e2d8f30a777.sol",
        "function": "increaseApproval(address,uint256)",
        "lineno": 155,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}