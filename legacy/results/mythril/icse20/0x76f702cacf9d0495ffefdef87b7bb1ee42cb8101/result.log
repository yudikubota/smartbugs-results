{"error": null, "issues": [{"address": 147, "code": "nsfer(ERC20 token, address[] Airdrop, uint256[] amount) public {\n        require(msg.sender == parachute);\n        \n        for (uint256 i = 0; i < Airdrop.length; i++) {\n            token.transfer( Airdrop[i], amount[i] * 10 ** 18);\n        }\n    }\n}", "debug": "calldata_ParaTransfer_32 + 4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_ParaTransfer_0: 0x382d8e6b00000000000000000000000000000000000000000000000000000000\ncalldatasize_ParaTransfer: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `_function_0x382d8e6b`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/37/0x76f702cacf9d0495ffefdef87b7bb1ee42cb8101.sol", "function": "_function_0x382d8e6b", "lineno": 18, "title": "Integer Overflow ", "type": "Warning"}, {"address": 550, "code": ";\n       ", "debug": "The exception is triggered under the following conditions:\n\ncalldata_ParaTransfer_4 + calldata_ParaTransfer_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_0: 0x0\ncaller: 0x0\ncalldata_ParaTransfer_0: 0x382d8e6b00000000000000000000000000000000000000000000000000000000\ncalldatasize_ParaTransfer: 0x4\nmem_128 +\n32 +\n32*calldata_ParaTransfer_4 + calldata_ParaTransfer_32 + 4: 0x0\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/37/0x76f702cacf9d0495ffefdef87b7bb1ee42cb8101.sol", "function": "_function_0x382d8e6b", "lineno": 22, "title": "Exception state", "type": "Informational"}, {"address": 698, "code": "op[i], amount[i] * 10 ** 18);\n        }\n    }\n}", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/37/0x76f702cacf9d0495ffefdef87b7bb1ee42cb8101.sol", "function": "_function_0x382d8e6b", "lineno": 22, "title": "Message call to external contract", "type": "Warning"}, {"address": 698, "code": "op[i], amount[i] * 10 ** 18);\n        }\n    }\n}", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 698\nCall at address: 698\n", "filename": "/unique_chucks/37/0x76f702cacf9d0495ffefdef87b7bb1ee42cb8101.sol", "function": "_function_0x382d8e6b", "lineno": 22, "title": "Multiple Calls", "type": "Information"}], "success": true}