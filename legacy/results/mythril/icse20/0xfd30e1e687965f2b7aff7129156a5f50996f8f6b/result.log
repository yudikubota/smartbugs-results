{"error": null, "issues": [{"address": 1279, "code": "     uint codeLength;\n\n        assembly {\n            // Retrieve the size of the code on target address, this needs assembly .\n            codeLength := extcodesize(_to)\n        }\n\n        balances[msg.sender] = balances[msg.sender].sub(_value);\n        balances[_to] = balances[_to].add(_value);\n        if(codeLength>0) {\n            ERC223ReceivingContract receiver = ERC223ReceivingContract(_to);\n            receiver.tokenFallback(msg.sender, _value, _data);\n        }\n        emit Transfer(msg.sender, _to, _value, _data);\n    }\n    \n  function isContract(address _addr) private returns (bool is_contract) {\n      uint length;\n      assembly {\n            length := extcodesize(_addr)\n      }\n      return (length>0);\n    }\n\n\n}", "debug": "calldata_StandardToken_32 + 36: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_StandardToken_0: 0xbe45fd6200000000000000000000000000000000000000000000000000000000\ncalldatasize_StandardToken: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `transfer(address,uint256,bytes)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/22/0xfd30e1e687965f2b7aff7129156a5f50996f8f6b.sol", "function": "transfer(address,uint256,bytes)", "lineno": 204, "title": "Integer Overflow ", "type": "Warning"}, {"address": 5970, "code": "nt256 b) inter", "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncalldata_StandardToken_32 + 4: 0x1\ncalldata_StandardToken_0: 0xbe45fd6200000000000000000000000000000000000000000000000000000000\ncalldatasize_StandardToken: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/22/0xfd30e1e687965f2b7aff7129156a5f50996f8f6b.sol", "function": "transfer(address,uint256,bytes)", "lineno": 72, "title": "Exception state", "type": "Informational"}, {"address": 5988, "code": "wnabl", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_StandardToken_4: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncalldata_StandardToken_32 + 4: 0x57f25cd000000000000000000000000000000000000000000000000000000000\ncalldata_StandardToken_0: 0xd73dd62300000000000000000000000000000000000000000000000000000000\ncalldatasize_StandardToken: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `increaseApproval(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/22/0xfd30e1e687965f2b7aff7129156a5f50996f8f6b.sol", "function": "increaseApproval(address,uint256)", "lineno": 81, "title": "Integer Overflow ", "type": "Warning"}, {"address": 6001, "code": "ddress public ", "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_StandardToken_4: 0x1\ncalldata_StandardToken_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_StandardToken_0: 0xd73dd62300000000000000000000000000000000000000000000000000000000\ncalldatasize_StandardToken: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/22/0xfd30e1e687965f2b7aff7129156a5f50996f8f6b.sol", "function": "increaseApproval(address,uint256)", "lineno": 82, "title": "Exception state", "type": "Informational"}], "success": true}