{"error": null, "issues": [{"address": 966, "code": "- last_time) );\n        last", "debug": "storage_8: 0xb2c81e3be60b809eebca250ae5f3958de8241f3c0942692d3cecd1fd00743211\ncallvalue: 0x93931c13e507cbbcbf74d9eee4fb920eeaef84aa5110428da2eddb017d5ebcdd\nstorage_5: 0x0\ntimestamp: 0x0\ncalldata_ZeroCap_0: 0x93e84cd900000000000000000000000000000000000000000000000000000000\ncalldatasize_ZeroCap: 0x4\n", "description": "A possible integer overflow exists in the function `play()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/31/0xfbe2fa4d1eff72d1c0e7e06ec731f44a85fc76ec.sol", "function": "play()", "lineno": 112, "title": "Integer Overflow ", "type": "Warning"}, {"address": 978, "code": "ing / total_wei", "debug": "timestamp: 0x0\nstorage_6: 0x1\ncallvalue: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_5: 0x0\ncalldata_ZeroCap_0: 0x93e84cd900000000000000000000000000000000000000000000000000000000\ncalldatasize_ZeroCap: 0x4\n", "description": "A possible integer underflow exists in the function `play()`.\nThe subtraction may result in a value < 0.", "filename": "/unique_chucks/31/0xfbe2fa4d1eff72d1c0e7e06ec731f44a85fc76ec.sol", "function": "play()", "lineno": 114, "title": "Integer Underflow", "type": "Warning"}, {"address": 982, "code": "e_extension_from_doubling / total_wei_", "debug": "timestamp: 0x434d643843f140c211e0802160000007fffffffffffffffffffffffffffffdf2\nstorage_6: 0x434d643843f140c211e080216000000800000000000000000000000000000000\ncallvalue: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_5: 0x434d643843f140c211e0802160000007fffffffffffffffffffffffffffffdf2\ncalldata_ZeroCap_0: 0x93e84cd900000000000000000000000000000000000000000000000000000000\ncalldatasize_ZeroCap: 0x4\n", "description": "A possible integer overflow exists in the function `play()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/31/0xfbe2fa4d1eff72d1c0e7e06ec731f44a85fc76ec.sol", "function": "play()", "lineno": 114, "title": "Integer Overflow ", "type": "Warning"}, {"address": 989, "code": "ended_time = now + ema *", "debug": "storage_7: 0x49f49f49f49f49f49f49f49f49f49f49f49f49f49f49f49f49f49f49f49f4a0\nstorage_5: 0x0\ncallvalue: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ntimestamp: 0x0\ncalldata_ZeroCap_0: 0x93e84cd900000000000000000000000000000000000000000000000000000000\ncalldatasize_ZeroCap: 0x4\n", "description": "A possible integer overflow exists in the function `play()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/31/0xfbe2fa4d1eff72d1c0e7e06ec731f44a85fc76ec.sol", "function": "play()", "lineno": 114, "title": "Integer Overflow ", "type": "Warning"}, {"address": 997, "code": "ended_time = now + ema * time_extension_from_doubling / total_wei_gi", "debug": "The exception is triggered under the following conditions:\n\ncallvalue: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_5: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_6: 0xe0f\ncalldata_ZeroCap_0: 0x93e84cd900000000000000000000000000000000000000000000000000000000\ncalldatasize_ZeroCap: 0x4\ntimestamp: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/31/0xfbe2fa4d1eff72d1c0e7e06ec731f44a85fc76ec.sol", "function": "play()", "lineno": 114, "title": "Exception state", "type": "Informational"}, {"address": 1032, "code": "e = extended_time;\n        }\n        if (!excess_tok", "debug": "The exception is triggered under the following conditions:\n\ntimestamp: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_6: 0xe10\ncallvalue: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_5: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_ZeroCap_0: 0x93e84cd900000000000000000000000000000000000000000000000000000000\ncalldatasize_ZeroCap: 0x4\nstorage_8: 0x1\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/31/0xfbe2fa4d1eff72d1c0e7e06ec731f44a85fc76ec.sol", "function": "play()", "lineno": 116, "title": "Exception state", "type": "Informational"}, {"address": 1256, "code": "   }\n\n    function finalise() {\n        ", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/31/0xfbe2fa4d1eff72d1c0e7e06ec731f44a85fc76ec.sol", "function": "play()", "lineno": 121, "title": "Message call to external contract", "type": "Informational"}, {"address": 1256, "code": "   }\n\n    function finalise() {\n        ", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1519\n", "filename": "/unique_chucks/31/0xfbe2fa4d1eff72d1c0e7e06ec731f44a85fc76ec.sol", "function": "play()", "lineno": 121, "title": "Multiple Calls", "type": "Information"}, {"address": 1519, "code": "re(now > end_time);\n        excess_tok", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/31/0xfbe2fa4d1eff72d1c0e7e06ec731f44a85fc76ec.sol", "function": "play()", "lineno": 124, "title": "Message call to external contract", "type": "Informational"}, {"address": 1751, "code": "    to_owner = cap_", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/31/0xfbe2fa4d1eff72d1c0e7e06ec731f44a85fc76ec.sol", "function": "finalise()", "lineno": 129, "title": "Message call to external contract", "type": "Informational"}, {"address": 1751, "code": "    to_owner = cap_", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2219\nCall at address: 2219\nCall at address: 2081\nCall at address: 1909\n", "filename": "/unique_chucks/31/0xfbe2fa4d1eff72d1c0e7e06ec731f44a85fc76ec.sol", "function": "finalise()", "lineno": 129, "title": "Multiple Calls", "type": "Information"}, {"address": 1909, "code": "         if (!exc", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/31/0xfbe2fa4d1eff72d1c0e7e06ec731f44a85fc76ec.sol", "function": "finalise()", "lineno": 130, "title": "Message call to external contract", "type": "Informational"}, {"address": 1909, "code": "         if (!exc", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2219\nCall at address: 2219\nCall at address: 2081\n", "filename": "/unique_chucks/31/0xfbe2fa4d1eff72d1c0e7e06ec731f44a85fc76ec.sol", "function": "finalise()", "lineno": 130, "title": "Multiple Calls", "type": "Information"}, {"address": 2081, "code": "his.balance;\n        }\n        if (to_owner > 0", "debug": "", "description": "In the function `finalise()` the following predictable state variables are used to determine Ether recipient:\n- block.timestamp\n", "filename": "/unique_chucks/31/0xfbe2fa4d1eff72d1c0e7e06ec731f44a85fc76ec.sol", "function": "finalise()", "lineno": 134, "title": "Dependence on predictable environment variable", "type": "Warning"}, {"address": 2081, "code": "his.balance;\n        }\n        if (to_owner > 0", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2219\n", "filename": "/unique_chucks/31/0xfbe2fa4d1eff72d1c0e7e06ec731f44a85fc76ec.sol", "function": "finalise()", "lineno": 134, "title": "Multiple Calls", "type": "Information"}, {"address": 2219, "code": "_withdraw;\n\n    func", "debug": "", "description": "In the function `finalise()` the following predictable state variables are used to determine Ether recipient:\n- block.timestamp\n", "filename": "/unique_chucks/31/0xfbe2fa4d1eff72d1c0e7e06ec731f44a85fc76ec.sol", "function": "finalise()", "lineno": 145, "title": "Dependence on predictable environment variable", "type": "Warning"}], "success": true}