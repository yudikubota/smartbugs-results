{"error": null, "issues": [{"address": 642, "code": "erList[i]].distPercent/100;\n            assert(all_token_num > 0);\n            // \u83b7\u5f97\u9501\u4ed3\u7684\u4efd\u989d\n            uint256 locked_token_num = all_token_num*founders[founderList[i]].lockedPercent/100;\n            // \u8bb0\u5f55\u9501\u4ed3\u7684token\n            founders[founderList[i]].lockedToken = locked_token_num;\n            // \u53d1\u653etoken\u7ed9\u521b\u59cb\u4eba\n            TIC.push(founderList[i], all_token_num - locked_token_num);\n        }\n        // \u8bbe\u7f6e\u53d1\u884c\u65f6\u95f4\n        distDay = today();\n        // \u66f4\u65b0\u9501\u4ed3\u65f6\u95f4\n        for(i=0; i<founderList.length; ++i){\n            if (founders[founderList[i]].lockedDay != 0){\n                founders[founderList[i]].lockedDay += distDay;\n            }\n        }\n    }\n\n    // \u786e\u8ba4\u9501\u4ed3\u65f6\u95f4\u662f\u5426\u5230\u4e86\uff0c\u7ed3\u675f\u9501\u4ed3\n    function checkLockedToken() public {\n        // \u5fc5\u987b\u53d1\u884c\u8fc7\n        assert(distDay != 0);\n        // \u6709\u9501\u4ed3\u9700\u6c42\u7684\u521b\u59cb\u4eba\n        assert(founders[msg.sender].lockedDay > 0);\n        // \u6709\u9501\u4ed3\u4ee3\u5e01\n        assert(founders[msg.sender].lockedToken > 0);\n        if (bTest){\n            // \u8ba1\u7b97\u9700\u8981\u89e3\u9501\u7684\u4efd\u989d\n            uint unlock_percent = today() - distDay;\n            if(unlock_", "debug": "calldata_TICDist_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_TICDist_0: 0x4c47e9ee00000000000000000000000000000000000000000000000000000000\ncalldatasize_TICDist: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `_function_0x4c47e9ee`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/16/0xe35e828b42d46d27fb4279b451db211c2002845a.sol", "function": "_function_0x4c47e9ee", "lineno": 455, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1923, "code": "t LogSetOwner(", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/16/0xe35e828b42d46d27fb4279b451db211c2002845a.sol", "function": "setOwner(address)", "lineno": 29, "title": "State change after external call", "type": "Warning"}, {"address": 2182, "code": "       founderList = founders_;\n  ", "debug": "The exception is triggered under the following conditions:\n\nstorage_2: 0xffffffffffffffffffffffffffffffffffffffff00\ncaller: 0x0\ncalldata_TICDist_0: 0x263c943500000000000000000000000000000000000000000000000000000000\ncalldatasize_TICDist: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/16/0xe35e828b42d46d27fb4279b451db211c2002845a.sol", "function": "_function_0x263c9435", "lineno": 405, "title": "Exception state", "type": "Informational"}, {"address": 2309, "code": "ounders_[i]", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/16/0xe35e828b42d46d27fb4279b451db211c2002845a.sol", "function": "_function_0x263c9435", "lineno": 407, "title": "Message call to external contract", "type": "Warning"}, {"address": 2309, "code": "ounders_[i]", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2797\nCall at address: 2501\n", "filename": "/unique_chucks/16/0xe35e828b42d46d27fb4279b451db211c2002845a.sol", "function": "_function_0x263c9435", "lineno": 407, "title": "Multiple Calls", "type": "Information"}, {"address": 2395, "code": "nders[founders_[i]].distPercent = pe", "debug": "The exception is triggered under the following conditions:\n\nretval_2309: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nreturndatasize: 0x20\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_2: 0x0\ncaller: 0x0\ncalldata_TICDist_0: 0x263c943500000000000000000000000000000000000000000000000000000000\ncalldatasize_TICDist: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/16/0xe35e828b42d46d27fb4279b451db211c2002845a.sol", "function": "_function_0x263c9435", "lineno": 407, "title": "Exception state", "type": "Informational"}, {"address": 2501, "code": "onfig = true;\n   ", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/16/0xe35e828b42d46d27fb4279b451db211c2002845a.sol", "function": "_function_0x263c9435", "lineno": 410, "title": "Message call to external contract", "type": "Warning"}, {"address": 2501, "code": "onfig = true;\n   ", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2797\n", "filename": "/unique_chucks/16/0xe35e828b42d46d27fb4279b451db211c2002845a.sol", "function": "_function_0x263c9435", "lineno": 410, "title": "Multiple Calls", "type": "Information"}, {"address": 2565, "code": "isDistConfig = true;\n    }\n\n  ", "debug": "The exception is triggered under the following conditions:\n\nretval_2309: 0xffffffffffffffffffffffff0000000000000000000000000000000000000000\nretval_2501: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nreturndatasize: 0x20\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_2: 0x0\ncaller: 0x0\ncalldata_TICDist_0: 0x263c943500000000000000000000000000000000000000000000000000000000\ncalldatasize_TICDist: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/16/0xe35e828b42d46d27fb4279b451db211c2002845a.sol", "function": "_function_0x263c9435", "lineno": 410, "title": "Exception state", "type": "Informational"}, {"address": 2797, "code": " function setLockedC", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/16/0xe35e828b42d46d27fb4279b451db211c2002845a.sol", "function": "_function_0x263c9435", "lineno": 417, "title": "Message call to external contract", "type": "Warning"}, {"address": 2896, "code": "Percent;\n           ", "debug": "The exception is triggered under the following conditions:\n\nstorage_5: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncaller: 0x0\ncalldata_TICDist_0: 0x270a385600000000000000000000000000000000000000000000000000000000\ncalldatasize_TICDist: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/16/0xe35e828b42d46d27fb4279b451db211c2002845a.sol", "function": "startDist()", "lineno": 486, "title": "Exception state", "type": "Informational"}, {"address": 2927, "code": "all_token_num = TIC.totalSup", "debug": "The exception is triggered under the following conditions:\n\nstorage_6: 0x0\ncaller: 0x0\ncalldata_TICDist_0: 0x270a385600000000000000000000000000000000000000000000000000000000\ncalldatasize_TICDist: 0x4\nstorage_5: 0x0\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/16/0xe35e828b42d46d27fb4279b451db211c2002845a.sol", "function": "startDist()", "lineno": 489, "title": "Exception state", "type": "Informational"}, {"address": 3244, "code": "num*unlock_percen", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/16/0xe35e828b42d46d27fb4279b451db211c2002845a.sol", "function": "startDist()", "lineno": 493, "title": "Message call to external contract", "type": "Informational"}, {"address": 3244, "code": "num*unlock_percen", "debug": "", "description": "A possible transaction order independence vulnerability exists in function startDist(). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/16/0xe35e828b42d46d27fb4279b451db211c2002845a.sol", "function": "startDist()", "lineno": 493, "title": "Transaction order dependence", "type": "Warning"}, {"address": 4300, "code": "m*founders[founderList[i]].l", "debug": "The exception is triggered under the following conditions:\n\nstorage_6: 0x0\ncaller: 0x0\ncalldata_TICDist_0: 0x4c47e9ee00000000000000000000000000000000000000000000000000000000\ncalldatasize_TICDist: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/16/0xe35e828b42d46d27fb4279b451db211c2002845a.sol", "function": "_function_0x4c47e9ee", "lineno": 458, "title": "Exception state", "type": "Informational"}, {"address": 4331, "code": "           founders[founderList", "debug": "The exception is triggered under the following conditions:\n\nstorage_6: 0xff00\ncaller: 0x0\ncalldata_TICDist_0: 0x4c47e9ee00000000000000000000000000000000000000000000000000000000\ncalldatasize_TICDist: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/16/0xe35e828b42d46d27fb4279b451db211c2002845a.sol", "function": "_function_0x4c47e9ee", "lineno": 460, "title": "Exception state", "type": "Informational"}, {"address": 4896, "code": "nstant returns (uint", "debug": "The exception is triggered under the following conditions:\n\ncalldata_TICDist_0: 0x5c13d06f00000000000000000000000000000000000000000000000000000000\ncalldatasize_TICDist: 0x4\nstorage_5: 0x0\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/16/0xe35e828b42d46d27fb4279b451db211c2002845a.sol", "function": "checkLockedToken()", "lineno": 519, "title": "Exception state", "type": "Informational"}, {"address": 4974, "debug": "The exception is triggered under the following conditions:\n\nstorage_5: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_TICDist_0: 0x5c13d06f00000000000000000000000000000000000000000000000000000000\ncalldatasize_TICDist: 0x4\nstorage_2 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/16/0xe35e828b42d46d27fb4279b451db211c2002845a.sol", "function": "checkLockedToken()", "lineno": 522, "title": "Exception state", "type": "Informational"}, {"address": 5052, "debug": "The exception is triggered under the following conditions:\n\nstorage_2 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_5: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_TICDist_0: 0x5c13d06f00000000000000000000000000000000000000000000000000000000\ncalldatasize_TICDist: 0x4\nstorage_3 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/16/0xe35e828b42d46d27fb4279b451db211c2002845a.sol", "function": "checkLockedToken()", "lineno": 522, "title": "Exception state", "type": "Informational"}, {"address": 5438, "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/16/0xe35e828b42d46d27fb4279b451db211c2002845a.sol", "function": "checkLockedToken()", "lineno": 522, "title": "Message call to external contract", "type": "Informational"}, {"address": 6472, "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/16/0xe35e828b42d46d27fb4279b451db211c2002845a.sol", "function": "checkLockedToken()", "lineno": 522, "title": "Message call to external contract", "type": "Informational"}, {"address": 6949, "code": "gth == percents_.length);\n   ", "debug": "The exception is triggered under the following conditions:\n\nstorage_6: 0xff00\ncaller: 0x0\ncalldata_TICDist_0: 0x9d17655600000000000000000000000000000000000000000000000000000000\ncalldatasize_TICDist: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/16/0xe35e828b42d46d27fb4279b451db211c2002845a.sol", "function": "_function_0x9d176556", "lineno": 425, "title": "Exception state", "type": "Informational"}, {"address": 7443, "code": "\u5c0f\u4e8e100\n    function setDistCo", "debug": "The exception is triggered under the following conditions:\n\ncalldata_TICDist_4: 0x0\nstorage_7: 0x0\ncalldata_TICDist_0: 0xc75a622400000000000000000000000000000000000000000000000000000000\ncalldatasize_TICDist: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/16/0xe35e828b42d46d27fb4279b451db211c2002845a.sol", "function": "_function_0xc75a6224", "lineno": 389, "title": "Exception state", "type": "Informational"}, {"address": 8149, "code": "\n\n\ncontract DSNote {\n    event Lo", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/16/0xe35e828b42d46d27fb4279b451db211c2002845a.sol", "function": "_function_0x9d176556", "lineno": 56, "title": "Message call to external contract", "type": "Informational"}, {"address": 8149, "code": "\n\n\ncontract DSNote {\n    event Lo", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2501\nCall at address: 2309\n", "filename": "/unique_chucks/16/0xe35e828b42d46d27fb4279b451db211c2002845a.sol", "function": "_function_0x263c9435", "lineno": 56, "title": "Multiple Calls", "type": "Information"}, {"address": 8149, "code": "\n\n\ncontract DSNote {\n    event Lo", "debug": "", "description": "A possible transaction order independence vulnerability exists in function _function_0x9d176556. The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/16/0xe35e828b42d46d27fb4279b451db211c2002845a.sol", "function": "_function_0x9d176556", "lineno": 56, "title": "Transaction order dependence", "type": "Warning"}], "success": true}