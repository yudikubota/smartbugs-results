{"error": null, "issues": [{"address": 478, "code": "  //We will do cycle on the queue\n        fo", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/15/0xfa0ccb7b23015e1afe28bf0dbd33a3448acf6f5d.sol", "function": "fallback", "lineno": 133, "title": "Message call to external contract", "type": "Informational"}, {"address": 478, "code": "  //We will do cycle on the queue\n        fo", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1182\n", "filename": "/unique_chucks/15/0xfa0ccb7b23015e1afe28bf0dbd33a3448acf6f5d.sol", "function": "fallback", "lineno": 133, "title": "Multiple Calls", "type": "Information"}, {"address": 787, "code": ";\n\n/**\n  Multiplie", "debug": "callvalue: 0x1b00000000\nstorage_0: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nretval_478: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ngas: 0x3d090\ncaller: 0x83205ddd0c80a3b331b64c4403bea1736ee2e327\ncalldata_Multiplier2_0: 0x0\ncalldatasize_Multiplier2: 0x4\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/15/0xfa0ccb7b23015e1afe28bf0dbd33a3448acf6f5d.sol", "function": "fallback", "lineno": 1, "title": "Integer Overflow ", "type": "Warning"}, {"address": 790, "code": "ontract: returns 111% o", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/15/0xfa0ccb7b23015e1afe28bf0dbd33a3448acf6f5d.sol", "function": "fallback", "lineno": 4, "title": "State change after external call", "type": "Warning"}, {"address": 893, "code": " to fully pay to investor\n                dep.depositor.send(dep.expect); //Send money", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/15/0xfa0ccb7b23015e1afe28bf0dbd33a3448acf6f5d.sol", "function": "fallback", "lineno": 138, "title": "State change after external call", "type": "Warning"}, {"address": 956, "code": " to fully pay to investor\n                dep.depositor.send(dep.expect); //Send money", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/15/0xfa0ccb7b23015e1afe28bf0dbd33a3448acf6f5d.sol", "function": "fallback", "lineno": 138, "title": "State change after external call", "type": "Warning"}, {"address": 1019, "code": " to fully pay to investor\n                dep.depositor.send(dep.expect); //Send money", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/15/0xfa0ccb7b23015e1afe28bf0dbd33a3448acf6f5d.sol", "function": "fallback", "lineno": 138, "title": "State change after external call", "type": "Warning"}, {"address": 1095, "code": "         money -= dep.expect;        ", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/15/0xfa0ccb7b23015e1afe28bf0dbd33a3448acf6f5d.sol", "function": "fallback", "lineno": 140, "title": "State change after external call", "type": "Warning"}, {"address": 1182, "code": "     }else{\n                ", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2738\nCall at address: 2738\nCall at address: 2344\nCall at address: 2344\n", "filename": "/unique_chucks/15/0xfa0ccb7b23015e1afe28bf0dbd33a3448acf6f5d.sol", "function": "fallback", "lineno": 145, "title": "Multiple Calls", "type": "Information"}, {"address": 1182, "code": "     }else{\n                ", "debug": "", "description": "The return value of an external call is not checked. Note that execution continue even if the called contract throws.", "filename": "/unique_chucks/15/0xfa0ccb7b23015e1afe28bf0dbd33a3448acf6f5d.sol", "function": "fallback", "lineno": 145, "title": "Unchecked CALL return value", "type": "Informational"}, {"address": 2344, "code": "osit, uint expect){\n        De", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2738\nCall at address: 2344\n", "filename": "/unique_chucks/15/0xfa0ccb7b23015e1afe28bf0dbd33a3448acf6f5d.sol", "function": "fallback", "lineno": 161, "title": "Multiple Calls", "type": "Information"}, {"address": 2344, "code": "osit, uint expect){\n        De", "debug": "", "description": "A possible transaction order independence vulnerability exists in function fallback. The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/15/0xfa0ccb7b23015e1afe28bf0dbd33a3448acf6f5d.sol", "function": "fallback", "lineno": 161, "title": "Transaction order dependence", "type": "Warning"}, {"address": 2344, "code": "osit, uint expect){\n        De", "debug": "", "description": "The return value of an external call is not checked. Note that execution continue even if the called contract throws.", "filename": "/unique_chucks/15/0xfa0ccb7b23015e1afe28bf0dbd33a3448acf6f5d.sol", "function": "fallback", "lineno": 161, "title": "Unchecked CALL return value", "type": "Informational"}, {"address": 2738, "code": "\n                c++;\n   ", "debug": "", "description": "A possible transaction order independence vulnerability exists in function fallback. The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/15/0xfa0ccb7b23015e1afe28bf0dbd33a3448acf6f5d.sol", "function": "fallback", "lineno": 170, "title": "Transaction order dependence", "type": "Warning"}, {"address": 2738, "code": "\n                c++;\n   ", "debug": "", "description": "The return value of an external call is not checked. Note that execution continue even if the called contract throws.", "filename": "/unique_chucks/15/0xfa0ccb7b23015e1afe28bf0dbd33a3448acf6f5d.sol", "function": "fallback", "lineno": 170, "title": "Unchecked CALL return value", "type": "Informational"}, {"address": 2782, "code": "ts (index, deposit,", "debug": "gas: 0x10000000003010\ncallvalue: 0x4a8000ef60c0400\nstorage_1: 0x35bd538d83b05000000000000000000000000000000008000000000000000000\nbalance_at_1461501637330902918203684832716283019655932542975 & 0: 0x9103011a00251b242636df3f181f1e142158b1898384621c7fffff1eb4dd302\nstorage_1 +\n18569430475105882587588266137607568536673111973893317399460219858819262702949 +\n2*storage_1: 0xa0fe7bd844001f5800000020102ffcbf00\nstorage_1 +\n18569430475105882587588266137607568536673111973893317399460219858819262702947 +\n2*storage_1: 0x204b407d4e620a080000000000000000\nstorage_0: 0x40c1a747006080000100000000000000000000000000000000000001ffffffff\nretval_478: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncaller: 0x83205ddd0c80a3b331b64c4403bea1736ee2e327\ncalldatasize_Multiplier2: 0x3\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\n", "description": "A possible integer underflow exists in the function `fallback`.\nThe subtraction may result in a value < 0.", "filename": "/unique_chucks/15/0xfa0ccb7b23015e1afe28bf0dbd33a3448acf6f5d.sol", "function": "fallback", "lineno": 176, "title": "Integer Underflow", "type": "Warning"}, {"address": 2879, "code": "            uint j = 0;\n ", "debug": "callvalue: 0x2000000000000000\nstorage_1: 0x8000000000000000000000000000000000000000000000000000000000000000\nstorage_0: 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nretval_478: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ngas: 0x3d090\ncaller: 0x83205ddd0c80a3b331b64c4403bea1736ee2e327\ncalldata_Multiplier2_0: 0x300000000000000000000000000000000000000000000000000000000\ncalldatasize_Multiplier2: 0x4\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/15/0xfa0ccb7b23015e1afe28bf0dbd33a3448acf6f5d.sol", "function": "fallback", "lineno": 185, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2885, "code": "            uint j = 0;\n ", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/15/0xfa0ccb7b23015e1afe28bf0dbd33a3448acf6f5d.sol", "function": "fallback", "lineno": 185, "title": "State change after external call", "type": "Warning"}, {"address": 3550, "code": "= dep.expe", "debug": "The exception is triggered under the following conditions:\n\ncalldata_Multiplier2_4: 0x0\nstorage_0: 0x0\ncalldata_Multiplier2_0: 0x9f9fb96800000000000000000000000000000000000000000000000000000000\ncalldatasize_Multiplier2: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/15/0xfa0ccb7b23015e1afe28bf0dbd33a3448acf6f5d.sol", "function": "getDeposit(uint256)", "lineno": 191, "title": "Exception state", "type": "Informational"}], "success": true}