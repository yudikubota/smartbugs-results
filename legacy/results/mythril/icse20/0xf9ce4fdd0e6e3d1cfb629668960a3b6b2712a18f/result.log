{"error": null, "issues": [{"address": 3124, "code": "ss where funds are", "debug": "storage_0: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_WhitelistProxyInterface_0: 0xf003700500000000000000000000000000000000000000000000000000000000\ncalldatasize_WhitelistProxyInterface: 0x4\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/17/0xf9ce4fdd0e6e3d1cfb629668960a3b6b2712a18f.sol", "function": "fallback", "lineno": 322, "title": "Integer Overflow ", "type": "Warning"}, {"address": 3745, "code": "Dai > 0, \"invalid parameter(", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 4077\n", "filename": "/unique_chucks/17/0xf9ce4fdd0e6e3d1cfb629668960a3b6b2712a18f.sol", "function": "fallback", "lineno": 754, "title": "Multiple Calls", "type": "Information"}, {"address": 3745, "code": "Dai > 0, \"invalid parameter(", "debug": "", "description": "A possible transaction order independence vulnerability exists in function fallback. The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/17/0xf9ce4fdd0e6e3d1cfb629668960a3b6b2712a18f.sol", "function": "fallback", "lineno": 754, "title": "Transaction order dependence", "type": "Warning"}, {"address": 6890, "code": "ed(_from, _amountDai);\n  }\n\n  function pull(ad", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/17/0xf9ce4fdd0e6e3d1cfb629668960a3b6b2712a18f.sol", "function": "withdrawMoneyMarket(uint256)", "lineno": 768, "title": "Message call to external contract", "type": "Informational"}, {"address": 7920, "code": "ount) internal view return", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 8191\n", "filename": "/unique_chucks/17/0xf9ce4fdd0e6e3d1cfb629668960a3b6b2712a18f.sol", "function": "reverse(address)", "lineno": 879, "title": "Multiple Calls", "type": "Information"}, {"address": 8575, "code": "getTokenAmount(weiRai", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 6890\n", "filename": "/unique_chucks/17/0xf9ce4fdd0e6e3d1cfb629668960a3b6b2712a18f.sol", "function": "withdrawMoneyMarket(uint256)", "lineno": 862, "title": "Multiple Calls", "type": "Information"}, {"address": 8984, "debug": "", "description": "A possible transaction order independence vulnerability exists in function fallback. The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/17/0xf9ce4fdd0e6e3d1cfb629668960a3b6b2712a18f.sol", "function": "fallback", "lineno": 918, "title": "Transaction order dependence", "type": "Warning"}, {"address": 9075, "debug": "The exception is triggered under the following conditions:\n\nreturndatasize: 0x20\nretval_8984: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_WhitelistProxyInterface_0: 0xef8b715500000000000000000000000000000000000000000000000000000000\ncalldatasize_WhitelistProxyInterface: 0x4\nstorage_3: 0x0\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/17/0xf9ce4fdd0e6e3d1cfb629668960a3b6b2712a18f.sol", "function": "fallback", "lineno": 918, "title": "Exception state", "type": "Informational"}, {"address": 12226, "code": "ProxyInterface {\n  function ", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 12585\n", "filename": "/unique_chucks/17/0xf9ce4fdd0e6e3d1cfb629668960a3b6b2712a18f.sol", "function": "claimRefund(address)", "lineno": 799, "title": "Multiple Calls", "type": "Information"}, {"address": 12226, "code": "ProxyInterface {\n  function ", "debug": "", "description": "A possible transaction order independence vulnerability exists in function claimRefund(address). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/17/0xf9ce4fdd0e6e3d1cfb629668960a3b6b2712a18f.sol", "function": "claimRefund(address)", "lineno": 799, "title": "Transaction order dependence", "type": "Warning"}], "success": true}