{
  "contract": "0x547116a8c592c4d76f9d843af04f5a66cfa32ccb",
  "tool": "mythril",
  "start": 1563259023.362863,
  "end": 1563259242.7031658,
  "duration": 219.34030270576477,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 139,
        "code": "= ERC20(token).",
        "debug": "The exception is triggered under the following conditions:\n\ncallvalue: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_TokenSale_0: 0x6b091f100000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenSale: 0x4\nstorage_2: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0x547116a8c592c4d76f9d843af04f5a66cfa32ccb.sol",
        "function": "fallback",
        "lineno": 39,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 335,
        "code": "\n        if (tokens>max) {\n          ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_contracts/0x547116a8c592c4d76f9d843af04f5a66cfa32ccb.sol",
        "function": "fallback",
        "lineno": 39,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 335,
        "code": "\n        if (tokens>max) {\n          ",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 921\nCall at address: 682\nCall at address: 921\nCall at address: 682\nCall at address: 458\n",
        "filename": "/unique_contracts/0x547116a8c592c4d76f9d843af04f5a66cfa32ccb.sol",
        "function": "fallback",
        "lineno": 39,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 458,
        "code": "\n        }\n        ERC20(token).transfer",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 921\nCall at address: 682\n",
        "filename": "/unique_contracts/0x547116a8c592c4d76f9d843af04f5a66cfa32ccb.sol",
        "function": "fallback",
        "lineno": 42,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 682,
        "code": "        emit TokenSold(msg.sender,tokens)",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_contracts/0x547116a8c592c4d76f9d843af04f5a66cfa32ccb.sol",
        "function": "fallback",
        "lineno": 45,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 682,
        "code": "        emit TokenSold(msg.sender,tokens)",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 921\n",
        "filename": "/unique_contracts/0x547116a8c592c4d76f9d843af04f5a66cfa32ccb.sol",
        "function": "fallback",
        "lineno": 45,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 921,
        "code": "}",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function fallback. The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_contracts/0x547116a8c592c4d76f9d843af04f5a66cfa32ccb.sol",
        "function": "fallback",
        "lineno": 48,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 1572,
        "code": "his))<tkn) revert();\n        ERC20(t",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_contracts/0x547116a8c592c4d76f9d843af04f5a66cfa32ccb.sol",
        "function": "withdrawTokens(address,uint256)",
        "lineno": 32,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 1572,
        "code": "his))<tkn) revert();\n        ERC20(t",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1839\n",
        "filename": "/unique_contracts/0x547116a8c592c4d76f9d843af04f5a66cfa32ccb.sol",
        "function": "withdrawTokens(address,uint256)",
        "lineno": 32,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 1839,
        "code": ";\n    }\n    \n    function () pay",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_contracts/0x547116a8c592c4d76f9d843af04f5a66cfa32ccb.sol",
        "function": "withdrawTokens(address,uint256)",
        "lineno": 33,
        "title": "Message call to external contract",
        "type": "Warning"
      }
    ],
    "success": true
  }
}