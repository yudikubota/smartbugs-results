{"error": null, "issues": [{"address": 957, "code": "ibutionuserFinished = true;\n        emit DistrFinished();\n        return true;\n    }\n\n    function balanceOf(address _owner) constant public returns (uint256) {\n\t    return balances[_", "debug": "calldata_Token_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_Token_0: 0x502dadb000000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `disableWhitelist(address[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x4612ba355055b16169b581849bbc6db85de9c058.sol", "function": "disableWhitelist(address[])", "lineno": 211, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1337, "code": "0; i < addresses.length; i++) {\n            blacklist[addresses[i]] = true;\n        }\n    }\n\n    function finishUserDistribution() onlyOwner canUserDistr public returns (bool) {\n     ", "debug": "calldata_Token_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_Token_0: 0x9c09c83500000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `enableWhitelist(address[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x4612ba355055b16169b581849bbc6db85de9c058.sol", "function": "enableWhitelist(address[])", "lineno": 205, "title": "Integer Overflow ", "type": "Warning"}, {"address": 3038, "code": ".mul(20));\n    }\n\n    function team", "debug": "The exception is triggered under the following conditions:\n\ncalldatasize_Token: 0x60\ncalldata_Token_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_contracts/0x4612ba355055b16169b581849bbc6db85de9c058.sol", "function": "transferFrom(address,address,uint256)", "lineno": 111, "title": "Exception state", "type": "Informational"}, {"address": 5279, "code": ".mul(20));\n    }\n\n    function team", "debug": "The exception is triggered under the following conditions:\n\ncalldatasize_Token: 0x4\ncalldata_Token_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_contracts/0x4612ba355055b16169b581849bbc6db85de9c058.sol", "function": "transfer(address,uint256)", "lineno": 111, "title": "Exception state", "type": "Informational"}, {"address": 6013, "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_contracts/0x4612ba355055b16169b581849bbc6db85de9c058.sol", "function": "getTokenBalance(address,address)", "lineno": 272, "title": "Message call to external contract", "type": "Warning"}, {"address": 7602, "code": "\n    return a ", "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x416c1b1337f07ab25000078c080442661ed5acb87f5fffff7ffffdffe70500e1\nstorage_8: 0xae653b8f5abd000c0054ebcdb2ebb787569273b749a200010004240041000000\nstorage_13: 0x187919e84276022c00578be18aee343f7ed7783f1b4abc7fe3fef7ffff17f9cc\nstorage_14: 0xc6de55779d33023800ac77af3dd9ebc6d569ebf664ecbc80e4031c004017f9cd\nstorage_9: 0xc6de55779d33023800ac77af3dd9ebc6d569ebf664ecbc80e4031c004017f9cd\nstorage_10: 0xae653b8f5abd000c0054ebcdb2ebb787569273b749a200010004240041000001\nstorage_16: 0x0\ncalldatasize_Token: 0x3\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_contracts/0x4612ba355055b16169b581849bbc6db85de9c058.sol", "function": "fallback", "lineno": 16, "title": "Exception state", "type": "Informational"}, {"address": 7620, "code": ">= a)", "debug": "storage_6: 0x57f25cd000000000000000000000000000000000000000000000000000000000\nstorage_12: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_11: 0x57f25cd000000000000000000000000000000000000000000000000000000001\nstorage_1: 0x0\ncaller: 0x0\nstorage_16: 0x0\ncalldata_Token_0: 0x2c58139c00000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\n", "description": "A possible integer overflow exists in the function `teamRelease(address)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x4612ba355055b16169b581849bbc6db85de9c058.sol", "function": "teamRelease(address)", "lineno": 22, "title": "Integer Overflow ", "type": "Warning"}, {"address": 7633, "code": "eturn c;\n  }\n}", "debug": "The exception is triggered under the following conditions:\n\nstorage_6: 0xe9deffb766f7de7744b816e3b517cbc80626b3153a8af64c0c7f657fbcafb7de\nstorage_12: 0x82ecbd2423341666402032d124142a2de24e0663128a850c006a6560198e3401\nstorage_11: 0xe9deffb766f7de7744b816e3b517cbc80626b3153a8af64c0c7f657fbcafb7df\nstorage_1: 0x0\ncaller: 0x0\nstorage_16: 0x0\ncalldata_Token_0: 0x2c58139c00000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_contracts/0x4612ba355055b16169b581849bbc6db85de9c058.sol", "function": "teamRelease(address)", "lineno": 23, "title": "Exception state", "type": "Informational"}], "success": true}