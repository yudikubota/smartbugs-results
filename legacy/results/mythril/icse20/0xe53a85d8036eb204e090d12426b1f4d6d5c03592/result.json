{
  "contract": "0xe53a85d8036eb204e090d12426b1f4d6d5c03592",
  "tool": "mythril",
  "start": 1563667668.320155,
  "end": 1563667679.5964332,
  "duration": 11.276278257369995,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 814,
        "code": "     reg := sload(slot)\n        }\n    }\n",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/35/0xe53a85d8036eb204e090d12426b1f4d6d5c03592.sol",
        "function": "fallback",
        "lineno": 341,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 814,
        "code": "     reg := sload(slot)\n        }\n    }\n",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 889\n",
        "filename": "/unique_chucks/35/0xe53a85d8036eb204e090d12426b1f4d6d5c03592.sol",
        "function": "fallback",
        "lineno": 341,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 814,
        "code": "     reg := sload(slot)\n        }\n    }\n",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function fallback. The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/35/0xe53a85d8036eb204e090d12426b1f4d6d5c03592.sol",
        "function": "fallback",
        "lineno": 341,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 889,
        "code": "            default { return(0, returndatasize) }\n      ",
        "debug": "",
        "description": "This contract forwards its call data via DELEGATECALL in its fallback function. This means that any function in the called contract can be executed. Note that the callee contract will have access to the storage of the calling contract.\n DELEGATECALL target: retval_814",
        "filename": "/unique_chucks/35/0xe53a85d8036eb204e090d12426b1f4d6d5c03592.sol",
        "function": "fallback",
        "lineno": 275,
        "title": "Call data forwarded with delegatecall()",
        "type": "Informational"
      },
      {
        "address": 889,
        "code": "            default { return(0, returndatasize) }\n      ",
        "debug": "",
        "description": "Be aware that the called contract gets unrestricted access to this contract's state.",
        "filename": "/unique_chucks/35/0xe53a85d8036eb204e090d12426b1f4d6d5c03592.sol",
        "function": "fallback",
        "lineno": 275,
        "title": "DELEGATECALL to a user-supplied address",
        "type": "Informational"
      }
    ],
    "success": true
  }
}