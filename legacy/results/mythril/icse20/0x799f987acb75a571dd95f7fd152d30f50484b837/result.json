{
  "contract": "0x799f987acb75a571dd95f7fd152d30f50484b837",
  "tool": "mythril",
  "start": 1563648225.302245,
  "end": 1563648497.2731445,
  "duration": 271.9708995819092,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 132,
        "code": "wPubKeyForHash(bytes28 phoneHash, string pubKey) {\n    if(msg.sender != owner) { throw; }\n    User u = users[phoneHash];\n    u.pubKeys[u.pubKeysCount++] = pubKey;\n  }\n\n}",
        "debug": "calldata_Sylence_32 + 4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_Sylence_0: 0xf74e68900000000000000000000000000000000000000000000000000000000\ncalldatasize_Sylence: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `registerNewPubKeyForHash(bytes28,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/30/0x799f987acb75a571dd95f7fd152d30f50484b837.sol",
        "function": "registerNewPubKeyForHash(bytes28,string)",
        "lineno": 20,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 897,
        "code": "ntract Sylence {\n\n  struct User {\n    uint16 pubKeysCount;\n    mapping(uint16 => string) pubKeys;\n  }\n  mapping(bytes28 => User) users;\n\n  address owner;\n\n  function Sylence() { owner = msg.sender; }\n\n  function getPubKeyByHash(bytes28 phoneHash) constant returns (string pubKey) {\n    User u = users[phoneHash];\n    pubKey = u.pubKeys[u.pubKeysCount];\n  }\n\n  function registerNewPubKeyForHash(bytes28 phoneHash, string pubKey) {\n    if(msg.sender != owner) { throw; }\n    User u = users[phoneHash];\n    u.pubKeys[u.pubKeysCount++] = pubKey;\n  }\n\n}",
        "debug": "keccac_keccac_65535_&\n65535_&\n65535_&\nUDiv(storage_0_+\nkeccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n4294967295_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n4294967295_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n4294967295_&\ncalldata_Sylence_4,\n_____256): 0xff13e6a7459ae5a4c49c419171c3f89100a371508000000000129200000219e2\nstorage_keccac_65535_&\n65535_&\n65535_&\nUDiv(storage_0_+\nkeccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n4294967295_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n4294967295_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n4294967295_&\ncalldata_Sylence_4,\n_____256): 0xbac1c3147749165dd7d1977fffffffffffffffffffffffffffffffffffffffc5\nstorage_1: 0x0\ncaller: 0x0\ncalldata_Sylence_0: 0xf74e68900000000000000000000000000000000000000000000000000000000\ncalldatasize_Sylence: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `registerNewPubKeyForHash(bytes28,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/30/0x799f987acb75a571dd95f7fd152d30f50484b837.sol",
        "function": "registerNewPubKeyForHash(bytes28,string)",
        "lineno": 3,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 926,
        "code": "ntract Sylence {\n\n  struct User {\n    uint16 pubKeysCount;\n    mapping(uint16 => string) pubKeys;\n  }\n  mapping(bytes28 => User) users;\n\n  address owner;\n\n  function Sylence() { owner = msg.sender; }\n\n  function getPubKeyByHash(bytes28 phoneHash) constant returns (string pubKey) {\n    User u = users[phoneHash];\n    pubKey = u.pubKeys[u.pubKeysCount];\n  }\n\n  function registerNewPubKeyForHash(bytes28 phoneHash, string pubKey) {\n    if(msg.sender != owner) { throw; }\n    User u = users[phoneHash];\n    u.pubKeys[u.pubKeysCount++] = pubKey;\n  }\n\n}",
        "debug": "calldata_Sylence_4 + calldata_Sylence_32 + 4: 0x8000000000000000000000000000000000000000000000000000000000000000\nstorage_1: 0x0\ncaller: 0x0\ncalldata_Sylence_0: 0xf74e68900000000000000000000000000000000000000000000000000000000\ncalldatasize_Sylence: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `registerNewPubKeyForHash(bytes28,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/30/0x799f987acb75a571dd95f7fd152d30f50484b837.sol",
        "function": "registerNewPubKeyForHash(bytes28,string)",
        "lineno": 3,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 940,
        "code": "ntract Sylence {\n\n  struct User {\n    uint16 pubKeysCount;\n    mapping(uint16 => string) pubKeys;\n  }\n  mapping(bytes28 => User) users;\n\n  address owner;\n\n  function Sylence() { owner = msg.sender; }\n\n  function getPubKeyByHash(bytes28 phoneHash) constant returns (string pubKey) {\n    User u = users[phoneHash];\n    pubKey = u.pubKeys[u.pubKeysCount];\n  }\n\n  function registerNewPubKeyForHash(bytes28 phoneHash, string pubKey) {\n    if(msg.sender != owner) { throw; }\n    User u = users[phoneHash];\n    u.pubKeys[u.pubKeysCount++] = pubKey;\n  }\n\n}",
        "debug": "calldata_Sylence_4 + calldata_Sylence_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\nstorage_1: 0x0\ncaller: 0x0\ncalldata_Sylence_0: 0xf74e68900000000000000000000000000000000000000000000000000000000\ncalldatasize_Sylence: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `registerNewPubKeyForHash(bytes28,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/30/0x799f987acb75a571dd95f7fd152d30f50484b837.sol",
        "function": "registerNewPubKeyForHash(bytes28,string)",
        "lineno": 3,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 962,
        "code": "ntract Sylence {\n\n  struct User {\n    uint16 pubKeysCount;\n    mapping(uint16 => string) pubKeys;\n  }\n  mapping(bytes28 => User) users;\n\n  address owner;\n\n  function Sylence() { owner = msg.sender; }\n\n  function getPubKeyByHash(bytes28 phoneHash) constant returns (string pubKey) {\n    User u = users[phoneHash];\n    pubKey = u.pubKeys[u.pubKeysCount];\n  }\n\n  function registerNewPubKeyForHash(bytes28 phoneHash, string pubKey) {\n    if(msg.sender != owner) { throw; }\n    User u = users[phoneHash];\n    u.pubKeys[u.pubKeysCount++] = pubKey;\n  }\n\n}",
        "debug": "calldata_Sylence_4 + calldata_Sylence_32 + 4: 0x4000f04100100000000000000000000000000000d6401413fffffffffffffe0\nkeccac_keccac_65535_&\n65535_&\n65535_&\nUDiv(storage_0_+\nkeccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n4294967295_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n4294967295_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n4294967295_&\ncalldata_Sylence_4,\n_____256): 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_1: 0x0\ncaller: 0x0\ncalldata_Sylence_0: 0xf74e68900000000000000000000000000000000000000000000000000000000\ncalldatasize_Sylence: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `registerNewPubKeyForHash(bytes28,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/30/0x799f987acb75a571dd95f7fd152d30f50484b837.sol",
        "function": "registerNewPubKeyForHash(bytes28,string)",
        "lineno": 3,
        "title": "Integer Overflow ",
        "type": "Warning"
      }
    ],
    "success": true
  }
}