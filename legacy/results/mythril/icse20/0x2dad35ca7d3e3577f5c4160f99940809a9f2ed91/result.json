{
  "contract": "0x2dad35ca7d3e3577f5c4160f99940809a9f2ed91",
  "tool": "mythril",
  "start": 1563338147.1486824,
  "end": 1563338413.836284,
  "duration": 266.6876015663147,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 535,
        "code": ";\n\n/**\n  \n  EN:\n  ",
        "debug": "callvalue: 0x8c7260989e80000\nstorage_1: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ngas: 0x35b60\ncalldata_BestMultiplier_0: 0x200000000000000000000000000000000000000000000000000000000\ncalldatasize_BestMultiplier: 0x4\n",
        "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x2dad35ca7d3e3577f5c4160f99940809a9f2ed91.sol",
        "function": "fallback",
        "lineno": 1,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 951,
        "code": " fully paid, so remove him\n           ",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2390\nCall at address: 2099\n",
        "filename": "/unique_contracts/0x2dad35ca7d3e3577f5c4160f99940809a9f2ed91.sol",
        "function": "fallback",
        "lineno": 155,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 1871,
        "code": "You can ge",
        "debug": "The exception is triggered under the following conditions:\n\ncallvalue: 0x23c00000000000\nstorage_1: 0x0\nstorage_2: 0x1\nretval_951: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ngas: 0x35b60\ncalldata_BestMultiplier_0: 0x300000000000000000000000000000000000000000000000000000000\ncalldatasize_BestMultiplier: 0x4\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0x2dad35ca7d3e3577f5c4160f99940809a9f2ed91.sol",
        "function": "fallback",
        "lineno": 172,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2099,
        "code": "\n        return (dep.depositor",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2390\nCall at address: 2099\n",
        "filename": "/unique_contracts/0x2dad35ca7d3e3577f5c4160f99940809a9f2ed91.sol",
        "function": "fallback",
        "lineno": 174,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 2099,
        "code": "\n        return (dep.depositor",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function fallback. The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_contracts/0x2dad35ca7d3e3577f5c4160f99940809a9f2ed91.sol",
        "function": "fallback",
        "lineno": 174,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 2099,
        "code": "\n        return (dep.depositor",
        "debug": "",
        "description": "The return value of an external call is not checked. Note that execution continue even if the called contract throws.",
        "filename": "/unique_contracts/0x2dad35ca7d3e3577f5c4160f99940809a9f2ed91.sol",
        "function": "fallback",
        "lineno": 174,
        "title": "Unchecked CALL return value",
        "type": "Informational"
      },
      {
        "address": 2390,
        "code": "     c++;\n        }\n     ",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function fallback. The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_contracts/0x2dad35ca7d3e3577f5c4160f99940809a9f2ed91.sol",
        "function": "fallback",
        "lineno": 183,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 2390,
        "code": "     c++;\n        }\n     ",
        "debug": "",
        "description": "The return value of an external call is not checked. Note that execution continue even if the called contract throws.",
        "filename": "/unique_contracts/0x2dad35ca7d3e3577f5c4160f99940809a9f2ed91.sol",
        "function": "fallback",
        "lineno": 183,
        "title": "Unchecked CALL return value",
        "type": "Informational"
      },
      {
        "address": 2434,
        "code": "eposit, expect) of ",
        "debug": "callvalue: 0xc0300000a000000\nbalance_at_1461501637330902918203684832716283019655932542975 & 0: 0x8000000000000000000000000000000000000000000204888012d\nstorage_1: 0x0\nstorage_1 +\n80084422859880547211683076133703299733277748156566366325829078699459944778998 +\n2*storage_2: 0x3fffffffffffe00e7c76c803257fe0200\nstorage_2: 0x0\nretval_951: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ngas: 0x35b60\ncalldata_BestMultiplier_0: 0x500000000000000000000000000000000000000000000000000000000\ncalldatasize_BestMultiplier: 0x4\n",
        "description": "A possible integer underflow exists in the function `fallback`.\nThe subtraction may result in a value < 0.",
        "filename": "/unique_contracts/0x2dad35ca7d3e3577f5c4160f99940809a9f2ed91.sol",
        "function": "fallback",
        "lineno": 188,
        "title": "Integer Underflow",
        "type": "Warning"
      },
      {
        "address": 3194,
        "code": ";\n        ",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_BestMultiplier_4: 0x0\nstorage_1: 0x0\ncalldata_BestMultiplier_0: 0x9f9fb96800000000000000000000000000000000000000000000000000000000\ncalldatasize_BestMultiplier: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0x2dad35ca7d3e3577f5c4160f99940809a9f2ed91.sol",
        "function": "getDeposit(uint256)",
        "lineno": 203,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}