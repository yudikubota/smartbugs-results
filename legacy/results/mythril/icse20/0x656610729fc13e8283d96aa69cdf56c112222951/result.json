{
  "contract": "0x656610729fc13e8283d96aa69cdf56c112222951",
  "tool": "mythril",
  "start": 1563701486.260952,
  "end": 1563701961.428885,
  "duration": 475.16793298721313,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 300,
        "code": "       if (msg.sender == riddler) {\n            Answer = _answer;\n            isActive = 0;\n            msg.sender.transfer(this.balance);\n        }\n    }\n}",
        "debug": "calldata_JeopardyJack_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_JeopardyJack_0: 0x1e5d1a4c00000000000000000000000000000000000000000000000000000000\ncalldatasize_JeopardyJack: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `End(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/37/0x656610729fc13e8283d96aa69cdf56c112222951.sol",
        "function": "End(string)",
        "lineno": 41,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 392,
        "code": "(string _riddle, bytes32 _answerHash) public payable {\n        if (riddler == 0x0) {\n            riddler = msg.sender;\n            Riddle = _riddle;\n            answerHash = _answerHash;\n            isActive = now;\n        }\n    }\n\n    function Play(s",
        "debug": "calldata_JeopardyJack_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_JeopardyJack_0: 0x4f06567200000000000000000000000000000000000000000000000000000000\ncalldatasize_JeopardyJack: 0x4\n",
        "description": "A possible integer overflow exists in the function `Start(string,bytes32)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/37/0x656610729fc13e8283d96aa69cdf56c112222951.sol",
        "function": "Start(string,bytes32)",
        "lineno": 15,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 642,
        "code": "ess) public payable {\n        require(isActive > 0 && msg.value >= 0.5 ether);\n        if (bytes(guess).length == 0) return;\n        \n        Guess newGuess;\n        newGuess.player = msg.sender;\n        newGuess.guess = guess;\n        Guesses.push(newGuess);\n\n        if (keccak256(guess) == answerHash) {\n            Answer = guess;\n            isActive = 0;\n            msg.sender.transfer(this.balance);\n        }\n    }\n    \n    function End(string _answer",
        "debug": "calldata_JeopardyJack_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_JeopardyJack_0: 0x648f0bde00000000000000000000000000000000000000000000000000000000\ncalldatasize_JeopardyJack: 0x4\n",
        "description": "A possible integer overflow exists in the function `Play(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/37/0x656610729fc13e8283d96aa69cdf56c112222951.sol",
        "function": "Play(string)",
        "lineno": 24,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1792,
        "code": ";\n\ncontract Jeopar",
        "debug": "storage_2: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_1: 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff44\ncalldata_JeopardyJack_4 + calldata_JeopardyJack_4: 0x1\ncallvalue: 0x6f05b59d3b20000\ncalldata_JeopardyJack_0: 0x648f0bde00000000000000000000000000000000000000000000000000000000\ncalldatasize_JeopardyJack: 0x4\n",
        "description": "A possible integer overflow exists in the function `Play(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/37/0x656610729fc13e8283d96aa69cdf56c112222951.sol",
        "function": "Play(string)",
        "lineno": 1,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2235,
        "code": "[] public Guesses;\n   ",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_JeopardyJack_4: 0x0\nstorage_2: 0x0\ncalldata_JeopardyJack_0: 0x675b7fc800000000000000000000000000000000000000000000000000000000\ncalldatasize_JeopardyJack: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/37/0x656610729fc13e8283d96aa69cdf56c112222951.sol",
        "function": "_function_0x675b7fc8",
        "lineno": 6,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2524,
        "code": "ntract JeopardyJack {\n    bytes32 private answerHash;\n    uint private isActive;\n    Guess[] public Guesses;\n    string public Riddle;\n    string public Answer;\n\n    struct Guess { address player; string guess; }\n    address private riddler;\n\n    function () payable public {}\n    \n    function Start(string _riddle, bytes32 _answerHash) public payable {\n        if (riddler == 0x0) {\n            riddler = msg.sender;\n            Riddle = _riddle;\n            answerHash = _answerHash;\n            isActive = now;\n        }\n    }\n\n    function Play(string guess) public payable {\n        require(isActive > 0 && msg.value >= 0.5 ether);\n        if (bytes(guess).length == 0) return;\n        \n        Guess newGuess;\n        newGuess.player = msg.sender;\n        newGuess.guess = guess;\n        Guesses.push(newGuess);\n\n        if (keccak256(guess) == answerHash) {\n            Answer = guess;\n            isActive = 0;\n            msg.sender.transfer(this.balance);\n        }\n    }\n    \n    function End(string _answer) public {\n        if (msg.sender == riddler) {\n            Answer = _answer;\n            isActive = 0;\n            msg.sender.transfer(this.balance);\n        }\n    }\n}",
        "debug": "calldata_JeopardyJack_4 + calldata_JeopardyJack_4: 0x8000000000000000000000000000000000000000000000000000000000000000\ncallvalue: 0x6f05b59d3b20000\nstorage_1: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_JeopardyJack_0: 0x648f0bde00000000000000000000000000000000000000000000000000000000\ncalldatasize_JeopardyJack: 0x4\n",
        "description": "A possible integer overflow exists in the function `Play(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/37/0x656610729fc13e8283d96aa69cdf56c112222951.sol",
        "function": "Play(string)",
        "lineno": 3,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2538,
        "code": "ntract JeopardyJack {\n    bytes32 private answerHash;\n    uint private isActive;\n    Guess[] public Guesses;\n    string public Riddle;\n    string public Answer;\n\n    struct Guess { address player; string guess; }\n    address private riddler;\n\n    function () payable public {}\n    \n    function Start(string _riddle, bytes32 _answerHash) public payable {\n        if (riddler == 0x0) {\n            riddler = msg.sender;\n            Riddle = _riddle;\n            answerHash = _answerHash;\n            isActive = now;\n        }\n    }\n\n    function Play(string guess) public payable {\n        require(isActive > 0 && msg.value >= 0.5 ether);\n        if (bytes(guess).length == 0) return;\n        \n        Guess newGuess;\n        newGuess.player = msg.sender;\n        newGuess.guess = guess;\n        Guesses.push(newGuess);\n\n        if (keccak256(guess) == answerHash) {\n            Answer = guess;\n            isActive = 0;\n            msg.sender.transfer(this.balance);\n        }\n    }\n    \n    function End(string _answer) public {\n        if (msg.sender == riddler) {\n            Answer = _answer;\n            isActive = 0;\n            msg.sender.transfer(this.balance);\n        }\n    }\n}",
        "debug": "calldata_JeopardyJack_4 + calldata_JeopardyJack_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60\ncallvalue: 0x6f05b59d3b20000\nstorage_1: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_JeopardyJack_0: 0x648f0bde00000000000000000000000000000000000000000000000000000000\ncalldatasize_JeopardyJack: 0x4\n",
        "description": "A possible integer overflow exists in the function `Play(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/37/0x656610729fc13e8283d96aa69cdf56c112222951.sol",
        "function": "Play(string)",
        "lineno": 3,
        "title": "Integer Overflow ",
        "type": "Warning"
      }
    ],
    "success": true
  }
}