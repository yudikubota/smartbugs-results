{"error": null, "issues": [{"address": 256, "code": "  * _ \u8868\u793a\u7ee7\u7eed\u6267\u884c\u4e4b\u540e\u7684\u4ee3\u7801\n    **/\n    m", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xf287c016c1fbcd873dbef7be1bc26e23a0cd168189d5539e03da0def7f7fadd9\ncallvalue: 0xfcb8184cfd4208003da806295fc131014b080cec1bda513f3b64a90e407fad93\nstorage_7: 0x0\ncalldata_token_0: 0x100000000000000000000000000000000000000000000000000000000\ncalldatasize_token: 0x4\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/30/0x74c2eb8361f45f4f5cb89819ef4c9c22bf7878c0.sol", "function": "fallback", "lineno": 59, "title": "Integer Overflow ", "type": "Warning"}, {"address": 272, "code": "erDeadline() { if (now", "debug": "storage_2: 0xf287c016c1fbcd873dbef7be1bc26e23a0cd168189d5539e03da0def7f7fadd9\ncallvalue: 0xfcb8184cfd4208003da806295fc131014b080cec1bda513f3b64a90e407fad93\nstorage_7: 0x0\ncalldata_token_0: 0x100000000000000000000000000000000000000000000000000000000\ncalldatasize_token: 0x4\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/30/0x74c2eb8361f45f4f5cb89819ef4c9c22bf7878c0.sol", "function": "fallback", "lineno": 61, "title": "Integer Overflow ", "type": "Warning"}, {"address": 354, "code": "\u8d44\u76ee\u6807\uff0c \u8fd9\u4e2a\u65b9\u6cd5\u4f7f\u7528\u4e86af", "debug": "The exception is triggered under the following conditions:\n\nstorage_7: 0x0\ncalldata_token_0: 0x1cb3b2100000000000000000000000000000000000000000000000000000000\ncalldatasize_token: 0x4\nstorage_4: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/30/0x74c2eb8361f45f4f5cb89819ef4c9c22bf7878c0.sol", "function": "fallback", "lineno": 64, "title": "Exception state", "type": "Informational"}, {"address": 492, "code": "e) _; }\n\n    /**\n     * \u5224\u65ad\u4f17\u7b79\u662f\u5426\u5b8c\u6210\u878d\u8d44\u76ee\u6807\uff0c \u8fd9\u4e2a\u65b9\u6cd5\u4f7f\u7528\u4e86aft", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/30/0x74c2eb8361f45f4f5cb89819ef4c9c22bf7878c0.sol", "function": "fallback", "lineno": 61, "title": "Message call to external contract", "type": "Informational"}, {"address": 1689, "code": "       }\n        }\n    ", "debug": "", "description": "In the function `safeWithdrawal()` the following predictable state variables are used to determine Ether recipient:\n- block.timestamp\n", "filename": "/unique_chucks/30/0x74c2eb8361f45f4f5cb89819ef4c9c22bf7878c0.sol", "function": "safeWithdrawal()", "lineno": 100, "title": "Dependence on predictable environment variable", "type": "Warning"}, {"address": 1689, "code": "       }\n        }\n    ", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2087\nCall at address: 2087\nCall at address: 2087\nCall at address: 2087\n", "filename": "/unique_chucks/30/0x74c2eb8361f45f4f5cb89819ef4c9c22bf7878c0.sol", "function": "safeWithdrawal()", "lineno": 100, "title": "Multiple Calls", "type": "Information"}, {"address": 2087, "debug": "", "description": "In the function `safeWithdrawal()` the following predictable state variables are used to determine Ether recipient:\n- block.timestamp\n", "filename": "/unique_chucks/30/0x74c2eb8361f45f4f5cb89819ef4c9c22bf7878c0.sol", "function": "safeWithdrawal()", "lineno": 103, "title": "Dependence on predictable environment variable", "type": "Warning"}, {"address": 2087, "debug": "", "description": "A possible transaction order independence vulnerability exists in function safeWithdrawal(). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/30/0x74c2eb8361f45f4f5cb89819ef4c9c22bf7878c0.sol", "function": "safeWithdrawal()", "lineno": 103, "title": "Transaction order dependence", "type": "Warning"}], "success": true}