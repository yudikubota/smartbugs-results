{
  "contract": "0xc477042db387dd59c038ca4b829a07964b674347",
  "tool": "mythril",
  "start": 1563739661.129497,
  "end": 1563739730.8410168,
  "duration": 69.71151971817017,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 400,
        "code": "     return loans;\n    }\n}",
        "debug": "storage_0: 0x800000000000000000000000000000000000000000000000000000000000000\ncalldata_LoanDirectory_0: 0xa5bfd16a00000000000000000000000000000000000000000000000000000000\ncalldatasize_LoanDirectory: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `getAllLoans()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/41/0xc477042db387dd59c038ca4b829a07964b674347.sol",
        "function": "getAllLoans()",
        "lineno": 56,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 665,
        "code": "f loan implements Loa",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/41/0xc477042db387dd59c038ca4b829a07964b674347.sol",
        "function": "_function_0x3c3313a8",
        "lineno": 35,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 665,
        "code": "f loan implements Loa",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 827\n",
        "filename": "/unique_chucks/41/0xc477042db387dd59c038ca4b829a07964b674347.sol",
        "function": "_function_0x3c3313a8",
        "lineno": 35,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 827,
        "code": "AL()); // Che",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/41/0xc477042db387dd59c038ca4b829a07964b674347.sol",
        "function": "_function_0x3c3313a8",
        "lineno": 35,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 908,
        "code": ";\n\ncontract Loan {",
        "debug": "retval_665: 0x80\nstorage_0: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nretval_827: 0x80\nreturndatasize: 0x20\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_LoanDirectory_0: 0x3c3313a800000000000000000000000000000000000000000000000000000000\ncalldatasize_LoanDirectory: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `_function_0x3c3313a8`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/41/0xc477042db387dd59c038ca4b829a07964b674347.sol",
        "function": "_function_0x3c3313a8",
        "lineno": 1,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 911,
        "code": " uint8 public constant ",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/41/0xc477042db387dd59c038ca4b829a07964b674347.sol",
        "function": "_function_0x3c3313a8",
        "lineno": 4,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 998,
        "code": "nction registerL",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/41/0xc477042db387dd59c038ca4b829a07964b674347.sol",
        "function": "_function_0x3c3313a8",
        "lineno": 39,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 1328,
        "code": "loan;\n    }\n\n    func",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/41/0xc477042db387dd59c038ca4b829a07964b674347.sol",
        "function": "_function_0x86377b63",
        "lineno": 52,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 1328,
        "code": "loan;\n    }\n\n    func",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1490\n",
        "filename": "/unique_chucks/41/0xc477042db387dd59c038ca4b829a07964b674347.sol",
        "function": "_function_0x86377b63",
        "lineno": 52,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 1490,
        "code": "oans[replaceA",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/41/0xc477042db387dd59c038ca4b829a07964b674347.sol",
        "function": "_function_0x86377b63",
        "lineno": 52,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 1648,
        "code": "oans() constant return",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/41/0xc477042db387dd59c038ca4b829a07964b674347.sol",
        "function": "_function_0x86377b63",
        "lineno": 55,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 1837,
        "code": "quire(loan.status() == loan.",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/41/0xc477042db387dd59c038ca4b829a07964b674347.sol",
        "function": "_function_0x9fdc53b1",
        "lineno": 43,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 1837,
        "code": "quire(loan.status() == loan.",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2336\nCall at address: 2174\nCall at address: 1999\n",
        "filename": "/unique_chucks/41/0xc477042db387dd59c038ca4b829a07964b674347.sol",
        "function": "_function_0x9fdc53b1",
        "lineno": 43,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 1999,
        "code": "S_INITIAL());\n      ",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/41/0xc477042db387dd59c038ca4b829a07964b674347.sol",
        "function": "_function_0x9fdc53b1",
        "lineno": 42,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 1999,
        "code": "S_INITIAL());\n      ",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2336\nCall at address: 2174\n",
        "filename": "/unique_chucks/41/0xc477042db387dd59c038ca4b829a07964b674347.sol",
        "function": "_function_0x9fdc53b1",
        "lineno": 42,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 2174,
        "code": "xReplace] = loan;\n   ",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/41/0xc477042db387dd59c038ca4b829a07964b674347.sol",
        "function": "_function_0x9fdc53b1",
        "lineno": 44,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 2174,
        "code": "xReplace] = loan;\n   ",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2336\n",
        "filename": "/unique_chucks/41/0xc477042db387dd59c038ca4b829a07964b674347.sol",
        "function": "_function_0x9fdc53b1",
        "lineno": 44,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 2336,
        "code": "       loans[",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/41/0xc477042db387dd59c038ca4b829a07964b674347.sol",
        "function": "_function_0x9fdc53b1",
        "lineno": 44,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 2544,
        "debug": "storage_0: 0x8421003f084001f4210815cf88407c00000000000000037c1d000e8d178001f\ncalldata_LoanDirectory_0: 0xa5bfd16a00000000000000000000000000000000000000000000000000000000\ncalldatasize_LoanDirectory: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `getAllLoans()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/41/0xc477042db387dd59c038ca4b829a07964b674347.sol",
        "function": "getAllLoans()",
        "lineno": 58,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2546,
        "debug": "storage_0: 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffb\ncalldata_LoanDirectory_0: 0xa5bfd16a00000000000000000000000000000000000000000000000000000000\ncalldatasize_LoanDirectory: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `getAllLoans()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/41/0xc477042db387dd59c038ca4b829a07964b674347.sol",
        "function": "getAllLoans()",
        "lineno": 58,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2656,
        "code": "ion registerLoan(Lo",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_LoanDirectory_4: 0x0\nstorage_0: 0x0\ncalldata_LoanDirectory_0: 0xe1ec3c6800000000000000000000000000000000000000000000000000000000\ncalldatasize_LoanDirectory: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/41/0xc477042db387dd59c038ca4b829a07964b674347.sol",
        "function": "_function_0xe1ec3c68",
        "lineno": 34,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}