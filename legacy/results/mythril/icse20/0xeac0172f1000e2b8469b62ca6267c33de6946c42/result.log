{"error": null, "issues": [{"address": 684, "code": ") public returns (bool success) {\n        allowed[msg.sender][_spender] = _value;\n        emit Approval(msg.sender, _spender, _value);\n        //call the receiveApproval function on the contract you want to be notified. This crafts the function signature manually so one doesn't have to include a contract in here just for this.\n        //receiveApproval(address _from, uint256 _value, address _tokenContract, bytes _extraData)\n        //it is assumed that when does this that the call *should* succeed, otherwise one would use vanilla approve instead.\n        //require(_spender.call(bytes4(keccak256(\"receiveApproval(address,uint256,address,bytes)\")), abi.encode(msg.sender, _value, this, _extraData)));\n        require(_spender.call(abi.encodeWithSelector(bytes4(keccak256(\"receiveApproval(address,uint256,address,bytes)\")),msg.sender, _value, this, _extraData)));\n\n        return true;\n    }\n    \n\tfunction allowance(address _owner, address _spender) constant public returns ", "debug": "calldata_ERC20Token_32 + 36: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_ERC20Token_0: 0xcae9ca5100000000000000000000000000000000000000000000000000000000\ncalldatasize_ERC20Token: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `approveAndCall(address,uint256,bytes)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/8/0xeac0172f1000e2b8469b62ca6267c33de6946c42.sol", "function": "approveAndCall(address,uint256,bytes)", "lineno": 75, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1495, "code": "      allowed[_from][ms", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_ERC20Token_32_+_4: 0x800000000000000000008eb2e34648ee0801030820000000000000000000a000\ncalldata_ERC20Token_32 + 36: 0x800000000000000003ffd0badcb9b7000000002781000000000000000006bfff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x800000000000000003ffd0badcb9b7000000002781000000000000000006bfff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_ERC20Token_4: 0x800000000000000003ffd0badcb9b7000000002781000000000000000006bfff\ncalldata_ERC20Token_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_ERC20Token: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `transferFrom(address,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/8/0xeac0172f1000e2b8469b62ca6267c33de6946c42.sol", "function": "transferFrom(address,address,uint256)", "lineno": 65, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1954, "code": "\n\n\tfunction balanceOf(address _owne", "debug": "The exception is triggered under the following conditions:\n\ncalldatasize_ERC20Token: 0x4\ncalldata_ERC20Token_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/8/0xeac0172f1000e2b8469b62ca6267c33de6946c42.sol", "function": "transfer(address,uint256)", "lineno": 47, "title": "Exception state", "type": "Informational"}, {"address": 2192, "code": " _to, _value);\n\t    ret", "debug": "calldata_ERC20Token_32 + 4: 0xb135d1e4a0020a903239033aa9b45a69384c906b52a71e0575829626809581fd\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_ERC20Token_4: 0xa7e6e147bc0ca40011bf9bbaadf7593cb8cc90b17cb7d73775f0d8eb1435e9c1\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xb135d1e4a0020a903239033aa9b45a69384c906b52a71e0575829626809581fd\ncalldata_ERC20Token_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncalldatasize_ERC20Token: 0x44\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `transfer(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/8/0xeac0172f1000e2b8469b62ca6267c33de6946c42.sol", "function": "transfer(address,uint256)", "lineno": 57, "title": "Integer Overflow ", "type": "Warning"}, {"address": 3089, "code": "nt256,address,bytes)\")),msg.sender, _value, this, _extraData)));\n\n        return true;\n    }\n    \n\tfunction allowance(address _owner, address _", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/8/0xeac0172f1000e2b8469b62ca6267c33de6946c42.sol", "function": "approveAndCall(address,uint256,bytes)", "lineno": 82, "title": "Message call to external contract", "type": "Warning"}], "success": true}