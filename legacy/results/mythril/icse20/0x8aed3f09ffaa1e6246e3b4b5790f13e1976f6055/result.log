{"error": null, "issues": [{"address": 353, "code": "y the owner on ", "debug": "The exception is triggered under the following conditions:\n\nstorage_1: 0xff00\ncalldatasize_ZontoToken: 0x3\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/4/0x8aed3f09ffaa1e6246e3b4b5790f13e1976f6055.sol", "function": "fallback", "lineno": 113, "title": "Exception state", "type": "Informational"}, {"address": 372, "code": "ender) == 0) investorCount++;\n     ", "debug": "The exception is triggered under the following conditions:\n\ncallvalue: 0x2386f26fc0ffff\nstorage_1: 0x0\ncalldatasize_ZontoToken: 0x3\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/4/0x8aed3f09ffaa1e6246e3b4b5790f13e1976f6055.sol", "function": "fallback", "lineno": 285, "title": "Exception state", "type": "Informational"}, {"address": 1998, "code": "rchase() private on", "debug": "The exception is triggered under the following conditions:\n\ntimestamp: 0x0\nstorage_15: 0x1\ncallvalue: 0x2386f26fc10000\nstorage_1: 0x0\ncalldatasize_ZontoToken: 0x3\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/4/0x8aed3f09ffaa1e6246e3b4b5790f13e1976f6055.sol", "function": "fallback", "lineno": 279, "title": "Exception state", "type": "Informational"}, {"address": 2013, "code": "hed);\n        \n    ", "debug": "The exception is triggered under the following conditions:\n\ntimestamp: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffeffffffffffff\nstorage_16: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffefffffffffffe\nstorage_15: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffeffffffffffff\ncallvalue: 0x2386f26fc10000\nstorage_1: 0x0\ncalldatasize_ZontoToken: 0x3\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/4/0x8aed3f09ffaa1e6246e3b4b5790f13e1976f6055.sol", "function": "fallback", "lineno": 281, "title": "Exception state", "type": "Informational"}, {"address": 2038, "code": "ctedTokens, tokens);\n   ", "debug": "The exception is triggered under the following conditions:\n\ntimestamp: 0xffffffffffffffdffffffffffffffffffffffffffffffffffffff7ffffffffff\nstorage_17: 0xff00\nstorage_16: 0xffffffffffffffdffffffffffffffffffffffffffffffffffffff7ffffffffff\nstorage_15: 0xffffffffffffffdffffffffffffffffffffffffffffffffffffff7ffffffffff\ncallvalue: 0x2386f26fc10000\nstorage_1: 0x0\ncalldatasize_ZontoToken: 0x3\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/4/0x8aed3f09ffaa1e6246e3b4b5790f13e1976f6055.sol", "function": "fallback", "lineno": 290, "title": "Exception state", "type": "Informational"}, {"address": 2092, "code": ".value);\n      ", "debug": "timestamp: 0x0\nstorage_14: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_17: 0x0\nstorage_16: 0x0\nstorage_15: 0x0\ncallvalue: 0x2386f26fc10000\nstorage_1: 0x0\ncalldatasize_ZontoToken: 0x3\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/4/0x8aed3f09ffaa1e6246e3b4b5790f13e1976f6055.sol", "function": "fallback", "lineno": 293, "title": "Integer Overflow ", "type": "Warning"}, {"address": 3267, "code": " onlyOwner {\n    if (newOwn", "debug": "The exception is triggered under the following conditions:\n\nstorage_1: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_ZontoToken_0: 0x3ccfd60b00000000000000000000000000000000000000000000000000000000\ncalldatasize_ZontoToken: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/4/0x8aed3f09ffaa1e6246e3b4b5790f13e1976f6055.sol", "function": "withdraw()", "lineno": 92, "title": "Exception state", "type": "Informational"}, {"address": 3282, "code": "rchase() private on", "debug": "The exception is triggered under the following conditions:\n\ntimestamp: 0x0\nstorage_16: 0x1\nstorage_1: 0x0\ncaller: 0x0\ncalldata_ZontoToken_0: 0x3ccfd60b00000000000000000000000000000000000000000000000000000000\ncalldatasize_ZontoToken: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/4/0x8aed3f09ffaa1e6246e3b4b5790f13e1976f6055.sol", "function": "withdraw()", "lineno": 279, "title": "Exception state", "type": "Informational"}, {"address": 3367, "debug": "", "description": "In the function `withdraw()` the following predictable state variables are used to determine Ether recipient:\n- block.timestamp\n", "filename": "/unique_chucks/4/0x8aed3f09ffaa1e6246e3b4b5790f13e1976f6055.sol", "function": "withdraw()", "lineno": 317, "title": "Dependence on predictable environment variable", "type": "Warning"}, {"address": 3367, "debug": "", "description": "A possible transaction order independence vulnerability exists in function withdraw(). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/4/0x8aed3f09ffaa1e6246e3b4b5790f13e1976f6055.sol", "function": "withdraw()", "lineno": 317, "title": "Transaction order dependence", "type": "Warning"}, {"address": 3523, "code": " onlyOwner {\n    if (newOwn", "debug": "The exception is triggered under the following conditions:\n\nstorage_1: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_ZontoToken_0: 0x5ed7ca5b00000000000000000000000000000000000000000000000000000000\ncalldatasize_ZontoToken: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/4/0x8aed3f09ffaa1e6246e3b4b5790f13e1976f6055.sol", "function": "halt()", "lineno": 92, "title": "Exception state", "type": "Informational"}], "success": true}