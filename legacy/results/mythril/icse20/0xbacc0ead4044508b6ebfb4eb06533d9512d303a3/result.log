{"error": null, "issues": [{"address": 1637, "code": "ransfer(address _to, uint256 _value) onlyPay", "debug": "The exception is triggered under the following conditions:\n\ncalldatasize_VernamToken: 0x4\ncalldata_VernamToken_0: 0x95ea7b300000000000000000000000000000000000000000000000000000000\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/18/0xbacc0ead4044508b6ebfb4eb06533d9512d303a3.sol", "function": "approve(address,uint256)", "lineno": 791, "title": "Exception state", "type": "Informational"}, {"address": 2476, "code": "ransfer(address _to, uint256 _value) onlyPay", "debug": "The exception is triggered under the following conditions:\n\ncalldatasize_VernamToken: 0x4\ncalldata_VernamToken_0: 0x6618846300000000000000000000000000000000000000000000000000000000\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/18/0xbacc0ead4044508b6ebfb4eb06533d9512d303a3.sol", "function": "decreaseApproval(address,uint256)", "lineno": 791, "title": "Exception state", "type": "Informational"}, {"address": 3387, "code": "ransfer(address _to, uint256 _value) onlyPay", "debug": "The exception is triggered under the following conditions:\n\ncalldatasize_VernamToken: 0x4\ncalldata_VernamToken_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/18/0xbacc0ead4044508b6ebfb4eb06533d9512d303a3.sol", "function": "transfer(address,uint256)", "lineno": 791, "title": "Exception state", "type": "Informational"}, {"address": 3432, "code": "ransfer(address _to, uint256 _value) onlyPay", "debug": "The exception is triggered under the following conditions:\n\ncalldatasize_VernamToken: 0x4\ncalldata_VernamToken_0: 0xd73dd62300000000000000000000000000000000000000000000000000000000\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/18/0xbacc0ead4044508b6ebfb4eb06533d9512d303a3.sol", "function": "increaseApproval(address,uint256)", "lineno": 791, "title": "Exception state", "type": "Informational"}, {"address": 5351, "code": "\n\t}\n}\n\ncontrac", "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_VernamToken_4: 0x1\ncalldata_VernamToken_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_VernamToken_0: 0xd73dd62300000000000000000000000000000000000000000000000000000000\ncalldatasize_VernamToken: 0x44\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/18/0xbacc0ead4044508b6ebfb4eb06533d9512d303a3.sol", "function": "increaseApproval(address,uint256)", "lineno": 29, "title": "Exception state", "type": "Informational"}], "success": true}