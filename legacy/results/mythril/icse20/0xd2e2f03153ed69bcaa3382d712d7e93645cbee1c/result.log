{"error": null, "issues": [{"address": 277, "code": "ontractObj,\n                    address   tokenRepo,\n                    address[] airDropDesinationAddress,\n                    uint[] amounts) public onlyOwner{\n\n    for( uint i = 0 ; i < airDropDesinationAddress.length ; i++ ) {\n\n        ERC20Interface(contractObj).transferFrom( tokenRepo, airDropDesinationAddress[i],amounts[i]);\n    }\n   }\n}", "debug": "calldata_TokenAirDrop_32 + 36: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_TokenAirDrop_0: 0xdd719d2c00000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenAirDrop: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `_function_0xdd719d2c`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0xd2e2f03153ed69bcaa3382d712d7e93645cbee1c.sol", "function": "_function_0xdd719d2c", "lineno": 29, "title": "Integer Overflow ", "type": "Warning"}, {"address": 689, "debug": "The exception is triggered under the following conditions:\n\ncalldata_TokenAirDrop_4 + calldata_TokenAirDrop_32 + 36: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_0: 0x0\ncaller: 0x0\ncalldata_TokenAirDrop_0: 0xdd719d2c00000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenAirDrop: 0x4\nmem_128 +\n32 +\n32*calldata_TokenAirDrop_4 + calldata_TokenAirDrop_32 + 36: 0x0\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_contracts/0xd2e2f03153ed69bcaa3382d712d7e93645cbee1c.sol", "function": "_function_0xdd719d2c", "lineno": 39, "title": "Exception state", "type": "Informational"}, {"address": 887, "code": "rFrom( tokenRepo, airDropDesinationAddress[i],amounts[i]);\n    }\n   }\n}", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_contracts/0xd2e2f03153ed69bcaa3382d712d7e93645cbee1c.sol", "function": "_function_0xdd719d2c", "lineno": 36, "title": "Message call to external contract", "type": "Warning"}, {"address": 887, "code": "rFrom( tokenRepo, airDropDesinationAddress[i],amounts[i]);\n    }\n   }\n}", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 887\n", "filename": "/unique_contracts/0xd2e2f03153ed69bcaa3382d712d7e93645cbee1c.sol", "function": "_function_0xdd719d2c", "lineno": 36, "title": "Multiple Calls", "type": "Information"}], "success": true}