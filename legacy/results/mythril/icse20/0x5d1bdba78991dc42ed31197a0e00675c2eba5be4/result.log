{"error": null, "issues": [{"address": 1312, "code": "ddress).withdraw(ethPay);\n      uint256 tokenBought = UN", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/8/0x5d1bdba78991dc42ed31197a0e00675c2eba5be4.sol", "function": "buyToken(address,uint256,uint256,uint256)", "lineno": 101, "title": "Message call to external contract", "type": "Informational"}, {"address": 1312, "code": "ddress).withdraw(ethPay);\n      uint256 tokenBought = UN", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2000\nCall at address: 1775\nCall at address: 1632\n", "filename": "/unique_chucks/8/0x5d1bdba78991dc42ed31197a0e00675c2eba5be4.sol", "function": "buyToken(address,uint256,uint256,uint256)", "lineno": 101, "title": "Multiple Calls", "type": "Information"}, {"address": 1632, "code": "wapInput.value(ethPay)(minTokenAmo", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/8/0x5d1bdba78991dc42ed31197a0e00675c2eba5be4.sol", "function": "buyToken(address,uint256,uint256,uint256)", "lineno": 102, "title": "Message call to external contract", "type": "Informational"}, {"address": 1632, "code": "wapInput.value(ethPay)(minTokenAmo", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2000\nCall at address: 1775\n", "filename": "/unique_chucks/8/0x5d1bdba78991dc42ed31197a0e00675c2eba5be4.sol", "function": "buyToken(address,uint256,uint256,uint256)", "lineno": 102, "title": "Multiple Calls", "type": "Information"}, {"address": 1775, "code": "enAddress).transfer(msg.sender, tokenBought);\n    }\n\n    function sellToken(address ", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/8/0x5d1bdba78991dc42ed31197a0e00675c2eba5be4.sol", "function": "buyToken(address,uint256,uint256,uint256)", "lineno": 103, "title": "Message call to external contract", "type": "Informational"}, {"address": 1775, "code": "enAddress).transfer(msg.sender, tokenBought);\n    }\n\n    function sellToken(address ", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2000\n", "filename": "/unique_chucks/8/0x5d1bdba78991dc42ed31197a0e00675c2eba5be4.sol", "function": "buyToken(address,uint256,uint256,uint256)", "lineno": 103, "title": "Multiple Calls", "type": "Information"}, {"address": 2000, "code": "ess,uint256 minEthAmount, uint256 tokenPay, uint256 d", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/8/0x5d1bdba78991dc42ed31197a0e00675c2eba5be4.sol", "function": "buyToken(address,uint256,uint256,uint256)", "lineno": 106, "title": "Message call to external contract", "type": "Warning"}, {"address": 2297, "code": "ht = UNISWAP(exchangeAddress).tokenToEthSwapInput(tokenPay, ", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/8/0x5d1bdba78991dc42ed31197a0e00675c2eba5be4.sol", "function": "sellToken(address,uint256,uint256,uint256)", "lineno": 111, "title": "Message call to external contract", "type": "Warning"}, {"address": 2297, "code": "ht = UNISWAP(exchangeAddress).tokenToEthSwapInput(tokenPay, ", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3016\nCall at address: 2794\nCall at address: 2599\n", "filename": "/unique_chucks/8/0x5d1bdba78991dc42ed31197a0e00675c2eba5be4.sol", "function": "sellToken(address,uint256,uint256,uint256)", "lineno": 111, "title": "Multiple Calls", "type": "Information"}, {"address": 2599, "code": "t.value(ethBought)();\n      WETH(wethAddress).transfer(msg.sender, ethBought);", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/8/0x5d1bdba78991dc42ed31197a0e00675c2eba5be4.sol", "function": "sellToken(address,uint256,uint256,uint256)", "lineno": 112, "title": "Message call to external contract", "type": "Informational"}, {"address": 2599, "code": "t.value(ethBought)();\n      WETH(wethAddress).transfer(msg.sender, ethBought);", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3016\nCall at address: 2794\n", "filename": "/unique_chucks/8/0x5d1bdba78991dc42ed31197a0e00675c2eba5be4.sol", "function": "sellToken(address,uint256,uint256,uint256)", "lineno": 112, "title": "Multiple Calls", "type": "Information"}, {"address": 2794, "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/8/0x5d1bdba78991dc42ed31197a0e00675c2eba5be4.sol", "function": "sellToken(address,uint256,uint256,uint256)", "lineno": 115, "title": "Message call to external contract", "type": "Informational"}, {"address": 2794, "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3016\n", "filename": "/unique_chucks/8/0x5d1bdba78991dc42ed31197a0e00675c2eba5be4.sol", "function": "sellToken(address,uint256,uint256,uint256)", "lineno": 115, "title": "Multiple Calls", "type": "Information"}, {"address": 3016, "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/8/0x5d1bdba78991dc42ed31197a0e00675c2eba5be4.sol", "function": "sellToken(address,uint256,uint256,uint256)", "lineno": 115, "title": "Message call to external contract", "type": "Informational"}, {"address": 3513, "code": "(address tokenAddress, uint256 minTo", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/8/0x5d1bdba78991dc42ed31197a0e00675c2eba5be4.sol", "function": "withdrawToken(address,uint256)", "lineno": 96, "title": "Message call to external contract", "type": "Warning"}, {"address": 3884, "code": "eAddress!=0x0, \"exchange not exist\");\n    ", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/8/0x5d1bdba78991dc42ed31197a0e00675c2eba5be4.sol", "function": "approve(address)", "lineno": 69, "title": "Message call to external contract", "type": "Informational"}, {"address": 3884, "code": "eAddress!=0x0, \"exchange not exist\");\n    ", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 4543\n", "filename": "/unique_chucks/8/0x5d1bdba78991dc42ed31197a0e00675c2eba5be4.sol", "function": "approve(address)", "lineno": 69, "title": "Multiple Calls", "type": "Information"}, {"address": 4543, "code": " function withdrawETH(uint256 amount)\n        p", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/8/0x5d1bdba78991dc42ed31197a0e00675c2eba5be4.sol", "function": "approve(address)", "lineno": 82, "title": "Message call to external contract", "type": "Warning"}, {"address": 4997, "code": "nt)\n        public\n   ", "debug": "", "description": "A possible transaction order independence vulnerability exists in function withdrawETH(uint256). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/8/0x5d1bdba78991dc42ed31197a0e00675c2eba5be4.sol", "function": "withdrawETH(uint256)", "lineno": 89, "title": "Transaction order dependence", "type": "Warning"}], "success": true}