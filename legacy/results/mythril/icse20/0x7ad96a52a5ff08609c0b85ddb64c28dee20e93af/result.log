{"error": null, "issues": [{"address": 430, "code": "holdDate);\n    AddedToH", "debug": "The exception is triggered under the following conditions:\n\nstorage_2: 0x8000\nstorage_0: 0x0\ncalldatasize_TokenSale: 0x3\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_contracts/0x7ad96a52a5ff08609c0b85ddb64c28dee20e93af.sol", "function": "fallback", "lineno": 483, "title": "Exception state", "type": "Informational"}, {"address": 645, "code": " override to create cu", "debug": "storage_2: 0x100\nstorage_7: 0x6fa613b31105f33968dfdfd25de19aceb682c10d6428182e2082d401048be3f8\ncallvalue: 0xff8dd1180277f6048eff0ba68dfa1b212642db55a4c1650e814d13480aebfbdb\nstorage_3: 0x0\ntimestamp: 0x0\nstorage_5: 0xff8dd1180277f6048eff0ba68dfa1b212642db55a4c1650e814d13480aebfbdb\nstorage_0: 0x0\ncalldatasize_TokenSale: 0x3\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x7ad96a52a5ff08609c0b85ddb64c28dee20e93af.sol", "function": "fallback", "lineno": 493, "title": "Integer Overflow ", "type": "Warning"}, {"address": 974, "code": "{\n    return token.balanceOf(this);\n  }\n\n  function startSa", "debug": "", "description": "This contract executes a message call to an address found at storage slot 2. This storage slot can be written to by calling the function `fallback`. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_contracts/0x7ad96a52a5ff08609c0b85ddb64c28dee20e93af.sol", "function": "fallback", "lineno": 499, "title": "Message call to external contract", "type": "Warning"}, {"address": 974, "code": "{\n    return token.balanceOf(this);\n  }\n\n  function startSa", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2766\n", "filename": "/unique_contracts/0x7ad96a52a5ff08609c0b85ddb64c28dee20e93af.sol", "function": "fallback", "lineno": 499, "title": "Multiple Calls", "type": "Information"}, {"address": 974, "code": "{\n    return token.balanceOf(this);\n  }\n\n  function startSa", "debug": "", "description": "A possible transaction order independence vulnerability exists in function fallback. The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_contracts/0x7ad96a52a5ff08609c0b85ddb64c28dee20e93af.sol", "function": "fallback", "lineno": 499, "title": "Transaction order dependence", "type": "Warning"}, {"address": 2611, "code": "rt(a ", "debug": "The exception is triggered under the following conditions:\n\nstorage_2: 0x100\nstorage_3: 0x0\ncallvalue: 0x0\ntimestamp: 0x0\nstorage_5: 0x0\nstorage_0: 0x0\ncalldatasize_TokenSale: 0x3\nstorage_8: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_contracts/0x7ad96a52a5ff08609c0b85ddb64c28dee20e93af.sol", "function": "fallback", "lineno": 20, "title": "Exception state", "type": "Informational"}, {"address": 3094, "code": "e(this.balance != 0);\n  ", "debug": "The exception is triggered under the following conditions:\n\nstorage_2: 0x8000\nstorage_0: 0x0\ncaller: 0x0\ncalldata_TokenSale_0: 0x22a92c4500000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenSale: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_contracts/0x7ad96a52a5ff08609c0b85ddb64c28dee20e93af.sol", "function": "sendTokensToHold()", "lineno": 532, "title": "Exception state", "type": "Informational"}, {"address": 3367, "code": "et);\n    require(tokensTransferredToHold =", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_contracts/0x7ad96a52a5ff08609c0b85ddb64c28dee20e93af.sol", "function": "sendTokensToHold()", "lineno": 534, "title": "Message call to external contract", "type": "Informational"}, {"address": 3972, "code": "ublic onlyOwner {\n    ", "debug": "The exception is triggered under the following conditions:\n\nstorage_2: 0x8000\nstorage_0: 0x0\ncaller: 0x0\ncalldata_TokenSale_0: 0x3784f00000000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenSale: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_contracts/0x7ad96a52a5ff08609c0b85ddb64c28dee20e93af.sol", "function": "setEndDate(uint256)", "lineno": 564, "title": "Exception state", "type": "Informational"}, {"address": 4256, "code": "d == true);\n    uint ba", "debug": "The exception is triggered under the following conditions:\n\nstorage_2: 0x8000\nstorage_0: 0x0\ncaller: 0x0\ncalldata_TokenSale_0: 0x380d831b00000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenSale: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_contracts/0x7ad96a52a5ff08609c0b85ddb64c28dee20e93af.sol", "function": "endSale()", "lineno": 526, "title": "Exception state", "type": "Informational"}, {"address": 4864, "debug": "storage_14: 0x0\nstorage_0: 0x0\ncaller: 0x0\ncalldata_TokenSale_0: 0x68b2cee000000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenSale: 0x4\ncallvalue: 0x0\n", "description": "A possible integer underflow exists in the function `removeAssetsOwner(address)`.\nThe subtraction may result in a value < 0.", "filename": "/unique_contracts/0x7ad96a52a5ff08609c0b85ddb64c28dee20e93af.sol", "function": "removeAssetsOwner(address)", "lineno": 591, "title": "Integer Underflow", "type": "Warning"}, {"address": 5110, "code": "== SaleState.NEW || stat", "debug": "The exception is triggered under the following conditions:\n\nstorage_2: 0x8000\nstorage_0: 0x0\ncaller: 0x0\ncalldata_TokenSale_0: 0x7d851c7000000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenSale: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_contracts/0x7ad96a52a5ff08609c0b85ddb64c28dee20e93af.sol", "function": "getTokensBack()", "lineno": 542, "title": "Exception state", "type": "Informational"}, {"address": 5698, "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_contracts/0x7ad96a52a5ff08609c0b85ddb64c28dee20e93af.sol", "function": "getTokenBalance()", "lineno": 591, "title": "Message call to external contract", "type": "Informational"}, {"address": 8059, "code": " )) {\n      tokensTra", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_contracts/0x7ad96a52a5ff08609c0b85ddb64c28dee20e93af.sol", "function": "getTokensBack()", "lineno": 519, "title": "Message call to external contract", "type": "Informational"}, {"address": 8059, "code": " )) {\n      tokensTra", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3367\n", "filename": "/unique_contracts/0x7ad96a52a5ff08609c0b85ddb64c28dee20e93af.sol", "function": "sendTokensToHold()", "lineno": 519, "title": "Multiple Calls", "type": "Information"}], "success": true}