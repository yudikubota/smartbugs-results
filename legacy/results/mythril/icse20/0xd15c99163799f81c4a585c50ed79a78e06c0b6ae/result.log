{"error": null, "issues": [{"address": 4050, "code": " supervisor);\n\t\t_;\n\t}\n\t\n\t/// @notice Transfer the owner", "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0x2d6808bc989cbeb46cc6dd75a6c90dea50e3e50400\ncaller: 0xd297f7436763414b9339228a5936f215af1c1afb\ncalldata_owned_0: 0x5fefda700000000000000000000000000000000000000000000000000000000\ncalldatasize_owned: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/32/0xd15c99163799f81c4a585c50ed79a78e06c0b6ae.sol", "function": "setPrices(uint256,uint256)", "lineno": 44, "title": "Exception state", "type": "Informational"}, {"address": 4311, "code": " icoMin) {\n\t\t\tminimalGoalReach", "debug": "The exception is triggered under the following conditions:\n\ncalldata_owned_4: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncalldata_owned_0: 0x95ea7b300000000000000000000000000000000000000000000000000000000\ncalldatasize_owned: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/32/0xd15c99163799f81c4a585c50ed79a78e06c0b6ae.sol", "function": "approve(address,uint256)", "lineno": 262, "title": "Exception state", "type": "Informational"}, {"address": 4628, "code": " supervisor);\n\t\t_;\n\t}\n\t\n\t/// @notice Transfer the owner", "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0x2d6808bc989cbeb46cc6dd75a6c90dea50e3e50400\ncaller: 0xd297f7436763414b9339228a5936f215af1c1afb\ncalldata_owned_0: 0xa2d967b00000000000000000000000000000000000000000000000000000000\ncalldatasize_owned: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/32/0xd15c99163799f81c4a585c50ed79a78e06c0b6ae.sol", "function": "stopThisIco(bool)", "lineno": 44, "title": "Exception state", "type": "Informational"}, {"address": 5083, "code": "= _value);\n\t\trequire(allowed[_fr", "debug": "The exception is triggered under the following conditions:\n\ncaller: 0x0\ncalldata_owned_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_owned: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/32/0xd15c99163799f81c4a585c50ed79a78e06c0b6ae.sol", "function": "transferFrom(address,address,uint256)", "lineno": 239, "title": "Exception state", "type": "Informational"}, {"address": 5140, "code": "sg.sender] >= _value);\n\t\tre", "debug": "The exception is triggered under the following conditions:\n\ncalldata_owned_4: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_owned_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_owned: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/32/0xd15c99163799f81c4a585c50ed79a78e06c0b6ae.sol", "function": "transferFrom(address,address,uint256)", "lineno": 240, "title": "Exception state", "type": "Informational"}, {"address": 5197, "code": "(tokenBalanceOf[_from] - ", "debug": "The exception is triggered under the following conditions:\n\ncalldata_owned_32 + 4: 0x0\ncalldata_owned_4: 0xffffffffffffffffffffffffffffffffffffffff\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_owned_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_owned: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/32/0xd15c99163799f81c4a585c50ed79a78e06c0b6ae.sol", "function": "transferFrom(address,address,uint256)", "lineno": 241, "title": "Exception state", "type": "Informational"}, {"address": 6614, "code": " supervisor);\n\t\t_;\n\t}\n\t\n\t/// @notice Transfer the owner", "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0x2d6808bc989cbeb46cc6dd75a6c90dea50e3e50400\ncaller: 0xd297f7436763414b9339228a5936f215af1c1afb\ncalldata_owned_0: 0x25b5160c00000000000000000000000000000000000000000000000000000000\ncalldatasize_owned: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/32/0xd15c99163799f81c4a585c50ed79a78e06c0b6ae.sol", "function": "setICOPrice(uint256)", "lineno": 44, "title": "Exception state", "type": "Informational"}, {"address": 6835, "code": " supervisor);\n\t\t_;\n\t}\n\t\n\t/// @notice Transfer the owner", "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0x2d6808bc989cbeb46cc6dd75a6c90dea50e3e50400\ncaller: 0xd297f7436763414b9339228a5936f215af1c1afb\ncalldata_owned_0: 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000\ncalldatasize_owned: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/32/0xd15c99163799f81c4a585c50ed79a78e06c0b6ae.sol", "function": "withdraw(uint256)", "lineno": 44, "title": "Exception state", "type": "Informational"}, {"address": 7319, "code": "rentTokenPrice = 1 * 1 ether;\t// ini", "debug": "storage_58612239108549098792174875956930637727137801981672359265585547298486206736878: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_1: 0x57f25cd000000000000000000000000000000000000000000000000000000000\ncalldata_owned_0: 0x2fd463e100000000000000000000000000000000000000000000000000000000\ncalldatasize_owned: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `STARTMETADOLLAR()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/32/0xd15c99163799f81c4a585c50ed79a78e06c0b6ae.sol", "function": "STARTMETADOLLAR()", "lineno": 130, "title": "Integer Overflow ", "type": "Warning"}, {"address": 16060, "code": "rs += 1;\n\t\t}\n\t\ttokenBalance", "debug": "The exception is triggered under the following conditions:\n\nstorage_8: 0x7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd0100\ncallvalue: 0x1000000000000000000000000000000000000000000000000000017ffc\nstorage_7: 0x800000000000000000000000000000000000000000000000000000000002feff\nstorage_58612239108549098792174875956930637727137801981672359265585547298486206736878: 0x0\nstorage_12: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncalldatasize_owned: 0x3\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/32/0xd15c99163799f81c4a585c50ed79a78e06c0b6ae.sol", "function": "fallback", "lineno": 308, "title": "Exception state", "type": "Informational"}, {"address": 17637, "code": "oIsClosed);\n\t\trequire(!fro", "debug": "storage_1: 0x0\ncalldata_owned_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_3: 0x1\nstorage_12: 0xff00\nstorage_7: 0x0\ncaller: 0x2d6808bc989cbeb46cc6dd75a6c90dea50e3e504\nstorage_0: 0xd297f7436763414b9339228a5936f215af1c1afb00\ncalldata_owned_0: 0x25b5160c00000000000000000000000000000000000000000000000000000000\ncalldatasize_owned: 0x4\ncallvalue: 0x0\n", "description": "A possible integer underflow exists in the function `setICOPrice(uint256)`.\nThe subtraction may result in a value < 0.", "filename": "/unique_chucks/32/0xd15c99163799f81c4a585c50ed79a78e06c0b6ae.sol", "function": "setICOPrice(uint256)", "lineno": 280, "title": "Integer Underflow", "type": "Warning"}], "success": true}