{
  "contract": "0x1be2770c2cfc85834c8c0fa55c0705c4a22b3cf9",
  "tool": "mythril",
  "start": 1563560519.1467516,
  "end": 1563560575.1565166,
  "duration": 56.00976490974426,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 213,
        "code": "] value) onlyOwner returns (uint256) {\n\n        address tokenAddr = 0x1B148b90442826375e864B71165A18B4D9256097;\n        uint256 i = 0;\n        while (i < to.length) {\n           ERC20(tokenAddr).transfer(to[i], value[i] * ( 10 ** 18 ));\n           i++;\n        }\n        return(i);\n    }\n}",
        "debug": "calldata_Ownable_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_Ownable_0: 0xaad41a4100000000000000000000000000000000000000000000000000000000\ncalldatasize_Ownable: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `multisend(address[],uint256[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/17/0x1be2770c2cfc85834c8c0fa55c0705c4a22b3cf9.sol",
        "function": "multisend(address[],uint256[])",
        "lineno": 42,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 679,
        "code": "    }\n  ",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_Ownable_4 + calldata_Ownable_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_0: 0x0\ncaller: 0x0\ncalldata_Ownable_0: 0xaad41a4100000000000000000000000000000000000000000000000000000000\ncalldatasize_Ownable: 0x4\nmem_128 + 32 + 32*calldata_Ownable_4 + calldata_Ownable_4: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/17/0x1be2770c2cfc85834c8c0fa55c0705c4a22b3cf9.sol",
        "function": "multisend(address[],uint256[])",
        "lineno": 49,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 827,
        "code": "10 ** 18 ));\n           i++;\n        }\n        return(i);",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/17/0x1be2770c2cfc85834c8c0fa55c0705c4a22b3cf9.sol",
        "function": "multisend(address[],uint256[])",
        "lineno": 47,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 827,
        "code": "10 ** 18 ));\n           i++;\n        }\n        return(i);",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 827\nCall at address: 827\n",
        "filename": "/unique_chucks/17/0x1be2770c2cfc85834c8c0fa55c0705c4a22b3cf9.sol",
        "function": "multisend(address[],uint256[])",
        "lineno": 47,
        "title": "Multiple Calls",
        "type": "Information"
      }
    ],
    "success": true
  }
}