{
  "contract": "0x7052ad9bbc671804616e2280059fb3113dcd735b",
  "tool": "mythril",
  "start": 1563636867.3855333,
  "end": 1563636941.5064483,
  "duration": 74.12091493606567,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 760,
        "code": " teamWallet;\n\n  /// Deployment time o",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_SilentNotaryTokenStorage_4: 0x0\nstorage_2: 0x0\ncalldata_SilentNotaryTokenStorage_0: 0xa6c064200000000000000000000000000000000000000000000000000000000\ncalldatasize_SilentNotaryTokenStorage: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/28/0x7052ad9bbc671804616e2280059fb3113dcd735b.sol",
        "function": "_function_0x0a6c0642",
        "lineno": 106,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 1165,
        "code": "entBalance, portion.p",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/28/0x7052ad9bbc671804616e2280059fb3113dcd735b.sol",
        "function": "fixAmount()",
        "lineno": 171,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 2060,
        "code": "    assert(transferSu",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/28/0x7052ad9bbc671804616e2280059fb3113dcd735b.sol",
        "function": "withdrawRemainder()",
        "lineno": 187,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 2060,
        "code": "    assert(transferSu",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2820\n",
        "filename": "/unique_chucks/28/0x7052ad9bbc671804616e2280059fb3113dcd735b.sol",
        "function": "withdrawRemainder()",
        "lineno": 187,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 2820,
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/28/0x7052ad9bbc671804616e2280059fb3113dcd735b.sol",
        "function": "withdrawRemainder()",
        "lineno": 190,
        "title": "Message call to external contract",
        "type": "Informational"
      }
    ],
    "success": true
  }
}