{
  "contract": "0x51c1a88a007411ca7af351218ea6448ed8f381c1",
  "tool": "mythril",
  "start": 1563506354.5828362,
  "end": 1563506489.4418273,
  "duration": 134.85899114608765,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 919,
        "code": "      require(_toList.length == _tokensList.length);\n      \n      uint256 sum = 0;\n      for (uint32 index = 0; index < _tokensList.length; index++) {\n          sum = sum.add(_tokensList[index]);\n      }\n\n      // if the sender doenst have enough balance then stop\n      require (balances[msg.sender] >= sum);\n        \n      for (uint32 i = 0; i < _toList.length; i++) {\n          transfer(_toList[i],_tokensList[i]);\n      }\n      return true;\n  }\n\n  /**\n  * @dev Gets the balance of the specified address.\n  * @param _owner The address to query the the balance of.\n  * @return An uint256 re",
        "debug": "calldata_TokenVesting_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_TokenVesting_0: 0x88d695b200000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenVesting: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `batchTransfer(address[],uint256[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/5/0x51c1a88a007411ca7af351218ea6448ed8f381c1.sol",
        "function": "batchTransfer(address[],uint256[])",
        "lineno": 131,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 6044,
        "code": "rn a - b;\n  }\n",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_1 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TokenVesting_4: 0x1\ntimestamp: 0x0\nstorage_3 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TokenVesting_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_2 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TokenVesting_4: 0x0\ncalldata_TokenVesting_0: 0x384711cc00000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenVesting: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/5/0x51c1a88a007411ca7af351218ea6448ed8f381c1.sol",
        "function": "vestedAmount(address)",
        "lineno": 26,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 6062,
        "code": "  ret",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TokenVesting_4: 0x9c9efb7ae5acd378025256a3945f5859076e809243093d9ecae2636c9fd28979\ncalldata_TokenVesting_32 + 4: 0xc290137095b13347e55005a6dc184559e0489f1233480050d0fb4bba17d34179\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xc290137095b13347e55005a6dc184559e0489f1233480050d0fb4bba17d34179\ncalldata_TokenVesting_4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_TokenVesting_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenVesting: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `transfer(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/5/0x51c1a88a007411ca7af351218ea6448ed8f381c1.sol",
        "function": "transfer(address,uint256)",
        "lineno": 32,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 6075,
        "code": "  }\n}\n\n/**\n * ",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_TokenVesting_32 + 36: 0x6218000d80000000000000000000000003980000201d00d021483f655bedf7fc\ncalldata_TokenVesting_32 + 4: 0xbd5dfeabad0efffffffffeffffffffffd599ffefbf95443422fa3e6413080700\nstorage_0 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TokenVesting_4: 0x0\ntimestamp: 0xbd5dfeabad0efffffffffeffffffffffd599ffefbf95443422fa3e64130806ff\ncalldata_TokenVesting_32 + 68: 0x6218000d80000000000000000000000003980000201d00d021483f655bedf7fc\ncalldata_TokenVesting_4: 0xffffffffffffffffffffffffffffffffffffffff\nstorage_3: 0x0\ncaller: 0x0\ncalldata_TokenVesting_0: 0xdb33079400000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenVesting: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/5/0x51c1a88a007411ca7af351218ea6448ed8f381c1.sol",
        "function": "addToVestMap(address,uint256,uint256,uint256,uint256)",
        "lineno": 33,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}