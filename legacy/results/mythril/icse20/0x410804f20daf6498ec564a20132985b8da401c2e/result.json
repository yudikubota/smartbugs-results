{
  "contract": "0x410804f20daf6498ec564a20132985b8da401c2e",
  "tool": "mythril",
  "start": 1563289078.761819,
  "end": 1563289204.3330328,
  "duration": 125.57121396064758,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 147,
        "code": "ess _token, address[] addresses, uint[] counts) public {\n    uint total;\n    ERC20 token = ERC20(_token);\n    for(uint i = 0; i < addresses.length; i++) {\n      require(token.transferFrom(msg.sender, addresses[i], counts[i]));\n        total += counts[i];\n    }\n    emit Multisended(total,_token);\n  }\n  function multiSendEth(addres",
        "debug": "calldata_MultiSend_32 + 4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_MultiSend_0: 0x9ec68f0f00000000000000000000000000000000000000000000000000000000\ncalldatasize_MultiSend: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `_function_0x9ec68f0f`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x410804f20daf6498ec564a20132985b8da401c2e.sol",
        "function": "_function_0x9ec68f0f",
        "lineno": 24,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 303,
        "code": "addresses,uint[] counts) public payable {\n    for(uint i = 0; i < addresses.length; i++) {\n      addresses[i].transfer(counts[i]);\n    }\n  }\n}",
        "debug": "calldata_MultiSend_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_MultiSend_0: 0xe702d7af00000000000000000000000000000000000000000000000000000000\ncalldatasize_MultiSend: 0x4\n",
        "description": "A possible integer overflow exists in the function `_function_0xe702d7af`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x410804f20daf6498ec564a20132985b8da401c2e.sol",
        "function": "_function_0xe702d7af",
        "lineno": 33,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 526,
        "code": "+= counts",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_MultiSend_4 + calldata_MultiSend_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_MultiSend_0: 0x9ec68f0f00000000000000000000000000000000000000000000000000000000\ncalldatasize_MultiSend: 0x4\nmem_128 +\n32 +\n32*calldata_MultiSend_4 + calldata_MultiSend_32 + 4: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0x410804f20daf6498ec564a20132985b8da401c2e.sol",
        "function": "_function_0x9ec68f0f",
        "lineno": 29,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 724,
        "code": "er, addresses[i], counts[i]));\n        total += counts[",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_contracts/0x410804f20daf6498ec564a20132985b8da401c2e.sol",
        "function": "_function_0x9ec68f0f",
        "lineno": 28,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 724,
        "code": "er, addresses[i], counts[i]));\n        total += counts[",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 724\n",
        "filename": "/unique_contracts/0x410804f20daf6498ec564a20132985b8da401c2e.sol",
        "function": "_function_0x9ec68f0f",
        "lineno": 28,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 1024,
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_MultiSend_4 + calldata_MultiSend_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_MultiSend_0: 0xe702d7af00000000000000000000000000000000000000000000000000000000\ncalldatasize_MultiSend: 0x4\nmem_128 + 32 + 32*calldata_MultiSend_4 + calldata_MultiSend_4: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0x410804f20daf6498ec564a20132985b8da401c2e.sol",
        "function": "_function_0xe702d7af",
        "lineno": 38,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 1056,
        "code": "    }\n  }\n}",
        "debug": "SOLVER OUTPUT:\nmem_128 + 32 + 32*calldata_MultiSend_4 + calldata_MultiSend_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_MultiSend_4 + calldata_MultiSend_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_MultiSend_0: 0xe702d7af00000000000000000000000000000000000000000000000000000000\ncalldatasize_MultiSend: 0x4\n",
        "description": "In the function `_function_0xe702d7af` a non-zero amount of Ether is sent to an address taken from function arguments.\nIt seems that this function can be called without restrictions.",
        "filename": "/unique_contracts/0x410804f20daf6498ec564a20132985b8da401c2e.sol",
        "function": "_function_0xe702d7af",
        "lineno": 36,
        "title": "Ether send",
        "type": "Warning"
      }
    ],
    "success": true
  }
}