{"error": null, "issues": [{"address": 1807, "code": "].issuer);\n   ", "debug": "The exception is triggered under the following conditions:\n\ncalldata_Issuer_4: 0x0\nstorage_2: 0x0\ncalldata_Issuer_0: 0x20c5429b00000000000000000000000000000000000000000000000000000000\ncalldatasize_Issuer: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/14/0x46cefba4dd7512b2449e1ac4b730bfb7f77d1407.sol", "function": "revoke(uint256)", "lineno": 116, "title": "Exception state", "type": "Informational"}, {"address": 2227, "code": "ookSize -= 1;\n  }\n}\n\ninterface Issuer {\n  function ", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/14/0x46cefba4dd7512b2449e1ac4b730bfb7f77d1407.sol", "function": "revoke(uint256)", "lineno": 119, "title": "Message call to external contract", "type": "Warning"}, {"address": 2227, "code": "ookSize -= 1;\n  }\n}\n\ninterface Issuer {\n  function ", "debug": "", "description": "A possible transaction order independence vulnerability exists in function revoke(uint256). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/14/0x46cefba4dd7512b2449e1ac4b730bfb7f77d1407.sol", "function": "revoke(uint256)", "lineno": 119, "title": "Transaction order dependence", "type": "Warning"}, {"address": 2267, "code": "address _to, uint256 _toke", "debug": "The exception is triggered under the following conditions:\n\nstorage_2: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ntimestamp: 0x0\nstorage_3: 0x0\nretval_2227: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_6 +\n29102676481673041902632991033461445430619272659676223336789171408008386403022 +\n7*calldata_Issuer_4: 0x0\nstorage_1 +\n29102676481673041902632991033461445430619272659676223336789171408008386403022 +\n7*calldata_Issuer_4: 0x0\ncaller: 0x0\ncalldata_Issuer_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncalldata_Issuer_0: 0x20c5429b00000000000000000000000000000000000000000000000000000000\ncalldatasize_Issuer: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/14/0x46cefba4dd7512b2449e1ac4b730bfb7f77d1407.sol", "function": "revoke(uint256)", "lineno": 124, "title": "Exception state", "type": "Informational"}, {"address": 2413, "code": "m(address _from, address _to, uint256 _toke", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/14/0x46cefba4dd7512b2449e1ac4b730bfb7f77d1407.sol", "function": "revoke(uint256)", "lineno": 124, "title": "State change after external call", "type": "Warning"}, {"address": 2516, "code": "m(address _from, address _to, uint256 _toke", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/14/0x46cefba4dd7512b2449e1ac4b730bfb7f77d1407.sol", "function": "revoke(uint256)", "lineno": 124, "title": "State change after external call", "type": "Warning"}, {"address": 2619, "code": "m(address _from, address _to, uint256 _toke", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/14/0x46cefba4dd7512b2449e1ac4b730bfb7f77d1407.sol", "function": "revoke(uint256)", "lineno": 124, "title": "State change after external call", "type": "Warning"}, {"address": 2630, "code": "m(address _from, address _to, uint256 _toke", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/14/0x46cefba4dd7512b2449e1ac4b730bfb7f77d1407.sol", "function": "revoke(uint256)", "lineno": 124, "title": "State change after external call", "type": "Warning"}, {"address": 2640, "code": "m(address _from, address _to, uint256 _toke", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/14/0x46cefba4dd7512b2449e1ac4b730bfb7f77d1407.sol", "function": "revoke(uint256)", "lineno": 124, "title": "State change after external call", "type": "Warning"}, {"address": 2650, "code": "m(address _from, address _to, uint256 _toke", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/14/0x46cefba4dd7512b2449e1ac4b730bfb7f77d1407.sol", "function": "revoke(uint256)", "lineno": 124, "title": "State change after external call", "type": "Warning"}, {"address": 2660, "code": "m(address _from, address _to, uint256 _toke", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/14/0x46cefba4dd7512b2449e1ac4b730bfb7f77d1407.sol", "function": "revoke(uint256)", "lineno": 124, "title": "State change after external call", "type": "Warning"}, {"address": 2679, "code": "ternal;  \n  functi", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/14/0x46cefba4dd7512b2449e1ac4b730bfb7f77d1407.sol", "function": "revoke(uint256)", "lineno": 124, "title": "State change after external call", "type": "Warning"}, {"address": 2805, "code": "rderBook[_id].", "debug": "The exception is triggered under the following conditions:\n\ncalldata_Issuer_4: 0x0\nstorage_2: 0x0\ncalldata_Issuer_0: 0x2e4f43bf00000000000000000000000000000000000000000000000000000000\ncalldatasize_Issuer: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/14/0x46cefba4dd7512b2449e1ac4b730bfb7f77d1407.sol", "function": "_function_0x2e4f43bf", "lineno": 71, "title": "Exception state", "type": "Informational"}, {"address": 3300, "code": "), _tokenId);\n    if (or", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/14/0x46cefba4dd7512b2449e1ac4b730bfb7f77d1407.sol", "function": "put(address,uint256,uint256,uint256,uint256)", "lineno": 91, "title": "Message call to external contract", "type": "Warning"}, {"address": 3300, "code": "), _tokenId);\n    if (or", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3608\n", "filename": "/unique_chucks/14/0x46cefba4dd7512b2449e1ac4b730bfb7f77d1407.sol", "function": "put(address,uint256,uint256,uint256,uint256)", "lineno": 91, "title": "Multiple Calls", "type": "Information"}, {"address": 3608, "code": "ok.length) {\n      orderBook.push(Order(msg.sender, msg.", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/14/0x46cefba4dd7512b2449e1ac4b730bfb7f77d1407.sol", "function": "put(address,uint256,uint256,uint256,uint256)", "lineno": 92, "title": "Message call to external contract", "type": "Warning"}, {"address": 3771, "code": ";\n\n/// @author Min", "debug": "storage_2: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nretval_3300: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_Issuer_32 + 100: 0x0\nretval_3608: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\nreturndatasize: 0x20\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_Issuer_32 + 68: 0x0\ncalldata_Issuer_0: 0x5ca8644700000000000000000000000000000000000000000000000000000000\ncalldatasize_Issuer: 0x4\nstorage_3: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `put(address,uint256,uint256,uint256,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/14/0x46cefba4dd7512b2449e1ac4b730bfb7f77d1407.sol", "function": "put(address,uint256,uint256,uint256,uint256)", "lineno": 1, "title": "Integer Overflow ", "type": "Warning"}, {"address": 4202, "code": "e, _endTime);\n    }\n    ", "debug": "The exception is triggered under the following conditions:\n\nstorage_3: 0x400000000fffffffffe3cffc8003d3fb8fff7bf8012000000200fc05c10\nstorage_2: 0x11ffffffff430fe00004020b2fc02bc00400000008021004010\nretval_3300: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_Issuer_32 + 100: 0x0\nretval_3608: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\nreturndatasize: 0x20\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_Issuer_32 + 68: 0x0\ncalldata_Issuer_0: 0x5ca8644700000000000000000000000000000000000000000000000000000000\ncalldatasize_Issuer: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/14/0x46cefba4dd7512b2449e1ac4b730bfb7f77d1407.sol", "function": "put(address,uint256,uint256,uint256,uint256)", "lineno": 95, "title": "Exception state", "type": "Informational"}, {"address": 4287, "code": "e, _endTime);\n    }\n    orderBookSize += 1;\n  }\n  function buy(uint256 _id) public payable{\n    require(ms", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/14/0x46cefba4dd7512b2449e1ac4b730bfb7f77d1407.sol", "function": "put(address,uint256,uint256,uint256,uint256)", "lineno": 95, "title": "State change after external call", "type": "Warning"}, {"address": 4358, "code": "e, _endTime);\n    }\n    orderBookSize += 1;\n  }\n  function buy(uint256 _id) public payable{\n    require(ms", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/14/0x46cefba4dd7512b2449e1ac4b730bfb7f77d1407.sol", "function": "put(address,uint256,uint256,uint256,uint256)", "lineno": 95, "title": "State change after external call", "type": "Warning"}, {"address": 4429, "code": "e, _endTime);\n    }\n    orderBookSize += 1;\n  }\n  function buy(uint256 _id) public payable{\n    require(ms", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/14/0x46cefba4dd7512b2449e1ac4b730bfb7f77d1407.sol", "function": "put(address,uint256,uint256,uint256,uint256)", "lineno": 95, "title": "State change after external call", "type": "Warning"}, {"address": 4440, "code": "e, _endTime);\n    }\n    orderBookSize += 1;\n  }\n  function buy(uint256 _id) public payable{\n    require(ms", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/14/0x46cefba4dd7512b2449e1ac4b730bfb7f77d1407.sol", "function": "put(address,uint256,uint256,uint256,uint256)", "lineno": 95, "title": "State change after external call", "type": "Warning"}, {"address": 4450, "code": "e, _endTime);\n    }\n    orderBookSize += 1;\n  }\n  function buy(uint256 _id) public payable{\n    require(ms", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/14/0x46cefba4dd7512b2449e1ac4b730bfb7f77d1407.sol", "function": "put(address,uint256,uint256,uint256,uint256)", "lineno": 95, "title": "State change after external call", "type": "Warning"}, {"address": 4460, "code": "e, _endTime);\n    }\n    orderBookSize += 1;\n  }\n  function buy(uint256 _id) public payable{\n    require(ms", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/14/0x46cefba4dd7512b2449e1ac4b730bfb7f77d1407.sol", "function": "put(address,uint256,uint256,uint256,uint256)", "lineno": 95, "title": "State change after external call", "type": "Warning"}, {"address": 4470, "code": "e, _endTime);\n    }\n    orderBookSize += 1;\n  }\n  function buy(uint256 _id) public payable{\n    require(ms", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/14/0x46cefba4dd7512b2449e1ac4b730bfb7f77d1407.sol", "function": "put(address,uint256,uint256,uint256,uint256)", "lineno": 95, "title": "State change after external call", "type": "Warning"}, {"address": 4484, "code": "erBook[_id].price)", "debug": "storage_3: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nretval_3300: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_Issuer_32 + 100: 0x0\nretval_3608: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\nreturndatasize: 0x20\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_Issuer_32 + 68: 0x0\ncalldata_Issuer_0: 0x5ca8644700000000000000000000000000000000000000000000000000000000\ncalldatasize_Issuer: 0x4\nstorage_2: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `put(address,uint256,uint256,uint256,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/14/0x46cefba4dd7512b2449e1ac4b730bfb7f77d1407.sol", "function": "put(address,uint256,uint256,uint256,uint256)", "lineno": 100, "title": "Integer Overflow ", "type": "Warning"}, {"address": 4490, "code": "erBook[_id].price)", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/14/0x46cefba4dd7512b2449e1ac4b730bfb7f77d1407.sol", "function": "put(address,uint256,uint256,uint256,uint256)", "lineno": 100, "title": "State change after external call", "type": "Warning"}, {"address": 4903, "code": ".sender));\n   ", "debug": "The exception is triggered under the following conditions:\n\ncalldata_Issuer_4: 0x0\nstorage_2: 0x0\ncalldata_Issuer_0: 0xd96a094a00000000000000000000000000000000000000000000000000000000\ncalldatasize_Issuer: 0x4\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/14/0x46cefba4dd7512b2449e1ac4b730bfb7f77d1407.sol", "function": "buy(uint256)", "lineno": 102, "title": "Exception state", "type": "Informational"}], "success": true}