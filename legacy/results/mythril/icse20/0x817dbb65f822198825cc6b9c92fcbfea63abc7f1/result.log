{"error": null, "issues": [{"address": 649, "code": "s that will receive the ether sent to this token sale\n    function setVault(address _newVaultAddress) onlyOwner public{\n        vaultAddress = _newVaultAddress;\n    }\n\n    /// @notice `onlyOwner` changes the setting to allow transfer tokens\n    /// @param _allow  allowing to tran", "debug": "calldata_TokenSaleAfterSplit_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_TokenSaleAfterSplit_0: 0x4bd09c2a00000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenSaleAfterSplit: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `distributeTokens(address[],uint256[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/12/0x817dbb65f822198825cc6b9c92fcbfea63abc7f1.sol", "function": "distributeTokens(address[],uint256[])", "lineno": 398, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1868, "code": "8000).value(msg.value)());", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/12/0x817dbb65f822198825cc6b9c92fcbfea63abc7f1.sol", "function": "fallback", "lineno": 376, "title": "Message call to external contract", "type": "Informational"}, {"address": 1868, "code": "8000).value(msg.value)());", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2317\nCall at address: 2101\nCall at address: 2317\nCall at address: 2101\nCall at address: 2317\nCall at address: 2101\nCall at address: 2317\nCall at address: 2101\n", "filename": "/unique_chucks/12/0x817dbb65f822198825cc6b9c92fcbfea63abc7f1.sol", "function": "fallback", "lineno": 376, "title": "Multiple Calls", "type": "Information"}, {"address": 2023, "code": "+= tokensAmount;\n\n        r", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/12/0x817dbb65f822198825cc6b9c92fcbfea63abc7f1.sol", "function": "fallback", "lineno": 382, "title": "State change after external call", "type": "Warning"}, {"address": 2101, "code": ", uint256[] _tokens) onlyOwner public {\n\n      ", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/12/0x817dbb65f822198825cc6b9c92fcbfea63abc7f1.sol", "function": "fallback", "lineno": 387, "title": "Message call to external contract", "type": "Informational"}, {"address": 2101, "code": ", uint256[] _tokens) onlyOwner public {\n\n      ", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2317\n", "filename": "/unique_chucks/12/0x817dbb65f822198825cc6b9c92fcbfea63abc7f1.sol", "function": "fallback", "lineno": 387, "title": "Multiple Calls", "type": "Information"}, {"address": 2317, "code": "\n        }\n\n    }\n\n\n    /// @notice `onlyOwner` ch", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/12/0x817dbb65f822198825cc6b9c92fcbfea63abc7f1.sol", "function": "fallback", "lineno": 391, "title": "Message call to external contract", "type": "Informational"}, {"address": 2399, "code": "tion that ether is sent\n    ///", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/12/0x817dbb65f822198825cc6b9c92fcbfea63abc7f1.sol", "function": "fallback", "lineno": 397, "title": "State change after external call", "type": "Warning"}, {"address": 2693, "code": "urns(bool) {\n        doPayment(_owner);\n      ", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/12/0x817dbb65f822198825cc6b9c92fcbfea63abc7f1.sol", "function": "changeController(address)", "lineno": 430, "title": "Message call to external contract", "type": "Informational"}, {"address": 3151, "code": "e setting to allow transfer tokens\n    /// @param _a", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/12/0x817dbb65f822198825cc6b9c92fcbfea63abc7f1.sol", "function": "distributeTokens(address[],uint256[])", "lineno": 403, "title": "Message call to external contract", "type": "Informational"}, {"address": 3151, "code": "e setting to allow transfer tokens\n    /// @param _a", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3151\n", "filename": "/unique_chucks/12/0x817dbb65f822198825cc6b9c92fcbfea63abc7f1.sol", "function": "distributeTokens(address[],uint256[])", "lineno": 403, "title": "Multiple Calls", "type": "Information"}], "success": true}