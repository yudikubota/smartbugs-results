{"error": null, "issues": [{"address": 1929, "code": "256 public rate;\n    \n    \n    uint256", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/21/0xb93489b75a0cf3bf5a380ab3c986482d15a9ef56.sol", "function": "approve(address,uint256)", "lineno": 320, "title": "State change after external call", "type": "Warning"}, {"address": 5258, "code": "  require ( balances[_to] + ", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/21/0xb93489b75a0cf3bf5a380ab3c986482d15a9ef56.sol", "function": "transfer(address,uint256)", "lineno": 250, "title": "Message call to external contract", "type": "Informational"}, {"address": 5258, "code": "  require ( balances[_to] + ", "debug": "", "description": "A possible transaction order independence vulnerability exists in function transfer(address,uint256). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/21/0xb93489b75a0cf3bf5a380ab3c986482d15a9ef56.sol", "function": "transfer(address,uint256)", "lineno": 250, "title": "Transaction order dependence", "type": "Warning"}, {"address": 5458, "code": " balances[msg.sender] >= _value);\n        require ( balances[_to] + _", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/21/0xb93489b75a0cf3bf5a380ab3c986482d15a9ef56.sol", "function": "approve(address,uint256)", "lineno": 249, "title": "State change after external call", "type": "Warning"}, {"address": 5546, "code": "es[_to]);\n        \n    ", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/21/0xb93489b75a0cf3bf5a380ab3c986482d15a9ef56.sol", "function": "approve(address,uint256)", "lineno": 250, "title": "State change after external call", "type": "Warning"}, {"address": 5557, "code": "    r", "debug": "retval_5258: 0xaa213ccbfee08cd1efe7616f4be5b7d410d82bf6ffe2cb556080844a6b9abf8d\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_SwapToken_4: 0xb7d1068b2bd3849a9011786e0c18a70797df566cffec7a15daeac467c5880081\nreturndatasize: 0x20\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_SwapToken_0: 0x70a0823100000000000000000000000000000000000000000000000000000000\ncalldatasize_SwapToken: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `balanceOf(address)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/21/0xb93489b75a0cf3bf5a380ab3c986482d15a9ef56.sol", "function": "balanceOf(address)", "lineno": 30, "title": "Integer Overflow ", "type": "Warning"}, {"address": 5570, "code": ";\n    }\n} \n\nco", "debug": "The exception is triggered under the following conditions:\n\nretval_5258: 0xdafbf65586e76e5f71f535fe9c8bf755e33f76aebb5d6b011913f7eb78fd03db\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_SwapToken_4: 0x8a8273845c4a1e0fb9e19ffc8a37d7c5eb3864aca2714f010a100e0261f9009b\nreturndatasize: 0x20\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_SwapToken_0: 0x70a0823100000000000000000000000000000000000000000000000000000000\ncalldatasize_SwapToken: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/21/0xb93489b75a0cf3bf5a380ab3c986482d15a9ef56.sol", "function": "balanceOf(address)", "lineno": 30, "title": "Exception state", "type": "Informational"}, {"address": 5594, "code": "turn a - b;\n  ", "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffeffffffffffffffffffffffffffffffffffffe\ncalldata_SwapToken_4: 0x2\nstorage_0: 0x1\ncalldata_SwapToken_0: 0x42966c6800000000000000000000000000000000000000000000000000000000\ncalldatasize_SwapToken: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/21/0xb93489b75a0cf3bf5a380ab3c986482d15a9ef56.sol", "function": "burn(uint256)", "lineno": 24, "title": "Exception state", "type": "Informational"}], "success": true}