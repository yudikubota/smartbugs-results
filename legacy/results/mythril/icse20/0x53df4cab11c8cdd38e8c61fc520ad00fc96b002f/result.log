{"error": null, "issues": [{"address": 2417, "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/23/0x53df4cab11c8cdd38e8c61fc520ad00fc96b002f.sol", "function": "withdrawTokens(address)", "lineno": 191, "title": "Message call to external contract", "type": "Warning"}, {"address": 2417, "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2609\n", "filename": "/unique_chucks/23/0x53df4cab11c8cdd38e8c61fc520ad00fc96b002f.sol", "function": "withdrawTokens(address)", "lineno": 191, "title": "Multiple Calls", "type": "Information"}, {"address": 2609, "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/23/0x53df4cab11c8cdd38e8c61fc520ad00fc96b002f.sol", "function": "withdrawTokens(address)", "lineno": 191, "title": "Message call to external contract", "type": "Warning"}, {"address": 2940, "debug": "", "description": "A possible transaction order independence vulnerability exists in function withdrawEther(). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/23/0x53df4cab11c8cdd38e8c61fc520ad00fc96b002f.sol", "function": "withdrawEther()", "lineno": 191, "title": "Transaction order dependence", "type": "Warning"}, {"address": 4531, "code": "  return a - b", "debug": "The exception is triggered under the following conditions:\n\ncalldata_TUNEToken_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_0: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_TUNEToken_0: 0x42966c6800000000000000000000000000000000000000000000000000000000\ncalldatasize_TUNEToken: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/23/0x53df4cab11c8cdd38e8c61fc520ad00fc96b002f.sol", "function": "burn(uint256)", "lineno": 24, "title": "Exception state", "type": "Informational"}, {"address": 5097, "code": ");\n  ", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TUNEToken_32_+_4: 0xc050fffff320c00020003d81af848540000000000000040000110001bd062022\ncalldata_TUNEToken_32 + 36: 0xfe51000008ce80008001c1d33616877ffffffffffffff7ffffe10000398d50ac\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xfe51000008ce80008001c1d33616877ffffffffffffff7ffffe10000398d50ac\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TUNEToken_4: 0xfe51000008ce80008001c1d33616877ffffffffffffff7ffffe10000398d50ac\ncalldata_TUNEToken_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_TUNEToken_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_TUNEToken: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `transferFrom(address,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/23/0x53df4cab11c8cdd38e8c61fc520ad00fc96b002f.sol", "function": "transferFrom(address,address,uint256)", "lineno": 30, "title": "Integer Overflow ", "type": "Warning"}, {"address": 5110, "code": "n c;\n    }\n}\n\n", "debug": "The exception is triggered under the following conditions:\n\ncalldata_TUNEToken_32 + 4: 0x6218000d800000000000000000000000039800002005500633e06f771baff7fc\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TUNEToken_4: 0xbd5dfeabad0efffffffffeffffffffffd599ffefbfe6f24271e80e64322c0700\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x6218000d800000000000000000000000039800002005500633e06f771baff7fc\ncalldata_TUNEToken_4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_TUNEToken_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncalldatasize_TUNEToken: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/23/0x53df4cab11c8cdd38e8c61fc520ad00fc96b002f.sol", "function": "transfer(address,uint256)", "lineno": 31, "title": "Exception state", "type": "Informational"}], "success": true}