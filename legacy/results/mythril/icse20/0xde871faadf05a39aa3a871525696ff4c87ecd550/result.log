{"error": null, "issues": [{"address": 368, "code": "ticipants(address[] _airdropParticipants) public onlyOwner {\n        require(_airdropParticipants.length != 0 && _airdropParticipants.length <= ADDRESS_LIMIT);\n        airdropParticipants = _airdropPart", "debug": "calldata_UniversalManager_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_UniversalManager_0: 0x5b4ccc9d00000000000000000000000000000000000000000000000000000000\ncalldatasize_UniversalManager: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `addParticipants(address[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/17/0xde871faadf05a39aa3a871525696ff4c87ecd550.sol", "function": "addParticipants(address[])", "lineno": 291, "title": "Integer Overflow ", "type": "Warning"}, {"address": 374, "code": "ticipants(address[] _airdropParticipants) public onlyOwner {\n        require(_airdropParticipants.length != 0 && _airdropParticipants.length <= ADDRESS_LIMIT);\n        airdropParticipants = _airdropPart", "debug": "calldata_UniversalManager_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc\ncalldata_UniversalManager_0: 0x5b4ccc9d00000000000000000000000000000000000000000000000000000000\ncalldatasize_UniversalManager: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `addParticipants(address[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/17/0xde871faadf05a39aa3a871525696ff4c87ecd550.sol", "function": "addParticipants(address[])", "lineno": 291, "title": "Integer Overflow ", "type": "Warning"}, {"address": 427, "code": "ts\n    function transfer(uint256 _amount) public onlyOwner {\n        uint256 max;\n        uint256 length = participants.length;\n        if ((index + TRANSFERS_PER_TRANSACTION) >= length) {\n            max = length;\n        } else {\n          ", "debug": "calldata_UniversalManager_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_UniversalManager_0: 0x6b35bed200000000000000000000000000000000000000000000000000000000\ncalldatasize_UniversalManager: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `addAirdropParticipants(address[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/17/0xde871faadf05a39aa3a871525696ff4c87ecd550.sol", "function": "addAirdropParticipants(address[])", "lineno": 296, "title": "Integer Overflow ", "type": "Warning"}, {"address": 935, "code": "     index = 0;\n        } else {\n", "debug": "storage_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff88\nstorage_0: 0x0\ncaller: 0x0\ncalldata_UniversalManager_0: 0x12514bba00000000000000000000000000000000000000000000000000000000\ncalldatasize_UniversalManager: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `transfer(uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/17/0xde871faadf05a39aa3a871525696ff4c87ecd550.sol", "function": "transfer(uint256)", "lineno": 309, "title": "Integer Overflow ", "type": "Warning"}, {"address": 956, "code": "r airdrop tokens to all registere", "debug": "storage_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffea\nstorage_6: 0x81\nstorage_0: 0x0\ncaller: 0x0\ncalldata_UniversalManager_0: 0x12514bba00000000000000000000000000000000000000000000000000000000\ncalldatasize_UniversalManager: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `transfer(uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/17/0xde871faadf05a39aa3a871525696ff4c87ecd550.sol", "function": "transfer(uint256)", "lineno": 315, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1230, "code": "uint256 max;\n        uint256 length = ai", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/17/0xde871faadf05a39aa3a871525696ff4c87ecd550.sol", "function": "transfer(uint256)", "lineno": 317, "title": "Message call to external contract", "type": "Informational"}, {"address": 1230, "code": "uint256 max;\n        uint256 length = ai", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1230\nCall at address: 1230\n", "filename": "/unique_chucks/17/0xde871faadf05a39aa3a871525696ff4c87ecd550.sol", "function": "transfer(uint256)", "lineno": 317, "title": "Multiple Calls", "type": "Information"}, {"address": 1464, "code": "div(token.totalSupply());\n            if", "debug": "storage_5: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff88\nstorage_0: 0x0\ncaller: 0x0\ncalldata_UniversalManager_0: 0x54d7c34d00000000000000000000000000000000000000000000000000000000\ncalldatasize_UniversalManager: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `transferAidrop()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/17/0xde871faadf05a39aa3a871525696ff4c87ecd550.sol", "function": "transferAidrop()", "lineno": 326, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1485, "code": "fer(airdropParticipants[i], share);\n    ", "debug": "storage_5: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffea\nstorage_7: 0x81\nstorage_0: 0x0\ncaller: 0x0\ncalldata_UniversalManager_0: 0x54d7c34d00000000000000000000000000000000000000000000000000000000\ncalldatasize_UniversalManager: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `transferAidrop()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/17/0xde871faadf05a39aa3a871525696ff4c87ecd550.sol", "function": "transferAidrop()", "lineno": 330, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1642, "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/17/0xde871faadf05a39aa3a871525696ff4c87ecd550.sol", "function": "transferAidrop()", "lineno": 338, "title": "Message call to external contract", "type": "Informational"}, {"address": 1642, "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1950\n", "filename": "/unique_chucks/17/0xde871faadf05a39aa3a871525696ff4c87ecd550.sol", "function": "transferAidrop()", "lineno": 338, "title": "Multiple Calls", "type": "Information"}, {"address": 1950, "code": "TRANSACTION;\n        }\n    }\n}", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/17/0xde871faadf05a39aa3a871525696ff4c87ecd550.sol", "function": "transferAidrop()", "lineno": 335, "title": "Message call to external contract", "type": "Informational"}, {"address": 3372, "code": "rivate currentPool = 0;\n    uint256 private index = 0;\n    uint256 private airdropIndex = 0;\n    address[] private participants;\n    address[] private airdropParticipants;\n\n    function UniversalManager(address uniFoundation) public {\n        token = new UniversalCoin(uniFoundation);\n        airdrop = token.airdropReserve().div(3);\n    }\n\n    // Set size of current week tokens pool\n    function setCurrentWeekPool(uint256 _currentPool) public onlyOwner {\n        require(_currentPool > 0);\n        currentPool = _currentPool;\n    }\n\n    // Adds participant for the current week\n    function addParticipants(address[] _participants) external onlyOwner {\n        require(_participants.length != 0 && _participants.length <= ADDRESS_LIMIT);\n        participants = _participants;\n    }\n\n    // Add all unique participants for receiving airdrop\n    function addAirdropParticipants(address[] _airdropParticipants) public onlyOwner {\n        require(_airdropParticipants.length != 0 && _airdropParticipants.length <= ADDRESS_LIMIT);\n        airdropParticipants = _airdropParticipants;\n    }\n\n    // Transfer tokens to current week participants\n    function transfer(uint256 _amount) public onlyOwner {\n        uint256 max;\n        uint256 length = participants.length;\n        if ((index + TRANSFERS_PER_TRANSACTION) >= length) {\n            max = length;\n        } else {\n            max = index + TRANSFERS_PER_TRANSACTION;\n        }\n        for (uint i = index; i < max; i++) {\n            token.transfer(participants[i], _amount);\n        }\n        if (max >= length) {\n            index = 0;\n        } else {\n            index += TRANSFERS_PER_TRANSACTION;\n        }\n    }\n\n    // Transfer airdrop tokens to all registered participants\n    function transferAidrop() public onlyOwner {\n        uint256 max;\n        uint256 length = airdropParticipants.length;\n        if ((airdropIndex + TRANSFERS_PER_TRANSACTION) >= length) {\n            max = length;\n        } else {\n            max = airdropIndex + TRANSFERS_PER_TRANSACTION;\n        }\n        uint256 share;\n        for (uint i = airdropIndex; i < max; i++) {\n            share = (airdrop.mul(token.balanceOf(airdropParticipants[i]))).div(token.totalSupply());\n            if (share == 0) {\n                continue;\n            }\n            token.transfer(airdropParticipants[i], share);\n        }\n        if (max >= length) {\n            airdropIndex = 0;\n        } else {\n            airdropIndex += TRANSFERS_PER_TRANSACTION;\n        }\n    }\n}", "debug": "calldata_UniversalManager_4 + calldata_UniversalManager_4: 0x25\nstorage_6: 0x81d87efe689dfdfff7ff36dfef3ffddfdefc4011bed311db53fc37806801fa80\nstorage_0: 0x0\ncaller: 0x0\ncalldata_UniversalManager_0: 0x5b4ccc9d00000000000000000000000000000000000000000000000000000000\ncalldatasize_UniversalManager: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `addParticipants(address[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/17/0xde871faadf05a39aa3a871525696ff4c87ecd550.sol", "function": "addParticipants(address[])", "lineno": 267, "title": "Integer Overflow ", "type": "Warning"}, {"address": 3385, "code": "rivate currentPool = 0;\n    uint256 private index = 0;\n    uint256 private airdropIndex = 0;\n    address[] private participants;\n    address[] private airdropParticipants;\n\n    function UniversalManager(address uniFoundation) public {\n        token = new UniversalCoin(uniFoundation);\n        airdrop = token.airdropReserve().div(3);\n    }\n\n    // Set size of current week tokens pool\n    function setCurrentWeekPool(uint256 _currentPool) public onlyOwner {\n        require(_currentPool > 0);\n        currentPool = _currentPool;\n    }\n\n    // Adds participant for the current week\n    function addParticipants(address[] _participants) external onlyOwner {\n        require(_participants.length != 0 && _participants.length <= ADDRESS_LIMIT);\n        participants = _participants;\n    }\n\n    // Add all unique participants for receiving airdrop\n    function addAirdropParticipants(address[] _airdropParticipants) public onlyOwner {\n        require(_airdropParticipants.length != 0 && _airdropParticipants.length <= ADDRESS_LIMIT);\n        airdropParticipants = _airdropParticipants;\n    }\n\n    // Transfer tokens to current week participants\n    function transfer(uint256 _amount) public onlyOwner {\n        uint256 max;\n        uint256 length = participants.length;\n        if ((index + TRANSFERS_PER_TRANSACTION) >= length) {\n            max = length;\n        } else {\n            max = index + TRANSFERS_PER_TRANSACTION;\n        }\n        for (uint i = index; i < max; i++) {\n            token.transfer(participants[i], _amount);\n        }\n        if (max >= length) {\n            index = 0;\n        } else {\n            index += TRANSFERS_PER_TRANSACTION;\n        }\n    }\n\n    // Transfer airdrop tokens to all registered participants\n    function transferAidrop() public onlyOwner {\n        uint256 max;\n        uint256 length = airdropParticipants.length;\n        if ((airdropIndex + TRANSFERS_PER_TRANSACTION) >= length) {\n            max = length;\n        } else {\n            max = airdropIndex + TRANSFERS_PER_TRANSACTION;\n        }\n        uint256 share;\n        for (uint i = airdropIndex; i < max; i++) {\n            share = (airdrop.mul(token.balanceOf(airdropParticipants[i]))).div(token.totalSupply());\n            if (share == 0) {\n                continue;\n            }\n            token.transfer(airdropParticipants[i], share);\n        }\n        if (max >= length) {\n            airdropIndex = 0;\n        } else {\n            airdropIndex += TRANSFERS_PER_TRANSACTION;\n        }\n    }\n}", "debug": "calldata_UniversalManager_4 + calldata_UniversalManager_4: 0x77\ncalldata_UniversalManager_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff100\nstorage_0: 0x0\ncaller: 0x0\ncalldata_UniversalManager_0: 0x5b4ccc9d00000000000000000000000000000000000000000000000000000000\ncalldatasize_UniversalManager: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `addParticipants(address[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/17/0xde871faadf05a39aa3a871525696ff4c87ecd550.sol", "function": "addParticipants(address[])", "lineno": 267, "title": "Integer Overflow ", "type": "Warning"}, {"address": 3532, "code": "rivate currentPool = 0;\n    uint256 private index = 0;\n    uint256 private airdropIndex = 0;\n    address[] private participants;\n    address[] private airdropParticipants;\n\n    function UniversalManager(address uniFoundation) public {\n        token = new UniversalCoin(uniFoundation);\n        airdrop = token.airdropReserve().div(3);\n    }\n\n    // Set size of current week tokens pool\n    function setCurrentWeekPool(uint256 _currentPool) public onlyOwner {\n        require(_currentPool > 0);\n        currentPool = _currentPool;\n    }\n\n    // Adds participant for the current week\n    function addParticipants(address[] _participants) external onlyOwner {\n        require(_participants.length != 0 && _participants.length <= ADDRESS_LIMIT);\n        participants = _participants;\n    }\n\n    // Add all unique participants for receiving airdrop\n    function addAirdropParticipants(address[] _airdropParticipants) public onlyOwner {\n        require(_airdropParticipants.length != 0 && _airdropParticipants.length <= ADDRESS_LIMIT);\n        airdropParticipants = _airdropParticipants;\n    }\n\n    // Transfer tokens to current week participants\n    function transfer(uint256 _amount) public onlyOwner {\n        uint256 max;\n        uint256 length = participants.length;\n        if ((index + TRANSFERS_PER_TRANSACTION) >= length) {\n            max = length;\n        } else {\n            max = index + TRANSFERS_PER_TRANSACTION;\n        }\n        for (uint i = index; i < max; i++) {\n            token.transfer(participants[i], _amount);\n        }\n        if (max >= length) {\n            index = 0;\n        } else {\n            index += TRANSFERS_PER_TRANSACTION;\n        }\n    }\n\n    // Transfer airdrop tokens to all registered participants\n    function transferAidrop() public onlyOwner {\n        uint256 max;\n        uint256 length = airdropParticipants.length;\n        if ((airdropIndex + TRANSFERS_PER_TRANSACTION) >= length) {\n            max = length;\n        } else {\n            max = airdropIndex + TRANSFERS_PER_TRANSACTION;\n        }\n        uint256 share;\n        for (uint i = airdropIndex; i < max; i++) {\n            share = (airdrop.mul(token.balanceOf(airdropParticipants[i]))).div(token.totalSupply());\n            if (share == 0) {\n                continue;\n            }\n            token.transfer(airdropParticipants[i], share);\n        }\n        if (max >= length) {\n            airdropIndex = 0;\n        } else {\n            airdropIndex += TRANSFERS_PER_TRANSACTION;\n        }\n    }\n}", "debug": "calldata_UniversalManager_4 + calldata_UniversalManager_4: 0xe\nstorage_7: 0xe0000003000003c844408021c602fffffc4fffd9fbd1df39fbfff3ffffffff98\nstorage_0: 0x0\ncaller: 0x0\ncalldata_UniversalManager_0: 0x6b35bed200000000000000000000000000000000000000000000000000000000\ncalldatasize_UniversalManager: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `addAirdropParticipants(address[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/17/0xde871faadf05a39aa3a871525696ff4c87ecd550.sol", "function": "addAirdropParticipants(address[])", "lineno": 267, "title": "Integer Overflow ", "type": "Warning"}], "success": true}