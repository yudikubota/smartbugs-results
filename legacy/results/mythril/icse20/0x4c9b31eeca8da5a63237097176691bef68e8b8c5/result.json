{
  "contract": "0x4c9b31eeca8da5a63237097176691bef68e8b8c5",
  "tool": "mythril",
  "start": 1563664176.1532989,
  "end": 1563664425.6432629,
  "duration": 249.4899640083313,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 356,
        "code": " 18) * loanPeri",
        "debug": "timestamp: 0x0\nstorage_8: 0x1\nstorage_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_7: 0x0\ncaller: 0x0\ncalldata_PunkLombard_0: 0x18b4dd3d00000000000000000000000000000000000000000000000000000000\ncalldatasize_PunkLombard: 0x4\n",
        "description": "A possible integer underflow exists in the function `fallback`.\nThe subtraction may result in a value < 0.",
        "filename": "/unique_chucks/33/0x4c9b31eeca8da5a63237097176691bef68e8b8c5.sol",
        "function": "fallback",
        "lineno": 80,
        "title": "Integer Underflow",
        "type": "Warning"
      },
      {
        "address": 541,
        "code": "r.transfer(change);\n      }\n      Cryp",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1822\nCall at address: 1714\nCall at address: 1473\nCall at address: 1233\nCall at address: 914\nCall at address: 1473\nCall at address: 1233\nCall at address: 914\nCall at address: 655\n",
        "filename": "/unique_chucks/33/0x4c9b31eeca8da5a63237097176691bef68e8b8c5.sol",
        "function": "fallback",
        "lineno": 88,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 655,
        "code": "orrower, punkIndex); //tr",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1473\nCall at address: 1233\nCall at address: 914\n",
        "filename": "/unique_chucks/33/0x4c9b31eeca8da5a63237097176691bef68e8b8c5.sol",
        "function": "fallback",
        "lineno": 90,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 914,
        "code": "hip back to borrower after successful repayment\n    }\n\n    if(msg",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/33/0x4c9b31eeca8da5a63237097176691bef68e8b8c5.sol",
        "function": "fallback",
        "lineno": 90,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 914,
        "code": "hip back to borrower after successful repayment\n    }\n\n    if(msg",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1473\nCall at address: 1233\n",
        "filename": "/unique_chucks/33/0x4c9b31eeca8da5a63237097176691bef68e8b8c5.sol",
        "function": "fallback",
        "lineno": 90,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 1233,
        "code": "own 1 punk\n      require(CryptoPunk(CryptoPunksContract)",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/33/0x4c9b31eeca8da5a63237097176691bef68e8b8c5.sol",
        "function": "fallback",
        "lineno": 96,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 1233,
        "code": "own 1 punk\n      require(CryptoPunk(CryptoPunksContract)",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1473\n",
        "filename": "/unique_chucks/33/0x4c9b31eeca8da5a63237097176691bef68e8b8c5.sol",
        "function": "fallback",
        "lineno": 96,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 1473,
        "code": "ombard contract owns the punk specified\n      require(msg.val",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/33/0x4c9b31eeca8da5a63237097176691bef68e8b8c5.sol",
        "function": "fallback",
        "lineno": 97,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 1473,
        "code": "ombard contract owns the punk specified\n      require(msg.val",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1822\nCall at address: 1714\n",
        "filename": "/unique_chucks/33/0x4c9b31eeca8da5a63237097176691bef68e8b8c5.sol",
        "function": "fallback",
        "lineno": 97,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 1644,
        "code": "in excess of loanAm",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/33/0x4c9b31eeca8da5a63237097176691bef68e8b8c5.sol",
        "function": "fallback",
        "lineno": 101,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 1651,
        "code": "  {\n        msg",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/33/0x4c9b31eeca8da5a63237097176691bef68e8b8c5.sol",
        "function": "fallback",
        "lineno": 102,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 1714,
        "code": "Amount); //send loan proceeds through to ",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1822\n",
        "filename": "/unique_chucks/33/0x4c9b31eeca8da5a63237097176691bef68e8b8c5.sol",
        "function": "fallback",
        "lineno": 105,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 1714,
        "code": "Amount); //send loan proceeds through to ",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function fallback. The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/33/0x4c9b31eeca8da5a63237097176691bef68e8b8c5.sol",
        "function": "fallback",
        "lineno": 105,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 1822,
        "code": "d tokens\n  function transfer_",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function fallback. The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/33/0x4c9b31eeca8da5a63237097176691bef68e8b8c5.sol",
        "function": "fallback",
        "lineno": 110,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 3157,
        "code": "unkBeforeLoan(address _to, uint256 _",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/33/0x4c9b31eeca8da5a63237097176691bef68e8b8c5.sol",
        "function": "transfer_targetToken(address,address,uint256)",
        "lineno": 117,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 3533,
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/33/0x4c9b31eeca8da5a63237097176691bef68e8b8c5.sol",
        "function": "reclaimPunkBeforeLoan(address,uint256)",
        "lineno": 122,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 3911,
        "code": "nder now gets ownership of punk\n  }\n\n  function () payable publ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/33/0x4c9b31eeca8da5a63237097176691bef68e8b8c5.sol",
        "function": "claimCollateral()",
        "lineno": 70,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 4511,
        "code": "= 1);\n    loanAmount = _loanAmount;\n    annualInterestRa",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/33/0x4c9b31eeca8da5a63237097176691bef68e8b8c5.sol",
        "function": "setTerms(uint256,uint256,uint256,uint256)",
        "lineno": 59,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 4585,
        "code": "nterestRate;\n    loanTen",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/33/0x4c9b31eeca8da5a63237097176691bef68e8b8c5.sol",
        "function": "setTerms(uint256,uint256,uint256,uint256)",
        "lineno": 61,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 4592,
        "code": "oanTenor;\n    punkIndex = _punkIndex;\n  ",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/33/0x4c9b31eeca8da5a63237097176691bef68e8b8c5.sol",
        "function": "setTerms(uint256,uint256,uint256,uint256)",
        "lineno": 62,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 4599,
        "code": "unction claimCollatera",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/33/0x4c9b31eeca8da5a63237097176691bef68e8b8c5.sol",
        "function": "setTerms(uint256,uint256,uint256,uint256)",
        "lineno": 67,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 4606,
        "code": "lic onlyLender //in ca",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/33/0x4c9b31eeca8da5a63237097176691bef68e8b8c5.sol",
        "function": "setTerms(uint256,uint256,uint256,uint256)",
        "lineno": 67,
        "title": "State change after external call",
        "type": "Warning"
      }
    ],
    "success": true
  }
}