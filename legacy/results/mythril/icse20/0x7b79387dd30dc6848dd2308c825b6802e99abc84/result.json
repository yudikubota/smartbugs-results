{
  "contract": "0x7b79387dd30dc6848dd2308c825b6802e99abc84",
  "tool": "mythril",
  "start": 1563496500.576128,
  "end": 1563496602.629449,
  "duration": 102.05332088470459,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 1472,
        "code": "------\n\tfunction E4Token() \n\t{\n\t\towner",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_38: 0x8000\ncalldata_iE4RowEscrow_0: 0x5f437e4800000000000000000000000000000000000000000000000000000000\ncalldatasize_iE4RowEscrow: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/6/0x7b79387dd30dc6848dd2308c825b6802e99abc84.sol",
        "function": "_function_0x5f437e48",
        "lineno": 116,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3264,
        "code": "------\n\t// set the e4row par",
        "debug": "storage_17: 0xb2c81e3be60b809eebca250ae5f3958de8241f3c0942692d3cecd1fd00743211\ncallvalue: 0x93931c13e507cbbcbf74d9eee4fb920eeaef84aa5110428da2eddb017d5ebcdd\nstorage_4: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_iE4RowEscrow_0: 0x33c7c02600000000000000000000000000000000000000000000000000000000\ncalldatasize_iE4RowEscrow: 0x4\n",
        "description": "A possible integer overflow exists in the function `feePayment()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/6/0x7b79387dd30dc6848dd2308c825b6802e99abc84.sol",
        "function": "feePayment()",
        "lineno": 421,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 3401,
        "code": "ked\" debug)\n\t// once its l",
        "debug": "storage_17: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncallvalue: 0x57f25cd000000000000000000000000000000000000000000000000000000000\nstorage_38: 0x400\nstorage_4: 0x0\ncaller: 0x0\ncalldata_iE4RowEscrow_0: 0x33c7c02600000000000000000000000000000000000000000000000000000000\ncalldatasize_iE4RowEscrow: 0x4\n",
        "description": "A possible integer overflow exists in the function `feePayment()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/6/0x7b79387dd30dc6848dd2308c825b6802e99abc84.sol",
        "function": "feePayment()",
        "lineno": 426,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 3417,
        "code": ". ONLY ONCE!\n\t\tif (msg.se",
        "debug": "storage_8: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncallvalue: 0x57f25cd000000000000000000000000000000000000000000000000000000000\nstorage_38: 0x400\nstorage_4: 0x0\ncaller: 0x0\ncalldata_iE4RowEscrow_0: 0x33c7c02600000000000000000000000000000000000000000000000000000000\ncalldatasize_iE4RowEscrow: 0x4\n",
        "description": "A possible integer overflow exists in the function `feePayment()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/6/0x7b79387dd30dc6848dd2308c825b6802e99abc84.sol",
        "function": "feePayment()",
        "lineno": 427,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 3616,
        "code": "nts[npurchaser].t",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_4: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldatasize_iE4RowEscrow: 0x3\nstorage_13: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/6/0x7b79387dd30dc6848dd2308c825b6802e99abc84.sol",
        "function": "fallback",
        "lineno": 375,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 4408,
        "code": "bug)\n\t\t\tthrow;\n\t\tif (msg.sender != owner)\n\t\t\t th",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_38: 0x8000\nstorage_1: 0x0\ncaller: 0x0\ncalldata_iE4RowEscrow_0: 0x2ff1fac00000000000000000000000000000000000000000000000000000000\ncalldatasize_iE4RowEscrow: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/6/0x7b79387dd30dc6848dd2308c825b6802e99abc84.sol",
        "function": "changeDevevoperAccont(address)",
        "lineno": 811,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 4771,
        "code": "msg.sender == developers) \n\t\t\t&&  (n",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_38: 0x8000\ncalldata_iE4RowEscrow_0: 0x18160ddd00000000000000000000000000000000000000000000000000000000\ncalldatasize_iE4RowEscrow: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/6/0x7b79387dd30dc6848dd2308c825b6802e99abc84.sol",
        "function": "totalSupply()",
        "lineno": 248,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 6067,
        "code": " > fundingDeadline && numP < minIcoTo",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_38: 0x8000\nstorage_4: 0x0\ncaller: 0x0\ncalldata_iE4RowEscrow_0: 0x33c7c02600000000000000000000000000000000000000000000000000000000\ncalldatasize_iE4RowEscrow: 0x4\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/6/0x7b79387dd30dc6848dd2308c825b6802e99abc84.sol",
        "function": "feePayment()",
        "lineno": 495,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 7215,
        "code": "-------------------\n\t// check rewards.  pas",
        "debug": "",
        "description": "In the function `withdrawDividends()` the following predictable state variables are used to determine Ether recipient:\n- block.timestamp\n",
        "filename": "/unique_chucks/6/0x7b79387dd30dc6848dd2308c825b6802e99abc84.sol",
        "function": "withdrawDividends()",
        "lineno": 681,
        "title": "Dependence on predictable environment variable",
        "type": "Warning"
      },
      {
        "address": 7215,
        "code": "-------------------\n\t// check rewards.  pas",
        "debug": "",
        "description": "This contract executes a message call to the address of the transaction sender. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/6/0x7b79387dd30dc6848dd2308c825b6802e99abc84.sol",
        "function": "withdrawDividends()",
        "lineno": 681,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 7988,
        "code": "rtner;\n\t\t\t_dev = develop",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/6/0x7b79387dd30dc6848dd2308c825b6802e99abc84.sol",
        "function": "fallback",
        "lineno": 468,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 12485,
        "code": "-----------------\n\t// get the ",
        "debug": "storage_38: 0x100\nstorage_16: 0x0\nstorage_30: 0x1\nstorage_4: 0x0\ncaller: 0x0\ncalldatasize_iE4RowEscrow: 0x3\n",
        "description": "A possible integer underflow exists in the function `fallback`.\nThe subtraction may result in a value < 0.",
        "filename": "/unique_chucks/6/0x7b79387dd30dc6848dd2308c825b6802e99abc84.sol",
        "function": "fallback",
        "lineno": 461,
        "title": "Integer Underflow",
        "type": "Warning"
      },
      {
        "address": 14055,
        "code": " (paids < _numPays) && (i < n",
        "debug": "storage_17: 0x2000000000000000000000000000000000000000000000000000000000000\nstorage_24: 0xee097c49b838203f082120d1399cbace4d9ffd0f89536e0e359284e707cf4c79\ncallvalue: 0x0\nstorage_28: 0x7207044ff8a8525d057dd978719e22005ddff1afed4b6fefb5d8f6f7f82c5c01\nstorage_38: 0x300\nstorage_16: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_14: 0x1ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_4: 0x0\ncaller: 0x0\ncalldatasize_iE4RowEscrow: 0x3\nstorage_18: 0x0\n",
        "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/6/0x7b79387dd30dc6848dd2308c825b6802e99abc84.sol",
        "function": "fallback",
        "lineno": 596,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 14076,
        "code": "); i++ ) {\n\t\t",
        "debug": "storage_17: 0x8000000000000000000000000000000000000000000000000000000000000000\nstorage_21: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncallvalue: 0x0\nstorage_38: 0x300\ntimestamp: 0x1\nstorage_24: 0x0\nstorage_28: 0x0\nstorage_16: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_14: 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_4: 0x0\ncaller: 0x0\ncalldatasize_iE4RowEscrow: 0x3\nstorage_18: 0x0\n",
        "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/6/0x7b79387dd30dc6848dd2308c825b6802e99abc84.sol",
        "function": "fallback",
        "lineno": 596,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 14297,
        "code": " int(nAmount);\t\t\t\t\t\n\t\t\t\t\t\tpaids++;\n\t\t\t",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_17: 0x8000000000000000000000000000000000000000000000000000000000000000\ncallvalue: 0x0\nstorage_18: 0x2000000000000000000000000000000000000000000000000000000000000000\nstorage_38: 0x300\nstorage_16: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_14: 0x8000000000000000000000000000000000000000000000000000000000000000\nstorage_4: 0x0\ncaller: 0x0\ncalldatasize_iE4RowEscrow: 0x3\nstorage_20: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/6/0x7b79387dd30dc6848dd2308c825b6802e99abc84.sol",
        "function": "fallback",
        "lineno": 607,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 15208,
        "code": "rns (uint256 supply)\n\t{",
        "debug": "storage_21: 0x5080505015552c7c2c2c0aaad3001d1000012cffe0ee30020400000000014320\ncalldata_iE4RowEscrow_32 + 36: 0x2\ntimestamp: 0x0\nstorage_1 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_iE4RowEscrow_4: 0x2\nstorage_0 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_iE4RowEscrow_32_+_4: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x2\nstorage_29: 0x0\nstorage_0: 0x0\ncalldata_iE4RowEscrow_4: 0x0\ncalldata_iE4RowEscrow_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_iE4RowEscrow: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `transferFrom(address,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/6/0x7b79387dd30dc6848dd2308c825b6802e99abc84.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 237,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 15296,
        "code": "IcoStatusValu",
        "debug": "storage_7: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_iE4RowEscrow_32 + 36: 0x2\ntimestamp: 0x0\nstorage_1 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_iE4RowEscrow_4: 0x2\nstorage_0 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_iE4RowEscrow_32_+_4: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x2\nstorage_29: 0x0\nstorage_0: 0x0\ncalldata_iE4RowEscrow_4: 0x0\ncalldata_iE4RowEscrow_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_iE4RowEscrow: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `transferFrom(address,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/6/0x7b79387dd30dc6848dd2308c825b6802e99abc84.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 239,
        "title": "Integer Overflow ",
        "type": "Warning"
      }
    ],
    "success": true
  }
}