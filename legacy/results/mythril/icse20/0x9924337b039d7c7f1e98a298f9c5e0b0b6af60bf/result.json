{
  "contract": "0x9924337b039d7c7f1e98a298f9c5e0b0b6af60bf",
  "tool": "mythril",
  "start": 1563645658.55209,
  "end": 1563646125.8085124,
  "duration": 467.25642251968384,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 271,
        "code": "e * 10 ** uint256(decimals) / exchangeWeight;\n\t\tassert(balanceOf[th",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_BitGame_0: 0x6fdde0100000000000000000000000000000000000000000000000000000000\ncalldatasize_BitGame: 0x4\nstorage_4: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/27/0x9924337b039d7c7f1e98a298f9c5e0b0b6af60bf.sol",
        "function": "fallback",
        "lineno": 24,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 497,
        "code": "alue;\n\t\tFundTransfer(this, msg",
        "debug": "storage_4: 0x1000000000000000000000000000000000000000000000000000000000000001\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\nstorage_8980041631919178290161226234105977776452779202751091583642356499240698725347: 0x8\nstorage_8: 0x1\ncallvalue: 0x1\n10_EXP_Concat(0, Extract(15, 8, storage_7)): 0x8010000400e0008000057fffff0600650000000000000410700d000000000008\ncalldata_BitGame_0: 0x700000000000000000000000000000000000000000000000000000000\ncalldatasize_BitGame: 0x4\n",
        "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/27/0x9924337b039d7c7f1e98a298f9c5e0b0b6af60bf.sol",
        "function": "fallback",
        "lineno": 27,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2104,
        "code": "ck.timestamp - creationTime",
        "debug": "The exception is triggered under the following conditions:\n\ncaller: 0x0\nstorage_3: 0xffffffffffffffffffffffffffffffffffffffff00\ncalldata_BitGame_0: 0x3b30414700000000000000000000000000000000000000000000000000000000\ncalldatasize_BitGame: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/27/0x9924337b039d7c7f1e98a298f9c5e0b0b6af60bf.sol",
        "function": "draw(uint256)",
        "lineno": 89,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2139,
        "code": "int256 maxdrawETH = timeOffset",
        "debug": "The exception is triggered under the following conditions:\n\nbalance_at_1461501637330902918203684832716283019655932542975 & 0: 0x0\ncalldata_BitGame_4: 0x1\ncaller: 0x0\nstorage_3: 0x0\ncalldata_BitGame_0: 0x3b30414700000000000000000000000000000000000000000000000000000000\ncalldatasize_BitGame: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/27/0x9924337b039d7c7f1e98a298f9c5e0b0b6af60bf.sol",
        "function": "draw(uint256)",
        "lineno": 90,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2558,
        "code": "value;\n        totalSupply -= _value;\n\t",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncalldata_BitGame_4: 0x1\ncalldata_BitGame_0: 0x42966c6800000000000000000000000000000000000000000000000000000000\ncalldatasize_BitGame: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/27/0x9924337b039d7c7f1e98a298f9c5e0b0b6af60bf.sol",
        "function": "burn(uint256)",
        "lineno": 78,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2645,
        "code": "msg.sender, _value);\n",
        "debug": "calldata_BitGame_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_2: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_BitGame_0: 0x42966c6800000000000000000000000000000000000000000000000000000000\ncalldatasize_BitGame: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer underflow exists in the function `burn(uint256)`.\nThe subtraction may result in a value < 0.",
        "filename": "/unique_chucks/27/0x9924337b039d7c7f1e98a298f9c5e0b0b6af60bf.sol",
        "function": "burn(uint256)",
        "lineno": 82,
        "title": "Integer Underflow",
        "type": "Warning"
      },
      {
        "address": 2661,
        "code": "   return true;\n   ",
        "debug": "calldata_BitGame_4: 0xc290137095b13347e55005a6dc184559e0489f1233480050d0fb4bba17d34179\nstorage_5: 0x9c9efb7ae5acd378025256a3945f5859076e809243093d9ecae2636c9fd28979\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xc290137095b13347e55005a6dc184559e0489f1233480050d0fb4bba17d34179\ncalldata_BitGame_0: 0x42966c6800000000000000000000000000000000000000000000000000000000\ncalldatasize_BitGame: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `burn(uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/27/0x9924337b039d7c7f1e98a298f9c5e0b0b6af60bf.sol",
        "function": "burn(uint256)",
        "lineno": 83,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2925,
        "code": "r = _new;\n    }\n}",
        "debug": "The exception is triggered under the following conditions:\n\ncaller: 0xd1a748abc386154ff8e7623b99509e9610f74fc\nstorage_3: 0xf2e58b7543c79eab007189dc466af6169ef08b0300\ncalldata_BitGame_0: 0x592bd70500000000000000000000000000000000000000000000000000000000\ncalldatasize_BitGame: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/27/0x9924337b039d7c7f1e98a298f9c5e0b0b6af60bf.sol",
        "function": "setowner(address)",
        "lineno": 103,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3336,
        "code": "56 _value) public returns (bool succes",
        "debug": "calldata_BitGame_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_8980041631919178290161226234105977776452779202751091583642356499240698725347: 0x1\nstorage_2: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_BitGame_0: 0x42966c6800000000000000000000000000000000000000000000000000000000\ncalldatasize_BitGame: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer underflow exists in the function `burn(uint256)`.\nThe subtraction may result in a value < 0.",
        "filename": "/unique_chucks/27/0x9924337b039d7c7f1e98a298f9c5e0b0b6af60bf.sol",
        "function": "burn(uint256)",
        "lineno": 76,
        "title": "Integer Underflow",
        "type": "Warning"
      },
      {
        "address": 3337,
        "code": "56 _value) public returns (bool success) {",
        "debug": "storage_2: 0x3448840fe73c0000000000000000000000000000000000000000000007ffffff\nstorage_8980041631919178290161226234105977776452779202751091583642356499240698725347: 0x32eca18bfff80000000000000000000000000000000000000000000008000000\ncalldata_BitGame_4: 0x15be283e7440000000000000000000000000000000000000000000000000000\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x15be283e7440000000000000000000000000000000000000000000000000000\ncalldata_BitGame_0: 0x42966c6800000000000000000000000000000000000000000000000000000000\ncalldatasize_BitGame: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `burn(uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/27/0x9924337b039d7c7f1e98a298f9c5e0b0b6af60bf.sol",
        "function": "burn(uint256)",
        "lineno": 76,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 3391,
        "code": "y - balanceOf[address(this)] + 1);\n\t}\n\n    function burn(",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\nstorage_8: 0x1\nbalance_at_1461501637330902918203684832716283019655932542975 & 0: 0x1\n10_EXP_Concat(0, Extract(15, 8, storage_7)): 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_BitGame_4: 0x0\ncalldata_BitGame_0: 0x42966c6800000000000000000000000000000000000000000000000000000000\ncalldatasize_BitGame: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `burn(uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/27/0x9924337b039d7c7f1e98a298f9c5e0b0b6af60bf.sol",
        "function": "burn(uint256)",
        "lineno": 73,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 3399,
        "code": "ly - balanceOf[address(this)] + 1);\n\t}\n\n    function burn(uint256 _value) public returns (bool success) {\n",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncalldata_BitGame_4: 0x0\ncalldata_BitGame_0: 0x42966c6800000000000000000000000000000000000000000000000000000000\ncalldatasize_BitGame: 0x4\nstorage_8980041631919178290161226234105977776452779202751091583642356499240698725347: 0x0\nstorage_2: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/27/0x9924337b039d7c7f1e98a298f9c5e0b0b6af60bf.sol",
        "function": "burn(uint256)",
        "lineno": 73,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3446,
        "code": "value);\n\t\tassert(b",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_BitGame_4: 0x0\ncalldata_BitGame_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncalldatasize_BitGame: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/27/0x9924337b039d7c7f1e98a298f9c5e0b0b6af60bf.sol",
        "function": "transfer(address,uint256)",
        "lineno": 52,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3521,
        "code": "eOf[_to] + _value > balanceOf[_to]",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncalldata_BitGame_32 + 4: 0x1\ncalldata_BitGame_4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_BitGame_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncalldatasize_BitGame: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/27/0x9924337b039d7c7f1e98a298f9c5e0b0b6af60bf.sol",
        "function": "transfer(address,uint256)",
        "lineno": 53,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3660,
        "code": "uint256 previousBalances = balanceOf[_from] + ba",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_BitGame_32 + 4: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_BitGame_4: 0xfc05cf9c084fffffffffffffffffffffffe4f7db7fffca2d0080d8000000005b\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncalldata_BitGame_4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_BitGame_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncalldatasize_BitGame: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/27/0x9924337b039d7c7f1e98a298f9c5e0b0b6af60bf.sol",
        "function": "transfer(address,uint256)",
        "lineno": 54,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3790,
        "code": " -= _value;\n\t\tbalanceOf[_to] += _",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffff7ffffffff\ncalldata_BitGame_32 + 4: 0x1\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_BitGame_4: 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_BitGame_4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_BitGame_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncalldatasize_BitGame: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `transfer(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/27/0x9924337b039d7c7f1e98a298f9c5e0b0b6af60bf.sol",
        "function": "transfer(address,uint256)",
        "lineno": 55,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 4177,
        "code": "\t\n\t\tif (_to == address(this)) {\n\t",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xaa5ffb3ef59ca27c51ea5386f666ff066cc1b33a91510730105067f1cf5673d1\ncalldata_BitGame_32 + 4: 0x1000000014ef5df8a491084c0158f42fedfff8000588c8000088008000000000\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_BitGame_4: 0x95fffffff804b9a85807bbdd0551e42c11afc4b343b1b8076152761045274227\ncalldata_BitGame_4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_BitGame_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncalldatasize_BitGame: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `transfer(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/27/0x9924337b039d7c7f1e98a298f9c5e0b0b6af60bf.sol",
        "function": "transfer(address,uint256)",
        "lineno": 59,
        "title": "Integer Overflow ",
        "type": "Warning"
      }
    ],
    "success": true
  }
}