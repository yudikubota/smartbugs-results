{"error": null, "issues": [{"address": 4054, "code": "ancelled on off-chain server\n    ///       and unused items will be transfered back to owner.\n    function setMinSign(uint40 _ne", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/22/0xa8e176c4e1d564afadb5628c4e885f6359d46d4d.sol", "function": "runPluginOperator(address,uint40,uint40,uint128,uint256,address)", "lineno": 437, "title": "Message call to external contract", "type": "Warning"}, {"address": 4368, "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/22/0xa8e176c4e1d564afadb5628c4e885f6359d46d4d.sol", "function": "withdraw()", "lineno": 489, "title": "Message call to external contract", "type": "Informational"}, {"address": 4368, "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 4368\nCall at address: 4368\n", "filename": "/unique_chucks/22/0xa8e176c4e1d564afadb5628c4e885f6359d46d4d.sol", "function": "withdraw()", "lineno": 489, "title": "Multiple Calls", "type": "Information"}, {"address": 6102, "code": "tAddress]) != address(0);\n    }\n\n    function setup(address _address) e", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/22/0xa8e176c4e1d564afadb5628c4e885f6359d46d4d.sol", "function": "runPlugin(address,uint40,uint256)", "lineno": 473, "title": "Message call to external contract", "type": "Informational"}, {"address": 6102, "code": "tAddress]) != address(0);\n    }\n\n    function setup(address _address) e", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 6407\n", "filename": "/unique_chucks/22/0xa8e176c4e1d564afadb5628c4e885f6359d46d4d.sol", "function": "runPlugin(address,uint40,uint256)", "lineno": 473, "title": "Multiple Calls", "type": "Information"}, {"address": 6102, "code": "tAddress]) != address(0);\n    }\n\n    function setup(address _address) e", "debug": "", "description": "A possible transaction order independence vulnerability exists in function runPlugin(address,uint40,uint256). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/22/0xa8e176c4e1d564afadb5628c4e885f6359d46d4d.sol", "function": "runPlugin(address,uint40,uint256)", "lineno": 473, "title": "Transaction order dependence", "type": "Warning"}, {"address": 6407, "code": "sg.sender == address(coreContract));\n        for (uint32 i = 0; i < pluginsArray.length; ++i)\n        {\n            pluginsArray", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/22/0xa8e176c4e1d564afadb5628c4e885f6359d46d4d.sol", "function": "runPlugin(address,uint40,uint256)", "lineno": 483, "title": "Message call to external contract", "type": "Warning"}], "success": true}