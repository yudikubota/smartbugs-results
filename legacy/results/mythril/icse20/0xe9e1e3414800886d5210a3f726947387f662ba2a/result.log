{"error": null, "issues": [{"address": 254, "code": "       amountRaised += amount;\n", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xf287c016c1fbcd873dbef7be1bc26e23a0cd168189d5539e03da0def7f7fadd9\ncallvalue: 0xfcb8184cfd4208003da806295fc131014b080cec1bda513f3b64a90e407fad93\nstorage_7: 0x0\ncalldata_token_0: 0x100000000000000000000000000000000000000000000000000000000\ncalldatasize_token: 0x4\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/8/0xe9e1e3414800886d5210a3f726947387f662ba2a.sol", "function": "fallback", "lineno": 36, "title": "Integer Overflow ", "type": "Warning"}, {"address": 270, "code": "enReward.transfer(msg.", "debug": "storage_2: 0xf287c016c1fbcd873dbef7be1bc26e23a0cd168189d5539e03da0def7f7fadd9\ncallvalue: 0xfcb8184cfd4208003da806295fc131014b080cec1bda513f3b64a90e407fad93\nstorage_7: 0x0\ncalldata_token_0: 0x100000000000000000000000000000000000000000000000000000000\ncalldatasize_token: 0x4\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/8/0xe9e1e3414800886d5210a3f726947387f662ba2a.sol", "function": "fallback", "lineno": 37, "title": "Integer Overflow ", "type": "Warning"}, {"address": 352, "code": "r(msg.sender, ", "debug": "The exception is triggered under the following conditions:\n\nstorage_7: 0x0\ncalldata_token_0: 0x1cb3b2100000000000000000000000000000000000000000000000000000000\ncalldatasize_token: 0x4\nstorage_4: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/8/0xe9e1e3414800886d5210a3f726947387f662ba2a.sol", "function": "fallback", "lineno": 38, "title": "Exception state", "type": "Informational"}, {"address": 490, "code": "unt / price);\n        FundTransfer(msg.sender, a", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/8/0xe9e1e3414800886d5210a3f726947387f662ba2a.sol", "function": "fallback", "lineno": 37, "title": "Message call to external contract", "type": "Informational"}, {"address": 490, "code": "unt / price);\n        FundTransfer(msg.sender, a", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1202\n", "filename": "/unique_chucks/8/0xe9e1e3414800886d5210a3f726947387f662ba2a.sol", "function": "fallback", "lineno": 37, "title": "Multiple Calls", "type": "Information"}], "success": true}