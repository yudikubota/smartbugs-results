{"error": null, "issues": [{"address": 1965, "code": "    function getRea", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/33/0x57ae3a491f4555e1eed37338d1b8b5222935f28a.sol", "function": "fallback", "lineno": 710, "title": "Message call to external contract", "type": "Informational"}, {"address": 1965, "code": "    function getRea", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 7438\n", "filename": "/unique_chucks/33/0x57ae3a491f4555e1eed37338d1b8b5222935f28a.sol", "function": "fallback", "lineno": 710, "title": "Multiple Calls", "type": "Information"}, {"address": 2104, "code": "ed after success end o", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/33/0x57ae3a491f4555e1eed37338d1b8b5222935f28a.sol", "function": "fallback", "lineno": 448, "title": "State change after external call", "type": "Warning"}, {"address": 3167, "code": "i = 0;\n\n           ", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/33/0x57ae3a491f4555e1eed37338d1b8b5222935f28a.sol", "function": "updateReservedWei()", "lineno": 741, "title": "Message call to external contract", "type": "Informational"}, {"address": 3892, "code": "Refundable stage\n  ", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/33/0x57ae3a491f4555e1eed37338d1b8b5222935f28a.sol", "function": "changeTokenOwner()", "lineno": 858, "title": "Message call to external contract", "type": "Informational"}, {"address": 3892, "code": "Refundable stage\n  ", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 4203\n", "filename": "/unique_chucks/33/0x57ae3a491f4555e1eed37338d1b8b5222935f28a.sol", "function": "changeTokenOwner()", "lineno": 858, "title": "Multiple Calls", "type": "Information"}, {"address": 4203, "code": "hardCap) {\n            endCrow", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/33/0x57ae3a491f4555e1eed37338d1b8b5222935f28a.sol", "function": "changeTokenOwner()", "lineno": 859, "title": "Message call to external contract", "type": "Informational"}, {"address": 7241, "code": "sic t", "debug": "retval_3167: 0x93931c13e507cbbcbf74d9eee4fb920eeaef84aa5110428da2eddb017d5ebcdd\nstorage_14: 0xb2c81e3be60b809eebca250ae5f3958de8241f3c0942692d3cecd1fd00743211\nreturndatasize: 0x20\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_rICO_0: 0x12f2b83800000000000000000000000000000000000000000000000000000000\ncalldatasize_rICO: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `updateReservedWei()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/33/0x57ae3a491f4555e1eed37338d1b8b5222935f28a.sol", "function": "updateReservedWei()", "lineno": 84, "title": "Integer Overflow ", "type": "Warning"}, {"address": 7254, "code": "v Basic versio", "debug": "The exception is triggered under the following conditions:\n\nstorage_14: 0xc63a21246c99b000ea0030728005ea6909080a424a47ca48059be3c0ff803205\nretval_3892: 0xd2bd697b67b8b7eebcef8ebaf405ca6a0b728a06c347eda3d5dbebfeffbdb977\nstorage_6: 0x0\nreturndatasize: 0x20\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ntimestamp: 0x1\nstorage_0: 0x0\ncaller: 0x0\ncalldata_rICO_0: 0x262199c300000000000000000000000000000000000000000000000000000000\ncalldatasize_rICO: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/33/0x57ae3a491f4555e1eed37338d1b8b5222935f28a.sol", "function": "changeTokenOwner()", "lineno": 85, "title": "Exception state", "type": "Informational"}, {"address": 7438, "code": "ei;\n\n        if (!f", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/33/0x57ae3a491f4555e1eed37338d1b8b5222935f28a.sol", "function": "fallback", "lineno": 719, "title": "Message call to external contract", "type": "Informational"}, {"address": 7688, "code": "s two numbers,", "debug": "The exception is triggered under the following conditions:\n\nretval_3167: 0x5fffffffffffffffffffffffffffffffffffffffffffffffffff800000000000\nstorage_14: 0x10028202a0003\nstorage_5: 0x0\nstorage_17: 0x0\ntimestamp: 0x1\nstorage_10: 0x60000000000000000000000000000000000000000000000000008028202a0003\nreturndatasize: 0x20\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_rICO_0: 0x12f2b83800000000000000000000000000000000000000000000000000000000\ncalldatasize_rICO: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/33/0x57ae3a491f4555e1eed37338d1b8b5222935f28a.sol", "function": "updateReservedWei()", "lineno": 73, "title": "Exception state", "type": "Informational"}], "success": true}