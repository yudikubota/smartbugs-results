{"error": null, "issues": [{"address": 574, "code": "ring the contract ownership", "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_TokenHolder_0: 0x5e35359e00000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenHolder: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/2/0xbbc79794599b19274850492394004087cbf89710.sol", "function": "_function_0x5e35359e", "lineno": 89, "title": "Exception state", "type": "Informational"}, {"address": 879, "code": "c;\n    function issue(address", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/2/0xbbc79794599b19274850492394004087cbf89710.sol", "function": "_function_0x5e35359e", "lineno": 184, "title": "Message call to external contract", "type": "Warning"}, {"address": 1589, "code": "ring the contract ownership", "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_TokenHolder_0: 0xf2fde38b00000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenHolder: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/2/0xbbc79794599b19274850492394004087cbf89710.sol", "function": "transferOwnership(address)", "lineno": 89, "title": "Exception state", "type": "Informational"}], "success": true}