{
  "contract": "0xe4b70dbef92648fa99f79b443fe207845645f54b",
  "tool": "mythril",
  "start": 1563628511.9487848,
  "end": 1563628876.921041,
  "duration": 364.97225618362427,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 2395,
        "code": "ETH\n    require((msg.value > 1000000000",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/24/0xe4b70dbef92648fa99f79b443fe207845645f54b.sol",
        "function": "buyToken(uint256,uint256)",
        "lineno": 164,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 2395,
        "code": "ETH\n    require((msg.value > 1000000000",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2884\nCall at address: 2884\n",
        "filename": "/unique_chucks/24/0xe4b70dbef92648fa99f79b443fe207845645f54b.sol",
        "function": "buyToken(uint256,uint256)",
        "lineno": 164,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 2884,
        "code": ");\n\n    uint256 buyAmount = (msg.va",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/24/0xe4b70dbef92648fa99f79b443fe207845645f54b.sol",
        "function": "buyToken(uint256,uint256)",
        "lineno": 210,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 5538,
        "code": ");\n    _;\n  }\n\n  modifier is",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/24/0xe4b70dbef92648fa99f79b443fe207845645f54b.sol",
        "function": "emptyInactiveToken(uint256)",
        "lineno": 159,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 5538,
        "code": ");\n    _;\n  }\n\n  modifier is",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 6624\nCall at address: 6304\n",
        "filename": "/unique_chucks/24/0xe4b70dbef92648fa99f79b443fe207845645f54b.sol",
        "function": "emptyInactiveToken(uint256)",
        "lineno": 159,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 6304,
        "code": "equire(tokenInPool[_addr] == false, \"emptyWron",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/24/0xe4b70dbef92648fa99f79b443fe207845645f54b.sol",
        "function": "emptyInactiveToken(uint256)",
        "lineno": 345,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 6304,
        "code": "equire(tokenInPool[_addr] == false, \"emptyWron",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 6624\n",
        "filename": "/unique_chucks/24/0xe4b70dbef92648fa99f79b443fe207845645f54b.sol",
        "function": "emptyInactiveToken(uint256)",
        "lineno": 345,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 6304,
        "code": "equire(tokenInPool[_addr] == false, \"emptyWron",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function emptyInactiveToken(uint256). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/24/0xe4b70dbef92648fa99f79b443fe207845645f54b.sol",
        "function": "emptyInactiveToken(uint256)",
        "lineno": 345,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 6403,
        "code": "20Token wrongToken = ERC20",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/24/0xe4b70dbef92648fa99f79b443fe207845645f54b.sol",
        "function": "emptyInactiveToken(uint256)",
        "lineno": 346,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 6624,
        "code": "   uint256 amount = wrongToken.balanceOf(address(t",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/24/0xe4b70dbef92648fa99f79b443fe207845645f54b.sol",
        "function": "emptyInactiveToken(uint256)",
        "lineno": 347,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 6624,
        "code": "   uint256 amount = wrongToken.balanceOf(address(t",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function emptyInactiveToken(uint256). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/24/0xe4b70dbef92648fa99f79b443fe207845645f54b.sol",
        "function": "emptyInactiveToken(uint256)",
        "lineno": 347,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 7116,
        "code": ");\n    _;\n  }\n\n  modifier is",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/24/0xe4b70dbef92648fa99f79b443fe207845645f54b.sol",
        "function": "addToken(address,address,uint256,uint256,uint256,uint256)",
        "lineno": 159,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 7116,
        "code": ");\n    _;\n  }\n\n  modifier is",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 7621\n",
        "filename": "/unique_chucks/24/0xe4b70dbef92648fa99f79b443fe207845645f54b.sol",
        "function": "addToken(address,address,uint256,uint256,uint256,uint256)",
        "lineno": 159,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 7374,
        "code": " tokenPool[tokenNum].payaddr = _payAddress;\n    token",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/24/0xe4b70dbef92648fa99f79b443fe207845645f54b.sol",
        "function": "addToken(address,address,uint256,uint256,uint256,uint256)",
        "lineno": 181,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 7461,
        "code": "kenNum].bought = 0;\n    tokenPool[tokenN",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/24/0xe4b70dbef92648fa99f79b443fe207845645f54b.sol",
        "function": "addToken(address,address,uint256,uint256,uint256,uint256)",
        "lineno": 182,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 7621,
        "code": ".potted = 0;\n    tokenPool[tokenNum]",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/24/0xe4b70dbef92648fa99f79b443fe207845645f54b.sol",
        "function": "addToken(address,address,uint256,uint256,uint256,uint256)",
        "lineno": 184,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 7724,
        "code": "ed = 0;\n    tokenPool[tokenNum].potted = 0;\n    tokenPool[tokenNum]",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/24/0xe4b70dbef92648fa99f79b443fe207845645f54b.sol",
        "function": "addToken(address,address,uint256,uint256,uint256,uint256)",
        "lineno": 183,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 7811,
        "code": "= _price;\n    tokenPool[tokenNum].buyperc",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/24/0xe4b70dbef92648fa99f79b443fe207845645f54b.sol",
        "function": "addToken(address,address,uint256,uint256,uint256,uint256)",
        "lineno": 185,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 7841,
        "code": "buypercent;\n    tokenPool[toke",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/24/0xe4b70dbef92648fa99f79b443fe207845645f54b.sol",
        "function": "addToken(address,address,uint256,uint256,uint256,uint256)",
        "lineno": 186,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 7871,
        "code": "otpercent = _potpercent;\n    ",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/24/0xe4b70dbef92648fa99f79b443fe207845645f54b.sol",
        "function": "addToken(address,address,uint256,uint256,uint256,uint256)",
        "lineno": 187,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 7901,
        "code": "ol[tokenNum].lockperiod = _loc",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/24/0xe4b70dbef92648fa99f79b443fe207845645f54b.sol",
        "function": "addToken(address,address,uint256,uint256,uint256,uint256)",
        "lineno": 188,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 7930,
        "code": ";\n    tokenPool[tokenNum].tid = to",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/24/0xe4b70dbef92648fa99f79b443fe207845645f54b.sol",
        "function": "addToken(address,address,uint256,uint256,uint256,uint256)",
        "lineno": 188,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 7959,
        "code": "\n    tokenPool[tokenNum].active = true;\n    ",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/24/0xe4b70dbef92648fa99f79b443fe207845645f54b.sol",
        "function": "addToken(address,address,uint256,uint256,uint256,uint256)",
        "lineno": 189,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 7988,
        "code": "Pool[_tokenAddress] = true;\n    tokenNum++;\n",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/24/0xe4b70dbef92648fa99f79b443fe207845645f54b.sol",
        "function": "addToken(address,address,uint256,uint256,uint256,uint256)",
        "lineno": 191,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 8017,
        "code": "function tokenBalance(uint256 _tid) public v",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/24/0xe4b70dbef92648fa99f79b443fe207845645f54b.sol",
        "function": "addToken(address,address,uint256,uint256,uint256,uint256)",
        "lineno": 195,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 8048,
        "code": "urns (uint256 _balance) {\n    retu",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/24/0xe4b70dbef92648fa99f79b443fe207845645f54b.sol",
        "function": "addToken(address,address,uint256,uint256,uint256,uint256)",
        "lineno": 195,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 8097,
        "code": "nPool[_tid].token.balanceOf(addre",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/24/0xe4b70dbef92648fa99f79b443fe207845645f54b.sol",
        "function": "addToken(address,address,uint256,uint256,uint256,uint256)",
        "lineno": 196,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 8185,
        "code": ")).sub(tokenPool[_tid].safed).sub",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/24/0xe4b70dbef92648fa99f79b443fe207845645f54b.sol",
        "function": "addToken(address,address,uint256,uint256,uint256,uint256)",
        "lineno": 196,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 8199,
        "code": "ool[_tid].",
        "debug": "storage_3: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nretval_7621: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nreturndatasize: 0x20\nretval_7116: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_WTATokenPool_0: 0x2bcf576000000000000000000000000000000000000000000000000000000000\ncalldatasize_WTATokenPool: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `addToken(address,address,uint256,uint256,uint256,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/24/0xe4b70dbef92648fa99f79b443fe207845645f54b.sol",
        "function": "addToken(address,address,uint256,uint256,uint256,uint256)",
        "lineno": 196,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 8203,
        "code": "ool[_tid].",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/24/0xe4b70dbef92648fa99f79b443fe207845645f54b.sol",
        "function": "addToken(address,address,uint256,uint256,uint256,uint256)",
        "lineno": 196,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 8533,
        "code": "(playerSafes[pid][_tid].lockTime[i] < now",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/24/0xe4b70dbef92648fa99f79b443fe207845645f54b.sol",
        "function": "withdraw(uint256)",
        "lineno": 312,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 8533,
        "code": "(playerSafes[pid][_tid].lockTime[i] < now",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 9256\nCall at address: 9256\nCall at address: 9256\n",
        "filename": "/unique_chucks/24/0xe4b70dbef92648fa99f79b443fe207845645f54b.sol",
        "function": "withdraw(uint256)",
        "lineno": 312,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 9256,
        "code": "er, withdrawable), \"withdraw transfer wrong\");",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/24/0xe4b70dbef92648fa99f79b443fe207845645f54b.sol",
        "function": "withdraw(uint256)",
        "lineno": 324,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 9256,
        "code": "er, withdrawable), \"withdraw transfer wrong\");",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function withdraw(uint256). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/24/0xe4b70dbef92648fa99f79b443fe207845645f54b.sol",
        "function": "withdraw(uint256)",
        "lineno": 324,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 10261,
        "code": " {\n    if (!tokenPool[_tid].active) return fal",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/24/0xe4b70dbef92648fa99f79b443fe207845645f54b.sol",
        "function": "tokenBalance(uint256)",
        "lineno": 199,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 10261,
        "code": " {\n    if (!tokenPool[_tid].active) return fal",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function tokenBalance(uint256). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/24/0xe4b70dbef92648fa99f79b443fe207845645f54b.sol",
        "function": "tokenBalance(uint256)",
        "lineno": 199,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 11449,
        "code": "e) {\n    require(gamebook.getPlayerA",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/24/0xe4b70dbef92648fa99f79b443fe207845645f54b.sol",
        "function": "showPlayerSafeByAddress(address,uint256)",
        "lineno": 281,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 11449,
        "code": "e) {\n    require(gamebook.getPlayerA",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 14547\n",
        "filename": "/unique_chucks/24/0xe4b70dbef92648fa99f79b443fe207845645f54b.sol",
        "function": "showPlayerSafeByAddress(address,uint256)",
        "lineno": 281,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 12206,
        "code": ");\n    _;\n  }\n\n  modifier is",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/24/0xe4b70dbef92648fa99f79b443fe207845645f54b.sol",
        "function": "emptyWrongToken(address)",
        "lineno": 159,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 13594,
        "code": ");\n    _;\n  }\n\n  modifier is",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/24/0xe4b70dbef92648fa99f79b443fe207845645f54b.sol",
        "function": "emptyWrongEther()",
        "lineno": 159,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 14547,
        "code": "id][_tid].withdraws;\n    uint256 lo",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/24/0xe4b70dbef92648fa99f79b443fe207845645f54b.sol",
        "function": "showPlayerSafeByAddress(address,uint256)",
        "lineno": 287,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 17683,
        "code": "= _b);\n\t\treturn ",
        "debug": "The exception is triggered under the following conditions:\n\nretval_10261: 0x200000000000\nstorage_4 + keccac_calldata_WTATokenPool_4: 0x200000000001\nreturndatasize: 0x20\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_WTATokenPool_0: 0x49afc6e500000000000000000000000000000000000000000000000000000000\ncalldatasize_WTATokenPool: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/24/0xe4b70dbef92648fa99f79b443fe207845645f54b.sol",
        "function": "tokenBalance(uint256)",
        "lineno": 12,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}