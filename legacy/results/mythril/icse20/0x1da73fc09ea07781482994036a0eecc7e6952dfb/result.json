{
  "contract": "0x1da73fc09ea07781482994036a0eecc7e6952dfb",
  "tool": "mythril",
  "start": 1563638662.4481895,
  "end": 1563638750.5168612,
  "duration": 88.06867170333862,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 1870,
        "code": "quire(state == 1);\n    state = 3;\n    emit SaleC",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/27/0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol",
        "function": "withdrawTokens()",
        "lineno": 223,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 2160,
        "code": " }\n \n  function withdraw() own",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2479\n",
        "filename": "/unique_chucks/27/0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol",
        "function": "refund()",
        "lineno": 199,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 2479,
        "code": "public {\n    \n    require(state == 3);\n    ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/27/0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol",
        "function": "refund()",
        "lineno": 201,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 2604,
        "code": "ransfer(ethCollected);\n    ",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/27/0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol",
        "function": "fallback",
        "lineno": 204,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 2673,
        "code": "ected = 0;\n    state = 4",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/27/0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol",
        "function": "fallback",
        "lineno": 205,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 2700,
        "code": "  function withdrawTokens() public {\n    r",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/27/0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol",
        "function": "fallback",
        "lineno": 209,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 3788,
        "code": "r(msg.sender, balances[msg.s",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function withdraw(). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/27/0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol",
        "function": "withdraw()",
        "lineno": 212,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 4086,
        "code": " //event Debug(string _msg",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_TydoIco_4: 0x0\nstorage_8: 0x0\ncalldata_TydoIco_0: 0x786c20d400000000000000000000000000000000000000000000000000000000\ncalldatasize_TydoIco: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/27/0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol",
        "function": "_function_0x786c20d4",
        "lineno": 112,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 4780,
        "code": "\n   \n    uin",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_7: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_TydoIco_0: 0x8bdff16100000000000000000000000000000000000000000000000000000000\ncalldatasize_TydoIco: 0x4\nstorage_8: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/27/0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol",
        "function": "getBonus()",
        "lineno": 173,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 4908,
        "code": "tring _msg, address _add",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_TydoIco_4: 0x0\nstorage_7: 0x0\ncalldata_TydoIco_0: 0xab37564100000000000000000000000000000000000000000000000000000000\ncalldatasize_TydoIco: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/27/0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol",
        "function": "_function_0xab375641",
        "lineno": 111,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 5208,
        "code": " == 0) {\n      return withdrawTokens();\n    } ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/27/0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol",
        "function": "tokensLeft()",
        "lineno": 138,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 5861,
        "code": " b;\n  }\n  \n  /",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nreturndatasize: 0x20\nretval_2479: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nretval_2160: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_6: 0x200\ncalldata_TydoIco_0: 0x590e1ae300000000000000000000000000000000000000000000000000000000\ncalldatasize_TydoIco: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/27/0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol",
        "function": "refund()",
        "lineno": 32,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 5897,
        "code": "asser",
        "debug": "callvalue: 0x57619f0fb38a94d242e6bdc8057619f0fb38a94d242e6bdc8057619f0fb39\nstorage_6: 0x100\ncalldatasize_TydoIco: 0x3\n",
        "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/27/0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol",
        "function": "fallback",
        "lineno": 13,
        "title": "Integer Overflow ",
        "type": "Warning"
      }
    ],
    "success": true
  }
}