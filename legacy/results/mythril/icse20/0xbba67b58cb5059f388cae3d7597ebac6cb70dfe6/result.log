{"error": null, "issues": [{"address": 3771, "code": "datePurchase(address ", "debug": "calldata_TrypCrowdsale_4: 0xb2ca30ad957af0006ba4e7c6e4a78ea2c02504a9cf8823ed01162c7304015831\nstorage_3: 0x0\ncaller: 0x0\ncalldata_TrypCrowdsale_0: 0x34fcf43700000000000000000000000000000000000000000000000000000000\ncalldatasize_TrypCrowdsale: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `_function_0x34fcf437`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/42/0xbba67b58cb5059f388cae3d7597ebac6cb70dfe6.sol", "function": "_function_0x34fcf437", "lineno": 361, "title": "Integer Overflow ", "type": "Warning"}, {"address": 5562, "code": "rnal view returns (uint256) {\n\t\tuint256 _t", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/42/0xbba67b58cb5059f388cae3d7597ebac6cb70dfe6.sol", "function": "deliverTokensAdmin(address,uint256)", "lineno": 394, "title": "Message call to external contract", "type": "Informational"}, {"address": 6774, "code": "tal_eth-prize_pool-pri", "debug": "The exception is triggered under the following conditions:\n\ncallvalue: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldatasize_TrypCrowdsale: 0x3\nstorage_8: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/42/0xbba67b58cb5059f388cae3d7597ebac6cb70dfe6.sol", "function": "fallback", "lineno": 407, "title": "Exception state", "type": "Informational"}, {"address": 6794, "code": "/////", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TrypCrowdsale_32_+_4: 0xc050fffff320c00020003d81af848540000000000000040000110001bd062022\ncalldata_TrypCrowdsale_32 + 36: 0xfe51000008ce80008001c1d33616877ffffffffffffff7ffffe10000398d50ac\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xfe51000008ce80008001c1d33616877ffffffffffffff7ffffe10000398d50ac\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TrypCrowdsale_4: 0xfe51000008ce80008001c1d33616877ffffffffffffff7ffffe10000398d50ac\ncalldata_TrypCrowdsale_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_TrypCrowdsale_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_TrypCrowdsale: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `transferFrom(address,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/42/0xbba67b58cb5059f388cae3d7597ebac6cb70dfe6.sol", "function": "transferFrom(address,address,uint256)", "lineno": 101, "title": "Integer Overflow ", "type": "Warning"}, {"address": 6807, "code": " * @title Basi", "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TrypCrowdsale_4: 0x1\ncalldata_TrypCrowdsale_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_TrypCrowdsale_0: 0xd73dd62300000000000000000000000000000000000000000000000000000000\ncalldatasize_TrypCrowdsale: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/42/0xbba67b58cb5059f388cae3d7597ebac6cb70dfe6.sol", "function": "increaseApproval(address,uint256)", "lineno": 104, "title": "Exception state", "type": "Informational"}, {"address": 7018, "code": "end the way in which ether is converted to", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/42/0xbba67b58cb5059f388cae3d7597ebac6cb70dfe6.sol", "function": "fallback", "lineno": 389, "title": "Message call to external contract", "type": "Informational"}, {"address": 7018, "code": "end the way in which ether is converted to", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 7306\nCall at address: 7215\n", "filename": "/unique_chucks/42/0xbba67b58cb5059f388cae3d7597ebac6cb70dfe6.sol", "function": "fallback", "lineno": 389, "title": "Multiple Calls", "type": "Information"}, {"address": 7090, "code": " * @param _weiAmount Value in we", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/42/0xbba67b58cb5059f388cae3d7597ebac6cb70dfe6.sol", "function": "fallback", "lineno": 390, "title": "State change after external call", "type": "Warning"}, {"address": 7215, "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 7306\n", "filename": "/unique_chucks/42/0xbba67b58cb5059f388cae3d7597ebac6cb70dfe6.sol", "function": "fallback", "lineno": 414, "title": "Multiple Calls", "type": "Information"}], "success": true}