{"error": null, "issues": [{"address": 2316, "code": "tion\n    function t", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/36/0x885a4819e899c772b439f05944096a3236315550.sol", "function": "fee()", "lineno": 108, "title": "Message call to external contract", "type": "Informational"}, {"address": 2316, "code": "tion\n    function t", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2591\n", "filename": "/unique_chucks/36/0x885a4819e899c772b439f05944096a3236315550.sol", "function": "purchase(address)", "lineno": 108, "title": "Multiple Calls", "type": "Information"}, {"address": 2591, "code": "lly purchase t", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/36/0x885a4819e899c772b439f05944096a3236315550.sol", "function": "fee()", "lineno": 118, "title": "Message call to external contract", "type": "Informational"}, {"address": 2591, "code": "lly purchase t", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2316\n", "filename": "/unique_chucks/36/0x885a4819e899c772b439f05944096a3236315550.sol", "function": "fee()", "lineno": 118, "title": "Multiple Calls", "type": "Information"}, {"address": 3100, "code": "oardListingDestroye", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/36/0x885a4819e899c772b439f05944096a3236315550.sol", "function": "claimUnrelatedTokens(address,address)", "lineno": 212, "title": "Message call to external contract", "type": "Warning"}, {"address": 3100, "code": "oardListingDestroye", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3324\n", "filename": "/unique_chucks/36/0x885a4819e899c772b439f05944096a3236315550.sol", "function": "claimUnrelatedTokens(address,address)", "lineno": 212, "title": "Multiple Calls", "type": "Information"}, {"address": 3324, "code": "Send remaining Ether (the fee fr", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/36/0x885a4819e899c772b439f05944096a3236315550.sol", "function": "claimUnrelatedTokens(address,address)", "lineno": 214, "title": "Message call to external contract", "type": "Warning"}, {"address": 3418, "code": "ixed;\n\n    }\n\n    /// Allows the seller", "debug": "The exception is triggered under the following conditions:\n\nretval_2316: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nreturndatasize: 0x20\nretval_2591: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_MarketboardERC20Listing_0: 0x25b31a9700000000000000000000000000000000000000000000000000000000\ncalldatasize_MarketboardERC20Listing: 0x4\n10_EXP_Concat(0, Extract(7, 0, retval_2591)): 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/36/0x885a4819e899c772b439f05944096a3236315550.sol", "function": "purchase(address)", "lineno": 133, "title": "Exception state", "type": "Informational"}, {"address": 3864, "code": "/ We are done, rese", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/36/0x885a4819e899c772b439f05944096a3236315550.sol", "function": "buyback(address)", "lineno": 162, "title": "Message call to external contract", "type": "Informational"}], "success": true}