{"error": null, "issues": [{"address": 397, "code": ";\n\n/*\n----- ETHERW", "debug": "callvalue: 0x471601c00140002\nstorage_0: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ngas: 0x35b60\ncalldata_EtherWaterfall_0: 0x300000000000000000000000000000000000000000000000000000000\ncalldatasize_EtherWaterfall: 0x4\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/37/0x629b4a1dae038650bd849fb972b375861da41567.sol", "function": "fallback", "lineno": 1, "title": "Integer Overflow ", "type": "Warning"}, {"address": 719, "code": "cesses 1 - 4+ inv", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2005\nCall at address: 1714\n", "filename": "/unique_chucks/37/0x629b4a1dae038650bd849fb972b375861da41567.sol", "function": "fallback", "lineno": 57, "title": "Multiple Calls", "type": "Information"}, {"address": 719, "code": "cesses 1 - 4+ inv", "debug": "", "description": "The return value of an external call is not checked. Note that execution continue even if the called contract throws.", "filename": "/unique_chucks/37/0x629b4a1dae038650bd849fb972b375861da41567.sol", "function": "fallback", "lineno": 57, "title": "Unchecked CALL return value", "type": "Informational"}, {"address": 1486, "code": "(dep.expec", "debug": "The exception is triggered under the following conditions:\n\ncallvalue: 0x2000000000000000\nstorage_0: 0x0\nstorage_1: 0x1\ngas: 0x35b60\ncalldata_EtherWaterfall_0: 0x300000000000000000000000000000000000000000000000000000000\ncalldatasize_EtherWaterfall: 0x4\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/37/0x629b4a1dae038650bd849fb972b375861da41567.sol", "function": "fallback", "lineno": 71, "title": "Exception state", "type": "Informational"}, {"address": 1714, "code": "      delete queue[idx];\n     ", "debug": "SOLVER OUTPUT:\ncallvalue: 0x2000000000000000\nstorage_0: 0x0\nbalance_at_1461501637330902918203684832716283019655932542975 & 0: 0x0\nstorage_1 +\n18569430475105882587588266137607568536673111973893317399460219858819262702947 +\n2*storage_1: 0x0\nstorage_1: 0x0\ngas: 0x35b60\ncalldata_EtherWaterfall_0: 0x300000000000000000000000000000000000000000000000000000000\ncalldatasize_EtherWaterfall: 0x4\n", "description": "In the function `fallback` a non-zero amount of Ether is sent to an address taken from storage slot 0.\nThere is a check on storage index 0. This storage slot can be written to by calling the function `fallback`.\n\nThere is a check on storage index 0. This storage slot can be written to by calling the function `fallback`.\nThere is a check on storage index 1. This storage slot can be written to by calling the function `fallback`.\nThere is a check on storage index 1. This storage slot can be written to by calling the function `fallback`.", "filename": "/unique_chucks/37/0x629b4a1dae038650bd849fb972b375861da41567.sol", "function": "fallback", "lineno": 75, "title": "Ether send", "type": "Warning"}, {"address": 1714, "code": "      delete queue[idx];\n     ", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2005\nCall at address: 1714\n", "filename": "/unique_chucks/37/0x629b4a1dae038650bd849fb972b375861da41567.sol", "function": "fallback", "lineno": 75, "title": "Multiple Calls", "type": "Information"}, {"address": 1714, "code": "      delete queue[idx];\n     ", "debug": "", "description": "A possible transaction order independence vulnerability exists in function fallback. The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/37/0x629b4a1dae038650bd849fb972b375861da41567.sol", "function": "fallback", "lineno": 75, "title": "Transaction order dependence", "type": "Warning"}, {"address": 1714, "code": "      delete queue[idx];\n     ", "debug": "", "description": "The return value of an external call is not checked. Note that execution continue even if the called contract throws.", "filename": "/unique_chucks/37/0x629b4a1dae038650bd849fb972b375861da41567.sol", "function": "fallback", "lineno": 75, "title": "Unchecked CALL return value", "type": "Informational"}, {"address": 2005, "code": " }\n\n            if(gaslef", "debug": "SOLVER OUTPUT:\ncallvalue: 0x2000000000000000\nstorage_0: 0x0\nbalance_at_1461501637330902918203684832716283019655932542975 & 0: 0x0\nstorage_1 +\n18569430475105882587588266137607568536673111973893317399460219858819262702947 +\n2*storage_1: 0x100\nstorage_1: 0x0\ngas: 0x35b60\ncalldata_EtherWaterfall_0: 0x300000000000000000000000000000000000000000000000000000000\ncalldatasize_EtherWaterfall: 0x4\n", "description": "In the function `fallback` a non-zero amount of Ether is sent to an address taken from storage slot 0.\nThere is a check on storage index 0. This storage slot can be written to by calling the function `fallback`.\n\nThere is a check on storage index 0. This storage slot can be written to by calling the function `fallback`.\nThere is a check on storage index 1. This storage slot can be written to by calling the function `fallback`.\nThere is a check on storage index 1. This storage slot can be written to by calling the function `fallback`.", "filename": "/unique_chucks/37/0x629b4a1dae038650bd849fb972b375861da41567.sol", "function": "fallback", "lineno": 81, "title": "Ether send", "type": "Warning"}, {"address": 2005, "code": " }\n\n            if(gaslef", "debug": "", "description": "A possible transaction order independence vulnerability exists in function fallback. The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/37/0x629b4a1dae038650bd849fb972b375861da41567.sol", "function": "fallback", "lineno": 81, "title": "Transaction order dependence", "type": "Warning"}, {"address": 2005, "code": " }\n\n            if(gaslef", "debug": "", "description": "The return value of an external call is not checked. Note that execution continue even if the called contract throws.", "filename": "/unique_chucks/37/0x629b4a1dae038650bd849fb972b375861da41567.sol", "function": "fallback", "lineno": 81, "title": "Unchecked CALL return value", "type": "Informational"}, {"address": 2049, "code": " low, exit the cycl", "debug": "callvalue: 0x2568c71d80540000\nstorage_0: 0x0\nbalance_at_1461501637330902918203684832716283019655932542975 & 0: 0x10000000000000000000000000000001d28befff5eff1fc8f50a609e7ba1031\nstorage_1 +\n18569430475105882587588266137607568536673111973893317399460219858819262702947 +\n2*storage_1: 0x94283100400802024030a60424f821c600\nstorage_1: 0x0\ngas: 0x35b60\ncalldata_EtherWaterfall_0: 0x300000000000000000000000000000000000000000000000000000000\ncalldatasize_EtherWaterfall: 0x4\n", "description": "A possible integer underflow exists in the function `fallback`.\nThe subtraction may result in a value < 0.", "filename": "/unique_chucks/37/0x629b4a1dae038650bd849fb972b375861da41567.sol", "function": "fallback", "lineno": 83, "title": "Integer Underflow", "type": "Warning"}, {"address": 2190, "code": "t c = 0;\n ", "debug": "The exception is triggered under the following conditions:\n\ncalldata_EtherWaterfall_4: 0x0\nstorage_0: 0x0\ncalldata_EtherWaterfall_0: 0x2fca532d00000000000000000000000000000000000000000000000000000000\ncalldatasize_EtherWaterfall: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/37/0x629b4a1dae038650bd849fb972b375861da41567.sol", "function": "getSingleDeposit(uint256)", "lineno": 98, "title": "Exception state", "type": "Informational"}], "success": true}