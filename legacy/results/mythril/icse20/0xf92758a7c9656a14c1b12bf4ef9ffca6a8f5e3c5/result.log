{"error": null, "issues": [{"address": 136, "code": "ing _a, string _b) public pure returns (int) {\n    bytes memory a = bytes(_a);\n    bytes memory b = bytes(_b);\n    uint minLength = a.length;\n    if (b.length < minLength) minLength = b.length;\n    //@todo unroll the loop into increments of 32 and do full 32 byte comparisons\n    for (uint i = 0; i < minLength; i ++)\n      if (a[i] < b[i])\n        return -1;\n      else if (a[i] > b[i])\n        return 1;\n    if (a.length < b.length)\n      return -1;\n    else if (a.length > b.length)\n      return 1;\n    else\n      return 0;\n  }\n  /// @dev Compares two strings and ", "debug": "calldata_itoken_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_itoken_0: 0x3a96fdd700000000000000000000000000000000000000000000000000000000\ncalldatasize_itoken: 0x4\n", "description": "A possible integer overflow exists in the function `compare(string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/20/0xf92758a7c9656a14c1b12bf4ef9ffca6a8f5e3c5.sol", "function": "compare(string,string)", "lineno": 21, "title": "Integer Overflow ", "type": "Warning"}, {"address": 318, "code": "blic pure returns (bool) {\n    return compare(_a, _b) == 0;\n  }\n  /// @dev Finds the index of the first ", "debug": "calldata_itoken_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_itoken_0: 0x46bdca9a00000000000000000000000000000000000000000000000000000000\ncalldatasize_itoken: 0x4\n", "description": "A possible integer overflow exists in the function `equal(string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/20/0xf92758a7c9656a14c1b12bf4ef9ffca6a8f5e3c5.sol", "function": "equal(string,string)", "lineno": 40, "title": "Integer Overflow ", "type": "Warning"}, {"address": 504, "code": "needle) public pure returns (int) {\n        bytes memory h = bytes(_haystack);\n        bytes memory n = bytes(_needle);\n        if(h.length < 1 || n.length < 1 || (n.length > h.length))\n      return -1;\n    else if(h.length > (2**128 -1)) // since we have to be able to return -1 (if the char isn't found or input error), this function must return an \"int\" type with a max length of (2^128 - 1)\n      return -1;\n    else {\n      uint subindex = 0;\n      for (uint i = 0; i < h.length; i ++) {\n        if (h[i] == n[0]) { // found the first char of b\n          subindex = 1;\n          while(subindex < n.length && (i + subindex) < h.length && h[i + subindex] == n[subindex]) {// search until the chars don't match or until we reach the end of a or b\n                subindex++;\n          }\n          if(subindex == n.length)\n                return int(i);\n        }\n      }\n      return -1;\n    }\n  }\n}\n\nlibrary SafeMath {\n\n  /**\n  * @dev Multiplies two numbers, t", "debug": "calldata_itoken_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_itoken_0: 0x8a0807b700000000000000000000000000000000000000000000000000000000\ncalldatasize_itoken: 0x4\n", "description": "A possible integer overflow exists in the function `indexOf(string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/20/0xf92758a7c9656a14c1b12bf4ef9ffca6a8f5e3c5.sol", "function": "indexOf(string,string)", "lineno": 44, "title": "Integer Overflow ", "type": "Warning"}], "success": true}