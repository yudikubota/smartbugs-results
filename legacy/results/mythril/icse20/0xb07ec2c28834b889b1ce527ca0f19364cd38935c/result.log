{"error": null, "issues": [{"address": 2236, "code": "n(address indexed admin);\n\n  mo", "debug": "The exception is triggered under the following conditions:\n\ncalldata_upgradeable_4: 0x0\nstorage_1: 0x0\ncalldata_upgradeable_0: 0x313f2a2100000000000000000000000000000000000000000000000000000000\ncalldatasize_upgradeable: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/2/0xb07ec2c28834b889b1ce527ca0f19364cd38935c.sol", "function": "_function_0x313f2a21", "lineno": 439, "title": "Exception state", "type": "Informational"}, {"address": 3386, "code": " constant decimals = 18;\n  bool public ", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/2/0xb07ec2c28834b889b1ce527ca0f19364cd38935c.sol", "function": "upgradedFrom(address)", "lineno": 840, "title": "Message call to external contract", "type": "Warning"}, {"address": 3386, "code": " constant decimals = 18;\n  bool public ", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3574\n", "filename": "/unique_chucks/2/0xb07ec2c28834b889b1ce527ca0f19364cd38935c.sol", "function": "upgradedFrom(address)", "lineno": 840, "title": "Multiple Calls", "type": "Information"}, {"address": 3574, "code": "l public haltPurchase;\n\n  // This state is ", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/2/0xb07ec2c28834b889b1ce527ca0f19364cd38935c.sol", "function": "upgradedFrom(address)", "lineno": 842, "title": "Message call to external contract", "type": "Warning"}, {"address": 5835, "code": "r onlyAdmins {\n    if (msg.sender !=", "debug": "The exception is triggered under the following conditions:\n\ncalldata_upgradeable_4: 0x0\nstorage_2: 0x0\ncalldata_upgradeable_0: 0xc389439800000000000000000000000000000000000000000000000000000000\ncalldatasize_upgradeable: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/2/0xb07ec2c28834b889b1ce527ca0f19364cd38935c.sol", "function": "_function_0xc3894398", "lineno": 441, "title": "Exception state", "type": "Informational"}], "success": true}