{"error": null, "issues": [{"address": 2810, "code": "dd(paySize);\n        }\n    }\n\n\n\t//\u5141\u8bb8\u7528\u6237\u5f80\u5408\u7ea6\u8d26\u6237\u6253\u5e01\n\tfunction () payabl", "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0x8000000000000000000000000000000000000000000000000000000000000000\ntimestamp: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_7: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_6: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncalldatasize_XMB: 0x3\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/11/0xc01e504a13be6dfaf3c3624cd847895047d087d6.sol", "function": "fallback", "lineno": 200, "title": "Exception state", "type": "Informational"}, {"address": 5125, "code": "tepTwoEndTime=1519488000;\n\n\t\t//20180501 00:00:", "debug": "The exception is triggered under the following conditions:\n\ncalldata_XMB_32 + 4: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\ncalldata_XMB_4: 0x0\ncalldata_XMB_0: 0x5b89a48a00000000000000000000000000000000000000000000000000000000\ncalldatasize_XMB: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/11/0xc01e504a13be6dfaf3c3624cd847895047d087d6.sol", "function": "_function_0x5b89a48a", "lineno": 173, "title": "Exception state", "type": "Informational"}, {"address": 7283, "code": "e base info of", "debug": "The exception is triggered under the following conditions:\n\ncallvalue: 0x800000001\nstorage_0: 0x9fffeffffffffffffffbffffffffff00000000000000000000003eef40000000\nstorage_5: 0x17ffffffffffffffffffffffffffffffffffffffffffbffffffffffe\ntimestamp: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_9: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_8: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_7: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_6: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncalldatasize_XMB: 0x3\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/11/0xc01e504a13be6dfaf3c3624cd847895047d087d6.sol", "function": "fallback", "lineno": 110, "title": "Exception state", "type": "Informational"}, {"address": 7307, "code": "s (uint256) {\n", "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_XMB_4: 0x1\ntimestamp: 0x0\ncalldata_XMB_32 + 36: 0x2\nstorage_0 +\nkeccac_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_XMB_4: 0x1\ncalldata_XMB_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_XMB_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_XMB: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/11/0xc01e504a13be6dfaf3c3624cd847895047d087d6.sol", "function": "transferFrom(address,address,uint256)", "lineno": 101, "title": "Exception state", "type": "Informational"}], "success": true}