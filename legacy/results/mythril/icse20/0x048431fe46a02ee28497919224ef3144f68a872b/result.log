{"error": null, "issues": [{"address": 889, "code": "      uint codeLength;\n\n        assembly {\n            codeLength := extcodesize(_to)\n        }\n\n        balances[msg.sender] = balances[msg.sender].sub(_value);\n        balances[_to] = balances[_to].add(_value);\n        if(codeLength>0) {\n            ContractReceiver receiver = ContractReceiver(_to);\n            receiver.tokenFallback(msg.sender, _value, _data);\n        }\n\t\t\n\t\tTransfer(msg.sender, _to, _value);\n        Transfer(msg.sender, _to, _value, _data);\n    }\n\t\n\t/**\n     * Destroy tokens\n     *\n     * Remove `_value` tokens from the system irreversibly\n   ", "debug": "calldata_WBDToken_32 + 36: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_WBDToken_0: 0xbe45fd6200000000000000000000000000000000000000000000000000000000\ncalldatasize_WBDToken: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `transfer(address,uint256,bytes)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/9/0x048431fe46a02ee28497919224ef3144f68a872b.sol", "function": "transfer(address,uint256,bytes)", "lineno": 85, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1028, "code": "msg.sender].sub(_value);\n        totalSupply = totalSupply.sub(_value);\n        Burn(msg.sender, _value, totalSupply, _data);\n        return true;\n    }\n\t\n\t/**\n     * @dev Returns balance of the `_address`.\n     *\n     * @param _address   The address whose balance w", "debug": "calldata_WBDToken_32 + 4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_WBDToken_0: 0xfe9d930300000000000000000000000000000000000000000000000000000000\ncalldatasize_WBDToken: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `burn(uint256,bytes)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/9/0x048431fe46a02ee28497919224ef3144f68a872b.sol", "function": "burn(uint256,bytes)", "lineno": 111, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2178, "code": "alue);\n        Transfer(msg.sender, _to, _value, ", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/9/0x048431fe46a02ee28497919224ef3144f68a872b.sol", "function": "transfer(address,uint256,bytes)", "lineno": 98, "title": "Message call to external contract", "type": "Warning"}, {"address": 2918, "code": "rt(b <= a);\n  ", "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncalldata_WBDToken_4: 0x1\ncalldata_WBDToken_0: 0xfe9d930300000000000000000000000000000000000000000000000000000000\ncalldatasize_WBDToken: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/9/0x048431fe46a02ee28497919224ef3144f68a872b.sol", "function": "burn(uint256,bytes)", "lineno": 5, "title": "Exception state", "type": "Informational"}, {"address": 2936, "code": "  ass", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_WBDToken_4: 0x9c9efb7ae5acd378025256a3945f5859076e809243093d9ecae2636c9fd28979\ncalldata_WBDToken_32 + 4: 0xc290137095b13347e55005a6dc184559e0489f1233480050d0fb4bba17d34179\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xc290137095b13347e55005a6dc184559e0489f1233480050d0fb4bba17d34179\ncalldata_WBDToken_0: 0xbe45fd6200000000000000000000000000000000000000000000000000000000\ncalldatasize_WBDToken: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `transfer(address,uint256,bytes)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/9/0x048431fe46a02ee28497919224ef3144f68a872b.sol", "function": "transfer(address,uint256,bytes)", "lineno": 11, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2949, "code": "= a);\n    retu", "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_WBDToken_4: 0xbd5dfeabad0efffffffffeffffffffffd599ffefbfe6f24271e80e64322c0700\ncalldata_WBDToken_32 + 4: 0x6218000d800000000000000000000000039800002005500633e06f771baff7fc\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x6218000d800000000000000000000000039800002005500633e06f771baff7fc\ncalldata_WBDToken_0: 0xbe45fd6200000000000000000000000000000000000000000000000000000000\ncalldatasize_WBDToken: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/9/0x048431fe46a02ee28497919224ef3144f68a872b.sol", "function": "transfer(address,uint256,bytes)", "lineno": 11, "title": "Exception state", "type": "Informational"}], "success": true}