{"error": null, "issues": [{"address": 1033, "code": "ed) &&\n         (_hash == 0 || secretBids[msg.sender].hash != 0) )\n        revert();\n    secretBids[msg.sender].hash = _hash;\n    secretBids[msg.sender].deposit = msg.value;\n    secretBidCount += 1;\n    uint _batch = secretBidCount / batchSize;\n    SecretBidEvent(_batch, msg.sender, msg.value, _hash, _message);\n  }\n\n\n  //\n  // the owner may disqualify a bid if it is bogus. for example if the hash does not correspond\n  // to the hash that is generated from the encyrpted bid tuple. when a disqualified bid is\n  // executed all the deposited funds will be returned to the bidder, as if the bid was below\n  // the strike-price.\n  //\n  funct", "debug": "calldata_iERC20Token_32 + 4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_iERC20Token_0: 0x25ede14700000000000000000000000000000000000000000000000000000000\ncalldatasize_iERC20Token: 0x4\n", "description": "A possible integer overflow exists in the function `depositSecretBid(bytes32,bytes)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/14/0xad4c4ff144e42c73b6333b75af3cee5af901c10e.sol", "function": "depositSecretBid(bytes32,bytes)", "lineno": 318, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2689, "code": "of _x m", "debug": "calldata_iERC20Token_4: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncalldata_iERC20Token_32 + 4: 0x57f25cd000000000000000000000000000000000000000000000000000000000\nstorage_0: 0x0\nstorage_2: 0x0\ncaller: 0x0\ncalldata_iERC20Token_0: 0x2134927e00000000000000000000000000000000000000000000000000000000\ncalldatasize_iERC20Token: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `setAuctionParms(uint256,uint256,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/14/0xad4c4ff144e42c73b6333b75af3cee5af901c10e.sol", "function": "setAuctionParms(uint256,uint256,uint256)", "lineno": 110, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2702, "code": "serts if the su", "debug": "The exception is triggered under the following conditions:\n\ncalldata_iERC20Token_4: 0x1\ncalldata_iERC20Token_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_0: 0x0\nstorage_2: 0x0\ncaller: 0x0\ncalldata_iERC20Token_0: 0x2134927e00000000000000000000000000000000000000000000000000000000\ncalldatasize_iERC20Token: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/14/0xad4c4ff144e42c73b6333b75af3cee5af901c10e.sol", "function": "setAuctionParms(uint256,uint256,uint256)", "lineno": 110, "title": "Exception state", "type": "Informational"}, {"address": 3165, "code": " > 0) {\n      //transfer pct", "debug": "SOLVER OUTPUT:\ncalldata_iERC20Token_0: 0x110f887400000000000000000000000000000000000000000000000000000000\ncalldatasize_iERC20Token: 0x4\ncallvalue: 0x0\n", "description": "In the function `withdrawRefund()` a non-zero amount of Ether is sent to msg.sender.\nIt seems that this function can be called without restrictions.", "filename": "/unique_chucks/14/0xad4c4ff144e42c73b6333b75af3cee5af901c10e.sol", "function": "withdrawRefund()", "lineno": 437, "title": "Ether send", "type": "Warning"}, {"address": 3576, "code": "\n  //called by owner ", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/14/0xad4c4ff144e42c73b6333b75af3cee5af901c10e.sol", "function": "reserveDeveloperTokens(address,uint256)", "lineno": 265, "title": "Message call to external contract", "type": "Informational"}, {"address": 3665, "code": " other concerned party) to generate a SatateChangeEvent\n  //\n  func", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/14/0xad4c4ff144e42c73b6333b75af3cee5af901c10e.sol", "function": "reserveDeveloperTokens(address,uint256)", "lineno": 266, "title": "State change after external call", "type": "Warning"}, {"address": 4271, "code": "fied bid is\n  // ex", "debug": "storage_13: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_iERC20Token_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_0: 0xff00\nstorage_2: 0x0\ncaller: 0x0\nstorage_1: 0x1\ncalldata_iERC20Token_0: 0x25ede14700000000000000000000000000000000000000000000000000000000\ncalldatasize_iERC20Token: 0x4\nstorage_4 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\n", "description": "A possible integer overflow exists in the function `depositSecretBid(bytes32,bytes)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/14/0xad4c4ff144e42c73b6333b75af3cee5af901c10e.sol", "function": "depositSecretBid(bytes32,bytes)", "lineno": 331, "title": "Integer Overflow ", "type": "Warning"}, {"address": 4292, "code": "ted funds will be returned", "debug": "The exception is triggered under the following conditions:\n\ncalldata_iERC20Token_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_0: 0xff00\nstorage_2: 0x0\ncaller: 0x0\nstorage_1: 0x1\ncalldata_iERC20Token_0: 0x25ede14700000000000000000000000000000000000000000000000000000000\ncalldatasize_iERC20Token: 0x4\nstorage_21: 0x0\nstorage_4 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/14/0xad4c4ff144e42c73b6333b75af3cee5af901c10e.sol", "function": "depositSecretBid(bytes32,bytes)", "lineno": 332, "title": "Exception state", "type": "Informational"}, {"address": 4833, "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/14/0xad4c4ff144e42c73b6333b75af3cee5af901c10e.sol", "function": "payUnderwriter()", "lineno": 466, "title": "Message call to external contract", "type": "Informational"}, {"address": 6414, "code": "nt, _lowLevelPrice);\n         i", "debug": "The exception is triggered under the following conditions:\n\ncalldata_iERC20Token_32 + 36: 0x4000000000000000000000000000000000000000000000000000000000000000\nstorage_0 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\nstorage_1 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_1: 0x4\ncalldata_iERC20Token_0: 0x2f6509600000000000000000000000000000000000000000000000000000000\ncalldatasize_iERC20Token: 0x4\nstorage_9: 0x0\nstorage_7: 0x0\ncalldata_iERC20Token_32 + 4: 0x0\nkeccac_calldata_iERC20Token_4: 0x0\nstorage_4 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/14/0xad4c4ff144e42c73b6333b75af3cee5af901c10e.sol", "function": "executeBid(uint256,uint256,uint256)", "lineno": 370, "title": "Exception state", "type": "Informational"}, {"address": 7494, "code": "of half of his deposit\n  // * the b", "debug": "storage_2 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xb2c81e3be60b809eebca250ae5f3958de8241f3c0942692d3cecd1fd00743211\nstorage_1 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x93931c13e507cbbcbf74d9eee4fb920eeaef84aa5110428da2eddb017d5ebcdd\nstorage_0 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xff00\nstorage_1: 0x4\ncalldata_iERC20Token_0: 0x2f6509600000000000000000000000000000000000000000000000000000000\ncalldatasize_iERC20Token: 0x4\nstorage_7: 0x0\ncalldata_iERC20Token_32 + 4: 0x0\nkeccac_calldata_iERC20Token_4: 0x0\nstorage_4 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `executeBid(uint256,uint256,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/14/0xad4c4ff144e42c73b6333b75af3cee5af901c10e.sol", "function": "executeBid(uint256,uint256,uint256)", "lineno": 398, "title": "Integer Overflow ", "type": "Warning"}, {"address": 7584, "code": "dder does not rece", "debug": "storage_14: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_0 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xff00\nstorage_1 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_1: 0x4\ncalldata_iERC20Token_0: 0x2f6509600000000000000000000000000000000000000000000000000000000\ncalldatasize_iERC20Token: 0x4\nstorage_7: 0x0\ncalldata_iERC20Token_32 + 4: 0x0\nkeccac_calldata_iERC20Token_4: 0x0\nstorage_4 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `executeBid(uint256,uint256,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/14/0xad4c4ff144e42c73b6333b75af3cee5af901c10e.sol", "function": "executeBid(uint256,uint256,uint256)", "lineno": 400, "title": "Integer Overflow ", "type": "Warning"}, {"address": 7605, "code": "nction expireBid(address ", "debug": "The exception is triggered under the following conditions:\n\nstorage_0 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xff00\nstorage_1 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_1: 0x4\ncalldata_iERC20Token_0: 0x2f6509600000000000000000000000000000000000000000000000000000000\ncalldatasize_iERC20Token: 0x4\nstorage_21: 0x0\nstorage_7: 0x0\ncalldata_iERC20Token_32 + 4: 0x0\nkeccac_calldata_iERC20Token_4: 0x0\nstorage_4 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/14/0xad4c4ff144e42c73b6333b75af3cee5af901c10e.sol", "function": "executeBid(uint256,uint256,uint256)", "lineno": 402, "title": "Exception state", "type": "Informational"}, {"address": 9301, "code": "Bid {\n ", "debug": "calldata_iERC20Token_32 + 4: 0xc725a027eb19dc0021e32572b603f28195447806104f3e417572e3fc000dcb02\nstorage_1 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_1: 0x4\ncalldata_iERC20Token_0: 0x2f6509600000000000000000000000000000000000000000000000000000000\ncalldatasize_iERC20Token: 0x4\nkeccac_calldata_iERC20Token_4: 0x0\nstorage_4 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `executeBid(uint256,uint256,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/14/0xad4c4ff144e42c73b6333b75af3cee5af901c10e.sol", "function": "executeBid(uint256,uint256,uint256)", "lineno": 140, "title": "Integer Overflow ", "type": "Warning"}, {"address": 9335, "code": "qualified;     // flag set if h", "debug": "The exception is triggered under the following conditions:\n\ncalldata_iERC20Token_32 + 4: 0x8000000000000000000000000000000000000000000000000000000000000000\nstorage_1 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_1: 0x4\ncalldata_iERC20Token_0: 0x2f6509600000000000000000000000000000000000000000000000000000000\ncalldatasize_iERC20Token: 0x4\nkeccac_calldata_iERC20Token_4: 0x0\nstorage_4 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/14/0xad4c4ff144e42c73b6333b75af3cee5af901c10e.sol", "function": "executeBid(uint256,uint256,uint256)", "lineno": 141, "title": "Exception state", "type": "Informational"}], "success": true}