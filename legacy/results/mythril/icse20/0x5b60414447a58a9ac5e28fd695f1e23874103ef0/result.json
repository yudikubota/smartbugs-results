{
  "contract": "0x5b60414447a58a9ac5e28fd695f1e23874103ef0",
  "tool": "mythril",
  "start": 1563706719.064998,
  "end": 1563706975.1622381,
  "duration": 256.09724020957947,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 1226,
        "code": "ue, bytes _extraData) public returns (bool success) {\n        tokenRecipient spender = tokenRecipient(_spender);\n        if (approve(_spender, _value)) {\n            spender.receiveApproval(msg.sender, _value, this, _extraData);\n            return true;\n        }\n    }\n\n    function burn(uint256 _value) public returns (bool suc",
        "debug": "calldata_tokenRecipient_32 + 36: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_tokenRecipient_0: 0xcae9ca5100000000000000000000000000000000000000000000000000000000\ncalldatasize_tokenRecipient: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `approveAndCall(address,uint256,bytes)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/37/0x5b60414447a58a9ac5e28fd695f1e23874103ef0.sol",
        "function": "approveAndCall(address,uint256,bytes)",
        "lineno": 55,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1365,
        "code": "uint256 initialSupply, string tokenName, string tokenSymbol) public {\n        totalSupply = 8;\n        balanceOf[msg.sender] = 2160000000000000;\n        name = \"DDBBCOIN\";\n        symbol = \"DDBB\";\n    }\n\n\n    function _transf",
        "debug": "calldata_tokenRecipient_32 + 4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_tokenRecipient_0: 0xd19d994600000000000000000000000000000000000000000000000000000000\ncalldatasize_tokenRecipient: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `DDBBCOIN(uint256,string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/37/0x5b60414447a58a9ac5e28fd695f1e23874103ef0.sol",
        "function": "DDBBCOIN(uint256,string,string)",
        "lineno": 19,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1377,
        "code": "uint256 initialSupply, string tokenName, string tokenSymbol) public {\n        totalSupply = 8;\n        balanceOf[msg.sender] = 2160000000000000;\n        name = \"DDBBCOIN\";\n        symbol = \"DDBB\";\n    }\n\n\n    function _transf",
        "debug": "calldata_tokenRecipient_4 + calldata_tokenRecipient_32 + 4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8\ncalldata_tokenRecipient_0: 0xd19d994600000000000000000000000000000000000000000000000000000000\ncalldatasize_tokenRecipient: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `DDBBCOIN(uint256,string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/37/0x5b60414447a58a9ac5e28fd695f1e23874103ef0.sol",
        "function": "DDBBCOIN(uint256,string,string)",
        "lineno": 19,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1386,
        "code": "uint256 initialSupply, string tokenName, string tokenSymbol) public {\n        totalSupply = 8;\n        balanceOf[msg.sender] = 2160000000000000;\n        name = \"DDBBCOIN\";\n        symbol = \"DDBB\";\n    }\n\n\n    function _transf",
        "debug": "calldata_tokenRecipient_4 + calldata_tokenRecipient_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc1\ncalldata_tokenRecipient_0: 0xd19d994600000000000000000000000000000000000000000000000000000000\ncalldatasize_tokenRecipient: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `DDBBCOIN(uint256,string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/37/0x5b60414447a58a9ac5e28fd695f1e23874103ef0.sol",
        "function": "DDBBCOIN(uint256,string,string)",
        "lineno": 19,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1392,
        "code": "uint256 initialSupply, string tokenName, string tokenSymbol) public {\n        totalSupply = 8;\n        balanceOf[msg.sender] = 2160000000000000;\n        name = \"DDBBCOIN\";\n        symbol = \"DDBB\";\n    }\n\n\n    function _transf",
        "debug": "calldata_tokenRecipient_4 + calldata_tokenRecipient_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff41\ncalldata_tokenRecipient_0: 0xd19d994600000000000000000000000000000000000000000000000000000000\ncalldatasize_tokenRecipient: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `DDBBCOIN(uint256,string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/37/0x5b60414447a58a9ac5e28fd695f1e23874103ef0.sol",
        "function": "DDBBCOIN(uint256,string,string)",
        "lineno": 19,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1435,
        "code": "uint256 initialSupply, string tokenName, string tokenSymbol) public {\n        totalSupply = 8;\n        balanceOf[msg.sender] = 2160000000000000;\n        name = \"DDBBCOIN\";\n        symbol = \"DDBB\";\n    }\n\n\n    function _transf",
        "debug": "calldata_tokenRecipient_32 + 36: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_tokenRecipient_0: 0xd19d994600000000000000000000000000000000000000000000000000000000\ncalldatasize_tokenRecipient: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `DDBBCOIN(uint256,string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/37/0x5b60414447a58a9ac5e28fd695f1e23874103ef0.sol",
        "function": "DDBBCOIN(uint256,string,string)",
        "lineno": 19,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1447,
        "code": "uint256 initialSupply, string tokenName, string tokenSymbol) public {\n        totalSupply = 8;\n        balanceOf[msg.sender] = 2160000000000000;\n        name = \"DDBBCOIN\";\n        symbol = \"DDBB\";\n    }\n\n\n    function _transf",
        "debug": "calldata_tokenRecipient_4 + calldata_tokenRecipient_32 + 36: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8\ncalldata_tokenRecipient_0: 0xd19d994600000000000000000000000000000000000000000000000000000000\ncalldatasize_tokenRecipient: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `DDBBCOIN(uint256,string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/37/0x5b60414447a58a9ac5e28fd695f1e23874103ef0.sol",
        "function": "DDBBCOIN(uint256,string,string)",
        "lineno": 19,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1456,
        "code": "uint256 initialSupply, string tokenName, string tokenSymbol) public {\n        totalSupply = 8;\n        balanceOf[msg.sender] = 2160000000000000;\n        name = \"DDBBCOIN\";\n        symbol = \"DDBB\";\n    }\n\n\n    function _transf",
        "debug": "calldata_tokenRecipient_4 + calldata_tokenRecipient_32 + 36: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc1\ncalldata_tokenRecipient_0: 0xd19d994600000000000000000000000000000000000000000000000000000000\ncalldatasize_tokenRecipient: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `DDBBCOIN(uint256,string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/37/0x5b60414447a58a9ac5e28fd695f1e23874103ef0.sol",
        "function": "DDBBCOIN(uint256,string,string)",
        "lineno": 19,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1462,
        "code": "uint256 initialSupply, string tokenName, string tokenSymbol) public {\n        totalSupply = 8;\n        balanceOf[msg.sender] = 2160000000000000;\n        name = \"DDBBCOIN\";\n        symbol = \"DDBB\";\n    }\n\n\n    function _transf",
        "debug": "calldata_tokenRecipient_4 + calldata_tokenRecipient_32 + 36: 0x746e42ddbe03c97fe6e530ac0258466c4a20dfffffffffffffffffffffffffc1\ncalldata_tokenRecipient_4 + calldata_tokenRecipient_32 + 4: 0xcf9f8ea5a709fb58f8ed502cd9b08a9b1306dfffffffffffffffffffffffff61\ncalldata_tokenRecipient_0: 0xd19d994600000000000000000000000000000000000000000000000000000000\ncalldatasize_tokenRecipient: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `DDBBCOIN(uint256,string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/37/0x5b60414447a58a9ac5e28fd695f1e23874103ef0.sol",
        "function": "DDBBCOIN(uint256,string,string)",
        "lineno": 19,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2416,
        "code": "return true;\n    }\n\n ",
        "debug": "calldata_tokenRecipient_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_3: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_tokenRecipient_0: 0x42966c6800000000000000000000000000000000000000000000000000000000\ncalldatasize_tokenRecipient: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer underflow exists in the function `burn(uint256)`.\nThe subtraction may result in a value < 0.",
        "filename": "/unique_chucks/37/0x5b60414447a58a9ac5e28fd695f1e23874103ef0.sol",
        "function": "burn(uint256)",
        "lineno": 68,
        "title": "Integer Underflow",
        "type": "Warning"
      },
      {
        "address": 2977,
        "code": "  }\n}",
        "debug": "calldata_tokenRecipient_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_3: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_tokenRecipient_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_tokenRecipient_0: 0x79cc679000000000000000000000000000000000000000000000000000000000\ncalldatasize_tokenRecipient: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer underflow exists in the function `burnFrom(address,uint256)`.\nThe subtraction may result in a value < 0.",
        "filename": "/unique_chucks/37/0x5b60414447a58a9ac5e28fd695f1e23874103ef0.sol",
        "function": "burnFrom(address,uint256)",
        "lineno": 79,
        "title": "Integer Underflow",
        "type": "Warning"
      },
      {
        "address": 3593,
        "code": "ata);\n            return true;\n        }\n    }\n\n    function ",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/37/0x5b60414447a58a9ac5e28fd695f1e23874103ef0.sol",
        "function": "approveAndCall(address,uint256,bytes)",
        "lineno": 58,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 3778,
        "code": "      symbol = \"D",
        "debug": "calldata_tokenRecipient_4 + calldata_tokenRecipient_32 + 36: 0x7d1c220000131c81001c28498000000a310ffffffffffffffffffffffffffe1\ncalldata_tokenRecipient_4 + calldata_tokenRecipient_32 + 4: 0xf82e3ddffffece37effe3d7b67ffffff5ceeffffffffffffffffffffffffff01\ncalldata_tokenRecipient_0: 0xd19d994600000000000000000000000000000000000000000000000000000000\ncalldatasize_tokenRecipient: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `DDBBCOIN(uint256,string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/37/0x5b60414447a58a9ac5e28fd695f1e23874103ef0.sol",
        "function": "DDBBCOIN(uint256,string,string)",
        "lineno": 23,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 4297,
        "code": "to];\n        balanceOf[_from] -= ",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffff7ffffffff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_tokenRecipient_4: 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_tokenRecipient_32 + 4: 0x1\ncalldata_tokenRecipient_4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_tokenRecipient_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncalldatasize_tokenRecipient: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `transfer(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/37/0x5b60414447a58a9ac5e28fd695f1e23874103ef0.sol",
        "function": "transfer(address,uint256)",
        "lineno": 31,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 4684,
        "code": "== previousBalances);\n    }\n\n    ",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xaa5ffb3ef59ca27c51ea5386f666ff066cc1b33a91510730105067f1cf5673d1\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_tokenRecipient_4: 0x95fffffff804b9a85807bbdd0551e42c11afc4b343b1b8076152761045274227\ncalldata_tokenRecipient_32 + 4: 0x1000000014ef5df8a491084c0158f42fedfff8000588c8000088008000000000\ncalldata_tokenRecipient_4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_tokenRecipient_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncalldatasize_tokenRecipient: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `transfer(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/37/0x5b60414447a58a9ac5e28fd695f1e23874103ef0.sol",
        "function": "transfer(address,uint256)",
        "lineno": 35,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 4767,
        "code": "ract TokenERC20 {\n    string public name;\n    string public symbol;\n    uint8 public decimals = 8; \n    uint256 public totalSupply;\n\n    mapping (address => uint256) public balanceOf;  // \n    mapping (address => mapping (address => uint256)) public allowance;\n\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    event Burn(address indexed from, uint256 value);\n\n\n    function DDBBCOIN(uint256 initialSupply, string tokenName, string tokenSymbol) public {\n        totalSupply = 8;\n        balanceOf[msg.sender] = 2160000000000000;\n        name = \"DDBBCOIN\";\n        symbol = \"DDBB\";\n    }\n\n\n    function _transfer(address _from, address _to, uint _value) internal {\n        require(_to != 0x0);\n        require(balanceOf[_from] >= _value);\n        require(balanceOf[_to] + _value > balanceOf[_to]);\n        uint previousBalances = balanceOf[_from] + balanceOf[_to];\n        balanceOf[_from] -= _value;\n        balanceOf[_to] += _value;\n        Transfer(_from, _to, _value);\n        assert(balanceOf[_from] + balanceOf[_to] == previousBalances);\n    }\n\n    function transfer(address _to, uint256 _value) public {\n        _transfer(msg.sender, _to, _value);\n    }\n\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\n        require(_value <= allowance[_from][msg.sender]);     // Check allowance\n        allowance[_from][msg.sender] -= _value;\n        _transfer(_from, _to, _value);\n        return true;\n    }\n\n    function approve(address _spender, uint256 _value) public\n        returns (bool success) {\n        allowance[msg.sender][_spender] = _value;\n        return true;\n    }\n\n    function approveAndCall(address _spender, uint256 _value, bytes _extraData) public returns (bool success) {\n        tokenRecipient spender = tokenRecipient(_spender);\n        if (approve(_spender, _value)) {\n            spender.receiveApproval(msg.sender, _value, this, _extraData);\n            return true;\n        }\n    }\n\n    function burn(uint256 _value) public returns (bool success) {\n        require(balanceOf[msg.sender] >= _value);\n        balanceOf[msg.sender] -= _value;\n        totalSupply -= _value;\n        Burn(msg.sender, _value);\n        return true;\n    }\n\n    function burnFrom(address _from, uint256 _value) public returns (bool success) {\n        require(balanceOf[_from] >= _value);\n        require(_value <= allowance[_from][msg.sender]);\n        balanceOf[_from] -= _value;\n        allowance[_from][msg.sender] -= _value;\n        totalSupply -= _value;\n        Burn(_from, _value);\n        return true;\n    }\n}",
        "debug": "mem_160 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_tokenRecipient_4 + calldata_tokenRecipient_32 + 4)) +\n32 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_tokenRecipient_4 + calldata_tokenRecipient_32 + 36)): 0x8000000000000000000000000000000000000000000000000000000000000000\ncalldata_tokenRecipient_0: 0xd19d994600000000000000000000000000000000000000000000000000000000\ncalldatasize_tokenRecipient: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `DDBBCOIN(uint256,string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/37/0x5b60414447a58a9ac5e28fd695f1e23874103ef0.sol",
        "function": "DDBBCOIN(uint256,string,string)",
        "lineno": 5,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 4781,
        "code": "ract TokenERC20 {\n    string public name;\n    string public symbol;\n    uint8 public decimals = 8; \n    uint256 public totalSupply;\n\n    mapping (address => uint256) public balanceOf;  // \n    mapping (address => mapping (address => uint256)) public allowance;\n\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    event Burn(address indexed from, uint256 value);\n\n\n    function DDBBCOIN(uint256 initialSupply, string tokenName, string tokenSymbol) public {\n        totalSupply = 8;\n        balanceOf[msg.sender] = 2160000000000000;\n        name = \"DDBBCOIN\";\n        symbol = \"DDBB\";\n    }\n\n\n    function _transfer(address _from, address _to, uint _value) internal {\n        require(_to != 0x0);\n        require(balanceOf[_from] >= _value);\n        require(balanceOf[_to] + _value > balanceOf[_to]);\n        uint previousBalances = balanceOf[_from] + balanceOf[_to];\n        balanceOf[_from] -= _value;\n        balanceOf[_to] += _value;\n        Transfer(_from, _to, _value);\n        assert(balanceOf[_from] + balanceOf[_to] == previousBalances);\n    }\n\n    function transfer(address _to, uint256 _value) public {\n        _transfer(msg.sender, _to, _value);\n    }\n\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\n        require(_value <= allowance[_from][msg.sender]);     // Check allowance\n        allowance[_from][msg.sender] -= _value;\n        _transfer(_from, _to, _value);\n        return true;\n    }\n\n    function approve(address _spender, uint256 _value) public\n        returns (bool success) {\n        allowance[msg.sender][_spender] = _value;\n        return true;\n    }\n\n    function approveAndCall(address _spender, uint256 _value, bytes _extraData) public returns (bool success) {\n        tokenRecipient spender = tokenRecipient(_spender);\n        if (approve(_spender, _value)) {\n            spender.receiveApproval(msg.sender, _value, this, _extraData);\n            return true;\n        }\n    }\n\n    function burn(uint256 _value) public returns (bool success) {\n        require(balanceOf[msg.sender] >= _value);\n        balanceOf[msg.sender] -= _value;\n        totalSupply -= _value;\n        Burn(msg.sender, _value);\n        return true;\n    }\n\n    function burnFrom(address _from, uint256 _value) public returns (bool success) {\n        require(balanceOf[_from] >= _value);\n        require(_value <= allowance[_from][msg.sender]);\n        balanceOf[_from] -= _value;\n        allowance[_from][msg.sender] -= _value;\n        totalSupply -= _value;\n        Burn(_from, _value);\n        return true;\n    }\n}",
        "debug": "mem_160 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_tokenRecipient_4 + calldata_tokenRecipient_32 + 4)) +\n32 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_tokenRecipient_4 + calldata_tokenRecipient_32 + 36)): 0xe2240c073350198c7e1fe6a188343fffffffbbc5606fffffffffffffffffffa0\ncalldata_tokenRecipient_4 + calldata_tokenRecipient_32 + 36: 0xe728cbd10097e51a790002e0afffffffffffffffffffffffffffffffffffffe1\ncalldata_tokenRecipient_4 + calldata_tokenRecipient_32 + 4: 0x469e07d63c0ba14e849f5e157670afbffffc443a9f8fffffffffffffffffff61\ncalldata_tokenRecipient_0: 0xd19d994600000000000000000000000000000000000000000000000000000000\ncalldatasize_tokenRecipient: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `DDBBCOIN(uint256,string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/37/0x5b60414447a58a9ac5e28fd695f1e23874103ef0.sol",
        "function": "DDBBCOIN(uint256,string,string)",
        "lineno": 5,
        "title": "Integer Overflow ",
        "type": "Warning"
      }
    ],
    "success": true
  }
}