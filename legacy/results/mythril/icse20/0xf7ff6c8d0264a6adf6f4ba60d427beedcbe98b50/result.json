{
  "contract": "0xf7ff6c8d0264a6adf6f4ba60d427beedcbe98b50",
  "tool": "mythril",
  "start": 1563546360.769079,
  "end": 1563546478.0284626,
  "duration": 117.25938367843628,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 5472,
        "code": "balanceOf `this`\");\n\n    supe",
        "debug": "The exception is triggered under the following conditions:\n\ncallvalue: 0xde0b6b3a7640000\ncalldatasize_WhitelistProxyInterface: 0x3\nstorage_3: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/14/0xf7ff6c8d0264a6adf6f4ba60d427beedcbe98b50.sol",
        "function": "fallback",
        "lineno": 985,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 5792,
        "code": "et;\n    } else {\n      ret",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/14/0xf7ff6c8d0264a6adf6f4ba60d427beedcbe98b50.sol",
        "function": "fallback",
        "lineno": 992,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 5792,
        "code": "et;\n    } else {\n      ret",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 9469\n",
        "filename": "/unique_chucks/14/0xf7ff6c8d0264a6adf6f4ba60d427beedcbe98b50.sol",
        "function": "fallback",
        "lineno": 992,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 7678,
        "code": "== _b);",
        "debug": "storage_14: 0xd6affad3564d9364d9364d9364d9364d947a7d58ceab77ffecbcc5f5309592c0\ncalldata_WhitelistProxyInterface_0: 0x1515bc2b00000000000000000000000000000000000000000000000000000000\ncalldatasize_WhitelistProxyInterface: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `hasClosed()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/14/0xf7ff6c8d0264a6adf6f4ba60d427beedcbe98b50.sol",
        "function": "hasClosed()",
        "lineno": 29,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 7701,
        "code": "turn c;\n  }\n\n  /**\n ",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_14: 0x46001ccf82f057e88c079408013549fb40d975ed5be820313000080c74804105\ncalldata_WhitelistProxyInterface_0: 0x1515bc2b00000000000000000000000000000000000000000000000000000000\ncalldatasize_WhitelistProxyInterface: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/14/0xf7ff6c8d0264a6adf6f4ba60d427beedcbe98b50.sol",
        "function": "hasClosed()",
        "lineno": 30,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 9469,
        "code": "e(weiRaised.add(_weiAmount) ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/14/0xf7ff6c8d0264a6adf6f4ba60d427beedcbe98b50.sol",
        "function": "capReached()",
        "lineno": 979,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 9469,
        "code": "e(weiRaised.add(_weiAmount) ",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 9650\n",
        "filename": "/unique_chucks/14/0xf7ff6c8d0264a6adf6f4ba60d427beedcbe98b50.sol",
        "function": "hasClosed()",
        "lineno": 979,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 9650,
        "code": "ssPurchase(addres",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/14/0xf7ff6c8d0264a6adf6f4ba60d427beedcbe98b50.sol",
        "function": "hasClosed()",
        "lineno": 983,
        "title": "Message call to external contract",
        "type": "Informational"
      }
    ],
    "success": true
  }
}