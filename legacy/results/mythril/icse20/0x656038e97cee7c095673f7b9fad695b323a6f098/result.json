{
  "contract": "0x656038e97cee7c095673f7b9fad695b323a6f098",
  "tool": "mythril",
  "start": 1563492877.4774857,
  "end": 1563493149.9728603,
  "duration": 272.49537467956543,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 1593,
        "code": "se);\n    ",
        "debug": "",
        "description": "Function spinAll() retrieves the transaction origin (tx.origin) using the ORIGIN opcode. Use msg.sender instead.\nSee also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin",
        "filename": "/unique_chucks/4/0x656038e97cee7c095673f7b9fad695b323a6f098.sol",
        "function": "spinAll()",
        "lineno": 97,
        "title": "Use of tx.origin",
        "type": "Warning"
      },
      {
        "address": 2045,
        "code": " {\n        return _finishSpin(_customerAddress);\n    }\n\n\n    // In",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/4/0x656038e97cee7c095673f7b9fad695b323a6f098.sol",
        "function": "withdrawDevFees()",
        "lineno": 399,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 2045,
        "code": " {\n        return _finishSpin(_customerAddress);\n    }\n\n\n    // In",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2326\n",
        "filename": "/unique_chucks/4/0x656038e97cee7c095673f7b9fad695b323a6f098.sol",
        "function": "withdrawDevFees()",
        "lineno": 399,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 2326,
        "code": "tSpin(uint256 betAmount, address _customerAddress)\n        int",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/4/0x656038e97cee7c095673f7b9fad695b323a6f098.sol",
        "function": "withdrawDevFees()",
        "lineno": 407,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 2431,
        "code": "emory spin = playerSpins[_customerAddress];\n   ",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/4/0x656038e97cee7c095673f7b9fad695b323a6f098.sol",
        "function": "withdrawDevFees()",
        "lineno": 410,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 2670,
        "code": "\n        gameActive\n    {\n        require(tx",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/4/0x656038e97cee7c095673f7b9fad695b323a6f098.sol",
        "function": "getBalance()",
        "lineno": 173,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 3028,
        "code": "s] = constantFactor / globalFactor;\n        emit onWithdraw(_cu",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/4/0x656038e97cee7c095673f7b9fad695b323a6f098.sol",
        "function": "withdraw(uint256)",
        "lineno": 211,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 3574,
        "code": "\n        ",
        "debug": "",
        "description": "Function receiveApproval(address,uint256,address,bytes) retrieves the transaction origin (tx.origin) using the ORIGIN opcode. Use msg.sender instead.\nSee also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin",
        "filename": "/unique_chucks/4/0x656038e97cee7c095673f7b9fad695b323a6f098.sol",
        "function": "receiveApproval(address,uint256,address,bytes)",
        "lineno": 178,
        "title": "Use of tx.origin",
        "type": "Warning"
      },
      {
        "address": 3879,
        "code": "      devFeeBalance = devFeeBalance.add(devFee);\n        // Adjust ledger",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/4/0x656038e97cee7c095673f7b9fad695b323a6f098.sol",
        "function": "receiveApproval(address,uint256,address,bytes)",
        "lineno": 181,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 4092,
        "code": ".sub(devFee);\n        personalFactorLedge",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/4/0x656038e97cee7c095673f7b9fad695b323a6f098.sol",
        "function": "deposit(address,uint256)",
        "lineno": 183,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 5735,
        "code": "      p",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_WheelOf0xBitcoin_0: 0x8f4ffcb100000000000000000000000000000000000000000000000000000000\ncalldatasize_WheelOf0xBitcoin: 0x4\ncalldata_WheelOf0xBitcoin_4 + calldata_WheelOf0xBitcoin_32 + 68: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/4/0x656038e97cee7c095673f7b9fad695b323a6f098.sol",
        "function": "receiveApproval(address,uint256,address,bytes)",
        "lineno": 203,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 5981,
        "code": "ce = devF",
        "debug": "",
        "description": "Function depositAndSpin(address,uint256) retrieves the transaction origin (tx.origin) using the ORIGIN opcode. Use msg.sender instead.\nSee also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin",
        "filename": "/unique_chucks/4/0x656038e97cee7c095673f7b9fad695b323a6f098.sol",
        "function": "depositAndSpin(address,uint256)",
        "lineno": 298,
        "title": "Use of tx.origin",
        "type": "Warning"
      },
      {
        "address": 6286,
        "code": "t\n        balanceLedger_[_customerAddress] = tokenBalanceOf(_customerAddress",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/4/0x656038e97cee7c095673f7b9fad695b323a6f098.sol",
        "function": "depositAndSpin(address,uint256)",
        "lineno": 299,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 7069,
        "code": "se);\n    ",
        "debug": "",
        "description": "Function spinTokens(uint256) retrieves the transaction origin (tx.origin) using the ORIGIN opcode. Use msg.sender instead.\nSee also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin",
        "filename": "/unique_chucks/4/0x656038e97cee7c095673f7b9fad695b323a6f098.sol",
        "function": "spinTokens(uint256)",
        "lineno": 97,
        "title": "Use of tx.origin",
        "type": "Warning"
      },
      {
        "address": 8219,
        "code": "     {\n            uint256 w",
        "debug": "block_number: 0x3784a0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_WheelOf0xBitcoin_4 +\n1: 0x80004000\ncalldata_WheelOf0xBitcoin_0: 0x6c7131a600000000000000000000000000000000000000000000000000000000\ncalldatasize_WheelOf0xBitcoin: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer underflow exists in the function `finishSpin(address)`.\nThe subtraction may result in a value < 0.",
        "filename": "/unique_chucks/4/0x656038e97cee7c095673f7b9fad695b323a6f098.sol",
        "function": "finishSpin(address)",
        "lineno": 442,
        "title": "Integer Underflow",
        "type": "Warning"
      }
    ],
    "success": true
  }
}