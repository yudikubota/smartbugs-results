{"error": null, "issues": [{"address": 1974, "code": "ool capNotReached = tokensSold ", "debug": "", "description": "This contract executes a message call to an address found at storage slot 0. This storage slot can be written to by calling the function `setToken(address)`. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/25/0x71a311e90d2cf8b7d80d95e4bdf03da037653605.sol", "function": "fallback", "lineno": 230, "title": "Message call to external contract", "type": "Warning"}, {"address": 2576, "code": "dsaleLive = false;\n    bool public crowdsal", "debug": "The exception is triggered under the following conditions:\n\ncalldata_SynTokenCrowdsale_4: 0x0\nstorage_11: 0x0\ncalldata_SynTokenCrowdsale_0: 0x4836f82300000000000000000000000000000000000000000000000000000000\ncalldatasize_SynTokenCrowdsale: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/25/0x71a311e90d2cf8b7d80d95e4bdf03da037653605.sol", "function": "_function_0x4836f823", "lineno": 163, "title": "Exception state", "type": "Informational"}, {"address": 2791, "code": "ss) adminOnly {\n ", "debug": "The exception is triggered under the following conditions:\n\nstorage_2: 0x0\ncalldata_SynTokenCrowdsale_4: 0x0\nstorage_11: 0x0\ntimestamp: 0x1\nstorage_10: 0x0\ncaller: 0x0\ncalldata_SynTokenCrowdsale_0: 0x889eaa0d00000000000000000000000000000000000000000000000000000000\ncalldatasize_SynTokenCrowdsale: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/25/0x71a311e90d2cf8b7d80d95e4bdf03da037653605.sol", "function": "nextRate(uint256)", "lineno": 262, "title": "Exception state", "type": "Informational"}, {"address": 11252, "code": "ates[_rate] < ra", "debug": "timestamp: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_6: 0x0\nstorage_9: 0x1\nstorage_2: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_12: 0xff00\nstorage_1: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldatasize_SynTokenCrowdsale: 0x3\n", "description": "A possible integer underflow exists in the function `fallback`.\nThe subtraction may result in a value < 0.", "filename": "/unique_chucks/25/0x71a311e90d2cf8b7d80d95e4bdf03da037653605.sol", "function": "fallback", "lineno": 253, "title": "Integer Underflow", "type": "Warning"}, {"address": 11519, "code": "ress _tokenAddress){\n    token = S", "debug": "", "description": "This contract executes a message call to an address found at storage slot 0. This storage slot can be written to by calling the function `setToken(address)`. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/25/0x71a311e90d2cf8b7d80d95e4bdf03da037653605.sol", "function": "fallback", "lineno": 257, "title": "Message call to external contract", "type": "Warning"}, {"address": 11519, "code": "ress _tokenAddress){\n    token = S", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 11712\n", "filename": "/unique_chucks/25/0x71a311e90d2cf8b7d80d95e4bdf03da037653605.sol", "function": "fallback", "lineno": 257, "title": "Multiple Calls", "type": "Information"}, {"address": 11519, "code": "ress _tokenAddress){\n    token = S", "debug": "", "description": "A possible transaction order independence vulnerability exists in function fallback. The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/25/0x71a311e90d2cf8b7d80d95e4bdf03da037653605.sol", "function": "fallback", "lineno": 257, "title": "Transaction order dependence", "type": "Warning"}, {"address": 11712, "code": "(_tokenAddress);\n}\n\n\n", "debug": "", "description": "This contract executes a message call to an address found at storage slot 0. This storage slot can be written to by calling the function `setToken(address)`. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/25/0x71a311e90d2cf8b7d80d95e4bdf03da037653605.sol", "function": "fallback", "lineno": 258, "title": "Message call to external contract", "type": "Warning"}, {"address": 11712, "code": "(_tokenAddress);\n}\n\n\n", "debug": "", "description": "A possible transaction order independence vulnerability exists in function fallback. The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/25/0x71a311e90d2cf8b7d80d95e4bdf03da037653605.sol", "function": "fallback", "lineno": 258, "title": "Transaction order dependence", "type": "Warning"}, {"address": 11795, "code": "n initCrowdsale(uint2", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/25/0x71a311e90d2cf8b7d80d95e4bdf03da037653605.sol", "function": "fallback", "lineno": 262, "title": "State change after external call", "type": "Warning"}], "success": true}