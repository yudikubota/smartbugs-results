{
  "contract": "0x4730fb1463a6f1f44aeb45f6c5c422427f37f4d0",
  "tool": "mythril",
  "start": 1563496765.208835,
  "end": 1563497461.611794,
  "duration": 696.4029591083527,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 258,
        "code": "e same length\n    require(_from.length == _to.length &&\n            _to.length ==_values.length &&\n            _values.length == _fees.length &&\n            _fees.length == _nonces.length &&\n            _nonces.length == _v.length &&\n            _v.length == _r.length &&\n            _r.length == _s.length);\n\n    for(uint i; i < _from.length; i++) {\n      transferPreSigned(_from[i],\n                        _to[i],\n                        _values[i],\n                        _fees[i],\n                        _nonces[i],\n                        _v[i],\n                        _r[i],\n                        _s[i]);\n    }\n\n    return true;\n  }\n\n\n  function transferPreSignedMany(address _from,\n                                 address[] _tos,\n                                 uint256[] _values,\n                                 uint256 _fee,\n                                 uint256 _nonce,\n                                 uint8 _v,\n                                 bytes32 _r,\n                                 bytes32 _s) public returns (bool) {\n   require(_tos.length == _values.length);\n   uint256 total = getTotal(_tos, _",
        "debug": "calldata_SignedTransferToken_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_SignedTransferToken_0: 0x1a2789e00000000000000000000000000000000000000000000000000000000\ncalldatasize_SignedTransferToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `transferPreSignedBulk(address[],address[],uint256[],uint256[],uint256[],uint8[],bytes32[],bytes32[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/6/0x4730fb1463a6f1f44aeb45f6c5c422427f37f4d0.sol",
        "function": "transferPreSignedBulk(address[],address[],uint256[],uint256[],uint256[],uint8[],bytes32[],bytes32[])",
        "lineno": 463,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1758,
        "code": "_fee);\n\n   bytes32 calcHash = calculateManyHash(_from, _tos, _values, _fee, _nonce);\n\n   require(isValidSignature(_from, calcHash, _v, _r, _s));\n   require(balances[_from] >= total);\n   require(!executedSettlements[_from][calcHash]);\n\n   executedSettlements[_from][calcHash] = true;\n\n   // transfer to each recipient and take fee at the end\n   for(uint i; i < _tos.length; i++) {\n     // Move tokens\n     balances[_from] = balances[_from].sub(_values[i]);\n     balances[_tos[i]] = balances[_tos[i]].add(_values[i]);\n     Transfer(_from, _tos[i], _values[i]);\n   }\n\n   // Move fee\n   balances[_from] = balances[_from].sub(_fee);\n   balances[msg.sender] = balances[msg.sender].add(_fee);\n   Transfer(_from, msg.sender, _fee);\n\n   TransferPreSignedMany(_from, msg.sender, total, _fee);\n\n   return true;\n  }\n\n  function getTotal(address[] _tos, uint256[] _values, uint256 _fee) private view returns (uint256)  {\n    uint256 total = _fee;\n\n    for(uint i; i < _tos.length; i++) {\n      total = total.add(_values[i]); // sum of all the values + fee\n      require(_tos[i] != address(0)); // check that the recipient is a valid address\n    }\n\n    return total;\n  }\n\n  /**\n  * @dev Calculates transfer hash for transferPreSignedMany\n  */\n  function calculateManyHash(address _from, address[] _tos, uint256[] _values, uint256 _fee, ui",
        "debug": "calldata_SignedTransferToken_32 + 4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_SignedTransferToken_0: 0xa260975900000000000000000000000000000000000000000000000000000000\ncalldatasize_SignedTransferToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `transferPreSignedMany(address,address[],uint256[],uint256,uint256,uint8,bytes32,bytes32)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/6/0x4730fb1463a6f1f44aeb45f6c5c422427f37f4d0.sol",
        "function": "transferPreSignedMany(address,address[],uint256[],uint256,uint256,uint8,bytes32,bytes32)",
        "lineno": 496,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2145,
        "code": "\n  function isValidSignature(address _signer, bytes32 _hash, uint8 _v, bytes32 _r, bytes32 _s) public pure returns (bool) {\n    return _signer == ecrecover(\n            keccak256(\"\\x19Ethereum Signed Message:\\n32\", _hash),\n      ",
        "debug": "calldata_SignedTransferToken_32 + 4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_SignedTransferToken_0: 0xccd89ecd00000000000000000000000000000000000000000000000000000000\ncalldatasize_SignedTransferToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `calculateManyHash(address,address[],uint256[],uint256,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/6/0x4730fb1463a6f1f44aeb45f6c5c422427f37f4d0.sol",
        "function": "calculateManyHash(address,address[],uint256[],uint256,uint256)",
        "lineno": 551,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 5359,
        "code": "n transferPreSigned(address _from,\n                             address _to,\n                             uint256 _value,\n                ",
        "debug": "",
        "description": "The return value of an external call is not checked. Note that execution continue even if the called contract throws.",
        "filename": "/unique_chucks/6/0x4730fb1463a6f1f44aeb45f6c5c422427f37f4d0.sol",
        "function": "isValidSignature(address,bytes32,uint8,bytes32,bytes32)",
        "lineno": 575,
        "title": "Unchecked CALL return value",
        "type": "Informational"
      },
      {
        "address": 7864,
        "code": "over(\n            keccak256(\"\\x19Ethereum Signed Message:\\n32\", _hash),\n",
        "debug": "calldata_SignedTransferToken_4 + calldata_SignedTransferToken_32 + 4: 0x800000000000000000000000000000000000000000000000000000000000000\ncalldata_SignedTransferToken_0: 0xccd89ecd00000000000000000000000000000000000000000000000000000000\ncalldatasize_SignedTransferToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `calculateManyHash(address,address[],uint256[],uint256,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/6/0x4730fb1463a6f1f44aeb45f6c5c422427f37f4d0.sol",
        "function": "calculateManyHash(address,address[],uint256[],uint256,uint256)",
        "lineno": 553,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 7915,
        "code": "over(\n            keccak256(\"\\x19Ethereum Signed Message:\\n32\", _hash),\n",
        "debug": "calldata_SignedTransferToken_4 + calldata_SignedTransferToken_32 + 4: 0x2\nmem_128 +\n32 +\n32*\ncalldata_SignedTransferToken_4 + calldata_SignedTransferToken_32 + 4: 0x800000000000000000000000000000000000000000000000000000000000000\ncalldata_SignedTransferToken_0: 0xccd89ecd00000000000000000000000000000000000000000000000000000000\ncalldatasize_SignedTransferToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `calculateManyHash(address,address[],uint256[],uint256,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/6/0x4730fb1463a6f1f44aeb45f6c5c422427f37f4d0.sol",
        "function": "calculateManyHash(address,address[],uint256[],uint256,uint256)",
        "lineno": 553,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 10038,
        "code": "face.",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_SignedTransferToken_4: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncalldata_SignedTransferToken_32 + 4: 0x57f25cd000000000000000000000000000000000000000000000000000000000\ncalldata_SignedTransferToken_0: 0xd73dd62300000000000000000000000000000000000000000000000000000000\ncalldatasize_SignedTransferToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `increaseApproval(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/6/0x4730fb1463a6f1f44aeb45f6c5c422427f37f4d0.sol",
        "function": "increaseApproval(address,uint256)",
        "lineno": 92,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 10051,
        "code": "ntract ERC20In",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_SignedTransferToken_32 + 36: 0x1\ncalldata_SignedTransferToken_32 + 68: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_SignedTransferToken_0: 0xe8f9566600000000000000000000000000000000000000000000000000000000\ncalldatasize_SignedTransferToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/6/0x4730fb1463a6f1f44aeb45f6c5c422427f37f4d0.sol",
        "function": "transferPreSigned(address,address,uint256,uint256,uint256,uint8,bytes32,bytes32)",
        "lineno": 94,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}