{
  "contract": "0x554ffc77f4251a9fb3c0e3590a6a205f8d4e067d",
  "tool": "mythril",
  "start": 1563356059.7697425,
  "end": 1563356332.0865567,
  "duration": 272.31681418418884,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 3310,
        "debug": "calldata_ZmineToken_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_7: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\nUDiv(storage_3,_256): 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_3: 0x0\ncaller: 0x0\ncalldata_ZmineToken_0: 0x42966c6800000000000000000000000000000000000000000000000000000000\ncalldatasize_ZmineToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer underflow exists in the function `burn(uint256)`.\nThe subtraction may result in a value < 0.",
        "filename": "/unique_contracts/0x554ffc77f4251a9fb3c0e3590a6a205f8d4e067d.sol",
        "function": "burn(uint256)",
        "lineno": 233,
        "title": "Integer Underflow",
        "type": "Warning"
      },
      {
        "address": 5811,
        "code": ";\n   ",
        "debug": "calldata_ZmineToken_32 + 4: 0x57f25cd000000000000000000000000000000000000000000000000000000000\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_ZmineToken_4: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncalldata_ZmineToken_0: 0xd73dd62300000000000000000000000000000000000000000000000000000000\ncalldatasize_ZmineToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `_function_0xd73dd623`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x554ffc77f4251a9fb3c0e3590a6a205f8d4e067d.sol",
        "function": "_function_0xd73dd623",
        "lineno": 31,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 5824,
        "code": " c;\n    }\n}\n\n/",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_ZmineToken_4: 0x1\ncalldata_ZmineToken_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_ZmineToken_0: 0xd73dd62300000000000000000000000000000000000000000000000000000000\ncalldatasize_ZmineToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0x554ffc77f4251a9fb3c0e3590a6a205f8d4e067d.sol",
        "function": "_function_0xd73dd623",
        "lineno": 32,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}