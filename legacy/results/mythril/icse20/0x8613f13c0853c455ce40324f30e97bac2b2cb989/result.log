{"error": null, "issues": [{"address": 1093, "code": "Holders; j++) {\n            wlist1[j] = holders[j];\n            wlist2[j] = balances[holders[j]];\n        }\n        return (wlist1,wlist2);\n    }\n\n    function closeCrowdsale() public onlyOwner  {\n\n        crowdsaleClosed = true;\n    }\n\n    function safeWithdrawal() public onlyOwner {\n        require(crowdsaleClosed);\n        require(!fundingGoalReached);\n\n        if (msg.sender.send(amountRaised)) {\n  ", "debug": "storage_3: 0x2\nmem_128 + 32 + 32*storage_3: 0x84210421084001f00037c1056456000800070a1e0f00037c00008264da0803e\ncalldata_TokenTemplate_0: 0x113e0800000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenTemplate: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/27/0x8613f13c0853c455ce40324f30e97bac2b2cb989.sol", "function": "fallback", "lineno": 257, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1830, "code": "     whitelist[_addresses[i]] = true;\n                holders[_totalHolders] = _addresses[i];\n                _totalHolders++;\n            }\n        }\n        return true;\n    }\n\n    function getWhitelist() public view returns (address[] addresses) {\n\n        address[] memory wlist = new address[](_totalHolders);\n\n        for (uint256 j=0; j<_totalHolders; j++) {\n            wlist[j] = holders[j];\n        }\n      ", "debug": "calldata_TokenTemplate_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_TokenTemplate_0: 0x9c09c83500000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenTemplate: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `enableWhitelist(address[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/27/0x8613f13c0853c455ce40324f30e97bac2b2cb989.sol", "function": "enableWhitelist(address[])", "lineno": 235, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2142, "code": "pproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, address(this), data);\n        return true;\n    }\n\n\n    // ------------------------------------------------------------------------\n    // Owner can transfer out any accidentally sent ERC20 tokens\n    // ---------------------------------------------------------------", "debug": "calldata_TokenTemplate_32 + 36: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_TokenTemplate_0: 0xcae9ca5100000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenTemplate: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `approveAndCall(address,uint256,bytes)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/27/0x8613f13c0853c455ce40324f30e97bac2b2cb989.sol", "function": "approveAndCall(address,uint256,bytes)", "lineno": 217, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2783, "code": "     ", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TokenTemplate_32_+_4: 0xc050fffff320c00020003d81af848540000000000000040000110001bd062022\ncalldata_TokenTemplate_32 + 36: 0xfe51000008ce80008001c1d33616877ffffffffffffff7ffffe10000398d50ac\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xfe51000008ce80008001c1d33616877ffffffffffffff7ffffe10000398d50ac\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TokenTemplate_4: 0xfe51000008ce80008001c1d33616877ffffffffffffff7ffffe10000398d50ac\ncalldata_TokenTemplate_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenTemplate: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `transferFrom(address,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/27/0x8613f13c0853c455ce40324f30e97bac2b2cb989.sol", "function": "transferFrom(address,address,uint256)", "lineno": 9, "title": "Integer Overflow ", "type": "Warning"}, {"address": 3215, "code": "      req", "debug": "The exception is triggered under the following conditions:\n\nstorage_3: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_TokenTemplate_0: 0x113e0800000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenTemplate: 0x4\nmem_128 + 32 + 32*storage_3: 0x0\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/27/0x8613f13c0853c455ce40324f30e97bac2b2cb989.sol", "function": "fallback", "lineno": 271, "title": "Exception state", "type": "Informational"}, {"address": 5408, "code": "otalHolders; j+", "debug": "storage_3: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TokenTemplate_cpy: 0x0\ncalldata_TokenTemplate_4 + calldata_TokenTemplate_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_4: 0x0\ncaller: 0x0\ncalldata_TokenTemplate_0: 0x9c09c83500000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenTemplate: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `enableWhitelist(address[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/27/0x8613f13c0853c455ce40324f30e97bac2b2cb989.sol", "function": "enableWhitelist(address[])", "lineno": 247, "title": "Integer Overflow ", "type": "Warning"}, {"address": 6413, "code": "transfer out any accidentally sent ERC20 tokens\n    // ---------------------------------", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/27/0x8613f13c0853c455ce40324f30e97bac2b2cb989.sol", "function": "approveAndCall(address,uint256,bytes)", "lineno": 223, "title": "Message call to external contract", "type": "Warning"}], "success": true}