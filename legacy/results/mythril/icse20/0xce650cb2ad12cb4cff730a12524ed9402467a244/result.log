{"error": null, "issues": [{"address": 6995, "code": "oans;\n\n\n    // Ev", "debug": "The exception is triggered under the following conditions:\n\ncalldata_IUserData_4: 0x0\nstorage_11: 0x0\ncalldata_IUserData_0: 0x22af00fa00000000000000000000000000000000000000000000000000000000\ncalldatasize_IUserData: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/16/0xce650cb2ad12cb4cff730a12524ed9402467a244.sol", "function": "_function_0x22af00fa", "lineno": 41, "title": "Exception state", "type": "Informational"}, {"address": 8012, "code": ".length;\n    }\n    function toAddress", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 8012\n", "filename": "/unique_chucks/16/0xce650cb2ad12cb4cff730a12524ed9402467a244.sol", "function": "payLoan()", "lineno": 318, "title": "Multiple Calls", "type": "Information"}, {"address": 8012, "code": ".length;\n    }\n    function toAddress", "debug": "", "description": "A possible transaction order independence vulnerability exists in function payLoan(). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/16/0xce650cb2ad12cb4cff730a12524ed9402467a244.sol", "function": "payLoan()", "lineno": 318, "title": "Transaction order dependence", "type": "Warning"}, {"address": 9039, "code": "    } else {\n     ", "debug": "The exception is triggered under the following conditions:\n\nstorage_3 +\n660301456019777184113296434797620819555017468543624515662331739614079884729 +\n4*storage_9: 0x0\nstorage_9: 0x0\nstorage_11: 0x1\nstorage_6: 0x0\nstorage_7: 0xffffffffffffffffffffffffffffffffffffffff00\ncaller: 0x0\ncalldata_IUserData_0: 0x8fced62600000000000000000000000000000000000000000000000000000000\ncalldatasize_IUserData: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/16/0xce650cb2ad12cb4cff730a12524ed9402467a244.sol", "function": "resolveBet()", "lineno": 281, "title": "Exception state", "type": "Informational"}, {"address": 10425, "code": "t) external onlyOwner {\n        req", "debug": "storage_8: 0x9c9efb7ae5acd378025256a3945f5859076e809243093d9ecae2636c9fd28979\ncalldata_IUserData_4: 0xc290137095b13347e55005a6dc184559e0489f1233480050d0fb4bba17d34179\nbalance_at_1461501637330902918203684832716283019655932542975 & 0: 0xc290137095b13347e55005a6dc184559e0489f1233480050d0fb4bba17d34179\nstorage_6: 0x0\ncaller: 0x0\ncalldata_IUserData_0: 0xd6d30a5100000000000000000000000000000000000000000000000000000000\ncalldatasize_IUserData: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `increaseJackpot(uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/16/0xce650cb2ad12cb4cff730a12524ed9402467a244.sol", "function": "increaseJackpot(uint256)", "lineno": 158, "title": "Integer Overflow ", "type": "Warning"}, {"address": 11099, "code": ";\n\ncontract IUserD", "debug": "storage_12: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_6: 0x0\ncaller: 0x0\ncalldata_IUserData_0: 0x41c0e1b500000000000000000000000000000000000000000000000000000000\ncalldatasize_IUserData: 0x4\nretval_10876: 0x0\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `kill()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/16/0xce650cb2ad12cb4cff730a12524ed9402467a244.sol", "function": "kill()", "lineno": 1, "title": "Integer Overflow ", "type": "Warning"}], "success": true}