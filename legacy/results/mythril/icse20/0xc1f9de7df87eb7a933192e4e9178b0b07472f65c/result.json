{
  "contract": "0xc1f9de7df87eb7a933192e4e9178b0b07472f65c",
  "tool": "mythril",
  "start": 1563403651.6576638,
  "end": 1563403655.443631,
  "duration": 3.7859671115875244,
  "analysis": {
    "success": false,
    "error": "Solc experienced a fatal error (code 1).\n\n/unique_contracts/0xc1f9de7df87eb7a933192e4e9178b0b07472f65c.sol:59:1: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use \"constructor(...) { ... }\" instead.\nfunction Contest() payable{\r\n^ (Relevant source part starts here and spans across multiple lines).\n/unique_contracts/0xc1f9de7df87eb7a933192e4e9178b0b07472f65c.sol:79:1: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\nthrow;\r\n^---^\n/unique_contracts/0xc1f9de7df87eb7a933192e4e9178b0b07472f65c.sol:81:1: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\nthrow;\r\n^---^\n/unique_contracts/0xc1f9de7df87eb7a933192e4e9178b0b07472f65c.sol:88:13: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n            throw;\r\n            ^---^\n/unique_contracts/0xc1f9de7df87eb7a933192e4e9178b0b07472f65c.sol:90:13: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n            throw;\r\n            ^---^\n/unique_contracts/0xc1f9de7df87eb7a933192e4e9178b0b07472f65c.sol:92:13: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n            throw;\r\n            ^---^\n/unique_contracts/0xc1f9de7df87eb7a933192e4e9178b0b07472f65c.sol:106:13: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n            throw;\r\n            ^---^\n/unique_contracts/0xc1f9de7df87eb7a933192e4e9178b0b07472f65c.sol:108:13: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n            throw;\r\n            ^---^\n/unique_contracts/0xc1f9de7df87eb7a933192e4e9178b0b07472f65c.sol:110:13: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n            throw;\r\n            ^---^\n/unique_contracts/0xc1f9de7df87eb7a933192e4e9178b0b07472f65c.sol:116:17: Warning: Use of the \"var\" keyword is deprecated.\n            for(var i = 0; i<winners.length; i++){//from the first to the last\r\n                ^---^\n/unique_contracts/0xc1f9de7df87eb7a933192e4e9178b0b07472f65c.sol:121:25: Warning: Use of the \"var\" keyword is deprecated.\n                    for(var j = getCandidatePosition(candidate, i+1); j>i; j--){\r\n                        ^---^\n/unique_contracts/0xc1f9de7df87eb7a933192e4e9178b0b07472f65c.sol:201:51: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n        if(!c4c.send(this.balance/10000*c4cfee))  throw;\r\n                                                  ^---^\n/unique_contracts/0xc1f9de7df87eb7a933192e4e9178b0b07472f65c.sol:203:71: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n        if(prizeOwner!=0 && !owner.send(totalPrize/10000*prizeOwner)) throw;\r\n                                                                      ^---^\n/unique_contracts/0xc1f9de7df87eb7a933192e4e9178b0b07472f65c.sol:204:77: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n        if(prizeReferee!=0 && !referee.send(totalPrize/10000*prizeReferee)) throw;\r\n                                                                            ^---^\n/unique_contracts/0xc1f9de7df87eb7a933192e4e9178b0b07472f65c.sol:206:90: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n            if(prizeWinners[i]!=0 && !winners[i].send(totalPrize/10000*prizeWinners[i])) throw;\r\n                                                                                         ^---^\n/unique_contracts/0xc1f9de7df87eb7a933192e4e9178b0b07472f65c.sol:211:55: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n                    if(!luckyVoters[j].send(amount))  throw;\r\n                                                      ^---^\n/unique_contracts/0xc1f9de7df87eb7a933192e4e9178b0b07472f65c.sol:214:44: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n        else if(!owner.send(this.balance)) throw;//if there is no lucky voter, give remainder to the owner\r\n                                           ^---^\n/unique_contracts/0xc1f9de7df87eb7a933192e4e9178b0b07472f65c.sol:60:7: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0x87B0DE512502f3e86fD22654B72a640c8e0f59cc'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals\nc4c = 0x87b0de512502f3e86fd22654b72a640c8e0f59cc;\r\n      ^----------------------------------------^\n/unique_contracts/0xc1f9de7df87eb7a933192e4e9178b0b07472f65c.sol:116:17: Warning: The type of this variable was inferred as uint8, which can hold values between 0 and 255. This is probably not desired. Use an explicit type to silence this warning.\n            for(var i = 0; i<winners.length; i++){//from the first to the last\r\n                ^-------^\n/unique_contracts/0xc1f9de7df87eb7a933192e4e9178b0b07472f65c.sol:161:16: Warning: Using contract member \"balance\" inherited from the address type is deprecated. Convert the contract to \"address\" type to access the member, for example use \"address(contract).balance\" instead.\n            if(this.balance>10000) distributePrizes(); //more than 10000 wei so every party gets at least 1 wei (if s.b. gets 0.01%)\r\n               ^----------^\n/unique_contracts/0xc1f9de7df87eb7a933192e4e9178b0b07472f65c.sol:162:13: Warning: Invoking events without \"emit\" prefix is deprecated.\n            ContestClosed(totalPrize, winners, luckyVoters);\r\n            ^---------------------------------------------^\n/unique_contracts/0xc1f9de7df87eb7a933192e4e9178b0b07472f65c.sol:173:14: Error: Uninitialized mapping. Mappings cannot be created dynamically, you have to assign them from a state variable.\n             mapping (uint => bool) chosen;\r\n             ^---------------------------^\n/unique_contracts/0xc1f9de7df87eb7a933192e4e9178b0b07472f65c.sol:201:22: Warning: Using contract member \"balance\" inherited from the address type is deprecated. Convert the contract to \"address\" type to access the member, for example use \"address(contract).balance\" instead.\n        if(!c4c.send(this.balance/10000*c4cfee))  throw;\r\n                     ^----------^\n/unique_contracts/0xc1f9de7df87eb7a933192e4e9178b0b07472f65c.sol:202:22: Warning: Using contract member \"balance\" inherited from the address type is deprecated. Convert the contract to \"address\" type to access the member, for example use \"address(contract).balance\" instead.\n        totalPrize = this.balance;\r\n                     ^----------^\n/unique_contracts/0xc1f9de7df87eb7a933192e4e9178b0b07472f65c.sol:208:16: Warning: Using contract member \"balance\" inherited from the address type is deprecated. Convert the contract to \"address\" type to access the member, for example use \"address(contract).balance\" instead.\n            if(this.balance>luckyVoters.length){//if there is ether left to be distributed amongst the lucky voters\r\n               ^----------^\n/unique_contracts/0xc1f9de7df87eb7a933192e4e9178b0b07472f65c.sol:209:31: Warning: Using contract member \"balance\" inherited from the address type is deprecated. Convert the contract to \"address\" type to access the member, for example use \"address(contract).balance\" instead.\n                uint amount = this.balance/luckyVoters.length;\r\n                              ^----------^\n/unique_contracts/0xc1f9de7df87eb7a933192e4e9178b0b07472f65c.sol:214:29: Warning: Using contract member \"balance\" inherited from the address type is deprecated. Convert the contract to \"address\" type to access the member, for example use \"address(contract).balance\" instead.\n        else if(!owner.send(this.balance)) throw;//if there is no lucky voter, give remainder to the owner\r\n                            ^----------^\n",
    "issues": []
  }
}