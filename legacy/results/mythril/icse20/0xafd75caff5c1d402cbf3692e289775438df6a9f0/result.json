{
  "contract": "0xafd75caff5c1d402cbf3692e289775438df6a9f0",
  "tool": "mythril",
  "start": 1563471830.1885722,
  "end": 1563472115.6084762,
  "duration": 285.41990399360657,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 1584,
        "code": "rns (bool success) {\n        //Verifies if the account is frozen\n        require(frozenAccount[_spender] != true);\n\n        allowed[msg.sender][_spender] = _value;\n        emit Approval(msg.sender, _spender, _value);\n\n        //call the receiveApproval function on the contract you want to be notified. This crafts the function signature manually so one doesn't have to include a contract in here just for this.\n        //receiveApproval(address _from, uint256 _value, address _tokenContract, bytes _extraData)\n        //it is assumed when one does this that the call *should* succeed, otherwise one would use vanilla approve instead.\n        require(_spender.call(bytes4(bytes32(keccak256(\"receiveApproval(address,uint256,address,bytes)\"))), msg.sender, _value, this, _extraData));\n        return true;\n    }\n\n    function allowance(address _owner, address _spender) public constant returns (uint256 remaini",
        "debug": "calldata_ABC_32 + 36: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_ABC_0: 0xcae9ca5100000000000000000000000000000000000000000000000000000000\ncalldatasize_ABC: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `approveAndCall(address,uint256,bytes)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/1/0xafd75caff5c1d402cbf3692e289775438df6a9f0.sol",
        "function": "approveAndCall(address,uint256,bytes)",
        "lineno": 88,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 4226,
        "code": "ezeAccount(address _targe",
        "debug": "calldata_ABC_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_5: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\nUDiv(storage_4,_256): 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_4: 0x0\ncaller: 0x0\ncalldata_ABC_0: 0x9465c11400000000000000000000000000000000000000000000000000000000\ncalldatasize_ABC: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer underflow exists in the function `vanishToken(uint256)`.\nThe subtraction may result in a value < 0.",
        "filename": "/unique_chucks/1/0xafd75caff5c1d402cbf3692e289775438df6a9f0.sol",
        "function": "vanishToken(uint256)",
        "lineno": 123,
        "title": "Integer Underflow",
        "type": "Warning"
      },
      {
        "address": 5438,
        "code": "       return true;\n    }\n\t\n",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\nUDiv(storage_4,_256): 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncalldata_ABC_4: 0x57f25cd000000000000000000000000000000000000000000000000000000000\nstorage_4: 0x0\ncaller: 0x0\ncalldata_ABC_0: 0xc475cdf500000000000000000000000000000000000000000000000000000000\ncalldatasize_ABC: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `issueNew(uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/1/0xafd75caff5c1d402cbf3692e289775438df6a9f0.sol",
        "function": "issueNew(uint256)",
        "lineno": 111,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 5454,
        "code": "tion vanishToken( uint25",
        "debug": "calldata_ABC_4: 0x57f25cd000000000000000000000000000000000000000000000000000000000\nstorage_5: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_4: 0x0\ncaller: 0x0\ncalldata_ABC_0: 0xc475cdf500000000000000000000000000000000000000000000000000000000\ncalldatasize_ABC: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `issueNew(uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/1/0xafd75caff5c1d402cbf3692e289775438df6a9f0.sol",
        "function": "issueNew(uint256)",
        "lineno": 114,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 6344,
        "code": "ender, _value, this, _extraData));\n        return true;\n    }\n\n    function allowance(address _owner, address _spender) public co",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/1/0xafd75caff5c1d402cbf3692e289775438df6a9f0.sol",
        "function": "approveAndCall(address,uint256,bytes)",
        "lineno": 98,
        "title": "Message call to external contract",
        "type": "Warning"
      }
    ],
    "success": true
  }
}