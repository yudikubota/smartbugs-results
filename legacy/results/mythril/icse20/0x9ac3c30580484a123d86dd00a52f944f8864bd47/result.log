{"error": null, "issues": [{"address": 1276, "code": "re(balances[owner] + msg.value >= balances[owner]);// \u9632\u6b62\u7570\u5473\n\n        balances[msg.sender] = balances[msg.sender].add(msg.value);\n    }\n\n\n    function withdraw(uint withdrawAmount) public {\n        if(balances[msg.sender] >= withdrawAmount) {\n            balances[msg.sender] -= withdrawAmount;\n            msg.sender.t", "debug": "calldata_WindGreenGainToken_32 + 36: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_WindGreenGainToken_0: 0xcae9ca5100000000000000000000000000000000000000000000000000000000\ncalldatasize_WindGreenGainToken: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `approveAndCall(address,uint256,bytes)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/18/0x9ac3c30580484a123d86dd00a52f944f8864bd47.sol", "function": "approveAndCall(address,uint256,bytes)", "lineno": 229, "title": "Integer Overflow ", "type": "Warning"}, {"address": 5046, "code": "msg.sender] >= withdrawAmount) {\n            balances[msg.sender] -= withdrawAm", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/18/0x9ac3c30580484a123d86dd00a52f944f8864bd47.sol", "function": "approveAndCall(address,uint256,bytes)", "lineno": 236, "title": "Message call to external contract", "type": "Warning"}, {"address": 5846, "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/18/0x9ac3c30580484a123d86dd00a52f944f8864bd47.sol", "function": "transferAnyERC20Token(address,uint256)", "lineno": 241, "title": "Message call to external contract", "type": "Warning"}, {"address": 6237, "code": ");\n  ", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\nUDiv(storage_0,_256): 0x3c72037fe5b9a79b21f9a4fbdccd0e99bf3ffe224732ff396bf8248c803fc13e\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xbda3d366eb3fffb20072d799bd6df3c674477e073df2d113d01e0f6d65986dfd\ncallvalue: 0x8b43a7001247ffdacf447b042e60e5230580640d0854a3da98165586b49c6801\ncalldata_WindGreenGainToken_0: 0xd0e30db000000000000000000000000000000000000000000000000000000000\ncalldatasize_WindGreenGainToken: 0x4\n", "description": "A possible integer overflow exists in the function `deposit()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/18/0x9ac3c30580484a123d86dd00a52f944f8864bd47.sol", "function": "deposit()", "lineno": 19, "title": "Integer Overflow ", "type": "Warning"}], "success": true}