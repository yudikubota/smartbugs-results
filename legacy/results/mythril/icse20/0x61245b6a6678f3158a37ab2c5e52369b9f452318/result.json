{
  "contract": "0x61245b6a6678f3158a37ab2c5e52369b9f452318",
  "tool": "mythril",
  "start": 1563448453.7840025,
  "end": 1563449028.5848718,
  "duration": 574.8008692264557,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 954,
        "code": "nt256) {\n        require(isCurrency(symbol));\n        return updateTimestamp;\n    }\n    \n    function getRateFor(string symbol) public returns ",
        "debug": "calldata_Token_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_Token_0: 0x32e5e59500000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `getTimestamp(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/2/0x61245b6a6678f3158a37ab2c5e52369b9f452318.sol",
        "function": "getTimestamp(string)",
        "lineno": 58,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 966,
        "code": "nt256) {\n        require(isCurrency(symbol));\n        return updateTimestamp;\n    }\n    \n    function getRateFor(string symbol) public returns ",
        "debug": "calldata_Token_4 + calldata_Token_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8\ncalldata_Token_0: 0x32e5e59500000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `getTimestamp(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/2/0x61245b6a6678f3158a37ab2c5e52369b9f452318.sol",
        "function": "getTimestamp(string)",
        "lineno": 58,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 975,
        "code": "nt256) {\n        require(isCurrency(symbol));\n        return updateTimestamp;\n    }\n    \n    function getRateFor(string symbol) public returns ",
        "debug": "calldata_Token_4 + calldata_Token_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc1\ncalldata_Token_0: 0x32e5e59500000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `getTimestamp(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/2/0x61245b6a6678f3158a37ab2c5e52369b9f452318.sol",
        "function": "getTimestamp(string)",
        "lineno": 58,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 981,
        "code": "nt256) {\n        require(isCurrency(symbol));\n        return updateTimestamp;\n    }\n    \n    function getRateFor(string symbol) public returns ",
        "debug": "calldata_Token_4 + calldata_Token_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff41\ncalldata_Token_0: 0x32e5e59500000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `getTimestamp(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/2/0x61245b6a6678f3158a37ab2c5e52369b9f452318.sol",
        "function": "getTimestamp(string)",
        "lineno": 58,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1170,
        "code": "        require(isCurrency(symbol));\n        require(!blacklist[msg.sender]);\n        uint256 costRcn = cost * rate;\n        require(token.transferFrom(msg.sender, collector, costRcn));\n        RateDelivered(rate, costRcn, updateTimestamp);\n        return rate;\n    }\n\n    function isContract(address addr) internal returns (bool) {\n   ",
        "debug": "calldata_Token_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_Token_0: 0x4a2ff07800000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `getRateFor(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/2/0x61245b6a6678f3158a37ab2c5e52369b9f452318.sol",
        "function": "getRateFor(string)",
        "lineno": 64,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1182,
        "code": "        require(isCurrency(symbol));\n        require(!blacklist[msg.sender]);\n        uint256 costRcn = cost * rate;\n        require(token.transferFrom(msg.sender, collector, costRcn));\n        RateDelivered(rate, costRcn, updateTimestamp);\n        return rate;\n    }\n\n    function isContract(address addr) internal returns (bool) {\n   ",
        "debug": "calldata_Token_4 + calldata_Token_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8\ncalldata_Token_0: 0x4a2ff07800000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `getRateFor(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/2/0x61245b6a6678f3158a37ab2c5e52369b9f452318.sol",
        "function": "getRateFor(string)",
        "lineno": 64,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1191,
        "code": "        require(isCurrency(symbol));\n        require(!blacklist[msg.sender]);\n        uint256 costRcn = cost * rate;\n        require(token.transferFrom(msg.sender, collector, costRcn));\n        RateDelivered(rate, costRcn, updateTimestamp);\n        return rate;\n    }\n\n    function isContract(address addr) internal returns (bool) {\n   ",
        "debug": "calldata_Token_4 + calldata_Token_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc1\ncalldata_Token_0: 0x4a2ff07800000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `getRateFor(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/2/0x61245b6a6678f3158a37ab2c5e52369b9f452318.sol",
        "function": "getRateFor(string)",
        "lineno": 64,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1197,
        "code": "        require(isCurrency(symbol));\n        require(!blacklist[msg.sender]);\n        uint256 costRcn = cost * rate;\n        require(token.transferFrom(msg.sender, collector, costRcn));\n        RateDelivered(rate, costRcn, updateTimestamp);\n        return rate;\n    }\n\n    function isContract(address addr) internal returns (bool) {\n   ",
        "debug": "calldata_Token_4 + calldata_Token_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff41\ncalldata_Token_0: 0x4a2ff07800000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `getRateFor(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/2/0x61245b6a6678f3158a37ab2c5e52369b9f452318.sol",
        "function": "getRateFor(string)",
        "lineno": 64,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1295,
        "code": "isCurrency(symbol));\n        require(!blacklist[msg.sender]);\n        require(!isContract(msg.sender));\n        return rate;\n    }\n\n    function setProvider1(address _provider) public returns (bool) {\n        require(msg.se",
        "debug": "calldata_Token_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_Token_0: 0x523c02f500000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `getRateForExternal(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/2/0x61245b6a6678f3158a37ab2c5e52369b9f452318.sol",
        "function": "getRateForExternal(string)",
        "lineno": 90,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1307,
        "code": "isCurrency(symbol));\n        require(!blacklist[msg.sender]);\n        require(!isContract(msg.sender));\n        return rate;\n    }\n\n    function setProvider1(address _provider) public returns (bool) {\n        require(msg.se",
        "debug": "calldata_Token_4 + calldata_Token_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8\ncalldata_Token_0: 0x523c02f500000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `getRateForExternal(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/2/0x61245b6a6678f3158a37ab2c5e52369b9f452318.sol",
        "function": "getRateForExternal(string)",
        "lineno": 90,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1316,
        "code": "isCurrency(symbol));\n        require(!blacklist[msg.sender]);\n        require(!isContract(msg.sender));\n        return rate;\n    }\n\n    function setProvider1(address _provider) public returns (bool) {\n        require(msg.se",
        "debug": "calldata_Token_4 + calldata_Token_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc1\ncalldata_Token_0: 0x523c02f500000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `getRateForExternal(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/2/0x61245b6a6678f3158a37ab2c5e52369b9f452318.sol",
        "function": "getRateForExternal(string)",
        "lineno": 90,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1322,
        "code": "isCurrency(symbol));\n        require(!blacklist[msg.sender]);\n        require(!isContract(msg.sender));\n        return rate;\n    }\n\n    function setProvider1(address _provider) public returns (bool) {\n        require(msg.se",
        "debug": "calldata_Token_4 + calldata_Token_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff41\ncalldata_Token_0: 0x523c02f500000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `getRateForExternal(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/2/0x61245b6a6678f3158a37ab2c5e52369b9f452318.sol",
        "function": "getRateForExternal(string)",
        "lineno": 90,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1639,
        "code": "isCurrency(symbol));\n        require(!blacklist[msg.sender]);\n        return cost * rate;\n    }\n\n    function getDecimals(string symbol) constant returns (uint256) {\n        re",
        "debug": "calldata_Token_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_Token_0: 0x9ca3c29c00000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `getCost(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/2/0x61245b6a6678f3158a37ab2c5e52369b9f452318.sol",
        "function": "getCost(string)",
        "lineno": 79,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2896,
        "code": " (msg.sender == owner);\n   ",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/2/0x61245b6a6678f3158a37ab2c5e52369b9f452318.sol",
        "function": "fallback",
        "lineno": 129,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 5966,
        "code": " c[1]) return false;\n        if ",
        "debug": "calldata_Token_4 + calldata_Token_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff21\ncalldata_Token_0: 0x523c02f500000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `getRateForExternal(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/2/0x61245b6a6678f3158a37ab2c5e52369b9f452318.sol",
        "function": "getRateForExternal(string)",
        "lineno": 145,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 6022,
        "code": " c[1]) return false;\n        if ",
        "debug": "storage_5: 0xcd2fc412e0000000000000000000000000000000000000000000000000000041\ncalldata_Token_4 + calldata_Token_4: 0xd60685f68fffffffffffffffffffffffffffffffffffffffffffffffffffff81\ncalldata_Token_0: 0x523c02f500000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `getRateForExternal(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/2/0x61245b6a6678f3158a37ab2c5e52369b9f452318.sol",
        "function": "getRateForExternal(string)",
        "lineno": 145,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 6046,
        "code": " c[1]) return false;\n        if ",
        "debug": "storage_5: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01\ncalldata_Token_4 + calldata_Token_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01\ncalldata_Token_0: 0x523c02f500000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `getRateForExternal(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/2/0x61245b6a6678f3158a37ab2c5e52369b9f452318.sol",
        "function": "getRateForExternal(string)",
        "lineno": 145,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 6104,
        "debug": "The exception is triggered under the following conditions:\n\nstorage_5: 0x20\ncalldata_Token_0: 0x523c02f500000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\nmem_128 +\n32 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 + calldata_Token_4 + calldata_Token_4)): 0x0\ncalldata_Token_4 + calldata_Token_4: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/2/0x61245b6a6678f3158a37ab2c5e52369b9f452318.sol",
        "function": "getRateForExternal(string)",
        "lineno": 149,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 6368,
        "debug": "The exception is triggered under the following conditions:\n\nmem_128 +\n32 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 + calldata_Token_4 + calldata_Token_4)): 0x1\nstorage_5: 0x0\nmem_192 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 + calldata_Token_4 + calldata_Token_4)) +\n0: 0x0\ncalldata_Token_cpy: 0x0\ncalldata_Token_0: 0x523c02f500000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncalldata_Token_4 + calldata_Token_4: 0x1\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/2/0x61245b6a6678f3158a37ab2c5e52369b9f452318.sol",
        "function": "getRateForExternal(string)",
        "lineno": 149,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 6632,
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_Token_4 + calldata_Token_4: 0x2\nmem_128 +\n32 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 + calldata_Token_4 + calldata_Token_4)): 0x2\nstorage_5: 0x0\nmem_192 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 + calldata_Token_4 + calldata_Token_4)) +\n1: 0x0\nmem_192 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 + calldata_Token_4 + calldata_Token_4)) +\n0: 0x0\ncalldata_Token_cpy: 0x0\ncalldata_Token_0: 0x32e5e59500000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/2/0x61245b6a6678f3158a37ab2c5e52369b9f452318.sol",
        "function": "getTimestamp(string)",
        "lineno": 149,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}