{"error": null, "issues": [{"address": 444, "code": " _amountOfEach > 0 && _to.length * _amountOfEach <=  _token.balanceOf(this) && _to.length < 10000);\n        for(uint16 i = 0; i < _to.length ;i++){\n          assert(_token.transfer(_to[i],_amountOfEach));\n        }\n    }\n\n    \n    function withdrawTo(address _to, uint256 _amount)\n        public ownerOnly stoppable\n        notThis(_to)\n    {   \n        require(_amount <= this.balance);\n    ", "debug": "calldata_YoobaBatchTransfer_32 + 4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_YoobaBatchTransfer_0: 0x5215ad0b00000000000000000000000000000000000000000000000000000000\ncalldatasize_YoobaBatchTransfer: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `_function_0x5215ad0b`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/10/0x5fe1d4e2d510ff4df2c0300816e2c288a2ac2727.sol", "function": "_function_0x5215ad0b", "lineno": 169, "title": "Integer Overflow ", "type": "Warning"}, {"address": 943, "code": "       the new owner still ", "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_YoobaBatchTransfer_0: 0x7da68f500000000000000000000000000000000000000000000000000000000\ncalldatasize_YoobaBatchTransfer: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/10/0x5fe1d4e2d510ff4df2c0300816e2c288a2ac2727.sol", "function": "stop()", "lineno": 119, "title": "Exception state", "type": "Informational"}, {"address": 1059, "code": "       the new owner still ", "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_YoobaBatchTransfer_0: 0x205c287800000000000000000000000000000000000000000000000000000000\ncalldatasize_YoobaBatchTransfer: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/10/0x5fe1d4e2d510ff4df2c0300816e2c288a2ac2727.sol", "function": "withdrawTo(address,uint256)", "lineno": 119, "title": "Exception state", "type": "Informational"}, {"address": 1084, "code": "       stopped = ", "debug": "The exception is triggered under the following conditions:\n\nstorage_1: 0xff00\nstorage_0: 0x0\ncaller: 0x0\ncalldata_YoobaBatchTransfer_0: 0x205c287800000000000000000000000000000000000000000000000000000000\ncalldatasize_YoobaBatchTransfer: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/10/0x5fe1d4e2d510ff4df2c0300816e2c288a2ac2727.sol", "function": "withdrawTo(address,uint256)", "lineno": 152, "title": "Exception state", "type": "Informational"}, {"address": 1346, "code": "       the new owner still ", "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_YoobaBatchTransfer_0: 0x488a8cb400000000000000000000000000000000000000000000000000000000\ncalldatasize_YoobaBatchTransfer: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/10/0x5fe1d4e2d510ff4df2c0300816e2c288a2ac2727.sol", "function": "_function_0x488a8cb4", "lineno": 119, "title": "Exception state", "type": "Informational"}, {"address": 1651, "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/10/0x5fe1d4e2d510ff4df2c0300816e2c288a2ac2727.sol", "function": "_function_0x488a8cb4", "lineno": 195, "title": "Message call to external contract", "type": "Warning"}, {"address": 1812, "code": "       the new owner still ", "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_YoobaBatchTransfer_0: 0x5215ad0b00000000000000000000000000000000000000000000000000000000\ncalldatasize_YoobaBatchTransfer: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/10/0x5fe1d4e2d510ff4df2c0300816e2c288a2ac2727.sol", "function": "_function_0x5215ad0b", "lineno": 119, "title": "Exception state", "type": "Informational"}, {"address": 1837, "code": "       stopped = ", "debug": "The exception is triggered under the following conditions:\n\nstorage_1: 0xff00\nstorage_0: 0x0\ncaller: 0x0\ncalldata_YoobaBatchTransfer_0: 0x5215ad0b00000000000000000000000000000000000000000000000000000000\ncalldatasize_YoobaBatchTransfer: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/10/0x5fe1d4e2d510ff4df2c0300816e2c288a2ac2727.sol", "function": "_function_0x5215ad0b", "lineno": 152, "title": "Exception state", "type": "Informational"}, {"address": 2059, "code": "\n    \n    function wit", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/10/0x5fe1d4e2d510ff4df2c0300816e2c288a2ac2727.sol", "function": "_function_0x5215ad0b", "lineno": 174, "title": "Message call to external contract", "type": "Warning"}, {"address": 2059, "code": "\n    \n    function wit", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2358\nCall at address: 2358\n", "filename": "/unique_chucks/10/0x5fe1d4e2d510ff4df2c0300816e2c288a2ac2727.sol", "function": "_function_0x5215ad0b", "lineno": 174, "title": "Multiple Calls", "type": "Information"}, {"address": 2358, "code": ")\n    {   \n        require(_amount <=", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/10/0x5fe1d4e2d510ff4df2c0300816e2c288a2ac2727.sol", "function": "_function_0x5215ad0b", "lineno": 178, "title": "Message call to external contract", "type": "Warning"}, {"address": 3061, "code": "       the new owner still ", "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_YoobaBatchTransfer_0: 0xbe9a655500000000000000000000000000000000000000000000000000000000\ncalldatasize_YoobaBatchTransfer: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/10/0x5fe1d4e2d510ff4df2c0300816e2c288a2ac2727.sol", "function": "start()", "lineno": 119, "title": "Exception state", "type": "Informational"}, {"address": 3216, "code": "       the new owner still ", "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_YoobaBatchTransfer_0: 0xf2fde38b00000000000000000000000000000000000000000000000000000000\ncalldatasize_YoobaBatchTransfer: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/10/0x5fe1d4e2d510ff4df2c0300816e2c288a2ac2727.sol", "function": "transferOwnership(address)", "lineno": 119, "title": "Exception state", "type": "Informational"}], "success": true}