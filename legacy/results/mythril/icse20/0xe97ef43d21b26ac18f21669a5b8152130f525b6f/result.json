{
  "contract": "0xe97ef43d21b26ac18f21669a5b8152130f525b6f",
  "tool": "mythril",
  "start": 1563596516.2165866,
  "end": 1563596906.4779303,
  "duration": 390.2613437175751,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 724,
        "code": " for(uint i = 0; i< _recipient.length; i++)\n        {\n              balanceOf[_recipient[i]] += _values[i] * decimalFactor;\n              balanceOf[address_ico] -= _values[i] * decimalFactor;\n              emit Transfer(address_ico, _recipient[i], _values[i] * decimalFactor);\n        }\n    }\n\n    function stop() public isOwner {\n        stopped = true;\n    }\n\n    function start() pub",
        "debug": "calldata_SwiftDex_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_SwiftDex_0: 0x2e01113600000000000000000000000000000000000000000000000000000000\ncalldatasize_SwiftDex: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `deployTokens(address[],uint256[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/21/0xe97ef43d21b26ac18f21669a5b8152130f525b6f.sol",
        "function": "deployTokens(address[],uint256[])",
        "lineno": 89,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1931,
        "code": "nder);\n        _;\n    }\n\n  ",
        "debug": "The exception is triggered under the following conditions:\n\ncaller: 0x0\nstorage_8: 0xffffffffffffffffffffffffffffffffffffffff00\ncalldata_SwiftDex_0: 0x7da68f500000000000000000000000000000000000000000000000000000000\ncalldatasize_SwiftDex: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/21/0xe97ef43d21b26ac18f21669a5b8152130f525b6f.sol",
        "function": "stop()",
        "lineno": 23,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 1987,
        "code": "_;\n    }\n\n    mod",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_8: 0xff00\ncalldata_SwiftDex_0: 0x95ea7b300000000000000000000000000000000000000000000000000000000\ncalldatasize_SwiftDex: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/21/0xe97ef43d21b26ac18f21669a5b8152130f525b6f.sol",
        "function": "approve(address,uint256)",
        "lineno": 29,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2022,
        "code": "   _;\n    }\n\n    function",
        "debug": "The exception is triggered under the following conditions:\n\ncaller: 0x0\nstorage_8: 0x0\ncalldata_SwiftDex_0: 0x95ea7b300000000000000000000000000000000000000000000000000000000\ncalldatasize_SwiftDex: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/21/0xe97ef43d21b26ac18f21669a5b8152130f525b6f.sol",
        "function": "approve(address,uint256)",
        "lineno": 34,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2445,
        "code": "_;\n    }\n\n    mod",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_8: 0xff00\ncalldata_SwiftDex_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_SwiftDex: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/21/0xe97ef43d21b26ac18f21669a5b8152130f525b6f.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 29,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2480,
        "code": "   _;\n    }\n\n    function",
        "debug": "The exception is triggered under the following conditions:\n\ncaller: 0x0\nstorage_8: 0x0\ncalldata_SwiftDex_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_SwiftDex: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/21/0xe97ef43d21b26ac18f21669a5b8152130f525b6f.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 34,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3335,
        "code": "nder);\n        _;\n    }\n\n  ",
        "debug": "The exception is triggered under the following conditions:\n\ncaller: 0x0\nstorage_8: 0xffffffffffffffffffffffffffffffffffffffff00\ncalldata_SwiftDex_0: 0x2e01113600000000000000000000000000000000000000000000000000000000\ncalldatasize_SwiftDex: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/21/0xe97ef43d21b26ac18f21669a5b8152130f525b6f.sol",
        "function": "deployTokens(address[],uint256[])",
        "lineno": 23,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3372,
        "code": "ctor;\n    ",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_SwiftDex_4 + calldata_SwiftDex_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncaller: 0x0\nstorage_8: 0x0\ncalldata_SwiftDex_0: 0x2e01113600000000000000000000000000000000000000000000000000000000\ncalldatasize_SwiftDex: 0x4\nmem_128 + 32 + 32*calldata_SwiftDex_4 + calldata_SwiftDex_4: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/21/0xe97ef43d21b26ac18f21669a5b8152130f525b6f.sol",
        "function": "deployTokens(address[],uint256[])",
        "lineno": 92,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3384,
        "code": "ctor;\n              emit T",
        "debug": "mem_0 + 192 + 32*calldata_SwiftDex_4 + calldata_SwiftDex_4: 0xf77124b52a24e057d8a070024000e4e0e29fe1280e6ec1bac4ce6c09cd081036\nmem_128 + 32 + 32*calldata_SwiftDex_4 + calldata_SwiftDex_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_SwiftDex_4 + calldata_SwiftDex_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncaller: 0x0\nstorage_8: 0x0\ncalldata_SwiftDex_0: 0x2e01113600000000000000000000000000000000000000000000000000000000\ncalldatasize_SwiftDex: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `deployTokens(address[],uint256[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/21/0xe97ef43d21b26ac18f21669a5b8152130f525b6f.sol",
        "function": "deployTokens(address[],uint256[])",
        "lineno": 92,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 3476,
        "code": "o] -= _values[i] * decimalFactor;\n              emit T",
        "debug": "mem_0 + 192 + 32*calldata_SwiftDex_4 + calldata_SwiftDex_4: 0x30c0a13b47a897a2e806bb57dd6cfbc147e285f48aa90122eec66ddf542f\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_SwiftDex_cpy: 0x8cfcf72bfffccb8c3d575aa5a921c137fc900387f1e53ffe1fa7e65d9d9c0000\nmem_128 + 32 + 32*calldata_SwiftDex_4 + calldata_SwiftDex_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_SwiftDex_4 + calldata_SwiftDex_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncaller: 0x0\nstorage_8: 0x0\ncalldata_SwiftDex_0: 0x2e01113600000000000000000000000000000000000000000000000000000000\ncalldatasize_SwiftDex: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `deployTokens(address[],uint256[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/21/0xe97ef43d21b26ac18f21669a5b8152130f525b6f.sol",
        "function": "deployTokens(address[],uint256[])",
        "lineno": 92,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 3517,
        "code": "[i] * decimalFactor);\n    ",
        "debug": "mem_0 + 192 + 32*calldata_SwiftDex_4 + calldata_SwiftDex_4: 0xf77124b52a24e057d8a070024000e4e0e29fe1280e6ec1bac4ce6c09cd081036\nmem_128 + 32 + 32*calldata_SwiftDex_4 + calldata_SwiftDex_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_SwiftDex_4 + calldata_SwiftDex_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncaller: 0x0\nstorage_8: 0x0\ncalldata_SwiftDex_0: 0x2e01113600000000000000000000000000000000000000000000000000000000\ncalldatasize_SwiftDex: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `deployTokens(address[],uint256[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/21/0xe97ef43d21b26ac18f21669a5b8152130f525b6f.sol",
        "function": "deployTokens(address[],uint256[])",
        "lineno": 93,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 3620,
        "code": "co, _recipient[i], _values[i] * decimalFactor);\n    ",
        "debug": "mem_0 + 192 + 32*calldata_SwiftDex_4 + calldata_SwiftDex_4: 0x31b80231c001f601c719085ec4ec098ac2408f3504059effbf816628002\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\nUDiv(storage_9,_256): 0x377cf4e9f0a5d66f39f84fc95784ff7779f8f71ce5f4d42f0d23ed614ec7ffff\nmem_128 + 32 + 32*calldata_SwiftDex_4 + calldata_SwiftDex_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_SwiftDex_4 + calldata_SwiftDex_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncaller: 0x0\nstorage_8: 0x0\ncalldata_SwiftDex_0: 0x2e01113600000000000000000000000000000000000000000000000000000000\ncalldatasize_SwiftDex: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer underflow exists in the function `deployTokens(address[],uint256[])`.\nThe subtraction may result in a value < 0.",
        "filename": "/unique_chucks/21/0xe97ef43d21b26ac18f21669a5b8152130f525b6f.sol",
        "function": "deployTokens(address[],uint256[])",
        "lineno": 93,
        "title": "Integer Underflow",
        "type": "Warning"
      },
      {
        "address": 4131,
        "code": "nder);\n        _;\n    }\n\n  ",
        "debug": "The exception is triggered under the following conditions:\n\ncaller: 0x0\nstorage_8: 0xffffffffffffffffffffffffffffffffffffffff00\ncalldata_SwiftDex_0: 0x91b7f5ed00000000000000000000000000000000000000000000000000000000\ncalldatasize_SwiftDex: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/21/0xe97ef43d21b26ac18f21669a5b8152130f525b6f.sol",
        "function": "setPrice(uint256)",
        "lineno": 23,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 4332,
        "code": "_;\n    }\n\n    mod",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_8: 0xff00\ncalldata_SwiftDex_0: 0xa6f2ae3a00000000000000000000000000000000000000000000000000000000\ncalldatasize_SwiftDex: 0x4\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/21/0xe97ef43d21b26ac18f21669a5b8152130f525b6f.sol",
        "function": "buy()",
        "lineno": 29,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 4347,
        "code": "\n        require(balanceO",
        "debug": "callvalue: 0xf77124b52a24e057d8a070024000e4e0e29fe1280e6ec1bac4ce6c09cd081036\nstorage_8: 0x0\ncalldata_SwiftDex_0: 0xa6f2ae3a00000000000000000000000000000000000000000000000000000000\ncalldatasize_SwiftDex: 0x4\n",
        "description": "A possible integer overflow exists in the function `buy()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/21/0xe97ef43d21b26ac18f21669a5b8152130f525b6f.sol",
        "function": "buy()",
        "lineno": 79,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 4355,
        "code": "\n        require(balanceOf[addres",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_8: 0x0\ncalldata_SwiftDex_0: 0xa6f2ae3a00000000000000000000000000000000000000000000000000000000\ncalldatasize_SwiftDex: 0x4\nstorage_3: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/21/0xe97ef43d21b26ac18f21669a5b8152130f525b6f.sol",
        "function": "buy()",
        "lineno": 79,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 4931,
        "code": "_;\n    }\n\n    mod",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_8: 0xff00\ncalldata_SwiftDex_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncalldatasize_SwiftDex: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/21/0xe97ef43d21b26ac18f21669a5b8152130f525b6f.sol",
        "function": "transfer(address,uint256)",
        "lineno": 29,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 4966,
        "code": "   _;\n    }\n\n    function",
        "debug": "The exception is triggered under the following conditions:\n\ncaller: 0x0\nstorage_8: 0x0\ncalldata_SwiftDex_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncalldatasize_SwiftDex: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/21/0xe97ef43d21b26ac18f21669a5b8152130f525b6f.sol",
        "function": "transfer(address,uint256)",
        "lineno": 34,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 5541,
        "code": "nder);\n        _;\n    }\n\n  ",
        "debug": "The exception is triggered under the following conditions:\n\ncaller: 0x0\nstorage_8: 0xffffffffffffffffffffffffffffffffffffffff00\ncalldata_SwiftDex_0: 0xbe9a655500000000000000000000000000000000000000000000000000000000\ncalldatasize_SwiftDex: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/21/0xe97ef43d21b26ac18f21669a5b8152130f525b6f.sol",
        "function": "start()",
        "lineno": 23,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}