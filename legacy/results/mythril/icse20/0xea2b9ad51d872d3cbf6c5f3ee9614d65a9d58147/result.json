{
  "contract": "0xea2b9ad51d872d3cbf6c5f3ee9614d65a9d58147",
  "tool": "mythril",
  "start": 1563725642.591507,
  "end": 1563725650.705944,
  "duration": 8.114437103271484,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 156,
        "code": "nder] += msg.value;\n        Hodl",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xd173faa7fd87efcae001c980d5f7bb0777bb00fdf5fda8add77e7f7e7f5fbdf1\ncallvalue: 0xe50bf33691400f18b9ff817ff9d423f4463a80ade581abe9267b3e60805f39f7\ncalldata_asdfgh_0: 0x0\ncalldatasize_asdfgh: 0x4\n",
        "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/40/0xea2b9ad51d872d3cbf6c5f3ee9614d65a9d58147.sol",
        "function": "fallback",
        "lineno": 15,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 709,
        "code": "alue);\n        Party(msg.s",
        "debug": "",
        "description": "In the function `party()` the following predictable state variables are used to determine Ether recipient:\n- block.timestamp\n",
        "filename": "/unique_chucks/40/0xea2b9ad51d872d3cbf6c5f3ee9614d65a9d58147.sol",
        "function": "party()",
        "lineno": 22,
        "title": "Dependence on predictable environment variable",
        "type": "Warning"
      },
      {
        "address": 1089,
        "code": ";\n        return token.transfe",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/40/0xea2b9ad51d872d3cbf6c5f3ee9614d65a9d58147.sol",
        "function": "withdrawForeignTokens(address)",
        "lineno": 31,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 1089,
        "code": ";\n        return token.transfe",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1333\n",
        "filename": "/unique_chucks/40/0xea2b9ad51d872d3cbf6c5f3ee9614d65a9d58147.sol",
        "function": "withdrawForeignTokens(address)",
        "lineno": 31,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 1333,
        "code": "Ca69d01C5f3E9C6F5AFb93eb55, amount);\n    }\n}",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/40/0xea2b9ad51d872d3cbf6c5f3ee9614d65a9d58147.sol",
        "function": "withdrawForeignTokens(address)",
        "lineno": 32,
        "title": "Message call to external contract",
        "type": "Warning"
      }
    ],
    "success": true
  }
}