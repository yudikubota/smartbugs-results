{
  "contract": "0x8a8edb44a35bdc1e45020bd499fb916125523647",
  "tool": "mythril",
  "start": 1563665311.314592,
  "end": 1563665315.828202,
  "duration": 4.513610124588013,
  "analysis": {
    "success": false,
    "error": "Solc experienced a fatal error (code 1).\n\n/unique_chucks/33/0x8a8edb44a35bdc1e45020bd499fb916125523647.sol:96:36: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n        if (msg.sender != creator) throw;\r\n                                   ^---^\n/unique_chucks/33/0x8a8edb44a35bdc1e45020bd499fb916125523647.sol:101:33: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n\t    if (msg.sender != creator) throw;\r\n\t                               ^---^\n/unique_chucks/33/0x8a8edb44a35bdc1e45020bd499fb916125523647.sol:106:33: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n\t    if (msg.sender != creator) throw;\r\n\t                               ^---^\n/unique_chucks/33/0x8a8edb44a35bdc1e45020bd499fb916125523647.sol:124:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use \"constructor(...) { ... }\" instead.\n    function SMEToken(\r\n    ^ (Relevant source part starts here and spans across multiple lines).\n/unique_chucks/33/0x8a8edb44a35bdc1e45020bd499fb916125523647.sol:139:27: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n\t    if (now < startTime) throw;\r\n\t                         ^---^\n/unique_chucks/33/0x8a8edb44a35bdc1e45020bd499fb916125523647.sol:140:22: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n\t\tif (now > endTime) throw;\r\n\t\t                   ^---^\n/unique_chucks/33/0x8a8edb44a35bdc1e45020bd499fb916125523647.sol:141:28: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n\t    if (msg.value < val4) throw;\r\n\t                          ^---^\n/unique_chucks/33/0x8a8edb44a35bdc1e45020bd499fb916125523647.sol:142:30: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n\t\tif (msg.value % val4 != 0) throw;\r\n\t\t                           ^---^\n/unique_chucks/33/0x8a8edb44a35bdc1e45020bd499fb916125523647.sol:143:3: Warning: Use of the \"var\" keyword is deprecated.\n\t\tvar new_funder = Funder({addr: msg.sender, amount: msg.value / val4});\r\n\t\t^------------^\n/unique_chucks/33/0x8a8edb44a35bdc1e45020bd499fb916125523647.sol:147:39: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n        if (totalSupply < smecAmount) throw;\r\n                                      ^---^\n/unique_chucks/33/0x8a8edb44a35bdc1e45020bd499fb916125523647.sol:148:71: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n        if (balances[msg.sender] + smecAmount < balances[msg.sender]) throw; \r\n                                                                      ^---^\n/unique_chucks/33/0x8a8edb44a35bdc1e45020bd499fb916125523647.sol:152:46: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n        if(!account1.send(msg.value*50/100)) throw;\r\n                                             ^---^\n/unique_chucks/33/0x8a8edb44a35bdc1e45020bd499fb916125523647.sol:153:40: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n\t\tif(!account2.send(msg.value*24/100)) throw;\r\n\t\t                                     ^---^\n/unique_chucks/33/0x8a8edb44a35bdc1e45020bd499fb916125523647.sol:154:39: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n\t\tif(!account3.send(msg.value*6/100)) throw;\r\n\t\t                                    ^---^\n/unique_chucks/33/0x8a8edb44a35bdc1e45020bd499fb916125523647.sol:155:40: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n\t\tif(!account4.send(msg.value*10/100)) throw;\r\n\t\t                                     ^---^\n/unique_chucks/33/0x8a8edb44a35bdc1e45020bd499fb916125523647.sol:156:40: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n\t\tif(!account5.send(msg.value*10/100)) throw;\r\n\t\t                                     ^---^\n/unique_chucks/33/0x8a8edb44a35bdc1e45020bd499fb916125523647.sol:115:9: Warning: Variable is declared as a storage pointer. Use an explicit \"storage\" keyword to silence this warning.\n        Funder f = funder_list[index];\r\n        ^------^\n/unique_chucks/33/0x8a8edb44a35bdc1e45020bd499fb916125523647.sol:22:9: Warning: Invoking events without \"emit\" prefix is deprecated.\n        Transfer(msg.sender, _to, _value);\r\n        ^-------------------------------^\n/unique_chucks/33/0x8a8edb44a35bdc1e45020bd499fb916125523647.sol:34:9: Warning: Invoking events without \"emit\" prefix is deprecated.\n        Transfer(_from, _to, _value);\r\n        ^--------------------------^\n/unique_chucks/33/0x8a8edb44a35bdc1e45020bd499fb916125523647.sol:47:9: Warning: Invoking events without \"emit\" prefix is deprecated.\n        Approval(msg.sender, _spender, _value);\r\n        ^------------------------------------^\n/unique_chucks/33/0x8a8edb44a35bdc1e45020bd499fb916125523647.sol:75:21: Error: Type literal_string \"0xcD4fC8e4DA5B25885c7d80b6C846afb6b170B49b\" is not implicitly convertible to expected type address.\n\taddress account1 = '0xcD4fC8e4DA5B25885c7d80b6C846afb6b170B49b';  //50%   Use Cases and Business Applications\r\n\t                   ^------------------------------------------^\n/unique_chucks/33/0x8a8edb44a35bdc1e45020bd499fb916125523647.sol:76:21: Error: Type literal_string \"0x005CD1194C1F088d9bd8BF9e70e5e44D2194C029\" is not implicitly convertible to expected type address.\n\taddress account2 = '0x005CD1194C1F088d9bd8BF9e70e5e44D2194C029';  //24%   Blockchain Technology\r\n\t                   ^------------------------------------------^\n/unique_chucks/33/0x8a8edb44a35bdc1e45020bd499fb916125523647.sol:77:24: Error: Type literal_string \"0x00d0ACA6D3D07B3546Fc76E60a90ccdccC7c0e0C\" is not implicitly convertible to expected type address.\n    address account3 = '0x00d0ACA6D3D07B3546Fc76E60a90ccdccC7c0e0C';  //6%    Mobile APP,SDK Technology\r\n                       ^------------------------------------------^\n/unique_chucks/33/0x8a8edb44a35bdc1e45020bd499fb916125523647.sol:78:21: Error: Type literal_string \"0x5CA7F20427e4D202777Ea8006dc8f614a289Be2F\" is not implicitly convertible to expected type address.\n\taddress account4 = '0x5CA7F20427e4D202777Ea8006dc8f614a289Be2F';  //10%   Mobile Internet Technology\r\n\t                   ^------------------------------------------^\n/unique_chucks/33/0x8a8edb44a35bdc1e45020bd499fb916125523647.sol:79:21: Error: Type literal_string \"0x7d49c6a86FDE3dE9c47544c58b7b0F035197415b\" is not implicitly convertible to expected type address.\n\taddress account5 = '0x7d49c6a86FDE3dE9c47544c58b7b0F035197415b';  //10%   Marketing\r\n\t                   ^------------------------------------------^\n/unique_chucks/33/0x8a8edb44a35bdc1e45020bd499fb916125523647.sol:111:16: Warning: Using contract member \"balance\" inherited from the address type is deprecated. Convert the contract to \"address\" type to access the member, for example use \"address(contract).balance\" instead.\n        return this.balance;\r\n               ^----------^\n",
    "issues": []
  }
}