{"error": null, "issues": [{"address": 1101, "code": "=> bytes32[]) public auditorContracts;\n  \n  // Returns", "debug": "The exception is triggered under the following conditions:\n\ncalldata_Audit_32 + 4: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\ncalldata_Audit_4: 0x0\ncalldata_Audit_0: 0x146ae56900000000000000000000000000000000000000000000000000000000\ncalldatasize_Audit: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/34/0x3512ea8e6a75d474dd7cefe1938df5ffd80118c5.sol", "function": "_function_0x146ae569", "lineno": 18, "title": "Exception state", "type": "Informational"}, {"address": 2431, "code": ";\n\ncontract Audit ", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_Audit_0: 0xd911447600000000000000000000000000000000000000000000000000000000\ncalldatasize_Audit: 0x4\nstorage_1 +\nkeccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\ncalldata_Audit_4: 0x0\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `addAudit(bytes32,uint256,bytes32)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/34/0x3512ea8e6a75d474dd7cefe1938df5ffd80118c5.sol", "function": "addAudit(bytes32,uint256,bytes32)", "lineno": 1, "title": "Integer Overflow ", "type": "Warning"}], "success": true}