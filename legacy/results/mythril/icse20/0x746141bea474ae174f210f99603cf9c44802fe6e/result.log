{"error": null, "issues": [{"address": 888, "code": "unction drop(address[] addresses, uint256 amount) public onlyOwner {\n    uint256 amt = amount * 10**8", "debug": "calldata_YOURCOIN_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_YOURCOIN_0: 0x2d7b299d00000000000000000000000000000000000000000000000000000000\ncalldatasize_YOURCOIN: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `setNote(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/44/0x746141bea474ae174f210f99603cf9c44802fe6e.sol", "function": "setNote(string)", "lineno": 150, "title": "Integer Overflow ", "type": "Warning"}, {"address": 900, "code": "unction drop(address[] addresses, uint256 amount) public onlyOwner {\n    uint256 amt = amount * 10**8", "debug": "calldata_YOURCOIN_4 + calldata_YOURCOIN_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8\ncalldata_YOURCOIN_0: 0x2d7b299d00000000000000000000000000000000000000000000000000000000\ncalldatasize_YOURCOIN: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `setNote(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/44/0x746141bea474ae174f210f99603cf9c44802fe6e.sol", "function": "setNote(string)", "lineno": 150, "title": "Integer Overflow ", "type": "Warning"}, {"address": 909, "code": "unction drop(address[] addresses, uint256 amount) public onlyOwner {\n    uint256 amt = amount * 10**8", "debug": "calldata_YOURCOIN_4 + calldata_YOURCOIN_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc1\ncalldata_YOURCOIN_0: 0x2d7b299d00000000000000000000000000000000000000000000000000000000\ncalldatasize_YOURCOIN: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `setNote(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/44/0x746141bea474ae174f210f99603cf9c44802fe6e.sol", "function": "setNote(string)", "lineno": 150, "title": "Integer Overflow ", "type": "Warning"}, {"address": 915, "code": "unction drop(address[] addresses, uint256 amount) public onlyOwner {\n    uint256 amt = amount * 10**8", "debug": "calldata_YOURCOIN_4 + calldata_YOURCOIN_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff41\ncalldata_YOURCOIN_0: 0x2d7b299d00000000000000000000000000000000000000000000000000000000\ncalldatasize_YOURCOIN: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `setNote(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/44/0x746141bea474ae174f210f99603cf9c44802fe6e.sol", "function": "setNote(string)", "lineno": 150, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1042, "code": "LY_CAP);\n    PerformingDrop(addresses.length);\n    \n    // Maximum drop is 1000 addresses\n    assert(addresses.length <= 1000);\n    assert(balances[owner] >= amt * addresses.length);\n    for (uint i = 0; i < addresses.length; i++) {\n      address recipient = addresses[i];\n      if(recipient != NULL_ADDRESS) {\n        balances[owner] -= amt;\n        balances[recipient] += amt;\n        Transfer(owner, recipient, amt);\n      }\n    }\n  }\n\n  function YOURCOIN() public {\n    totalSupply = SUPPLY_CAP;\n    balances[msg.sender] = SUPPLY_CAP;\n  }\n}", "debug": "calldata_YOURCOIN_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_YOURCOIN_0: 0x3974874b00000000000000000000000000000000000000000000000000000000\ncalldatasize_YOURCOIN: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `drop(address[],uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/44/0x746141bea474ae174f210f99603cf9c44802fe6e.sol", "function": "drop(address[],uint256)", "lineno": 153, "title": "Integer Overflow ", "type": "Warning"}, {"address": 3567, "code": "\n    assert(ad", "debug": "calldata_YOURCOIN_32 + 4: 0x541250e575bb18197c52e1cf3d6a6eb3bcdb681b1c66122daa075000736d60\nstorage_3: 0x0\ncaller: 0x0\ncalldata_YOURCOIN_0: 0x3974874b00000000000000000000000000000000000000000000000000000000\ncalldatasize_YOURCOIN: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `drop(address[],uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/44/0x746141bea474ae174f210f99603cf9c44802fe6e.sol", "function": "drop(address[],uint256)", "lineno": 156, "title": "Integer Overflow ", "type": "Warning"}, {"address": 3681, "code": "ipient = addresses[i];\n      if(", "debug": "The exception is triggered under the following conditions:\n\ncalldata_YOURCOIN_32 + 4: 0xc8d1eb6fa5296fbaf8e4d8b2334379517a9bfd770eaa3cd4f28b225d780042\ncalldata_YOURCOIN_4 + calldata_YOURCOIN_4: 0x3e9\nstorage_3: 0x0\ncaller: 0x0\ncalldata_YOURCOIN_0: 0x3974874b00000000000000000000000000000000000000000000000000000000\ncalldatasize_YOURCOIN: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/44/0x746141bea474ae174f210f99603cf9c44802fe6e.sol", "function": "drop(address[],uint256)", "lineno": 160, "title": "Exception state", "type": "Informational"}, {"address": 3793, "code": "nt != NULL_ADDRESS) {\n        balances[owner] -= ", "debug": "The exception is triggered under the following conditions:\n\ncalldata_YOURCOIN_32 + 4: 0x23cc62ef8e6dc1798780676e792f6bd362be1046742da453060c5e8820a06\ncalldata_YOURCOIN_4 + calldata_YOURCOIN_4: 0x1e0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\nUDiv(storage_3,_256): 0x108e33fff\nstorage_3: 0x0\ncaller: 0x0\ncalldata_YOURCOIN_0: 0x3974874b00000000000000000000000000000000000000000000000000000000\ncalldatasize_YOURCOIN: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/44/0x746141bea474ae174f210f99603cf9c44802fe6e.sol", "function": "drop(address[],uint256)", "lineno": 161, "title": "Exception state", "type": "Informational"}, {"address": 4102, "code": "msg.sender] = SUPPLY_CAP;\n", "debug": "calldata_YOURCOIN_32 + 4: 0x801c450517c1e8982f61418e6abc616fb193b655bcf5ea277b99ff451a1078\ncalldata_YOURCOIN_4 + calldata_YOURCOIN_4: 0x274\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_YOURCOIN_cpy: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffd0f9e00\nstorage_4: 0x0\ncalldata_YOURCOIN_cpy: 0xffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\nUDiv(storage_3,_256): 0x823da6000\nstorage_3: 0x0\ncaller: 0x0\ncalldata_YOURCOIN_0: 0x3974874b00000000000000000000000000000000000000000000000000000000\ncalldatasize_YOURCOIN: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `drop(address[],uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/44/0x746141bea474ae174f210f99603cf9c44802fe6e.sol", "function": "drop(address[],uint256)", "lineno": 171, "title": "Integer Overflow ", "type": "Warning"}, {"address": 6560, "code": "int256 a, uint", "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncalldata_YOURCOIN_32 + 4: 0x1\ncalldata_YOURCOIN_4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_YOURCOIN_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncalldatasize_YOURCOIN: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/44/0x746141bea474ae174f210f99603cf9c44802fe6e.sol", "function": "transfer(address,uint256)", "lineno": 60, "title": "Exception state", "type": "Informational"}, {"address": 6578, "code": "icTok", "debug": "calldata_YOURCOIN_32 + 4: 0x57f25cd000000000000000000000000000000000000000000000000000000000\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_YOURCOIN_4: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncalldata_YOURCOIN_0: 0xd73dd62300000000000000000000000000000000000000000000000000000000\ncalldatasize_YOURCOIN: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `_function_0xd73dd623`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/44/0x746141bea474ae174f210f99603cf9c44802fe6e.sol", "function": "_function_0xd73dd623", "lineno": 67, "title": "Integer Overflow ", "type": "Warning"}, {"address": 6591, "code": "RC20Basic {\n  ", "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_YOURCOIN_4: 0x1\ncalldata_YOURCOIN_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_YOURCOIN_0: 0xd73dd62300000000000000000000000000000000000000000000000000000000\ncalldatasize_YOURCOIN: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/44/0x746141bea474ae174f210f99603cf9c44802fe6e.sol", "function": "_function_0xd73dd623", "lineno": 67, "title": "Exception state", "type": "Informational"}, {"address": 6670, "code": "UR\";\n  uint8 public constant decimals = 8;\n\n  uint256 public constant SUPPLY_CAP = 10000000 * (10 ** uint256(decimals));\n\n  address NULL_ADDRESS = address(0);\n\n\n  event NoteChanged(string newNote);\n  string public note = \"YOUR COIN.\";\n  function setNote(string note_) public onlyOwner {\n      note = note_;\n      NoteChanged(note);\n  }\n\n  \n  event PerformingDrop(uint count);\n  function drop(address[] addresses, uint256 amount) public onlyOwner {\n    uint256 amt = amount * 10**8;\n    require(amt > 0);\n    require(amt <= SUPPLY_CAP);\n    PerformingDrop(addresses.length);\n    \n    // Maximum drop is 1000 addresses\n    assert(addresses.length <= 1000);\n    assert(balances[owner] >= amt * addresses.length);\n    for (uint i = 0; i < addresses.length; i++) {\n      address recipient = addresses[i];\n      if(recipient != NULL_ADDRESS) {\n        balances[owner] -= amt;\n        balances[recipient] += amt;\n        Transfer(owner, recipient, amt);\n      }\n    }\n  }\n\n  function YOURCOIN() public {\n    totalSupply = SUPPLY_CAP;\n    balances[msg.sender] = SUPPLY_CAP;\n  }\n}", "debug": "calldata_YOURCOIN_4 + calldata_YOURCOIN_4: 0x8000000000000000000000000000000000000000000000000000000000000000\nstorage_3: 0x0\ncaller: 0x0\ncalldata_YOURCOIN_0: 0x2d7b299d00000000000000000000000000000000000000000000000000000000\ncalldatasize_YOURCOIN: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `setNote(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/44/0x746141bea474ae174f210f99603cf9c44802fe6e.sol", "function": "setNote(string)", "lineno": 133, "title": "Integer Overflow ", "type": "Warning"}, {"address": 6684, "code": "UR\";\n  uint8 public constant decimals = 8;\n\n  uint256 public constant SUPPLY_CAP = 10000000 * (10 ** uint256(decimals));\n\n  address NULL_ADDRESS = address(0);\n\n\n  event NoteChanged(string newNote);\n  string public note = \"YOUR COIN.\";\n  function setNote(string note_) public onlyOwner {\n      note = note_;\n      NoteChanged(note);\n  }\n\n  \n  event PerformingDrop(uint count);\n  function drop(address[] addresses, uint256 amount) public onlyOwner {\n    uint256 amt = amount * 10**8;\n    require(amt > 0);\n    require(amt <= SUPPLY_CAP);\n    PerformingDrop(addresses.length);\n    \n    // Maximum drop is 1000 addresses\n    assert(addresses.length <= 1000);\n    assert(balances[owner] >= amt * addresses.length);\n    for (uint i = 0; i < addresses.length; i++) {\n      address recipient = addresses[i];\n      if(recipient != NULL_ADDRESS) {\n        balances[owner] -= amt;\n        balances[recipient] += amt;\n        Transfer(owner, recipient, amt);\n      }\n    }\n  }\n\n  function YOURCOIN() public {\n    totalSupply = SUPPLY_CAP;\n    balances[msg.sender] = SUPPLY_CAP;\n  }\n}", "debug": "calldata_YOURCOIN_4 + calldata_YOURCOIN_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\nstorage_3: 0x0\ncaller: 0x0\ncalldata_YOURCOIN_0: 0x2d7b299d00000000000000000000000000000000000000000000000000000000\ncalldatasize_YOURCOIN: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `setNote(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/44/0x746141bea474ae174f210f99603cf9c44802fe6e.sol", "function": "setNote(string)", "lineno": 133, "title": "Integer Overflow ", "type": "Warning"}], "success": true}