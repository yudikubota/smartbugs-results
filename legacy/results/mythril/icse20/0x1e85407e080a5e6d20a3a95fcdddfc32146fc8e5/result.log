{"error": null, "issues": [{"address": 595, "code": "nt balance = token.balanceOf(this);\n        token.transfer(controller", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/10/0x1e85407e080a5e6d20a3a95fcdddfc32146fc8e5.sol", "function": "fallback", "lineno": 632, "title": "Message call to external contract", "type": "Informational"}, {"address": 595, "code": "nt balance = token.balanceOf(this);\n        token.transfer(controller", "debug": "", "description": "A possible transaction order independence vulnerability exists in function fallback. The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/10/0x1e85407e080a5e6d20a3a95fcdddfc32146fc8e5.sol", "function": "fallback", "lineno": 632, "title": "Transaction order dependence", "type": "Warning"}, {"address": 1520, "code": "            _cloneDecimalUnits,\n            _cloneTokenSymbol,\n            _transfersEnabled\n            );\n\n        cloneToken.changeController(msg.sender);\n\n        // An event to make the token easy to find on the blockchain\n        emit NewCloneToken(address(cloneToken), _snapshotBlock);\n        return address(cloneToken);\n    }\n\n////////////////\n// Generate and destroy tokens\n////////////////\n\n    /// @notice Generates `_amount` tokens that are assigned to `_owner`\n    /// @param _owner The address that will be assigned the new tokens\n    /// @param _amount The quantity of tokens generated\n    /// @return True if the tokens are generated correctly\n    function generateTokens(address _owner, uint _amount) \n        public onlyController returns (bool) \n    {\n        uint curTotalSupply = totalSupply();", "debug": "calldata_TokenController_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_TokenController_0: 0x6638c08700000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenController: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `createCloneToken(string,uint8,string,uint256,bool)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/10/0x1e85407e080a5e6d20a3a95fcdddfc32146fc8e5.sol", "function": "createCloneToken(string,uint8,string,uint256,bool)", "lineno": 473, "title": "Integer Overflow ", "type": "Warning"}, {"address": 4801, "code": "\n    /// @param _blockNumber The block number when the totalSupply is q", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/10/0x1e85407e080a5e6d20a3a95fcdddfc32146fc8e5.sol", "function": "balanceOf(address)", "lineno": 420, "title": "Message call to external contract", "type": "Informational"}, {"address": 5572, "code": "te and destroy tokens\n////////////////\n\n    /// @notice Generates `_amount` tokens that are assigned to `_owner`\n    /// @param _owner The address that will be assigned the new tokens\n    /// @param _amount The quantity", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/10/0x1e85407e080a5e6d20a3a95fcdddfc32146fc8e5.sol", "function": "createCloneToken(string,uint8,string,uint256,bool)", "lineno": 486, "title": "Message call to external contract", "type": "Informational"}, {"address": 5572, "code": "te and destroy tokens\n////////////////\n\n    /// @notice Generates `_amount` tokens that are assigned to `_owner`\n    /// @param _owner The address that will be assigned the new tokens\n    /// @param _amount The quantity", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 5788\n", "filename": "/unique_chucks/10/0x1e85407e080a5e6d20a3a95fcdddfc32146fc8e5.sol", "function": "createCloneToken(string,uint8,string,uint256,bool)", "lineno": 486, "title": "Multiple Calls", "type": "Information"}, {"address": 5788, "code": "nerated\n    /// @return True if the tok", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/10/0x1e85407e080a5e6d20a3a95fcdddfc32146fc8e5.sol", "function": "createCloneToken(string,uint8,string,uint256,bool)", "lineno": 491, "title": "Message call to external contract", "type": "Warning"}, {"address": 6779, "code": "ion being\n    ///  this token at `_snapshotBlock`\n    /// @param ", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/10/0x1e85407e080a5e6d20a3a95fcdddfc32146fc8e5.sol", "function": "totalSupply()", "lineno": 447, "title": "Message call to external contract", "type": "Informational"}, {"address": 9339, "code": "e token\n    /// @param _spender The address of the account able to t", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/10/0x1e85407e080a5e6d20a3a95fcdddfc32146fc8e5.sol", "function": "approve(address,uint256)", "lineno": 351, "title": "Message call to external contract", "type": "Informational"}, {"address": 9339, "code": "e token\n    /// @param _spender The address of the account able to t", "debug": "", "description": "A possible transaction order independence vulnerability exists in function approve(address,uint256). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/10/0x1e85407e080a5e6d20a3a95fcdddfc32146fc8e5.sol", "function": "approve(address,uint256)", "lineno": 351, "title": "Transaction order dependence", "type": "Warning"}, {"address": 9535, "code": "/// @return Amount of remaining tokens ", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/10/0x1e85407e080a5e6d20a3a95fcdddfc32146fc8e5.sol", "function": "approve(address,uint256)", "lineno": 353, "title": "State change after external call", "type": "Warning"}], "success": true}