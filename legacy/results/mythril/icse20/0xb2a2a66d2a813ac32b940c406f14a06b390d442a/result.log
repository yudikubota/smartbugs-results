{"error": null, "issues": [{"address": 1546, "code": "ess[]) {\n        return owners;\n    }\n}\n\n// File: contracts/math/SafeMath.sol\n\n/**\n * @ti", "debug": "storage_4: 0x800000000000000000000000000000000000000000000000000000000000000\ncalldata_TransferLimitedToken_0: 0xa0e67e2b00000000000000000000000000000000000000000000000000000000\ncalldatasize_TransferLimitedToken: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `getOwners()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/2/0xb2a2a66d2a813ac32b940c406f14a06b390d442a.sol", "function": "getOwners()", "lineno": 51, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2633, "code": "ublic owners;\n    mappi", "debug": "The exception is triggered under the following conditions:\n\ncalldata_TransferLimitedToken_4: 0x0\nstorage_4: 0x0\ncalldata_TransferLimitedToken_0: 0x25e7c2700000000000000000000000000000000000000000000000000000000\ncalldatasize_TransferLimitedToken: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/2/0xb2a2a66d2a813ac32b940c406f14a06b390d442a.sol", "function": "_function_0x025e7c27", "lineno": 12, "title": "Exception state", "type": "Informational"}, {"address": 4307, "code": "enEventListener(_listener", "debug": "The exception is triggered under the following conditions:\n\nstorage_6: 0xff00\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xff00\ncalldata_TransferLimitedToken_0: 0x867904b400000000000000000000000000000000000000000000000000000000\ncalldatasize_TransferLimitedToken: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/2/0xb2a2a66d2a813ac32b940c406f14a06b390d442a.sol", "function": "issue(address,uint256)", "lineno": 346, "title": "Exception state", "type": "Informational"}, {"address": 4477, "code": "eMath.sol\n\n/*", "debug": "storage_4: 0x8421003f084001f4210815cf88407c00000000000000037c1d000e8d178001f\ncalldata_TransferLimitedToken_0: 0xa0e67e2b00000000000000000000000000000000000000000000000000000000\ncalldatasize_TransferLimitedToken: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `getOwners()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/2/0xb2a2a66d2a813ac32b940c406f14a06b390d442a.sol", "function": "getOwners()", "lineno": 56, "title": "Integer Overflow ", "type": "Warning"}, {"address": 4479, "code": "eMath.sol\n\n/*", "debug": "storage_4: 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffb\ncalldata_TransferLimitedToken_0: 0xa0e67e2b00000000000000000000000000000000000000000000000000000000\ncalldatasize_TransferLimitedToken: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `getOwners()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/2/0xb2a2a66d2a813ac32b940c406f14a06b390d442a.sol", "function": "getOwners()", "lineno": 56, "title": "Integer Overflow ", "type": "Warning"}, {"address": 6777, "code": ") public {\n        if(", "debug": "The exception is triggered under the following conditions:\n\nstorage_6: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TransferLimitedToken_32_+_4: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TransferLimitedToken_4: 0x0\nstorage_8: 0xff00\ncalldata_TransferLimitedToken_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_TransferLimitedToken: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/2/0xb2a2a66d2a813ac32b940c406f14a06b390d442a.sol", "function": "transferFrom(address,address,uint256)", "lineno": 344, "title": "Exception state", "type": "Informational"}, {"address": 7473, "code": "@titl", "debug": "calldata_TransferLimitedToken_32 + 36: 0xfe51000008ce80008001c1d33616877ffffffffffffff7ffffe10000398d50ac\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TransferLimitedToken_32_+_4: 0xc050fffff320c00020003d81af848540000000000000040000110001bd062022\ncalldata_TransferLimitedToken_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xfe51000008ce80008001c1d33616877ffffffffffffff7ffffe10000398d50ac\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TransferLimitedToken_4: 0xfe51000008ce80008001c1d33616877ffffffffffffff7ffffe10000398d50ac\nstorage_6: 0xff00\nstorage_8: 0x0\ncalldata_TransferLimitedToken_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_TransferLimitedToken: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `transferFrom(address,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/2/0xb2a2a66d2a813ac32b940c406f14a06b390d442a.sol", "function": "transferFrom(address,address,uint256)", "lineno": 107, "title": "Integer Overflow ", "type": "Warning"}, {"address": 7486, "code": " interface\n * ", "debug": "The exception is triggered under the following conditions:\n\ncalldata_TransferLimitedToken_32 + 36: 0x40000000000000000000000000000000002000000000000020040\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TransferLimitedToken_4: 0xfffbfffffffffffffffffffffffffffffffffffffffffbfffffffffffffb007e\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TransferLimitedToken_32_+_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0040\ncalldata_TransferLimitedToken_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x40000000000000000000000000000000002000000000000020040\nstorage_6: 0xff00\nstorage_8: 0xff00\ncalldata_TransferLimitedToken_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_TransferLimitedToken: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/2/0xb2a2a66d2a813ac32b940c406f14a06b390d442a.sol", "function": "transferFrom(address,address,uint256)", "lineno": 107, "title": "Exception state", "type": "Informational"}], "success": true}