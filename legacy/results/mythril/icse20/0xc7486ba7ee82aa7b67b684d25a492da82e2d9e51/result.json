{
  "contract": "0xc7486ba7ee82aa7b67b684d25a492da82e2d9e51",
  "tool": "mythril",
  "start": 1563399193.738423,
  "end": 1563399299.8115914,
  "duration": 106.07316827774048,
  "analysis": {
    "success": false,
    "error": "Solc experienced a fatal error (code 1).\n\n/unique_contracts/0xc7486ba7ee82aa7b67b684d25a492da82e2d9e51.sol:1:1: Error: Source file requires different compiler version (current compiler is 0.4.25+commit.59dbf8f1.Linux.g++ - note that nightly builds are considered to be strictly less than the released version\npragma solidity 0.4.23;\r\n^---------------------^\n/unique_contracts/0xc7486ba7ee82aa7b67b684d25a492da82e2d9e51.sol:56:5: Warning: Functions in interfaces should be declared external.\n    function isValidator(address _validator) public view returns(bool);\r\n    ^-----------------------------------------------------------------^\n/unique_contracts/0xc7486ba7ee82aa7b67b684d25a492da82e2d9e51.sol:57:5: Warning: Functions in interfaces should be declared external.\n    function requiredSignatures() public view returns(uint256);\r\n    ^---------------------------------------------------------^\n/unique_contracts/0xc7486ba7ee82aa7b67b684d25a492da82e2d9e51.sol:58:5: Warning: Functions in interfaces should be declared external.\n    function owner() public view returns(address);\r\n    ^--------------------------------------------^\n/unique_contracts/0xc7486ba7ee82aa7b67b684d25a492da82e2d9e51.sol:144:16: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n        return keccak256(prefix, msgLength, message);\r\n               ^-----------------------------------^\n/unique_contracts/0xc7486ba7ee82aa7b67b684d25a492da82e2d9e51.sol:363:28: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n        return uintStorage[keccak256(\"totalSpentPerDay\", _day)];\r\n                           ^---------------------------------^\n/unique_contracts/0xc7486ba7ee82aa7b67b684d25a492da82e2d9e51.sol:393:27: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n        bytes32 hashMsg = keccak256(recipient, value, transactionHash);\r\n                          ^------------------------------------------^\n/unique_contracts/0xc7486ba7ee82aa7b67b684d25a492da82e2d9e51.sol:394:30: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n        bytes32 hashSender = keccak256(msg.sender, hashMsg);\r\n                             ^----------------------------^\n/unique_contracts/0xc7486ba7ee82aa7b67b684d25a492da82e2d9e51.sol:430:30: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n        bytes32 hashSender = keccak256(msg.sender, hashMsg);\r\n                             ^----------------------------^\n/unique_contracts/0xc7486ba7ee82aa7b67b684d25a492da82e2d9e51.sol:444:27: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n        bytes32 signIdx = keccak256(hashMsg, (signed-1));\r\n                          ^----------------------------^\n/unique_contracts/0xc7486ba7ee82aa7b67b684d25a492da82e2d9e51.sol:465:27: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n        bytes32 signIdx = keccak256(_hash, _index);\r\n                          ^----------------------^\n/unique_contracts/0xc7486ba7ee82aa7b67b684d25a492da82e2d9e51.sol:493:29: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n        return bytesStorage[keccak256(\"messages\", _hash)];\r\n                            ^--------------------------^\n/unique_contracts/0xc7486ba7ee82aa7b67b684d25a492da82e2d9e51.sol:497:22: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n        bytesStorage[keccak256(\"messages\", _hash)] = _message;\r\n                     ^--------------------------^\n/unique_contracts/0xc7486ba7ee82aa7b67b684d25a492da82e2d9e51.sol:501:29: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n        return bytesStorage[keccak256(\"signatures\", _hash)];\r\n                            ^----------------------------^\n/unique_contracts/0xc7486ba7ee82aa7b67b684d25a492da82e2d9e51.sol:505:22: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n        bytesStorage[keccak256(\"signatures\", _hash)] = _signature;\r\n                     ^----------------------------^\n/unique_contracts/0xc7486ba7ee82aa7b67b684d25a492da82e2d9e51.sol:509:28: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n        return boolStorage[keccak256(\"messagesSigned\", _message)];\r\n                           ^-----------------------------------^\n/unique_contracts/0xc7486ba7ee82aa7b67b684d25a492da82e2d9e51.sol:513:28: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n        return boolStorage[keccak256(\"depositsSigned\", _deposit)];\r\n                           ^-----------------------------------^\n/unique_contracts/0xc7486ba7ee82aa7b67b684d25a492da82e2d9e51.sol:521:28: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n        return uintStorage[keccak256(\"numMessagesSigned\", _message)];\r\n                           ^--------------------------------------^\n/unique_contracts/0xc7486ba7ee82aa7b67b684d25a492da82e2d9e51.sol:525:28: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n        return uintStorage[keccak256(\"numDepositsSigned\", _deposit)];\r\n                           ^--------------------------------------^\n/unique_contracts/0xc7486ba7ee82aa7b67b684d25a492da82e2d9e51.sol:529:21: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n        boolStorage[keccak256(\"messagesSigned\", _hash)] = _status;\r\n                    ^--------------------------------^\n/unique_contracts/0xc7486ba7ee82aa7b67b684d25a492da82e2d9e51.sol:533:21: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n        boolStorage[keccak256(\"depositsSigned\", _deposit)] = _status;\r\n                    ^-----------------------------------^\n/unique_contracts/0xc7486ba7ee82aa7b67b684d25a492da82e2d9e51.sol:537:21: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n        uintStorage[keccak256(\"numMessagesSigned\", _message)] = _number;\r\n                    ^--------------------------------------^\n/unique_contracts/0xc7486ba7ee82aa7b67b684d25a492da82e2d9e51.sol:541:21: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n        uintStorage[keccak256(\"numDepositsSigned\", _deposit)] = _number;\r\n                    ^--------------------------------------^\n/unique_contracts/0xc7486ba7ee82aa7b67b684d25a492da82e2d9e51.sol:545:21: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n        uintStorage[keccak256(\"totalSpentPerDay\", _day)] = _value;\r\n                    ^---------------------------------^\n",
    "issues": []
  }
}