{"error": null, "issues": [{"address": 2136, "code": "transferOwnership(address _n", "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncalldata_ParticipantInvestRestrictions_0: 0x612c9dea00000000000000000000000000000000000000000000000000000000\ncalldatasize_ParticipantInvestRestrictions: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/11/0xb7f78e6016cd45a448d3703ab1b4f5b5e5d41e69.sol", "function": "unreserveFor(address)", "lineno": 66, "title": "Exception state", "type": "Informational"}, {"address": 2245, "code": "nagerOnly {\n   ", "debug": "storage_5: 0xffffffff00\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_ParticipantInvestRestrictions_4: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xff00\ncalldata_ParticipantInvestRestrictions_0: 0x6981741000000000000000000000000000000000000000000000000000000000\ncalldatasize_ParticipantInvestRestrictions: 0x4\ncallvalue: 0x0\n", "description": "A possible integer underflow exists in the function `investHappened(address,uint256)`.\nThe subtraction may result in a value < 0.", "filename": "/unique_chucks/11/0xb7f78e6016cd45a448d3703ab1b4f5b5e5d41e69.sol", "function": "investHappened(address,uint256)", "lineno": 266, "title": "Integer Underflow", "type": "Warning"}, {"address": 2633, "code": "transferOwnership(address _n", "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncalldata_ParticipantInvestRestrictions_0: 0x6981741000000000000000000000000000000000000000000000000000000000\ncalldatasize_ParticipantInvestRestrictions: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/11/0xb7f78e6016cd45a448d3703ab1b4f5b5e5d41e69.sol", "function": "investHappened(address,uint256)", "lineno": 66, "title": "Exception state", "type": "Informational"}, {"address": 3232, "code": "return false;\n    }\n \n    /**@dev IIn", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/11/0xb7f78e6016cd45a448d3703ab1b4f5b5e5d41e69.sol", "function": "canInvest(address,uint256,uint256)", "lineno": 226, "title": "Message call to external contract", "type": "Informational"}, {"address": 3232, "code": "return false;\n    }\n \n    /**@dev IIn", "debug": "", "description": "A possible transaction order independence vulnerability exists in function canInvest(address,uint256,uint256). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/11/0xb7f78e6016cd45a448d3703ab1b4f5b5e5d41e69.sol", "function": "canInvest(address,uint256,uint256)", "lineno": 226, "title": "Transaction order dependence", "type": "Warning"}, {"address": 3307, "code": "tion investHappened(add", "debug": "retval_3232: 0x93931c13e507cbbcbf74d9eee4fb920eeaef84aa5110428da2eddb017d5ebcdd\nstorage_8: 0xb2c81e3be60b809eebca250ae5f3958de8241f3c0942692d3cecd1fd00743211\ncalldata_ParticipantInvestRestrictions_32 + 4: 0x0\nreturndatasize: 0x40\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_2: 0x0\ncalldata_ParticipantInvestRestrictions_0: 0x701e572900000000000000000000000000000000000000000000000000000000\ncalldatasize_ParticipantInvestRestrictions: 0x4\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_ParticipantInvestRestrictions_4: 0x0\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `canInvest(address,uint256,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/11/0xb7f78e6016cd45a448d3703ab1b4f5b5e5d41e69.sol", "function": "canInvest(address,uint256,uint256)", "lineno": 230, "title": "Integer Overflow ", "type": "Warning"}, {"address": 3515, "code": "transferOwnership(address _n", "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncalldata_ParticipantInvestRestrictions_0: 0x819b25ba00000000000000000000000000000000000000000000000000000000\ncalldatasize_ParticipantInvestRestrictions: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/11/0xb7f78e6016cd45a448d3703ab1b4f5b5e5d41e69.sol", "function": "reserve(uint256)", "lineno": 66, "title": "Exception state", "type": "Informational"}, {"address": 3604, "code": " address specified by an ", "debug": "storage_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_6: 0xfffffffe00\nstorage_5: 0x100\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xff00\ncalldata_ParticipantInvestRestrictions_0: 0x819b25ba00000000000000000000000000000000000000000000000000000000\ncalldatasize_ParticipantInvestRestrictions: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `reserve(uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/11/0xb7f78e6016cd45a448d3703ab1b4f5b5e5d41e69.sol", "function": "reserve(uint256)", "lineno": 276, "title": "Integer Overflow ", "type": "Warning"}, {"address": 4058, "code": "    _;\n    }\n\n    /**@dev a", "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_ParticipantInvestRestrictions_0: 0xa5e90eee00000000000000000000000000000000000000000000000000000000\ncalldatasize_ParticipantInvestRestrictions: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/11/0xb7f78e6016cd45a448d3703ab1b4f5b5e5d41e69.sol", "function": "setManager(address,bool)", "lineno": 35, "title": "Exception state", "type": "Informational"}, {"address": 4345, "code": "transferOwnership(address _n", "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncalldata_ParticipantInvestRestrictions_0: 0xbb01aa3900000000000000000000000000000000000000000000000000000000\ncalldatasize_ParticipantInvestRestrictions: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/11/0xb7f78e6016cd45a448d3703ab1b4f5b5e5d41e69.sol", "function": "unreserve(uint32)", "lineno": 66, "title": "Exception state", "type": "Informational"}, {"address": 4867, "code": "transferOwnership(address _n", "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncalldata_ParticipantInvestRestrictions_0: 0xde7337a100000000000000000000000000000000000000000000000000000000\ncalldatasize_ParticipantInvestRestrictions: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/11/0xb7f78e6016cd45a448d3703ab1b4f5b5e5d41e69.sol", "function": "changeFloor(uint256)", "lineno": 66, "title": "Exception state", "type": "Informational"}], "success": true}