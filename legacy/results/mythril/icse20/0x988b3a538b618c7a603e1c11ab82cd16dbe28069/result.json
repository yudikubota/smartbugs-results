{
  "contract": "0x988b3a538b618c7a603e1c11ab82cd16dbe28069",
  "tool": "mythril",
  "start": 1563496298.8350143,
  "end": 1563497636.367941,
  "duration": 1337.5329265594482,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 334,
        "code": " view returns(uint startIndex, uint[] values, bool hasMore) {\n        SortitionSumTree storage tree = self.sortitionSumTrees[_key];\n\n        // Find the start index.\n        for (uint i = 0; i < tree.nodes.length; i++) {\n            if ((tree.K * i) + 1 >= tree.nodes.length) {\n                startIndex = i;\n                break;\n            }\n        }\n\n        // Get the values.\n        uint loopStartIndex = startIndex + _cursor;\n        values = new uint[](loopStartIndex + _count > tree.nodes.length ? tree.nodes.length - loopStartIndex : _count);\n        uint valuesIndex = 0;\n        for (uint j = loopStartIndex; j < tree.nodes.length; j++) {\n            if (valuesIndex < _count) {\n                values[valuesIndex] = tree.nodes[j];\n                valuesIndex++;\n            } else {\n                hasMore = true;\n                break;\n            }\n        }\n    }\n\n    /**\n     *  @dev Draw an ID from a tree using a number. Note that this function reverts if the sum of all values in the tree is 0.\n     *  @param _key The key o",
        "debug": "calldata_TokenController_32 + 68: 0x1000a66b9822126800641a01822308b100819280a10503040184b1988444c200\nstorage_2 +\nkeccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\ncalldata_TokenController_32_+_4: 0x1\ncalldata_TokenController_32 + 36: 0xefff599467dded97ff9be5fe7ddcf74eff7e6d7f5efafcfbfe7b4e677bbb3e00\ncalldata_TokenController_0: 0x65b81f4f00000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenController: 0x4\n",
        "description": "A possible integer overflow exists in the function `_function_0x65b81f4f`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/6/0x988b3a538b618c7a603e1c11ab82cd16dbe28069.sol",
        "function": "_function_0x65b81f4f",
        "lineno": 143,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1705,
        "code": "        ui",
        "debug": "storage_2 +\nkeccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\ncalldata_TokenController_32_+_4: 0x8000000000000000000000000000000000000000000000000000000000000003\nstorage_0 +\nkeccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\ncalldata_TokenController_32_+_4: 0x8000000000000000000000000000000000000000000000000000000000000000\ncalldata_TokenController_0: 0x65b81f4f00000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenController: 0x4\n",
        "description": "A possible integer overflow exists in the function `_function_0x65b81f4f`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/6/0x988b3a538b618c7a603e1c11ab82cd16dbe28069.sol",
        "function": "_function_0x65b81f4f",
        "lineno": 155,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1706,
        "code": "\n        uint lo",
        "debug": "storage_2 +\nkeccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\ncalldata_TokenController_32_+_4: 0x1000000000000000000000000000000000000000000000\nstorage_0 +\nkeccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\ncalldata_TokenController_32_+_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_TokenController_0: 0x65b81f4f00000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenController: 0x4\n",
        "description": "A possible integer overflow exists in the function `_function_0x65b81f4f`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/6/0x988b3a538b618c7a603e1c11ab82cd16dbe28069.sol",
        "function": "_function_0x65b81f4f",
        "lineno": 154,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1737,
        "code": " valuesIndex = 0;\n  ",
        "debug": "storage_2 +\nkeccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\ncalldata_TokenController_32_+_4: 0x8000000000000000000000000000000000000000000000000000000000000000\ncalldata_TokenController_32 + 36: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_0 +\nkeccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\ncalldata_TokenController_32_+_4: 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_TokenController_0: 0x65b81f4f00000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenController: 0x4\n",
        "description": "A possible integer overflow exists in the function `_function_0x65b81f4f`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/6/0x988b3a538b618c7a603e1c11ab82cd16dbe28069.sol",
        "function": "_function_0x65b81f4f",
        "lineno": 157,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1750,
        "code": "dex; j < tree.nodes.len",
        "debug": "calldata_TokenController_32 + 68: 0x57f25cd000000000000000000000000000000000000000000000000000000000\nstorage_2 +\nkeccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\ncalldata_TokenController_32_+_4: 0x1\ncalldata_TokenController_32 + 36: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncalldata_TokenController_0: 0x65b81f4f00000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenController: 0x4\n",
        "description": "A possible integer overflow exists in the function `_function_0x65b81f4f`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/6/0x988b3a538b618c7a603e1c11ab82cd16dbe28069.sol",
        "function": "_function_0x65b81f4f",
        "lineno": 158,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1771,
        "code": " if (valuesIndex < _count) {\n     ",
        "debug": "storage_2 +\nkeccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\ncalldata_TokenController_32_+_4: 0x1\ncalldata_TokenController_32 + 36: 0x2\ncalldata_TokenController_32 + 68: 0x0\ncalldata_TokenController_0: 0x65b81f4f00000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenController: 0x4\n",
        "description": "A possible integer underflow exists in the function `_function_0x65b81f4f`.\nThe subtraction may result in a value < 0.",
        "filename": "/unique_chucks/6/0x988b3a538b618c7a603e1c11ab82cd16dbe28069.sol",
        "function": "_function_0x65b81f4f",
        "lineno": 159,
        "title": "Integer Underflow",
        "type": "Warning"
      },
      {
        "address": 2060,
        "code": "tart from.\n     *  @p",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\ncalldata_TokenController_32_+_36: 0x1\nstorage_2 +\nkeccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\ncalldata_TokenController_32_+_4: 0x1\ncalldata_TokenController_0: 0x7521ccb100000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenController: 0x4\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/6/0x988b3a538b618c7a603e1c11ab82cd16dbe28069.sol",
        "function": "_function_0x7521ccb1",
        "lineno": 216,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2147,
        "code": ".\n           ",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_TokenController_0: 0x88c1d46700000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenController: 0x4\nstorage_2 +\nkeccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\ncalldata_TokenController_32_+_4: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/6/0x988b3a538b618c7a603e1c11ab82cd16dbe28069.sol",
        "function": "_function_0x88c1d467",
        "lineno": 184,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2168,
        "code": "p over children.\n           ",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_2 +\nkeccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\ncalldata_TokenController_32_+_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_TokenController_0: 0x88c1d46700000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenController: 0x4\nstorage_keccac_2_+\nkeccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\ncalldata_TokenController_32_+_4 +\n0: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/6/0x988b3a538b618c7a603e1c11ab82cd16dbe28069.sol",
        "function": "_function_0x88c1d467",
        "lineno": 184,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2242,
        "code": "             treeInde",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_TokenController_32 + 36: 0xf0200000020000a01091000004000c20201c80d00a000100200380000074000f\nstorage_2 +\nkeccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\ncalldata_TokenController_32_+_4: 0x3\nstorage_keccac_2_+\nkeccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\ncalldata_TokenController_32_+_4 +\n0: 0xc0400000020001201112000008001040404080d00a0001004044000000800010\nstorage_0 +\nkeccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\ncalldata_TokenController_32_+_4: 0x3\nstorage_keccac_2_+\nkeccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\ncalldata_TokenController_32_+_4 +\n1: 0x0\nstorage_keccac_2_+\nkeccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\ncalldata_TokenController_32_+_4 +\n2: 0x2fdfffffffffff7fff7efffffbfffbdfdfdbffffffffffffdfbf7ffffff3ffff\ncalldata_TokenController_0: 0x88c1d46700000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenController: 0x4\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/6/0x988b3a538b618c7a603e1c11ab82cd16dbe28069.sol",
        "function": "_function_0x88c1d467",
        "lineno": 190,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}