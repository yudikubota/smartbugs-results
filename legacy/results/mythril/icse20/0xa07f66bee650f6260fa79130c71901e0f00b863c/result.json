{
  "contract": "0xa07f66bee650f6260fa79130c71901e0f00b863c",
  "tool": "mythril",
  "start": 1563615925.85816,
  "end": 1563616085.0739748,
  "duration": 159.21581482887268,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 2900,
        "code": "s is CanReclaimToken ",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/24/0xa07f66bee650f6260fa79130c71901e0f00b863c.sol",
        "function": "_function_0x17ffc320",
        "lineno": 477,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 2900,
        "code": "s is CanReclaimToken ",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 6854\n",
        "filename": "/unique_chucks/24/0xa07f66bee650f6260fa79130c71901e0f00b863c.sol",
        "function": "_function_0x17ffc320",
        "lineno": 477,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 3635,
        "code": "ntableToken, NoOwner {\n    string pub",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/24/0xa07f66bee650f6260fa79130c71901e0f00b863c.sol",
        "function": "reclaimContract(address)",
        "lineno": 527,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 5776,
        "code": " {\n  function safeTransfer(ERC20Basic",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function reclaimEther(). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/24/0xa07f66bee650f6260fa79130c71901e0f00b863c.sol",
        "function": "reclaimEther()",
        "lineno": 425,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 6854,
        "code": "* @title Contracts that s",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/24/0xa07f66bee650f6260fa79130c71901e0f00b863c.sol",
        "function": "_function_0x17ffc320",
        "lineno": 449,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 7885,
        "code": "// Fi",
        "debug": "calldata_Token_32 + 4: 0x57f25cd000000000000000000000000000000000000000000000000000000000\nstorage_1: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_3: 0x0\ncaller: 0x0\ncalldata_Token_0: 0x40c10f1900000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `mint(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/24/0xa07f66bee650f6260fa79130c71901e0f00b863c.sol",
        "function": "mint(address,uint256)",
        "lineno": 55,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 7898,
        "code": "e_modules\\open",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_3: 0x0\nstorage_1: 0x1\ncalldata_Token_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncaller: 0x0\ncalldata_Token_0: 0x40c10f1900000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/24/0xa07f66bee650f6260fa79130c71901e0f00b863c.sol",
        "function": "mint(address,uint256)",
        "lineno": 55,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}