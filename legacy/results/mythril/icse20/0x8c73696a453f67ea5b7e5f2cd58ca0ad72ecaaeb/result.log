{"error": null, "issues": [{"address": 204, "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/13/0x8c73696a453f67ea5b7e5f2cd58ca0ad72ecaaeb.sol", "function": "fallback", "lineno": 255, "title": "Message call to external contract", "type": "Informational"}, {"address": 204, "debug": "", "description": "A possible transaction order independence vulnerability exists in function fallback. The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/13/0x8c73696a453f67ea5b7e5f2cd58ca0ad72ecaaeb.sol", "function": "fallback", "lineno": 255, "title": "Transaction order dependence", "type": "Warning"}, {"address": 1201, "code": " uint256 l = lockRecords.push(r);\n        em", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/13/0x8c73696a453f67ea5b7e5f2cd58ca0ad72ecaaeb.sol", "function": "deposit(address,uint256,uint256)", "lineno": 200, "title": "Message call to external contract", "type": "Informational"}, {"address": 1274, "code": "(1));\n    }\n  ", "debug": "calldata_TokenLock_32 + 36: 0x200000000000000000000000000000000000000000000000000000000000000\nreturndatasize: 0x20\nretval_1201: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_TokenLock_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_0: 0x0\ncaller: 0x0\ncalldata_TokenLock_0: 0xefe6a8b00000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenLock: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `deposit(address,uint256,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/13/0x8c73696a453f67ea5b7e5f2cd58ca0ad72ecaaeb.sol", "function": "deposit(address,uint256,uint256)", "lineno": 201, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1276, "code": "releaseTime, l.sub(1));\n    }\n  ", "debug": "timestamp: 0x29189e3775e07a568b57c32affec278f748807883841d3e9675e40904a48aa80\ncalldata_TokenLock_32 + 36: 0x86333caec32ab3cd6168662afd0bebbd5187de81937a720a45887a4ba94a43\nreturndatasize: 0x20\nretval_1201: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_TokenLock_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_0: 0x0\ncaller: 0x0\ncalldata_TokenLock_0: 0xefe6a8b00000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenLock: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `deposit(address,uint256,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/13/0x8c73696a453f67ea5b7e5f2cd58ca0ad72ecaaeb.sol", "function": "deposit(address,uint256,uint256)", "lineno": 201, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1340, "code": ";\n\nlibrary SafeMat", "debug": "storage_2: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nreturndatasize: 0x20\nretval_1201: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_TokenLock_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_0: 0x0\ncaller: 0x0\ncalldata_TokenLock_0: 0xefe6a8b00000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenLock: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `deposit(address,uint256,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/13/0x8c73696a453f67ea5b7e5f2cd58ca0ad72ecaaeb.sol", "function": "deposit(address,uint256,uint256)", "lineno": 1, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1343, "code": "\n  /**\n  * @dev Multipl", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/13/0x8c73696a453f67ea5b7e5f2cd58ca0ad72ecaaeb.sol", "function": "deposit(address,uint256,uint256)", "lineno": 4, "title": "State change after external call", "type": "Warning"}, {"address": 1446, "code": "rOnly {\n        req", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/13/0x8c73696a453f67ea5b7e5f2cd58ca0ad72ecaaeb.sol", "function": "deposit(address,uint256,uint256)", "lineno": 204, "title": "State change after external call", "type": "Warning"}, {"address": 1457, "code": "rOnly {\n        req", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/13/0x8c73696a453f67ea5b7e5f2cd58ca0ad72ecaaeb.sol", "function": "deposit(address,uint256,uint256)", "lineno": 204, "title": "State change after external call", "type": "Warning"}, {"address": 1467, "code": "rOnly {\n        req", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/13/0x8c73696a453f67ea5b7e5f2cd58ca0ad72ecaaeb.sol", "function": "deposit(address,uint256,uint256)", "lineno": 204, "title": "State change after external call", "type": "Warning"}, {"address": 1961, "code": "\n            \"Merch", "debug": "The exception is triggered under the following conditions:\n\ncalldata_TokenLock_4: 0x0\nstorage_2: 0x0\nstorage_keccac_calldata_TokenLock_4: 0x0\nstorage_0: 0x0\ncaller: 0x0\ncalldata_TokenLock_0: 0x229c9f6c00000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenLock: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/13/0x8c73696a453f67ea5b7e5f2cd58ca0ad72ecaaeb.sol", "function": "release(uint256,address,uint256)", "lineno": 218, "title": "Exception state", "type": "Informational"}, {"address": 2473, "code": "Amount));\n        }\n\n        lockStatus[_index", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/13/0x8c73696a453f67ea5b7e5f2cd58ca0ad72ecaaeb.sol", "function": "release(uint256,address,uint256)", "lineno": 229, "title": "Message call to external contract", "type": "Informational"}, {"address": 2473, "code": "Amount));\n        }\n\n        lockStatus[_index", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2811\n", "filename": "/unique_chucks/13/0x8c73696a453f67ea5b7e5f2cd58ca0ad72ecaaeb.sol", "function": "release(uint256,address,uint256)", "lineno": 229, "title": "Multiple Calls", "type": "Information"}, {"address": 2811, "code": "dress (where ICO ETH is being forwarded).\n ", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/13/0x8c73696a453f67ea5b7e5f2cd58ca0ad72ecaaeb.sol", "function": "release(uint256,address,uint256)", "lineno": 237, "title": "Message call to external contract", "type": "Informational"}, {"address": 2922, "code": "eOwner(address _newowner)", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/13/0x8c73696a453f67ea5b7e5f2cd58ca0ad72ecaaeb.sol", "function": "release(uint256,address,uint256)", "lineno": 239, "title": "State change after external call", "type": "Warning"}, {"address": 3523, "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/13/0x8c73696a453f67ea5b7e5f2cd58ca0ad72ecaaeb.sol", "function": "kill()", "lineno": 255, "title": "Message call to external contract", "type": "Informational"}, {"address": 3832, "code": "rAddress, this, _a", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/13/0x8c73696a453f67ea5b7e5f2cd58ca0ad72ecaaeb.sol", "function": "getContractBalance()", "lineno": 197, "title": "Message call to external contract", "type": "Informational"}, {"address": 3832, "code": "rAddress, this, _a", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3523\n", "filename": "/unique_chucks/13/0x8c73696a453f67ea5b7e5f2cd58ca0ad72ecaaeb.sol", "function": "kill()", "lineno": 197, "title": "Multiple Calls", "type": "Information"}, {"address": 4252, "code": "_b;\n  }\n\n  /**\n ", "debug": "The exception is triggered under the following conditions:\n\nstorage_2: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nreturndatasize: 0x20\nretval_1201: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_TokenLock_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_0: 0x0\ncaller: 0x0\ncalldata_TokenLock_0: 0xefe6a8b00000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenLock: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/13/0x8c73696a453f67ea5b7e5f2cd58ca0ad72ecaaeb.sol", "function": "deposit(address,uint256,uint256)", "lineno": 36, "title": "Exception state", "type": "Informational"}], "success": true}