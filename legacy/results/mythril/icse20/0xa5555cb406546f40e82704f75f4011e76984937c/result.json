{
  "contract": "0xa5555cb406546f40e82704f75f4011e76984937c",
  "tool": "mythril",
  "start": 1563533884.7070942,
  "end": 1563533912.1449375,
  "duration": 27.437843322753906,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 88,
        "code": "n;\n        tokenReward",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_token_0: 0xeae7a76500000000000000000000000000000000000000000000000000000000\ncalldatasize_token: 0x4\nstorage_4: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/10/0xa5555cb406546f40e82704f75f4011e76984937c.sol",
        "function": "fallback",
        "lineno": 22,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 384,
        "code": "om(owner90, msg.sender, sendtoken);\n        \n        eth",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/10/0xa5555cb406546f40e82704f75f4011e76984937c.sol",
        "function": "fallback",
        "lineno": 23,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 384,
        "code": "om(owner90, msg.sender, sendtoken);\n        \n        eth",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 662\nCall at address: 555\n",
        "filename": "/unique_chucks/10/0xa5555cb406546f40e82704f75f4011e76984937c.sol",
        "function": "fallback",
        "lineno": 23,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 459,
        "code": ";\n        ether90 = (msg",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/10/0xa5555cb406546f40e82704f75f4011e76984937c.sol",
        "function": "fallback",
        "lineno": 25,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 470,
        "code": "er10;\n        owner90.transfe",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/10/0xa5555cb406546f40e82704f75f4011e76984937c.sol",
        "function": "fallback",
        "lineno": 26,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 555,
        "code": "\n        owner10.transfer",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 662\n",
        "filename": "/unique_chucks/10/0xa5555cb406546f40e82704f75f4011e76984937c.sol",
        "function": "fallback",
        "lineno": 27,
        "title": "Multiple Calls",
        "type": "Information"
      }
    ],
    "success": true
  }
}