{
  "contract": "0x8e3e25958ad448aeb5982a01b63bcb91355d56a5",
  "tool": "mythril",
  "start": 1563659697.6817188,
  "end": 1563659785.3183022,
  "duration": 87.63658332824707,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 319,
        "code": "   amountRaised += amount;\n    ",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xfffffffffffffffffffffffffffffffffffffffffffffffffeb2bfa005400045\ncallvalue: 0xbf2fbf3b76b0045\ncalldata_collectible_0: 0x100000000000000000000000000000000000000000000000000000000\ncalldatasize_collectible: 0x4\n",
        "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/33/0x8e3e25958ad448aeb5982a01b63bcb91355d56a5.sol",
        "function": "fallback",
        "lineno": 40,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 335,
        "code": "py = price;\n        ui",
        "debug": "callvalue: 0xd0f3f5f80ecbf1d\nstorage_1: 0xfffffffffffffffffffffffffffffffffffffffffffffffff986cbe17e3d42ff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncalldata_collectible_0: 0x100000000000000000000000000000000000000000000000000000000\ncalldatasize_collectible: 0x4\n",
        "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/33/0x8e3e25958ad448aeb5982a01b63bcb91355d56a5.sol",
        "function": "fallback",
        "lineno": 41,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 603,
        "code": "alue);\n        } else if (amountRaised <= 2100 ethe",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/33/0x8e3e25958ad448aeb5982a01b63bcb91355d56a5.sol",
        "function": "fallback",
        "lineno": 47,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 603,
        "code": "alue);\n        } else if (amountRaised <= 2100 ethe",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1216\n",
        "filename": "/unique_chucks/33/0x8e3e25958ad448aeb5982a01b63bcb91355d56a5.sol",
        "function": "fallback",
        "lineno": 47,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 737,
        "code": "wapaddress.transfer(",
        "debug": "The exception is triggered under the following conditions:\n\ncallvalue: 0x580140002000000\nstorage_1: 0x6019b08c001508000\nstorage_2: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncalldata_collectible_0: 0x100000000000000000000000000000000000000000000000000000000\ncalldatasize_collectible: 0x4\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/33/0x8e3e25958ad448aeb5982a01b63bcb91355d56a5.sol",
        "function": "fallback",
        "lineno": 52,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 875,
        "code": "alue);\n        } else {\n        swapaddress.transfer(m",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/33/0x8e3e25958ad448aeb5982a01b63bcb91355d56a5.sol",
        "function": "fallback",
        "lineno": 50,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 875,
        "code": "alue);\n        } else {\n        swapaddress.transfer(m",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1216\n",
        "filename": "/unique_chucks/33/0x8e3e25958ad448aeb5982a01b63bcb91355d56a5.sol",
        "function": "fallback",
        "lineno": 50,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 974,
        "code": "iary.send(msg.",
        "debug": "The exception is triggered under the following conditions:\n\ncallvalue: 0x40020002403fbc0\nstorage_1: 0x400000000000000000000000000000000006000aaa001c542c40\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncalldata_collectible_0: 0x100000000000000000000000000000000000000000000000000000000\ncalldatasize_collectible: 0x4\nstorage_2: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/33/0x8e3e25958ad448aeb5982a01b63bcb91355d56a5.sol",
        "function": "fallback",
        "lineno": 55,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 1112,
        "code": "       }\n        \n        beneficiary.send(msg.v",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/33/0x8e3e25958ad448aeb5982a01b63bcb91355d56a5.sol",
        "function": "fallback",
        "lineno": 53,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 1112,
        "code": "       }\n        \n        beneficiary.send(msg.v",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1216\n",
        "filename": "/unique_chucks/33/0x8e3e25958ad448aeb5982a01b63bcb91355d56a5.sol",
        "function": "fallback",
        "lineno": 53,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 1216,
        "code": "(msg.sender, amount, true);",
        "debug": "",
        "description": "The return value of an external call is not checked. Note that execution continue even if the called contract throws.",
        "filename": "/unique_chucks/33/0x8e3e25958ad448aeb5982a01b63bcb91355d56a5.sol",
        "function": "fallback",
        "lineno": 56,
        "title": "Unchecked CALL return value",
        "type": "Informational"
      },
      {
        "address": 1429,
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/33/0x8e3e25958ad448aeb5982a01b63bcb91355d56a5.sol",
        "function": "fallback",
        "lineno": 60,
        "title": "State change after external call",
        "type": "Warning"
      }
    ],
    "success": true
  }
}