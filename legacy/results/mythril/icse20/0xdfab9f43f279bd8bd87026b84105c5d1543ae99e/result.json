{
  "contract": "0xdfab9f43f279bd8bd87026b84105c5d1543ae99e",
  "tool": "mythril",
  "start": 1563290412.8128428,
  "end": 1563290562.1631243,
  "duration": 149.3502814769745,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 716,
        "code": "(c > 0);\n    ",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_Fermat_32 + 68: 0x2\ncalldata_Fermat_0: 0xe8b6fa8000000000000000000000000000000000000000000000000000000000\ncalldatasize_Fermat: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0xdfab9f43f279bd8bd87026b84105c5d1543ae99e.sol",
        "function": "claim(int256,int256,int256,int256)",
        "lineno": 79,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 728,
        "code": " aExp = power",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_Fermat_4: 0x0\ncalldata_Fermat_32 + 68: 0x3\ncalldata_Fermat_0: 0xe8b6fa8000000000000000000000000000000000000000000000000000000000\ncalldatasize_Fermat: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0xdfab9f43f279bd8bd87026b84105c5d1543ae99e.sol",
        "function": "claim(int256,int256,int256,int256)",
        "lineno": 80,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 740,
        "code": "     uint256 ",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_Fermat_32 + 4: 0x0\ncalldata_Fermat_4: 0x1\ncalldata_Fermat_32 + 68: 0x3\ncalldata_Fermat_0: 0xe8b6fa8000000000000000000000000000000000000000000000000000000000\ncalldatasize_Fermat: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0xdfab9f43f279bd8bd87026b84105c5d1543ae99e.sol",
        "function": "claim(int256,int256,int256,int256)",
        "lineno": 81,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 752,
        "code": "r(b, n);\n    ",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_Fermat_32 + 36: 0x0\ncalldata_Fermat_32 + 4: 0x1\ncalldata_Fermat_4: 0x1\ncalldata_Fermat_32 + 68: 0x3\ncalldata_Fermat_0: 0xe8b6fa8000000000000000000000000000000000000000000000000000000000\ncalldatasize_Fermat: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0xdfab9f43f279bd8bd87026b84105c5d1543ae99e.sol",
        "function": "claim(int256,int256,int256,int256)",
        "lineno": 81,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 876,
        "code": "          retu",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_Fermat_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_Fermat_0: 0x2a7c24f100000000000000000000000000000000000000000000000000000000\ncalldatasize_Fermat: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0xdfab9f43f279bd8bd87026b84105c5d1543ae99e.sol",
        "function": "power(int256,int256)",
        "lineno": 97,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 889,
        "code": "   }\n        for",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_Fermat_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_Fermat_4: 0x0\ncalldata_Fermat_0: 0x2a7c24f100000000000000000000000000000000000000000000000000000000\ncalldatasize_Fermat: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0xdfab9f43f279bd8bd87026b84105c5d1543ae99e.sol",
        "function": "power(int256,int256)",
        "lineno": 98,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 1146,
        "code": "nction getBalance() view public r",
        "debug": "",
        "description": "In the function `withdraw()` the following predictable state variables are used to determine Ether recipient:\n- block.timestamp\n",
        "filename": "/unique_contracts/0xdfab9f43f279bd8bd87026b84105c5d1543ae99e.sol",
        "function": "withdraw()",
        "lineno": 52,
        "title": "Dependence on predictable environment variable",
        "type": "Warning"
      }
    ],
    "success": true
  }
}