{
  "contract": "0x859e7e76caede3b642fc84862809f60c055cb731",
  "tool": "mythril",
  "start": 1563587770.3162568,
  "end": 1563587826.0450733,
  "duration": 55.728816509246826,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 1908,
        "code": "ernal\n        constant\n        noEther\n        returns (",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/23/0x859e7e76caede3b642fc84862809f60c055cb731.sol",
        "function": "earlyPurchases(uint256)",
        "lineno": 243,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 1908,
        "code": "ernal\n        constant\n        noEther\n        returns (",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function earlyPurchases(uint256). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/23/0x859e7e76caede3b642fc84862809f60c055cb731.sol",
        "function": "earlyPurchases(uint256)",
        "lineno": 243,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 2152,
        "code": "   *  Modifiers\n     */\n    modifier noEt",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_StarbaseEarlyPurchaseAmendment_4: 0x0\nstorage_3: 0x0\ncalldata_StarbaseEarlyPurchaseAmendment_0: 0x510e23eb00000000000000000000000000000000000000000000000000000000\ncalldatasize_StarbaseEarlyPurchaseAmendment: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/23/0x859e7e76caede3b642fc84862809f60c055cb731.sol",
        "function": "_function_0x510e23eb",
        "lineno": 194,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3100,
        "code": " }\n        _;\n    }\n\n    /*\n ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/23/0x859e7e76caede3b642fc84862809f60c055cb731.sol",
        "function": "invalidateEarlyPurchase(uint256)",
        "lineno": 222,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 3100,
        "code": " }\n        _;\n    }\n\n    /*\n ",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function invalidateEarlyPurchase(uint256). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/23/0x859e7e76caede3b642fc84862809f60c055cb731.sol",
        "function": "invalidateEarlyPurchase(uint256)",
        "lineno": 222,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 3745,
        "code": " }\n        _;\n    }\n\n    /*\n ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/23/0x859e7e76caede3b642fc84862809f60c055cb731.sol",
        "function": "amendEarlyPurchase(uint256,address,uint256,uint256)",
        "lineno": 222,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 3745,
        "code": " }\n        _;\n    }\n\n    /*\n ",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function amendEarlyPurchase(uint256,address,uint256,uint256). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/23/0x859e7e76caede3b642fc84862809f60c055cb731.sol",
        "function": "amendEarlyPurchase(uint256,address,uint256,uint256)",
        "lineno": 222,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 4479,
        "code": " }\n        _;\n    }\n\n    /*\n ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/23/0x859e7e76caede3b642fc84862809f60c055cb731.sol",
        "function": "loadStarbaseEarlyPurchases(address)",
        "lineno": 222,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 4479,
        "code": " }\n        _;\n    }\n\n    /*\n ",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function loadStarbaseEarlyPurchases(address). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/23/0x859e7e76caede3b642fc84862809f60c055cb731.sol",
        "function": "loadStarbaseEarlyPurchases(address)",
        "lineno": 222,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 4855,
        "code": "ons\n     */\n    function normalizedEarlyPurch",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/23/0x859e7e76caede3b642fc84862809f60c055cb731.sol",
        "function": "loadStarbaseEarlyPurchases(address)",
        "lineno": 416,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 5109,
        "code": "\n        if (msg.value > 0) {\n           ",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_StarbaseEarlyPurchaseAmendment_4: 0x0\nstorage_4: 0x0\ncalldata_StarbaseEarlyPurchaseAmendment_0: 0xf3c6485000000000000000000000000000000000000000000000000000000000\ncalldatasize_StarbaseEarlyPurchaseAmendment: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/23/0x859e7e76caede3b642fc84862809f60c055cb731.sol",
        "function": "_function_0xf3c64850",
        "lineno": 196,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 5338,
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/23/0x859e7e76caede3b642fc84862809f60c055cb731.sol",
        "function": "invalidateEarlyPurchase(uint256)",
        "lineno": 464,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 5338,
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function invalidateEarlyPurchase(uint256). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/23/0x859e7e76caede3b642fc84862809f60c055cb731.sol",
        "function": "invalidateEarlyPurchase(uint256)",
        "lineno": 464,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 5432,
        "code": "purchase should take a priority\n            } e",
        "debug": "retval_5338: 0x1\nstorage_3: 0x2\nreturndatasize: 0x20\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_1: 0xffffffffffffffffffffffffffffffffffffffff00\ncalldata_StarbaseEarlyPurchaseAmendment_0: 0x5aa3d2b000000000000000000000000000000000000000000000000000000000\ncalldatasize_StarbaseEarlyPurchaseAmendment: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer underflow exists in the function `purchasedAmountBy(address)`.\nThe subtraction may result in a value < 0.",
        "filename": "/unique_chucks/23/0x859e7e76caede3b642fc84862809f60c055cb731.sol",
        "function": "purchasedAmountBy(address)",
        "lineno": 435,
        "title": "Integer Underflow",
        "type": "Warning"
      }
    ],
    "success": true
  }
}