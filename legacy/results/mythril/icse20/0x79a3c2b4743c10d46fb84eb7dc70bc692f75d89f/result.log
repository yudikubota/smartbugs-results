{"error": null, "issues": [{"address": 6074, "code": "eturn a - b;\n ", "debug": "The exception is triggered under the following conditions:\n\ncalldata_tokenRecipient_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_5: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_1: 0x0\nstorage_0: 0x0\ncaller: 0x0\ncalldata_tokenRecipient_0: 0x42966c6800000000000000000000000000000000000000000000000000000000\ncalldatasize_tokenRecipient: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_contracts/0x79a3c2b4743c10d46fb84eb7dc70bc692f75d89f.sol", "function": "burn(uint256)", "lineno": 23, "title": "Exception state", "type": "Informational"}, {"address": 7236, "code": "c>=b)", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_tokenRecipient_4: 0xf59ce24be2040e3fe8737d73050000005fea8166a40062e3a9b013b8d09e00b4\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_tokenRecipient_32_+_4: 0x627cb1310c0c5e3be0e86e26ca4072bb08281e02615c444bf0b2c9286b560098\ncalldata_tokenRecipient_32 + 36: 0xda7d916b8e0c422be0ed6c6c042f28b267c80c064156a4eb6b90d2d5561a67d9\ncalldata_tokenRecipient_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\nstorage_1: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xda7d916b8e0c422be0ed6c6c042f28b267c80c064156a4eb6b90d2d5561a67d9\ncalldata_tokenRecipient_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_tokenRecipient: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `transferFrom(address,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x79a3c2b4743c10d46fb84eb7dc70bc692f75d89f.sol", "function": "transferFrom(address,address,uint256)", "lineno": 28, "title": "Integer Overflow ", "type": "Warning"}, {"address": 7261, "code": "eturn c;\n  }\n\n}\n\ncon", "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_tokenRecipient_4: 0x9ba6485f30119c00a0000000000000003804500002003fc00000001000000081\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_tokenRecipient_32_+_4: 0xa87a6015ee970a0bc2013d400dd7efcfff2f3e526fff80a6e17bb6a812e70031\ncalldata_tokenRecipient_32 + 36: 0x890260631013166140000000002000007f08a00004006f400000002080000203\ncalldata_tokenRecipient_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\nstorage_1: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x890260631013166140000000002000007f08a00004006f400000002080000203\ncalldata_tokenRecipient_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_tokenRecipient: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_contracts/0x79a3c2b4743c10d46fb84eb7dc70bc692f75d89f.sol", "function": "transferFrom(address,address,uint256)", "lineno": 29, "title": "Exception state", "type": "Informational"}], "success": true}