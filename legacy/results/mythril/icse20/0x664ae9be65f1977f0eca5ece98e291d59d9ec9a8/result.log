{"error": null, "issues": [{"address": 280, "code": "terDeadline() { if (now >  e", "debug": "The exception is triggered under the following conditions:\n\ntimestamp: 0x0\ncallvalue: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_5: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_11: 0x0\nstorage_10: 0x0\ncalldatasize_Tokensale: 0x3\nstorage_4: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/33/0x664ae9be65f1977f0eca5ece98e291d59d9ec9a8.sol", "function": "fallback", "lineno": 289, "title": "Exception state", "type": "Informational"}, {"address": 477, "code": "    // @return true if the ", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/33/0x664ae9be65f1977f0eca5ece98e291d59d9ec9a8.sol", "function": "fallback", "lineno": 291, "title": "Message call to external contract", "type": "Informational"}, {"address": 477, "code": "    // @return true if the ", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 839\n", "filename": "/unique_chucks/33/0x664ae9be65f1977f0eca5ece98e291d59d9ec9a8.sol", "function": "fallback", "lineno": 291, "title": "Multiple Calls", "type": "Information"}, {"address": 622, "code": "kens\n    function validPurchase", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/33/0x664ae9be65f1977f0eca5ece98e291d59d9ec9a8.sol", "function": "fallback", "lineno": 291, "title": "State change after external call", "type": "Warning"}, {"address": 638, "code": " constant returns (boo", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/33/0x664ae9be65f1977f0eca5ece98e291d59d9ec9a8.sol", "function": "fallback", "lineno": 292, "title": "State change after external call", "type": "Warning"}, {"address": 839, "code": "  bool withinPeriod = now >= startTime &", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/33/0x664ae9be65f1977f0eca5ece98e291d59d9ec9a8.sol", "function": "fallback", "lineno": 293, "title": "Message call to external contract", "type": "Informational"}], "success": true}