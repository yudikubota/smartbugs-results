{
  "contract": "0x7a74c8b0d5993e358f109750cf1ead1cb49cc6dd",
  "tool": "mythril",
  "start": 1563262961.0388427,
  "end": 1563264182.7558506,
  "duration": 1221.7170078754425,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 312,
        "code": "orizedUsers) {\n      return authorizedOwners;\n    }\n    \n\n    // ----------------------------------------",
        "debug": "storage_1: 0x800000000000000000000000000000000000000000000000000000000000000\ncalldata_WeaponTokenize_0: 0x394b9ce00000000000000000000000000000000000000000000000000000000\ncalldatasize_WeaponTokenize: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `_function_0x0394b9ce`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x7a74c8b0d5993e358f109750cf1ead1cb49cc6dd.sol",
        "function": "_function_0x0394b9ce",
        "lineno": 180,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 741,
        "code": "wner returns(bool res) {\n      gameDataOf[_id] = _gameData;\n      publicDataOf[_id] = _publicData;\n      ownerDataOf[_id] = _ownerData;\n      //emit WeaponAdded(_id, _gameData, _publicData, _ownerData);\n      return true;\n    }\n\n    /*  update game proprietary data */\n    function updateGameProprietaryData (uint _id, string _gameData) public o",
        "debug": "calldata_WeaponTokenize_32 + 4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_WeaponTokenize_0: 0x1f48af0a00000000000000000000000000000000000000000000000000000000\ncalldatasize_WeaponTokenize: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `_function_0x1f48af0a`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x7a74c8b0d5993e358f109750cf1ead1cb49cc6dd.sol",
        "function": "_function_0x1f48af0a",
        "lineno": 113,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 753,
        "code": "wner returns(bool res) {\n      gameDataOf[_id] = _gameData;\n      publicDataOf[_id] = _publicData;\n      ownerDataOf[_id] = _ownerData;\n      //emit WeaponAdded(_id, _gameData, _publicData, _ownerData);\n      return true;\n    }\n\n    /*  update game proprietary data */\n    function updateGameProprietaryData (uint _id, string _gameData) public o",
        "debug": "calldata_WeaponTokenize_4 + calldata_WeaponTokenize_32 + 4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8\ncalldata_WeaponTokenize_0: 0x1f48af0a00000000000000000000000000000000000000000000000000000000\ncalldatasize_WeaponTokenize: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `_function_0x1f48af0a`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x7a74c8b0d5993e358f109750cf1ead1cb49cc6dd.sol",
        "function": "_function_0x1f48af0a",
        "lineno": 113,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 762,
        "code": "wner returns(bool res) {\n      gameDataOf[_id] = _gameData;\n      publicDataOf[_id] = _publicData;\n      ownerDataOf[_id] = _ownerData;\n      //emit WeaponAdded(_id, _gameData, _publicData, _ownerData);\n      return true;\n    }\n\n    /*  update game proprietary data */\n    function updateGameProprietaryData (uint _id, string _gameData) public o",
        "debug": "calldata_WeaponTokenize_4 + calldata_WeaponTokenize_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc1\ncalldata_WeaponTokenize_0: 0x1f48af0a00000000000000000000000000000000000000000000000000000000\ncalldatasize_WeaponTokenize: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `_function_0x1f48af0a`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x7a74c8b0d5993e358f109750cf1ead1cb49cc6dd.sol",
        "function": "_function_0x1f48af0a",
        "lineno": 113,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 768,
        "code": "wner returns(bool res) {\n      gameDataOf[_id] = _gameData;\n      publicDataOf[_id] = _publicData;\n      ownerDataOf[_id] = _ownerData;\n      //emit WeaponAdded(_id, _gameData, _publicData, _ownerData);\n      return true;\n    }\n\n    /*  update game proprietary data */\n    function updateGameProprietaryData (uint _id, string _gameData) public o",
        "debug": "calldata_WeaponTokenize_4 + calldata_WeaponTokenize_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff41\ncalldata_WeaponTokenize_0: 0x1f48af0a00000000000000000000000000000000000000000000000000000000\ncalldatasize_WeaponTokenize: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `_function_0x1f48af0a`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x7a74c8b0d5993e358f109750cf1ead1cb49cc6dd.sol",
        "function": "_function_0x1f48af0a",
        "lineno": 113,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1111,
        "code": "Addrress) public onlyAuthorizedOwner returns(bool res) {\n      gameDataOf[_id] = _gameData;\n      publicDataOf[_id] = _publicData;\n      ownerDataOf[_id] = _ownerData;\n      ownerOf[_id] =  _ownerAddrress;\n      weaponList.push(_id);\n      emit WeaponAdded(_id, _gameData, _publicData, _ownerData);\n      return true;\n    }\n\n    /* update all weapon details */\n    function updateWeapon (uint _id, string _gameData, string _publicDa",
        "debug": "calldata_WeaponTokenize_32 + 4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_WeaponTokenize_0: 0x4557a57900000000000000000000000000000000000000000000000000000000\ncalldatasize_WeaponTokenize: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `_function_0x4557a579`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x7a74c8b0d5993e358f109750cf1ead1cb49cc6dd.sol",
        "function": "_function_0x4557a579",
        "lineno": 102,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1123,
        "code": "Addrress) public onlyAuthorizedOwner returns(bool res) {\n      gameDataOf[_id] = _gameData;\n      publicDataOf[_id] = _publicData;\n      ownerDataOf[_id] = _ownerData;\n      ownerOf[_id] =  _ownerAddrress;\n      weaponList.push(_id);\n      emit WeaponAdded(_id, _gameData, _publicData, _ownerData);\n      return true;\n    }\n\n    /* update all weapon details */\n    function updateWeapon (uint _id, string _gameData, string _publicDa",
        "debug": "calldata_WeaponTokenize_4 + calldata_WeaponTokenize_32 + 4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8\ncalldata_WeaponTokenize_0: 0x4557a57900000000000000000000000000000000000000000000000000000000\ncalldatasize_WeaponTokenize: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `_function_0x4557a579`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x7a74c8b0d5993e358f109750cf1ead1cb49cc6dd.sol",
        "function": "_function_0x4557a579",
        "lineno": 102,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1132,
        "code": "Addrress) public onlyAuthorizedOwner returns(bool res) {\n      gameDataOf[_id] = _gameData;\n      publicDataOf[_id] = _publicData;\n      ownerDataOf[_id] = _ownerData;\n      ownerOf[_id] =  _ownerAddrress;\n      weaponList.push(_id);\n      emit WeaponAdded(_id, _gameData, _publicData, _ownerData);\n      return true;\n    }\n\n    /* update all weapon details */\n    function updateWeapon (uint _id, string _gameData, string _publicDa",
        "debug": "calldata_WeaponTokenize_4 + calldata_WeaponTokenize_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc1\ncalldata_WeaponTokenize_0: 0x4557a57900000000000000000000000000000000000000000000000000000000\ncalldatasize_WeaponTokenize: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `_function_0x4557a579`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x7a74c8b0d5993e358f109750cf1ead1cb49cc6dd.sol",
        "function": "_function_0x4557a579",
        "lineno": 102,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1138,
        "code": "Addrress) public onlyAuthorizedOwner returns(bool res) {\n      gameDataOf[_id] = _gameData;\n      publicDataOf[_id] = _publicData;\n      ownerDataOf[_id] = _ownerData;\n      ownerOf[_id] =  _ownerAddrress;\n      weaponList.push(_id);\n      emit WeaponAdded(_id, _gameData, _publicData, _ownerData);\n      return true;\n    }\n\n    /* update all weapon details */\n    function updateWeapon (uint _id, string _gameData, string _publicDa",
        "debug": "calldata_WeaponTokenize_4 + calldata_WeaponTokenize_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff41\ncalldata_WeaponTokenize_0: 0x4557a57900000000000000000000000000000000000000000000000000000000\ncalldatasize_WeaponTokenize: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `_function_0x4557a579`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x7a74c8b0d5993e358f109750cf1ead1cb49cc6dd.sol",
        "function": "_function_0x4557a579",
        "lineno": 102,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1433,
        "code": "------------------------\n    // Prevents contract from accepting ETH\n    // -------------------------------------------",
        "debug": "storage_2: 0x800000000000000000000000000000000000000000000000000000000000000\ncalldata_WeaponTokenize_0: 0x5a414ff600000000000000000000000000000000000000000000000000000000\ncalldatasize_WeaponTokenize: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `_function_0x5a414ff6`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x7a74c8b0d5993e358f109750cf1ead1cb49cc6dd.sol",
        "function": "_function_0x5a414ff6",
        "lineno": 185,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1621,
        "code": "DataOf[_id] = _gameData;\n      emit WeaponUpdated(_id, _gameData, \"\", \"\");\n      return true;\n    }\n\n    /* update public data */\n    function updatePublicData (uint _id,  string _publicData) public onlyAuthorizedOwner retur",
        "debug": "calldata_WeaponTokenize_32 + 4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_WeaponTokenize_0: 0x641e8cca00000000000000000000000000000000000000000000000000000000\ncalldatasize_WeaponTokenize: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `_function_0x641e8cca`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x7a74c8b0d5993e358f109750cf1ead1cb49cc6dd.sol",
        "function": "_function_0x641e8cca",
        "lineno": 123,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2605,
        "code": " = _ownerData;\n      emit WeaponUpdated(_id, \"\", \"\", _ownerData);\n      return true;\n    }\n\n    /* change owner of weapon */\n    function updateOwnerOfWeapon (uint _id, address _newOwner) public onlyAuthorizedOwner returns(bool r",
        "debug": "calldata_WeaponTokenize_32 + 4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_WeaponTokenize_0: 0xa525663a00000000000000000000000000000000000000000000000000000000\ncalldatasize_WeaponTokenize: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `_function_0xa525663a`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x7a74c8b0d5993e358f109750cf1ead1cb49cc6dd.sol",
        "function": "_function_0xa525663a",
        "lineno": 137,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2744,
        "code": " = _publicData;\n      emit WeaponUpdated(_id, \"\", _publicData, \"\");\n      return true;\n    }\n\n    /* update owner proprietary data */\n    function updateOwnerProprietaryData (uint _id, string _ownerData) public onlyAuthorize",
        "debug": "calldata_WeaponTokenize_32 + 4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_WeaponTokenize_0: 0xbfc303fa00000000000000000000000000000000000000000000000000000000\ncalldatasize_WeaponTokenize: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `_function_0xbfc303fa`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x7a74c8b0d5993e358f109750cf1ead1cb49cc6dd.sol",
        "function": "_function_0xbfc303fa",
        "lineno": 130,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 3075,
        "code": "-----------------",
        "debug": "storage_1: 0x8421003f084001f4210815cf88407c00000000000000037c1d000e8d178001f\ncalldata_WeaponTokenize_0: 0x394b9ce00000000000000000000000000000000000000000000000000000000\ncalldatasize_WeaponTokenize: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `_function_0x0394b9ce`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x7a74c8b0d5993e358f109750cf1ead1cb49cc6dd.sol",
        "function": "_function_0x0394b9ce",
        "lineno": 185,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 3077,
        "code": "-----------------",
        "debug": "storage_1: 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffb\ncalldata_WeaponTokenize_0: 0x394b9ce00000000000000000000000000000000000000000000000000000000\ncalldatasize_WeaponTokenize: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `_function_0x0394b9ce`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x7a74c8b0d5993e358f109750cf1ead1cb49cc6dd.sol",
        "function": "_function_0x0394b9ce",
        "lineno": 185,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 3983,
        "code": ";\n\n// source : htt",
        "debug": "storage_2: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_WeaponTokenize_4: 0x0\nstorage_0: 0x0\ncaller: 0x0\ncalldata_WeaponTokenize_0: 0x3cd109cb00000000000000000000000000000000000000000000000000000000\ncalldatasize_WeaponTokenize: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `_function_0x3cd109cb`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x7a74c8b0d5993e358f109750cf1ead1cb49cc6dd.sol",
        "function": "_function_0x3cd109cb",
        "lineno": 1,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 4919,
        "code": "-----------------------",
        "debug": "storage_2: 0x8421003f084001f4210815cf88407c00000000000000037c1d000e8d178001f\ncalldata_WeaponTokenize_0: 0x5a414ff600000000000000000000000000000000000000000000000000000000\ncalldatasize_WeaponTokenize: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `_function_0x5a414ff6`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x7a74c8b0d5993e358f109750cf1ead1cb49cc6dd.sol",
        "function": "_function_0x5a414ff6",
        "lineno": 187,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 4921,
        "code": "-----------------------",
        "debug": "storage_2: 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffb\ncalldata_WeaponTokenize_0: 0x5a414ff600000000000000000000000000000000000000000000000000000000\ncalldatasize_WeaponTokenize: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `_function_0x5a414ff6`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x7a74c8b0d5993e358f109750cf1ead1cb49cc6dd.sol",
        "function": "_function_0x5a414ff6",
        "lineno": 187,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 8014,
        "code": "///////////////////////////\n    // AUTHORIZEED USERS ",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_contracts/0x7a74c8b0d5993e358f109750cf1ead1cb49cc6dd.sol",
        "function": "transferAnyERC20Token(address,uint256)",
        "lineno": 97,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 8373,
        "code": " WeaponTokenize {\n    /*  State variables */\n    address public owner;\n    uint[] weaponList;\n    address[] authorizedOwners;\n\n    /* mappings */\n    mapping (uint => string) gameDataOf;\n    mapping (uint => string) publicDataOf;\n    mapping (uint => string) ownerDataOf;\n    mapping (uint => address) ownerOf;\n    \n    mapping (address => bool) isAuthorizedOwner;\n    \n\n\n    /* Events */\n    event WeaponAdded(uint indexed weaponId, string gameData, string publicData, string ownerData);\n    event WeaponUpdated(uint indexed weaponId, string gameData, string publicData, string ownerData);\n    event OwnershipTransferred(address indexed _oldOwner, address indexed _newOwner);\n    event WeaponOwnerUpdated (uint indexed  _weaponId, address indexed  _oldOwner, address indexed  _newOwner);\n    event AuthorizedOwnerAdded(address indexed _addeduthorizedOwner);\n    event AuthorizedOwnerRemoved(address indexed _removedAuthorizedOwner);  \n    \n    /* Modifiers */    \n    modifier onlyOwnerOfContract() { \n      require(msg.sender == owner);\n      _; \n    }\n\n    modifier onlyAuthorizedOwner() { \n     require(isAuthorizedOwner[msg.sender]);\n     _;\n    }\n    \n     \n    /*  constructor */\n    function WeaponTokenize () public {\n      owner = msg.sender;\n      isAuthorizedOwner[msg.sender] =  true;\n      authorizedOwners.push(msg.sender);\n\n    }\n\n    //////////////////////////////////////////\n    // OWNER SPECIFIC FUNCTIONS\n    //////////////////////////////////////////\n\n    /* Add authrized owners */\n    function addAuthorizedOwners (address _newAuthorizedUser) public onlyOwnerOfContract returns(bool res) {\n      require(!isAuthorizedOwner[_newAuthorizedUser]);\n      isAuthorizedOwner[_newAuthorizedUser] =  true;\n      authorizedOwners.push(_newAuthorizedUser);\n      emit AuthorizedOwnerAdded(_newAuthorizedUser);\n      return true;\n    }\n    \n    /*  Remove authorized users */\n    function removeAuthorizeduser(address _authorizedUser) public onlyOwnerOfContract returns(bool res){\n        require(isAuthorizedOwner[_authorizedUser]);\n        delete(isAuthorizedOwner[_authorizedUser]);\n        for(uint i=0; i< authorizedOwners.length;i++){\n          if(authorizedOwners[i] == _authorizedUser){\n            delete authorizedOwners[i];\n            break;\n          }\n        }\n        emit AuthorizedOwnerRemoved(_authorizedUser);\n        return true;\n    }\n\n    /* Change ownership */\n    function transferOwnership (address _newOwner) public onlyOwnerOfContract returns(bool res) {\n      owner = _newOwner;\n      emit OwnershipTransferred(msg.sender, _newOwner);\n      return true;\n    }\n\n\n    // ------------------------------------------------------------------------\n    // Owner can transfer out any accidentally sent ERC20 tokens\n    // ------------------------------------------------------------------------\n    function transferAnyERC20Token(address _tokenAddress, uint _value) public onlyOwnerOfContract returns (bool success) {\n        return ERC20Interface(_tokenAddress).transfer(owner, _value);\n    }\n    \n    \n\n    //////////////////////////////////////////\n    // AUTHORIZEED USERS FUNCTIONALITY\n    //////////////////////////////////////////\n\n    /* Add weapon */\n    function addWeapon (uint _id, string _gameData, string _publicData, string _ownerData, address _ownerAddrress) public onlyAuthorizedOwner returns(bool res) {\n      gameDataOf[_id] = _gameData;\n      publicDataOf[_id] = _publicData;\n      ownerDataOf[_id] = _ownerData;\n      ownerOf[_id] =  _ownerAddrress;\n      weaponList.push(_id);\n      emit WeaponAdded(_id, _gameData, _publicData, _ownerData);\n      return true;\n    }\n\n    /* update all weapon details */\n    function updateWeapon (uint _id, string _gameData, string _publicData, string _ownerData) public onlyAuthorizedOwner returns(bool res) {\n      gameDataOf[_id] = _gameData;\n      publicDataOf[_id] = _publicData;\n      ownerDataOf[_id] = _ownerData;\n      //emit WeaponAdded(_id, _gameData, _publicData, _ownerData);\n      return true;\n    }\n\n    /*  update game proprietary data */\n    function updateGameProprietaryData (uint _id, string _gameData) public onlyAuthorizedOwner returns(bool res) {\n      gameDataOf[_id] = _gameData;\n      emit WeaponUpdated(_id, _gameData, \"\", \"\");\n      return true;\n    }\n\n    /* update public data */\n    function updatePublicData (uint _id,  string _publicData) public onlyAuthorizedOwner returns(bool res) {\n      publicDataOf[_id] = _publicData;\n      emit WeaponUpdated(_id, \"\", _publicData, \"\");\n      return true;\n    }\n\n    /* update owner proprietary data */\n    function updateOwnerProprietaryData (uint _id, string _ownerData) public onlyAuthorizedOwner returns(bool res) {\n      ownerDataOf[_id] = _ownerData;\n      emit WeaponUpdated(_id, \"\", \"\", _ownerData);\n      return true;\n    }\n\n    /* change owner of weapon */\n    function updateOwnerOfWeapon (uint _id, address _newOwner) public onlyAuthorizedOwner returns(bool res) {\n      address oldOwner = ownerOf[_id];\n      ownerOf[_id] =  _newOwner;\n      emit WeaponOwnerUpdated(_id, oldOwner, _newOwner);\n      return true;\n    }\n    \n\n    //////////////////////////////////////////\n    // PUBLICLY ACCESSIBLE METHODS (CONSTANT)\n    //////////////////////////////////////////\n\n    /* Get Weapon Data */\n    function getGameProprietaryData (uint _id) public view returns(string _gameData) {\n      return gameDataOf[_id];\n    }\n\n    function getPublicData (uint _id) public view returns(string _pubicData) {\n      return publicDataOf[_id];\n    }\n\n    function getOwnerProprietaryData (uint _id) public view returns(string _ownerData) {\n      return ownerDataOf[_id] ;\n    }\n\n    function getAllWeaponData (uint _id) public view returns(string _gameData,string _pubicData,string _ownerData ) {\n      return (gameDataOf[_id], publicDataOf[_id], ownerDataOf[_id]);\n    }\n\n    function getOwnerOf (uint _weaponId) public view returns(address _owner) {\n      return ownerOf[_weaponId];\n    }\n\n    function getWeaponList () public view returns(uint[] tokenizedWeapons) {\n      return weaponList;\n    }\n\n    function getAuthorizedOwners () public view returns(address[] authorizedUsers) {\n      return authorizedOwners;\n    }\n    \n\n    // ------------------------------------------------------------------------\n    // Prevents contract from accepting ETH\n    // ------------------------------------------------------------------------\n    function () public payable {\n      revert();\n    }\n\n}",
        "debug": "storage_keccac_calldata_WeaponTokenize_4: 0xbac1c3147749165dd7d1977fffffffffffffffffffffffffffffffffffffffc5\nkeccac_keccac_calldata_WeaponTokenize_4: 0xff13e6a7459ae5a4c49c419171c3f89100a371508000000000129200000219e2\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xff00\ncalldata_WeaponTokenize_0: 0x641e8cca00000000000000000000000000000000000000000000000000000000\ncalldatasize_WeaponTokenize: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `_function_0x641e8cca`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x7a74c8b0d5993e358f109750cf1ead1cb49cc6dd.sol",
        "function": "_function_0x641e8cca",
        "lineno": 9,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 8402,
        "code": " WeaponTokenize {\n    /*  State variables */\n    address public owner;\n    uint[] weaponList;\n    address[] authorizedOwners;\n\n    /* mappings */\n    mapping (uint => string) gameDataOf;\n    mapping (uint => string) publicDataOf;\n    mapping (uint => string) ownerDataOf;\n    mapping (uint => address) ownerOf;\n    \n    mapping (address => bool) isAuthorizedOwner;\n    \n\n\n    /* Events */\n    event WeaponAdded(uint indexed weaponId, string gameData, string publicData, string ownerData);\n    event WeaponUpdated(uint indexed weaponId, string gameData, string publicData, string ownerData);\n    event OwnershipTransferred(address indexed _oldOwner, address indexed _newOwner);\n    event WeaponOwnerUpdated (uint indexed  _weaponId, address indexed  _oldOwner, address indexed  _newOwner);\n    event AuthorizedOwnerAdded(address indexed _addeduthorizedOwner);\n    event AuthorizedOwnerRemoved(address indexed _removedAuthorizedOwner);  \n    \n    /* Modifiers */    \n    modifier onlyOwnerOfContract() { \n      require(msg.sender == owner);\n      _; \n    }\n\n    modifier onlyAuthorizedOwner() { \n     require(isAuthorizedOwner[msg.sender]);\n     _;\n    }\n    \n     \n    /*  constructor */\n    function WeaponTokenize () public {\n      owner = msg.sender;\n      isAuthorizedOwner[msg.sender] =  true;\n      authorizedOwners.push(msg.sender);\n\n    }\n\n    //////////////////////////////////////////\n    // OWNER SPECIFIC FUNCTIONS\n    //////////////////////////////////////////\n\n    /* Add authrized owners */\n    function addAuthorizedOwners (address _newAuthorizedUser) public onlyOwnerOfContract returns(bool res) {\n      require(!isAuthorizedOwner[_newAuthorizedUser]);\n      isAuthorizedOwner[_newAuthorizedUser] =  true;\n      authorizedOwners.push(_newAuthorizedUser);\n      emit AuthorizedOwnerAdded(_newAuthorizedUser);\n      return true;\n    }\n    \n    /*  Remove authorized users */\n    function removeAuthorizeduser(address _authorizedUser) public onlyOwnerOfContract returns(bool res){\n        require(isAuthorizedOwner[_authorizedUser]);\n        delete(isAuthorizedOwner[_authorizedUser]);\n        for(uint i=0; i< authorizedOwners.length;i++){\n          if(authorizedOwners[i] == _authorizedUser){\n            delete authorizedOwners[i];\n            break;\n          }\n        }\n        emit AuthorizedOwnerRemoved(_authorizedUser);\n        return true;\n    }\n\n    /* Change ownership */\n    function transferOwnership (address _newOwner) public onlyOwnerOfContract returns(bool res) {\n      owner = _newOwner;\n      emit OwnershipTransferred(msg.sender, _newOwner);\n      return true;\n    }\n\n\n    // ------------------------------------------------------------------------\n    // Owner can transfer out any accidentally sent ERC20 tokens\n    // ------------------------------------------------------------------------\n    function transferAnyERC20Token(address _tokenAddress, uint _value) public onlyOwnerOfContract returns (bool success) {\n        return ERC20Interface(_tokenAddress).transfer(owner, _value);\n    }\n    \n    \n\n    //////////////////////////////////////////\n    // AUTHORIZEED USERS FUNCTIONALITY\n    //////////////////////////////////////////\n\n    /* Add weapon */\n    function addWeapon (uint _id, string _gameData, string _publicData, string _ownerData, address _ownerAddrress) public onlyAuthorizedOwner returns(bool res) {\n      gameDataOf[_id] = _gameData;\n      publicDataOf[_id] = _publicData;\n      ownerDataOf[_id] = _ownerData;\n      ownerOf[_id] =  _ownerAddrress;\n      weaponList.push(_id);\n      emit WeaponAdded(_id, _gameData, _publicData, _ownerData);\n      return true;\n    }\n\n    /* update all weapon details */\n    function updateWeapon (uint _id, string _gameData, string _publicData, string _ownerData) public onlyAuthorizedOwner returns(bool res) {\n      gameDataOf[_id] = _gameData;\n      publicDataOf[_id] = _publicData;\n      ownerDataOf[_id] = _ownerData;\n      //emit WeaponAdded(_id, _gameData, _publicData, _ownerData);\n      return true;\n    }\n\n    /*  update game proprietary data */\n    function updateGameProprietaryData (uint _id, string _gameData) public onlyAuthorizedOwner returns(bool res) {\n      gameDataOf[_id] = _gameData;\n      emit WeaponUpdated(_id, _gameData, \"\", \"\");\n      return true;\n    }\n\n    /* update public data */\n    function updatePublicData (uint _id,  string _publicData) public onlyAuthorizedOwner returns(bool res) {\n      publicDataOf[_id] = _publicData;\n      emit WeaponUpdated(_id, \"\", _publicData, \"\");\n      return true;\n    }\n\n    /* update owner proprietary data */\n    function updateOwnerProprietaryData (uint _id, string _ownerData) public onlyAuthorizedOwner returns(bool res) {\n      ownerDataOf[_id] = _ownerData;\n      emit WeaponUpdated(_id, \"\", \"\", _ownerData);\n      return true;\n    }\n\n    /* change owner of weapon */\n    function updateOwnerOfWeapon (uint _id, address _newOwner) public onlyAuthorizedOwner returns(bool res) {\n      address oldOwner = ownerOf[_id];\n      ownerOf[_id] =  _newOwner;\n      emit WeaponOwnerUpdated(_id, oldOwner, _newOwner);\n      return true;\n    }\n    \n\n    //////////////////////////////////////////\n    // PUBLICLY ACCESSIBLE METHODS (CONSTANT)\n    //////////////////////////////////////////\n\n    /* Get Weapon Data */\n    function getGameProprietaryData (uint _id) public view returns(string _gameData) {\n      return gameDataOf[_id];\n    }\n\n    function getPublicData (uint _id) public view returns(string _pubicData) {\n      return publicDataOf[_id];\n    }\n\n    function getOwnerProprietaryData (uint _id) public view returns(string _ownerData) {\n      return ownerDataOf[_id] ;\n    }\n\n    function getAllWeaponData (uint _id) public view returns(string _gameData,string _pubicData,string _ownerData ) {\n      return (gameDataOf[_id], publicDataOf[_id], ownerDataOf[_id]);\n    }\n\n    function getOwnerOf (uint _weaponId) public view returns(address _owner) {\n      return ownerOf[_weaponId];\n    }\n\n    function getWeaponList () public view returns(uint[] tokenizedWeapons) {\n      return weaponList;\n    }\n\n    function getAuthorizedOwners () public view returns(address[] authorizedUsers) {\n      return authorizedOwners;\n    }\n    \n\n    // ------------------------------------------------------------------------\n    // Prevents contract from accepting ETH\n    // ------------------------------------------------------------------------\n    function () public payable {\n      revert();\n    }\n\n}",
        "debug": "calldata_WeaponTokenize_4 + calldata_WeaponTokenize_32 + 4: 0x8000000000000000000000000000000000000000000000000000000000000000\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xff00\ncalldata_WeaponTokenize_0: 0xbfc303fa00000000000000000000000000000000000000000000000000000000\ncalldatasize_WeaponTokenize: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `_function_0xbfc303fa`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x7a74c8b0d5993e358f109750cf1ead1cb49cc6dd.sol",
        "function": "_function_0xbfc303fa",
        "lineno": 9,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 8416,
        "code": " WeaponTokenize {\n    /*  State variables */\n    address public owner;\n    uint[] weaponList;\n    address[] authorizedOwners;\n\n    /* mappings */\n    mapping (uint => string) gameDataOf;\n    mapping (uint => string) publicDataOf;\n    mapping (uint => string) ownerDataOf;\n    mapping (uint => address) ownerOf;\n    \n    mapping (address => bool) isAuthorizedOwner;\n    \n\n\n    /* Events */\n    event WeaponAdded(uint indexed weaponId, string gameData, string publicData, string ownerData);\n    event WeaponUpdated(uint indexed weaponId, string gameData, string publicData, string ownerData);\n    event OwnershipTransferred(address indexed _oldOwner, address indexed _newOwner);\n    event WeaponOwnerUpdated (uint indexed  _weaponId, address indexed  _oldOwner, address indexed  _newOwner);\n    event AuthorizedOwnerAdded(address indexed _addeduthorizedOwner);\n    event AuthorizedOwnerRemoved(address indexed _removedAuthorizedOwner);  \n    \n    /* Modifiers */    \n    modifier onlyOwnerOfContract() { \n      require(msg.sender == owner);\n      _; \n    }\n\n    modifier onlyAuthorizedOwner() { \n     require(isAuthorizedOwner[msg.sender]);\n     _;\n    }\n    \n     \n    /*  constructor */\n    function WeaponTokenize () public {\n      owner = msg.sender;\n      isAuthorizedOwner[msg.sender] =  true;\n      authorizedOwners.push(msg.sender);\n\n    }\n\n    //////////////////////////////////////////\n    // OWNER SPECIFIC FUNCTIONS\n    //////////////////////////////////////////\n\n    /* Add authrized owners */\n    function addAuthorizedOwners (address _newAuthorizedUser) public onlyOwnerOfContract returns(bool res) {\n      require(!isAuthorizedOwner[_newAuthorizedUser]);\n      isAuthorizedOwner[_newAuthorizedUser] =  true;\n      authorizedOwners.push(_newAuthorizedUser);\n      emit AuthorizedOwnerAdded(_newAuthorizedUser);\n      return true;\n    }\n    \n    /*  Remove authorized users */\n    function removeAuthorizeduser(address _authorizedUser) public onlyOwnerOfContract returns(bool res){\n        require(isAuthorizedOwner[_authorizedUser]);\n        delete(isAuthorizedOwner[_authorizedUser]);\n        for(uint i=0; i< authorizedOwners.length;i++){\n          if(authorizedOwners[i] == _authorizedUser){\n            delete authorizedOwners[i];\n            break;\n          }\n        }\n        emit AuthorizedOwnerRemoved(_authorizedUser);\n        return true;\n    }\n\n    /* Change ownership */\n    function transferOwnership (address _newOwner) public onlyOwnerOfContract returns(bool res) {\n      owner = _newOwner;\n      emit OwnershipTransferred(msg.sender, _newOwner);\n      return true;\n    }\n\n\n    // ------------------------------------------------------------------------\n    // Owner can transfer out any accidentally sent ERC20 tokens\n    // ------------------------------------------------------------------------\n    function transferAnyERC20Token(address _tokenAddress, uint _value) public onlyOwnerOfContract returns (bool success) {\n        return ERC20Interface(_tokenAddress).transfer(owner, _value);\n    }\n    \n    \n\n    //////////////////////////////////////////\n    // AUTHORIZEED USERS FUNCTIONALITY\n    //////////////////////////////////////////\n\n    /* Add weapon */\n    function addWeapon (uint _id, string _gameData, string _publicData, string _ownerData, address _ownerAddrress) public onlyAuthorizedOwner returns(bool res) {\n      gameDataOf[_id] = _gameData;\n      publicDataOf[_id] = _publicData;\n      ownerDataOf[_id] = _ownerData;\n      ownerOf[_id] =  _ownerAddrress;\n      weaponList.push(_id);\n      emit WeaponAdded(_id, _gameData, _publicData, _ownerData);\n      return true;\n    }\n\n    /* update all weapon details */\n    function updateWeapon (uint _id, string _gameData, string _publicData, string _ownerData) public onlyAuthorizedOwner returns(bool res) {\n      gameDataOf[_id] = _gameData;\n      publicDataOf[_id] = _publicData;\n      ownerDataOf[_id] = _ownerData;\n      //emit WeaponAdded(_id, _gameData, _publicData, _ownerData);\n      return true;\n    }\n\n    /*  update game proprietary data */\n    function updateGameProprietaryData (uint _id, string _gameData) public onlyAuthorizedOwner returns(bool res) {\n      gameDataOf[_id] = _gameData;\n      emit WeaponUpdated(_id, _gameData, \"\", \"\");\n      return true;\n    }\n\n    /* update public data */\n    function updatePublicData (uint _id,  string _publicData) public onlyAuthorizedOwner returns(bool res) {\n      publicDataOf[_id] = _publicData;\n      emit WeaponUpdated(_id, \"\", _publicData, \"\");\n      return true;\n    }\n\n    /* update owner proprietary data */\n    function updateOwnerProprietaryData (uint _id, string _ownerData) public onlyAuthorizedOwner returns(bool res) {\n      ownerDataOf[_id] = _ownerData;\n      emit WeaponUpdated(_id, \"\", \"\", _ownerData);\n      return true;\n    }\n\n    /* change owner of weapon */\n    function updateOwnerOfWeapon (uint _id, address _newOwner) public onlyAuthorizedOwner returns(bool res) {\n      address oldOwner = ownerOf[_id];\n      ownerOf[_id] =  _newOwner;\n      emit WeaponOwnerUpdated(_id, oldOwner, _newOwner);\n      return true;\n    }\n    \n\n    //////////////////////////////////////////\n    // PUBLICLY ACCESSIBLE METHODS (CONSTANT)\n    //////////////////////////////////////////\n\n    /* Get Weapon Data */\n    function getGameProprietaryData (uint _id) public view returns(string _gameData) {\n      return gameDataOf[_id];\n    }\n\n    function getPublicData (uint _id) public view returns(string _pubicData) {\n      return publicDataOf[_id];\n    }\n\n    function getOwnerProprietaryData (uint _id) public view returns(string _ownerData) {\n      return ownerDataOf[_id] ;\n    }\n\n    function getAllWeaponData (uint _id) public view returns(string _gameData,string _pubicData,string _ownerData ) {\n      return (gameDataOf[_id], publicDataOf[_id], ownerDataOf[_id]);\n    }\n\n    function getOwnerOf (uint _weaponId) public view returns(address _owner) {\n      return ownerOf[_weaponId];\n    }\n\n    function getWeaponList () public view returns(uint[] tokenizedWeapons) {\n      return weaponList;\n    }\n\n    function getAuthorizedOwners () public view returns(address[] authorizedUsers) {\n      return authorizedOwners;\n    }\n    \n\n    // ------------------------------------------------------------------------\n    // Prevents contract from accepting ETH\n    // ------------------------------------------------------------------------\n    function () public payable {\n      revert();\n    }\n\n}",
        "debug": "calldata_WeaponTokenize_4 + calldata_WeaponTokenize_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xff00\ncalldata_WeaponTokenize_0: 0x641e8cca00000000000000000000000000000000000000000000000000000000\ncalldatasize_WeaponTokenize: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `_function_0x641e8cca`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x7a74c8b0d5993e358f109750cf1ead1cb49cc6dd.sol",
        "function": "_function_0x641e8cca",
        "lineno": 9,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 8438,
        "code": " WeaponTokenize {\n    /*  State variables */\n    address public owner;\n    uint[] weaponList;\n    address[] authorizedOwners;\n\n    /* mappings */\n    mapping (uint => string) gameDataOf;\n    mapping (uint => string) publicDataOf;\n    mapping (uint => string) ownerDataOf;\n    mapping (uint => address) ownerOf;\n    \n    mapping (address => bool) isAuthorizedOwner;\n    \n\n\n    /* Events */\n    event WeaponAdded(uint indexed weaponId, string gameData, string publicData, string ownerData);\n    event WeaponUpdated(uint indexed weaponId, string gameData, string publicData, string ownerData);\n    event OwnershipTransferred(address indexed _oldOwner, address indexed _newOwner);\n    event WeaponOwnerUpdated (uint indexed  _weaponId, address indexed  _oldOwner, address indexed  _newOwner);\n    event AuthorizedOwnerAdded(address indexed _addeduthorizedOwner);\n    event AuthorizedOwnerRemoved(address indexed _removedAuthorizedOwner);  \n    \n    /* Modifiers */    \n    modifier onlyOwnerOfContract() { \n      require(msg.sender == owner);\n      _; \n    }\n\n    modifier onlyAuthorizedOwner() { \n     require(isAuthorizedOwner[msg.sender]);\n     _;\n    }\n    \n     \n    /*  constructor */\n    function WeaponTokenize () public {\n      owner = msg.sender;\n      isAuthorizedOwner[msg.sender] =  true;\n      authorizedOwners.push(msg.sender);\n\n    }\n\n    //////////////////////////////////////////\n    // OWNER SPECIFIC FUNCTIONS\n    //////////////////////////////////////////\n\n    /* Add authrized owners */\n    function addAuthorizedOwners (address _newAuthorizedUser) public onlyOwnerOfContract returns(bool res) {\n      require(!isAuthorizedOwner[_newAuthorizedUser]);\n      isAuthorizedOwner[_newAuthorizedUser] =  true;\n      authorizedOwners.push(_newAuthorizedUser);\n      emit AuthorizedOwnerAdded(_newAuthorizedUser);\n      return true;\n    }\n    \n    /*  Remove authorized users */\n    function removeAuthorizeduser(address _authorizedUser) public onlyOwnerOfContract returns(bool res){\n        require(isAuthorizedOwner[_authorizedUser]);\n        delete(isAuthorizedOwner[_authorizedUser]);\n        for(uint i=0; i< authorizedOwners.length;i++){\n          if(authorizedOwners[i] == _authorizedUser){\n            delete authorizedOwners[i];\n            break;\n          }\n        }\n        emit AuthorizedOwnerRemoved(_authorizedUser);\n        return true;\n    }\n\n    /* Change ownership */\n    function transferOwnership (address _newOwner) public onlyOwnerOfContract returns(bool res) {\n      owner = _newOwner;\n      emit OwnershipTransferred(msg.sender, _newOwner);\n      return true;\n    }\n\n\n    // ------------------------------------------------------------------------\n    // Owner can transfer out any accidentally sent ERC20 tokens\n    // ------------------------------------------------------------------------\n    function transferAnyERC20Token(address _tokenAddress, uint _value) public onlyOwnerOfContract returns (bool success) {\n        return ERC20Interface(_tokenAddress).transfer(owner, _value);\n    }\n    \n    \n\n    //////////////////////////////////////////\n    // AUTHORIZEED USERS FUNCTIONALITY\n    //////////////////////////////////////////\n\n    /* Add weapon */\n    function addWeapon (uint _id, string _gameData, string _publicData, string _ownerData, address _ownerAddrress) public onlyAuthorizedOwner returns(bool res) {\n      gameDataOf[_id] = _gameData;\n      publicDataOf[_id] = _publicData;\n      ownerDataOf[_id] = _ownerData;\n      ownerOf[_id] =  _ownerAddrress;\n      weaponList.push(_id);\n      emit WeaponAdded(_id, _gameData, _publicData, _ownerData);\n      return true;\n    }\n\n    /* update all weapon details */\n    function updateWeapon (uint _id, string _gameData, string _publicData, string _ownerData) public onlyAuthorizedOwner returns(bool res) {\n      gameDataOf[_id] = _gameData;\n      publicDataOf[_id] = _publicData;\n      ownerDataOf[_id] = _ownerData;\n      //emit WeaponAdded(_id, _gameData, _publicData, _ownerData);\n      return true;\n    }\n\n    /*  update game proprietary data */\n    function updateGameProprietaryData (uint _id, string _gameData) public onlyAuthorizedOwner returns(bool res) {\n      gameDataOf[_id] = _gameData;\n      emit WeaponUpdated(_id, _gameData, \"\", \"\");\n      return true;\n    }\n\n    /* update public data */\n    function updatePublicData (uint _id,  string _publicData) public onlyAuthorizedOwner returns(bool res) {\n      publicDataOf[_id] = _publicData;\n      emit WeaponUpdated(_id, \"\", _publicData, \"\");\n      return true;\n    }\n\n    /* update owner proprietary data */\n    function updateOwnerProprietaryData (uint _id, string _ownerData) public onlyAuthorizedOwner returns(bool res) {\n      ownerDataOf[_id] = _ownerData;\n      emit WeaponUpdated(_id, \"\", \"\", _ownerData);\n      return true;\n    }\n\n    /* change owner of weapon */\n    function updateOwnerOfWeapon (uint _id, address _newOwner) public onlyAuthorizedOwner returns(bool res) {\n      address oldOwner = ownerOf[_id];\n      ownerOf[_id] =  _newOwner;\n      emit WeaponOwnerUpdated(_id, oldOwner, _newOwner);\n      return true;\n    }\n    \n\n    //////////////////////////////////////////\n    // PUBLICLY ACCESSIBLE METHODS (CONSTANT)\n    //////////////////////////////////////////\n\n    /* Get Weapon Data */\n    function getGameProprietaryData (uint _id) public view returns(string _gameData) {\n      return gameDataOf[_id];\n    }\n\n    function getPublicData (uint _id) public view returns(string _pubicData) {\n      return publicDataOf[_id];\n    }\n\n    function getOwnerProprietaryData (uint _id) public view returns(string _ownerData) {\n      return ownerDataOf[_id] ;\n    }\n\n    function getAllWeaponData (uint _id) public view returns(string _gameData,string _pubicData,string _ownerData ) {\n      return (gameDataOf[_id], publicDataOf[_id], ownerDataOf[_id]);\n    }\n\n    function getOwnerOf (uint _weaponId) public view returns(address _owner) {\n      return ownerOf[_weaponId];\n    }\n\n    function getWeaponList () public view returns(uint[] tokenizedWeapons) {\n      return weaponList;\n    }\n\n    function getAuthorizedOwners () public view returns(address[] authorizedUsers) {\n      return authorizedOwners;\n    }\n    \n\n    // ------------------------------------------------------------------------\n    // Prevents contract from accepting ETH\n    // ------------------------------------------------------------------------\n    function () public payable {\n      revert();\n    }\n\n}",
        "debug": "calldata_WeaponTokenize_4 + calldata_WeaponTokenize_32 + 4: 0x4000f04100100000000000000000000000000000d6401413fffffffffffffe0\nkeccac_keccac_calldata_WeaponTokenize_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xff00\ncalldata_WeaponTokenize_0: 0x641e8cca00000000000000000000000000000000000000000000000000000000\ncalldatasize_WeaponTokenize: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `_function_0x641e8cca`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x7a74c8b0d5993e358f109750cf1ead1cb49cc6dd.sol",
        "function": "_function_0x641e8cca",
        "lineno": 9,
        "title": "Integer Overflow ",
        "type": "Warning"
      }
    ],
    "success": true
  }
}