{"error": null, "issues": [{"address": 480, "code": "resaler allowed in.\n        if (msg.v", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/29/0xe335936435d176e78d8b4d675bafbc575fb560ed.sol", "function": "fallback", "lineno": 78, "title": "Message call to external contract", "type": "Informational"}, {"address": 480, "code": "resaler allowed in.\n        if (msg.v", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 615\n", "filename": "/unique_chucks/29/0xe335936435d176e78d8b4d675bafbc575fb560ed.sol", "function": "fallback", "lineno": 78, "title": "Multiple Calls", "type": "Information"}, {"address": 714, "code": ";\n\n//\n// ==== DISC", "debug": "storage_8: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncallvalue: 0x387007000000\nstorage_1: 0x0\nstorage_0: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nretval_615: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nreturndatasize: 0x20\nretval_480: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ntimestamp: 0x0\nblock_number: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldatasize_TokenStorage: 0x3\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/29/0xe335936435d176e78d8b4d675bafbc575fb560ed.sol", "function": "fallback", "lineno": 1, "title": "Integer Overflow ", "type": "Warning"}, {"address": 3178, "code": "}\n\n    /// @notice returns c", "debug": "calldata_TokenStorage_32 + 4: 0x7f6e5d4c3b2a1907f6e5d4c3b2a1907f6e5d4c3b2a1907f6e5d4c3b2a19080\ncalldata_TokenStorage_4: 0x0\nblock_number: 0x0\nstorage_7: 0x0\ncaller: 0x0\ncalldata_TokenStorage_0: 0x90fe560900000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenStorage: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `startVoting(uint256,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/29/0xe335936435d176e78d8b4d675bafbc575fb560ed.sol", "function": "startVoting(uint256,uint256)", "lineno": 111, "title": "Integer Overflow ", "type": "Warning"}, {"address": 3180, "code": "wner; }\n\n    /// @notice returns c", "debug": "timestamp: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8f0\ncalldata_TokenStorage_4: 0x0\ncalldata_TokenStorage_32 + 4: 0x0\nblock_number: 0x0\nstorage_7: 0x0\ncaller: 0x0\ncalldata_TokenStorage_0: 0x90fe560900000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenStorage: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `startVoting(uint256,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/29/0xe335936435d176e78d8b4d675bafbc575fb560ed.sol", "function": "startVoting(uint256,uint256)", "lineno": 111, "title": "Integer Overflow ", "type": "Warning"}, {"address": 3529, "code": "   uint16 public stakeR", "debug": "The exception is triggered under the following conditions:\n\ncalldata_TokenStorage_4: 0x0\nstorage_8: 0x0\ncalldata_TokenStorage_0: 0xda58c7d900000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenStorage: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/29/0xe335936435d176e78d8b4d675bafbc575fb560ed.sol", "function": "_function_0xda58c7d9", "lineno": 63, "title": "Exception state", "type": "Informational"}], "success": true}