{
  "contract": "0x80d774ffd99ad3321497064a2713bf2f89eeb5d6",
  "tool": "mythril",
  "start": 1563552156.4446747,
  "end": 1563553687.5637374,
  "duration": 1531.1190626621246,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 265,
        "code": "act AssetManager is Ownable {\n\n    struct Asset {\n        uint id;\n        uint packId;\n        /// atributes field is go",
        "debug": "calldata_UserManager_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_UserManager_0: 0x1a31455200000000000000000000000000000000000000000000000000000000\ncalldatasize_UserManager: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `isUsernameExists(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/11/0x80d774ffd99ad3321497064a2713bf2f89eeb5d6.sol",
        "function": "isUsernameExists(string)",
        "lineno": 140,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 646,
        "code": "ire(usernameExists[_username] == false || \n                keccak256(abi.encodePacked(getUsername(msg.sender))) == keccak256(abi.encodePacked(_username))\n        );\n\n        if (usernameExists[getUsername(msg.sender)]) {\n            // if he already had username, that username is free now\n            usernameExists[getUsername(msg.sender)] = false;\n        } else {\n            numberOfUsers++;\n            emit NewUser(msg.sender, _username, _hashToProfilePicture);\n        }\n\n        addressToUser[msg.sender] = User({\n            username: _username,\n            hashToProfilePicture: _hashToProfilePicture,\n            exists: true\n        });\n\n        usernameExists[_username] = true;\n        profilePictureExists[_hashToProfilePicture] = true;\n        usernameToAddress[_username] = msg.sender;\n    }\n\n    function changeProfilePicture(bytes32 _hashToProfilePicture) public {\n        require(addressToUser[msg.",
        "debug": "calldata_UserManager_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_UserManager_0: 0x656afdee00000000000000000000000000000000000000000000000000000000\ncalldatasize_UserManager: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `register(string,bytes32)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/11/0x80d774ffd99ad3321497064a2713bf2f89eeb5d6.sol",
        "function": "register(string,bytes32)",
        "lineno": 90,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 658,
        "code": "ire(usernameExists[_username] == false || \n                keccak256(abi.encodePacked(getUsername(msg.sender))) == keccak256(abi.encodePacked(_username))\n        );\n\n        if (usernameExists[getUsername(msg.sender)]) {\n            // if he already had username, that username is free now\n            usernameExists[getUsername(msg.sender)] = false;\n        } else {\n            numberOfUsers++;\n            emit NewUser(msg.sender, _username, _hashToProfilePicture);\n        }\n\n        addressToUser[msg.sender] = User({\n            username: _username,\n            hashToProfilePicture: _hashToProfilePicture,\n            exists: true\n        });\n\n        usernameExists[_username] = true;\n        profilePictureExists[_hashToProfilePicture] = true;\n        usernameToAddress[_username] = msg.sender;\n    }\n\n    function changeProfilePicture(bytes32 _hashToProfilePicture) public {\n        require(addressToUser[msg.",
        "debug": "calldata_UserManager_4 + calldata_UserManager_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8\ncalldata_UserManager_0: 0x656afdee00000000000000000000000000000000000000000000000000000000\ncalldatasize_UserManager: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `register(string,bytes32)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/11/0x80d774ffd99ad3321497064a2713bf2f89eeb5d6.sol",
        "function": "register(string,bytes32)",
        "lineno": 90,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 667,
        "code": "ire(usernameExists[_username] == false || \n                keccak256(abi.encodePacked(getUsername(msg.sender))) == keccak256(abi.encodePacked(_username))\n        );\n\n        if (usernameExists[getUsername(msg.sender)]) {\n            // if he already had username, that username is free now\n            usernameExists[getUsername(msg.sender)] = false;\n        } else {\n            numberOfUsers++;\n            emit NewUser(msg.sender, _username, _hashToProfilePicture);\n        }\n\n        addressToUser[msg.sender] = User({\n            username: _username,\n            hashToProfilePicture: _hashToProfilePicture,\n            exists: true\n        });\n\n        usernameExists[_username] = true;\n        profilePictureExists[_hashToProfilePicture] = true;\n        usernameToAddress[_username] = msg.sender;\n    }\n\n    function changeProfilePicture(bytes32 _hashToProfilePicture) public {\n        require(addressToUser[msg.",
        "debug": "calldata_UserManager_4 + calldata_UserManager_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc1\ncalldata_UserManager_0: 0x656afdee00000000000000000000000000000000000000000000000000000000\ncalldatasize_UserManager: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `register(string,bytes32)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/11/0x80d774ffd99ad3321497064a2713bf2f89eeb5d6.sol",
        "function": "register(string,bytes32)",
        "lineno": 90,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 673,
        "code": "ire(usernameExists[_username] == false || \n                keccak256(abi.encodePacked(getUsername(msg.sender))) == keccak256(abi.encodePacked(_username))\n        );\n\n        if (usernameExists[getUsername(msg.sender)]) {\n            // if he already had username, that username is free now\n            usernameExists[getUsername(msg.sender)] = false;\n        } else {\n            numberOfUsers++;\n            emit NewUser(msg.sender, _username, _hashToProfilePicture);\n        }\n\n        addressToUser[msg.sender] = User({\n            username: _username,\n            hashToProfilePicture: _hashToProfilePicture,\n            exists: true\n        });\n\n        usernameExists[_username] = true;\n        profilePictureExists[_hashToProfilePicture] = true;\n        usernameToAddress[_username] = msg.sender;\n    }\n\n    function changeProfilePicture(bytes32 _hashToProfilePicture) public {\n        require(addressToUser[msg.",
        "debug": "calldata_UserManager_4 + calldata_UserManager_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff41\ncalldata_UserManager_0: 0x656afdee00000000000000000000000000000000000000000000000000000000\ncalldatasize_UserManager: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `register(string,bytes32)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/11/0x80d774ffd99ad3321497064a2713bf2f89eeb5d6.sol",
        "function": "register(string,bytes32)",
        "lineno": 90,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2894,
        "code": "}\n\n        addr",
        "debug": "calldata_UserManager_4 + calldata_UserManager_4: 0x60\nstorage_0 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\nstorage_0: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_KECCAC_mem_160 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_UserManager_4 + calldata_UserManager_4)) +\n32 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               Concat(0,\n                      ~(~Extract(255,\n                                 1,\n                                 115792089237316195423570985008687907853269984665640564039457584007913129639935 +\n                                 256*\n                                 If(Extract(0,\n                                        0,\n                                        storage_0 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller) ==\n                                    0,\n                                    1,\n                                    0)) |\n                        ~Extract(255,\n                                 1,\n                                 storage_0 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller)))))): 0x0\nmem_128 +\n32 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_UserManager_4 + calldata_UserManager_4)): 0x1f\nstorage_KECCAC_mem_128 +\n32 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_UserManager_4 + calldata_UserManager_4))): 0x0\ncalldata_UserManager_0: 0x656afdee00000000000000000000000000000000000000000000000000000000\ncalldatasize_UserManager: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `register(string,bytes32)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/11/0x80d774ffd99ad3321497064a2713bf2f89eeb5d6.sol",
        "function": "register(string,bytes32)",
        "lineno": 100,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 3209,
        "code": " _hashToProfilePicture,\n            exists: true\n        });\n\n        usernameExists[_username] = true;\n        profilePictureExists[_hashToProfilePicture] = true;\n",
        "debug": "mem_192 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_UserManager_4 + calldata_UserManager_4)) +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               Concat(0,\n                      ~(~Extract(255,\n                                 1,\n                                 115792089237316195423570985008687907853269984665640564039457584007913129639935 +\n                                 256*\n                                 If(Extract(0,\n                                        0,\n                                        storage_0 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller) ==\n                                    0,\n                                    1,\n                                    0)) |\n                        ~Extract(255,\n                                 1,\n                                 storage_0 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller))))) +\n0: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\nstorage_0 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\nstorage_KECCAC_mem_160 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_UserManager_4 + calldata_UserManager_4)) +\n32 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               Concat(0,\n                      ~(~Extract(255,\n                                 1,\n                                 115792089237316195423570985008687907853269984665640564039457584007913129639935 +\n                                 256*\n                                 If(Extract(0,\n                                        0,\n                                        storage_0 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller) ==\n                                    0,\n                                    1,\n                                    0)) |\n                        ~Extract(255,\n                                 1,\n                                 storage_0 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller)))))): 0x0\nmem_128 +\n32 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_UserManager_4 + calldata_UserManager_4)): 0x1f\nstorage_KECCAC_mem_128 +\n32 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_UserManager_4 + calldata_UserManager_4))): 0x0\ncalldata_UserManager_0: 0x656afdee00000000000000000000000000000000000000000000000000000000\ncalldatasize_UserManager: 0x4\ncalldata_UserManager_4 + calldata_UserManager_4: 0x0\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `register(string,bytes32)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/11/0x80d774ffd99ad3321497064a2713bf2f89eeb5d6.sol",
        "function": "register(string,bytes32)",
        "lineno": 104,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 4254,
        "code": "     bytes32 hashToProfilePicture;\n        bool exists;\n    }\n\n    uint public numberOfUsers;\n\n    mapping(string => bool) internal usernameExists;\n    mapping(address => User) public addressToUser;\n\n    mapping(bytes32 => bool) public profilePictureExists;\n    mapping(string => address) internal usernameToAddress;\n\n    event NewUser(address indexed user, string username, bytes32 profilePicture);\n\n    function register(string _username, bytes32 _hashToProfilePicture) public {\n        require(usernameExists[_username] == false || \n                keccak256(abi.encodePacked(getUsername(msg.sender))) == keccak256(abi.encodePacked(_username))\n        );\n\n        if (usernameExists[getUsername(msg.sender)]) {\n            // if he already had username, that username is free now\n            usernameExists[getUsername(msg.sender)] = false;\n        } else {\n            numberOfUsers++;\n            emit NewUser(msg.sender, _username, _hashToProfilePicture);\n        }\n\n        addressToUser[msg.sender] = User({\n            username: _username,\n            hashToProfilePicture: _hashToProfilePicture,\n            exists: true\n        });\n\n        usernameExists[_username] = true;\n        profilePictureExists[_hashToProfilePicture] = true;\n        usernameToAddress[_username] = msg.sender;\n    }\n\n    function changeProfilePicture(bytes32 _hashToProfilePicture) public {\n        require(addressToUser[msg.sender].exists, \"User doesn't exists\");\n\n        addressToUser[msg.sender].hashToProfilePicture = _hashToProfilePicture;\n    }\n\n    function getUserInfo(address _address) public view returns(string, bytes32) {\n        User memory user = addressToUser[_address];\n        return (user.username, user.hashToProfilePicture);\n    }\n\n    function getUsername(address _address) public view returns(string) {\n        return addressToUser[_address].username;\n    } \n\n    function getProfilePicture(address _address) public view returns(bytes32) {\n        return addressToUser[_address].hashToProfilePicture;\n    }\n\n    function isUsernameExists(string _username) public view returns(bool) {\n        return usernameExists[_username];\n    }\n\n}\n\n\n\ncontract AssetManager is Ownable {\n\n    struct Asset {\n        uint id;\n        uint packId;\n        /// atributes field is going t",
        "debug": "storage_0 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x20\nmem_mem_192 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_UserManager_4 + calldata_UserManager_4)) +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               Concat(0,\n                      ~(~Extract(255,\n                                 1,\n                                 115792089237316195423570985008687907853269984665640564039457584007913129639935 +\n                                 256*\n                                 If(Extract(0,\n                                        0,\n                                        storage_0 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller) ==\n                                    0,\n                                    1,\n                                    0)) |\n                        ~Extract(255,\n                                 1,\n                                 storage_0 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller))))) +\n0: 0x8000000000000000000000000000000000000000000000000000000000000000\nstorage_KECCAC_mem_160 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_UserManager_4 + calldata_UserManager_4)) +\n32 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               Concat(0,\n                      ~(~Extract(255,\n                                 1,\n                                 115792089237316195423570985008687907853269984665640564039457584007913129639935 +\n                                 256*\n                                 If(Extract(0,\n                                        0,\n                                        storage_0 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller) ==\n                                    0,\n                                    1,\n                                    0)) |\n                        ~Extract(255,\n                                 1,\n                                 storage_0 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller)))))): 0x0\nmem_128 +\n32 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_UserManager_4 + calldata_UserManager_4)): 0x1f\nstorage_KECCAC_mem_128 +\n32 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_UserManager_4 + calldata_UserManager_4))): 0x0\ncalldata_UserManager_0: 0x656afdee00000000000000000000000000000000000000000000000000000000\ncalldatasize_UserManager: 0x4\ncalldata_UserManager_4 + calldata_UserManager_4: 0x0\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `register(string,bytes32)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/11/0x80d774ffd99ad3321497064a2713bf2f89eeb5d6.sol",
        "function": "register(string,bytes32)",
        "lineno": 75,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 4268,
        "code": "     bytes32 hashToProfilePicture;\n        bool exists;\n    }\n\n    uint public numberOfUsers;\n\n    mapping(string => bool) internal usernameExists;\n    mapping(address => User) public addressToUser;\n\n    mapping(bytes32 => bool) public profilePictureExists;\n    mapping(string => address) internal usernameToAddress;\n\n    event NewUser(address indexed user, string username, bytes32 profilePicture);\n\n    function register(string _username, bytes32 _hashToProfilePicture) public {\n        require(usernameExists[_username] == false || \n                keccak256(abi.encodePacked(getUsername(msg.sender))) == keccak256(abi.encodePacked(_username))\n        );\n\n        if (usernameExists[getUsername(msg.sender)]) {\n            // if he already had username, that username is free now\n            usernameExists[getUsername(msg.sender)] = false;\n        } else {\n            numberOfUsers++;\n            emit NewUser(msg.sender, _username, _hashToProfilePicture);\n        }\n\n        addressToUser[msg.sender] = User({\n            username: _username,\n            hashToProfilePicture: _hashToProfilePicture,\n            exists: true\n        });\n\n        usernameExists[_username] = true;\n        profilePictureExists[_hashToProfilePicture] = true;\n        usernameToAddress[_username] = msg.sender;\n    }\n\n    function changeProfilePicture(bytes32 _hashToProfilePicture) public {\n        require(addressToUser[msg.sender].exists, \"User doesn't exists\");\n\n        addressToUser[msg.sender].hashToProfilePicture = _hashToProfilePicture;\n    }\n\n    function getUserInfo(address _address) public view returns(string, bytes32) {\n        User memory user = addressToUser[_address];\n        return (user.username, user.hashToProfilePicture);\n    }\n\n    function getUsername(address _address) public view returns(string) {\n        return addressToUser[_address].username;\n    } \n\n    function getProfilePicture(address _address) public view returns(bytes32) {\n        return addressToUser[_address].hashToProfilePicture;\n    }\n\n    function isUsernameExists(string _username) public view returns(bool) {\n        return usernameExists[_username];\n    }\n\n}\n\n\n\ncontract AssetManager is Ownable {\n\n    struct Asset {\n        uint id;\n        uint packId;\n        /// atributes field is going t",
        "debug": "mem_192 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_UserManager_4 + calldata_UserManager_4)) +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               Concat(0,\n                      ~(~Extract(255,\n                                 1,\n                                 115792089237316195423570985008687907853269984665640564039457584007913129639935 +\n                                 256*\n                                 If(Extract(0,\n                                        0,\n                                        storage_0 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller) ==\n                                    0,\n                                    1,\n                                    0)) |\n                        ~Extract(255,\n                                 1,\n                                 storage_0 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller))))) +\n0: 0xcda006c2fe4082fe7e8d3fffff7fffffffffffffffffffffffffffffffffffe8\nstorage_0 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\nmem_mem_192 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_UserManager_4 + calldata_UserManager_4)) +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               Concat(0,\n                      ~(~Extract(255,\n                                 1,\n                                 115792089237316195423570985008687907853269984665640564039457584007913129639935 +\n                                 256*\n                                 If(Extract(0,\n                                        0,\n                                        storage_0 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller) ==\n                                    0,\n                                    1,\n                                    0)) |\n                        ~Extract(255,\n                                 1,\n                                 storage_0 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller))))) +\n0: 0x412806cdfc1a30feda5d7fffff07fffffffffffffffffffffffffffffffffffe\nstorage_KECCAC_mem_160 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_UserManager_4 + calldata_UserManager_4)) +\n32 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               Concat(0,\n                      ~(~Extract(255,\n                                 1,\n                                 115792089237316195423570985008687907853269984665640564039457584007913129639935 +\n                                 256*\n                                 If(Extract(0,\n                                        0,\n                                        storage_0 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller) ==\n                                    0,\n                                    1,\n                                    0)) |\n                        ~Extract(255,\n                                 1,\n                                 storage_0 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller)))))): 0x0\nmem_128 +\n32 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_UserManager_4 + calldata_UserManager_4)): 0x1f\nstorage_KECCAC_mem_128 +\n32 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_UserManager_4 + calldata_UserManager_4))): 0x0\ncalldata_UserManager_0: 0x656afdee00000000000000000000000000000000000000000000000000000000\ncalldatasize_UserManager: 0x4\ncalldata_UserManager_4 + calldata_UserManager_4: 0x0\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `register(string,bytes32)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/11/0x80d774ffd99ad3321497064a2713bf2f89eeb5d6.sol",
        "function": "register(string,bytes32)",
        "lineno": 75,
        "title": "Integer Overflow ",
        "type": "Warning"
      }
    ],
    "success": true
  }
}