{"error": null, "issues": [{"address": 4289, "code": "\n    }\n\n    struct TKN ", "debug": "The exception is triggered under the following conditions:\n\ncalldata_ZethrBankroll_4: 0x0\nstorage_8: 0x0\ncalldata_ZethrBankroll_0: 0x25e7c2700000000000000000000000000000000000000000000000000000000\ncalldatasize_ZethrBankroll: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/28/0x95cd217da207e35e3ac4cade6e766d5fb6fdaf8d.sol", "function": "_function_0x025e7c27", "lineno": 128, "title": "Exception state", "type": "Informational"}, {"address": 6106, "code": "\n        } else\n        {\n            // The contract ", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/28/0x95cd217da207e35e3ac4cade6e766d5fb6fdaf8d.sol", "function": "retrieveTokens(address,uint256)", "lineno": 727, "title": "Message call to external contract", "type": "Informational"}, {"address": 6388, "code": "ddress(0x", "debug": "", "description": "Function DumpDivs() retrieves the transaction origin (tx.origin) using the ORIGIN opcode. Use msg.sender instead.\nSee also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin", "filename": "/unique_chucks/28/0x95cd217da207e35e3ac4cade6e766d5fb6fdaf8d.sol", "function": "DumpDivs()", "lineno": 318, "title": "Use of tx.origin", "type": "Warning"}, {"address": 6731, "code": "ens.\n\t\t}\t\n\n    /// @d", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9b\nstorage_19: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ntimestamp: 0xdab\ncaller: 0x0\norigin: 0x0\ncalldata_ZethrBankroll_0: 0x6f00a3cf00000000000000000000000000000000000000000000000000000000\ncalldatasize_ZethrBankroll: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `DumpDivs()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/28/0x95cd217da207e35e3ac4cade6e766d5fb6fdaf8d.sol", "function": "DumpDivs()", "lineno": 327, "title": "Integer Overflow ", "type": "Warning"}, {"address": 6963, "code": "es if an amount of tokens exceeds the aggregate daily limit of 15% of", "debug": "", "description": "In the function `DumpDivs()` the following predictable state variables are used to determine Ether recipient:\n- block.timestamp\n", "filename": "/unique_chucks/28/0x95cd217da207e35e3ac4cade6e766d5fb6fdaf8d.sol", "function": "DumpDivs()", "lineno": 330, "title": "Dependence on predictable environment variable", "type": "Warning"}, {"address": 6963, "code": "es if an amount of tokens exceeds the aggregate daily limit of 15% of", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/28/0x95cd217da207e35e3ac4cade6e766d5fb6fdaf8d.sol", "function": "DumpDivs()", "lineno": 330, "title": "Message call to external contract", "type": "Informational"}, {"address": 7215, "code": "\n\n    /// @dev Al", "debug": "storage_8: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_ZethrBankroll_4: 0xffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_ZethrBankroll_4: 0x0\ncaller: 0x0\ncalldata_ZethrBankroll_0: 0x7065cb4800000000000000000000000000000000000000000000000000000000\ncalldatasize_ZethrBankroll: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `addOwner(address)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/28/0x95cd217da207e35e3ac4cade6e766d5fb6fdaf8d.sol", "function": "addOwner(address)", "lineno": 400, "title": "Integer Overflow ", "type": "Warning"}, {"address": 19428, "debug": "The exception is triggered under the following conditions:\n\nbalance_at_1461501637330902918203684832716283019655932542975 & 0: 0x0\nstorage_16: 0x1\nstorage_15: 0x0\ncalldata_ZethrBankroll_0: 0x79fc468700000000000000000000000000000000000000000000000000000000\ncalldatasize_ZethrBankroll: 0x4\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/28/0x95cd217da207e35e3ac4cade6e766d5fb6fdaf8d.sol", "function": "receiveDividends()", "lineno": 852, "title": "Exception state", "type": "Informational"}], "success": true}