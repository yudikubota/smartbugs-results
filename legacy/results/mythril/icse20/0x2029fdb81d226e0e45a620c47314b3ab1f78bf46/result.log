{"error": null, "issues": [{"address": 2177, "code": " <= ambassadorQuota_ )){\n            requi", "debug": "balance_at_1461501637330902918203684832716283019655932542975 & 0: 0x0\ncallvalue: 0x1\nstorage_11: 0xff00\ncalldatasize_XToken: 0x3\n", "description": "A possible integer underflow exists in the function `fallback`.\nThe subtraction may result in a value < 0.", "filename": "/unique_chucks/26/0x2029fdb81d226e0e45a620c47314b3ab1f78bf46.sol", "function": "fallback", "lineno": 44, "title": "Integer Underflow", "type": "Warning"}, {"address": 8465, "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xf0000000000000000000000000000000000000000000000008a4ee3ef413f083\nbalance_at_1461501637330902918203684832716283019655932542975 & 0: 0x1000000000000000000000000000000000000000000000003008b58f48001940\ncallvalue: 0x1000000000000000000000000000000000000000000000001aa10791bceff68d\nstorage_11: 0xff00\ncalldatasize_XToken: 0x3\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/26/0x2029fdb81d226e0e45a620c47314b3ab1f78bf46.sol", "function": "fallback", "lineno": 742, "title": "Integer Overflow ", "type": "Warning"}, {"address": 8478, "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x8feb12ed3870091ecffbefdd8000000000000000000000000f57fe8f877c7341\nbalance_at_1461501637330902918203684832716283019655932542975 & 0: 0x7014ed12c78ff6e130041022800000000000000000000000f14cb8692b6e1c03\ncallvalue: 0x7014ed12c78ff6e1300410228000000000000000000000000d48424bf0eef8fb\nstorage_11: 0xff00\ncalldatasize_XToken: 0x3\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/26/0x2029fdb81d226e0e45a620c47314b3ab1f78bf46.sol", "function": "fallback", "lineno": 742, "title": "Exception state", "type": "Informational"}, {"address": 8714, "code": "s (uint y) {\n      ", "debug": "storage_8: 0xfffffffffffffffffffffffffffffffffffffffffffffffff90fb0802c080000\ncalldata_XToken_0: 0x4b75033400000000000000000000000000000000000000000000000000000000\ncalldatasize_XToken: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `sellPrice()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/26/0x2029fdb81d226e0e45a620c47314b3ab1f78bf46.sol", "function": "sellPrice()", "lineno": 688, "title": "Integer Overflow ", "type": "Warning"}], "success": true}