{
  "contract": "0x1337149f7e23ef76b9d65df352b82a336678f3f2",
  "tool": "mythril",
  "start": 1563642396.6064136,
  "end": 1563642481.787447,
  "duration": 85.18103337287903,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 2146,
        "code": "ken.balanceOf(this);\n    }\n\n    funct",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/25/0x1337149f7e23ef76b9d65df352b82a336678f3f2.sol",
        "function": "initialize(address,uint256,uint256,uint256,uint256,address)",
        "lineno": 347,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 2146,
        "code": "ken.balanceOf(this);\n    }\n\n    funct",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2428\n",
        "filename": "/unique_chucks/25/0x1337149f7e23ef76b9d65df352b82a336678f3f2.sol",
        "function": "initialize(address,uint256,uint256,uint256,uint256,address)",
        "lineno": 347,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 2207,
        "code": "return vestToken.balanceOf(this);\n    }\n\n    funct",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/25/0x1337149f7e23ef76b9d65df352b82a336678f3f2.sol",
        "function": "initialize(address,uint256,uint256,uint256,uint256,address)",
        "lineno": 347,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 2428,
        "code": "le() public view returns (uint256) {\n        uint256",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/25/0x1337149f7e23ef76b9d65df352b82a336678f3f2.sol",
        "function": "initialize(address,uint256,uint256,uint256,uint256,address)",
        "lineno": 350,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 2558,
        "code": "          return 0;\n        }\n\n     ",
        "debug": "timestamp: 0x0\nstorage_3: 0x1\ncalldata_TokenVesting_0: 0xaf38d75700000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenVesting: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer underflow exists in the function `claimable()`.\nThe subtraction may result in a value < 0.",
        "filename": "/unique_chucks/25/0x1337149f7e23ef76b9d65df352b82a336678f3f2.sol",
        "function": "claimable()",
        "lineno": 361,
        "title": "Integer Underflow",
        "type": "Warning"
      },
      {
        "address": 3164,
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/25/0x1337149f7e23ef76b9d65df352b82a336678f3f2.sol",
        "function": "revoke()",
        "lineno": 399,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 3164,
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function revoke(). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/25/0x1337149f7e23ef76b9d65df352b82a336678f3f2.sol",
        "function": "revoke()",
        "lineno": 399,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 3247,
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/25/0x1337149f7e23ef76b9d65df352b82a336678f3f2.sol",
        "function": "revoke()",
        "lineno": 399,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 3449,
        "code": "Interval);\n\n        // Ca",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/25/0x1337149f7e23ef76b9d65df352b82a336678f3f2.sol",
        "function": "balance()",
        "lineno": 357,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 3449,
        "code": "Interval);\n\n        // Ca",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3164\n",
        "filename": "/unique_chucks/25/0x1337149f7e23ef76b9d65df352b82a336678f3f2.sol",
        "function": "revoke()",
        "lineno": 357,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 3449,
        "code": "Interval);\n\n        // Ca",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function balance(). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/25/0x1337149f7e23ef76b9d65df352b82a336678f3f2.sol",
        "function": "balance()",
        "lineno": 357,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 3922,
        "code": ".e. i",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_3: 0x0\ntimestamp: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_TokenVesting_0: 0xaf38d75700000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenVesting: 0x4\nstorage_6: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/25/0x1337149f7e23ef76b9d65df352b82a336678f3f2.sol",
        "function": "claimable()",
        "lineno": 76,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}