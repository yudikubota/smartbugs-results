{
  "contract": "0xf00c933b2f5197ae272b58b21868860a61222cf9",
  "tool": "mythril",
  "start": 1563813944.1113062,
  "end": 1563815342.3518496,
  "duration": 1398.2405433654785,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 147,
        "code": "(address _addr,string datetime) public constant returns (string)\n      {\n           \n            return apos[_addr][datetime];\n      }\n\n}",
        "debug": "calldata_ApoIPFS_32 + 4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_ApoIPFS_0: 0x19c6eeb800000000000000000000000000000000000000000000000000000000\ncalldatasize_ApoIPFS: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `getIPFS(address,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/31/0xf00c933b2f5197ae272b58b21868860a61222cf9.sol",
        "function": "getIPFS(address,string)",
        "lineno": 17,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 159,
        "code": "(address _addr,string datetime) public constant returns (string)\n      {\n           \n            return apos[_addr][datetime];\n      }\n\n}",
        "debug": "calldata_ApoIPFS_4 + calldata_ApoIPFS_32 + 4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8\ncalldata_ApoIPFS_0: 0x19c6eeb800000000000000000000000000000000000000000000000000000000\ncalldatasize_ApoIPFS: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `getIPFS(address,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/31/0xf00c933b2f5197ae272b58b21868860a61222cf9.sol",
        "function": "getIPFS(address,string)",
        "lineno": 17,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 168,
        "code": "(address _addr,string datetime) public constant returns (string)\n      {\n           \n            return apos[_addr][datetime];\n      }\n\n}",
        "debug": "calldata_ApoIPFS_4 + calldata_ApoIPFS_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc1\ncalldata_ApoIPFS_0: 0x19c6eeb800000000000000000000000000000000000000000000000000000000\ncalldatasize_ApoIPFS: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `getIPFS(address,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/31/0xf00c933b2f5197ae272b58b21868860a61222cf9.sol",
        "function": "getIPFS(address,string)",
        "lineno": 17,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 174,
        "code": "(address _addr,string datetime) public constant returns (string)\n      {\n           \n            return apos[_addr][datetime];\n      }\n\n}",
        "debug": "calldata_ApoIPFS_4 + calldata_ApoIPFS_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff41\ncalldata_ApoIPFS_0: 0x19c6eeb800000000000000000000000000000000000000000000000000000000\ncalldatasize_ApoIPFS: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `getIPFS(address,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/31/0xf00c933b2f5197ae272b58b21868860a61222cf9.sol",
        "function": "getIPFS(address,string)",
        "lineno": 17,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 405,
        "code": "on setIPFS(address _addr,string datetime,string _ipfshash) public\n      {\n          \n          if(bytes(apos[_addr][datetime]).length==0)\n          {\n              apos[_addr][datetime] = _ipfshash;\n          }\n      }\n      \n\n    ",
        "debug": "calldata_ApoIPFS_32 + 4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_ApoIPFS_0: 0xba7705aa00000000000000000000000000000000000000000000000000000000\ncalldatasize_ApoIPFS: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `setIPFS(address,string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/31/0xf00c933b2f5197ae272b58b21868860a61222cf9.sol",
        "function": "setIPFS(address,string,string)",
        "lineno": 7,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 417,
        "code": "on setIPFS(address _addr,string datetime,string _ipfshash) public\n      {\n          \n          if(bytes(apos[_addr][datetime]).length==0)\n          {\n              apos[_addr][datetime] = _ipfshash;\n          }\n      }\n      \n\n    ",
        "debug": "calldata_ApoIPFS_4 + calldata_ApoIPFS_32 + 4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8\ncalldata_ApoIPFS_0: 0xba7705aa00000000000000000000000000000000000000000000000000000000\ncalldatasize_ApoIPFS: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `setIPFS(address,string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/31/0xf00c933b2f5197ae272b58b21868860a61222cf9.sol",
        "function": "setIPFS(address,string,string)",
        "lineno": 7,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 426,
        "code": "on setIPFS(address _addr,string datetime,string _ipfshash) public\n      {\n          \n          if(bytes(apos[_addr][datetime]).length==0)\n          {\n              apos[_addr][datetime] = _ipfshash;\n          }\n      }\n      \n\n    ",
        "debug": "calldata_ApoIPFS_4 + calldata_ApoIPFS_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc1\ncalldata_ApoIPFS_0: 0xba7705aa00000000000000000000000000000000000000000000000000000000\ncalldatasize_ApoIPFS: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `setIPFS(address,string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/31/0xf00c933b2f5197ae272b58b21868860a61222cf9.sol",
        "function": "setIPFS(address,string,string)",
        "lineno": 7,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 432,
        "code": "on setIPFS(address _addr,string datetime,string _ipfshash) public\n      {\n          \n          if(bytes(apos[_addr][datetime]).length==0)\n          {\n              apos[_addr][datetime] = _ipfshash;\n          }\n      }\n      \n\n    ",
        "debug": "calldata_ApoIPFS_4 + calldata_ApoIPFS_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff41\ncalldata_ApoIPFS_0: 0xba7705aa00000000000000000000000000000000000000000000000000000000\ncalldatasize_ApoIPFS: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `setIPFS(address,string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/31/0xf00c933b2f5197ae272b58b21868860a61222cf9.sol",
        "function": "setIPFS(address,string,string)",
        "lineno": 7,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1334,
        "code": "ontract ApoIPFS\n {\n      mapping (address => mapping (string => string)) apos;\n\n\n      function setIPFS(address _addr,string datetime,string _ipfshash) public\n      {\n          \n          if(bytes(apos[_addr][datetime]).length==0)\n          {\n              apos[_addr][datetime] = _ipfshash;\n          }\n      }\n      \n\n      function getIPFS(address _addr,string datetime) public constant returns (string)\n      {\n           \n            return apos[_addr][datetime];\n      }\n\n}",
        "debug": "mem_128 +\n32 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_ApoIPFS_4 + calldata_ApoIPFS_32 + 4)): 0x8000000000000000000000000000000000000000000000000000000000000000\ncalldata_ApoIPFS_4 + calldata_ApoIPFS_32 + 4: 0x60\nstorage_KECCAC_mem_160 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_ApoIPFS_4 + calldata_ApoIPFS_32 + 4)) +\n32 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_ApoIPFS_4 + calldata_ApoIPFS_32 + 36))): 0x0\ncalldata_ApoIPFS_0: 0xba7705aa00000000000000000000000000000000000000000000000000000000\ncalldatasize_ApoIPFS: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `setIPFS(address,string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/31/0xf00c933b2f5197ae272b58b21868860a61222cf9.sol",
        "function": "setIPFS(address,string,string)",
        "lineno": 2,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1348,
        "code": "ontract ApoIPFS\n {\n      mapping (address => mapping (string => string)) apos;\n\n\n      function setIPFS(address _addr,string datetime,string _ipfshash) public\n      {\n          \n          if(bytes(apos[_addr][datetime]).length==0)\n          {\n              apos[_addr][datetime] = _ipfshash;\n          }\n      }\n      \n\n      function getIPFS(address _addr,string datetime) public constant returns (string)\n      {\n           \n            return apos[_addr][datetime];\n      }\n\n}",
        "debug": "mem_128 +\n32 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_ApoIPFS_4 + calldata_ApoIPFS_32 + 4)): 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80\ncalldata_ApoIPFS_4 + calldata_ApoIPFS_32 + 4: 0x40\nstorage_KECCAC_mem_160 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_ApoIPFS_4 + calldata_ApoIPFS_32 + 4)) +\n32 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_ApoIPFS_4 + calldata_ApoIPFS_32 + 36))): 0x0\ncalldata_ApoIPFS_0: 0xba7705aa00000000000000000000000000000000000000000000000000000000\ncalldatasize_ApoIPFS: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `setIPFS(address,string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/31/0xf00c933b2f5197ae272b58b21868860a61222cf9.sol",
        "function": "setIPFS(address,string,string)",
        "lineno": 2,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1370,
        "code": "ontract ApoIPFS\n {\n      mapping (address => mapping (string => string)) apos;\n\n\n      function setIPFS(address _addr,string datetime,string _ipfshash) public\n      {\n          \n          if(bytes(apos[_addr][datetime]).length==0)\n          {\n              apos[_addr][datetime] = _ipfshash;\n          }\n      }\n      \n\n      function getIPFS(address _addr,string datetime) public constant returns (string)\n      {\n           \n            return apos[_addr][datetime];\n      }\n\n}",
        "debug": "keccac_KECCAC_mem_160_+\n32*\nConcat(0,\n_______Extract(255,\n_______________5,\n_______________31_+\n_______________calldata_ApoIPFS_4_+_calldata_ApoIPFS_32_+_4))_+\n32_+\n32*\nConcat(0,\n_______Extract(255,\n_______________5,\n_______________31_+\n_______________calldata_ApoIPFS_4_+_calldata_ApoIPFS_32_+_36))): 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nmem_128 +\n32 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_ApoIPFS_4 + calldata_ApoIPFS_32 + 4)): 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\ncalldata_ApoIPFS_4 + calldata_ApoIPFS_32 + 4: 0x20\nstorage_KECCAC_mem_160 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_ApoIPFS_4 + calldata_ApoIPFS_32 + 4)) +\n32 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_ApoIPFS_4 + calldata_ApoIPFS_32 + 36))): 0x0\ncalldata_ApoIPFS_0: 0xba7705aa00000000000000000000000000000000000000000000000000000000\ncalldatasize_ApoIPFS: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `setIPFS(address,string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/31/0xf00c933b2f5197ae272b58b21868860a61222cf9.sol",
        "function": "setIPFS(address,string,string)",
        "lineno": 2,
        "title": "Integer Overflow ",
        "type": "Warning"
      }
    ],
    "success": true
  }
}