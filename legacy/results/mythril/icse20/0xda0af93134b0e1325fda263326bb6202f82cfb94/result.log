{"error": null, "issues": [{"address": 1708, "code": "e by one\n            _value -= 1;\n\n    ", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xbfffffffffffffffffffffffffffffff\ncalldata_RaisingToken_32 + 36: 0xffffffffffffffffffffffffffffffff00000000000000000000000000000000\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_RaisingToken_4: 0xffffffffffffffffffffffffffffffff00000000000000000000000000000000\ncalldata_RaisingToken_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_RaisingToken: 0x4\ncallvalue: 0x0\n", "description": "A possible integer underflow exists in the function `transferFrom(address,address,uint256)`.\nThe subtraction may result in a value < 0.", "filename": "/unique_chucks/41/0xda0af93134b0e1325fda263326bb6202f82cfb94.sol", "function": "transferFrom(address,address,uint256)", "lineno": 188, "title": "Integer Underflow", "type": "Warning"}, {"address": 1785, "code": "Of [_to] += _value;\n    \n  ", "debug": "calldata_RaisingToken_32 + 36: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_RaisingToken_4: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_RaisingToken_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_RaisingToken: 0x4\ncallvalue: 0x0\n", "description": "A possible integer underflow exists in the function `transferFrom(address,address,uint256)`.\nThe subtraction may result in a value < 0.", "filename": "/unique_chucks/41/0xda0af93134b0e1325fda263326bb6202f82cfb94.sol", "function": "transferFrom(address,address,uint256)", "lineno": 192, "title": "Integer Underflow", "type": "Warning"}, {"address": 1868, "code": "Log token burning\n       ", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_RaisingToken_32_+_4: 0xfffffffffffffffffffffffe0000000000000000000000000000000000000000\ncalldata_RaisingToken_32 + 36: 0x8000000000000000000000000000000000000000000000000000000000000000\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_RaisingToken_4: 0x8000000000000000000000000000000000000000000000000000000000000000\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x8000000000000000000000000000000000000000000000000000000000000000\ncalldata_RaisingToken_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_RaisingToken: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `transferFrom(address,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/41/0xda0af93134b0e1325fda263326bb6202f82cfb94.sol", "function": "transferFrom(address,address,uint256)", "lineno": 200, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1884, "code": "   // Report suc", "debug": "calldata_RaisingToken_32 + 36: 0x2\nstorage_0: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_RaisingToken_4: 0x2\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x2\ncalldata_RaisingToken_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_RaisingToken: 0x4\ncallvalue: 0x0\n", "description": "A possible integer underflow exists in the function `transferFrom(address,address,uint256)`.\nThe subtraction may result in a value < 0.", "filename": "/unique_chucks/41/0xda0af93134b0e1325fda263326bb6202f82cfb94.sol", "function": "transferFrom(address,address,uint256)", "lineno": 203, "title": "Integer Underflow", "type": "Warning"}, {"address": 2248, "code": "  // Proceed only if some tokens could", "debug": "The exception is triggered under the following conditions:\n\ncalldata_RaisingToken_0: 0xa6f2ae3a00000000000000000000000000000000000000000000000000000000\ncalldatasize_RaisingToken: 0x4\nbalance_at_1461501637330902918203684832716283019655932542975 & 0: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/41/0xda0af93134b0e1325fda263326bb6202f82cfb94.sol", "function": "buy()", "lineno": 50, "title": "Exception state", "type": "Informational"}, {"address": 2620, "code": "recipient\n            balanceOf ", "debug": "calldata_RaisingToken_32 + 4: 0xfffffffffffffffffffffffffffffffbfffffffffffffffffffffffff0000000\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x1fffffb\ncalldata_RaisingToken_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncalldatasize_RaisingToken: 0x4\ncallvalue: 0x0\n", "description": "A possible integer underflow exists in the function `transfer(address,uint256)`.\nThe subtraction may result in a value < 0.", "filename": "/unique_chucks/41/0xda0af93134b0e1325fda263326bb6202f82cfb94.sol", "function": "transfer(address,uint256)", "lineno": 144, "title": "Integer Underflow", "type": "Warning"}, {"address": 2703, "code": " (msg.sender, _to, _value", "debug": "calldata_RaisingToken_32 + 4: 0x8000000000000000000000000000000000000000000000000000000000000000\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_RaisingToken_4: 0xfaf9aff400000000000000000000000000000000000000000000000000000000\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x8000000000000000000000000000000000000000000000000000000000000000\ncalldata_RaisingToken_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncalldatasize_RaisingToken: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `transfer(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/41/0xda0af93134b0e1325fda263326bb6202f82cfb94.sol", "function": "transfer(address,uint256)", "lineno": 151, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2719, "code": "Transfer (msg.se", "debug": "calldata_RaisingToken_32 + 4: 0x2\nstorage_0: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x2\ncalldata_RaisingToken_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncalldatasize_RaisingToken: 0x4\ncallvalue: 0x0\n", "description": "A possible integer underflow exists in the function `transfer(address,uint256)`.\nThe subtraction may result in a value < 0.", "filename": "/unique_chucks/41/0xda0af93134b0e1325fda263326bb6202f82cfb94.sol", "function": "transfer(address,uint256)", "lineno": 154, "title": "Integer Underflow", "type": "Warning"}, {"address": 3139, "code": "           // Take token", "debug": "", "description": "A possible transaction order independence vulnerability exists in function sell(uint256). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/41/0xda0af93134b0e1325fda263326bb6202f82cfb94.sol", "function": "sell(uint256)", "lineno": 84, "title": "Transaction order dependence", "type": "Warning"}], "success": true}