{"error": null, "issues": [{"address": 476, "code": "(bytes32 _nsname,string _hash) public {\n\t   if (msg.sender == owner) {\n\t     nsname[_nsname] = _hash;\n\t   }\n\t}\n}", "debug": "calldata_against_NS_for_IPFS_32 + 4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_against_NS_for_IPFS_0: 0x7375e41900000000000000000000000000000000000000000000000000000000\ncalldatasize_against_NS_for_IPFS: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `setNS(bytes32,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x3387b3e969a39d6640dad79e374e8a969803d7ce.sol", "function": "setNS(bytes32,string)", "lineno": 15, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1662, "code": "ntract against_NS_for_IPFS {\n    mapping(bytes32 => string) public nsname;\n\t\n    string public name = \"AGAINST NS\";\n    string public symbol = \"AGAINST\";\n    string public comment = \"AGAINST NS for IPFS\";\n    address internal owner;\n\t\n\tconstructor() public {\n       owner = address(msg.sender); \n    }\n\t\n\tfunction setNS(bytes32 _nsname,string _hash) public {\n\t   if (msg.sender == owner) {\n\t     nsname[_nsname] = _hash;\n\t   }\n\t}\n}", "debug": "storage_keccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\ncalldata_against_NS_for_IPFS_4: 0xbac1c3147749165dd7d1977fffffffffffffffffffffffffffffffffffffffc5\nkeccac_keccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\ncalldata_against_NS_for_IPFS_4: 0xff13e6a7459ae5a4c49c419171c3f89100a371508000000000129200000219e2\nstorage_4: 0x0\ncaller: 0x0\ncalldata_against_NS_for_IPFS_0: 0x7375e41900000000000000000000000000000000000000000000000000000000\ncalldatasize_against_NS_for_IPFS: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `setNS(bytes32,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x3387b3e969a39d6640dad79e374e8a969803d7ce.sol", "function": "setNS(bytes32,string)", "lineno": 3, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1691, "code": "ntract against_NS_for_IPFS {\n    mapping(bytes32 => string) public nsname;\n\t\n    string public name = \"AGAINST NS\";\n    string public symbol = \"AGAINST\";\n    string public comment = \"AGAINST NS for IPFS\";\n    address internal owner;\n\t\n\tconstructor() public {\n       owner = address(msg.sender); \n    }\n\t\n\tfunction setNS(bytes32 _nsname,string _hash) public {\n\t   if (msg.sender == owner) {\n\t     nsname[_nsname] = _hash;\n\t   }\n\t}\n}", "debug": "calldata_against_NS_for_IPFS_4 + calldata_against_NS_for_IPFS_32 + 4: 0x8000000000000000000000000000000000000000000000000000000000000000\nstorage_4: 0x0\ncaller: 0x0\ncalldata_against_NS_for_IPFS_0: 0x7375e41900000000000000000000000000000000000000000000000000000000\ncalldatasize_against_NS_for_IPFS: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `setNS(bytes32,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x3387b3e969a39d6640dad79e374e8a969803d7ce.sol", "function": "setNS(bytes32,string)", "lineno": 3, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1705, "code": "ntract against_NS_for_IPFS {\n    mapping(bytes32 => string) public nsname;\n\t\n    string public name = \"AGAINST NS\";\n    string public symbol = \"AGAINST\";\n    string public comment = \"AGAINST NS for IPFS\";\n    address internal owner;\n\t\n\tconstructor() public {\n       owner = address(msg.sender); \n    }\n\t\n\tfunction setNS(bytes32 _nsname,string _hash) public {\n\t   if (msg.sender == owner) {\n\t     nsname[_nsname] = _hash;\n\t   }\n\t}\n}", "debug": "calldata_against_NS_for_IPFS_4 + calldata_against_NS_for_IPFS_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\nstorage_4: 0x0\ncaller: 0x0\ncalldata_against_NS_for_IPFS_0: 0x7375e41900000000000000000000000000000000000000000000000000000000\ncalldatasize_against_NS_for_IPFS: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `setNS(bytes32,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x3387b3e969a39d6640dad79e374e8a969803d7ce.sol", "function": "setNS(bytes32,string)", "lineno": 3, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1727, "code": "ntract against_NS_for_IPFS {\n    mapping(bytes32 => string) public nsname;\n\t\n    string public name = \"AGAINST NS\";\n    string public symbol = \"AGAINST\";\n    string public comment = \"AGAINST NS for IPFS\";\n    address internal owner;\n\t\n\tconstructor() public {\n       owner = address(msg.sender); \n    }\n\t\n\tfunction setNS(bytes32 _nsname,string _hash) public {\n\t   if (msg.sender == owner) {\n\t     nsname[_nsname] = _hash;\n\t   }\n\t}\n}", "debug": "calldata_against_NS_for_IPFS_4 + calldata_against_NS_for_IPFS_32 + 4: 0x4000f04100100000000000000000000000000000d6401413fffffffffffffe0\nkeccac_keccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\ncalldata_against_NS_for_IPFS_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_4: 0x0\ncaller: 0x0\ncalldata_against_NS_for_IPFS_0: 0x7375e41900000000000000000000000000000000000000000000000000000000\ncalldatasize_against_NS_for_IPFS: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `setNS(bytes32,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x3387b3e969a39d6640dad79e374e8a969803d7ce.sol", "function": "setNS(bytes32,string)", "lineno": 3, "title": "Integer Overflow ", "type": "Warning"}], "success": true}