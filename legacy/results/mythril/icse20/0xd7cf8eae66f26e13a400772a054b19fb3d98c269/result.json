{
  "contract": "0xd7cf8eae66f26e13a400772a054b19fb3d98c269",
  "tool": "mythril",
  "start": 1563610063.4778886,
  "end": 1563610414.6965334,
  "duration": 351.2186448574066,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 946,
        "code": "== owner && !isLocked) &&\n         (_hash == 0 || secretBids[msg.sender].hash != 0) )\n        revert();\n    secretBids[msg.sender].hash = _hash;\n    secretBids[msg.sender].deposit = msg.value;\n    secretBidCount += 1;\n    uint _batch = secretBidCount / batchSize;\n    SecretBidEvent(_batch, msg.sender, msg.value, _hash, _message);\n  }\n\n\n  //\n  // the owner may disqualify a bid if it is bogus. for example if the hash does not correspond\n  // to the hash that is generated from the encyrpted bid tuple. when a disqualified bid is\n  // executed all the deposited funds will be returned to the bidder, as if the bid was below\n  // the strike-",
        "debug": "calldata_iERC20Token_32 + 4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_iERC20Token_0: 0x25ede14700000000000000000000000000000000000000000000000000000000\ncalldatasize_iERC20Token: 0x4\n",
        "description": "A possible integer overflow exists in the function `depositSecretBid(bytes32,bytes)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/17/0xd7cf8eae66f26e13a400772a054b19fb3d98c269.sol",
        "function": "depositSecretBid(bytes32,bytes)",
        "lineno": 299,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2579,
        "code": "differe",
        "debug": "callvalue: 0x57f25cd000000000000000000000000000000000000000000000000000000000\nstorage_6: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncalldatasize_iERC20Token: 0x3\n",
        "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/17/0xd7cf8eae66f26e13a400772a054b19fb3d98c269.sol",
        "function": "fallback",
        "lineno": 99,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2592,
        "code": "inus _y, assert",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_6: 0x1\ncallvalue: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldatasize_iERC20Token: 0x3\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/17/0xd7cf8eae66f26e13a400772a054b19fb3d98c269.sol",
        "function": "fallback",
        "lineno": 99,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3055,
        "code": "f (_quantity > 0) {\n      //",
        "debug": "SOLVER OUTPUT:\ncalldata_iERC20Token_0: 0x110f887400000000000000000000000000000000000000000000000000000000\ncalldatasize_iERC20Token: 0x4\ncallvalue: 0x0\n",
        "description": "In the function `withdrawRefund()` a non-zero amount of Ether is sent to msg.sender.\nIt seems that this function can be called without restrictions.",
        "filename": "/unique_chucks/17/0xd7cf8eae66f26e13a400772a054b19fb3d98c269.sol",
        "function": "withdrawRefund()",
        "lineno": 412,
        "title": "Ether send",
        "type": "Warning"
      },
      {
        "address": 3466,
        "code": "Gas;\n  }\n\n\n  //\n  //c",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/17/0xd7cf8eae66f26e13a400772a054b19fb3d98c269.sol",
        "function": "reserveDeveloperTokens(address,uint256)",
        "lineno": 244,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 3466,
        "code": "Gas;\n  }\n\n\n  //\n  //c",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function reserveDeveloperTokens(address,uint256). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/17/0xd7cf8eae66f26e13a400772a054b19fb3d98c269.sol",
        "function": "reserveDeveloperTokens(address,uint256)",
        "lineno": 244,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 3554,
        "code": "y owner (or any other concerned party) to generate a SatateChange",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/17/0xd7cf8eae66f26e13a400772a054b19fb3d98c269.sol",
        "function": "reserveDeveloperTokens(address,uint256)",
        "lineno": 249,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 3961,
        "code": "le. when a disquali",
        "debug": "storage_12: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_iERC20Token_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_0: 0xff00\nstorage_2: 0x0\ncaller: 0x0\nstorage_1: 0x1\ncalldata_iERC20Token_0: 0x25ede14700000000000000000000000000000000000000000000000000000000\ncalldatasize_iERC20Token: 0x4\nstorage_4 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\n",
        "description": "A possible integer overflow exists in the function `depositSecretBid(bytes32,bytes)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/17/0xd7cf8eae66f26e13a400772a054b19fb3d98c269.sol",
        "function": "depositSecretBid(bytes32,bytes)",
        "lineno": 312,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 3982,
        "code": "uted all the deposited fun",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_iERC20Token_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_0: 0xff00\nstorage_2: 0x0\ncaller: 0x0\nstorage_1: 0x1\ncalldata_iERC20Token_0: 0x25ede14700000000000000000000000000000000000000000000000000000000\ncalldatasize_iERC20Token: 0x4\nstorage_20: 0x0\nstorage_4 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/17/0xd7cf8eae66f26e13a400772a054b19fb3d98c269.sol",
        "function": "depositSecretBid(bytes32,bytes)",
        "lineno": 313,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 4517,
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/17/0xd7cf8eae66f26e13a400772a054b19fb3d98c269.sol",
        "function": "payUnderwriter()",
        "lineno": 441,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 4517,
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function payUnderwriter(). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/17/0xd7cf8eae66f26e13a400772a054b19fb3d98c269.sol",
        "function": "payUnderwriter()",
        "lineno": 441,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 4570,
        "code": "\n  //\n  // pay auction proceeds ",
        "debug": "storage_10: 0xde9aa0007ffff9dbbb05d00001000207fffdffbfffbfbfbfffbfbfefbfbff7f6\nstorage_11: 0xff3717ddf147ba7fd6976a72ee859c9c251431c6dd4346e384e0fd941c87b69c\nstorage_1: 0x8\ncalldata_iERC20Token_0: 0x4c182a9500000000000000000000000000000000000000000000000000000000\ncalldatasize_iERC20Token: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `doDeveloperGrant()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/17/0xd7cf8eae66f26e13a400772a054b19fb3d98c269.sol",
        "function": "doDeveloperGrant()",
        "lineno": 422,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 4774,
        "code": "alled by underwriter ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/17/0xd7cf8eae66f26e13a400772a054b19fb3d98c269.sol",
        "function": "doDeveloperGrant()",
        "lineno": 425,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 4774,
        "code": "alled by underwriter ",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function doDeveloperGrant(). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/17/0xd7cf8eae66f26e13a400772a054b19fb3d98c269.sol",
        "function": "doDeveloperGrant()",
        "lineno": 425,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 6628,
        "code": "ds[_addr].tokens += _",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/17/0xd7cf8eae66f26e13a400772a054b19fb3d98c269.sol",
        "function": "executeBid(uint256,uint256,uint256)",
        "lineno": 349,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 7468,
        "code": "the bidder gets a refund of half of",
        "debug": "storage_2 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xb2c81e3be60b809eebca250ae5f3958de8241f3c0942692d3cecd1fd00743211\nstorage_1 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x93931c13e507cbbcbf74d9eee4fb920eeaef84aa5110428da2eddb017d5ebcdd\nstorage_0 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xff00\nstorage_1: 0x4\ncalldata_iERC20Token_0: 0x2f6509600000000000000000000000000000000000000000000000000000000\ncalldatasize_iERC20Token: 0x4\nstorage_7: 0x0\ncalldata_iERC20Token_32 + 4: 0x0\nkeccac_calldata_iERC20Token_4: 0x0\nstorage_4 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `executeBid(uint256,uint256,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/17/0xd7cf8eae66f26e13a400772a054b19fb3d98c269.sol",
        "function": "executeBid(uint256,uint256,uint256)",
        "lineno": 373,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 7558,
        "code": "his deposit\n  // *",
        "debug": "storage_13: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_0 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xff00\nstorage_1 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_1: 0x4\ncalldata_iERC20Token_0: 0x2f6509600000000000000000000000000000000000000000000000000000000\ncalldatasize_iERC20Token: 0x4\nstorage_7: 0x0\ncalldata_iERC20Token_32 + 4: 0x0\nkeccac_calldata_iERC20Token_4: 0x0\nstorage_4 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `executeBid(uint256,uint256,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/17/0xd7cf8eae66f26e13a400772a054b19fb3d98c269.sol",
        "function": "executeBid(uint256,uint256,uint256)",
        "lineno": 374,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 7579,
        "code": "ceive an tokens\n  //\n  fu",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_0 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xff00\nstorage_1 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_1: 0x4\ncalldata_iERC20Token_0: 0x2f6509600000000000000000000000000000000000000000000000000000000\ncalldatasize_iERC20Token: 0x4\nstorage_20: 0x0\nstorage_7: 0x0\ncalldata_iERC20Token_32 + 4: 0x0\nkeccac_calldata_iERC20Token_4: 0x0\nstorage_4 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/17/0xd7cf8eae66f26e13a400772a054b19fb3d98c269.sol",
        "function": "executeBid(uint256,uint256,uint256)",
        "lineno": 375,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 9012,
        "code": "ruct Se",
        "debug": "calldata_iERC20Token_32 + 4: 0xc725a027eb19dc0021e32572b603f28195447806104f3e417572e3fc000dcb02\nstorage_1 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_1: 0x4\ncalldata_iERC20Token_0: 0x2f6509600000000000000000000000000000000000000000000000000000000\ncalldatasize_iERC20Token: 0x4\nkeccac_calldata_iERC20Token_4: 0x0\nstorage_4 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `executeBid(uint256,uint256,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/17/0xd7cf8eae66f26e13a400772a054b19fb3d98c269.sol",
        "function": "executeBid(uint256,uint256,uint256)",
        "lineno": 129,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 9046,
        "code": "   bool disqualified;     // fl",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_iERC20Token_32 + 4: 0x8000000000000000000000000000000000000000000000000000000000000000\nstorage_1 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_1: 0x4\ncalldata_iERC20Token_0: 0x2f6509600000000000000000000000000000000000000000000000000000000\ncalldatasize_iERC20Token: 0x4\nkeccac_calldata_iERC20Token_4: 0x0\nstorage_4 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/17/0xd7cf8eae66f26e13a400772a054b19fb3d98c269.sol",
        "function": "executeBid(uint256,uint256,uint256)",
        "lineno": 130,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}