{"error": null, "issues": [{"address": 267, "code": "s32 hash,\n        string note\n    ) public returns (uint256 listIndex) {\n        require(\n            posts[hash].poster == ZERO_ADDRESS,\n            \"A post with this hash was already made!\"\n        );\n        posts[hash] = Post({\n            poster: msg.sender,\n            note: note,\n            hash: hash,\n            listIndex: postList.length,\n            blocknum: block.number\n        });\n        postList.push(hash);\n        listIndex = postList.length - 1;\n        emit PostMade(msg.sender, note, hash, listIndex, block.number);\n        return listIndex;\n    }\n\n    function getNumPosts() public view returns (", "debug": "calldata_BulletinBoard_32 + 4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_BulletinBoard_0: 0xaf38d65800000000000000000000000000000000000000000000000000000000\ncalldatasize_BulletinBoard: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `makePost(bytes32,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/30/0x7e7bc791d8e7197b4e6d7c433eea48b167cc6536.sol", "function": "makePost(bytes32,string)", "lineno": 33, "title": "Integer Overflow ", "type": "Warning"}, {"address": 622, "code": "tList;\n    \n    address Z", "debug": "The exception is triggered under the following conditions:\n\ncalldata_BulletinBoard_4: 0x0\nstorage_1: 0x0\ncalldata_BulletinBoard_0: 0x3a6209c300000000000000000000000000000000000000000000000000000000\ncalldatasize_BulletinBoard: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/30/0x7e7bc791d8e7197b4e6d7c433eea48b167cc6536.sol", "function": "_function_0x3a6209c3", "lineno": 21, "title": "Exception state", "type": "Informational"}, {"address": 1138, "code": ": msg.sender,\n            note: note,\n            hash: hash,\n            listIndex: postList.length,\n            blocknum: block.number\n        });\n        postList.push(hash);\n        listIn", "debug": "mem_160 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_BulletinBoard_4 + calldata_BulletinBoard_32 + 4)) +\n32: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\nstorage_2: 0x0\nstorage_0 +\nkeccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\ncalldata_BulletinBoard_4: 0x0\ncalldata_BulletinBoard_0: 0xaf38d65800000000000000000000000000000000000000000000000000000000\ncalldatasize_BulletinBoard: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `makePost(bytes32,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/30/0x7e7bc791d8e7197b4e6d7c433eea48b167cc6536.sol", "function": "makePost(bytes32,string)", "lineno": 41, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1200, "code": ";\n\ncontract Bullet", "debug": "storage_1 +\nkeccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\ncalldata_BulletinBoard_4: 0xc0\nstorage_1: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nkeccac_1_+\nkeccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\ncalldata_BulletinBoard_4: 0x78b0c00000000000000000000000000000000000000000000000000000000000\nmem_mem_160 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_BulletinBoard_4 + calldata_BulletinBoard_32 + 4)) +\n32: 0x0\nstorage_2: 0x0\nstorage_0 +\nkeccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\ncalldata_BulletinBoard_4: 0x0\ncalldata_BulletinBoard_0: 0xaf38d65800000000000000000000000000000000000000000000000000000000\ncalldatasize_BulletinBoard: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `makePost(bytes32,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/30/0x7e7bc791d8e7197b4e6d7c433eea48b167cc6536.sol", "function": "makePost(bytes32,string)", "lineno": 1, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1747, "code": "ntract BulletinBoard {\n    event PostMade(\n        address indexed poster,\n        string note,\n        bytes32 hash,\n        uint256 listIndex,\n        uint256 blocknum\n    );\n    \n    struct Post {\n        address poster;\n        string note;\n        bytes32 hash;\n        uint256 listIndex;\n        uint256 blocknum;\n    }\n\n    mapping(bytes32 => Post) public posts;\n    bytes32[] public postList;\n    \n    address ZERO_ADDRESS = address(0);\n\n    constructor() public {\n        string memory testPost = \"pizza is yummy 123\";\n        bytes32 testHash = keccak256(abi.encodePacked(testPost));\n        string memory testNote = \"secret note, shh\";\n        require(makePost(testHash, testNote) == 0, \"Error making post!\");\n    }\n\n    function makePost(\n        bytes32 hash,\n        string note\n    ) public returns (uint256 listIndex) {\n        require(\n            posts[hash].poster == ZERO_ADDRESS,\n            \"A post with this hash was already made!\"\n        );\n        posts[hash] = Post({\n            poster: msg.sender,\n            note: note,\n            hash: hash,\n            listIndex: postList.length,\n            blocknum: block.number\n        });\n        postList.push(hash);\n        listIndex = postList.length - 1;\n        emit PostMade(msg.sender, note, hash, listIndex, block.number);\n        return listIndex;\n    }\n\n    function getNumPosts() public view returns (uint256) {\n        return postList.length;\n    }\n}", "debug": "storage_1 +\nkeccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\ncalldata_BulletinBoard_4: 0xbac1c3147749165dd7d1977fffffffffffffffffffffffffffffffffffffffc5\nkeccac_1_+\nkeccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\ncalldata_BulletinBoard_4: 0xff13e6a7459ae5a4c49c419171c3f89100a371508000000000129200000219e2\nstorage_2: 0x0\nstorage_0 +\nkeccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\ncalldata_BulletinBoard_4: 0x0\ncalldata_BulletinBoard_0: 0xaf38d65800000000000000000000000000000000000000000000000000000000\ncalldatasize_BulletinBoard: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `makePost(bytes32,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/30/0x7e7bc791d8e7197b4e6d7c433eea48b167cc6536.sol", "function": "makePost(bytes32,string)", "lineno": 3, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1776, "code": "ntract BulletinBoard {\n    event PostMade(\n        address indexed poster,\n        string note,\n        bytes32 hash,\n        uint256 listIndex,\n        uint256 blocknum\n    );\n    \n    struct Post {\n        address poster;\n        string note;\n        bytes32 hash;\n        uint256 listIndex;\n        uint256 blocknum;\n    }\n\n    mapping(bytes32 => Post) public posts;\n    bytes32[] public postList;\n    \n    address ZERO_ADDRESS = address(0);\n\n    constructor() public {\n        string memory testPost = \"pizza is yummy 123\";\n        bytes32 testHash = keccak256(abi.encodePacked(testPost));\n        string memory testNote = \"secret note, shh\";\n        require(makePost(testHash, testNote) == 0, \"Error making post!\");\n    }\n\n    function makePost(\n        bytes32 hash,\n        string note\n    ) public returns (uint256 listIndex) {\n        require(\n            posts[hash].poster == ZERO_ADDRESS,\n            \"A post with this hash was already made!\"\n        );\n        posts[hash] = Post({\n            poster: msg.sender,\n            note: note,\n            hash: hash,\n            listIndex: postList.length,\n            blocknum: block.number\n        });\n        postList.push(hash);\n        listIndex = postList.length - 1;\n        emit PostMade(msg.sender, note, hash, listIndex, block.number);\n        return listIndex;\n    }\n\n    function getNumPosts() public view returns (uint256) {\n        return postList.length;\n    }\n}", "debug": "mem_mem_160 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_BulletinBoard_4 + calldata_BulletinBoard_32 + 4)) +\n32: 0x8000000000000000000000000000000000000000000000000000000000000000\nstorage_2: 0x0\nstorage_0 +\nkeccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\ncalldata_BulletinBoard_4: 0x0\ncalldata_BulletinBoard_0: 0xaf38d65800000000000000000000000000000000000000000000000000000000\ncalldatasize_BulletinBoard: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `makePost(bytes32,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/30/0x7e7bc791d8e7197b4e6d7c433eea48b167cc6536.sol", "function": "makePost(bytes32,string)", "lineno": 3, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1790, "code": "ntract BulletinBoard {\n    event PostMade(\n        address indexed poster,\n        string note,\n        bytes32 hash,\n        uint256 listIndex,\n        uint256 blocknum\n    );\n    \n    struct Post {\n        address poster;\n        string note;\n        bytes32 hash;\n        uint256 listIndex;\n        uint256 blocknum;\n    }\n\n    mapping(bytes32 => Post) public posts;\n    bytes32[] public postList;\n    \n    address ZERO_ADDRESS = address(0);\n\n    constructor() public {\n        string memory testPost = \"pizza is yummy 123\";\n        bytes32 testHash = keccak256(abi.encodePacked(testPost));\n        string memory testNote = \"secret note, shh\";\n        require(makePost(testHash, testNote) == 0, \"Error making post!\");\n    }\n\n    function makePost(\n        bytes32 hash,\n        string note\n    ) public returns (uint256 listIndex) {\n        require(\n            posts[hash].poster == ZERO_ADDRESS,\n            \"A post with this hash was already made!\"\n        );\n        posts[hash] = Post({\n            poster: msg.sender,\n            note: note,\n            hash: hash,\n            listIndex: postList.length,\n            blocknum: block.number\n        });\n        postList.push(hash);\n        listIndex = postList.length - 1;\n        emit PostMade(msg.sender, note, hash, listIndex, block.number);\n        return listIndex;\n    }\n\n    function getNumPosts() public view returns (uint256) {\n        return postList.length;\n    }\n}", "debug": "mem_160 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_BulletinBoard_4 + calldata_BulletinBoard_32 + 4)) +\n32: 0xc48c04261444f7ce9c1a66f6c355debe3fffffffffffffffffffffffffffffed\nmem_mem_160 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_BulletinBoard_4 + calldata_BulletinBoard_32 + 4)) +\n32: 0xe9ed542651000003d76906f7c018193fbfffffffffffffffffffffffffffffcb\nstorage_2: 0x0\nstorage_0 +\nkeccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\ncalldata_BulletinBoard_4: 0x0\ncalldata_BulletinBoard_0: 0xaf38d65800000000000000000000000000000000000000000000000000000000\ncalldatasize_BulletinBoard: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `makePost(bytes32,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/30/0x7e7bc791d8e7197b4e6d7c433eea48b167cc6536.sol", "function": "makePost(bytes32,string)", "lineno": 3, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1807, "code": "ntract BulletinBoard {\n    event PostMade(\n        address indexed poster,\n        string note,\n        bytes32 hash,\n        uint256 listIndex,\n        uint256 blocknum\n    );\n    \n    struct Post {\n        address poster;\n        string note;\n        bytes32 hash;\n        uint256 listIndex;\n        uint256 blocknum;\n    }\n\n    mapping(bytes32 => Post) public posts;\n    bytes32[] public postList;\n    \n    address ZERO_ADDRESS = address(0);\n\n    constructor() public {\n        string memory testPost = \"pizza is yummy 123\";\n        bytes32 testHash = keccak256(abi.encodePacked(testPost));\n        string memory testNote = \"secret note, shh\";\n        require(makePost(testHash, testNote) == 0, \"Error making post!\");\n    }\n\n    function makePost(\n        bytes32 hash,\n        string note\n    ) public returns (uint256 listIndex) {\n        require(\n            posts[hash].poster == ZERO_ADDRESS,\n            \"A post with this hash was already made!\"\n        );\n        posts[hash] = Post({\n            poster: msg.sender,\n            note: note,\n            hash: hash,\n            listIndex: postList.length,\n            blocknum: block.number\n        });\n        postList.push(hash);\n        listIndex = postList.length - 1;\n        emit PostMade(msg.sender, note, hash, listIndex, block.number);\n        return listIndex;\n    }\n\n    function getNumPosts() public view returns (uint256) {\n        return postList.length;\n    }\n}", "debug": "mem_160 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_BulletinBoard_4 + calldata_BulletinBoard_32 + 4)) +\n32: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa0\nmem_mem_160 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_BulletinBoard_4 + calldata_BulletinBoard_32 + 4)) +\n32: 0x25\nstorage_2: 0x0\nstorage_0 +\nkeccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\ncalldata_BulletinBoard_4: 0x0\ncalldata_BulletinBoard_0: 0xaf38d65800000000000000000000000000000000000000000000000000000000\ncalldatasize_BulletinBoard: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `makePost(bytes32,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/30/0x7e7bc791d8e7197b4e6d7c433eea48b167cc6536.sol", "function": "makePost(bytes32,string)", "lineno": 3, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1812, "code": "ntract BulletinBoard {\n    event PostMade(\n        address indexed poster,\n        string note,\n        bytes32 hash,\n        uint256 listIndex,\n        uint256 blocknum\n    );\n    \n    struct Post {\n        address poster;\n        string note;\n        bytes32 hash;\n        uint256 listIndex;\n        uint256 blocknum;\n    }\n\n    mapping(bytes32 => Post) public posts;\n    bytes32[] public postList;\n    \n    address ZERO_ADDRESS = address(0);\n\n    constructor() public {\n        string memory testPost = \"pizza is yummy 123\";\n        bytes32 testHash = keccak256(abi.encodePacked(testPost));\n        string memory testNote = \"secret note, shh\";\n        require(makePost(testHash, testNote) == 0, \"Error making post!\");\n    }\n\n    function makePost(\n        bytes32 hash,\n        string note\n    ) public returns (uint256 listIndex) {\n        require(\n            posts[hash].poster == ZERO_ADDRESS,\n            \"A post with this hash was already made!\"\n        );\n        posts[hash] = Post({\n            poster: msg.sender,\n            note: note,\n            hash: hash,\n            listIndex: postList.length,\n            blocknum: block.number\n        });\n        postList.push(hash);\n        listIndex = postList.length - 1;\n        emit PostMade(msg.sender, note, hash, listIndex, block.number);\n        return listIndex;\n    }\n\n    function getNumPosts() public view returns (uint256) {\n        return postList.length;\n    }\n}", "debug": "mem_160 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_BulletinBoard_4 + calldata_BulletinBoard_32 + 4)) +\n32: 0x9ffbffffffffd99db48e28ffffffffffffffffffffffffffffffffffffffffe8\nmem_mem_160 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_BulletinBoard_4 + calldata_BulletinBoard_32 + 4)) +\n32: 0x2021fda91bfffffffffffffffffffffffffffffffffffffffff8\nkeccac_1_+\nkeccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\ncalldata_BulletinBoard_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_2: 0x0\nstorage_0 +\nkeccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\ncalldata_BulletinBoard_4: 0x0\ncalldata_BulletinBoard_0: 0xaf38d65800000000000000000000000000000000000000000000000000000000\ncalldatasize_BulletinBoard: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `makePost(bytes32,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/30/0x7e7bc791d8e7197b4e6d7c433eea48b167cc6536.sol", "function": "makePost(bytes32,string)", "lineno": 3, "title": "Integer Overflow ", "type": "Warning"}], "success": true}