{
  "contract": "0x98ab4a70bf27afad6e0e88464cbffc524e7daf6b",
  "tool": "mythril",
  "start": 1563747207.612584,
  "end": 1563747455.279174,
  "duration": 247.66658997535706,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 1471,
        "debug": "calldata_WeOneCoin_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_WeOneCoin_0: 0xb84c824600000000000000000000000000000000000000000000000000000000\ncalldatasize_WeOneCoin: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `_function_0xb84c8246`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/43/0x98ab4a70bf27afad6e0e88464cbffc524e7daf6b.sol",
        "function": "_function_0xb84c8246",
        "lineno": 232,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1600,
        "code": "  symbol = _value;\n        return true;\n    }\n\n\tfunction kill() public onlyOwner {\n\t\tselfdestruct(owner);\n\t}\n\n}",
        "debug": "calldata_WeOneCoin_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_WeOneCoin_0: 0xc47f002700000000000000000000000000000000000000000000000000000000\ncalldatasize_WeOneCoin: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `_function_0xc47f0027`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/43/0x98ab4a70bf27afad6e0e88464cbffc524e7daf6b.sol",
        "function": "_function_0xc47f0027",
        "lineno": 224,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1771,
        "code": ";\n        ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, this, data);\n        return true;\n    }\n\n\n    // ------------------------------------------------------------------------\n    // can accept ether\n    // ------------------------------------------------------------------------\n    function ",
        "debug": "calldata_WeOneCoin_32 + 36: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_WeOneCoin_0: 0xcae9ca5100000000000000000000000000000000000000000000000000000000\ncalldatasize_WeOneCoin: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `approveAndCall(address,uint256,bytes)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/43/0x98ab4a70bf27afad6e0e88464cbffc524e7daf6b.sol",
        "function": "approveAndCall(address,uint256,bytes)",
        "lineno": 198,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 6259,
        "code": "ire(c",
        "debug": "calldata_WeOneCoin_32 + 4: 0xc290137095b13347e55005a6dc184559e0489f1233480050d0fb4bba17d34179\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_WeOneCoin_4: 0x9c9efb7ae5acd378025256a3945f5859076e809243093d9ecae2636c9fd28979\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xc290137095b13347e55005a6dc184559e0489f1233480050d0fb4bba17d34179\ncalldata_WeOneCoin_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncalldatasize_WeOneCoin: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `transfer(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/43/0x98ab4a70bf27afad6e0e88464cbffc524e7daf6b.sol",
        "function": "transfer(address,uint256)",
        "lineno": 21,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 6509,
        "code": "ic  name;\n    uint8 public decimals;\n    uint public _totalSupply;\n\n    mapping(address => uint) balances;\n    mapping(address => mapping(address => uint)) allowed;\n\n    // ------------------------------------------------------------------------\n    // Constructor\n    // ------------------------------------------------------------------------\n    constructor() public {\n        symbol = \"WEONECOIN\";\n        name = \"WeOneCoin Token\";\n        decimals = 18;\n        _totalSupply = 10000000000000000000000000000;\n        balances[0x74D5697209Ce36309b7D97a09234804B982921e9] = _totalSupply;\n        emit Transfer(address(0), 0x74D5697209Ce36309b7D97a09234804B982921e9, _totalSupply);\n    }\n\n\n    // ------------------------------------------------------------------------\n    // Total supply\n    // ------------------------------------------------------------------------\n    function totalSupply() public constant returns (uint) {\n        return _totalSupply  - balances[address(0)];\n    }\n\n\n    // ------------------------------------------------------------------------\n    // Get the token balance for account tokenOwner\n    // ------------------------------------------------------------------------\n    function balanceOf(address tokenOwner) public constant returns (uint balance) {\n        return balances[tokenOwner];\n    }\n\n\n    // ------------------------------------------------------------------------\n    // Transfer the balance from token owner's account to to account\n    // - Owner's account must have sufficient balance to transfer\n    // - 0 value transfers are allowed\n    // ------------------------------------------------------------------------\n    function transfer(address to, uint tokens) public returns (bool success) {\n        balances[msg.sender] = safeSub(balances[msg.sender], tokens);\n        balances[to] = safeAdd(balances[to], tokens);\n        emit Transfer(msg.sender, to, tokens);\n        return true;\n    }\n\n\n    // ------------------------------------------------------------------------\n    // Token owner can approve for spender to transferFrom(...) tokens\n    // from the token owner's account\n    //\n    // https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20-token-standard.md\n    // recommends that there are no checks for the approval double-spend attack\n    // as this should be implemented in user interfaces \n    // ------------------------------------------------------------------------\n    function approve(address spender, uint tokens) public returns (bool success) {\n        allowed[msg.sender][spender] = tokens;\n        emit Approval(msg.sender, spender, tokens);\n        return true;\n    }\n\n\n    // ------------------------------------------------------------------------\n    // Transfer tokens from the from account to the to account\n    // \n    // The calling account must already have sufficient tokens approve(...)-d\n    // for spending from the from account and\n    // - From account must have sufficient balance to transfer\n    // - Spender must have sufficient allowance to transfer\n    // - 0 value transfers are allowed\n    // ------------------------------------------------------------------------\n    function transferFrom(address from, address to, uint tokens) public returns (bool success) {\n        balances[from] = safeSub(balances[from], tokens);\n        allowed[from][msg.sender] = safeSub(allowed[from][msg.sender], tokens);\n        balances[to] = safeAdd(balances[to], tokens);\n        emit Transfer(from, to, tokens);\n        return true;\n    }\n\n\n    // ------------------------------------------------------------------------\n    // Returns the amount of tokens approved by the owner that can be\n    // transferred to the spender's account\n    // ------------------------------------------------------------------------\n    function allowance(address tokenOwner, address spender) public constant returns (uint remaining) {\n        return allowed[tokenOwner][spender];\n    }\n\n\n    // ------------------------------------------------------------------------\n    // Token owner can approve for spender to transferFrom(...) tokens\n    // from the token owner's account. The spender contract function\n    // receiveApproval(...) is then executed\n    // ------------------------------------------------------------------------\n    function approveAndCall(address spender, uint tokens, bytes data) public returns (bool success) {\n        allowed[msg.sender][spender] = tokens;\n        emit Approval(msg.sender, spender, tokens);\n        ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, this, data);\n        return true;\n    }\n\n\n    // ------------------------------------------------------------------------\n    // can accept ether\n    // ------------------------------------------------------------------------\n    function () public payable {\n    }\n\n\n    // ------------------------------------------------------------------------\n    // Owner can transfer out any accidentally sent ERC20 tokens\n    // ------------------------------------------------------------------------\n    function transferAnyERC20Token(address tokenAddress, uint tokens) public onlyOwner returns (bool success) {\n        return ERC20Interface(tokenAddress).transfer(owner, tokens);\n    }\n\n\tfunction setName (string _value) public onlyOwner returns (bool success) {\n        name = _value;\n        return true;\n    }\n    \n    function setSymbol (string _value) public onlyOwner returns (bool success) {\n        symbol = _value;\n        return true;\n    }\n\n\tfunction kill() public onlyOwner {\n\t\tselfdestruct(owner);\n\t}\n\n}",
        "debug": "calldata_WeOneCoin_4 + calldata_WeOneCoin_4: 0x8000000000000000000000000000000000000000000000000000000000000000\nstorage_0: 0x0\ncaller: 0x0\ncalldata_WeOneCoin_0: 0xc47f002700000000000000000000000000000000000000000000000000000000\ncalldatasize_WeOneCoin: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `_function_0xc47f0027`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/43/0x98ab4a70bf27afad6e0e88464cbffc524e7daf6b.sol",
        "function": "_function_0xc47f0027",
        "lineno": 100,
        "title": "Integer Overflow ",
        "type": "Warning"
      }
    ],
    "success": true
  }
}