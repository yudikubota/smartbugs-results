{"error": null, "issues": [{"address": 865, "code": ";\n\ncontract Tokens", "debug": "storage_0: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_1: 0x0\ncaller: 0x0\ncalldata_Tokens_0: 0x2c8da56000000000000000000000000000000000000000000000000000000000\ncalldatasize_Tokens: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `addToken(address,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/26/0xf264b7cf707afc6cd9eeadd1d7a7b96ed5743d02.sol", "function": "addToken(address,string)", "lineno": 1, "title": "Integer Overflow ", "type": "Warning"}, {"address": 988, "code": "ress, _websiteUrl));\n    }\n\n    function ", "debug": "mem_160 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_Tokens_4 + calldata_Tokens_32 + 4)) +\n32: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\nstorage_1: 0x0\ncaller: 0x0\ncalldata_Tokens_0: 0x2c8da56000000000000000000000000000000000000000000000000000000000\ncalldatasize_Tokens: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `addToken(address,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/26/0xf264b7cf707afc6cd9eeadd1d7a7b96ed5743d02.sol", "function": "addToken(address,string)", "lineno": 23, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1034, "code": "public tokens;\n    ad", "debug": "The exception is triggered under the following conditions:\n\ncalldata_Tokens_4: 0x0\nstorage_0: 0x0\ncalldata_Tokens_0: 0x4f64b2be00000000000000000000000000000000000000000000000000000000\ncalldatasize_Tokens: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/26/0xf264b7cf707afc6cd9eeadd1d7a7b96ed5743d02.sol", "function": "_function_0x4f64b2be", "lineno": 9, "title": "Exception state", "type": "Informational"}, {"address": 1361, "code": " }\n\n    function", "debug": "The exception is triggered under the following conditions:\n\ncalldata_Tokens_4: 0x0\nstorage_0: 0x0\nstorage_1: 0x0\ncaller: 0x0\ncalldata_Tokens_0: 0x6297c16c00000000000000000000000000000000000000000000000000000000\ncalldatasize_Tokens: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/26/0xf264b7cf707afc6cd9eeadd1d7a7b96ed5743d02.sol", "function": "deleteToken(uint256)", "lineno": 29, "title": "Exception state", "type": "Informational"}, {"address": 1674, "code": "ntract Tokens {\n    struct Token {\n        address _address;\n        string _websiteUrl;\n    }\n    \n    Token[] public tokens;\n    address public owner;\n\n    constructor() public {\n        owner = 0x5fa344f3B7AfD345377A37B62Ce87DDE01c1D414;\n    }\n\n    function changeOwner(address _owner) public {\n        require(msg.sender == owner);\n        owner = _owner;      \n    }\n\n    function addToken(address _address, string _websiteUrl) public {\n        require(msg.sender == owner);\n        tokens.push(Token(_address, _websiteUrl));\n    }\n\n    function deleteToken(uint _tokenId) public {\n        require(msg.sender == owner);\n        delete tokens[_tokenId];      \n    }\n\n    function getTokensCount() public view returns(uint) {\n        return tokens.length;\n    }\n}", "debug": "storage_1 +\n18569430475105882587588266137607568536673111973893317399460219858819262702947 +\n2*storage_0: 0xbac1c3147749165dd7d1977fffffffffffffffffffffffffffffffffffffffc5\nkeccac_1_+\n18569430475105882587588266137607568536673111973893317399460219858819262702947_+\n2*storage_0: 0xff13e6a7459ae5a4c49c419171c3f89100a371508000000000129200000219e2\nstorage_1: 0x0\ncaller: 0x0\ncalldata_Tokens_0: 0x2c8da56000000000000000000000000000000000000000000000000000000000\ncalldatasize_Tokens: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `addToken(address,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/26/0xf264b7cf707afc6cd9eeadd1d7a7b96ed5743d02.sol", "function": "addToken(address,string)", "lineno": 3, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1703, "code": "ntract Tokens {\n    struct Token {\n        address _address;\n        string _websiteUrl;\n    }\n    \n    Token[] public tokens;\n    address public owner;\n\n    constructor() public {\n        owner = 0x5fa344f3B7AfD345377A37B62Ce87DDE01c1D414;\n    }\n\n    function changeOwner(address _owner) public {\n        require(msg.sender == owner);\n        owner = _owner;      \n    }\n\n    function addToken(address _address, string _websiteUrl) public {\n        require(msg.sender == owner);\n        tokens.push(Token(_address, _websiteUrl));\n    }\n\n    function deleteToken(uint _tokenId) public {\n        require(msg.sender == owner);\n        delete tokens[_tokenId];      \n    }\n\n    function getTokensCount() public view returns(uint) {\n        return tokens.length;\n    }\n}", "debug": "mem_mem_160 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_Tokens_4 + calldata_Tokens_32 + 4)) +\n32: 0x8000000000000000000000000000000000000000000000000000000000000000\nstorage_1: 0x0\ncaller: 0x0\ncalldata_Tokens_0: 0x2c8da56000000000000000000000000000000000000000000000000000000000\ncalldatasize_Tokens: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `addToken(address,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/26/0xf264b7cf707afc6cd9eeadd1d7a7b96ed5743d02.sol", "function": "addToken(address,string)", "lineno": 3, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1717, "code": "ntract Tokens {\n    struct Token {\n        address _address;\n        string _websiteUrl;\n    }\n    \n    Token[] public tokens;\n    address public owner;\n\n    constructor() public {\n        owner = 0x5fa344f3B7AfD345377A37B62Ce87DDE01c1D414;\n    }\n\n    function changeOwner(address _owner) public {\n        require(msg.sender == owner);\n        owner = _owner;      \n    }\n\n    function addToken(address _address, string _websiteUrl) public {\n        require(msg.sender == owner);\n        tokens.push(Token(_address, _websiteUrl));\n    }\n\n    function deleteToken(uint _tokenId) public {\n        require(msg.sender == owner);\n        delete tokens[_tokenId];      \n    }\n\n    function getTokensCount() public view returns(uint) {\n        return tokens.length;\n    }\n}", "debug": "mem_mem_160 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_Tokens_4 + calldata_Tokens_32 + 4)) +\n32: 0xe9ed542651000003d76906f7c018193fbfffffffffffffffffffffffffffffcb\nmem_160 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_Tokens_4 + calldata_Tokens_32 + 4)) +\n32: 0xc48c04261444f7ce9c1a66f6c355debe3fffffffffffffffffffffffffffffed\nstorage_1: 0x0\ncaller: 0x0\ncalldata_Tokens_0: 0x2c8da56000000000000000000000000000000000000000000000000000000000\ncalldatasize_Tokens: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `addToken(address,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/26/0xf264b7cf707afc6cd9eeadd1d7a7b96ed5743d02.sol", "function": "addToken(address,string)", "lineno": 3, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1734, "code": "ntract Tokens {\n    struct Token {\n        address _address;\n        string _websiteUrl;\n    }\n    \n    Token[] public tokens;\n    address public owner;\n\n    constructor() public {\n        owner = 0x5fa344f3B7AfD345377A37B62Ce87DDE01c1D414;\n    }\n\n    function changeOwner(address _owner) public {\n        require(msg.sender == owner);\n        owner = _owner;      \n    }\n\n    function addToken(address _address, string _websiteUrl) public {\n        require(msg.sender == owner);\n        tokens.push(Token(_address, _websiteUrl));\n    }\n\n    function deleteToken(uint _tokenId) public {\n        require(msg.sender == owner);\n        delete tokens[_tokenId];      \n    }\n\n    function getTokensCount() public view returns(uint) {\n        return tokens.length;\n    }\n}", "debug": "mem_mem_160 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_Tokens_4 + calldata_Tokens_32 + 4)) +\n32: 0x25\nmem_160 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_Tokens_4 + calldata_Tokens_32 + 4)) +\n32: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa0\nstorage_1: 0x0\ncaller: 0x0\ncalldata_Tokens_0: 0x2c8da56000000000000000000000000000000000000000000000000000000000\ncalldatasize_Tokens: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `addToken(address,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/26/0xf264b7cf707afc6cd9eeadd1d7a7b96ed5743d02.sol", "function": "addToken(address,string)", "lineno": 3, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1739, "code": "ntract Tokens {\n    struct Token {\n        address _address;\n        string _websiteUrl;\n    }\n    \n    Token[] public tokens;\n    address public owner;\n\n    constructor() public {\n        owner = 0x5fa344f3B7AfD345377A37B62Ce87DDE01c1D414;\n    }\n\n    function changeOwner(address _owner) public {\n        require(msg.sender == owner);\n        owner = _owner;      \n    }\n\n    function addToken(address _address, string _websiteUrl) public {\n        require(msg.sender == owner);\n        tokens.push(Token(_address, _websiteUrl));\n    }\n\n    function deleteToken(uint _tokenId) public {\n        require(msg.sender == owner);\n        delete tokens[_tokenId];      \n    }\n\n    function getTokensCount() public view returns(uint) {\n        return tokens.length;\n    }\n}", "debug": "mem_mem_160 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_Tokens_4 + calldata_Tokens_32 + 4)) +\n32: 0x2021fda91bfffffffffffffffffffffffffffffffffffffffff8\nmem_160 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_Tokens_4 + calldata_Tokens_32 + 4)) +\n32: 0x9ffbffffffffd99db48e28ffffffffffffffffffffffffffffffffffffffffe8\nkeccac_1_+\n18569430475105882587588266137607568536673111973893317399460219858819262702947_+\n2*storage_0: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_1: 0x0\ncaller: 0x0\ncalldata_Tokens_0: 0x2c8da56000000000000000000000000000000000000000000000000000000000\ncalldatasize_Tokens: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `addToken(address,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/26/0xf264b7cf707afc6cd9eeadd1d7a7b96ed5743d02.sol", "function": "addToken(address,string)", "lineno": 3, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1820, "code": "ntract Tokens {\n    struct Token {\n        address _address;\n        string _websiteUrl;\n    }\n    \n    Token[] public tokens;\n    address public owner;\n\n    constructor() public {\n        owner = 0x5fa344f3B7AfD345377A37B62Ce87DDE01c1D414;\n    }\n\n    function changeOwner(address _owner) public {\n        require(msg.sender == owner);\n        owner = _owner;      \n    }\n\n    function addToken(address _address, string _websiteUrl) public {\n        require(msg.sender == owner);\n        tokens.push(Token(_address, _websiteUrl));\n    }\n\n    function deleteToken(uint _tokenId) public {\n        require(msg.sender == owner);\n        delete tokens[_tokenId];      \n    }\n\n    function getTokensCount() public view returns(uint) {\n        return tokens.length;\n    }\n}", "debug": "keccac_18569430475105882587588266137607568536673111973893317399460219858819262702947_+\n2*calldata_Tokens_4_+\n1: 0xfedf99ff7ffff7ffcfffffffffefffbffe7fffffff5f3fffffc069feffffc800\nstorage_18569430475105882587588266137607568536673111973893317399460219858819262702947 +\n2*calldata_Tokens_4 +\n1: 0xbe806f1fb9a91febe830a18c9b68af7fd7defe83d2ebeeebc7db7ebfffffffc1\ncalldata_Tokens_4: 0x0\nstorage_0: 0x1\nstorage_1: 0x0\ncaller: 0x0\ncalldata_Tokens_0: 0x6297c16c00000000000000000000000000000000000000000000000000000000\ncalldatasize_Tokens: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `deleteToken(uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/26/0xf264b7cf707afc6cd9eeadd1d7a7b96ed5743d02.sol", "function": "deleteToken(uint256)", "lineno": 3, "title": "Integer Overflow ", "type": "Warning"}], "success": true}