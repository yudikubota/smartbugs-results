{
  "contract": "0xffdd88294a1ac94e059a7b26ae343f3e87727450",
  "tool": "mythril",
  "start": 1563554349.676055,
  "end": 1563554508.669164,
  "duration": 158.99310898780823,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 2522,
        "code": "        expRewards[_",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_EtheremonAdventureSetting_4: 0x4\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xff00\nstorage_0: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_EtheremonAdventureSetting_0: 0x65c6b9000000000000000000000000000000000000000000000000000000000\ncalldatasize_EtheremonAdventureSetting: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/15/0xffdd88294a1ac94e059a7b26ae343f3e87727450.sol",
        "function": "setLevelRewards(uint256,uint256)",
        "lineno": 124,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 7569,
        "code": "    emontRewards[_",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_EtheremonAdventureSetting_4: 0xb\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xff00\nstorage_0: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_EtheremonAdventureSetting_0: 0x2ef22b3400000000000000000000000000000000000000000000000000000000\ncalldatasize_EtheremonAdventureSetting: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/15/0xffdd88294a1ac94e059a7b26ae343f3e87727450.sol",
        "function": "setExpRewards(uint256,uint256)",
        "lineno": 128,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}