{
  "contract": "0xafdd6fec9be6e31ad9dd7e28631625ac8e38f9c3",
  "tool": "mythril",
  "start": 1563588314.1360798,
  "end": 1563588576.6175146,
  "duration": 262.4814348220825,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 346,
        "code": "ldTotal = tokensS",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0x0\ncalldatasize_TokenSale: 0x3\nstorage_5: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/19/0xafdd6fec9be6e31ad9dd7e28631625ac8e38f9c3.sol",
        "function": "fallback",
        "lineno": 202,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 543,
        "code": "   weiRaisedTotal = w",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/19/0xafdd6fec9be6e31ad9dd7e28631625ac8e38f9c3.sol",
        "function": "fallback",
        "lineno": 204,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 543,
        "code": "   weiRaisedTotal = w",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1141\nCall at address: 1141\nCall at address: 833\n",
        "filename": "/unique_chucks/19/0xafdd6fec9be6e31ad9dd7e28631625ac8e38f9c3.sol",
        "function": "fallback",
        "lineno": 204,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 638,
        "code": " tokens to the contributor \n        token.tra",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/19/0xafdd6fec9be6e31ad9dd7e28631625ac8e38f9c3.sol",
        "function": "fallback",
        "lineno": 206,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 833,
        "code": "r, tokens);\n\n        // 100",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/19/0xafdd6fec9be6e31ad9dd7e28631625ac8e38f9c3.sol",
        "function": "fallback",
        "lineno": 207,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 833,
        "code": "r, tokens);\n\n        // 100",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1141\nCall at address: 1141\n",
        "filename": "/unique_chucks/19/0xafdd6fec9be6e31ad9dd7e28631625ac8e38f9c3.sol",
        "function": "fallback",
        "lineno": 207,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 940,
        "code": "Pie = msg.value.div(10);\n        \n        // 1",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/19/0xafdd6fec9be6e31ad9dd7e28631625ac8e38f9c3.sol",
        "function": "fallback",
        "lineno": 210,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 1141,
        "code": "      // transfer funds to the res",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/19/0xafdd6fec9be6e31ad9dd7e28631625ac8e38f9c3.sol",
        "function": "fallback",
        "lineno": 215,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 3357,
        "code": "ncy {\n        EIP20Interface",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/19/0xafdd6fec9be6e31ad9dd7e28631625ac8e38f9c3.sol",
        "function": "withdrawERC20Token(address)",
        "lineno": 234,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 3357,
        "code": "ncy {\n        EIP20Interface",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3549\n",
        "filename": "/unique_chucks/19/0xafdd6fec9be6e31ad9dd7e28631625ac8e38f9c3.sol",
        "function": "withdrawERC20Token(address)",
        "lineno": 234,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 3549,
        "code": "ken) public onlyOwner stopInEmergency {\n        EIP20Interface ",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/19/0xafdd6fec9be6e31ad9dd7e28631625ac8e38f9c3.sol",
        "function": "withdrawERC20Token(address)",
        "lineno": 234,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 4011,
        "code": "f(this));\n    }\n    \n    // ",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/19/0xafdd6fec9be6e31ad9dd7e28631625ac8e38f9c3.sol",
        "function": "withdrawEIP20Token(address)",
        "lineno": 242,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 4011,
        "code": "f(this));\n    }\n    \n    // ",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 4203\n",
        "filename": "/unique_chucks/19/0xafdd6fec9be6e31ad9dd7e28631625ac8e38f9c3.sol",
        "function": "withdrawEIP20Token(address)",
        "lineno": 242,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 4203,
        "code": "ransfer(msg.sender, token.balanceOf(this));\n    }\n    \n    // G",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/19/0xafdd6fec9be6e31ad9dd7e28631625ac8e38f9c3.sol",
        "function": "withdrawEIP20Token(address)",
        "lineno": 242,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 4721,
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/19/0xafdd6fec9be6e31ad9dd7e28631625ac8e38f9c3.sol",
        "function": "tokensRemaining()",
        "lineno": 250,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 5343,
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/19/0xafdd6fec9be6e31ad9dd7e28631625ac8e38f9c3.sol",
        "function": "withdrawToken()",
        "lineno": 250,
        "title": "Message call to external contract",
        "type": "Informational"
      }
    ],
    "success": true
  }
}