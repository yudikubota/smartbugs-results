{"error": null, "issues": [{"address": 2863, "code": "alue;\n        u", "debug": "The exception is triggered under the following conditions:\n\nstorage_10: 0xfe00\ncalldatasize_XCCCrowdsale: 0x3\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/48/0x02974caf589c5ab2b134bf462f38e08332197c08.sol", "function": "fallback", "lineno": 384, "title": "Exception state", "type": "Informational"}, {"address": 3724, "code": "er token for a specified address\n    * @para", "debug": "The exception is triggered under the following conditions:\n\ncalldatasize_XCCCrowdsale: 0x4\ncalldata_XCCCrowdsale_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/48/0x02974caf589c5ab2b134bf462f38e08332197c08.sol", "function": "transferFrom(address,address,uint256)", "lineno": 95, "title": "Exception state", "type": "Informational"}, {"address": 5167, "code": "alue;\n        u", "debug": "The exception is triggered under the following conditions:\n\nstorage_10: 0xfe00\nstorage_6: 0x0\ncaller: 0x0\ncalldata_XCCCrowdsale_0: 0x4bb278f300000000000000000000000000000000000000000000000000000000\ncalldatasize_XCCCrowdsale: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/48/0x02974caf589c5ab2b134bf462f38e08332197c08.sol", "function": "finalize()", "lineno": 384, "title": "Exception state", "type": "Informational"}, {"address": 8771, "code": " >= a", "debug": "calldata_XCCCrowdsale_32 + 36: 0xfe51000008ce80008001c1d33616877ffffffffffffff7ffffe10000398d50ac\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_XCCCrowdsale_32_+_4: 0xc050fffff320c00020003d81af848540000000000000040000110001bd062022\nstorage_3: 0xff00\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xfe51000008ce80008001c1d33616877ffffffffffffff7ffffe10000398d50ac\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_XCCCrowdsale_4: 0xfe51000008ce80008001c1d33616877ffffffffffffff7ffffe10000398d50ac\ncalldata_XCCCrowdsale_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_XCCCrowdsale_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_XCCCrowdsale: 0x64\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `transferFrom(address,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/48/0x02974caf589c5ab2b134bf462f38e08332197c08.sol", "function": "transferFrom(address,address,uint256)", "lineno": 25, "title": "Integer Overflow ", "type": "Warning"}, {"address": 8784, "code": "return c;\n    ", "debug": "The exception is triggered under the following conditions:\n\ncalldata_XCCCrowdsale_32 + 36: 0x53632f08ddbb360427befb69cb0d577a76825c1eb02b4cefbf971939ae256117\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_XCCCrowdsale_32_+_4: 0xd32ba62e013a1e544c40f8298f8c838ef0ca495e903244487f8ba1f8c2a013e7\nstorage_3: 0xff00\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x53632f08ddbb360427befb69cb0d577a76825c1eb02b4cefbf971939ae256117\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_XCCCrowdsale_4: 0x53632f08ddbb360427befb69cb0d577a76825c1eb02b4cefbf971939ae256117\ncalldata_XCCCrowdsale_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_XCCCrowdsale_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_XCCCrowdsale: 0x64\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/48/0x02974caf589c5ab2b134bf462f38e08332197c08.sol", "function": "transferFrom(address,address,uint256)", "lineno": 26, "title": "Exception state", "type": "Informational"}], "success": true}