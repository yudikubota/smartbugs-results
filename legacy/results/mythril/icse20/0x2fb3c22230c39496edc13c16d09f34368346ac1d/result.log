{"error": null, "issues": [{"address": 195, "code": "ertHash, revokeSigCertHash, revokeMerkleHash, false, revocationDate);\n\t\tif (keccak256(status) != keccak256(STATUS_PASS)) {\n\t\t\tLogReissueCert(status, message);\n\t\t\treturn;\n\t\t}\n\n\t\t// register certificate\n\t\t(status, message) = internalRegisterCert(registerCertHash, registerSig, registrationDate);\n\t\tLogReissueCert(status, message);\n\t\tif (keccak256(status) != keccak256(STATUS_PASS)) {\n\t\t\trevert();\t\t\t\n\t\t}\n\n\t\tLogReissueCert(STATUS_PASS, \"\");\n\t}\n\n\tevent LogReissueCertWithID(string, string);\n\tfunction reissueCertWithID(bytes32 revokeCertHash, bytes revokeSigCertHash, bytes32 revokeMerkleHash, uint revocationDate, bytes32 registerCertHash, bytes registerSig, bytes32 registerMerkleHash, uint registrationDate, bytes32 id) public {\n\t\tstring memory status;\n\t\tstring memory message", "debug": "calldata_ISmartCert_32 + 4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_ISmartCert_0: 0x419259ef00000000000000000000000000000000000000000000000000000000\ncalldatasize_ISmartCert: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `reissueCert(bytes32,bytes,bytes32,uint256,bytes32,bytes,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/12/0x2fb3c22230c39496edc13c16d09f34368346ac1d.sol", "function": "reissueCert(bytes32,bytes,bytes32,uint256,bytes32,bytes,uint256)", "lineno": 322, "title": "Integer Overflow ", "type": "Warning"}, {"address": 207, "code": "ertHash, revokeSigCertHash, revokeMerkleHash, false, revocationDate);\n\t\tif (keccak256(status) != keccak256(STATUS_PASS)) {\n\t\t\tLogReissueCert(status, message);\n\t\t\treturn;\n\t\t}\n\n\t\t// register certificate\n\t\t(status, message) = internalRegisterCert(registerCertHash, registerSig, registrationDate);\n\t\tLogReissueCert(status, message);\n\t\tif (keccak256(status) != keccak256(STATUS_PASS)) {\n\t\t\trevert();\t\t\t\n\t\t}\n\n\t\tLogReissueCert(STATUS_PASS, \"\");\n\t}\n\n\tevent LogReissueCertWithID(string, string);\n\tfunction reissueCertWithID(bytes32 revokeCertHash, bytes revokeSigCertHash, bytes32 revokeMerkleHash, uint revocationDate, bytes32 registerCertHash, bytes registerSig, bytes32 registerMerkleHash, uint registrationDate, bytes32 id) public {\n\t\tstring memory status;\n\t\tstring memory message", "debug": "calldata_ISmartCert_4 + calldata_ISmartCert_32 + 4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8\ncalldata_ISmartCert_0: 0x419259ef00000000000000000000000000000000000000000000000000000000\ncalldatasize_ISmartCert: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `reissueCert(bytes32,bytes,bytes32,uint256,bytes32,bytes,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/12/0x2fb3c22230c39496edc13c16d09f34368346ac1d.sol", "function": "reissueCert(bytes32,bytes,bytes32,uint256,bytes32,bytes,uint256)", "lineno": 322, "title": "Integer Overflow ", "type": "Warning"}, {"address": 216, "code": "ertHash, revokeSigCertHash, revokeMerkleHash, false, revocationDate);\n\t\tif (keccak256(status) != keccak256(STATUS_PASS)) {\n\t\t\tLogReissueCert(status, message);\n\t\t\treturn;\n\t\t}\n\n\t\t// register certificate\n\t\t(status, message) = internalRegisterCert(registerCertHash, registerSig, registrationDate);\n\t\tLogReissueCert(status, message);\n\t\tif (keccak256(status) != keccak256(STATUS_PASS)) {\n\t\t\trevert();\t\t\t\n\t\t}\n\n\t\tLogReissueCert(STATUS_PASS, \"\");\n\t}\n\n\tevent LogReissueCertWithID(string, string);\n\tfunction reissueCertWithID(bytes32 revokeCertHash, bytes revokeSigCertHash, bytes32 revokeMerkleHash, uint revocationDate, bytes32 registerCertHash, bytes registerSig, bytes32 registerMerkleHash, uint registrationDate, bytes32 id) public {\n\t\tstring memory status;\n\t\tstring memory message", "debug": "calldata_ISmartCert_4 + calldata_ISmartCert_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc1\ncalldata_ISmartCert_0: 0x419259ef00000000000000000000000000000000000000000000000000000000\ncalldatasize_ISmartCert: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `reissueCert(bytes32,bytes,bytes32,uint256,bytes32,bytes,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/12/0x2fb3c22230c39496edc13c16d09f34368346ac1d.sol", "function": "reissueCert(bytes32,bytes,bytes32,uint256,bytes32,bytes,uint256)", "lineno": 322, "title": "Integer Overflow ", "type": "Warning"}, {"address": 222, "code": "ertHash, revokeSigCertHash, revokeMerkleHash, false, revocationDate);\n\t\tif (keccak256(status) != keccak256(STATUS_PASS)) {\n\t\t\tLogReissueCert(status, message);\n\t\t\treturn;\n\t\t}\n\n\t\t// register certificate\n\t\t(status, message) = internalRegisterCert(registerCertHash, registerSig, registrationDate);\n\t\tLogReissueCert(status, message);\n\t\tif (keccak256(status) != keccak256(STATUS_PASS)) {\n\t\t\trevert();\t\t\t\n\t\t}\n\n\t\tLogReissueCert(STATUS_PASS, \"\");\n\t}\n\n\tevent LogReissueCertWithID(string, string);\n\tfunction reissueCertWithID(bytes32 revokeCertHash, bytes revokeSigCertHash, bytes32 revokeMerkleHash, uint revocationDate, bytes32 registerCertHash, bytes registerSig, bytes32 registerMerkleHash, uint registrationDate, bytes32 id) public {\n\t\tstring memory status;\n\t\tstring memory message", "debug": "calldata_ISmartCert_4 + calldata_ISmartCert_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff41\ncalldata_ISmartCert_0: 0x419259ef00000000000000000000000000000000000000000000000000000000\ncalldatasize_ISmartCert: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `reissueCert(bytes32,bytes,bytes32,uint256,bytes32,bytes,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/12/0x2fb3c22230c39496edc13c16d09f34368346ac1d.sol", "function": "reissueCert(bytes32,bytes,bytes32,uint256,bytes32,bytes,uint256)", "lineno": 322, "title": "Integer Overflow ", "type": "Warning"}, {"address": 303, "code": "ertHash, revokeSigCertHash, revokeMerkleHash, false, revocationDate);\n\t\tif (keccak256(status) != keccak256(STATUS_PASS)) {\n\t\t\tLogReissueCert(status, message);\n\t\t\treturn;\n\t\t}\n\n\t\t// register certificate\n\t\t(status, message) = internalRegisterCert(registerCertHash, registerSig, registrationDate);\n\t\tLogReissueCert(status, message);\n\t\tif (keccak256(status) != keccak256(STATUS_PASS)) {\n\t\t\trevert();\t\t\t\n\t\t}\n\n\t\tLogReissueCert(STATUS_PASS, \"\");\n\t}\n\n\tevent LogReissueCertWithID(string, string);\n\tfunction reissueCertWithID(bytes32 revokeCertHash, bytes revokeSigCertHash, bytes32 revokeMerkleHash, uint revocationDate, bytes32 registerCertHash, bytes registerSig, bytes32 registerMerkleHash, uint registrationDate, bytes32 id) public {\n\t\tstring memory status;\n\t\tstring memory message", "debug": "calldata_ISmartCert_32 + 132: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_ISmartCert_0: 0x419259ef00000000000000000000000000000000000000000000000000000000\ncalldatasize_ISmartCert: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `reissueCert(bytes32,bytes,bytes32,uint256,bytes32,bytes,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/12/0x2fb3c22230c39496edc13c16d09f34368346ac1d.sol", "function": "reissueCert(bytes32,bytes,bytes32,uint256,bytes32,bytes,uint256)", "lineno": 322, "title": "Integer Overflow ", "type": "Warning"}, {"address": 315, "code": "ertHash, revokeSigCertHash, revokeMerkleHash, false, revocationDate);\n\t\tif (keccak256(status) != keccak256(STATUS_PASS)) {\n\t\t\tLogReissueCert(status, message);\n\t\t\treturn;\n\t\t}\n\n\t\t// register certificate\n\t\t(status, message) = internalRegisterCert(registerCertHash, registerSig, registrationDate);\n\t\tLogReissueCert(status, message);\n\t\tif (keccak256(status) != keccak256(STATUS_PASS)) {\n\t\t\trevert();\t\t\t\n\t\t}\n\n\t\tLogReissueCert(STATUS_PASS, \"\");\n\t}\n\n\tevent LogReissueCertWithID(string, string);\n\tfunction reissueCertWithID(bytes32 revokeCertHash, bytes revokeSigCertHash, bytes32 revokeMerkleHash, uint revocationDate, bytes32 registerCertHash, bytes registerSig, bytes32 registerMerkleHash, uint registrationDate, bytes32 id) public {\n\t\tstring memory status;\n\t\tstring memory message", "debug": "calldata_ISmartCert_4 + calldata_ISmartCert_32 + 132: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8\ncalldata_ISmartCert_0: 0x419259ef00000000000000000000000000000000000000000000000000000000\ncalldatasize_ISmartCert: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `reissueCert(bytes32,bytes,bytes32,uint256,bytes32,bytes,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/12/0x2fb3c22230c39496edc13c16d09f34368346ac1d.sol", "function": "reissueCert(bytes32,bytes,bytes32,uint256,bytes32,bytes,uint256)", "lineno": 322, "title": "Integer Overflow ", "type": "Warning"}, {"address": 324, "code": "ertHash, revokeSigCertHash, revokeMerkleHash, false, revocationDate);\n\t\tif (keccak256(status) != keccak256(STATUS_PASS)) {\n\t\t\tLogReissueCert(status, message);\n\t\t\treturn;\n\t\t}\n\n\t\t// register certificate\n\t\t(status, message) = internalRegisterCert(registerCertHash, registerSig, registrationDate);\n\t\tLogReissueCert(status, message);\n\t\tif (keccak256(status) != keccak256(STATUS_PASS)) {\n\t\t\trevert();\t\t\t\n\t\t}\n\n\t\tLogReissueCert(STATUS_PASS, \"\");\n\t}\n\n\tevent LogReissueCertWithID(string, string);\n\tfunction reissueCertWithID(bytes32 revokeCertHash, bytes revokeSigCertHash, bytes32 revokeMerkleHash, uint revocationDate, bytes32 registerCertHash, bytes registerSig, bytes32 registerMerkleHash, uint registrationDate, bytes32 id) public {\n\t\tstring memory status;\n\t\tstring memory message", "debug": "calldata_ISmartCert_4 + calldata_ISmartCert_32 + 132: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc1\ncalldata_ISmartCert_0: 0x419259ef00000000000000000000000000000000000000000000000000000000\ncalldatasize_ISmartCert: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `reissueCert(bytes32,bytes,bytes32,uint256,bytes32,bytes,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/12/0x2fb3c22230c39496edc13c16d09f34368346ac1d.sol", "function": "reissueCert(bytes32,bytes,bytes32,uint256,bytes32,bytes,uint256)", "lineno": 322, "title": "Integer Overflow ", "type": "Warning"}, {"address": 330, "code": "ertHash, revokeSigCertHash, revokeMerkleHash, false, revocationDate);\n\t\tif (keccak256(status) != keccak256(STATUS_PASS)) {\n\t\t\tLogReissueCert(status, message);\n\t\t\treturn;\n\t\t}\n\n\t\t// register certificate\n\t\t(status, message) = internalRegisterCert(registerCertHash, registerSig, registrationDate);\n\t\tLogReissueCert(status, message);\n\t\tif (keccak256(status) != keccak256(STATUS_PASS)) {\n\t\t\trevert();\t\t\t\n\t\t}\n\n\t\tLogReissueCert(STATUS_PASS, \"\");\n\t}\n\n\tevent LogReissueCertWithID(string, string);\n\tfunction reissueCertWithID(bytes32 revokeCertHash, bytes revokeSigCertHash, bytes32 revokeMerkleHash, uint revocationDate, bytes32 registerCertHash, bytes registerSig, bytes32 registerMerkleHash, uint registrationDate, bytes32 id) public {\n\t\tstring memory status;\n\t\tstring memory message", "debug": "calldata_ISmartCert_4 + calldata_ISmartCert_32 + 132: 0x746e42ddbe03c97fe6e530ac0258466c4a20dfffffffffffffffffffffffffc1\ncalldata_ISmartCert_4 + calldata_ISmartCert_32 + 4: 0xcf9f8ea5a709fb58f8ed502cd9b08a9b1306dfffffffffffffffffffffffff61\ncalldata_ISmartCert_0: 0x419259ef00000000000000000000000000000000000000000000000000000000\ncalldatasize_ISmartCert: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `reissueCert(bytes32,bytes,bytes32,uint256,bytes32,bytes,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/12/0x2fb3c22230c39496edc13c16d09f34368346ac1d.sol", "function": "reissueCert(bytes32,bytes,bytes32,uint256,bytes32,bytes,uint256)", "lineno": 322, "title": "Integer Overflow ", "type": "Warning"}, {"address": 756, "code": "ge);\n\t}\n\n\t// event LogReissueCert(string, bytes32, string);\n\tevent LogReissueCert(string, string);\n\tfunction reissueCert(bytes32 revokeCertHash, bytes revokeSigCertHash, bytes32 revokeMerkleHash, uint revocationDate, bytes32 registerCertHash, bytes registerSig, uint registrationDate) public {\n\t\tstring memory status;\n\t", "debug": "calldata_ISmartCert_32 + 4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_ISmartCert_0: 0x95fe460800000000000000000000000000000000000000000000000000000000\ncalldatasize_ISmartCert: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `revokeCert(bytes32,bytes,bytes32,bool,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/12/0x2fb3c22230c39496edc13c16d09f34368346ac1d.sol", "function": "revokeCert(bytes32,bytes,bytes32,bool,uint256)", "lineno": 312, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1032, "code": "LogRegisterCert(status, message);\n\t}\n\n\tevent LogRegisterCertWithID(string, string);\n\tfunction registerCertWithID(bytes32 certHash, bytes sig, bytes32 merkleHash, uint registrationDate, bytes32 id) public {\n\t\tstring memory status;\n\t\tstring memory message;\n\n\t\t", "debug": "calldata_ISmartCert_32 + 4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_ISmartCert_0: 0xbee588e900000000000000000000000000000000000000000000000000000000\ncalldatasize_ISmartCert: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `registerCert(bytes32,bytes,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/12/0x2fb3c22230c39496edc13c16d09f34368346ac1d.sol", "function": "registerCert(bytes32,bytes,uint256)", "lineno": 222, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1499, "code": "ternalRevokeCert(revokeCertHash, revokeSigCertHash, revokeMerkleHash, false, revocationDate);\n\t\tif (keccak256(status) != keccak256(STATUS_PASS)) {\n\t\t\tLogReissueCertWithID(status, message);\n\t\t\treturn;\n\t\t}\n\n\t\t// register certificate\n\t\t(status, message) = internalRegisterCertWithID(registerCertHash, registerSig, registerMerkleHash, registrationDate, id);\n\t\tLogReissueCertWithID(status, message);\n\t\tif (keccak256(status) != keccak256(STATUS_PASS)) {\n\t\t\trevert();\n\t\t}\n\n\t\tLogReissueCertWithID(STATUS_PASS, \"\");\n\t}\n\n\tfunction recoverAddr(bytes32 hash, bytes sig) internal pure returns (address) {\n\t\tbytes32 r;\n\t\tbytes32 s;\n\t\tuint8 v;\n\n\t\t//Check the signature length\n\t\tif (sig.length != 65) {\n\t\t\treturn (address(0));\n\t\t}\n\t\t\n\t\t// Divide the signature in r, s and v variables\n        assembly {\n          r := mload(add(sig, 33))\n          s := mload(add(sig, 65))\n         ", "debug": "calldata_ISmartCert_32 + 4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_ISmartCert_0: 0xc1a82cdb00000000000000000000000000000000000000000000000000000000\ncalldatasize_ISmartCert: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `reissueCertWithID(bytes32,bytes,bytes32,uint256,bytes32,bytes,bytes32,uint256,bytes32)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/12/0x2fb3c22230c39496edc13c16d09f34368346ac1d.sol", "function": "reissueCertWithID(bytes32,bytes,bytes32,uint256,bytes32,bytes,bytes32,uint256,bytes32)", "lineno": 344, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1511, "code": "ternalRevokeCert(revokeCertHash, revokeSigCertHash, revokeMerkleHash, false, revocationDate);\n\t\tif (keccak256(status) != keccak256(STATUS_PASS)) {\n\t\t\tLogReissueCertWithID(status, message);\n\t\t\treturn;\n\t\t}\n\n\t\t// register certificate\n\t\t(status, message) = internalRegisterCertWithID(registerCertHash, registerSig, registerMerkleHash, registrationDate, id);\n\t\tLogReissueCertWithID(status, message);\n\t\tif (keccak256(status) != keccak256(STATUS_PASS)) {\n\t\t\trevert();\n\t\t}\n\n\t\tLogReissueCertWithID(STATUS_PASS, \"\");\n\t}\n\n\tfunction recoverAddr(bytes32 hash, bytes sig) internal pure returns (address) {\n\t\tbytes32 r;\n\t\tbytes32 s;\n\t\tuint8 v;\n\n\t\t//Check the signature length\n\t\tif (sig.length != 65) {\n\t\t\treturn (address(0));\n\t\t}\n\t\t\n\t\t// Divide the signature in r, s and v variables\n        assembly {\n          r := mload(add(sig, 33))\n          s := mload(add(sig, 65))\n         ", "debug": "calldata_ISmartCert_4 + calldata_ISmartCert_32 + 4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8\ncalldata_ISmartCert_0: 0xc1a82cdb00000000000000000000000000000000000000000000000000000000\ncalldatasize_ISmartCert: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `reissueCertWithID(bytes32,bytes,bytes32,uint256,bytes32,bytes,bytes32,uint256,bytes32)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/12/0x2fb3c22230c39496edc13c16d09f34368346ac1d.sol", "function": "reissueCertWithID(bytes32,bytes,bytes32,uint256,bytes32,bytes,bytes32,uint256,bytes32)", "lineno": 344, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1520, "code": "ternalRevokeCert(revokeCertHash, revokeSigCertHash, revokeMerkleHash, false, revocationDate);\n\t\tif (keccak256(status) != keccak256(STATUS_PASS)) {\n\t\t\tLogReissueCertWithID(status, message);\n\t\t\treturn;\n\t\t}\n\n\t\t// register certificate\n\t\t(status, message) = internalRegisterCertWithID(registerCertHash, registerSig, registerMerkleHash, registrationDate, id);\n\t\tLogReissueCertWithID(status, message);\n\t\tif (keccak256(status) != keccak256(STATUS_PASS)) {\n\t\t\trevert();\n\t\t}\n\n\t\tLogReissueCertWithID(STATUS_PASS, \"\");\n\t}\n\n\tfunction recoverAddr(bytes32 hash, bytes sig) internal pure returns (address) {\n\t\tbytes32 r;\n\t\tbytes32 s;\n\t\tuint8 v;\n\n\t\t//Check the signature length\n\t\tif (sig.length != 65) {\n\t\t\treturn (address(0));\n\t\t}\n\t\t\n\t\t// Divide the signature in r, s and v variables\n        assembly {\n          r := mload(add(sig, 33))\n          s := mload(add(sig, 65))\n         ", "debug": "calldata_ISmartCert_4 + calldata_ISmartCert_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc1\ncalldata_ISmartCert_0: 0xc1a82cdb00000000000000000000000000000000000000000000000000000000\ncalldatasize_ISmartCert: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `reissueCertWithID(bytes32,bytes,bytes32,uint256,bytes32,bytes,bytes32,uint256,bytes32)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/12/0x2fb3c22230c39496edc13c16d09f34368346ac1d.sol", "function": "reissueCertWithID(bytes32,bytes,bytes32,uint256,bytes32,bytes,bytes32,uint256,bytes32)", "lineno": 344, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1526, "code": "ternalRevokeCert(revokeCertHash, revokeSigCertHash, revokeMerkleHash, false, revocationDate);\n\t\tif (keccak256(status) != keccak256(STATUS_PASS)) {\n\t\t\tLogReissueCertWithID(status, message);\n\t\t\treturn;\n\t\t}\n\n\t\t// register certificate\n\t\t(status, message) = internalRegisterCertWithID(registerCertHash, registerSig, registerMerkleHash, registrationDate, id);\n\t\tLogReissueCertWithID(status, message);\n\t\tif (keccak256(status) != keccak256(STATUS_PASS)) {\n\t\t\trevert();\n\t\t}\n\n\t\tLogReissueCertWithID(STATUS_PASS, \"\");\n\t}\n\n\tfunction recoverAddr(bytes32 hash, bytes sig) internal pure returns (address) {\n\t\tbytes32 r;\n\t\tbytes32 s;\n\t\tuint8 v;\n\n\t\t//Check the signature length\n\t\tif (sig.length != 65) {\n\t\t\treturn (address(0));\n\t\t}\n\t\t\n\t\t// Divide the signature in r, s and v variables\n        assembly {\n          r := mload(add(sig, 33))\n          s := mload(add(sig, 65))\n         ", "debug": "calldata_ISmartCert_4 + calldata_ISmartCert_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff41\ncalldata_ISmartCert_0: 0xc1a82cdb00000000000000000000000000000000000000000000000000000000\ncalldatasize_ISmartCert: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `reissueCertWithID(bytes32,bytes,bytes32,uint256,bytes32,bytes,bytes32,uint256,bytes32)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/12/0x2fb3c22230c39496edc13c16d09f34368346ac1d.sol", "function": "reissueCertWithID(bytes32,bytes,bytes32,uint256,bytes32,bytes,bytes32,uint256,bytes32)", "lineno": 344, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1607, "code": "ternalRevokeCert(revokeCertHash, revokeSigCertHash, revokeMerkleHash, false, revocationDate);\n\t\tif (keccak256(status) != keccak256(STATUS_PASS)) {\n\t\t\tLogReissueCertWithID(status, message);\n\t\t\treturn;\n\t\t}\n\n\t\t// register certificate\n\t\t(status, message) = internalRegisterCertWithID(registerCertHash, registerSig, registerMerkleHash, registrationDate, id);\n\t\tLogReissueCertWithID(status, message);\n\t\tif (keccak256(status) != keccak256(STATUS_PASS)) {\n\t\t\trevert();\n\t\t}\n\n\t\tLogReissueCertWithID(STATUS_PASS, \"\");\n\t}\n\n\tfunction recoverAddr(bytes32 hash, bytes sig) internal pure returns (address) {\n\t\tbytes32 r;\n\t\tbytes32 s;\n\t\tuint8 v;\n\n\t\t//Check the signature length\n\t\tif (sig.length != 65) {\n\t\t\treturn (address(0));\n\t\t}\n\t\t\n\t\t// Divide the signature in r, s and v variables\n        assembly {\n          r := mload(add(sig, 33))\n          s := mload(add(sig, 65))\n         ", "debug": "calldata_ISmartCert_32 + 132: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_ISmartCert_0: 0xc1a82cdb00000000000000000000000000000000000000000000000000000000\ncalldatasize_ISmartCert: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `reissueCertWithID(bytes32,bytes,bytes32,uint256,bytes32,bytes,bytes32,uint256,bytes32)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/12/0x2fb3c22230c39496edc13c16d09f34368346ac1d.sol", "function": "reissueCertWithID(bytes32,bytes,bytes32,uint256,bytes32,bytes,bytes32,uint256,bytes32)", "lineno": 344, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1619, "code": "ternalRevokeCert(revokeCertHash, revokeSigCertHash, revokeMerkleHash, false, revocationDate);\n\t\tif (keccak256(status) != keccak256(STATUS_PASS)) {\n\t\t\tLogReissueCertWithID(status, message);\n\t\t\treturn;\n\t\t}\n\n\t\t// register certificate\n\t\t(status, message) = internalRegisterCertWithID(registerCertHash, registerSig, registerMerkleHash, registrationDate, id);\n\t\tLogReissueCertWithID(status, message);\n\t\tif (keccak256(status) != keccak256(STATUS_PASS)) {\n\t\t\trevert();\n\t\t}\n\n\t\tLogReissueCertWithID(STATUS_PASS, \"\");\n\t}\n\n\tfunction recoverAddr(bytes32 hash, bytes sig) internal pure returns (address) {\n\t\tbytes32 r;\n\t\tbytes32 s;\n\t\tuint8 v;\n\n\t\t//Check the signature length\n\t\tif (sig.length != 65) {\n\t\t\treturn (address(0));\n\t\t}\n\t\t\n\t\t// Divide the signature in r, s and v variables\n        assembly {\n          r := mload(add(sig, 33))\n          s := mload(add(sig, 65))\n         ", "debug": "calldata_ISmartCert_4 + calldata_ISmartCert_32 + 132: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8\ncalldata_ISmartCert_0: 0xc1a82cdb00000000000000000000000000000000000000000000000000000000\ncalldatasize_ISmartCert: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `reissueCertWithID(bytes32,bytes,bytes32,uint256,bytes32,bytes,bytes32,uint256,bytes32)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/12/0x2fb3c22230c39496edc13c16d09f34368346ac1d.sol", "function": "reissueCertWithID(bytes32,bytes,bytes32,uint256,bytes32,bytes,bytes32,uint256,bytes32)", "lineno": 344, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1628, "code": "ternalRevokeCert(revokeCertHash, revokeSigCertHash, revokeMerkleHash, false, revocationDate);\n\t\tif (keccak256(status) != keccak256(STATUS_PASS)) {\n\t\t\tLogReissueCertWithID(status, message);\n\t\t\treturn;\n\t\t}\n\n\t\t// register certificate\n\t\t(status, message) = internalRegisterCertWithID(registerCertHash, registerSig, registerMerkleHash, registrationDate, id);\n\t\tLogReissueCertWithID(status, message);\n\t\tif (keccak256(status) != keccak256(STATUS_PASS)) {\n\t\t\trevert();\n\t\t}\n\n\t\tLogReissueCertWithID(STATUS_PASS, \"\");\n\t}\n\n\tfunction recoverAddr(bytes32 hash, bytes sig) internal pure returns (address) {\n\t\tbytes32 r;\n\t\tbytes32 s;\n\t\tuint8 v;\n\n\t\t//Check the signature length\n\t\tif (sig.length != 65) {\n\t\t\treturn (address(0));\n\t\t}\n\t\t\n\t\t// Divide the signature in r, s and v variables\n        assembly {\n          r := mload(add(sig, 33))\n          s := mload(add(sig, 65))\n         ", "debug": "calldata_ISmartCert_4 + calldata_ISmartCert_32 + 132: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc1\ncalldata_ISmartCert_0: 0xc1a82cdb00000000000000000000000000000000000000000000000000000000\ncalldatasize_ISmartCert: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `reissueCertWithID(bytes32,bytes,bytes32,uint256,bytes32,bytes,bytes32,uint256,bytes32)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/12/0x2fb3c22230c39496edc13c16d09f34368346ac1d.sol", "function": "reissueCertWithID(bytes32,bytes,bytes32,uint256,bytes32,bytes,bytes32,uint256,bytes32)", "lineno": 344, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1634, "code": "ternalRevokeCert(revokeCertHash, revokeSigCertHash, revokeMerkleHash, false, revocationDate);\n\t\tif (keccak256(status) != keccak256(STATUS_PASS)) {\n\t\t\tLogReissueCertWithID(status, message);\n\t\t\treturn;\n\t\t}\n\n\t\t// register certificate\n\t\t(status, message) = internalRegisterCertWithID(registerCertHash, registerSig, registerMerkleHash, registrationDate, id);\n\t\tLogReissueCertWithID(status, message);\n\t\tif (keccak256(status) != keccak256(STATUS_PASS)) {\n\t\t\trevert();\n\t\t}\n\n\t\tLogReissueCertWithID(STATUS_PASS, \"\");\n\t}\n\n\tfunction recoverAddr(bytes32 hash, bytes sig) internal pure returns (address) {\n\t\tbytes32 r;\n\t\tbytes32 s;\n\t\tuint8 v;\n\n\t\t//Check the signature length\n\t\tif (sig.length != 65) {\n\t\t\treturn (address(0));\n\t\t}\n\t\t\n\t\t// Divide the signature in r, s and v variables\n        assembly {\n          r := mload(add(sig, 33))\n          s := mload(add(sig, 65))\n         ", "debug": "calldata_ISmartCert_4 + calldata_ISmartCert_32 + 132: 0x746e42ddbe03c97fe6e530ac0258466c4a20dfffffffffffffffffffffffffc1\ncalldata_ISmartCert_4 + calldata_ISmartCert_32 + 4: 0xcf9f8ea5a709fb58f8ed502cd9b08a9b1306dfffffffffffffffffffffffff61\ncalldata_ISmartCert_0: 0xc1a82cdb00000000000000000000000000000000000000000000000000000000\ncalldatasize_ISmartCert: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `reissueCertWithID(bytes32,bytes,bytes32,uint256,bytes32,bytes,bytes32,uint256,bytes32)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/12/0x2fb3c22230c39496edc13c16d09f34368346ac1d.sol", "function": "reissueCertWithID(bytes32,bytes,bytes32,uint256,bytes32,bytes,bytes32,uint256,bytes32)", "lineno": 344, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1905, "code": "SS, \"\");\n\t}", "debug": "calldata_ISmartCert_4 + calldata_ISmartCert_32 + 132: 0x131144bdc70e5fe586ca666fffffffffffffffffffffffffffffffffffffffe1\ncalldata_ISmartCert_4 + calldata_ISmartCert_32 + 4: 0xeceebb4238f1a01a7935998ffffffffffffffffffffffffffffffffffffffe61\nstorage_0 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\nstorage_2 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xff00\ncalldata_ISmartCert_0: 0x419259ef00000000000000000000000000000000000000000000000000000000\ncalldatasize_ISmartCert: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `reissueCert(bytes32,bytes,bytes32,uint256,bytes32,bytes,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/12/0x2fb3c22230c39496edc13c16d09f34368346ac1d.sol", "function": "reissueCert(bytes32,bytes,bytes32,uint256,bytes32,bytes,uint256)", "lineno": 335, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2039, "code": "(STATUS_PASS, \"\");\n\t}\n", "debug": "mem_256 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_ISmartCert_4 + calldata_ISmartCert_32 + 4)) +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_ISmartCert_4 + calldata_ISmartCert_32 + 132)) +\n64: 0x60\ncalldata_ISmartCert_4 + calldata_ISmartCert_32 + 132: 0x194b7244623270641882140983401dfffffffffffffffffffffffffffffffe81\ncalldata_ISmartCert_4 + calldata_ISmartCert_32 + 4: 0xe6b48dbb9dcd8f9be77debf67cbfe1ffffffffffffffffffffffffffffffff81\nstorage_0 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\nstorage_2 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xff00\ncalldata_ISmartCert_0: 0x419259ef00000000000000000000000000000000000000000000000000000000\ncalldatasize_ISmartCert: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `reissueCert(bytes32,bytes,bytes32,uint256,bytes32,bytes,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/12/0x2fb3c22230c39496edc13c16d09f34368346ac1d.sol", "function": "reissueCert(bytes32,bytes,bytes32,uint256,bytes32,bytes,uint256)", "lineno": 335, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2142, "code": "\t\t}\n\n\t\tLogReissue", "debug": "mem_256 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_ISmartCert_4 + calldata_ISmartCert_32 + 4)) +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_ISmartCert_4 + calldata_ISmartCert_32 + 132)) +\n64: 0x40\nmem_160 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_ISmartCert_4 + calldata_ISmartCert_32 + 4)) +\n32 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_ISmartCert_4 + calldata_ISmartCert_32 + 132)): 0x20\ncalldata_ISmartCert_4 + calldata_ISmartCert_32 + 132: 0xe4400ffffffffffffffffffffffffffffffffffffffffffffffffffffffffe61\ncalldata_ISmartCert_4 + calldata_ISmartCert_32 + 4: 0x1bbfefffffffffffffffffffffffffffffffffffffffffffffffffffffffffc1\nstorage_0 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\nstorage_2 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xff00\ncalldata_ISmartCert_0: 0x419259ef00000000000000000000000000000000000000000000000000000000\ncalldatasize_ISmartCert: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `reissueCert(bytes32,bytes,bytes32,uint256,bytes32,bytes,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/12/0x2fb3c22230c39496edc13c16d09f34368346ac1d.sol", "function": "reissueCert(bytes32,bytes,bytes32,uint256,bytes32,bytes,uint256)", "lineno": 333, "title": "Integer Overflow ", "type": "Warning"}, {"address": 6610, "code": "sueCertWith", "debug": "calldata_ISmartCert_4 + calldata_ISmartCert_32 + 132: 0x131144bdc70e5fe586ca666fffffffffffffffffffffffffffffffffffffffe1\ncalldata_ISmartCert_4 + calldata_ISmartCert_32 + 4: 0xeceebb4238f1a01a7935998ffffffffffffffffffffffffffffffffffffffe61\nstorage_0 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\nstorage_2 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xff00\ncalldata_ISmartCert_0: 0xc1a82cdb00000000000000000000000000000000000000000000000000000000\ncalldatasize_ISmartCert: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `reissueCertWithID(bytes32,bytes,bytes32,uint256,bytes32,bytes,bytes32,uint256,bytes32)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/12/0x2fb3c22230c39496edc13c16d09f34368346ac1d.sol", "function": "reissueCertWithID(bytes32,bytes,bytes32,uint256,bytes32,bytes,bytes32,uint256,bytes32)", "lineno": 357, "title": "Integer Overflow ", "type": "Warning"}, {"address": 6744, "code": "\n\t\tLogReissueCertWithI", "debug": "mem_256 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_ISmartCert_4 + calldata_ISmartCert_32 + 4)) +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_ISmartCert_4 + calldata_ISmartCert_32 + 132)) +\n64: 0x20\ncalldata_ISmartCert_4 + calldata_ISmartCert_32 + 132: 0xe4400ffffffffffffffffffffffffffffffffffffffffffffffffffffffffe61\ncalldata_ISmartCert_4 + calldata_ISmartCert_32 + 4: 0x1bbfefffffffffffffffffffffffffffffffffffffffffffffffffffffffffc1\nstorage_2 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncalldata_ISmartCert_0: 0xc1a82cdb00000000000000000000000000000000000000000000000000000000\ncalldatasize_ISmartCert: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `reissueCertWithID(bytes32,bytes,bytes32,uint256,bytes32,bytes,bytes32,uint256,bytes32)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/12/0x2fb3c22230c39496edc13c16d09f34368346ac1d.sol", "function": "reissueCertWithID(bytes32,bytes,bytes32,uint256,bytes32,bytes,bytes32,uint256,bytes32)", "lineno": 356, "title": "Integer Overflow ", "type": "Warning"}, {"address": 6847, "code": ") {\n\t\t\trevert();\n", "debug": "mem_160 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_ISmartCert_4 + calldata_ISmartCert_32 + 4)) +\n32 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_ISmartCert_4 + calldata_ISmartCert_32 + 132)): 0x20\ncalldata_ISmartCert_4 + calldata_ISmartCert_32 + 132: 0xe4400ffffffffffffffffffffffffffffffffffffffffffffffffffffffffe61\ncalldata_ISmartCert_4 + calldata_ISmartCert_32 + 4: 0x1bbfefffffffffffffffffffffffffffffffffffffffffffffffffffffffffc1\nmem_256 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_ISmartCert_4 + calldata_ISmartCert_32 + 4)) +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_ISmartCert_4 + calldata_ISmartCert_32 + 132)) +\n64: 0x1f\nstorage_2 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncalldata_ISmartCert_0: 0xc1a82cdb00000000000000000000000000000000000000000000000000000000\ncalldatasize_ISmartCert: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `reissueCertWithID(bytes32,bytes,bytes32,uint256,bytes32,bytes,bytes32,uint256,bytes32)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/12/0x2fb3c22230c39496edc13c16d09f34368346ac1d.sol", "function": "reissueCertWithID(bytes32,bytes,bytes32,uint256,bytes32,bytes,bytes32,uint256,bytes32)", "lineno": 353, "title": "Integer Overflow ", "type": "Warning"}, {"address": 8301, "code": "UER)) {\n\t\t\t", "debug": "calldata_ISmartCert_4 + calldata_ISmartCert_32 + 132: 0x40031813dc510316417915ba3015120100b5e17f0064d003846003ffffffffe1\ncalldata_ISmartCert_4 + calldata_ISmartCert_32 + 4: 0xbffce7ec23aefce9be86ea45cfeaedfeff4a1e80ff9b2ffc7b9ffbfffffffee1\nstorage_0 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\nstorage_2 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xff00\ncalldata_ISmartCert_0: 0xc1a82cdb00000000000000000000000000000000000000000000000000000000\ncalldatasize_ISmartCert: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `reissueCertWithID(bytes32,bytes,bytes32,uint256,bytes32,bytes,bytes32,uint256,bytes32)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/12/0x2fb3c22230c39496edc13c16d09f34368346ac1d.sol", "function": "reissueCertWithID(bytes32,bytes,bytes32,uint256,bytes32,bytes,bytes32,uint256,bytes32)", "lineno": 175, "title": "Integer Overflow ", "type": "Warning"}, {"address": 8355, "code": "turn (STATUS_FAIL, CODE_ACCESS_IS", "debug": "calldata_ISmartCert_4 + calldata_ISmartCert_32 + 132: 0xb9d11e00e001d3c63227fc290300ea07b392f3e678912142348fffffffffffc1\ncalldata_ISmartCert_4 + calldata_ISmartCert_32 + 4: 0x462ee1ff1ffe2c39cdd803d6fcff15f84c6d0c19876edebdcb6ffffffffffee1\nstorage_0 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\nstorage_2 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xff00\ncalldata_ISmartCert_0: 0xc1a82cdb00000000000000000000000000000000000000000000000000000000\ncalldatasize_ISmartCert: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `reissueCertWithID(bytes32,bytes,bytes32,uint256,bytes32,bytes,bytes32,uint256,bytes32)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/12/0x2fb3c22230c39496edc13c16d09f34368346ac1d.sol", "function": "reissueCertWithID(bytes32,bytes,bytes32,uint256,bytes32,bytes,bytes32,uint256,bytes32)", "lineno": 176, "title": "Integer Overflow ", "type": "Warning"}, {"address": 13758, "code": "lse;\n\t}\n\n\tfunction internalR", "debug": "storage_0 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x8000000000000000000000000000000000000000000000000000000000000000\nstorage_2 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xff00\nstorage_2 +\nkeccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\ncalldata_ISmartCert_32_+_36: 0xff00\nstorage_0 +\nkeccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\ncalldata_ISmartCert_32_+_36: 0x0\ncalldata_ISmartCert_32 + 36: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_ISmartCert_0: 0xeb34330100000000000000000000000000000000000000000000000000000000\ncalldatasize_ISmartCert: 0x4\nstorage_keccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\ncalldata_ISmartCert_32_+_100: 0x0\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `registerCertWithID(bytes32,bytes,bytes32,uint256,bytes32)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/12/0x2fb3c22230c39496edc13c16d09f34368346ac1d.sol", "function": "registerCertWithID(bytes32,bytes,bytes32,uint256,bytes32)", "lineno": 93, "title": "Integer Overflow ", "type": "Warning"}], "success": true}