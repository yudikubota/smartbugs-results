{
  "contract": "0xb53c66c759d8197ca04c933554ef035e4412eb0e",
  "tool": "mythril",
  "start": 1563636990.8509552,
  "end": 1563637307.4679778,
  "duration": 316.61702251434326,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 1263,
        "code": "ialSupply,\n        string tokenName,\n        string tokenSymbol\n    ) public {\n\tinitialSupply = maxSupply - totalairdrop;\n    balanceOf[msg.sender] = initialSupply;\n    totalSupply = initialSupply;\n        name = \"Taiwan\u8b9a\";\n        symbol = \"Tw\u8b9a\";         \n    }\n\n    function initialize(address _address) internal re",
        "debug": "calldata_x32323_32 + 4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_x32323_0: 0x9dbf008700000000000000000000000000000000000000000000000000000000\ncalldatasize_x32323: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `TokenERC20(uint256,string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/26/0xb53c66c759d8197ca04c933554ef035e4412eb0e.sol",
        "function": "TokenERC20(uint256,string,string)",
        "lineno": 43,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1275,
        "code": "ialSupply,\n        string tokenName,\n        string tokenSymbol\n    ) public {\n\tinitialSupply = maxSupply - totalairdrop;\n    balanceOf[msg.sender] = initialSupply;\n    totalSupply = initialSupply;\n        name = \"Taiwan\u8b9a\";\n        symbol = \"Tw\u8b9a\";         \n    }\n\n    function initialize(address _address) internal re",
        "debug": "calldata_x32323_4 + calldata_x32323_32 + 4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8\ncalldata_x32323_0: 0x9dbf008700000000000000000000000000000000000000000000000000000000\ncalldatasize_x32323: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `TokenERC20(uint256,string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/26/0xb53c66c759d8197ca04c933554ef035e4412eb0e.sol",
        "function": "TokenERC20(uint256,string,string)",
        "lineno": 43,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1284,
        "code": "ialSupply,\n        string tokenName,\n        string tokenSymbol\n    ) public {\n\tinitialSupply = maxSupply - totalairdrop;\n    balanceOf[msg.sender] = initialSupply;\n    totalSupply = initialSupply;\n        name = \"Taiwan\u8b9a\";\n        symbol = \"Tw\u8b9a\";         \n    }\n\n    function initialize(address _address) internal re",
        "debug": "calldata_x32323_4 + calldata_x32323_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc1\ncalldata_x32323_0: 0x9dbf008700000000000000000000000000000000000000000000000000000000\ncalldatasize_x32323: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `TokenERC20(uint256,string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/26/0xb53c66c759d8197ca04c933554ef035e4412eb0e.sol",
        "function": "TokenERC20(uint256,string,string)",
        "lineno": 43,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1290,
        "code": "ialSupply,\n        string tokenName,\n        string tokenSymbol\n    ) public {\n\tinitialSupply = maxSupply - totalairdrop;\n    balanceOf[msg.sender] = initialSupply;\n    totalSupply = initialSupply;\n        name = \"Taiwan\u8b9a\";\n        symbol = \"Tw\u8b9a\";         \n    }\n\n    function initialize(address _address) internal re",
        "debug": "calldata_x32323_4 + calldata_x32323_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff41\ncalldata_x32323_0: 0x9dbf008700000000000000000000000000000000000000000000000000000000\ncalldatasize_x32323: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `TokenERC20(uint256,string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/26/0xb53c66c759d8197ca04c933554ef035e4412eb0e.sol",
        "function": "TokenERC20(uint256,string,string)",
        "lineno": 43,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1333,
        "code": "ialSupply,\n        string tokenName,\n        string tokenSymbol\n    ) public {\n\tinitialSupply = maxSupply - totalairdrop;\n    balanceOf[msg.sender] = initialSupply;\n    totalSupply = initialSupply;\n        name = \"Taiwan\u8b9a\";\n        symbol = \"Tw\u8b9a\";         \n    }\n\n    function initialize(address _address) internal re",
        "debug": "calldata_x32323_32 + 36: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_x32323_0: 0x9dbf008700000000000000000000000000000000000000000000000000000000\ncalldatasize_x32323: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `TokenERC20(uint256,string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/26/0xb53c66c759d8197ca04c933554ef035e4412eb0e.sol",
        "function": "TokenERC20(uint256,string,string)",
        "lineno": 43,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1345,
        "code": "ialSupply,\n        string tokenName,\n        string tokenSymbol\n    ) public {\n\tinitialSupply = maxSupply - totalairdrop;\n    balanceOf[msg.sender] = initialSupply;\n    totalSupply = initialSupply;\n        name = \"Taiwan\u8b9a\";\n        symbol = \"Tw\u8b9a\";         \n    }\n\n    function initialize(address _address) internal re",
        "debug": "calldata_x32323_4 + calldata_x32323_32 + 36: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8\ncalldata_x32323_0: 0x9dbf008700000000000000000000000000000000000000000000000000000000\ncalldatasize_x32323: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `TokenERC20(uint256,string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/26/0xb53c66c759d8197ca04c933554ef035e4412eb0e.sol",
        "function": "TokenERC20(uint256,string,string)",
        "lineno": 43,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1354,
        "code": "ialSupply,\n        string tokenName,\n        string tokenSymbol\n    ) public {\n\tinitialSupply = maxSupply - totalairdrop;\n    balanceOf[msg.sender] = initialSupply;\n    totalSupply = initialSupply;\n        name = \"Taiwan\u8b9a\";\n        symbol = \"Tw\u8b9a\";         \n    }\n\n    function initialize(address _address) internal re",
        "debug": "calldata_x32323_4 + calldata_x32323_32 + 36: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc1\ncalldata_x32323_0: 0x9dbf008700000000000000000000000000000000000000000000000000000000\ncalldatasize_x32323: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `TokenERC20(uint256,string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/26/0xb53c66c759d8197ca04c933554ef035e4412eb0e.sol",
        "function": "TokenERC20(uint256,string,string)",
        "lineno": 43,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1360,
        "code": "ialSupply,\n        string tokenName,\n        string tokenSymbol\n    ) public {\n\tinitialSupply = maxSupply - totalairdrop;\n    balanceOf[msg.sender] = initialSupply;\n    totalSupply = initialSupply;\n        name = \"Taiwan\u8b9a\";\n        symbol = \"Tw\u8b9a\";         \n    }\n\n    function initialize(address _address) internal re",
        "debug": "calldata_x32323_4 + calldata_x32323_32 + 36: 0x746e42ddbe03c97fe6e530ac0258466c4a20dfffffffffffffffffffffffffc1\ncalldata_x32323_4 + calldata_x32323_32 + 4: 0xcf9f8ea5a709fb58f8ed502cd9b08a9b1306dfffffffffffffffffffffffff61\ncalldata_x32323_0: 0x9dbf008700000000000000000000000000000000000000000000000000000000\ncalldatasize_x32323: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `TokenERC20(uint256,string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/26/0xb53c66c759d8197ca04c933554ef035e4412eb0e.sol",
        "function": "TokenERC20(uint256,string,string)",
        "lineno": 43,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 3096,
        "code": "nder] = initialSupply;\n ",
        "debug": "storage_9: 0x0\nstorage_10: 0x1\ncalldata_x32323_0: 0x9dbf008700000000000000000000000000000000000000000000000000000000\ncalldatasize_x32323: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer underflow exists in the function `TokenERC20(uint256,string,string)`.\nThe subtraction may result in a value < 0.",
        "filename": "/unique_chucks/26/0xb53c66c759d8197ca04c933554ef035e4412eb0e.sol",
        "function": "TokenERC20(uint256,string,string)",
        "lineno": 48,
        "title": "Integer Underflow",
        "type": "Warning"
      },
      {
        "address": 3236,
        "code": " \n    }\n\n    funct",
        "debug": "calldata_x32323_4 + calldata_x32323_32 + 36: 0x7d1c220000131c81001c28498000000a310ffffffffffffffffffffffffffe1\ncalldata_x32323_4 + calldata_x32323_32 + 4: 0xf82e3ddffffece37effe3d7b67ffffff5ceeffffffffffffffffffffffffff01\ncalldata_x32323_0: 0x9dbf008700000000000000000000000000000000000000000000000000000000\ncalldatasize_x32323: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `TokenERC20(uint256,string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/26/0xb53c66c759d8197ca04c933554ef035e4412eb0e.sol",
        "function": "TokenERC20(uint256,string,string)",
        "lineno": 51,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 3344,
        "code": "ell\n        balanceO",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_x32323_0: 0xa6f2ae3a00000000000000000000000000000000000000000000000000000000\ncalldatasize_x32323: 0x4\nstorage_15: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/26/0xb53c66c759d8197ca04c933554ef035e4412eb0e.sol",
        "function": "buy()",
        "lineno": 153,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3496,
        "code": "s amount from seller's balance\n",
        "debug": "storage_15: 0x2000000000000000000400000000000000000000000000020001f\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffff8a450010febe\ncallvalue: 0xf7ffffc77fbc0803001f007000000000000000000000000f800d005041024be8\nstorage_75506153327051474587906755573858019282972751592871715030499431892688993766217: 0x7bffffe3bfde\ncalldata_x32323_0: 0xa6f2ae3a00000000000000000000000000000000000000000000000000000000\ncalldatasize_x32323: 0x4\n",
        "description": "A possible integer overflow exists in the function `buy()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/26/0xb53c66c759d8197ca04c933554ef035e4412eb0e.sol",
        "function": "buy()",
        "lineno": 155,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 3762,
        "code": "ction transferFrom(address _from, address _to, uint256 _",
        "debug": "The exception is triggered under the following conditions:\n\nbalance_at_1461501637330902918203684832716283019655932542975 & caller: 0x0\nstorage_16: 0x1\ncalldata_x32323_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncalldatasize_x32323: 0x4\nstorage_14: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/26/0xb53c66c759d8197ca04c933554ef035e4412eb0e.sol",
        "function": "transfer(address,uint256)",
        "lineno": 120,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3919,
        "debug": "calldata_x32323_4: 0x5420f860cbaa38a1a0b3b190441c5a362d821016921e61f0365c77d2d7e1804c\nstorage_0: 0x0\ncaller: 0x0\ncalldata_x32323_0: 0xc91d956c00000000000000000000000000000000000000000000000000000000\ncalldatasize_x32323: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `setMinBalance(uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/26/0xb53c66c759d8197ca04c933554ef035e4412eb0e.sol",
        "function": "setMinBalance(uint256)",
        "lineno": 177,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 4647,
        "code": " this, amount);             ",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function transfer(address,uint256). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/26/0xb53c66c759d8197ca04c933554ef035e4412eb0e.sol",
        "function": "transfer(address,uint256)",
        "lineno": 166,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 5985,
        "code": " <= totalSupply && ",
        "debug": "storage_8: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc00\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_x32323_4: 0xfd73ffe400000001ffffffffffffffffffffffffffffffffffffffffffff00ff\ncalldata_x32323_32 + 36: 0xf9fdf9fff2ecfff20000000000000000000000000000000000000000000000e0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_x32323_32_+_4: 0x31800b50000001ff80000000000000209300000000015fbfffffe2\nstorage_11: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc01\ncalldata_x32323_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xf9fdf9fff2ecfff20000000000000000000000000000000000000000000000e0\ncalldata_x32323_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_x32323: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `transferFrom(address,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/26/0xb53c66c759d8197ca04c933554ef035e4412eb0e.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 62,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 6115,
        "code": "otalSupply && tota",
        "debug": "storage_8: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_x32323_4: 0xffffffffffffffffffffffffff7ffffffffffffff7ffffffffffffffffff00ff\ncalldata_x32323_32 + 36: 0x40000000000000040000000000000000000001\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_x32323_32_+_4: 0x1fffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_12: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01\nstorage_11: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00\ncalldata_x32323_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x40000000000000040000000000000000000001\ncalldata_x32323_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_x32323: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `transferFrom(address,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/26/0xb53c66c759d8197ca04c933554ef035e4412eb0e.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 66,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 6149,
        "code": "      totalS",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_x32323_4: 0xe38bf0181d229028518a0d5fff3bef77ffffdbfffc009900089d4000000000fd\ncalldata_x32323_32 + 36: 0x600024001800000000000003030248401a101bfffe009208f75d004e948f00fd\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_x32323_32_+_4: 0x3fffb5fdd7feb3ffbbfb7ffb315a49300a801aec018ce4c277ffe565400807f9\nstorage_8: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_13: 0x12b\nstorage_12: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_11: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_x32323_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x600024001800000000000003030248401a101bfffe009208f75d004e948f00fd\ncalldata_x32323_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_x32323: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer underflow exists in the function `transferFrom(address,address,uint256)`.\nThe subtraction may result in a value < 0.",
        "filename": "/unique_chucks/26/0xb53c66c759d8197ca04c933554ef035e4412eb0e.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 68,
        "title": "Integer Underflow",
        "type": "Warning"
      },
      {
        "address": 6250,
        "code": "ue;\n    }\n    \n   ",
        "debug": "storage_8: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff4\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_x32323_4: 0xffffffffffffffffffffffffffffffffffffffff7fffffffffffffffffff00ff\ncalldata_x32323_32 + 36: 0x8000000000000000000000000000000000400000000000000000000001\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_x32323_32_+_4: 0x7f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_13: 0x120\nstorage_12: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff4\nstorage_11: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff4\ncalldata_x32323_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x8000000000000000000000000000000000400000000000000000000001\ncalldata_x32323_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_x32323: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `transferFrom(address,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/26/0xb53c66c759d8197ca04c933554ef035e4412eb0e.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 72,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 6386,
        "code": "totalSupply < airdr",
        "debug": "storage_8: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff800\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_x32323_4: 0xfbfffffe1ffffffffffffffffffffffffffffbffffffffeffffffffff1fc00ff\ncalldata_x32323_32 + 36: 0x20808000000000000bfffffff10000000000004240019100126e0011\nstorage_11: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd1\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_x32323_32_+_4: 0x7fffefffdf7efffffffffffff3fffffff1000400046a2d1e84d0d377f244fff1\nstorage_9: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd1\ncalldata_x32323_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x20808000000000000bfffffff10000000000004240019100126e0011\ncalldata_x32323_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_x32323: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `transferFrom(address,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/26/0xb53c66c759d8197ca04c933554ef035e4412eb0e.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 81,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 6516,
        "code": "Supply < airdrop3)",
        "debug": "storage_8: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff10\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_x32323_4: 0xfffffffffffdffffffffffffffffffffffffffff7fffffffffffffffffff0000\ncalldata_x32323_32 + 36: 0x400000000000000000007f01\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_x32323_32_+_4: 0x7f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_12: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff11\nstorage_11: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff10\nstorage_9: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff11\ncalldata_x32323_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x400000000000000000007f01\ncalldata_x32323_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_x32323: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `transferFrom(address,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/26/0xb53c66c759d8197ca04c933554ef035e4412eb0e.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 85,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 6732,
        "code": " is owned{\n\n    mapping (address => uint256) public balanceOf;\n    mapping (address => mapping (address => uint256)) public allowance;\n    mapping (address => bool) public frozenAccount;\n    mapping (address => bool) initialized;\n\n    event FrozenFunds(address target, bool frozen);\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    function freezeAccount(address target, bool freeze) onlyOwner {\n        frozenAccount[target] = freeze;\n        FrozenFunds(target, freeze);\n    }\n\n    // Public variables of the token\n    string public name;\n    string public symbol;\n    uint8 public decimals = 2;\n    uint256 public totalSupply;\n    uint256 public maxSupply = 2300000000;\n    uint256 totalairdrop = 600000000;\n    uint256 airdrop1 = 1900000000;\n    uint256 airdrop2 = 2100000000;\n    uint256 airdrop3 = 2300000000;\n\n    function TokenERC20(\n        uint256 initialSupply,\n        string tokenName,\n        string tokenSymbol\n    ) public {\n\tinitialSupply = maxSupply - totalairdrop;\n    balanceOf[msg.sender] = initialSupply;\n    totalSupply = initialSupply;\n        name = \"Taiwan\u8b9a\";\n        symbol = \"Tw\u8b9a\";         \n    }\n\n    function initialize(address _address) internal returns (bool success) {\n\n        if (!initialized[_address]) {\n            initialized[_address] = true ;\n            if(totalSupply < airdrop1){\n                balanceOf[_address] += 2000;\n                totalSupply += 2000;\n            }\n            else if(airdrop1 <= totalSupply && totalSupply < airdrop2){\n                balanceOf[_address] += 800;\n                totalSupply += 800;\n            }\n            else if(airdrop2 <= totalSupply && totalSupply <= airdrop3-300){\n                balanceOf[_address] += 300;\n                totalSupply += 300;    \n            }\n\t    \n        }\n        return true;\n    }\n    \n    function reward(address _address) internal returns (bool success) {\n\t    if (totalSupply < maxSupply) {\n            if(totalSupply < airdrop1){\n                balanceOf[_address] += 1000;\n                totalSupply += 1000;\n            }\n            else if(airdrop1 <= totalSupply && totalSupply < airdrop2){\n                balanceOf[_address] += 300;\n                totalSupply += 300;\n            }\n            else if(airdrop2 <= totalSupply && totalSupply < airdrop3){\n                balanceOf[_address] += 100;\n                totalSupply += 100;    \n            }\n\t\t\n\t    }\n\t    return true;\n    }\n\n    function _transfer(address _from, address _to, uint _value) internal {\n    \trequire(!frozenAccount[_from]);\n        require(_to != 0x0);\n\n        require(balanceOf[_from] >= _value);\n        require(balanceOf[_to] + _value >= balanceOf[_to]);\n\t   \n        balanceOf[_from] -= _value;\n        balanceOf[_to] += _value;\n\n        Transfer(_from, _to, _value);\n\n\tinitialize(_from);\n\treward(_from);\n\tinitialize(_to);\n        \n    }\n\n    function transfer(address _to, uint256 _value) public {\n        \n\tif(msg.sender.balance < minBalanceForAccounts)\n            sell((minBalanceForAccounts - msg.sender.balance) / sellPrice);\n        _transfer(msg.sender, _to, _value);\n    }\n\n\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\n        require(_value <= allowance[_from][msg.sender]);     // Check allowance\n        allowance[_from][msg.sender] -= _value;\n        _transfer(_from, _to, _value);\n        return true;\n    }\n\n    function approve(address _spender, uint256 _value) public\n        returns (bool success) {\n        allowance[msg.sender][_spender] = _value;\n        return true;\n    }\n\n    function approveAndCall(address _spender, uint256 _value, bytes _extraData)\n        public\n        returns (bool success) {\n        tokenRecipient spender = tokenRecipient(_spender);\n        if (approve(_spender, _value)) {\n            spender.receiveApproval(msg.sender, _value, this, _extraData);\n            return true;\n        }\n    }\n\n    uint256 public sellPrice;\n    uint256 public buyPrice;\n\n    function setPrices(uint256 newSellPrice, uint256 newBuyPrice) onlyOwner {\n        sellPrice = newSellPrice;\n        buyPrice = newBuyPrice;\n    }\n\n    function buy() payable returns (uint amount){\n        amount = msg.value / buyPrice;                    // calculates the amount\n        require(balanceOf[this] >= amount);               // checks if it has enough to sell\n        balanceOf[msg.sender] += amount;                  // adds the amount to buyer's balance\n        balanceOf[this] -= amount;                        // subtracts amount from seller's balance\n        Transfer(this, msg.sender, amount);               // execute an event reflecting the change\n        return amount;                                    // ends function and returns\n    }\n\n    function sell(uint amount) returns (uint revenue){\n        require(balanceOf[msg.sender] >= amount);         // checks if the sender has enough to sell\n        balanceOf[this] += amount;                        // adds the amount to owner's balance\n        balanceOf[msg.sender] -= amount;                  // subtracts the amount from seller's balance\n        revenue = amount * sellPrice;\n        msg.sender.transfer(revenue);                     // sends ether to the seller: it's important to do this last to prevent recursion attacks\n        Transfer(msg.sender, this, amount);               // executes an event reflecting on the change\n        return revenue;                                   // ends function and returns\n    }\n\n\n    uint minBalanceForAccounts;\n    \n    function setMinBalance(uint minimumBalanceInFinney) onlyOwner {\n         minBalanceForAccounts = minimumBalanceInFinney * 1 finney;\n    }\n\n}",
        "debug": "mem_160 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_x32323_4 + calldata_x32323_32 + 4)) +\n32 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_x32323_4 + calldata_x32323_32 + 36)): 0x8000000000000000000000000000000000000000000000000000000000000000\ncalldata_x32323_0: 0x9dbf008700000000000000000000000000000000000000000000000000000000\ncalldatasize_x32323: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `TokenERC20(uint256,string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/26/0xb53c66c759d8197ca04c933554ef035e4412eb0e.sol",
        "function": "TokenERC20(uint256,string,string)",
        "lineno": 16,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 6746,
        "code": " is owned{\n\n    mapping (address => uint256) public balanceOf;\n    mapping (address => mapping (address => uint256)) public allowance;\n    mapping (address => bool) public frozenAccount;\n    mapping (address => bool) initialized;\n\n    event FrozenFunds(address target, bool frozen);\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    function freezeAccount(address target, bool freeze) onlyOwner {\n        frozenAccount[target] = freeze;\n        FrozenFunds(target, freeze);\n    }\n\n    // Public variables of the token\n    string public name;\n    string public symbol;\n    uint8 public decimals = 2;\n    uint256 public totalSupply;\n    uint256 public maxSupply = 2300000000;\n    uint256 totalairdrop = 600000000;\n    uint256 airdrop1 = 1900000000;\n    uint256 airdrop2 = 2100000000;\n    uint256 airdrop3 = 2300000000;\n\n    function TokenERC20(\n        uint256 initialSupply,\n        string tokenName,\n        string tokenSymbol\n    ) public {\n\tinitialSupply = maxSupply - totalairdrop;\n    balanceOf[msg.sender] = initialSupply;\n    totalSupply = initialSupply;\n        name = \"Taiwan\u8b9a\";\n        symbol = \"Tw\u8b9a\";         \n    }\n\n    function initialize(address _address) internal returns (bool success) {\n\n        if (!initialized[_address]) {\n            initialized[_address] = true ;\n            if(totalSupply < airdrop1){\n                balanceOf[_address] += 2000;\n                totalSupply += 2000;\n            }\n            else if(airdrop1 <= totalSupply && totalSupply < airdrop2){\n                balanceOf[_address] += 800;\n                totalSupply += 800;\n            }\n            else if(airdrop2 <= totalSupply && totalSupply <= airdrop3-300){\n                balanceOf[_address] += 300;\n                totalSupply += 300;    \n            }\n\t    \n        }\n        return true;\n    }\n    \n    function reward(address _address) internal returns (bool success) {\n\t    if (totalSupply < maxSupply) {\n            if(totalSupply < airdrop1){\n                balanceOf[_address] += 1000;\n                totalSupply += 1000;\n            }\n            else if(airdrop1 <= totalSupply && totalSupply < airdrop2){\n                balanceOf[_address] += 300;\n                totalSupply += 300;\n            }\n            else if(airdrop2 <= totalSupply && totalSupply < airdrop3){\n                balanceOf[_address] += 100;\n                totalSupply += 100;    \n            }\n\t\t\n\t    }\n\t    return true;\n    }\n\n    function _transfer(address _from, address _to, uint _value) internal {\n    \trequire(!frozenAccount[_from]);\n        require(_to != 0x0);\n\n        require(balanceOf[_from] >= _value);\n        require(balanceOf[_to] + _value >= balanceOf[_to]);\n\t   \n        balanceOf[_from] -= _value;\n        balanceOf[_to] += _value;\n\n        Transfer(_from, _to, _value);\n\n\tinitialize(_from);\n\treward(_from);\n\tinitialize(_to);\n        \n    }\n\n    function transfer(address _to, uint256 _value) public {\n        \n\tif(msg.sender.balance < minBalanceForAccounts)\n            sell((minBalanceForAccounts - msg.sender.balance) / sellPrice);\n        _transfer(msg.sender, _to, _value);\n    }\n\n\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\n        require(_value <= allowance[_from][msg.sender]);     // Check allowance\n        allowance[_from][msg.sender] -= _value;\n        _transfer(_from, _to, _value);\n        return true;\n    }\n\n    function approve(address _spender, uint256 _value) public\n        returns (bool success) {\n        allowance[msg.sender][_spender] = _value;\n        return true;\n    }\n\n    function approveAndCall(address _spender, uint256 _value, bytes _extraData)\n        public\n        returns (bool success) {\n        tokenRecipient spender = tokenRecipient(_spender);\n        if (approve(_spender, _value)) {\n            spender.receiveApproval(msg.sender, _value, this, _extraData);\n            return true;\n        }\n    }\n\n    uint256 public sellPrice;\n    uint256 public buyPrice;\n\n    function setPrices(uint256 newSellPrice, uint256 newBuyPrice) onlyOwner {\n        sellPrice = newSellPrice;\n        buyPrice = newBuyPrice;\n    }\n\n    function buy() payable returns (uint amount){\n        amount = msg.value / buyPrice;                    // calculates the amount\n        require(balanceOf[this] >= amount);               // checks if it has enough to sell\n        balanceOf[msg.sender] += amount;                  // adds the amount to buyer's balance\n        balanceOf[this] -= amount;                        // subtracts amount from seller's balance\n        Transfer(this, msg.sender, amount);               // execute an event reflecting the change\n        return amount;                                    // ends function and returns\n    }\n\n    function sell(uint amount) returns (uint revenue){\n        require(balanceOf[msg.sender] >= amount);         // checks if the sender has enough to sell\n        balanceOf[this] += amount;                        // adds the amount to owner's balance\n        balanceOf[msg.sender] -= amount;                  // subtracts the amount from seller's balance\n        revenue = amount * sellPrice;\n        msg.sender.transfer(revenue);                     // sends ether to the seller: it's important to do this last to prevent recursion attacks\n        Transfer(msg.sender, this, amount);               // executes an event reflecting on the change\n        return revenue;                                   // ends function and returns\n    }\n\n\n    uint minBalanceForAccounts;\n    \n    function setMinBalance(uint minimumBalanceInFinney) onlyOwner {\n         minBalanceForAccounts = minimumBalanceInFinney * 1 finney;\n    }\n\n}",
        "debug": "mem_160 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_x32323_4 + calldata_x32323_32 + 4)) +\n32 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_x32323_4 + calldata_x32323_32 + 36)): 0xe2240c073350198c7e1fe6a188343fffffffbbc5606fffffffffffffffffffa0\ncalldata_x32323_4 + calldata_x32323_32 + 36: 0xe728cbd10097e51a790002e0afffffffffffffffffffffffffffffffffffffe1\ncalldata_x32323_4 + calldata_x32323_32 + 4: 0x469e07d63c0ba14e849f5e157670afbffffc443a9f8fffffffffffffffffff61\ncalldata_x32323_0: 0x9dbf008700000000000000000000000000000000000000000000000000000000\ncalldatasize_x32323: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `TokenERC20(uint256,string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/26/0xb53c66c759d8197ca04c933554ef035e4412eb0e.sol",
        "function": "TokenERC20(uint256,string,string)",
        "lineno": 16,
        "title": "Integer Overflow ",
        "type": "Warning"
      }
    ],
    "success": true
  }
}