{"error": null, "issues": [{"address": 3777, "code": "forcementStatus) {//block all activated\n            if (verbose) emit AllowTransactionEnquireResult", "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_0: 0x8000000000000000000000000000000000000000000000000000000000000000\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_SafeBlocksFirewall_4: 0x0\ncaller: 0x0\nstorage_2: 0x0\ncalldata_SafeBlocksFirewall_0: 0x71888ffc00000000000000000000000000000000000000000000000000000000\ncalldatasize_SafeBlocksFirewall: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/16/0xee3c239080403420b1002f5c1044a2e9c1582b94.sol", "function": "allowTransaction(address,uint256,address,address)", "lineno": 158, "title": "Exception state", "type": "Informational"}, {"address": 8710, "code": "ated\n            if (verbose) emit AllowAccessEnquireResult(_contractAddress, false, _destina", "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_0: 0x8000000000000000000000000000000000000000000000000000000000000000\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_SafeBlocksFirewall_4: 0x0\ncaller: 0x0\nstorage_2: 0x0\ncalldata_SafeBlocksFirewall_0: 0x8c55be3400000000000000000000000000000000000000000000000000000000\ncalldatasize_SafeBlocksFirewall: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/16/0xee3c239080403420b1002f5c1044a2e9c1582b94.sol", "function": "allowAccess(address,address,bytes4)", "lineno": 187, "title": "Exception state", "type": "Informational"}], "success": true}