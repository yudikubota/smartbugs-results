{"error": null, "issues": [{"address": 7776, "code": "int256 b) inte", "debug": "The exception is triggered under the following conditions:\n\ncalldata_spectraCBDToken_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_1: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\nUDiv(storage_4,_256): 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_4: 0x0\ncaller: 0x0\ncalldata_spectraCBDToken_0: 0x42966c6800000000000000000000000000000000000000000000000000000000\ncalldatasize_spectraCBDToken: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/25/0x84db6d85261fe7a13c2002189cafe30be5061515.sol", "function": "burn(uint256)", "lineno": 71, "title": "Exception state", "type": "Informational"}, {"address": 7794, "code": "ken c", "debug": "calldata_spectraCBDToken_32 + 36: 0xfe51000008ce80008001c1d33616877ffffffffffffff7ffffe10000398d50ac\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_spectraCBDToken_32_+_4: 0xc050fffff320c00020003d81af848540000000000000040000110001bd062022\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xfe51000008ce80008001c1d33616877ffffffffffffff7ffffe10000398d50ac\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_spectraCBDToken_4: 0xfe51000008ce80008001c1d33616877ffffffffffffff7ffffe10000398d50ac\ncalldata_spectraCBDToken_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\nstorage_4: 0xff00\ncalldata_spectraCBDToken_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_spectraCBDToken: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `transferFrom(address,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/25/0x84db6d85261fe7a13c2002189cafe30be5061515.sol", "function": "transferFrom(address,address,uint256)", "lineno": 78, "title": "Integer Overflow ", "type": "Warning"}, {"address": 7807, "code": " based on Open", "debug": "The exception is triggered under the following conditions:\n\ncalldata_spectraCBDToken_32 + 36: 0x53632f08ddbb360427befb69cb0d577a76825c1eb02b4cefbf971939ae256117\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_spectraCBDToken_32_+_4: 0xd32ba62e013a1e544c40f8298f8c838ef0ca495e903244487f8ba1f8c2a013e7\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x53632f08ddbb360427befb69cb0d577a76825c1eb02b4cefbf971939ae256117\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_spectraCBDToken_4: 0x53632f08ddbb360427befb69cb0d577a76825c1eb02b4cefbf971939ae256117\ncalldata_spectraCBDToken_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\nstorage_4: 0xff00\ncalldata_spectraCBDToken_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_spectraCBDToken: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/25/0x84db6d85261fe7a13c2002189cafe30be5061515.sol", "function": "transferFrom(address,address,uint256)", "lineno": 78, "title": "Exception state", "type": "Informational"}], "success": true}