{
  "contract": "0x8897290f8603c9ef3440003dbf47f97cf55c2e1b",
  "tool": "mythril",
  "start": 1563287835.957172,
  "end": 1563338700.3397603,
  "duration": 50864.382588386536,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 159,
        "code": "es32\u578b\u8f6c\n    function stringToBytes32(string memory source) constant internal returns(bytes32 result){\n        assembly{\n            result := mload(add(source,32))\n        }\n    }\n    /// bytes32\u7c7b\u578b\u8f6c\u5316\u4e3astring\u578b\u8f6c\n    function bytes32ToString(bytes32 x) constant internal returns(string){\n        bytes memory bytesString = new bytes(32);\n        uint charCount = 0 ;\n     ",
        "debug": "calldata_TokenMall_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_TokenMall_0: 0x15924b5100000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenMall: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `getMortgageInfo(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x8897290f8603c9ef3440003dbf47f97cf55c2e1b.sol",
        "function": "getMortgageInfo(string)",
        "lineno": 115,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 171,
        "code": "es32\u578b\u8f6c\n    function stringToBytes32(string memory source) constant internal returns(bytes32 result){\n        assembly{\n            result := mload(add(source,32))\n        }\n    }\n    /// bytes32\u7c7b\u578b\u8f6c\u5316\u4e3astring\u578b\u8f6c\n    function bytes32ToString(bytes32 x) constant internal returns(string){\n        bytes memory bytesString = new bytes(32);\n        uint charCount = 0 ;\n     ",
        "debug": "calldata_TokenMall_4 + calldata_TokenMall_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8\ncalldata_TokenMall_0: 0x15924b5100000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenMall: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `getMortgageInfo(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x8897290f8603c9ef3440003dbf47f97cf55c2e1b.sol",
        "function": "getMortgageInfo(string)",
        "lineno": 115,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 180,
        "code": "es32\u578b\u8f6c\n    function stringToBytes32(string memory source) constant internal returns(bytes32 result){\n        assembly{\n            result := mload(add(source,32))\n        }\n    }\n    /// bytes32\u7c7b\u578b\u8f6c\u5316\u4e3astring\u578b\u8f6c\n    function bytes32ToString(bytes32 x) constant internal returns(string){\n        bytes memory bytesString = new bytes(32);\n        uint charCount = 0 ;\n     ",
        "debug": "calldata_TokenMall_4 + calldata_TokenMall_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc1\ncalldata_TokenMall_0: 0x15924b5100000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenMall: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `getMortgageInfo(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x8897290f8603c9ef3440003dbf47f97cf55c2e1b.sol",
        "function": "getMortgageInfo(string)",
        "lineno": 115,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 186,
        "code": "es32\u578b\u8f6c\n    function stringToBytes32(string memory source) constant internal returns(bytes32 result){\n        assembly{\n            result := mload(add(source,32))\n        }\n    }\n    /// bytes32\u7c7b\u578b\u8f6c\u5316\u4e3astring\u578b\u8f6c\n    function bytes32ToString(bytes32 x) constant internal returns(string){\n        bytes memory bytesString = new bytes(32);\n        uint charCount = 0 ;\n     ",
        "debug": "calldata_TokenMall_4 + calldata_TokenMall_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff41\ncalldata_TokenMall_0: 0x15924b5100000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenMall: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `getMortgageInfo(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x8897290f8603c9ef3440003dbf47f97cf55c2e1b.sol",
        "function": "getMortgageInfo(string)",
        "lineno": 115,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 819,
        "code": "urrency;\n              mInfo[proId].mortgageAmount = mortgageAmount;\n              mInfo[proId].releaseAmount = releaseAmount;\n              mortgageInfos.push(proId);\n              MessageMintInfo(msg.sender, true,\"\u6dfb\u52a0\u6210\u529f\");\n            return;\n        }else{\n             MessageMintInfo(msg.sender, false,\"\u9879\u76eeID\u5df2\u7ecf\u5b58\u5728\");\n            return;\n        }\n    }\n  /**\n   * @dev \u66f4\u65b0\u6570\u636e.\n   */\n    event MessageUpdateInfo(address sender,bool isScuccess,string message);\n    function updateMortgageInfo(string _projectId,string releaseAmount) onlyOwner{\n         bytes32 proId = stringToBytes32(_projectId);\n        if(mInfo[proId].projectId == proId){\n              mInfo[proId].releaseAmount = re",
        "debug": "calldata_TokenMall_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_TokenMall_0: 0xcd752f2f00000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenMall: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `mintMortgageInfo(string,string,string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x8897290f8603c9ef3440003dbf47f97cf55c2e1b.sol",
        "function": "mintMortgageInfo(string,string,string,string)",
        "lineno": 73,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 831,
        "code": "urrency;\n              mInfo[proId].mortgageAmount = mortgageAmount;\n              mInfo[proId].releaseAmount = releaseAmount;\n              mortgageInfos.push(proId);\n              MessageMintInfo(msg.sender, true,\"\u6dfb\u52a0\u6210\u529f\");\n            return;\n        }else{\n             MessageMintInfo(msg.sender, false,\"\u9879\u76eeID\u5df2\u7ecf\u5b58\u5728\");\n            return;\n        }\n    }\n  /**\n   * @dev \u66f4\u65b0\u6570\u636e.\n   */\n    event MessageUpdateInfo(address sender,bool isScuccess,string message);\n    function updateMortgageInfo(string _projectId,string releaseAmount) onlyOwner{\n         bytes32 proId = stringToBytes32(_projectId);\n        if(mInfo[proId].projectId == proId){\n              mInfo[proId].releaseAmount = re",
        "debug": "calldata_TokenMall_4 + calldata_TokenMall_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8\ncalldata_TokenMall_0: 0xcd752f2f00000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenMall: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `mintMortgageInfo(string,string,string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x8897290f8603c9ef3440003dbf47f97cf55c2e1b.sol",
        "function": "mintMortgageInfo(string,string,string,string)",
        "lineno": 73,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 840,
        "code": "urrency;\n              mInfo[proId].mortgageAmount = mortgageAmount;\n              mInfo[proId].releaseAmount = releaseAmount;\n              mortgageInfos.push(proId);\n              MessageMintInfo(msg.sender, true,\"\u6dfb\u52a0\u6210\u529f\");\n            return;\n        }else{\n             MessageMintInfo(msg.sender, false,\"\u9879\u76eeID\u5df2\u7ecf\u5b58\u5728\");\n            return;\n        }\n    }\n  /**\n   * @dev \u66f4\u65b0\u6570\u636e.\n   */\n    event MessageUpdateInfo(address sender,bool isScuccess,string message);\n    function updateMortgageInfo(string _projectId,string releaseAmount) onlyOwner{\n         bytes32 proId = stringToBytes32(_projectId);\n        if(mInfo[proId].projectId == proId){\n              mInfo[proId].releaseAmount = re",
        "debug": "calldata_TokenMall_4 + calldata_TokenMall_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc1\ncalldata_TokenMall_0: 0xcd752f2f00000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenMall: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `mintMortgageInfo(string,string,string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x8897290f8603c9ef3440003dbf47f97cf55c2e1b.sol",
        "function": "mintMortgageInfo(string,string,string,string)",
        "lineno": 73,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 846,
        "code": "urrency;\n              mInfo[proId].mortgageAmount = mortgageAmount;\n              mInfo[proId].releaseAmount = releaseAmount;\n              mortgageInfos.push(proId);\n              MessageMintInfo(msg.sender, true,\"\u6dfb\u52a0\u6210\u529f\");\n            return;\n        }else{\n             MessageMintInfo(msg.sender, false,\"\u9879\u76eeID\u5df2\u7ecf\u5b58\u5728\");\n            return;\n        }\n    }\n  /**\n   * @dev \u66f4\u65b0\u6570\u636e.\n   */\n    event MessageUpdateInfo(address sender,bool isScuccess,string message);\n    function updateMortgageInfo(string _projectId,string releaseAmount) onlyOwner{\n         bytes32 proId = stringToBytes32(_projectId);\n        if(mInfo[proId].projectId == proId){\n              mInfo[proId].releaseAmount = re",
        "debug": "calldata_TokenMall_4 + calldata_TokenMall_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff41\ncalldata_TokenMall_0: 0xcd752f2f00000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenMall: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `mintMortgageInfo(string,string,string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x8897290f8603c9ef3440003dbf47f97cf55c2e1b.sol",
        "function": "mintMortgageInfo(string,string,string,string)",
        "lineno": 73,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1134,
        "code": "  return;\n        }else{\n             MessageUpdateInfo(msg.sender, false,\"\u9879\u76eeID\u4e0d\u5b58\u5728\");\n            return;\n        }\n    }\n     \n     \n  /**\n   * @dev \u67e5\u8be2\u6570\u636e.\n   */\n    function getMortgageInfo(string _projectId) \n    public view returns(string projectId,string currency,string mortgageAmount,string releaseAmount){\n         \n         bytes32 proId = stringToBytes32(_projectId);\n         \n         MortgageInfo memory mi = mInfo[proId];\n        \n        return (_projectId,mi.currency,mi.mortgageA",
        "debug": "calldata_TokenMall_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_TokenMall_0: 0xe614c96100000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenMall: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `updateMortgageInfo(string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x8897290f8603c9ef3440003dbf47f97cf55c2e1b.sol",
        "function": "updateMortgageInfo(string,string)",
        "lineno": 94,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1146,
        "code": "  return;\n        }else{\n             MessageUpdateInfo(msg.sender, false,\"\u9879\u76eeID\u4e0d\u5b58\u5728\");\n            return;\n        }\n    }\n     \n     \n  /**\n   * @dev \u67e5\u8be2\u6570\u636e.\n   */\n    function getMortgageInfo(string _projectId) \n    public view returns(string projectId,string currency,string mortgageAmount,string releaseAmount){\n         \n         bytes32 proId = stringToBytes32(_projectId);\n         \n         MortgageInfo memory mi = mInfo[proId];\n        \n        return (_projectId,mi.currency,mi.mortgageA",
        "debug": "calldata_TokenMall_4 + calldata_TokenMall_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8\ncalldata_TokenMall_0: 0xe614c96100000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenMall: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `updateMortgageInfo(string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x8897290f8603c9ef3440003dbf47f97cf55c2e1b.sol",
        "function": "updateMortgageInfo(string,string)",
        "lineno": 94,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1155,
        "code": "  return;\n        }else{\n             MessageUpdateInfo(msg.sender, false,\"\u9879\u76eeID\u4e0d\u5b58\u5728\");\n            return;\n        }\n    }\n     \n     \n  /**\n   * @dev \u67e5\u8be2\u6570\u636e.\n   */\n    function getMortgageInfo(string _projectId) \n    public view returns(string projectId,string currency,string mortgageAmount,string releaseAmount){\n         \n         bytes32 proId = stringToBytes32(_projectId);\n         \n         MortgageInfo memory mi = mInfo[proId];\n        \n        return (_projectId,mi.currency,mi.mortgageA",
        "debug": "calldata_TokenMall_4 + calldata_TokenMall_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc1\ncalldata_TokenMall_0: 0xe614c96100000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenMall: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `updateMortgageInfo(string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x8897290f8603c9ef3440003dbf47f97cf55c2e1b.sol",
        "function": "updateMortgageInfo(string,string)",
        "lineno": 94,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1161,
        "code": "  return;\n        }else{\n             MessageUpdateInfo(msg.sender, false,\"\u9879\u76eeID\u4e0d\u5b58\u5728\");\n            return;\n        }\n    }\n     \n     \n  /**\n   * @dev \u67e5\u8be2\u6570\u636e.\n   */\n    function getMortgageInfo(string _projectId) \n    public view returns(string projectId,string currency,string mortgageAmount,string releaseAmount){\n         \n         bytes32 proId = stringToBytes32(_projectId);\n         \n         MortgageInfo memory mi = mInfo[proId];\n        \n        return (_projectId,mi.currency,mi.mortgageA",
        "debug": "calldata_TokenMall_4 + calldata_TokenMall_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff41\ncalldata_TokenMall_0: 0xe614c96100000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenMall: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `updateMortgageInfo(string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x8897290f8603c9ef3440003dbf47f97cf55c2e1b.sol",
        "function": "updateMortgageInfo(string,string)",
        "lineno": 94,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1404,
        "code": "g(bytes32 x) constant internal return",
        "debug": "calldata_TokenMall_4 + calldata_TokenMall_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe41\ncalldata_TokenMall_0: 0x15924b5100000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenMall: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `getMortgageInfo(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x8897290f8603c9ef3440003dbf47f97cf55c2e1b.sol",
        "function": "getMortgageInfo(string)",
        "lineno": 122,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1469,
        "code": "g(bytes32 x) constant internal return",
        "debug": "storage_keccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\ncalldata_TokenMall_cpy +\n1: 0xffd4f0ffffe2eca1ed1fffffffffffffffffffffffffffffffffffffffffff85\ncalldata_TokenMall_4 + calldata_TokenMall_4: 0xfe2b874fff8c775f062fffffffffffffffffffffffffffffffffffffffffffe1\ncalldata_TokenMall_0: 0x15924b5100000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenMall: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `getMortgageInfo(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x8897290f8603c9ef3440003dbf47f97cf55c2e1b.sol",
        "function": "getMortgageInfo(string)",
        "lineno": 122,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1482,
        "code": "g(bytes32 x) constant internal return",
        "debug": "calldata_TokenMall_4 + calldata_TokenMall_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe21\ncalldata_TokenMall_0: 0x15924b5100000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenMall: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `getMortgageInfo(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x8897290f8603c9ef3440003dbf47f97cf55c2e1b.sol",
        "function": "getMortgageInfo(string)",
        "lineno": 122,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1538,
        "code": "g(bytes32 x) constant internal return",
        "debug": "storage_keccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\ncalldata_TokenMall_cpy +\n1: 0x9ed1111000022e7ffffffffff1fdff6f7ffffffffffffffffffffffffffffc01\ncalldata_TokenMall_4 + calldata_TokenMall_4: 0xee00000000000000000000000000000000000000000000000000000000000001\ncalldata_TokenMall_0: 0x15924b5100000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenMall: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `getMortgageInfo(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x8897290f8603c9ef3440003dbf47f97cf55c2e1b.sol",
        "function": "getMortgageInfo(string)",
        "lineno": 122,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1562,
        "code": "g(bytes32 x) constant internal return",
        "debug": "storage_keccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\ncalldata_TokenMall_cpy +\n1: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01\ncalldata_TokenMall_4 + calldata_TokenMall_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01\ncalldata_TokenMall_0: 0x15924b5100000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenMall: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `getMortgageInfo(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x8897290f8603c9ef3440003dbf47f97cf55c2e1b.sol",
        "function": "getMortgageInfo(string)",
        "lineno": 122,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1631,
        "code": "g(bytes32 x) constant internal return",
        "debug": "storage_keccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\ncalldata_TokenMall_cpy +\n2: 0xf1fffffffffffffffffffffffc00000000000000000000000d27ffffffffffc1\nstorage_keccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\ncalldata_TokenMall_cpy +\n1: 0x2\ncalldata_TokenMall_4 + calldata_TokenMall_4: 0xceffffffdffffffffffffffffffffffffffffffffffffffff96bffffffffffc1\ncalldata_TokenMall_0: 0x15924b5100000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenMall: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `getMortgageInfo(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x8897290f8603c9ef3440003dbf47f97cf55c2e1b.sol",
        "function": "getMortgageInfo(string)",
        "lineno": 122,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1644,
        "code": "g(bytes32 x) constant internal return",
        "debug": "storage_keccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\ncalldata_TokenMall_cpy +\n1: 0x8\ncalldata_TokenMall_4 + calldata_TokenMall_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffde1\ncalldata_TokenMall_0: 0x15924b5100000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenMall: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `getMortgageInfo(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x8897290f8603c9ef3440003dbf47f97cf55c2e1b.sol",
        "function": "getMortgageInfo(string)",
        "lineno": 122,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1700,
        "code": "g(bytes32 x) constant internal return",
        "debug": "storage_keccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\ncalldata_TokenMall_cpy +\n2: 0x7d9160220440425ddf1ff601800c3fe5fffff803c0fef3fffffffffff07e3fc1\nstorage_keccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\ncalldata_TokenMall_cpy +\n1: 0x10\ncalldata_TokenMall_4 + calldata_TokenMall_4: 0xc1374feefddfded141ffffff3ff3dffcfffffffdff7f7dfbffffffffff830021\ncalldata_TokenMall_0: 0x15924b5100000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenMall: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `getMortgageInfo(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x8897290f8603c9ef3440003dbf47f97cf55c2e1b.sol",
        "function": "getMortgageInfo(string)",
        "lineno": 122,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1724,
        "code": "g(bytes32 x) constant internal return",
        "debug": "storage_keccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\ncalldata_TokenMall_cpy +\n2: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01\nstorage_keccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\ncalldata_TokenMall_cpy +\n1: 0x4\ncalldata_TokenMall_4 + calldata_TokenMall_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc1\ncalldata_TokenMall_0: 0x15924b5100000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenMall: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `getMortgageInfo(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x8897290f8603c9ef3440003dbf47f97cf55c2e1b.sol",
        "function": "getMortgageInfo(string)",
        "lineno": 122,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1806,
        "code": "g(bytes32 x) constant internal return",
        "debug": "storage_keccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\ncalldata_TokenMall_cpy +\n2: 0x10\nstorage_keccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\ncalldata_TokenMall_cpy +\n1: 0x10\ncalldata_TokenMall_4 + calldata_TokenMall_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffda1\ncalldata_TokenMall_0: 0x15924b5100000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenMall: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `getMortgageInfo(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x8897290f8603c9ef3440003dbf47f97cf55c2e1b.sol",
        "function": "getMortgageInfo(string)",
        "lineno": 122,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1862,
        "code": "g(bytes32 x) constant internal return",
        "debug": "storage_keccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\ncalldata_TokenMall_cpy +\n2: 0x10\nstorage_keccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\ncalldata_TokenMall_cpy +\n1: 0x20\nstorage_keccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\ncalldata_TokenMall_cpy +\n3: 0xeb3033ffb7ff5f5fff77ffffffffcc411a430800013f081a00e44012ce400381\ncalldata_TokenMall_4 + calldata_TokenMall_4: 0xb69bb60024005050004400000000295f2e9b7b7bfc85762ad607dff46fbffda1\ncalldata_TokenMall_0: 0x15924b5100000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenMall: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `getMortgageInfo(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x8897290f8603c9ef3440003dbf47f97cf55c2e1b.sol",
        "function": "getMortgageInfo(string)",
        "lineno": 122,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1886,
        "code": "g(bytes32 x) constant internal return",
        "debug": "storage_keccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\ncalldata_TokenMall_cpy +\n2: 0x8\nstorage_keccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\ncalldata_TokenMall_cpy +\n1: 0x4\nstorage_keccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\ncalldata_TokenMall_cpy +\n3: 0x8f946b7864b5856617fe2e34d9c5c97e5df514764eef45c03d0687f69535d901\ncalldata_TokenMall_4 + calldata_TokenMall_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd81\ncalldata_TokenMall_0: 0x15924b5100000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenMall: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `getMortgageInfo(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x8897290f8603c9ef3440003dbf47f97cf55c2e1b.sol",
        "function": "getMortgageInfo(string)",
        "lineno": 122,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2479,
        "code": "geMintInfo(msg.sender, false,\"\u9879\u76ee",
        "debug": "calldata_TokenMall_4 + calldata_TokenMall_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff21\ncalldata_TokenMall_cpy: 0x0\nstorage_0 +\nkeccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\ncalldata_TokenMall_cpy: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_0: 0x0\ncaller: 0x0\ncalldata_TokenMall_0: 0xcd752f2f00000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenMall: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `mintMortgageInfo(string,string,string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x8897290f8603c9ef3440003dbf47f97cf55c2e1b.sol",
        "function": "mintMortgageInfo(string,string,string,string)",
        "lineno": 80,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 3183,
        "code": "ng _projectId) \n    public view returns(st",
        "debug": "calldata_TokenMall_4 + calldata_TokenMall_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff21\nstorage_0: 0x0\ncaller: 0x0\ncalldata_TokenMall_0: 0xe614c96100000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenMall: 0x4\ncalldata_TokenMall_cpy: 0x0\nstorage_0 +\nkeccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\ncalldata_TokenMall_cpy: 0x0\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `updateMortgageInfo(string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x8897290f8603c9ef3440003dbf47f97cf55c2e1b.sol",
        "function": "updateMortgageInfo(string,string)",
        "lineno": 105,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 3206,
        "code": ";\ncontract Ownable",
        "debug": "keccac_3_+\nkeccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\ncalldata_TokenMall_cpy: 0x3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_2: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_3 +\nkeccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\ncalldata_TokenMall_cpy: 0xf800000000000000000000000000000000000000000000000000000000000040\nmem_128 +\n32 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_TokenMall_4 + calldata_TokenMall_4)): 0x0\nstorage_0: 0x0\ncaller: 0x0\ncalldata_TokenMall_0: 0xe614c96100000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenMall: 0x4\ncalldata_TokenMall_cpy: 0x0\nstorage_0 +\nkeccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\ncalldata_TokenMall_cpy: 0x0\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `updateMortgageInfo(string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x8897290f8603c9ef3440003dbf47f97cf55c2e1b.sol",
        "function": "updateMortgageInfo(string,string)",
        "lineno": 1,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 3970,
        "code": "ng(bytes32 =>MortgageInfo) mInfo;\n  bytes32[] mortgageInfos;\n   \n  /**\n   * @dev \u6dfb\u52a0\u6570\u636e.\n   */\n    event MessageMintInfo(address sender,bool isScuccess,string message);\n    function mintMortgageInfo(string _projectId,string currency,string mortgageAmount,string releaseAmount) onlyOwner{\n        bytes32 proId = stringToBytes32(_projectId);\n        if(mInfo[proId].projectId != proId){\n              mInfo[proId].projectId = proId;\n              mInfo[proId].currency = currency;\n              mInfo[proId].mortgageAmount = mortgageAmount;\n              mInfo[proId].releaseAmount = releaseAmount;\n              mortgageInfos.push(proId);\n              MessageMintInfo(msg.sender, true,\"\u6dfb\u52a0\u6210\u529f\");\n            return;\n        }else{\n             MessageMintInfo(msg.sender, false,\"\u9879\u76eeID\u5df2\u7ecf\u5b58\u5728\");\n            return;\n        }\n    }\n  /**\n   * @dev \u66f4\u65b0\u6570\u636e.\n   */\n    event MessageUpdateInfo(address sender,bool isScuccess,string message);\n    function updateMortgageInfo(string _projectId,string releaseAmount) onlyOwner{\n         bytes32 proId = stringToBytes32(_projectId);\n        if(mInfo[proId].projectId == proId){\n              mInfo[proId].releaseAmount = releaseAmount;\n              mortgageInfos.push(proId);\n              MessageUpdateInfo(msg.sender, true,\"\u4fee\u6539\u6210\u529f\");\n            return;\n        }else{\n             MessageUpdateInfo(msg.sender, false,\"\u9879\u76eeID\u4e0d\u5b58\u5728\");\n            return;\n        }\n    }\n     \n     \n  /**\n   * @dev \u67e5\u8be2\u6570\u636e.\n   */\n    function getMortgageInfo(string _projectId) \n    public view returns(string projectId,string currency,string mortgageAmount,string releaseAmount){\n         \n         bytes32 proId = stringToBytes32(_projectId);\n         \n         MortgageInfo memory mi = mInfo[proId];\n        \n        return (_projectId,mi.currency,mi.mortgageAmount,mi.releaseAmount);\n    }\n    \n     /// string\u7c7b\u578b\u8f6c\u5316\u4e3abytes32\u578b\u8f6c\n    function stringToBytes32(string memory source) constant internal returns(bytes32 result){\n        assembly{\n            result := mload(add(source,32))\n        }\n    }\n    /// bytes32\u7c7b\u578b\u8f6c\u5316\u4e3astring\u578b\u8f6c\n    function bytes32ToString(bytes32 x) constant internal returns(string){\n        bytes memory bytesString = new bytes(32);\n        uint charCount = 0 ;\n        for(uint j = 0 ; j<32;j++){\n            byte char = byte(bytes32(uint(x) *2 **(8*j)));\n            if(char !=0){\n                bytesString[charCount] = char;\n                charCount++;\n            }\n        }\n        bytes memory bytesStringTrimmed = new bytes(charCount);\n        for(j=0;j<charCount;j++){\n            bytesStringTrimmed[j]=bytesString[j];\n        }\n        return string(bytesStringTrimmed);\n    }\n\n}",
        "debug": "calldata_TokenMall_4 + calldata_TokenMall_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01\ncalldata_TokenMall_0: 0x15924b5100000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenMall: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `getMortgageInfo(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x8897290f8603c9ef3440003dbf47f97cf55c2e1b.sol",
        "function": "getMortgageInfo(string)",
        "lineno": 62,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 4045,
        "code": "ng(bytes32 =>MortgageInfo) mInfo;\n  bytes32[] mortgageInfos;\n   \n  /**\n   * @dev \u6dfb\u52a0\u6570\u636e.\n   */\n    event MessageMintInfo(address sender,bool isScuccess,string message);\n    function mintMortgageInfo(string _projectId,string currency,string mortgageAmount,string releaseAmount) onlyOwner{\n        bytes32 proId = stringToBytes32(_projectId);\n        if(mInfo[proId].projectId != proId){\n              mInfo[proId].projectId = proId;\n              mInfo[proId].currency = currency;\n              mInfo[proId].mortgageAmount = mortgageAmount;\n              mInfo[proId].releaseAmount = releaseAmount;\n              mortgageInfos.push(proId);\n              MessageMintInfo(msg.sender, true,\"\u6dfb\u52a0\u6210\u529f\");\n            return;\n        }else{\n             MessageMintInfo(msg.sender, false,\"\u9879\u76eeID\u5df2\u7ecf\u5b58\u5728\");\n            return;\n        }\n    }\n  /**\n   * @dev \u66f4\u65b0\u6570\u636e.\n   */\n    event MessageUpdateInfo(address sender,bool isScuccess,string message);\n    function updateMortgageInfo(string _projectId,string releaseAmount) onlyOwner{\n         bytes32 proId = stringToBytes32(_projectId);\n        if(mInfo[proId].projectId == proId){\n              mInfo[proId].releaseAmount = releaseAmount;\n              mortgageInfos.push(proId);\n              MessageUpdateInfo(msg.sender, true,\"\u4fee\u6539\u6210\u529f\");\n            return;\n        }else{\n             MessageUpdateInfo(msg.sender, false,\"\u9879\u76eeID\u4e0d\u5b58\u5728\");\n            return;\n        }\n    }\n     \n     \n  /**\n   * @dev \u67e5\u8be2\u6570\u636e.\n   */\n    function getMortgageInfo(string _projectId) \n    public view returns(string projectId,string currency,string mortgageAmount,string releaseAmount){\n         \n         bytes32 proId = stringToBytes32(_projectId);\n         \n         MortgageInfo memory mi = mInfo[proId];\n        \n        return (_projectId,mi.currency,mi.mortgageAmount,mi.releaseAmount);\n    }\n    \n     /// string\u7c7b\u578b\u8f6c\u5316\u4e3abytes32\u578b\u8f6c\n    function stringToBytes32(string memory source) constant internal returns(bytes32 result){\n        assembly{\n            result := mload(add(source,32))\n        }\n    }\n    /// bytes32\u7c7b\u578b\u8f6c\u5316\u4e3astring\u578b\u8f6c\n    function bytes32ToString(bytes32 x) constant internal returns(string){\n        bytes memory bytesString = new bytes(32);\n        uint charCount = 0 ;\n        for(uint j = 0 ; j<32;j++){\n            byte char = byte(bytes32(uint(x) *2 **(8*j)));\n            if(char !=0){\n                bytesString[charCount] = char;\n                charCount++;\n            }\n        }\n        bytes memory bytesStringTrimmed = new bytes(charCount);\n        for(j=0;j<charCount;j++){\n            bytesStringTrimmed[j]=bytesString[j];\n        }\n        return string(bytesStringTrimmed);\n    }\n\n}",
        "debug": "keccac_3_+\nkeccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\ncalldata_TokenMall_cpy: 0xff13e6a7459ae5a4c49c419171c3f89100a371508000000000129200000219e2\nstorage_3 +\nkeccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\ncalldata_TokenMall_cpy: 0xbac1c3147749165dd7d1977fffffffffffffffffffffffffffffffffffffffc5\nstorage_0: 0x0\ncaller: 0x0\ncalldata_TokenMall_0: 0xe614c96100000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenMall: 0x4\ncalldata_TokenMall_cpy: 0x0\nstorage_0 +\nkeccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\ncalldata_TokenMall_cpy: 0x0\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `updateMortgageInfo(string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x8897290f8603c9ef3440003dbf47f97cf55c2e1b.sol",
        "function": "updateMortgageInfo(string,string)",
        "lineno": 62,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 4074,
        "code": "ng(bytes32 =>MortgageInfo) mInfo;\n  bytes32[] mortgageInfos;\n   \n  /**\n   * @dev \u6dfb\u52a0\u6570\u636e.\n   */\n    event MessageMintInfo(address sender,bool isScuccess,string message);\n    function mintMortgageInfo(string _projectId,string currency,string mortgageAmount,string releaseAmount) onlyOwner{\n        bytes32 proId = stringToBytes32(_projectId);\n        if(mInfo[proId].projectId != proId){\n              mInfo[proId].projectId = proId;\n              mInfo[proId].currency = currency;\n              mInfo[proId].mortgageAmount = mortgageAmount;\n              mInfo[proId].releaseAmount = releaseAmount;\n              mortgageInfos.push(proId);\n              MessageMintInfo(msg.sender, true,\"\u6dfb\u52a0\u6210\u529f\");\n            return;\n        }else{\n             MessageMintInfo(msg.sender, false,\"\u9879\u76eeID\u5df2\u7ecf\u5b58\u5728\");\n            return;\n        }\n    }\n  /**\n   * @dev \u66f4\u65b0\u6570\u636e.\n   */\n    event MessageUpdateInfo(address sender,bool isScuccess,string message);\n    function updateMortgageInfo(string _projectId,string releaseAmount) onlyOwner{\n         bytes32 proId = stringToBytes32(_projectId);\n        if(mInfo[proId].projectId == proId){\n              mInfo[proId].releaseAmount = releaseAmount;\n              mortgageInfos.push(proId);\n              MessageUpdateInfo(msg.sender, true,\"\u4fee\u6539\u6210\u529f\");\n            return;\n        }else{\n             MessageUpdateInfo(msg.sender, false,\"\u9879\u76eeID\u4e0d\u5b58\u5728\");\n            return;\n        }\n    }\n     \n     \n  /**\n   * @dev \u67e5\u8be2\u6570\u636e.\n   */\n    function getMortgageInfo(string _projectId) \n    public view returns(string projectId,string currency,string mortgageAmount,string releaseAmount){\n         \n         bytes32 proId = stringToBytes32(_projectId);\n         \n         MortgageInfo memory mi = mInfo[proId];\n        \n        return (_projectId,mi.currency,mi.mortgageAmount,mi.releaseAmount);\n    }\n    \n     /// string\u7c7b\u578b\u8f6c\u5316\u4e3abytes32\u578b\u8f6c\n    function stringToBytes32(string memory source) constant internal returns(bytes32 result){\n        assembly{\n            result := mload(add(source,32))\n        }\n    }\n    /// bytes32\u7c7b\u578b\u8f6c\u5316\u4e3astring\u578b\u8f6c\n    function bytes32ToString(bytes32 x) constant internal returns(string){\n        bytes memory bytesString = new bytes(32);\n        uint charCount = 0 ;\n        for(uint j = 0 ; j<32;j++){\n            byte char = byte(bytes32(uint(x) *2 **(8*j)));\n            if(char !=0){\n                bytesString[charCount] = char;\n                charCount++;\n            }\n        }\n        bytes memory bytesStringTrimmed = new bytes(charCount);\n        for(j=0;j<charCount;j++){\n            bytesStringTrimmed[j]=bytesString[j];\n        }\n        return string(bytesStringTrimmed);\n    }\n\n}",
        "debug": "mem_128 +\n32 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_TokenMall_4 + calldata_TokenMall_4)): 0x8000000000000000000000000000000000000000000000000000000000000000\nstorage_0: 0x0\ncaller: 0x0\ncalldata_TokenMall_0: 0xe614c96100000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenMall: 0x4\ncalldata_TokenMall_cpy: 0x0\nstorage_0 +\nkeccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\ncalldata_TokenMall_cpy: 0x0\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `updateMortgageInfo(string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x8897290f8603c9ef3440003dbf47f97cf55c2e1b.sol",
        "function": "updateMortgageInfo(string,string)",
        "lineno": 62,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 4088,
        "code": "ng(bytes32 =>MortgageInfo) mInfo;\n  bytes32[] mortgageInfos;\n   \n  /**\n   * @dev \u6dfb\u52a0\u6570\u636e.\n   */\n    event MessageMintInfo(address sender,bool isScuccess,string message);\n    function mintMortgageInfo(string _projectId,string currency,string mortgageAmount,string releaseAmount) onlyOwner{\n        bytes32 proId = stringToBytes32(_projectId);\n        if(mInfo[proId].projectId != proId){\n              mInfo[proId].projectId = proId;\n              mInfo[proId].currency = currency;\n              mInfo[proId].mortgageAmount = mortgageAmount;\n              mInfo[proId].releaseAmount = releaseAmount;\n              mortgageInfos.push(proId);\n              MessageMintInfo(msg.sender, true,\"\u6dfb\u52a0\u6210\u529f\");\n            return;\n        }else{\n             MessageMintInfo(msg.sender, false,\"\u9879\u76eeID\u5df2\u7ecf\u5b58\u5728\");\n            return;\n        }\n    }\n  /**\n   * @dev \u66f4\u65b0\u6570\u636e.\n   */\n    event MessageUpdateInfo(address sender,bool isScuccess,string message);\n    function updateMortgageInfo(string _projectId,string releaseAmount) onlyOwner{\n         bytes32 proId = stringToBytes32(_projectId);\n        if(mInfo[proId].projectId == proId){\n              mInfo[proId].releaseAmount = releaseAmount;\n              mortgageInfos.push(proId);\n              MessageUpdateInfo(msg.sender, true,\"\u4fee\u6539\u6210\u529f\");\n            return;\n        }else{\n             MessageUpdateInfo(msg.sender, false,\"\u9879\u76eeID\u4e0d\u5b58\u5728\");\n            return;\n        }\n    }\n     \n     \n  /**\n   * @dev \u67e5\u8be2\u6570\u636e.\n   */\n    function getMortgageInfo(string _projectId) \n    public view returns(string projectId,string currency,string mortgageAmount,string releaseAmount){\n         \n         bytes32 proId = stringToBytes32(_projectId);\n         \n         MortgageInfo memory mi = mInfo[proId];\n        \n        return (_projectId,mi.currency,mi.mortgageAmount,mi.releaseAmount);\n    }\n    \n     /// string\u7c7b\u578b\u8f6c\u5316\u4e3abytes32\u578b\u8f6c\n    function stringToBytes32(string memory source) constant internal returns(bytes32 result){\n        assembly{\n            result := mload(add(source,32))\n        }\n    }\n    /// bytes32\u7c7b\u578b\u8f6c\u5316\u4e3astring\u578b\u8f6c\n    function bytes32ToString(bytes32 x) constant internal returns(string){\n        bytes memory bytesString = new bytes(32);\n        uint charCount = 0 ;\n        for(uint j = 0 ; j<32;j++){\n            byte char = byte(bytes32(uint(x) *2 **(8*j)));\n            if(char !=0){\n                bytesString[charCount] = char;\n                charCount++;\n            }\n        }\n        bytes memory bytesStringTrimmed = new bytes(charCount);\n        for(j=0;j<charCount;j++){\n            bytesStringTrimmed[j]=bytesString[j];\n        }\n        return string(bytesStringTrimmed);\n    }\n\n}",
        "debug": "mem_128 +\n32 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_TokenMall_4 + calldata_TokenMall_4)): 0xa7d18fd5703fddff6f5377fa44900dfb4a10ffffe39800000000000000000060\ncalldata_TokenMall_4 + calldata_TokenMall_4: 0x7fffffffffffffffffffffffffffffffffffffff3fffffffffffffffffffff41\nstorage_0: 0x0\ncaller: 0x0\ncalldata_TokenMall_0: 0xe614c96100000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenMall: 0x4\ncalldata_TokenMall_cpy: 0x0\nstorage_0 +\nkeccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\ncalldata_TokenMall_cpy: 0x0\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `updateMortgageInfo(string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x8897290f8603c9ef3440003dbf47f97cf55c2e1b.sol",
        "function": "updateMortgageInfo(string,string)",
        "lineno": 62,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 4105,
        "code": "ng(bytes32 =>MortgageInfo) mInfo;\n  bytes32[] mortgageInfos;\n   \n  /**\n   * @dev \u6dfb\u52a0\u6570\u636e.\n   */\n    event MessageMintInfo(address sender,bool isScuccess,string message);\n    function mintMortgageInfo(string _projectId,string currency,string mortgageAmount,string releaseAmount) onlyOwner{\n        bytes32 proId = stringToBytes32(_projectId);\n        if(mInfo[proId].projectId != proId){\n              mInfo[proId].projectId = proId;\n              mInfo[proId].currency = currency;\n              mInfo[proId].mortgageAmount = mortgageAmount;\n              mInfo[proId].releaseAmount = releaseAmount;\n              mortgageInfos.push(proId);\n              MessageMintInfo(msg.sender, true,\"\u6dfb\u52a0\u6210\u529f\");\n            return;\n        }else{\n             MessageMintInfo(msg.sender, false,\"\u9879\u76eeID\u5df2\u7ecf\u5b58\u5728\");\n            return;\n        }\n    }\n  /**\n   * @dev \u66f4\u65b0\u6570\u636e.\n   */\n    event MessageUpdateInfo(address sender,bool isScuccess,string message);\n    function updateMortgageInfo(string _projectId,string releaseAmount) onlyOwner{\n         bytes32 proId = stringToBytes32(_projectId);\n        if(mInfo[proId].projectId == proId){\n              mInfo[proId].releaseAmount = releaseAmount;\n              mortgageInfos.push(proId);\n              MessageUpdateInfo(msg.sender, true,\"\u4fee\u6539\u6210\u529f\");\n            return;\n        }else{\n             MessageUpdateInfo(msg.sender, false,\"\u9879\u76eeID\u4e0d\u5b58\u5728\");\n            return;\n        }\n    }\n     \n     \n  /**\n   * @dev \u67e5\u8be2\u6570\u636e.\n   */\n    function getMortgageInfo(string _projectId) \n    public view returns(string projectId,string currency,string mortgageAmount,string releaseAmount){\n         \n         bytes32 proId = stringToBytes32(_projectId);\n         \n         MortgageInfo memory mi = mInfo[proId];\n        \n        return (_projectId,mi.currency,mi.mortgageAmount,mi.releaseAmount);\n    }\n    \n     /// string\u7c7b\u578b\u8f6c\u5316\u4e3abytes32\u578b\u8f6c\n    function stringToBytes32(string memory source) constant internal returns(bytes32 result){\n        assembly{\n            result := mload(add(source,32))\n        }\n    }\n    /// bytes32\u7c7b\u578b\u8f6c\u5316\u4e3astring\u578b\u8f6c\n    function bytes32ToString(bytes32 x) constant internal returns(string){\n        bytes memory bytesString = new bytes(32);\n        uint charCount = 0 ;\n        for(uint j = 0 ; j<32;j++){\n            byte char = byte(bytes32(uint(x) *2 **(8*j)));\n            if(char !=0){\n                bytesString[charCount] = char;\n                charCount++;\n            }\n        }\n        bytes memory bytesStringTrimmed = new bytes(charCount);\n        for(j=0;j<charCount;j++){\n            bytesStringTrimmed[j]=bytesString[j];\n        }\n        return string(bytesStringTrimmed);\n    }\n\n}",
        "debug": "mem_128 +\n32 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_TokenMall_4 + calldata_TokenMall_4)): 0x28\ncalldata_TokenMall_4 + calldata_TokenMall_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffee1\nstorage_0: 0x0\ncaller: 0x0\ncalldata_TokenMall_0: 0xe614c96100000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenMall: 0x4\ncalldata_TokenMall_cpy: 0x0\nstorage_0 +\nkeccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\ncalldata_TokenMall_cpy: 0x0\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `updateMortgageInfo(string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x8897290f8603c9ef3440003dbf47f97cf55c2e1b.sol",
        "function": "updateMortgageInfo(string,string)",
        "lineno": 62,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 4110,
        "code": "ng(bytes32 =>MortgageInfo) mInfo;\n  bytes32[] mortgageInfos;\n   \n  /**\n   * @dev \u6dfb\u52a0\u6570\u636e.\n   */\n    event MessageMintInfo(address sender,bool isScuccess,string message);\n    function mintMortgageInfo(string _projectId,string currency,string mortgageAmount,string releaseAmount) onlyOwner{\n        bytes32 proId = stringToBytes32(_projectId);\n        if(mInfo[proId].projectId != proId){\n              mInfo[proId].projectId = proId;\n              mInfo[proId].currency = currency;\n              mInfo[proId].mortgageAmount = mortgageAmount;\n              mInfo[proId].releaseAmount = releaseAmount;\n              mortgageInfos.push(proId);\n              MessageMintInfo(msg.sender, true,\"\u6dfb\u52a0\u6210\u529f\");\n            return;\n        }else{\n             MessageMintInfo(msg.sender, false,\"\u9879\u76eeID\u5df2\u7ecf\u5b58\u5728\");\n            return;\n        }\n    }\n  /**\n   * @dev \u66f4\u65b0\u6570\u636e.\n   */\n    event MessageUpdateInfo(address sender,bool isScuccess,string message);\n    function updateMortgageInfo(string _projectId,string releaseAmount) onlyOwner{\n         bytes32 proId = stringToBytes32(_projectId);\n        if(mInfo[proId].projectId == proId){\n              mInfo[proId].releaseAmount = releaseAmount;\n              mortgageInfos.push(proId);\n              MessageUpdateInfo(msg.sender, true,\"\u4fee\u6539\u6210\u529f\");\n            return;\n        }else{\n             MessageUpdateInfo(msg.sender, false,\"\u9879\u76eeID\u4e0d\u5b58\u5728\");\n            return;\n        }\n    }\n     \n     \n  /**\n   * @dev \u67e5\u8be2\u6570\u636e.\n   */\n    function getMortgageInfo(string _projectId) \n    public view returns(string projectId,string currency,string mortgageAmount,string releaseAmount){\n         \n         bytes32 proId = stringToBytes32(_projectId);\n         \n         MortgageInfo memory mi = mInfo[proId];\n        \n        return (_projectId,mi.currency,mi.mortgageAmount,mi.releaseAmount);\n    }\n    \n     /// string\u7c7b\u578b\u8f6c\u5316\u4e3abytes32\u578b\u8f6c\n    function stringToBytes32(string memory source) constant internal returns(bytes32 result){\n        assembly{\n            result := mload(add(source,32))\n        }\n    }\n    /// bytes32\u7c7b\u578b\u8f6c\u5316\u4e3astring\u578b\u8f6c\n    function bytes32ToString(bytes32 x) constant internal returns(string){\n        bytes memory bytesString = new bytes(32);\n        uint charCount = 0 ;\n        for(uint j = 0 ; j<32;j++){\n            byte char = byte(bytes32(uint(x) *2 **(8*j)));\n            if(char !=0){\n                bytesString[charCount] = char;\n                charCount++;\n            }\n        }\n        bytes memory bytesStringTrimmed = new bytes(charCount);\n        for(j=0;j<charCount;j++){\n            bytesStringTrimmed[j]=bytesString[j];\n        }\n        return string(bytesStringTrimmed);\n    }\n\n}",
        "debug": "keccac_3_+\nkeccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\ncalldata_TokenMall_cpy: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nmem_128 +\n32 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_TokenMall_4 + calldata_TokenMall_4)): 0x800000fffffff9faffffffedefefcbffefeecbb0607812fffe0100ffffffffe0\ncalldata_TokenMall_4 + calldata_TokenMall_4: 0x5ffffefffffffffffffffff2101034001011344fffffffffffffffffffffffa1\nstorage_0: 0x0\ncaller: 0x0\ncalldata_TokenMall_0: 0xe614c96100000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenMall: 0x4\ncalldata_TokenMall_cpy: 0x0\nstorage_0 +\nkeccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\ncalldata_TokenMall_cpy: 0x0\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `updateMortgageInfo(string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x8897290f8603c9ef3440003dbf47f97cf55c2e1b.sol",
        "function": "updateMortgageInfo(string,string)",
        "lineno": 62,
        "title": "Integer Overflow ",
        "type": "Warning"
      }
    ],
    "success": true
  }
}