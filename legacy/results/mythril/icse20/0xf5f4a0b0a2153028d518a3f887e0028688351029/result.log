{"error": null, "issues": [{"address": 971, "code": ");\n    event Transfer", "debug": "", "description": "The return value of an external call is not checked. Note that execution continue even if the called contract throws.", "filename": "/unique_chucks/24/0xf5f4a0b0a2153028d518a3f887e0028688351029.sol", "function": "fallback", "lineno": 227, "title": "Unchecked CALL return value", "type": "Informational"}, {"address": 4781, "code": "ress => uint256[]) public reservations;\n    mappi", "debug": "The exception is triggered under the following conditions:\n\ncalldata_tickets_32 + 4: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\ncalldata_tickets_4: 0x0\ncalldata_tickets_0: 0x118895c00000000000000000000000000000000000000000000000000000000\ncalldatasize_tickets: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/24/0xf5f4a0b0a2153028d518a3f887e0028688351029.sol", "function": "_function_0x0118895c", "lineno": 12, "title": "Exception state", "type": "Informational"}, {"address": 5991, "code": "t256[]) public ticketTransferers;\n    mapping(address ", "debug": "The exception is triggered under the following conditions:\n\ncalldata_tickets_32 + 4: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\ncalldata_tickets_4: 0x0\ncalldata_tickets_0: 0x136047ab00000000000000000000000000000000000000000000000000000000\ncalldatasize_tickets: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/24/0xf5f4a0b0a2153028d518a3f887e0028688351029.sol", "function": "_function_0x136047ab", "lineno": 23, "title": "Exception state", "type": "Informational"}, {"address": 6120, "code": "ng(address => uint256[]) public ticketsOwners;\n   ", "debug": "The exception is triggered under the following conditions:\n\ncalldata_tickets_32 + 4: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\ncalldata_tickets_4: 0x0\ncalldata_tickets_0: 0x4ff4ab6c00000000000000000000000000000000000000000000000000000000\ncalldatasize_tickets: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/24/0xf5f4a0b0a2153028d518a3f887e0028688351029.sol", "function": "_function_0x4ff4ab6c", "lineno": 6, "title": "Exception state", "type": "Informational"}, {"address": 7657, "code": " uint256 nOfSeats) {\n        i", "debug": "caller: 0x0\nstorage_keccac_calldata_tickets_4: 0x0\ncalldata_tickets_0: 0x70ee555c00000000000000000000000000000000000000000000000000000000\ncalldatasize_tickets: 0x4\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncallvalue: 0x0\n", "description": "A possible integer underflow exists in the function `returnTickets(uint256)`.\nThe subtraction may result in a value < 0.", "filename": "/unique_chucks/24/0xf5f4a0b0a2153028d518a3f887e0028688351029.sol", "function": "returnTickets(uint256)", "lineno": 195, "title": "Integer Underflow", "type": "Warning"}, {"address": 7728, "code": "oOfSeats) {\n            for(uint256 i =", "debug": "", "description": "The return value of an external call is not checked. Note that execution continue even if the called contract throws.", "filename": "/unique_chucks/24/0xf5f4a0b0a2153028d518a3f887e0028688351029.sol", "function": "returnTickets(uint256)", "lineno": 196, "title": "Unchecked CALL return value", "type": "Informational"}], "success": true}