{
  "contract": "0x640bd81d0a049a0419971086f9773bdee7294fc5",
  "tool": "mythril",
  "start": 1563664534.112773,
  "end": 1563664726.9665039,
  "duration": 192.85373091697693,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 292,
        "code": ";\n\n\ncontract Fast5",
        "debug": "callvalue: 0x4000000000000000\nstorage_0: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ngas: 0x35b60\ncalldata_Fast50plus_0: 0x500000000000000000000000000000000000000000000000000000000\ncalldatasize_Fast50plus: 0x4\n",
        "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/33/0x640bd81d0a049a0419971086f9773bdee7294fc5.sol",
        "function": "fallback",
        "lineno": 1,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 614,
        "code": "            pay();\n      ",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1934\nCall at address: 1626\n",
        "filename": "/unique_chucks/33/0x640bd81d0a049a0419971086f9773bdee7294fc5.sol",
        "function": "fallback",
        "lineno": 29,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 1398,
        "code": "expect){  ",
        "debug": "The exception is triggered under the following conditions:\n\ncallvalue: 0x2000000000000000\nstorage_0: 0x0\nstorage_1: 0x1\nretval_614: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ngas: 0x35b60\ncalldata_Fast50plus_0: 0x500000000000000000000000000000000000000000000000000000000\ncalldatasize_Fast50plus: 0x4\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/33/0x640bd81d0a049a0419971086f9773bdee7294fc5.sol",
        "function": "fallback",
        "lineno": 43,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 1626,
        "code": "         money -= dep.expect;   \n ",
        "debug": "SOLVER OUTPUT:\ncallvalue: 0x2000000000000000\nstorage_0: 0x0\nbalance_at_1461501637330902918203684832716283019655932542975 & 0: 0x0\nstorage_1 +\n18569430475105882587588266137607568536673111973893317399460219858819262702947 +\n2*storage_1: 0x0\nstorage_1: 0x0\nretval_614: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ngas: 0x35b60\ncalldata_Fast50plus_0: 0x500000000000000000000000000000000000000000000000000000000\ncalldatasize_Fast50plus: 0x4\n",
        "description": "In the function `fallback` a non-zero amount of Ether is sent to an address taken from storage slot 0.\nThere is a check on storage index 0. This storage slot can be written to by calling the function `fallback`.\n\nThere is a check on storage index 0. This storage slot can be written to by calling the function `fallback`.\nThere is a check on storage index 1. This storage slot can be written to by calling the function `fallback`.\nThere is a check on storage index 1. This storage slot can be written to by calling the function `fallback`.",
        "filename": "/unique_chucks/33/0x640bd81d0a049a0419971086f9773bdee7294fc5.sol",
        "function": "fallback",
        "lineno": 45,
        "title": "Ether send",
        "type": "Warning"
      },
      {
        "address": 1626,
        "code": "         money -= dep.expect;   \n ",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1934\nCall at address: 1626\n",
        "filename": "/unique_chucks/33/0x640bd81d0a049a0419971086f9773bdee7294fc5.sol",
        "function": "fallback",
        "lineno": 45,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 1626,
        "code": "         money -= dep.expect;   \n ",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function fallback. The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/33/0x640bd81d0a049a0419971086f9773bdee7294fc5.sol",
        "function": "fallback",
        "lineno": 45,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 1934,
        "code": " dep.expect -= money;      \n ",
        "debug": "SOLVER OUTPUT:\ncallvalue: 0x2000000000000000\nstorage_0: 0x0\nbalance_at_1461501637330902918203684832716283019655932542975 & 0: 0x0\nstorage_1 +\n18569430475105882587588266137607568536673111973893317399460219858819262702947 +\n2*storage_1: 0x100\nstorage_1: 0x0\nretval_614: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ngas: 0x35b60\ncalldata_Fast50plus_0: 0x500000000000000000000000000000000000000000000000000000000\ncalldatasize_Fast50plus: 0x4\n",
        "description": "In the function `fallback` a non-zero amount of Ether is sent to an address taken from storage slot 0.\nThere is a check on storage index 0. This storage slot can be written to by calling the function `fallback`.\n\nThere is a check on storage index 0. This storage slot can be written to by calling the function `fallback`.\nThere is a check on storage index 1. This storage slot can be written to by calling the function `fallback`.\nThere is a check on storage index 1. This storage slot can be written to by calling the function `fallback`.",
        "filename": "/unique_chucks/33/0x640bd81d0a049a0419971086f9773bdee7294fc5.sol",
        "function": "fallback",
        "lineno": 49,
        "title": "Ether send",
        "type": "Warning"
      },
      {
        "address": 1934,
        "code": " dep.expect -= money;      \n ",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function fallback. The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/33/0x640bd81d0a049a0419971086f9773bdee7294fc5.sol",
        "function": "fallback",
        "lineno": 49,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 1995,
        "code": ";                  ",
        "debug": "callvalue: 0x8059c43a77a0008\nstorage_0: 0x0\nbalance_at_1461501637330902918203684832716283019655932542975 & 0: 0x800000000000000000000000000004f9c9ff87befbf3c43b7b79f5fd32bba\nretval_1934: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_1 +\n18569430475105882587588266137607568536673111973893317399460219858819262702947 +\n2*storage_1: 0xc80360007628e33493b29380639aa9a000\nstorage_1: 0x0\nretval_614: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ngas: 0x35b60\ncalldata_Fast50plus_0: 0x500000000000000000000000000000000000000000000000000000000\ncalldatasize_Fast50plus: 0x4\n",
        "description": "A possible integer underflow exists in the function `fallback`.\nThe subtraction may result in a value < 0.",
        "filename": "/unique_chucks/33/0x640bd81d0a049a0419971086f9773bdee7294fc5.sol",
        "function": "fallback",
        "lineno": 50,
        "title": "Integer Underflow",
        "type": "Warning"
      },
      {
        "address": 2718,
        "code": "expect);\n ",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_Fast50plus_4: 0x0\nstorage_0: 0x0\ncalldata_Fast50plus_0: 0x9f9fb96800000000000000000000000000000000000000000000000000000000\ncalldatasize_Fast50plus: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/33/0x640bd81d0a049a0419971086f9773bdee7294fc5.sol",
        "function": "getDeposit(uint256)",
        "lineno": 62,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}