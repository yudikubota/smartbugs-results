{"error": null, "issues": [{"address": 1079, "code": "20;\n        rewardP", "debug": "storage_9: 0xd3ceea7f4abfef7fd2acd3f6c88e041981680b362705e599222d202003c0a041\nstorage_6: 0xcc2c2ec1ca4030d1928f10e8d05e55958e6ef22dc6d184194f2c178020040041\ntimestamp: 0xd3ceea7f4abfef7fd2acd3f6c88e041981680b362705e599222d202003c0a042\nstorage_15: 0x0\ncaller: 0x0\ncalldata_EtherSphere_0: 0x2724e03200000000000000000000000000000000000000000000000000000000\ncalldatasize_EtherSphere: 0x4\nstorage_4: 0x0\n", "description": "A possible integer overflow exists in the function `manualEndDay()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/7/0x9a2e9235f7a7ac7b899e5f3208fbb13c6985171a.sol", "function": "manualEndDay()", "lineno": 100, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1279, "code": "\n\n// Visit ethersp", "debug": "storage_1: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_12: 0x2b05b8fc818f8fe45a778ada55304b747dbd3087f6a87823fa5e77fa916f\nstorage_9: 0x0\ncallvalue: 0xaac43961159e5b645297728fc417cad15c08d4f3904edecdead74496e0918000\ntimestamp: 0x1\ncalldatasize_EtherSphere: 0x3\nstorage_3: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\nstorage_4: 0x0\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/7/0x9a2e9235f7a7ac7b899e5f3208fbb13c6985171a.sol", "function": "fallback", "lineno": 1, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1384, "code": "   else {\n  ", "debug": "storage_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_12: 0x0\nstorage_9: 0x0\nstorage_3: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncallvalue: 0x0\ntimestamp: 0x0\ncalldatasize_EtherSphere: 0x3\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/7/0x9a2e9235f7a7ac7b899e5f3208fbb13c6985171a.sol", "function": "fallback", "lineno": 76, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1402, "code": "rs[numBidders] = ", "debug": "storage_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_3: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_12: 0x1229921d5850bf7f0f31384000056e40f2264d2c25c2979e04ea046f732a\nstorage_9: 0x0\ncallvalue: 0x2e65e441f44dbb7fae5daf30686b7b446fdbcc784cee90d028963449d8100000\ntimestamp: 0x0\ncalldatasize_EtherSphere: 0x3\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/7/0x9a2e9235f7a7ac7b899e5f3208fbb13c6985171a.sol", "function": "fallback", "lineno": 77, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1429, "code": "}\n            setMi", "debug": "The exception is triggered under the following conditions:\n\nstorage_12: 0x0\nstorage_9: 0x0\nstorage_3: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncallvalue: 0x0\ntimestamp: 0x1\ncalldatasize_EtherSphere: 0x3\nstorage_1: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\nstorage_4: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/7/0x9a2e9235f7a7ac7b899e5f3208fbb13c6985171a.sol", "function": "fallback", "lineno": 79, "title": "Exception state", "type": "Informational"}, {"address": 1634, "code": "(bidPool[msg.sender] > highestBi", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xa73dac18106b675e0f204193bba1d0397015a4f9dfdc87dfdddfdeed57720c47\ncallvalue: 0xb3b3ad13ae82265dcf1fbd5fbc3ddf027365a790401e961e1d101e6552779974\nstorage_9: 0x0\nstorage_5: 0xb3b3ad13ae82265dcf1fbd5fbc3ddf027365a790401e961e1d101e6552779974\ntimestamp: 0x1\ncalldatasize_EtherSphere: 0x3\nstorage_14: 0x64\nstorage_4: 0x0\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/7/0x9a2e9235f7a7ac7b899e5f3208fbb13c6985171a.sol", "function": "fallback", "lineno": 47, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1857, "code": "on triggerPreJackpotLimit()", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x8247a0ff1d07530a6fcfb19c10ddd3c10002873109a5a98099dc00a14430400\nstorage_8: 0x911639c61a5b9b744419814c86eae8820caa705e0046f2364a1eb840a42115f7\ncallvalue: 0xdbd9916d901462fe45090c01b6a8e2c3cd3b55c8ad268d60c676b9d4a88c5180\nstorage_9: 0x0\nstorage_11: 0xe3fe0b7d81e4d82eec06071b77b6bfffdd3b7e3bbdc0e7f8d01479debccf557f\nstorage_5: 0xdbd9916d901462fe45090c01b6a8e2c3cd3b55c8ad268d60c676b9d4a88c5180\ntimestamp: 0x0\ncalldatasize_EtherSphere: 0x3\nstorage_14: 0x64\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/7/0x9a2e9235f7a7ac7b899e5f3208fbb13c6985171a.sol", "function": "fallback", "lineno": 54, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2349, "code": "  function addEtherToSp", "debug": "storage_7: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncallvalue: 0x57f25cd000000000000000000000000000000000000000000000000000000000\nstorage_15: 0x0\ncaller: 0x0\ncalldata_EtherSphere_0: 0x90d4bcc000000000000000000000000000000000000000000000000000000000\ncalldatasize_EtherSphere: 0x4\n", "description": "A possible integer overflow exists in the function `inject()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/7/0x9a2e9235f7a7ac7b899e5f3208fbb13c6985171a.sol", "function": "inject()", "lineno": 42, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2378, "code": "s[] public bidders;\n    ", "debug": "The exception is triggered under the following conditions:\n\ncalldata_EtherSphere_4: 0x0\nstorage_1: 0x0\ncalldata_EtherSphere_0: 0xcff29dfd00000000000000000000000000000000000000000000000000000000\ncalldatasize_EtherSphere: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/7/0x9a2e9235f7a7ac7b899e5f3208fbb13c6985171a.sol", "function": "_function_0xcff29dfd", "lineno": 7, "title": "Exception state", "type": "Informational"}, {"address": 2632, "debug": "storage_6: 0x5127100200a75c008a0114045050094000000440000000000000000000000001\nstorage_15: 0x0\ncaller: 0x0\ncalldata_EtherSphere_0: 0xefbe1c1c00000000000000000000000000000000000000000000000000000000\ncalldatasize_EtherSphere: 0x4\n", "description": "A possible integer overflow exists in the function `end()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/7/0x9a2e9235f7a7ac7b899e5f3208fbb13c6985171a.sol", "function": "end()", "lineno": 225, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2636, "debug": "storage_9: 0xf40bf02262c0fd5d1ceefd100af6e1484dfa2a46200114da184b9804455789a3\nstorage_6: 0xf7f2efe63660540cd8645248fcb46b333727f8458a5b42551ff26a4284e37e55\nstorage_15: 0x0\ncaller: 0x0\ncalldata_EtherSphere_0: 0xefbe1c1c00000000000000000000000000000000000000000000000000000000\ncalldatasize_EtherSphere: 0x4\n", "description": "A possible integer overflow exists in the function `end()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/7/0x9a2e9235f7a7ac7b899e5f3208fbb13c6985171a.sol", "function": "end()", "lineno": 225, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2822, "code": "Reward() private{\n        uint porti", "debug": "storage_7: 0xff3717ddf147ba7fd6976a72ee859c9c251431c6dd4346e384e0fd941c87b69c\nstorage_13: 0xde9aa0007ffff9dbbb05d00001000207fffdffbfffbfbfbfffbfbfefbfbff7f6\nstorage_9: 0x0\nstorage_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ntimestamp: 0x1\nstorage_15: 0x0\ncaller: 0x0\ncalldata_EtherSphere_0: 0x2724e03200000000000000000000000000000000000000000000000000000000\ncalldatasize_EtherSphere: 0x4\n", "description": "A possible integer overflow exists in the function `manualEndDay()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/7/0x9a2e9235f7a7ac7b899e5f3208fbb13c6985171a.sol", "function": "manualEndDay()", "lineno": 114, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2852, "code": "mount, highestB", "debug": "storage_7: 0x840000000000000000000000000002b0001750ea0ea0ea0ea0ea0ea0ea0ea0ed\nstorage_13: 0x0\nstorage_9: 0x0\nstorage_8: 0x1\nstorage_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ntimestamp: 0x1\nstorage_15: 0x0\ncaller: 0x0\ncalldata_EtherSphere_0: 0x2724e03200000000000000000000000000000000000000000000000000000000\ncalldatasize_EtherSphere: 0x4\n", "description": "A possible integer overflow exists in the function `manualEndDay()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/7/0x9a2e9235f7a7ac7b899e5f3208fbb13c6985171a.sol", "function": "manualEndDay()", "lineno": 135, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2977, "code": "ysBidTotal", "debug": "The exception is triggered under the following conditions:\n\nstorage_9: 0x0\nstorage_8: 0x0\nstorage_7: 0x1\nstorage_13: 0x0\nstorage_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ntimestamp: 0x1\nstorage_15: 0x0\ncaller: 0x0\ncalldata_EtherSphere_0: 0x2724e03200000000000000000000000000000000000000000000000000000000\ncalldatasize_EtherSphere: 0x4\nstorage_1: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/7/0x9a2e9235f7a7ac7b899e5f3208fbb13c6985171a.sol", "function": "manualEndDay()", "lineno": 120, "title": "Exception state", "type": "Informational"}, {"address": 3114, "code": "Pool - distributed;\n            }\n            distri", "debug": "The exception is triggered under the following conditions:\n\nstorage_4: 0xfffffefffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_9: 0x0\nstorage_1: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ntimestamp: 0x1\ncalldatasize_EtherSphere: 0x3\nstorage_8: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/7/0x9a2e9235f7a7ac7b899e5f3208fbb13c6985171a.sol", "function": "fallback", "lineno": 123, "title": "Exception state", "type": "Informational"}, {"address": 3333, "code": "game is inactive for more ", "debug": "", "description": "In the function `fallback` the following predictable state variables are used to determine Ether recipient:\n- block.timestamp\n", "filename": "/unique_chucks/7/0x9a2e9235f7a7ac7b899e5f3208fbb13c6985171a.sol", "function": "fallback", "lineno": 221, "title": "Dependence on predictable environment variable", "type": "Warning"}, {"address": 3333, "code": "game is inactive for more ", "debug": "", "description": "A possible transaction order independence vulnerability exists in function _fees(). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/7/0x9a2e9235f7a7ac7b899e5f3208fbb13c6985171a.sol", "function": "_fees()", "lineno": 221, "title": "Transaction order dependence", "type": "Warning"}, {"address": 3333, "code": "game is inactive for more ", "debug": "", "description": "The return value of an external call is not checked. Note that execution continue even if the called contract throws.", "filename": "/unique_chucks/7/0x9a2e9235f7a7ac7b899e5f3208fbb13c6985171a.sol", "function": "_fees()", "lineno": 221, "title": "Unchecked CALL return value", "type": "Informational"}, {"address": 3550, "code": " ismain payable{\n     ", "debug": "storage_12: 0x5420f860cbaa38a1a0b3b190441c5a362d821016921e61f0365c77d2d7e1804c\nstorage_9: 0x0\ntimestamp: 0x1\ncalldatasize_EtherSphere: 0x3\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\nstorage_4: 0x0\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/7/0x9a2e9235f7a7ac7b899e5f3208fbb13c6985171a.sol", "function": "fallback", "lineno": 189, "title": "Integer Overflow ", "type": "Warning"}, {"address": 3649, "code": "tJackpot = (todaysBidTotal + ms", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x7fbffffffffffffffffffffffffffffffffffffffffffffffffffffffff80000\ncallvalue: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_9: 0x0\nstorage_14: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9b\nstorage_5: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ntimestamp: 0x1\ncalldatasize_EtherSphere: 0x3\nstorage_4: 0x0\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/7/0x9a2e9235f7a7ac7b899e5f3208fbb13c6985171a.sol", "function": "fallback", "lineno": 57, "title": "Integer Overflow ", "type": "Warning"}, {"address": 3658, "code": "msg.sender];\n        bool ", "debug": "storage_7: 0xa000000080c000000080002000000001000000002000000000000008bee700b2\nstorage_14: 0xb3a4d6ce765fca0bbe39b13e4747904be0da89822e9f269f203ab0340007f1e6\nstorage_9: 0x0\ncallvalue: 0x0\nstorage_5: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ntimestamp: 0x1\ncalldatasize_EtherSphere: 0x3\nstorage_4: 0x0\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/7/0x9a2e9235f7a7ac7b899e5f3208fbb13c6985171a.sol", "function": "fallback", "lineno": 56, "title": "Integer Overflow ", "type": "Warning"}, {"address": 3766, "code": "ction containsSende", "debug": "", "description": "In the function `manualEndDay()` the following predictable state variables are used to determine Ether recipient:\n- block.timestamp\n", "filename": "/unique_chucks/7/0x9a2e9235f7a7ac7b899e5f3208fbb13c6985171a.sol", "function": "manualEndDay()", "lineno": 146, "title": "Dependence on predictable environment variable", "type": "Warning"}, {"address": 3766, "code": "ction containsSende", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3333\nCall at address: 3766\n", "filename": "/unique_chucks/7/0x9a2e9235f7a7ac7b899e5f3208fbb13c6985171a.sol", "function": "fallback", "lineno": 146, "title": "Multiple Calls", "type": "Information"}, {"address": 3766, "code": "ction containsSende", "debug": "", "description": "A possible transaction order independence vulnerability exists in function manualEndDay(). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/7/0x9a2e9235f7a7ac7b899e5f3208fbb13c6985171a.sol", "function": "manualEndDay()", "lineno": 146, "title": "Transaction order dependence", "type": "Warning"}, {"address": 3766, "code": "ction containsSende", "debug": "", "description": "The return value of an external call is not checked. Note that execution continue even if the called contract throws.", "filename": "/unique_chucks/7/0x9a2e9235f7a7ac7b899e5f3208fbb13c6985171a.sol", "function": "manualEndDay()", "lineno": 146, "title": "Unchecked CALL return value", "type": "Informational"}], "success": true}