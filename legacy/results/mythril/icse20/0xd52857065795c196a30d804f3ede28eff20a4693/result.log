{"error": null, "issues": [{"address": 2162, "code": "o := ml", "debug": "calldata_TokenConverterOracle2_4: 0x100000000000000000000000000000000000000000000000000000000000000\ncalldata_TokenConverterOracle2_0: 0x1b962c6500000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenConverterOracle2: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `decodeCurrency(bytes32)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/35/0xd52857065795c196a30d804f3ede28eff20a4693.sol", "function": "decodeCurrency(bytes32)", "lineno": 97, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2713, "code": "t(msg.sender, _symbol, _cache.rate, _cac", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/35/0xd52857065795c196a30d804f3ede28eff20a4693.sol", "function": "getRate(bytes32,bytes)", "lineno": 279, "title": "Message call to external contract", "type": "Informational"}, {"address": 2713, "code": "t(msg.sender, _symbol, _cache.rate, _cac", "debug": "", "description": "A possible transaction order independence vulnerability exists in function getRate(bytes32,bytes). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/35/0xd52857065795c196a30d804f3ede28eff20a4693.sol", "function": "getRate(bytes32,bytes)", "lineno": 279, "title": "Transaction order dependence", "type": "Warning"}, {"address": 3967, "code": ") {\n            cache[_symbol] = Cache({\n                decimals: currency.decimals,\n             ", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/35/0xd52857065795c196a30d804f3ede28eff20a4693.sol", "function": "getRate(bytes32,bytes)", "lineno": 290, "title": "Message call to external contract", "type": "Warning"}, {"address": 4897, "code": ";\n\ncontract Token ", "debug": "calldata_TokenConverterOracle2_4 + calldata_TokenConverterOracle2_4: 0x0\nstorage_2: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\ncalldata_TokenConverterOracle2_cpy: 0x0\nstorage_0: 0x0\ncaller: 0x0\ncalldata_TokenConverterOracle2_0: 0x433288a200000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenConverterOracle2: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `setCurrency(string,address,address,uint8,bool)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/35/0xd52857065795c196a30d804f3ede28eff20a4693.sol", "function": "setCurrency(string,address,address,uint8,bool)", "lineno": 1, "title": "Integer Overflow ", "type": "Warning"}, {"address": 6728, "code": ";\n\ncontract Token ", "debug": "calldata_TokenConverterOracle2_4 + calldata_TokenConverterOracle2_4: 0x0\nstorage_2: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_0: 0x0\ncaller: 0x0\ncalldata_TokenConverterOracle2_0: 0xa1d0a48f00000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenConverterOracle2: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `addCurrency(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/35/0xd52857065795c196a30d804f3ede28eff20a4693.sol", "function": "addCurrency(string)", "lineno": 1, "title": "Integer Overflow ", "type": "Warning"}, {"address": 7766, "code": "ev Returns the url where th", "debug": "The exception is triggered under the following conditions:\n\ncalldata_TokenConverterOracle2_4: 0x0\nstorage_2: 0x0\ncalldata_TokenConverterOracle2_0: 0xf6d1c27100000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenConverterOracle2: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/35/0xd52857065795c196a30d804f3ede28eff20a4693.sol", "function": "_function_0xf6d1c271", "lineno": 52, "title": "Exception state", "type": "Informational"}], "success": true}