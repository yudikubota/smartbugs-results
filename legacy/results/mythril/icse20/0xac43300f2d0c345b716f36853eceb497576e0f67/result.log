{"error": null, "issues": [{"address": 996, "debug": "calldata_LevelWhitelistedIICO_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_LevelWhitelistedIICO_0: 0x106c644100000000000000000000000000000000000000000000000000000000\ncalldatasize_LevelWhitelistedIICO: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `removeReinforcedWhitelist(address[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/7/0xac43300f2d0c345b716f36853eceb497576e0f67.sol", "function": "removeReinforcedWhitelist(address[])", "lineno": 446, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1251, "code": "{\n        for(uint i=0;i<_buyersToWhitelist.length;++i)\n            reinforcedWhitelist[_buyersToWhitelist[i]]=true;\n    }\n    \n    /** @dev Remove buyers from the base whitelist.\n     *  @param _bu", "debug": "calldata_LevelWhitelistedIICO_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_LevelWhitelistedIICO_0: 0x1552cb0400000000000000000000000000000000000000000000000000000000\ncalldatasize_LevelWhitelistedIICO: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `addBaseWhitelist(address[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/7/0xac43300f2d0c345b716f36853eceb497576e0f67.sol", "function": "addBaseWhitelist(address[])", "lineno": 425, "title": "Integer Overflow ", "type": "Warning"}, {"address": 3804, "code": "ransfer(bid.contrib);\n    }\n\n    /** @dev Fallback. Make a bid if ETH are sent. Redeem all the bids of ", "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller +\n0: 0x0\nstorage_13: 0x0\nstorage_5 +\nkeccac_storage_keccac_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller_+\n0: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_12: 0xff00\ncalldatasize_LevelWhitelistedIICO: 0x3\nstorage_15: 0x0\nstorage_2 + keccac_storage_13: 0x0\nstorage_2 +\nkeccac_storage_keccac_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller_+\n0: 0x0\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/7/0xac43300f2d0c345b716f36853eceb497576e0f67.sol", "function": "fallback", "lineno": 270, "title": "Exception state", "type": "Informational"}, {"address": 3942, "code": "e.\n            bid.contributor.transfer(bid.contrib);\n    }\n\n    /** @dev Fallback. Make a bid if ETH are sent. Redeem all the bids of t", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/7/0xac43300f2d0c345b716f36853eceb497576e0f67.sol", "function": "fallback", "lineno": 269, "title": "Message call to external contract", "type": "Informational"}, {"address": 3942, "code": "e.\n            bid.contributor.transfer(bid.contrib);\n    }\n\n    /** @dev Fallback. Make a bid if ETH are sent. Redeem all the bids of t", "debug": "", "description": "A possible transaction order independence vulnerability exists in function fallback. The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/7/0xac43300f2d0c345b716f36853eceb497576e0f67.sol", "function": "fallback", "lineno": 269, "title": "Transaction order dependence", "type": "Warning"}, {"address": 4271, "code": " * bid.bonus) / BONUS_DIVISOR;\n    ", "debug": "storage_3 + keccac_storage_13: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_14: 0x57f25cd000000000000000000000000000000000000000000000000000000000\ntimestamp: 0x0\ncalldata_LevelWhitelistedIICO_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_12: 0x0\nstorage_8: 0x0\ncalldata_LevelWhitelistedIICO_0: 0x5261aea00000000000000000000000000000000000000000000000000000000\ncalldatasize_LevelWhitelistedIICO: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `finalize(uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/7/0xac43300f2d0c345b716f36853eceb497576e0f67.sol", "function": "finalize(uint256)", "lineno": 236, "title": "Integer Overflow ", "type": "Warning"}, {"address": 4284, "code": "   } else { // We found the cut-off. This bid", "debug": "storage_3 + keccac_storage_13: 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffbfffffff\nstorage_14: 0xfffffffffffffffffffffffffffffffffffffffffffffff7ffffffffffffffff\ntimestamp: 0x0\nstorage_2 + keccac_storage_13: 0x7ffffffffffffffffffffffffffffffffffffffffffffff7ffffffffbfffffff\ncalldata_LevelWhitelistedIICO_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_12: 0x0\nstorage_8: 0x0\ncalldata_LevelWhitelistedIICO_0: 0x5261aea00000000000000000000000000000000000000000000000000000000\ncalldatasize_LevelWhitelistedIICO: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `finalize(uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/7/0xac43300f2d0c345b716f36853eceb497576e0f67.sol", "function": "finalize(uint256)", "lineno": 238, "title": "Integer Overflow ", "type": "Warning"}, {"address": 4505, "code": "   localSumAcceptedContrib += bid.contrib;\n    ", "debug": "", "description": "In the function `finalize(uint256)` the following predictable state variables are used to determine Ether recipient:\n- block.timestamp\n", "filename": "/unique_chucks/7/0xac43300f2d0c345b716f36853eceb497576e0f67.sol", "function": "finalize(uint256)", "lineno": 244, "title": "Dependence on predictable environment variable", "type": "Warning"}, {"address": 4505, "code": "   localSumAcceptedContrib += bid.contrib;\n    ", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 4647\n", "filename": "/unique_chucks/7/0xac43300f2d0c345b716f36853eceb497576e0f67.sol", "function": "finalize(uint256)", "lineno": 244, "title": "Multiple Calls", "type": "Information"}, {"address": 4505, "code": "   localSumAcceptedContrib += bid.contrib;\n    ", "debug": "", "description": "A possible transaction order independence vulnerability exists in function finalize(uint256). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/7/0xac43300f2d0c345b716f36853eceb497576e0f67.sol", "function": "finalize(uint256)", "lineno": 244, "title": "Transaction order dependence", "type": "Warning"}, {"address": 4505, "code": "   localSumAcceptedContrib += bid.contrib;\n    ", "debug": "", "description": "The return value of an external call is not checked. Note that execution continue even if the called contract throws.", "filename": "/unique_chucks/7/0xac43300f2d0c345b716f36853eceb497576e0f67.sol", "function": "finalize(uint256)", "lineno": 244, "title": "Unchecked CALL return value", "type": "Informational"}, {"address": 4647, "code": "cceptedContrib;\n        sumAcceptedVirtua", "debug": "", "description": "In the function `finalize(uint256)` the following predictable state variables are used to determine Ether recipient:\n- block.timestamp\n", "filename": "/unique_chucks/7/0xac43300f2d0c345b716f36853eceb497576e0f67.sol", "function": "finalize(uint256)", "lineno": 252, "title": "Dependence on predictable environment variable", "type": "Warning"}, {"address": 4647, "code": "cceptedContrib;\n        sumAcceptedVirtua", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 4647\nCall at address: 4505\nCall at address: 4647\nCall at address: 4505\nCall at address: 4647\nCall at address: 4505\nCall at address: 4505\n", "filename": "/unique_chucks/7/0xac43300f2d0c345b716f36853eceb497576e0f67.sol", "function": "finalize(uint256)", "lineno": 252, "title": "Multiple Calls", "type": "Information"}, {"address": 4647, "code": "cceptedContrib;\n        sumAcceptedVirtua", "debug": "", "description": "A possible transaction order independence vulnerability exists in function finalize(uint256). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/7/0xac43300f2d0c345b716f36853eceb497576e0f67.sol", "function": "finalize(uint256)", "lineno": 252, "title": "Transaction order dependence", "type": "Warning"}, {"address": 4647, "code": "cceptedContrib;\n        sumAcceptedVirtua", "debug": "", "description": "The return value of an external call is not checked. Note that execution continue even if the called contract throws.", "filename": "/unique_chucks/7/0xac43300f2d0c345b716f36853eceb497576e0f67.sol", "function": "finalize(uint256)", "lineno": 252, "title": "Unchecked CALL return value", "type": "Informational"}, {"address": 5376, "code": "  *  In practice, use", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/7/0xac43300f2d0c345b716f36853eceb497576e0f67.sol", "function": "_function_0x144fa6d7", "lineno": 147, "title": "Message call to external contract", "type": "Warning"}, {"address": 5437, "code": "in the list.\n     *  In practice, use", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/7/0xac43300f2d0c345b716f36853eceb497576e0f67.sol", "function": "_function_0x144fa6d7", "lineno": 146, "title": "State change after external call", "type": "Warning"}, {"address": 5713, "code": "tor to a list of its bid ID.\n    uint public lastBid", "debug": "The exception is triggered under the following conditions:\n\ncalldata_LevelWhitelistedIICO_32 + 4: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\ncalldata_LevelWhitelistedIICO_4: 0x0\ncalldata_LevelWhitelistedIICO_0: 0x1def6bad00000000000000000000000000000000000000000000000000000000\ncalldatasize_LevelWhitelistedIICO: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/7/0xac43300f2d0c345b716f36853eceb497576e0f67.sol", "function": "_function_0x1def6bad", "lineno": 69, "title": "Exception state", "type": "Informational"}, {"address": 6092, "code": "ave to be cal", "debug": "storage_4 + keccac_calldata_LevelWhitelistedIICO_4: 0x8000000000000000000000000000000000000000000000000000000000000000\nstorage_5 + keccac_calldata_LevelWhitelistedIICO_4: 0x0\ntimestamp: 0x0\nstorage_6: 0x1\nstorage_7: 0x1\ncaller: 0x0\ncalldata_LevelWhitelistedIICO_0: 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000\ncalldatasize_LevelWhitelistedIICO: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `withdraw(uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/7/0xac43300f2d0c345b716f36853eceb497576e0f67.sol", "function": "withdraw(uint256)", "lineno": 217, "title": "Integer Overflow ", "type": "Warning"}, {"address": 6158, "code": "min(n,_maxIt)) where n is t", "debug": "", "description": "In the function `withdraw(uint256)` the following predictable state variables are used to determine Ether recipient:\n- block.timestamp\n- block.timestamp\n", "filename": "/unique_chucks/7/0xac43300f2d0c345b716f36853eceb497576e0f67.sol", "function": "withdraw(uint256)", "lineno": 218, "title": "Dependence on predictable environment variable", "type": "Warning"}, {"address": 8007, "code": "      nextB", "debug": "storage_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ntimestamp: 0x0\nstorage_25650552922148892519344032483236097322509251582074379366566173648062335731133: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_2 +\nkeccac_storage_25650552922148892519344032483236097322509251582074379366566173648062335731131: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xff00\nstorage_8: 0x1\nstorage_5: 0x0\ncallvalue: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldatasize_LevelWhitelistedIICO: 0x3\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/7/0xac43300f2d0c345b716f36853eceb497576e0f67.sol", "function": "fallback", "lineno": 161, "title": "Integer Overflow ", "type": "Warning"}, {"address": 8412, "code": "Coin Offering\n *  ", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ntimestamp: 0x0\nstorage_6: 0x1\nstorage_25650552922148892519344032483236097322509251582074379366566173648062335731133: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_2 +\nkeccac_storage_25650552922148892519344032483236097322509251582074379366566173648062335731131: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_8: 0x1\nstorage_5: 0x0\ncallvalue: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldatasize_LevelWhitelistedIICO: 0x3\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/7/0xac43300f2d0c345b716f36853eceb497576e0f67.sol", "function": "fallback", "lineno": 1, "title": "Integer Overflow ", "type": "Warning"}], "success": true}