{
  "contract": "0x9cea5d2db84075f80142dc8746297e3905f1ad69",
  "tool": "mythril",
  "start": 1563647677.084195,
  "end": 1563647699.2358809,
  "duration": 22.15168595314026,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 2974,
        "code": "mestamp.sub(start)).di",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/30/0x9cea5d2db84075f80142dc8746297e3905f1ad69.sol",
        "function": "_function_0x74a8f103",
        "lineno": 304,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 3773,
        "code": "has already vested but hasn't b",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/30/0x9cea5d2db84075f80142dc8746297e3905f1ad69.sol",
        "function": "_function_0x74a8f103",
        "lineno": 284,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 3773,
        "code": "has already vested but hasn't b",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2974\n",
        "filename": "/unique_chucks/30/0x9cea5d2db84075f80142dc8746297e3905f1ad69.sol",
        "function": "_function_0x74a8f103",
        "lineno": 284,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 4755,
        "code": "\n  /**\n   * @d",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TokenVesting_4: 0xd44896a57581f566eb2dfdbddb6fab1f7f61029177bf7cb247c25ed6688768c3\nretval_2974: 0x1b4449a8718881496371294150cf13b83e605100043070c307e473d06b350c4b\ntimestamp: 0x0\nstorage_5: 0x1\nreturndatasize: 0x20\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_TokenVesting_0: 0x1916558700000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenVesting: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/30/0x9cea5d2db84075f80142dc8746297e3905f1ad69.sol",
        "function": "_function_0x19165587",
        "lineno": 42,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 4772,
        "code": "}\n\n/*",
        "debug": "storage_7: 0x57f25cd000000000000000000000000000000000000000000000000000000000\nstorage_6: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nretval_2974: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ntimestamp: 0x0\nstorage_5: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TokenVesting_4: 0x0\nreturndatasize: 0x20\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_TokenVesting_0: 0x384711cc00000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenVesting: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `_function_0x384711cc`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/30/0x9cea5d2db84075f80142dc8746297e3905f1ad69.sol",
        "function": "_function_0x384711cc",
        "lineno": 52,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 4785,
        "code": "itle Ownable\n ",
        "debug": "The exception is triggered under the following conditions:\n\nretval_2974: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TokenVesting_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nreturndatasize: 0x20\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_TokenVesting_0: 0x384711cc00000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenVesting: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/30/0x9cea5d2db84075f80142dc8746297e3905f1ad69.sol",
        "function": "_function_0x384711cc",
        "lineno": 55,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}