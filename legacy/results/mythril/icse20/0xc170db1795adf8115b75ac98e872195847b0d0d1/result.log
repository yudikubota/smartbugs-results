{"error": null, "issues": [{"address": 169, "code": "n(address _token, address[] memory recipients, uint[] memory amounts) public \n\t{\n\t\trequire(recipients.length <= MAX_BATCH_LEN); \n\t\tif(recipients.length != amounts.length)\n            revert();\n\t\tERC20 token = ERC20(_token);\n\t\tfor(uint i = 0; i < recipients.length; i++) \n\t\t{\n\t\t\trequire(token.transferFrom(msg.sender, recipients[i], amounts[i]));\n\t\t}\n\t}\n\t\n\tfunction batchSendToken2(add", "debug": "calldata_ERC20_32 + 4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_ERC20_0: 0x1560c8ab00000000000000000000000000000000000000000000000000000000\ncalldatasize_ERC20: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `_function_0x1560c8ab`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/32/0xc170db1795adf8115b75ac98e872195847b0d0d1.sol", "function": "_function_0x1560c8ab", "lineno": 23, "title": "Integer Overflow ", "type": "Warning"}, {"address": 370, "code": "token, address[] memory recipients, uint amount) public \n\t{\n\t\trequire(recipients.length <= MAX_BATCH_LEN); \n\n\t\tERC20 token = ERC20(_token);\n\t\tfor(uint i = 0; i < recipients.length; i++) \n\t\t{\n\t\t\trequire(token.transferFrom(msg.sender, recipients[i], amount));\n\t\t}\n\t}\n\t\n\tfunction batchSendETH(address[] memory ", "debug": "calldata_ERC20_32 + 4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_ERC20_0: 0x4985a05f00000000000000000000000000000000000000000000000000000000\ncalldatasize_ERC20: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `batchSendToken2(address,address[],uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/32/0xc170db1795adf8115b75ac98e872195847b0d0d1.sol", "function": "batchSendToken2(address,address[],uint256)", "lineno": 35, "title": "Integer Overflow ", "type": "Warning"}, {"address": 469, "code": " payable \n\t{\n\t\trequire(recipients.length <= MAX_BATCH_LEN); \n\n\t\tfor(uint i = 0; i < recipients.length; i++) \n\t\t{\n\t\t\taddress(uint160(recipients[i])).transfer(msg.value / recipients.length);\n\t\t}\n\t\tmsg.sender.transfer(address(this).balance);\n\t}\n}", "debug": "calldata_ERC20_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_ERC20_0: 0x794fff1000000000000000000000000000000000000000000000000000000000\ncalldatasize_ERC20: 0x4\n", "description": "A possible integer overflow exists in the function `batchSendETH2(address[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/32/0xc170db1795adf8115b75ac98e872195847b0d0d1.sol", "function": "batchSendETH2(address[])", "lineno": 59, "title": "Integer Overflow ", "type": "Warning"}, {"address": 558, "code": "ents, uint[] memory amounts) public payable \n\t{\n\t\trequire(recipients.length <= MAX_BATCH_LEN); \n\t\tif(recipients.length != amounts.length)\n            revert();\n\t\t\n\t\tfor(uint i = 0; i < recipients.length; i++) \n\t\t{\n\t\t\taddress(uint160(recipients[i])).transfer(amounts[i]);\n\t\t}\n\t\tmsg.sender.transfer(address(this).balance);\n\t}\n\t\n\tfunction batchSendETH2(address[] memory recipients) ", "debug": "calldata_ERC20_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_ERC20_0: 0xc76bd19300000000000000000000000000000000000000000000000000000000\ncalldatasize_ERC20: 0x4\n", "description": "A possible integer overflow exists in the function `_function_0xc76bd193`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/32/0xc170db1795adf8115b75ac98e872195847b0d0d1.sol", "function": "_function_0xc76bd193", "lineno": 46, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1010, "code": " recipients[i], amounts[i]));\n\t\t}\n\t}\n\t\n\tfunction batchSen", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/32/0xc170db1795adf8115b75ac98e872195847b0d0d1.sol", "function": "_function_0x1560c8ab", "lineno": 31, "title": "Message call to external contract", "type": "Warning"}, {"address": 1010, "code": " recipients[i], amounts[i]));\n\t\t}\n\t}\n\t\n\tfunction batchSen", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1010\n", "filename": "/unique_chucks/32/0xc170db1795adf8115b75ac98e872195847b0d0d1.sol", "function": "_function_0x1560c8ab", "lineno": 31, "title": "Multiple Calls", "type": "Information"}, {"address": 1375, "code": "[i], amount));\n\t\t}\n\t}\n\t\n\tfunction batchSendETH(addres", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/32/0xc170db1795adf8115b75ac98e872195847b0d0d1.sol", "function": "batchSendToken2(address,address[],uint256)", "lineno": 42, "title": "Message call to external contract", "type": "Warning"}, {"address": 1375, "code": "[i], amount));\n\t\t}\n\t}\n\t\n\tfunction batchSendETH(addres", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1375\n", "filename": "/unique_chucks/32/0xc170db1795adf8115b75ac98e872195847b0d0d1.sol", "function": "batchSendToken2(address,address[],uint256)", "lineno": 42, "title": "Multiple Calls", "type": "Information"}, {"address": 1578, "code": "length);\n\t\t}\n\t\tmsg.sender.transfer(address(this).balance);\n\t}\n}", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1685\nCall at address: 1685\nCall at address: 1685\n", "filename": "/unique_chucks/32/0xc170db1795adf8115b75ac98e872195847b0d0d1.sol", "function": "batchSendETH2(address[])", "lineno": 65, "title": "Multiple Calls", "type": "Information"}, {"address": 1685, "debug": "SOLVER OUTPUT:\ncalldata_ERC20_4 + calldata_ERC20_4: 0x3\nretval_1578: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_ERC20_0: 0x794fff1000000000000000000000000000000000000000000000000000000000\ncalldatasize_ERC20: 0x4\n", "description": "In the function `batchSendETH2(address[])` a non-zero amount of Ether is sent to msg.sender.\nIt seems that this function can be called without restrictions.", "filename": "/unique_chucks/32/0xc170db1795adf8115b75ac98e872195847b0d0d1.sol", "function": "batchSendETH2(address[])", "lineno": 69, "title": "Ether send", "type": "Warning"}, {"address": 1855, "code": "\n\t\t}\n\t\tmsg.sender.transfer(address(this).balance);\n\t", "debug": "SOLVER OUTPUT:\ncalldata_ERC20_4 + calldata_ERC20_4: 0x10\ncalldata_ERC20_0: 0xc76bd19300000000000000000000000000000000000000000000000000000000\ncalldatasize_ERC20: 0x4\nmem_128 + 32 + 32*calldata_ERC20_4 + calldata_ERC20_4: 0x10\n", "description": "In the function `_function_0xc76bd193` a non-zero amount of Ether is sent to an address taken from function arguments.\nIt seems that this function can be called without restrictions.", "filename": "/unique_chucks/32/0xc170db1795adf8115b75ac98e872195847b0d0d1.sol", "function": "_function_0xc76bd193", "lineno": 54, "title": "Ether send", "type": "Warning"}, {"address": 1855, "code": "\n\t\t}\n\t\tmsg.sender.transfer(address(this).balance);\n\t", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1962\nCall at address: 1962\n", "filename": "/unique_chucks/32/0xc170db1795adf8115b75ac98e872195847b0d0d1.sol", "function": "_function_0xc76bd193", "lineno": 54, "title": "Multiple Calls", "type": "Information"}, {"address": 1962, "code": "ion batchSendETH2(address[] memory recipie", "debug": "SOLVER OUTPUT:\nmem_128 + 32 + 32*calldata_ERC20_4 + calldata_ERC20_4: 0x2\ncalldata_ERC20_4 + calldata_ERC20_4: 0x2\nretval_1855: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_ERC20_0: 0xc76bd19300000000000000000000000000000000000000000000000000000000\ncalldatasize_ERC20: 0x4\n", "description": "In the function `_function_0xc76bd193` a non-zero amount of Ether is sent to msg.sender.\nIt seems that this function can be called without restrictions.", "filename": "/unique_chucks/32/0xc170db1795adf8115b75ac98e872195847b0d0d1.sol", "function": "_function_0xc76bd193", "lineno": 59, "title": "Ether send", "type": "Warning"}], "success": true}