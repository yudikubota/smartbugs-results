{
  "contract": "0x11016adcb85b65a0da8d8ddc3ade69dbad6bbca4",
  "tool": "mythril",
  "start": 1563471076.645152,
  "end": 1563471361.031948,
  "duration": 284.38679599761963,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 1372,
        "code": "der, _value);\n\n        //call the receiveApproval function on the contract you want to be notified. This crafts the function signature manually so one doesn't have to include a contract in here just for this.\n        //receiveApproval(address _from, uint256 _value, address _tokenContract, bytes _extraData)\n        //it is assumed that when does this that the call *should* succeed, otherwise one would use vanilla approve instead.\n        if(!_spender.call(bytes4(bytes32(keccak256(\"receiveApproval(address,uint256,address,bytes)\"))), msg.sender, _value, this, _extraData)) { throw; }\n        return true;\n    }\n}\n\ncontract ThreeDBToken is HumanStandardToken(10000000000000000000000000000,\"3D BlockChain Token\",18,\"3DB\"){\n function () public {\n        //if ether is sent to this address, send it back.\n        ",
        "debug": "calldata_Token_32 + 36: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_Token_0: 0xcae9ca5100000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `approveAndCall(address,uint256,bytes)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/1/0x11016adcb85b65a0da8d8ddc3ade69dbad6bbca4.sol",
        "function": "approveAndCall(address,uint256,bytes)",
        "lineno": 193,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 5310,
        "code": "HumanStandardToken(10000000000000000000000000000,\"3D BlockChain Token\",18,\"3DB\"){\n function () public {\n        //if ether is sen",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/1/0x11016adcb85b65a0da8d8ddc3ade69dbad6bbca4.sol",
        "function": "approveAndCall(address,uint256,bytes)",
        "lineno": 203,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 6010,
        "code": "    r",
        "debug": "calldata_Token_32 + 4: 0x57f25cd000000000000000000000000000000000000000000000000000000000\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_Token_4: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncalldata_Token_0: 0xd73dd62300000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `increaseApproval(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/1/0x11016adcb85b65a0da8d8ddc3ade69dbad6bbca4.sol",
        "function": "increaseApproval(address,uint256)",
        "lineno": 30,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 6023,
        "code": ";\n  }\n}\n\n\ncont",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_Token_4: 0x1\ncalldata_Token_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_Token_0: 0xd73dd62300000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/1/0x11016adcb85b65a0da8d8ddc3ade69dbad6bbca4.sol",
        "function": "increaseApproval(address,uint256)",
        "lineno": 30,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}