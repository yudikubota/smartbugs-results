{
  "contract": "0x826bfd7c76625d9d28f5465dd1dd31a67c676332",
  "tool": "mythril",
  "start": 1563325442.0283027,
  "end": 1563325909.6254232,
  "duration": 467.59712052345276,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 2320,
        "code": "ens[tokens.lengt",
        "debug": "storage_2: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_0: 0x0\ncaller: 0x0\ncalldata_SuperToken_0: 0x1173a7400000000000000000000000000000000000000000000000000000000\ncalldatasize_SuperToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `mintToken(address)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x826bfd7c76625d9d28f5465dd1dd31a67c676332.sol",
        "function": "mintToken(address)",
        "lineno": 58,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2353,
        "code": "ner;\n        balances[_ow",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_2: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_0: 0x0\ncaller: 0x0\ncalldata_SuperToken_0: 0x1173a7400000000000000000000000000000000000000000000000000000000\ncalldatasize_SuperToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0x826bfd7c76625d9d28f5465dd1dd31a67c676332.sol",
        "function": "mintToken(address)",
        "lineno": 59,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2504,
        "code": "wner, tokens.length -",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_SuperToken_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_2: 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_0: 0x0\ncaller: 0x0\ncalldata_SuperToken_0: 0x1173a7400000000000000000000000000000000000000000000000000000000\ncalldatasize_SuperToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `mintToken(address)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x826bfd7c76625d9d28f5465dd1dd31a67c676332.sol",
        "function": "mintToken(address)",
        "lineno": 61,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2811,
        "code": "   }\n   \n    fun",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_SuperToken_32 + 4: 0x0\nstorage_2: 0x0\ncalldata_SuperToken_0: 0x95ea7b300000000000000000000000000000000000000000000000000000000\ncalldatasize_SuperToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0x826bfd7c76625d9d28f5465dd1dd31a67c676332.sol",
        "function": "approve(address,uint256)",
        "lineno": 54,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3273,
        "code": "lementsERC721 = true;",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_SuperToken_4: 0x0\nstorage_2: 0x0\ncalldata_SuperToken_0: 0x4f64b2be00000000000000000000000000000000000000000000000000000000\ncalldatasize_SuperToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0x826bfd7c76625d9d28f5465dd1dd31a67c676332.sol",
        "function": "_function_0x4f64b2be",
        "lineno": 44,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3389,
        "code": "int256 _tokenId)",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_SuperToken_4: 0x0\nstorage_2: 0x0\ncalldata_SuperToken_0: 0x6352211e00000000000000000000000000000000000000000000000000000000\ncalldatasize_SuperToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0x826bfd7c76625d9d28f5465dd1dd31a67c676332.sol",
        "function": "ownerOf(uint256)",
        "lineno": 87,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3564,
        "code": "int256 _tokenId)",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_SuperToken_4: 0x0\nstorage_2: 0x0\ncalldata_SuperToken_0: 0x76aed2e100000000000000000000000000000000000000000000000000000000\ncalldatasize_SuperToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0x826bfd7c76625d9d28f5465dd1dd31a67c676332.sol",
        "function": "getTokenType(uint256)",
        "lineno": 68,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 4185,
        "code": "   }\n   \n    fun",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_SuperToken_32 + 4: 0x0\nstorage_2: 0x0\ncalldata_SuperToken_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncalldatasize_SuperToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0x826bfd7c76625d9d28f5465dd1dd31a67c676332.sol",
        "function": "transfer(address,uint256)",
        "lineno": 54,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 4851,
        "code": "d[_tokenId] = ad",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_SuperToken_32 + 36: 0x0\nstorage_2: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xff00\ncalldata_SuperToken_0: 0x905bd5e400000000000000000000000000000000000000000000000000000000\ncalldatasize_SuperToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0x826bfd7c76625d9d28f5465dd1dd31a67c676332.sol",
        "function": "superTransfer(address,address,uint256)",
        "lineno": 90,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 5177,
        "code": "Id);\n    }\n\n    func",
        "debug": "calldata_SuperToken_32 + 36: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_SuperToken_4: 0x0\ncalldata_SuperToken_4: 0x0\nstorage_0 +\n29102676481673041902632991033461445430619272659676223336789171408008386403022 +\ncalldata_SuperToken_32 + 36: 0x0\nstorage_2: 0x1\ncaller: 0x0\nstorage_keccac_calldata_SuperToken_32_+_36: 0x0\ncalldata_SuperToken_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_SuperToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer underflow exists in the function `transferFrom(address,address,uint256)`.\nThe subtraction may result in a value < 0.",
        "filename": "/unique_contracts/0x826bfd7c76625d9d28f5465dd1dd31a67c676332.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 93,
        "title": "Integer Underflow",
        "type": "Warning"
      },
      {
        "address": 5255,
        "code": "er(address _to, ui",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_SuperToken_32_+_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_SuperToken_32 + 36: 0x0\ncalldata_SuperToken_4: 0x0\nstorage_0 +\n29102676481673041902632991033461445430619272659676223336789171408008386403022 +\ncalldata_SuperToken_32 + 36: 0x0\nstorage_2: 0x1\ncaller: 0x0\nstorage_keccac_calldata_SuperToken_32_+_36: 0x0\ncalldata_SuperToken_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_SuperToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `transferFrom(address,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x826bfd7c76625d9d28f5465dd1dd31a67c676332.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 96,
        "title": "Integer Overflow ",
        "type": "Warning"
      }
    ],
    "success": true
  }
}