{"error": null, "issues": [{"address": 1269, "code": "r,startId)>=1) {\n        i", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/35/0xcc20149f2933359e20fc26e062b6a0a9a7332ea1.sol", "function": "getBattleCardList(address)", "lineno": 116, "title": "Message call to external contract", "type": "Informational"}, {"address": 1269, "code": "r,startId)>=1) {\n        i", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1554\n", "filename": "/unique_chucks/35/0xcc20149f2933359e20fc26e062b6a0a9a7332ea1.sol", "function": "getBattleCardList(address)", "lineno": 116, "title": "Multiple Calls", "type": "Information"}, {"address": 1269, "code": "r,startId)>=1) {\n        i", "debug": "", "description": "A possible transaction order independence vulnerability exists in function getBattleCardList(address). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/35/0xcc20149f2933359e20fc26e062b6a0a9a7332ea1.sol", "function": "getBattleCardList(address)", "lineno": 116, "title": "Transaction order dependence", "type": "Warning"}, {"address": 1554, "code": "_owner,startId);\n        i++;\n     ", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/35/0xcc20149f2933359e20fc26e062b6a0a9a7332ea1.sol", "function": "getBattleCardList(address)", "lineno": 118, "title": "Message call to external contract", "type": "Informational"}, {"address": 2368, "code": "ss == 0) {\n      if (icount!=0) {\n", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/35/0xcc20149f2933359e20fc26e062b6a0a9a7332ea1.sol", "function": "getUpgradeValue(address,uint256,uint256,uint256)", "lineno": 130, "title": "Message call to external contract", "type": "Informational"}, {"address": 2368, "code": "ss == 0) {\n      if (icount!=0) {\n", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 6202\nCall at address: 5711\nCall at address: 5422\nCall at address: 5135\nCall at address: 4931\nCall at address: 4642\nCall at address: 4355\nCall at address: 4151\nCall at address: 3865\nCall at address: 3635\nCall at address: 3431\nCall at address: 3134\nCall at address: 2902\nCall at address: 2625\n", "filename": "/unique_chucks/35/0xcc20149f2933359e20fc26e062b6a0a9a7332ea1.sol", "function": "getUpgradeValue(address,uint256,uint256,uint256)", "lineno": 130, "title": "Multiple Calls", "type": "Information"}, {"address": 2368, "code": "ss == 0) {\n      if (icount!=0) {\n", "debug": "", "description": "A possible transaction order independence vulnerability exists in function getUpgradeValue(address,uint256,uint256,uint256). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/35/0xcc20149f2933359e20fc26e062b6a0a9a7332ea1.sol", "function": "getUpgradeValue(address,uint256,uint256,uint256)", "lineno": 130, "title": "Transaction order dependence", "type": "Warning"}, {"address": 2625, "code": "Value * 10000 * (10 + cards.getUnitCoinPro", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/35/0xcc20149f2933359e20fc26e062b6a0a9a7332ea1.sol", "function": "getUpgradeValue(address,uint256,uint256,uint256)", "lineno": 132, "title": "Message call to external contract", "type": "Informational"}, {"address": 2625, "code": "Value * 10000 * (10 + cards.getUnitCoinPro", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 6202\nCall at address: 5711\nCall at address: 5422\nCall at address: 5135\nCall at address: 4931\nCall at address: 4642\nCall at address: 4355\nCall at address: 4151\nCall at address: 3865\nCall at address: 3635\nCall at address: 3431\nCall at address: 3134\nCall at address: 2902\n", "filename": "/unique_chucks/35/0xcc20149f2933359e20fc26e062b6a0a9a7332ea1.sol", "function": "getUpgradeValue(address,uint256,uint256,uint256)", "lineno": 132, "title": "Multiple Calls", "type": "Information"}, {"address": 2625, "code": "Value * 10000 * (10 + cards.getUnitCoinPro", "debug": "", "description": "A possible transaction order independence vulnerability exists in function getUpgradeValue(address,uint256,uint256,uint256). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/35/0xcc20149f2933359e20fc26e062b6a0a9a7332ea1.sol", "function": "getUpgradeValue(address,uint256,uint256,uint256)", "lineno": 132, "title": "Transaction order dependence", "type": "Warning"}, {"address": 2902, "code": "ma.unitCoinProduction(unitId);\n      }\n     } else if", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/35/0xcc20149f2933359e20fc26e062b6a0a9a7332ea1.sol", "function": "getUpgradeValue(address,uint256,uint256,uint256)", "lineno": 134, "title": "Message call to external contract", "type": "Informational"}, {"address": 2902, "code": "ma.unitCoinProduction(unitId);\n      }\n     } else if", "debug": "", "description": "A possible transaction order independence vulnerability exists in function getUpgradeValue(address,uint256,uint256,uint256). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/35/0xcc20149f2933359e20fc26e062b6a0a9a7332ea1.sol", "function": "getUpgradeValue(address,uint256,uint256,uint256)", "lineno": 134, "title": "Transaction order dependence", "type": "Warning"}, {"address": 3134, "code": "deValue * 10000 * (schema.unitCoi", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/35/0xcc20149f2933359e20fc26e062b6a0a9a7332ea1.sol", "function": "getUpgradeValue(address,uint256,uint256,uint256)", "lineno": 138, "title": "Message call to external contract", "type": "Informational"}, {"address": 3431, "code": "nProduction(unitId);  \n      }\n    } else if (upgra", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/35/0xcc20149f2933359e20fc26e062b6a0a9a7332ea1.sol", "function": "getUpgradeValue(address,uint256,uint256,uint256)", "lineno": 140, "title": "Message call to external contract", "type": "Informational"}, {"address": 3431, "code": "nProduction(unitId);  \n      }\n    } else if (upgra", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3635\n", "filename": "/unique_chucks/35/0xcc20149f2933359e20fc26e062b6a0a9a7332ea1.sol", "function": "getUpgradeValue(address,uint256,uint256,uint256)", "lineno": 140, "title": "Multiple Calls", "type": "Information"}, {"address": 3431, "code": "nProduction(unitId);  \n      }\n    } else if (upgra", "debug": "", "description": "A possible transaction order independence vulnerability exists in function getUpgradeValue(address,uint256,uint256,uint256). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/35/0xcc20149f2933359e20fc26e062b6a0a9a7332ea1.sol", "function": "getUpgradeValue(address,uint256,uint256,uint256)", "lineno": 140, "title": "Transaction order dependence", "type": "Warning"}, {"address": 3635, "code": "gradeValue * 10000) / schema.unit", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/35/0xcc20149f2933359e20fc26e062b6a0a9a7332ea1.sol", "function": "getUpgradeValue(address,uint256,uint256,uint256)", "lineno": 140, "title": "Message call to external contract", "type": "Informational"}, {"address": 3635, "code": "gradeValue * 10000) / schema.unit", "debug": "", "description": "A possible transaction order independence vulnerability exists in function getUpgradeValue(address,uint256,uint256,uint256). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/35/0xcc20149f2933359e20fc26e062b6a0a9a7332ea1.sol", "function": "getUpgradeValue(address,uint256,uint256,uint256)", "lineno": 140, "title": "Transaction order dependence", "type": "Warning"}, {"address": 3865, "code": "itId) + cards.getUnitAttackIncrea", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/35/0xcc20149f2933359e20fc26e062b6a0a9a7332ea1.sol", "function": "getUpgradeValue(address,uint256,uint256,uint256)", "lineno": 143, "title": "Message call to external contract", "type": "Informational"}, {"address": 4151, "code": "ckMultiplier(player,unitId));\n    } else if", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/35/0xcc20149f2933359e20fc26e062b6a0a9a7332ea1.sol", "function": "getUpgradeValue(address,uint256,uint256,uint256)", "lineno": 145, "title": "Message call to external contract", "type": "Informational"}, {"address": 4151, "code": "ckMultiplier(player,unitId));\n    } else if", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 4355\n", "filename": "/unique_chucks/35/0xcc20149f2933359e20fc26e062b6a0a9a7332ea1.sol", "function": "getUpgradeValue(address,uint256,uint256,uint256)", "lineno": 145, "title": "Multiple Calls", "type": "Information"}, {"address": 4151, "code": "ckMultiplier(player,unitId));\n    } else if", "debug": "", "description": "A possible transaction order independence vulnerability exists in function getUpgradeValue(address,uint256,uint256,uint256). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/35/0xcc20149f2933359e20fc26e062b6a0a9a7332ea1.sol", "function": "getUpgradeValue(address,uint256,uint256,uint256)", "lineno": 145, "title": "Transaction order dependence", "type": "Warning"}, {"address": 4355, "code": "000)/(10 + cards.getUnitA", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/35/0xcc20149f2933359e20fc26e062b6a0a9a7332ea1.sol", "function": "getUpgradeValue(address,uint256,uint256,uint256)", "lineno": 145, "title": "Message call to external contract", "type": "Informational"}, {"address": 4355, "code": "000)/(10 + cards.getUnitA", "debug": "", "description": "A possible transaction order independence vulnerability exists in function getUpgradeValue(address,uint256,uint256,uint256). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/35/0xcc20149f2933359e20fc26e062b6a0a9a7332ea1.sol", "function": "getUpgradeValue(address,uint256,uint256,uint256)", "lineno": 145, "title": "Transaction order dependence", "type": "Warning"}, {"address": 4642, "code": "Id) + cards.getUnitDefenseIncreases(player,u", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/35/0xcc20149f2933359e20fc26e062b6a0a9a7332ea1.sol", "function": "getUpgradeValue(address,uint256,uint256,uint256)", "lineno": 147, "title": "Message call to external contract", "type": "Informational"}, {"address": 4642, "code": "Id) + cards.getUnitDefenseIncreases(player,u", "debug": "", "description": "A possible transaction order independence vulnerability exists in function getUpgradeValue(address,uint256,uint256,uint256). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/35/0xcc20149f2933359e20fc26e062b6a0a9a7332ea1.sol", "function": "getUpgradeValue(address,uint256,uint256,uint256)", "lineno": 147, "title": "Transaction order dependence", "type": "Warning"}, {"address": 4714, "code": "0000)/(schema.unitDefense(unitId) + cards.getUnitDefenseIncreases(player,un", "debug": "The exception is triggered under the following conditions:\n\nretval_2625: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nreturndatasize: 0x20\nretval_2368: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_GameConfigInterface_0: 0x832e02ef00000000000000000000000000000000000000000000000000000000\ncalldatasize_GameConfigInterface: 0x4\nretval_4642: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6\ncalldata_GameConfigInterface_32 + 4: 0x3\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/35/0xcc20149f2933359e20fc26e062b6a0a9a7332ea1.sol", "function": "getUpgradeValue(address,uint256,uint256,uint256)", "lineno": 147, "title": "Exception state", "type": "Informational"}, {"address": 4931, "code": "Multiplier(player,unitId));\n    } else if (u", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/35/0xcc20149f2933359e20fc26e062b6a0a9a7332ea1.sol", "function": "getUpgradeValue(address,uint256,uint256,uint256)", "lineno": 149, "title": "Message call to external contract", "type": "Informational"}, {"address": 4931, "code": "Multiplier(player,unitId));\n    } else if (u", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 5135\n", "filename": "/unique_chucks/35/0xcc20149f2933359e20fc26e062b6a0a9a7332ea1.sol", "function": "getUpgradeValue(address,uint256,uint256,uint256)", "lineno": 149, "title": "Multiple Calls", "type": "Information"}, {"address": 4931, "code": "Multiplier(player,unitId));\n    } else if (u", "debug": "", "description": "A possible transaction order independence vulnerability exists in function getUpgradeValue(address,uint256,uint256,uint256). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/35/0xcc20149f2933359e20fc26e062b6a0a9a7332ea1.sol", "function": "getUpgradeValue(address,uint256,uint256,uint256)", "lineno": 149, "title": "Transaction order dependence", "type": "Warning"}, {"address": 5135, "code": "0)/(10 + cards.getUnitDefe", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/35/0xcc20149f2933359e20fc26e062b6a0a9a7332ea1.sol", "function": "getUpgradeValue(address,uint256,uint256,uint256)", "lineno": 149, "title": "Message call to external contract", "type": "Informational"}, {"address": 5135, "code": "0)/(10 + cards.getUnitDefe", "debug": "", "description": "A possible transaction order independence vulnerability exists in function getUpgradeValue(address,uint256,uint256,uint256). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/35/0xcc20149f2933359e20fc26e062b6a0a9a7332ea1.sol", "function": "getUpgradeValue(address,uint256,uint256,uint256)", "lineno": 149, "title": "Transaction order dependence", "type": "Warning"}, {"address": 5422, "code": "y(unitId) + cards.getUnitJadeStealingIncrease", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/35/0xcc20149f2933359e20fc26e062b6a0a9a7332ea1.sol", "function": "getUpgradeValue(address,uint256,uint256,uint256)", "lineno": 151, "title": "Message call to external contract", "type": "Informational"}, {"address": 5422, "code": "y(unitId) + cards.getUnitJadeStealingIncrease", "debug": "", "description": "A possible transaction order independence vulnerability exists in function getUpgradeValue(address,uint256,uint256,uint256). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/35/0xcc20149f2933359e20fc26e062b6a0a9a7332ea1.sol", "function": "getUpgradeValue(address,uint256,uint256,uint256)", "lineno": 151, "title": "Transaction order dependence", "type": "Warning"}, {"address": 5711, "code": "ealingMultiplier(player,unitId));\n      \n    }\n  ", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/35/0xcc20149f2933359e20fc26e062b6a0a9a7332ea1.sol", "function": "getUpgradeValue(address,uint256,uint256,uint256)", "lineno": 153, "title": "Message call to external contract", "type": "Informational"}, {"address": 5711, "code": "ealingMultiplier(player,unitId));\n      \n    }\n  ", "debug": "", "description": "A possible transaction order independence vulnerability exists in function getUpgradeValue(address,uint256,uint256,uint256). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/35/0xcc20149f2933359e20fc26e062b6a0a9a7332ea1.sol", "function": "getUpgradeValue(address,uint256,uint256,uint256)", "lineno": 153, "title": "Transaction order dependence", "type": "Warning"}, {"address": 6202, "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/35/0xcc20149f2933359e20fc26e062b6a0a9a7332ea1.sol", "function": "getUpgradeValue(address,uint256,uint256,uint256)", "lineno": 157, "title": "Message call to external contract", "type": "Informational"}, {"address": 6202, "debug": "", "description": "A possible transaction order independence vulnerability exists in function getUpgradeValue(address,uint256,uint256,uint256). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/35/0xcc20149f2933359e20fc26e062b6a0a9a7332ea1.sol", "function": "getUpgradeValue(address,uint256,uint256,uint256)", "lineno": 157, "title": "Transaction order dependence", "type": "Warning"}, {"address": 6714, "code": "ards.getOwnedCount(_owner,star", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/35/0xcc20149f2933359e20fc26e062b6a0a9a7332ea1.sol", "function": "getNormalCardList(address)", "lineno": 94, "title": "Message call to external contract", "type": "Informational"}, {"address": 6714, "code": "ards.getOwnedCount(_owner,star", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 6999\n", "filename": "/unique_chucks/35/0xcc20149f2933359e20fc26e062b6a0a9a7332ea1.sol", "function": "getNormalCardList(address)", "lineno": 94, "title": "Multiple Calls", "type": "Information"}, {"address": 6714, "code": "ards.getOwnedCount(_owner,star", "debug": "", "description": "A possible transaction order independence vulnerability exists in function getNormalCardList(address). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/35/0xcc20149f2933359e20fc26e062b6a0a9a7332ea1.sol", "function": "getNormalCardList(address)", "lineno": 94, "title": "Transaction order dependence", "type": "Warning"}, {"address": 6999, "code": "= cards.getOwnedCount(_owner,startI", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/35/0xcc20149f2933359e20fc26e062b6a0a9a7332ea1.sol", "function": "getNormalCardList(address)", "lineno": 96, "title": "Message call to external contract", "type": "Informational"}, {"address": 7593, "code": "dId) {\n      if (cards.get", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/35/0xcc20149f2933359e20fc26e062b6a0a9a7332ea1.sol", "function": "getBattleCardList(address)", "lineno": 76, "title": "Message call to external contract", "type": "Informational"}, {"address": 7593, "code": "dId) {\n      if (cards.get", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1554\nCall at address: 1269\nCall at address: 1269\nCall at address: 7878\nCall at address: 7878\nCall at address: 7878\nCall at address: 1269\nCall at address: 7878\nCall at address: 7878\nCall at address: 7878\nCall at address: 7878\n", "filename": "/unique_chucks/35/0xcc20149f2933359e20fc26e062b6a0a9a7332ea1.sol", "function": "getBattleCardList(address)", "lineno": 76, "title": "Multiple Calls", "type": "Information"}, {"address": 7593, "code": "dId) {\n      if (cards.get", "debug": "", "description": "A possible transaction order independence vulnerability exists in function getBattleCardList(address). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/35/0xcc20149f2933359e20fc26e062b6a0a9a7332ea1.sol", "function": "getBattleCardList(address)", "lineno": 76, "title": "Transaction order dependence", "type": "Warning"}, {"address": 7878, "code": "artId++;\n    }\n    return icount;\n ", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/35/0xcc20149f2933359e20fc26e062b6a0a9a7332ea1.sol", "function": "getBattleCardList(address)", "lineno": 80, "title": "Message call to external contract", "type": "Informational"}, {"address": 7878, "code": "artId++;\n    }\n    return icount;\n ", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1269\nCall at address: 7878\nCall at address: 7878\nCall at address: 7878\nCall at address: 1269\nCall at address: 7878\nCall at address: 7878\nCall at address: 7878\n", "filename": "/unique_chucks/35/0xcc20149f2933359e20fc26e062b6a0a9a7332ea1.sol", "function": "getBattleCardList(address)", "lineno": 80, "title": "Multiple Calls", "type": "Information"}, {"address": 8116, "code": "ile (startId <= endId) {\n     ", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/35/0xcc20149f2933359e20fc26e062b6a0a9a7332ea1.sol", "function": "getNormalCardList(address)", "lineno": 62, "title": "Message call to external contract", "type": "Informational"}, {"address": 8116, "code": "ile (startId <= endId) {\n     ", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 6999\nCall at address: 6714\nCall at address: 8401\nCall at address: 8401\nCall at address: 8401\n", "filename": "/unique_chucks/35/0xcc20149f2933359e20fc26e062b6a0a9a7332ea1.sol", "function": "getNormalCardList(address)", "lineno": 62, "title": "Multiple Calls", "type": "Information"}, {"address": 8116, "code": "ile (startId <= endId) {\n     ", "debug": "", "description": "A possible transaction order independence vulnerability exists in function getNormalCardList(address). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/35/0xcc20149f2933359e20fc26e062b6a0a9a7332ea1.sol", "function": "getNormalCardList(address)", "lineno": 62, "title": "Transaction order dependence", "type": "Warning"}, {"address": 8401, "code": "    }\n      startId++;\n    }\n    re", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/35/0xcc20149f2933359e20fc26e062b6a0a9a7332ea1.sol", "function": "getNormalCardList(address)", "lineno": 65, "title": "Message call to external contract", "type": "Informational"}, {"address": 8401, "code": "    }\n      startId++;\n    }\n    re", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 8401\nCall at address: 8401\n", "filename": "/unique_chucks/35/0xcc20149f2933359e20fc26e062b6a0a9a7332ea1.sol", "function": "getNormalCardList(address)", "lineno": 65, "title": "Multiple Calls", "type": "Information"}], "success": true}