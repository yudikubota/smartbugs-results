{"error": null, "issues": [{"address": 233, "code": "g.sender] += a", "debug": "The exception is triggered under the following conditions:\n\nstorage_6: 0x0\ncalldata_token_0: 0x10c1ff2300000000000000000000000000000000000000000000000000000000\ncalldatasize_token: 0x4\nstorage_2: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/41/0xc99be862b2d0a67a30219094f473a87d9bc7afc4.sol", "function": "fallback", "lineno": 45, "title": "Exception state", "type": "Informational"}, {"address": 553, "code": "e);\n        excess += amount % price;\n        Fu", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/41/0xc99be862b2d0a67a30219094f473a87d9bc7afc4.sol", "function": "fallback", "lineno": 47, "title": "Message call to external contract", "type": "Informational"}, {"address": 638, "code": "msg.sender, amount, true", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/41/0xc99be862b2d0a67a30219094f473a87d9bc7afc4.sol", "function": "fallback", "lineno": 49, "title": "State change after external call", "type": "Warning"}, {"address": 1614, "code": "ed, false);\n            burnToken(", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3454\nCall at address: 3248\n", "filename": "/unique_chucks/41/0xc99be862b2d0a67a30219094f473a87d9bc7afc4.sol", "function": "withdrawalOwner()", "lineno": 86, "title": "Multiple Calls", "type": "Information"}, {"address": 1614, "code": "ed, false);\n            burnToken(", "debug": "", "description": "A possible transaction order independence vulnerability exists in function withdrawalOwner(). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/41/0xc99be862b2d0a67a30219094f473a87d9bc7afc4.sol", "function": "withdrawalOwner()", "lineno": 86, "title": "Transaction order dependence", "type": "Warning"}, {"address": 2020, "code": "function    burnToken() priv", "debug": "", "description": "A possible transaction order independence vulnerability exists in function _function_0x619f5e72. The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/41/0xc99be862b2d0a67a30219094f473a87d9bc7afc4.sol", "function": "_function_0x619f5e72", "lineno": 96, "title": "Transaction order dependence", "type": "Warning"}, {"address": 3248, "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/41/0xc99be862b2d0a67a30219094f473a87d9bc7afc4.sol", "function": "withdrawalOwner()", "lineno": 102, "title": "Message call to external contract", "type": "Informational"}, {"address": 3248, "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3454\n", "filename": "/unique_chucks/41/0xc99be862b2d0a67a30219094f473a87d9bc7afc4.sol", "function": "withdrawalOwner()", "lineno": 102, "title": "Multiple Calls", "type": "Information"}, {"address": 3454, "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/41/0xc99be862b2d0a67a30219094f473a87d9bc7afc4.sol", "function": "withdrawalOwner()", "lineno": 102, "title": "Message call to external contract", "type": "Informational"}], "success": true}