{
  "contract": "0xdb1c55f6926e7d847ddf8678905ad871a68199d2",
  "tool": "mythril",
  "start": 1563672102.965441,
  "end": 1563672129.7797103,
  "duration": 26.814269304275513,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 260,
        "code": "dr,bytes data)\n    payable\n    public\n    {\n        require(msg.sender == Owner);\n        adr.call.value(msg.value)(data);\n    }\n}",
        "debug": "calldata_FreeEth_32 + 4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_FreeEth_0: 0xba21d62a00000000000000000000000000000000000000000000000000000000\ncalldatasize_FreeEth: 0x4\n",
        "description": "A possible integer overflow exists in the function `Command(address,bytes)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/35/0xdb1c55f6926e7d847ddf8678905ad871a68199d2.sol",
        "function": "Command(address,bytes)",
        "lineno": 27,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 683,
        "code": "ance);\n    }\n    \n    functi",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function withdraw(). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/35/0xdb1c55f6926e7d847ddf8678905ad871a68199d2.sol",
        "function": "withdraw()",
        "lineno": 24,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 828,
        "code": "r(this.balance);\n           ",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 922\n",
        "filename": "/unique_chucks/35/0xdb1c55f6926e7d847ddf8678905ad871a68199d2.sol",
        "function": "GetFreebie()",
        "lineno": 14,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 828,
        "code": "r(this.balance);\n           ",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function GetFreebie(). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/35/0xdb1c55f6926e7d847ddf8678905ad871a68199d2.sol",
        "function": "GetFreebie()",
        "lineno": 14,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 922,
        "code": "nsfer(this.balance);\n        }   ",
        "debug": "SOLVER OUTPUT:\ncallvalue: 0xde0b6b3a7640001\nretval_828: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_FreeEth_0: 0x6ea3f1cb00000000000000000000000000000000000000000000000000000000\ncalldatasize_FreeEth: 0x4\n",
        "description": "In the function `GetFreebie()` a non-zero amount of Ether is sent to msg.sender.\nIt seems that this function can be called without restrictions.",
        "filename": "/unique_chucks/35/0xdb1c55f6926e7d847ddf8678905ad871a68199d2.sol",
        "function": "GetFreebie()",
        "lineno": 15,
        "title": "Ether send",
        "type": "Warning"
      },
      {
        "address": 1208,
        "code": ";\n    }\n}",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/35/0xdb1c55f6926e7d847ddf8678905ad871a68199d2.sol",
        "function": "Command(address,bytes)",
        "lineno": 32,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 1208,
        "code": ";\n    }\n}",
        "debug": "",
        "description": "The return value of an external call is not checked. Note that execution continue even if the called contract throws.",
        "filename": "/unique_chucks/35/0xdb1c55f6926e7d847ddf8678905ad871a68199d2.sol",
        "function": "Command(address,bytes)",
        "lineno": 32,
        "title": "Unchecked CALL return value",
        "type": "Informational"
      }
    ],
    "success": true
  }
}