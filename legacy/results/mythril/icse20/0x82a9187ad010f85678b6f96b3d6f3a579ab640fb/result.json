{
  "contract": "0x82a9187ad010f85678b6f96b3d6f3a579ab640fb",
  "tool": "mythril",
  "start": 1563708353.4070063,
  "end": 1563708718.3050902,
  "duration": 364.8980839252472,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 111,
        "code": "nt256 summa_rest = msg",
        "debug": "The exception is triggered under the following conditions:\n\ncallvalue: 0x270f\ncalldata_AgentContract_0: 0x2f3395f500000000000000000000000000000000000000000000000000000000\ncalldatasize_AgentContract: 0x4\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/37/0x82a9187ad010f85678b6f96b3d6f3a579ab640fb.sol",
        "function": "fallback",
        "lineno": 36,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 384,
        "code": "        summa_rest = summa_re",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 816\nCall at address: 724\nCall at address: 665\nCall at address: 816\nCall at address: 724\nCall at address: 665\nCall at address: 816\nCall at address: 724\nCall at address: 665\nCall at address: 384\nCall at address: 816\nCall at address: 724\nCall at address: 665\nCall at address: 816\nCall at address: 724\nCall at address: 665\nCall at address: 816\nCall at address: 724\nCall at address: 665\nCall at address: 384\n",
        "filename": "/unique_chucks/37/0x82a9187ad010f85678b6f96b3d6f3a579ab640fb.sol",
        "function": "fallback",
        "lineno": 42,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 665,
        "code": "sender.send(summa_rest)",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 816\nCall at address: 724\n",
        "filename": "/unique_chucks/37/0x82a9187ad010f85678b6f96b3d6f3a579ab640fb.sol",
        "function": "fallback",
        "lineno": 49,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 724,
        "code": "owner.send(summa_rest);\n   ",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 816\n",
        "filename": "/unique_chucks/37/0x82a9187ad010f85678b6f96b3d6f3a579ab640fb.sol",
        "function": "fallback",
        "lineno": 50,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 816,
        "code": "er(__owner, summa_rest);",
        "debug": "",
        "description": "The return value of an external call is not checked. Note that execution continue even if the called contract throws.",
        "filename": "/unique_chucks/37/0x82a9187ad010f85678b6f96b3d6f3a579ab640fb.sol",
        "function": "fallback",
        "lineno": 51,
        "title": "Unchecked CALL return value",
        "type": "Informational"
      },
      {
        "address": 1294,
        "code": "public constant returns (address []){\n        assert (msg.sender == __owner);\n        return agents;\n    }\n    function returnBalan",
        "debug": "storage_3: 0x800000000000000000000000000000000000000000000000000000000000000\nstorage_0: 0x0\ncaller: 0x0\ncalldata_AgentContract_0: 0xd6cd4a0200000000000000000000000000000000000000000000000000000000\ncalldatasize_AgentContract: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `listAgents()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/37/0x82a9187ad010f85678b6f96b3d6f3a579ab640fb.sol",
        "function": "listAgents()",
        "lineno": 23,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1521,
        "code": "er);\n        if (!target.send(",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_AgentContract_0: 0x770b80b600000000000000000000000000000000000000000000000000000000\ncalldatasize_AgentContract: 0x4\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/37/0x82a9187ad010f85678b6f96b3d6f3a579ab640fb.sol",
        "function": "returnBalanseToTarget()",
        "lineno": 28,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 1627,
        "code": "            __owner.send(",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1742\n",
        "filename": "/unique_chucks/37/0x82a9187ad010f85678b6f96b3d6f3a579ab640fb.sol",
        "function": "returnBalanseToTarget()",
        "lineno": 30,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 1742,
        "code": "       }\n    }\n    functio",
        "debug": "",
        "description": "The return value of an external call is not checked. Note that execution continue even if the called contract throws.",
        "filename": "/unique_chucks/37/0x82a9187ad010f85678b6f96b3d6f3a579ab640fb.sol",
        "function": "returnBalanseToTarget()",
        "lineno": 31,
        "title": "Unchecked CALL return value",
        "type": "Informational"
      },
      {
        "address": 1840,
        "code": "_owner);\n        return agents",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_AgentContract_0: 0xd6cd4a0200000000000000000000000000000000000000000000000000000000\ncalldatasize_AgentContract: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/37/0x82a9187ad010f85678b6f96b3d6f3a579ab640fb.sol",
        "function": "listAgents()",
        "lineno": 24,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 1883,
        "code": " function ret",
        "debug": "storage_3: 0x8421003f084001f4210815cf88407c00000000000000037c1d000e8d178001f\nstorage_0: 0x0\ncaller: 0x0\ncalldata_AgentContract_0: 0xd6cd4a0200000000000000000000000000000000000000000000000000000000\ncalldatasize_AgentContract: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `listAgents()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/37/0x82a9187ad010f85678b6f96b3d6f3a579ab640fb.sol",
        "function": "listAgents()",
        "lineno": 27,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1885,
        "code": " function ret",
        "debug": "storage_3: 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffb\nstorage_0: 0x0\ncaller: 0x0\ncalldata_AgentContract_0: 0xd6cd4a0200000000000000000000000000000000000000000000000000000000\ncalldatasize_AgentContract: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `listAgents()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/37/0x82a9187ad010f85678b6f96b3d6f3a579ab640fb.sol",
        "function": "listAgents()",
        "lineno": 27,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2070,
        "code": "== __owner);\n        return ta",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_AgentContract_0: 0xf00e6a2a00000000000000000000000000000000000000000000000000000000\ncalldatasize_AgentContract: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/37/0x82a9187ad010f85678b6f96b3d6f3a579ab640fb.sol",
        "function": "getTarget()",
        "lineno": 20,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}