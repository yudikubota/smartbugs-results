{"error": null, "issues": [{"address": 184, "code": "  amountRaised += amount;\n     ", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xf6171452b31392bb7f6f6fd889242100b2a333c016e223aaf406c1f2dc6a0172\ncallvalue: 0x1667d256aaec6cba7bcc8a12efd5ade7d0fc503f933bdba600d077f4cf62d938\ncalldata_token_0: 0x6400000000000000000000000000000000000000000000000000000000\ncalldatasize_token: 0x4\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x0daed428b7ceff56541532e45b55033563699079.sol", "function": "fallback", "lineno": 41, "title": "Integer Overflow ", "type": "Warning"}, {"address": 200, "code": "ard.transfer(msg.sende", "debug": "callvalue: 0x1667d256aaec6cba7bcc8a12efd5ade7d0fc503f933bdba600d077f4cf62d938\nstorage_1: 0xf6171452b31392bb7f6f6fd889242100b2a333c016e223aaf406c1f2dc6a0172\ncalldata_token_0: 0x6400000000000000000000000000000000000000000000000000000000\ncalldatasize_token: 0x4\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x0daed428b7ceff56541532e45b55033563699079.sol", "function": "fallback", "lineno": 42, "title": "Integer Overflow ", "type": "Warning"}, {"address": 282, "code": ".sender, amoun", "debug": "The exception is triggered under the following conditions:\n\ncalldata_token_0: 0x386b3ecd00000000000000000000000000000000000000000000000000000000\ncalldatasize_token: 0x4\nstorage_2: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_contracts/0x0daed428b7ceff56541532e45b55033563699079.sol", "function": "fallback", "lineno": 43, "title": "Exception state", "type": "Informational"}, {"address": 420, "code": " price);\n        FundTransfer(msg.sender, amount", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_contracts/0x0daed428b7ceff56541532e45b55033563699079.sol", "function": "fallback", "lineno": 42, "title": "Message call to external contract", "type": "Informational"}, {"address": 420, "code": " price);\n        FundTransfer(msg.sender, amount", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 644\n", "filename": "/unique_contracts/0x0daed428b7ceff56541532e45b55033563699079.sol", "function": "fallback", "lineno": 42, "title": "Multiple Calls", "type": "Information"}, {"address": 644, "code": "       FundTransfer(beneficiar", "debug": "", "description": "A possible transaction order independence vulnerability exists in function fallback. The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_contracts/0x0daed428b7ceff56541532e45b55033563699079.sol", "function": "fallback", "lineno": 45, "title": "Transaction order dependence", "type": "Warning"}], "success": true}