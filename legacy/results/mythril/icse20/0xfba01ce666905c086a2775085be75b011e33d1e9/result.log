{"error": null, "issues": [{"address": 2654, "code": "dministra", "debug": "", "description": "Function fallback retrieves the transaction origin (tx.origin) using the ORIGIN opcode. Use msg.sender instead.\nSee also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin", "filename": "/unique_chucks/19/0xfba01ce666905c086a2775085be75b011e33d1e9.sol", "function": "fallback", "lineno": 53, "title": "Use of tx.origin", "type": "Warning"}, {"address": 7790, "debug": "The exception is triggered under the following conditions:\n\ncallvalue: 0x3782dace9d900002\nbalance_at_1461501637330902918203684832716283019655932542975 & 0: 0x3782dace9d900001\norigin: 0x0\ncaller: 0x0\ncalldatasize_Token3D: 0x3\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/19/0xfba01ce666905c086a2775085be75b011e33d1e9.sol", "function": "fallback", "lineno": 762, "title": "Exception state", "type": "Informational"}, {"address": 7863, "code": ")){\n            require(\n                /", "debug": "callvalue: 0x100002\nbalance_at_1461501637330902918203684832716283019655932542975 & 0: 0x100001\nstorage_13: 0xff00\norigin: 0x0\ncaller: 0x0\ncalldatasize_Token3D: 0x3\n", "description": "A possible integer underflow exists in the function `fallback`.\nThe subtraction may result in a value < 0.", "filename": "/unique_chucks/19/0xfba01ce666905c086a2775085be75b011e33d1e9.sol", "function": "fallback", "lineno": 65, "title": "Integer Underflow", "type": "Warning"}, {"address": 10462, "code": ") internal pur", "debug": "calldata_Token3D_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffff38101f0389c0000\nstorage_10: 0xfffffffffffffffffffffffffffffffffffffffffffffffff38101f0389c0000\ncalldata_Token3D_0: 0x2260937300000000000000000000000000000000000000000000000000000000\ncalldatasize_Token3D: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `calculateEthereumReceived(uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/19/0xfba01ce666905c086a2775085be75b011e33d1e9.sol", "function": "calculateEthereumReceived(uint256)", "lineno": 708, "title": "Integer Overflow ", "type": "Warning"}, {"address": 10477, "code": "= (x + 1) / 2;\n    ", "debug": "storage_10: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_Token3D_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_Token3D_0: 0x2260937300000000000000000000000000000000000000000000000000000000\ncalldatasize_Token3D: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `calculateEthereumReceived(uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/19/0xfba01ce666905c086a2775085be75b011e33d1e9.sol", "function": "calculateEthereumReceived(uint256)", "lineno": 709, "title": "Integer Overflow ", "type": "Warning"}, {"address": 10502, "code": "6) {\n        i", "debug": "calldata_Token3D_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffff81f7000000c0000\nstorage_10: 0xfffffffffffffffffffffffffffffffffffffffffffffffff81f7000000c0000\ncalldata_Token3D_0: 0x2260937300000000000000000000000000000000000000000000000000000000\ncalldatasize_Token3D: 0x4\ncallvalue: 0x0\n", "description": "A possible integer underflow exists in the function `calculateEthereumReceived(uint256)`.\nThe subtraction may result in a value < 0.", "filename": "/unique_chucks/19/0xfba01ce666905c086a2775085be75b011e33d1e9.sol", "function": "calculateEthereumReceived(uint256)", "lineno": 727, "title": "Integer Underflow", "type": "Warning"}, {"address": 10558, "code": "      uint256 c = ", "debug": "calldata_Token3D_4: 0x1000000000000000000000000000000000de0b6b3a763ffff\n1000000000000000000 + calldata_Token3D_4_EXP_2: 0x1000000000000000000000000000000001bc16d674ec7fffe\nstorage_10: 0x1000000000000000000000000000000000de0b6b3a763ffff\ncalldata_Token3D_0: 0x2260937300000000000000000000000000000000000000000000000000000000\ncalldatasize_Token3D: 0x4\ncallvalue: 0x0\n", "description": "A possible integer underflow exists in the function `calculateEthereumReceived(uint256)`.\nThe subtraction may result in a value < 0.", "filename": "/unique_chucks/19/0xfba01ce666905c086a2775085be75b011e33d1e9.sol", "function": "calculateEthereumReceived(uint256)", "lineno": 731, "title": "Integer Underflow", "type": "Warning"}, {"address": 10637, "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffd401342f008710f7\ncallvalue: 0x2c21b2c851402001\nbalance_at_1461501637330902918203684832716283019655932542975 & 0: 0x2c41365f21141be8\nstorage_13: 0xff00\norigin: 0x0\ncaller: 0x0\ncalldatasize_Token3D: 0x3\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/19/0xfba01ce666905c086a2775085be75b011e33d1e9.sol", "function": "fallback", "lineno": 762, "title": "Integer Overflow ", "type": "Warning"}, {"address": 10650, "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffc89f800872308000\ncallvalue: 0x3782dacf00000000\nbalance_at_1461501637330902918203684832716283019655932542975 & 0: 0x3783fffffffffffc\nstorage_13: 0xff00\norigin: 0x0\ncaller: 0x0\ncalldatasize_Token3D: 0x3\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/19/0xfba01ce666905c086a2775085be75b011e33d1e9.sol", "function": "fallback", "lineno": 762, "title": "Exception state", "type": "Informational"}], "success": true}