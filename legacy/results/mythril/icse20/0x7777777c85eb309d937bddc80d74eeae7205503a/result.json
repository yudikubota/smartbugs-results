{
  "contract": "0x7777777c85eb309d937bddc80d74eeae7205503a",
  "tool": "mythril",
  "start": 1563575007.8805835,
  "end": 1563575059.8872223,
  "duration": 52.00663876533508,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 724,
        "code": "spender] == 0. To decrement\n   * allowed value is better to use this function to avoid 2 calls (and wait until\n   * the first transaction is mined)\n   * From MonolithDAO Token.sol\n   * @param _spender The address which will spend the funds.\n   * @param _su",
        "debug": "calldata_VanityToken_v3_32 + 36: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_VanityToken_v3_0: 0x16ca3b6300000000000000000000000000000000000000000000000000000000\ncalldatasize_VanityToken_v3: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `increaseApproval(address,uint256,bytes)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/18/0x7777777c85eb309d937bddc80d74eeae7205503a.sol",
        "function": "increaseApproval(address,uint256,bytes)",
        "lineno": 474,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1388,
        "code": "s The address which you want to transfer to\n     @param _value uint256 the amout of tokens to be transfered\n     @param _data ABI-encoded contract call to call `_to` address.\n     @return true if the call function was executed succ",
        "debug": "calldata_VanityToken_v3_32 + 36: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_VanityToken_v3_0: 0x5c17f9f400000000000000000000000000000000000000000000000000000000\ncalldatasize_VanityToken_v3: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `approve(address,uint256,bytes)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/18/0x7777777c85eb309d937bddc80d74eeae7205503a.sol",
        "function": "approve(address,uint256,bytes)",
        "lineno": 416,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 3548,
        "code": "ess which will spend",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/18/0x7777777c85eb309d937bddc80d74eeae7205503a.sol",
        "function": "increaseApproval(address,uint256,bytes)",
        "lineno": 478,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 4577,
        "code": "urn true if the call",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/18/0x7777777c85eb309d937bddc80d74eeae7205503a.sol",
        "function": "approve(address,uint256,bytes)",
        "lineno": 419,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 8453,
        "code": " }\n}\n",
        "debug": "storage_1: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncalldata_VanityToken_v3_32 + 4: 0x57f25cd000000000000000000000000000000000000000000000000000000000\nstorage_3: 0x0\ncaller: 0x0\ncalldata_VanityToken_v3_0: 0x40c10f1900000000000000000000000000000000000000000000000000000000\ncalldatasize_VanityToken_v3: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `mint(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/18/0x7777777c85eb309d937bddc80d74eeae7205503a.sol",
        "function": "mint(address,uint256)",
        "lineno": 46,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 8466,
        "code": " @title Ownabl",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_3: 0x0\nstorage_1: 0x1\ncalldata_VanityToken_v3_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncaller: 0x0\ncalldata_VanityToken_v3_0: 0x40c10f1900000000000000000000000000000000000000000000000000000000\ncalldatasize_VanityToken_v3: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/18/0x7777777c85eb309d937bddc80d74eeae7205503a.sol",
        "function": "mint(address,uint256)",
        "lineno": 50,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}