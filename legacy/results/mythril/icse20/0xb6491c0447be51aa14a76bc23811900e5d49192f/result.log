{"error": null, "issues": [{"address": 615, "code": "emit TokenCreated(msg.sender, token);\n    return token;\n  }\n\n  /**\n  *   @dev Function create mintable token.\n  *\n  *   @return the address of new token.\n  */\n  function createMintableToken(string _name, string _symbol, uint8 _decimals, bool _transferable) public returns (address) {\n    address token = new MintableToken(_name, _symbol, _decimals, _transferable);\n    mintableTokens[msg", "debug": "calldata_TokenCreator_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_TokenCreator_0: 0xe9696f5400000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenCreator: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `createStandardToken(string,string,uint8,uint256,bool)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/30/0xb6491c0447be51aa14a76bc23811900e5d49192f.sol", "function": "createStandardToken(string,string,uint8,uint256,bool)", "lineno": 327, "title": "Integer Overflow ", "type": "Warning"}, {"address": 889, "code": "n token;\n  }\n\n  event TokenCreated(address indexed _creator, address indexed _token);\n}", "debug": "calldata_TokenCreator_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_TokenCreator_0: 0xfe21e67e00000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenCreator: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `createMintableToken(string,string,uint8,bool)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/30/0xb6491c0447be51aa14a76bc23811900e5d49192f.sol", "function": "createMintableToken(string,string,uint8,bool)", "lineno": 341, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1169, "code": "n.\n  */\n  function createStandardToken(string _name", "debug": "The exception is triggered under the following conditions:\n\ncalldata_TokenCreator_32 + 4: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\ncalldata_TokenCreator_4: 0x0\ncalldata_TokenCreator_0: 0x387e831100000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenCreator: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/30/0xb6491c0447be51aa14a76bc23811900e5d49192f.sol", "function": "_function_0x387e8311", "lineno": 321, "title": "Exception state", "type": "Informational"}, {"address": 1270, "code": "ing _symbol, uint8 _decimals, uint _totalSupply, bo", "debug": "The exception is triggered under the following conditions:\n\ncalldata_TokenCreator_32 + 4: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\ncalldata_TokenCreator_4: 0x0\ncalldata_TokenCreator_0: 0xa52c637000000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenCreator: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/30/0xb6491c0447be51aa14a76bc23811900e5d49192f.sol", "function": "_function_0xa52c6370", "lineno": 323, "title": "Exception state", "type": "Informational"}], "success": true}