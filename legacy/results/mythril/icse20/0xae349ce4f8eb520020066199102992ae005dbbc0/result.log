{"error": null, "issues": [{"address": 2069, "code": " uint256 lockTime2 = add(baias", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/36/0xae349ce4f8eb520020066199102992ae005dbbc0.sol", "function": "release()", "lineno": 148, "title": "Message call to external contract", "type": "Informational"}, {"address": 2069, "code": " uint256 lockTime2 = add(baias", "debug": "", "description": "A possible transaction order independence vulnerability exists in function release(). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/36/0xae349ce4f8eb520020066199102992ae005dbbc0.sol", "function": "release()", "lineno": 148, "title": "Transaction order dependence", "type": "Warning"}, {"address": 2776, "code": "r(owner, balance);\n  }\n\n  function des", "debug": "", "description": "A possible transaction order independence vulnerability exists in function claimTokens(address). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/36/0xae349ce4f8eb520020066199102992ae005dbbc0.sol", "function": "claimTokens(address)", "lineno": 197, "title": "Transaction order dependence", "type": "Warning"}, {"address": 2965, "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/36/0xae349ce4f8eb520020066199102992ae005dbbc0.sol", "function": "claimTokens(address)", "lineno": 204, "title": "Message call to external contract", "type": "Warning"}, {"address": 2965, "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3222\n", "filename": "/unique_chucks/36/0xae349ce4f8eb520020066199102992ae005dbbc0.sol", "function": "claimTokens(address)", "lineno": 204, "title": "Multiple Calls", "type": "Information"}, {"address": 3222, "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/36/0xae349ce4f8eb520020066199102992ae005dbbc0.sol", "function": "claimTokens(address)", "lineno": 204, "title": "Message call to external contract", "type": "Warning"}, {"address": 3299, "code": "ress[] _beneficiaries, uint256", "debug": "The exception is triggered under the following conditions:\n\ncalldata_TeamLocker_4: 0x0\nstorage_2: 0x0\ncalldata_TeamLocker_0: 0xefeb5e5800000000000000000000000000000000000000000000000000000000\ncalldatasize_TeamLocker: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/36/0xae349ce4f8eb520020066199102992ae005dbbc0.sol", "function": "_function_0xefeb5e58", "lineno": 128, "title": "Exception state", "type": "Informational"}, {"address": 3404, "code": "ax64(uint64 a,", "debug": "The exception is triggered under the following conditions:\n\nretval_2069: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nreturndatasize: 0x20\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_2: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_TeamLocker_0: 0x86d1a69f00000000000000000000000000000000000000000000000000000000\ncalldatasize_TeamLocker: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/36/0xae349ce4f8eb520020066199102992ae005dbbc0.sol", "function": "release()", "lineno": 52, "title": "Exception state", "type": "Informational"}], "success": true}