{
  "contract": "0x0707681f344deb24184037fc0228856f2137b02e",
  "tool": "mythril",
  "start": 1563483223.8664064,
  "end": 1563483560.1068795,
  "duration": 336.2404730319977,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 772,
        "code": "s.length; i++)   {\n            airDeliver(_addrs[i],   _amount);\n        }\n    }\n    \n    function airDeliverStandalone(address[] _addrs, uint256[] _amounts) onlyOwner public {\n        require(_addrs.length <=  255);\n        require(_addrs.length == ",
        "debug": "calldata_FNKOSToken_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_FNKOSToken_0: 0xc3e564a00000000000000000000000000000000000000000000000000000000\ncalldatasize_FNKOSToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `airDeliverMulti(address[],uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/4/0x0707681f344deb24184037fc0228856f2137b02e.sol",
        "function": "airDeliverMulti(address[],uint256)",
        "lineno": 168,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1004,
        "code": ";i< _addrs.length;i++){\n            freezeDeliver(_addrs[i], _deliverAmount, _freezeAmount, _freezeMonth, _unfreezeBeginTime);\n        }\n    }\n\n    function  freezeDeliverMultiStandalone(address[] _addrs, uint[] _deliverAmounts, uint[] _freezeAmounts, uint _freezeMonth, uint _unfreezeBeginTime ) onlyOwner public {\n        require(_addrs.length <=  255);\n        requ",
        "debug": "calldata_FNKOSToken_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_FNKOSToken_0: 0x2111c0f900000000000000000000000000000000000000000000000000000000\ncalldatasize_FNKOSToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `freezeDeliverMuti(address[],uint256,uint256,uint256,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/4/0x0707681f344deb24184037fc0228856f2137b02e.sol",
        "function": "freezeDeliverMuti(address[],uint256,uint256,uint256,uint256)",
        "lineno": 224,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1573,
        "code": "rs.length == _deliverAmounts.length);\n        require(_addrs.length == _freezeAmounts.length);\n        \n        for(uint i=0;i< _addrs.length;i++){\n            freezeDeliver(_addrs[i], _deliverAmounts[i], _freezeAmounts[i], _freezeMonth, _unfreezeBeginTime);\n        }\n    }\n    \n    // buy tokens directly\n    function () external payable {\n        buyTokens();\n    }\n\n    //\n    function buyTokens() payable isRunning isBuyable onlyWhitelist  public {\n        uint256 weiVal = msg.value;\n        address inve",
        "debug": "calldata_FNKOSToken_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_FNKOSToken_0: 0x679019ba00000000000000000000000000000000000000000000000000000000\ncalldatasize_FNKOSToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `_function_0x679019ba`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/4/0x0707681f344deb24184037fc0228856f2137b02e.sol",
        "function": "_function_0x679019ba",
        "lineno": 231,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 6223,
        "code": "56 a, uint256 b) internal pure retu",
        "debug": "The exception is triggered under the following conditions:\n\ncalldatasize_FNKOSToken: 0x60\nstorage_11: 0xff00\ncalldata_FNKOSToken_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/4/0x0707681f344deb24184037fc0228856f2137b02e.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 86,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 8728,
        "code": " safeSub(totalSupply, _value);\n  ",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function withdraw(). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/4/0x0707681f344deb24184037fc0228856f2137b02e.sol",
        "function": "withdraw()",
        "lineno": 340,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 11886,
        "code": "  uint freezeAmou",
        "debug": "The exception is triggered under the following conditions:\n\ncalldatasize_FNKOSToken: 0x70\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\nstorage_1 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_FNKOSToken_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_FNKOSToken_32 + 36: 0x0\ncalldata_FNKOSToken_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_FNKOSToken_4: 0xffffffffffffffffffffffffffffffffffffffff\nstorage_11: 0xff00\ncalldata_FNKOSToken_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\nstorage_2 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_FNKOSToken_4: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/4/0x0707681f344deb24184037fc0228856f2137b02e.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 292,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 12843,
        "code": " setP",
        "debug": "calldata_FNKOSToken_32 + 4: 0xcc2f4dda3e01266a76b3b6439931c688f0dd2e42254940cbd2284696f000f7e7\nstorage_0 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_FNKOSToken_4: 0x60e6a91d1cba3c6604b126818d3db6ef8599c870bd68aeea92534258c7fcf5f5\nstorage_1: 0xcc2f4dda3e01266a76b3b6439931c688f0dd2e42254940cbd2284696f000f7e7\nstorage_0 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\nUDiv(storage_11,_256): 0xcc2f4dda3e01266a76b3b6439931c688f0dd2e42254940cbd2284696f000f7e7\ncalldata_FNKOSToken_4: 0xffffffffffffffffffffffffffffffffffffffff\nstorage_11: 0x0\ncaller: 0x0\ncalldata_FNKOSToken_0: 0xea7c8cd00000000000000000000000000000000000000000000000000000000\ncalldatasize_FNKOSToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `airDeliver(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/4/0x0707681f344deb24184037fc0228856f2137b02e.sol",
        "function": "airDeliver(address,uint256)",
        "lineno": 104,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 12856,
        "code": "ngPrice(uint25",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_FNKOSToken_32 + 4: 0x920189ae96d000000000000000000000fffffffffffbfffffdffffcbefa1545d\nstorage_0 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_FNKOSToken_4: 0x9dfdedbfd16e00000000000000000002fffffffffffbfffc162d7f579419044d\nstorage_1: 0x920189ae96d000000000000000000000fffffffffffbfffffdffffcbefa1545d\nstorage_0 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\nUDiv(storage_11,_256): 0x920189ae96d000000000000000000000fffffffffffbfffffdffffcbefa1545d\ncalldata_FNKOSToken_4: 0xffffffffffffffffffffffffffffffffffffffff\nstorage_11: 0x0\ncaller: 0x0\ncalldata_FNKOSToken_0: 0xea7c8cd00000000000000000000000000000000000000000000000000000000\ncalldatasize_FNKOSToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/4/0x0707681f344deb24184037fc0228856f2137b02e.sol",
        "function": "airDeliver(address,uint256)",
        "lineno": 104,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}