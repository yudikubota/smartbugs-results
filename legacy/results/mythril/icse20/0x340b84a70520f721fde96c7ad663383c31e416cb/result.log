{"error": null, "issues": [{"address": 6731, "code": "\n * @dev This blocks ", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/20/0x340b84a70520f721fde96c7ad663383c31e416cb.sol", "function": "_function_0x17ffc320", "lineno": 243, "title": "Message call to external contract", "type": "Warning"}, {"address": 6731, "code": "\n * @dev This blocks ", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 15600\n", "filename": "/unique_chucks/20/0x340b84a70520f721fde96c7ad663383c31e416cb.sol", "function": "_function_0x17ffc320", "lineno": 243, "title": "Multiple Calls", "type": "Information"}, {"address": 7109, "code": "ardDelegate.sol\n\ncontract Stan", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/20/0x340b84a70520f721fde96c7ad663383c31e416cb.sol", "function": "totalSupply()", "lineno": 730, "title": "Message call to external contract", "type": "Informational"}, {"address": 7109, "code": "ardDelegate.sol\n\ncontract Stan", "debug": "", "description": "A possible transaction order independence vulnerability exists in function totalSupply(). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/20/0x340b84a70520f721fde96c7ad663383c31e416cb.sol", "function": "totalSupply()", "lineno": 730, "title": "Transaction order dependence", "type": "Warning"}, {"address": 8397, "code": " or\n * Owned contracts. See respectiv", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/20/0x340b84a70520f721fde96c7ad663383c31e416cb.sol", "function": "reclaimContract(address)", "lineno": 322, "title": "Message call to external contract", "type": "Warning"}, {"address": 14433, "code": "gate == address(0)) {\n            return su", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/20/0x340b84a70520f721fde96c7ad663383c31e416cb.sol", "function": "delegateAllowance(address,address)", "lineno": 722, "title": "Message call to external contract", "type": "Informational"}, {"address": 14433, "code": "gate == address(0)) {\n            return su", "debug": "", "description": "A possible transaction order independence vulnerability exists in function delegateAllowance(address,address). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/20/0x340b84a70520f721fde96c7ad663383c31e416cb.sol", "function": "delegateAllowance(address,address)", "lineno": 722, "title": "Transaction order dependence", "type": "Warning"}, {"address": 15369, "code": "            return super.increaseApproval(spender, a", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/20/0x340b84a70520f721fde96c7ad663383c31e416cb.sol", "function": "approve(address,uint256)", "lineno": 715, "title": "Message call to external contract", "type": "Informational"}, {"address": 15369, "code": "            return super.increaseApproval(spender, a", "debug": "", "description": "A possible transaction order independence vulnerability exists in function approve(address,uint256). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/20/0x340b84a70520f721fde96c7ad663383c31e416cb.sol", "function": "approve(address,uint256)", "lineno": 715, "title": "Transaction order dependence", "type": "Warning"}, {"address": 15600, "code": "eApprove(ERC20 token, add", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/20/0x340b84a70520f721fde96c7ad663383c31e416cb.sol", "function": "_function_0x17ffc320", "lineno": 213, "title": "Message call to external contract", "type": "Warning"}, {"address": 16089, "code": " (delegate == address(0)) {\n            return super.allow", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/20/0x340b84a70520f721fde96c7ad663383c31e416cb.sol", "function": "transferFrom(address,address,uint256)", "lineno": 698, "title": "Message call to external contract", "type": "Informational"}, {"address": 16089, "code": " (delegate == address(0)) {\n            return super.allow", "debug": "", "description": "A possible transaction order independence vulnerability exists in function transferFrom(address,address,uint256). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/20/0x340b84a70520f721fde96c7ad663383c31e416cb.sol", "function": "transferFrom(address,address,uint256)", "lineno": 698, "title": "Transaction order dependence", "type": "Warning"}, {"address": 16407, "code": "eturn allowances.allowanceOf(_owner, _spender);\n    }\n\n", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/20/0x340b84a70520f721fde96c7ad663383c31e416cb.sol", "function": "delegateApprove(address,uint256,address)", "lineno": 552, "title": "Message call to external contract", "type": "Informational"}, {"address": 18151, "code": ", oldValue);\n    }\n\n    f", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/20/0x340b84a70520f721fde96c7ad663383c31e416cb.sol", "function": "transferFrom(address,address,uint256)", "lineno": 884, "title": "Message call to external contract", "type": "Informational"}, {"address": 18151, "code": ", oldValue);\n    }\n\n    f", "debug": "", "description": "A possible transaction order independence vulnerability exists in function transferFrom(address,address,uint256). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/20/0x340b84a70520f721fde96c7ad663383c31e416cb.sol", "function": "transferFrom(address,address,uint256)", "lineno": 884, "title": "Transaction order dependence", "type": "Warning"}, {"address": 22556, "code": "ress _spender, uint _addedValue) public ", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/20/0x340b84a70520f721fde96c7ad663383c31e416cb.sol", "function": "delegateAllowance(address,address)", "lineno": 565, "title": "Message call to external contract", "type": "Informational"}], "success": true}