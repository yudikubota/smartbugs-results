{"error": null, "issues": [{"address": 1127, "code": "                rec", "debug": "storage_10: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncallvalue: 0x2000000000000000000000000000000000000006f26fe00000\ncalldata_SliceSmart_0: 0x0\ncalldatasize_SliceSmart: 0x4\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/40/0xe1e06b776abdb08dcb3c4cca7991e93853a44148.sol", "function": "fallback", "lineno": 230, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2656, "code": "(uint) {\n    ", "debug": "The exception is triggered under the following conditions:\n\ncallvalue: 0x2386f26fe00000\ncalldata_SliceSmart_0: 0x0\ncalldatasize_SliceSmart: 0x4\nstorage_14: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/40/0xe1e06b776abdb08dcb3c4cca7991e93853a44148.sol", "function": "fallback", "lineno": 86, "title": "Exception state", "type": "Informational"}, {"address": 2673, "code": "  str", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x83ffb3569638cea3622d597040d78d7ab7ae5c8a2d8bbb012cad3fb961bad806\nstorage_7: 0xe6089257c80ac0cbe60d5926ff262844c7005edbab82a162281118017d351c97\ncalldata_SliceSmart_0: 0xb5d29f2100000000000000000000000000000000000000000000000000000000\ncalldatasize_SliceSmart: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `authorizationPayment()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/40/0xe1e06b776abdb08dcb3c4cca7991e93853a44148.sol", "function": "authorizationPayment()", "lineno": 76, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2686, "code": "cent {\n    uin", "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_7: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_SliceSmart_0: 0x1d5e968d00000000000000000000000000000000000000000000000000000000\ncalldatasize_SliceSmart: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/40/0xe1e06b776abdb08dcb3c4cca7991e93853a44148.sol", "function": "fallback", "lineno": 76, "title": "Exception state", "type": "Informational"}], "success": true}