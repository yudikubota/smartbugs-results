{"error": null, "issues": [{"address": 2195, "code": ";\n\ncontract ERC20I", "debug": "storage_keccac_calldata_ZCOR_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_ZCOR_32 + 36: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_0: 0x0\ncaller: 0x0\ncalldata_ZCOR_0: 0x145ca11600000000000000000000000000000000000000000000000000000000\ncalldatasize_ZCOR: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `transferLockedBalance(uint256,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/5/0x83ff572a1757b9e4508cb08f13a79ed162c756c4.sol", "function": "transferLockedBalance(uint256,address,uint256)", "lineno": 1, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2451, "code": "r(msg.sender, _to, _value);\n        return t", "debug": "calldata_ZCOR_32 + 36: 0xb135d1e4a0020a903239033aa9b45a69384c906b52a71e0575829626809581fd\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_ZCOR_32_+_4: 0xa7e6e147bc0ca40011bf9bbaadf7593cb8cc90b17cb7d73775f0d8eb1435e9c1\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xb135d1e4a0020a903239033aa9b45a69384c906b52a71e0575829626809581fd\nstorage_0: 0x0\ncaller: 0x0\ncalldata_ZCOR_0: 0x145ca11600000000000000000000000000000000000000000000000000000000\ncalldatasize_ZCOR: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `transferLockedBalance(uint256,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/5/0x83ff572a1757b9e4508cb08f13a79ed162c756c4.sol", "function": "transferLockedBalance(uint256,address,uint256)", "lineno": 68, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2975, "code": ";\n        }\n        delet", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\nUDiv(storage_keccac_keccac_calldata_ZCOR_4_+_0,_256): 0x8000000000000000000000000000000000000000000000000000000000000000\nstorage_keccac_calldata_ZCOR_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_0: 0x0\ncaller: 0x0\ncalldata_ZCOR_0: 0x304f129d00000000000000000000000000000000000000000000000000000000\ncalldatasize_ZCOR: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `unlockBalance(uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/5/0x83ff572a1757b9e4508cb08f13a79ed162c756c4.sol", "function": "unlockBalance(uint256)", "lineno": 81, "title": "Integer Overflow ", "type": "Warning"}, {"address": 3157, "code": ";\n\n\n event Transfer(address indexed from, address", "debug": "The exception is triggered under the following conditions:\n\ncalldata_ZCOR_32 + 4: 0x0\nstorage_keccac_calldata_ZCOR_4: 0x0\ncalldata_ZCOR_0: 0x318c45ab00000000000000000000000000000000000000000000000000000000\ncalldatasize_ZCOR: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/5/0x83ff572a1757b9e4508cb08f13a79ed162c756c4.sol", "function": "_function_0x318c45ab", "lineno": 50, "title": "Exception state", "type": "Informational"}, {"address": 3533, "code": "6 _value) public", "debug": "calldata_ZCOR_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\nUDiv(storage_5,_256): 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_0: 0x0\ncaller: 0x0\ncalldata_ZCOR_0: 0x42966c6800000000000000000000000000000000000000000000000000000000\ncalldatasize_ZCOR: 0x4\ncallvalue: 0x0\n", "description": "A possible integer underflow exists in the function `burn(uint256)`.\nThe subtraction may result in a value < 0.", "filename": "/unique_chucks/5/0x83ff572a1757b9e4508cb08f13a79ed162c756c4.sol", "function": "burn(uint256)", "lineno": 119, "title": "Integer Underflow", "type": "Warning"}, {"address": 4255, "code": "otalSupply\n        return t", "debug": "calldata_ZCOR_4: 0x3d0019bd4bd7f435e4d0aba143c73203e306a5d683d53dff446fb780482425ca\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\nUDiv(storage_5,_256): 0xcd8e74fea9df40a000809bb9bbe7bc7a837611f018cdbdf7777d35ef5b26b4cb\nstorage_0: 0x0\ncaller: 0x0\ncalldata_ZCOR_0: 0xa0712d6800000000000000000000000000000000000000000000000000000000\ncalldatasize_ZCOR: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `mint(uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/5/0x83ff572a1757b9e4508cb08f13a79ed162c756c4.sol", "function": "mint(uint256)", "lineno": 122, "title": "Integer Overflow ", "type": "Warning"}, {"address": 4271, "debug": "storage_4: 0x9c9efb7ae5acd378025256a3945f5859076e809243093d9ecae2636c9fd28979\ncalldata_ZCOR_4: 0xc290137095b13347e55005a6dc184559e0489f1233480050d0fb4bba17d34179\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\nUDiv(storage_5,_256): 0xc290137095b13347e55005a6dc184559e0489f1233480050d0fb4bba17d34179\nstorage_0: 0x0\ncaller: 0x0\ncalldata_ZCOR_0: 0xa0712d6800000000000000000000000000000000000000000000000000000000\ncalldatasize_ZCOR: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `mint(uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/5/0x83ff572a1757b9e4508cb08f13a79ed162c756c4.sol", "function": "mint(uint256)", "lineno": 126, "title": "Integer Overflow ", "type": "Warning"}, {"address": 4449, "code": "kens);\n        return ", "debug": "calldata_ZCOR_32 + 4: 0xb135d1e4a0020a903239033aa9b45a69384c906b52a71e0575829626809581fd\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_ZCOR_4: 0xa7e6e147bc0ca40011bf9bbaadf7593cb8cc90b17cb7d73775f0d8eb1435e9c1\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xb135d1e4a0020a903239033aa9b45a69384c906b52a71e0575829626809581fd\ncalldata_ZCOR_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncalldatasize_ZCOR: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `transfer(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/5/0x83ff572a1757b9e4508cb08f13a79ed162c756c4.sol", "function": "transfer(address,uint256)", "lineno": 107, "title": "Integer Overflow ", "type": "Warning"}, {"address": 5041, "code": "e{\n    string public name = \"ZROCOR\";\n    string public symbol = \"ZCOR\";\n    uint public decimals = 0;\n    \n    uint public supply;\n    address public founder;\n    \n    mapping(address => uint) public balances;\n    mapping(uint => mapping(address => uint)) public timeLockedBalances;\n    mapping(uint => address[]) public lockedAddresses;\n\n\n event Transfer(address indexed from, address indexed to, uint tokens);\n\n\n    constructor() public{\n        supply = 10000000000;\n        founder = msg.sender;\n        balances[founder] = supply;\n    }\n    \n    // transfer locked balance to an address\n    function transferLockedBalance(uint _category, address _to, uint _value) public onlyOwner returns (bool success) {\n        require(balances[msg.sender] >= _value && _value > 0);\n        lockedAddresses[_category].push(_to);\n        balances[msg.sender] -= _value;\n        timeLockedBalances[_category][_to] += _value;\n        emit Transfer(msg.sender, _to, _value);\n        return true;\n    }\n    \n    // unlock category of locked address\n    function unlockBalance(uint _category) public onlyOwner returns (bool success) {\n        uint _length = lockedAddresses[_category].length;\n        address _addr;\n        uint _value = 0;\n        for(uint i = 0; i< _length; i++) {\n            _addr = lockedAddresses[_category][i];\n            _value = timeLockedBalances[_category][_addr];\n            balances[_addr] += _value;\n            timeLockedBalances[_category][_addr] = 0;\n        }\n        delete lockedAddresses[_category];\n        return true;\n    }\n    \n    //view locked balance\n    function lockedBalanceOf(uint level, address _address) public view returns (uint balance) {\n        return timeLockedBalances[level][_address];\n    }\n    \n    function totalSupply() public view returns (uint){\n        return supply;\n    }\n    \n    function balanceOf(address tokenOwner) public view returns (uint balance){\n        return balances[tokenOwner];\n    }\n     \n     \n    //transfer from the owner balance to another address\n    function transfer(address to, uint tokens) public returns (bool success){\n        require(balances[msg.sender] >= tokens && tokens > 0);\n         \n        balances[to] += tokens;\n        balances[msg.sender] -= tokens;\n        emit Transfer(msg.sender, to, tokens);\n        return true;\n    }\n     \n     \n    function burn(uint256 _value) public onlyOwner returns (bool success) {\n        require(balances[founder] >= _value);   // Check if the sender has enough\n        balances[founder] -= _value;            // Subtract from the sender\n        supply -= _value;                      // Updates totalSupply\n        return true;\n    }\n\n    function mint(uint256 _value) public onlyOwner returns (bool success) {\n        require(balances[founder] >= _value);   // Check if the sender has enough\n        balances[founder] += _value;            // Add to the sender\n        supply += _value;                      // Updates totalSupply\n        return true;\n    }\n     \n}", "debug": "storage_keccac_calldata_ZCOR_4: 0x2\nkeccac_keccac_calldata_ZCOR_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_0: 0x0\ncaller: 0x0\ncalldata_ZCOR_0: 0x304f129d00000000000000000000000000000000000000000000000000000000\ncalldatasize_ZCOR: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `unlockBalance(uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/5/0x83ff572a1757b9e4508cb08f13a79ed162c756c4.sol", "function": "unlockBalance(uint256)", "lineno": 40, "title": "Integer Overflow ", "type": "Warning"}], "success": true}