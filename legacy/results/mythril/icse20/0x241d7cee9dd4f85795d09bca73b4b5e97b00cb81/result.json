{
  "contract": "0x241d7cee9dd4f85795d09bca73b4b5e97b00cb81",
  "tool": "mythril",
  "start": 1563819440.387676,
  "end": 1563819666.567171,
  "duration": 226.17949509620667,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 703,
        "code": "me of the role\n   */\n  function addRole(address _operator, string _role)\n    internal\n  {\n    roles[_role].add(_operato",
        "debug": "calldata_UBSxToken_32 + 4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_UBSxToken_0: 0x988ca8c00000000000000000000000000000000000000000000000000000000\ncalldatasize_UBSxToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `checkRole(address,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/31/0x241d7cee9dd4f85795d09bca73b4b5e97b00cb81.sol",
        "function": "checkRole(address,string)",
        "lineno": 512,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 883,
        "code": "e of the role\n   */\n  function removeRole(address _operator, string _role)\n    internal\n  {\n    roles[_role].remove(_operator);\n    emit RoleR",
        "debug": "calldata_UBSxToken_32 + 4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_UBSxToken_0: 0x217fe6c600000000000000000000000000000000000000000000000000000000\ncalldatasize_UBSxToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `hasRole(address,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/31/0x241d7cee9dd4f85795d09bca73b4b5e97b00cb81.sol",
        "function": "hasRole(address,string)",
        "lineno": 524,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 7113,
        "code": "enzeppe",
        "debug": "calldata_UBSxToken_32 + 36: 0xfe51000008ce80008001c1d33616877ffffffffffffff7ffffe10000398d50ac\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_UBSxToken_32_+_4: 0xc050fffff320c00020003d81af848540000000000000040000110001bd062022\ncalldata_UBSxToken_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xfe51000008ce80008001c1d33616877ffffffffffffff7ffffe10000398d50ac\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_UBSxToken_4: 0xfe51000008ce80008001c1d33616877ffffffffffffff7ffffe10000398d50ac\nstorage_6: 0x0\ncalldata_UBSxToken_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_UBSxToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `transferFrom(address,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/31/0x241d7cee9dd4f85795d09bca73b4b5e97b00cb81.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 69,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 7126,
        "code": "idity/contracts",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_UBSxToken_32 + 36: 0x53632f08ddbb360427befb69cb0d577a76825c1eb02b4cefbf971939ae256117\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_UBSxToken_32_+_4: 0xd32ba62e013a1e544c40f8298f8c838ef0ca495e903244487f8ba1f8c2a013e7\ncalldata_UBSxToken_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x53632f08ddbb360427befb69cb0d577a76825c1eb02b4cefbf971939ae256117\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_UBSxToken_4: 0x53632f08ddbb360427befb69cb0d577a76825c1eb02b4cefbf971939ae256117\nstorage_6: 0x0\ncalldata_UBSxToken_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_UBSxToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/31/0x241d7cee9dd4f85795d09bca73b4b5e97b00cb81.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 69,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 9862,
        "code": "dev Adds two num",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_UBSxToken_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_UBSxToken_0: 0x42966c6800000000000000000000000000000000000000000000000000000000\ncalldatasize_UBSxToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/31/0x241d7cee9dd4f85795d09bca73b4b5e97b00cb81.sol",
        "function": "burn(uint256)",
        "lineno": 60,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}