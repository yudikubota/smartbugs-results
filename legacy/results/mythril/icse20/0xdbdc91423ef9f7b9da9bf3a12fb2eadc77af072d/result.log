{"error": null, "issues": [{"address": 388, "code": "\n\t{\n\t\tERC20 token = ERC20(tokenAddress);\n        uint256 count = _holders.length;\n        assert(paySize.mul(count) <= token.balanceOf(this));\n        for (uint256 i = 0; i < count; i++) {\n\t\t\tprocessFunding(tokenAddress,_holders [i],paySize,1);\n\t\t\tairdropSupplyMap[tokenAddress] = airdropSupplyMap[tokenAddress].add(paySize); \n        }\n    }\n\tfunction processFunding(address tokenAddress,address receiver,uint256 _value,uint256 _rate) internal\n\t{\n\t\tE", "debug": "calldata_TokenBooksAirdrop_32 + 4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_TokenBooksAirdrop_0: 0xa1ac727f00000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenBooksAirdrop: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `_function_0xa1ac727f`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/26/0xdbdc91423ef9f7b9da9bf3a12fb2eadc77af072d.sol", "function": "_function_0xa1ac727f", "lineno": 97, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1071, "code": "lders [i],paySize,1);", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/26/0xdbdc91423ef9f7b9da9bf3a12fb2eadc77af072d.sol", "function": "_function_0xa1ac727f", "lineno": 103, "title": "Message call to external contract", "type": "Warning"}, {"address": 2088, "code": "xternal\n\t\tonlyOwner\n\n", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/26/0xdbdc91423ef9f7b9da9bf3a12fb2eadc77af072d.sol", "function": "withdrawCoinToOwner(address,uint256)", "lineno": 118, "title": "Message call to external contract", "type": "Warning"}, {"address": 2088, "code": "xternal\n\t\tonlyOwner\n\n", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2324\n", "filename": "/unique_chucks/26/0xdbdc91423ef9f7b9da9bf3a12fb2eadc77af072d.sol", "function": "withdrawCoinToOwner(address,uint256)", "lineno": 118, "title": "Multiple Calls", "type": "Information"}, {"address": 2324, "code": "sg.sender.send(this.balance)) r", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/26/0xdbdc91423ef9f7b9da9bf3a12fb2eadc77af072d.sol", "function": "withdrawCoinToOwner(address,uint256)", "lineno": 122, "title": "Message call to external contract", "type": "Warning"}], "success": true}