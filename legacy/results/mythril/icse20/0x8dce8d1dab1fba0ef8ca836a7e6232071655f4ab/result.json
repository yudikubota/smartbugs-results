{
  "contract": "0x8dce8d1dab1fba0ef8ca836a7e6232071655f4ab",
  "tool": "mythril",
  "start": 1563739871.4417858,
  "end": 1563739895.809594,
  "duration": 24.3678081035614,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 756,
        "code": "0**18);\n\t}\n}",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/43/0x8dce8d1dab1fba0ef8ca836a7e6232071655f4ab.sol",
        "function": "refund()",
        "lineno": 31,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 793,
        "code": "lic values = [20000, 20000, 10000, 20000, 20000, 20000, 10000, 10000, 10000, 10000, 10000, 20000, 50000, 50000, 50000, 20000, 50000, 20000, 50000, 10000, 20000, 20000, 20000, 20000, 10000, 10000, 10000];\n\tfunction A",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_UNetworkToken_4: 0x0\nstorage_3: 0x0\ncalldata_UNetworkToken_0: 0x5e383d2100000000000000000000000000000000000000000000000000000000\ncalldatasize_UNetworkToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/43/0x8dce8d1dab1fba0ef8ca836a7e6232071655f4ab.sol",
        "function": "_function_0x5e383d21",
        "lineno": 14,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 866,
        "code": "blic recipients = [0x0aF9d2fee427dDb222F1770585F5681969Fdc673, 0xaD41A9B2BAF0671312ff74bC9C4E4447Cc2D3b10, 0x503Fa70B5365978cc6D1784F78983bBe6F041F43, 0xBBf442191aB5213de67Dd4026560c9940F349A6B, 0x3cfbCF1A945Ed6FBf14b701C4524620b29CaF92D, 0xC21395D0ed740961d700B9665687826761f8F0E4, 0xa5851819a8689dbe652347af7772792b2c88bb28, 0xA34A8Ce83B19a89e3a8b3703424451f6bD203b17, 0x716C08e41B99cDd2Aab4bd45ADf20e40b70eaa4c, 0x3B8a44473199C577B591A19ECa42E3c5709A7082, 0xAEDBa642E4F4B2DADBd710D48e21Ac8Ca71ace9c, 0xAca3eD76Dc39d81D0965f2f345E1fd81A0aD5EA8, 0x4d8028cCeeCFdD6bE01b9453B45aC532A4cA3b89, 0x82EDC5a564eB0270381e7f0a5b5e49Eeb8E7408d, 0xf4bf47BfB25937C5BACD84D60791e105bdf1863a, 0xbfaaf37cf26fdd8f5d0af25783023ef65271c541, 0x84F748c6f3514794E1A2FF74Cb6FcB01482a4A08, 0x77ab8a655C6CF540471140EFD0EaaBaE78C132a0, 0xf0b62c2987a5abe5b122d5c1cbe8cc4db3e75fce, 0x2D3c3210188f40cE421E765C8Cb42B9C2d50dAcB, 0x1b1844af2d1a25ac0fe66c82161f505fca26fdd1, 0x6d15061a61E3d0E984410b9e6442422bb4Af237c, 0x5e39CdEdB4AFE732EC89760187bf3Bfe3679Fb7F, 0x1A7E1864DAcF2bB69efd88000245092c6D9FA0f7, 0x2357ee9647e47e47610ff75378ac0543404ec15e, 0x81D723361d4F3e648F2c9c479d88DC6dEBF4fA5f, 0xc1F064Cbb8001da72F8E823D8865f6ec8BAd6e3A];\t\n\tuint256[",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_UNetworkToken_4: 0x0\nstorage_2: 0x0\ncalldata_UNetworkToken_0: 0xd1bc76a100000000000000000000000000000000000000000000000000000000\ncalldatasize_UNetworkToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/43/0x8dce8d1dab1fba0ef8ca836a7e6232071655f4ab.sol",
        "function": "_function_0xd1bc76a1",
        "lineno": 13,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 1168,
        "code": "\t    }\n\t}",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_2: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_1: 0x0\ncaller: 0x0\ncalldata_UNetworkToken_0: 0xf751cd8f00000000000000000000000000000000000000000000000000000000\ncalldatasize_UNetworkToken: 0x4\nstorage_3: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/43/0x8dce8d1dab1fba0ef8ca836a7e6232071655f4ab.sol",
        "function": "drop()",
        "lineno": 25,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 1317,
        "code": "[i], values[i] * 10 ** 18);\n\t    }\n\t}\n\n\t// in cas",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/43/0x8dce8d1dab1fba0ef8ca836a7e6232071655f4ab.sol",
        "function": "drop()",
        "lineno": 24,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 1317,
        "code": "[i], values[i] * 10 ** 18);\n\t    }\n\t}\n\n\t// in cas",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1317\n",
        "filename": "/unique_chucks/43/0x8dce8d1dab1fba0ef8ca836a7e6232071655f4ab.sol",
        "function": "drop()",
        "lineno": 24,
        "title": "Multiple Calls",
        "type": "Information"
      }
    ],
    "success": true
  }
}