{
  "contract": "0xb5e1b1ee15c6fa0e48fce100125569d430f1bd12",
  "tool": "mythril",
  "start": 1563676422.0072446,
  "end": 1563676430.2982626,
  "duration": 8.291018009185791,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 413,
        "code": "         {\n                b",
        "debug": "",
        "description": "This contract executes a message call to the address of the transaction sender. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/36/0xb5e1b1ee15c6fa0e48fce100125569d430f1bd12.sol",
        "function": "CashOut(uint256)",
        "lineno": 35,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 413,
        "code": "         {\n                b",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 755\n",
        "filename": "/unique_chucks/36/0xb5e1b1ee15c6fa0e48fce100125569d430f1bd12.sol",
        "function": "CashOut(uint256)",
        "lineno": 35,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 755,
        "code": "m,\"CashOut\");\n            }\n        }\n    }\n    ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/36/0xb5e1b1ee15c6fa0e48fce100125569d430f1bd12.sol",
        "function": "CashOut(uint256)",
        "lineno": 37,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 860,
        "code": "=msg.value;\n            Transfe",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xa8723c77fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncallvalue: 0x57f03cc000000000000000000000000000000000000000000000000000000000\nstorage_1: 0x57f03cbfffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_Private_Bank_0: 0xed21248c00000000000000000000000000000000000000000000000000000000\ncalldatasize_Private_Bank: 0x4\n",
        "description": "A possible integer overflow exists in the function `Deposit()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/36/0xb5e1b1ee15c6fa0e48fce100125569d430f1bd12.sol",
        "function": "Deposit()",
        "lineno": 22,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1124,
        "code": "(msg.sender,msg.value,\"Deposit\");\n        }\n    }\n    ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/36/0xb5e1b1ee15c6fa0e48fce100125569d430f1bd12.sol",
        "function": "Deposit()",
        "lineno": 23,
        "title": "Message call to external contract",
        "type": "Informational"
      }
    ],
    "success": true
  }
}