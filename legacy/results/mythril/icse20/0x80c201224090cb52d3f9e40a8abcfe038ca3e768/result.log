{"error": null, "issues": [{"address": 581, "code": "dPwd)\n    onlySuperOwnerWithPwd(pwd, newHashedPwd)\n    public {\n        owner = newOwner;\n        emit ConfigurationChanged(msg.sender, newOwner, \"a new Owner has been assigned\");\n    }\n\n    function setBypassForAll(bool _bypass)\n    onlySuperOwner\n    p", "debug": "calldata_SafeBlocksProxy_32 + 4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_SafeBlocksProxy_0: 0xa603026b00000000000000000000000000000000000000000000000000000000\ncalldatasize_SafeBlocksProxy: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `setOwner(address,string,bytes32)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/37/0x80c201224090cb52d3f9e40a8abcfe038ca3e768.sol", "function": "setOwner(address,string,bytes32)", "lineno": 64, "title": "Integer Overflow ", "type": "Warning"}, {"address": 779, "code": " bytes32 newHashedPwd)\n    onlySuperOwnerWithPwd(pwd, newHashedPwd)\n    public {\n        superOwner = newSuperOwner;\n        emit ConfigurationChanged(msg.sender, newSuperOwner, \"a new Super-Owner has been assigned\");\n    }\n\n    function setOwner(address newOwner, string pwd, bytes32 ", "debug": "calldata_SafeBlocksProxy_32 + 4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_SafeBlocksProxy_0: 0xf05d75a000000000000000000000000000000000000000000000000000000000\ncalldatasize_SafeBlocksProxy: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `setSuperOwner(address,string,bytes32)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/37/0x80c201224090cb52d3f9e40a8abcfe038ca3e768.sol", "function": "setSuperOwner(address,string,bytes32)", "lineno": 57, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1458, "code": " _destination, _functionSig, block.number);\n        return result;\n    }\n", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/37/0x80c201224090cb52d3f9e40a8abcfe038ca3e768.sol", "function": "allowAccess(address,bytes4)", "lineno": 129, "title": "Message call to external contract", "type": "Informational"}, {"address": 1458, "code": " _destination, _functionSig, block.number);\n        return result;\n    }\n", "debug": "", "description": "A possible transaction order independence vulnerability exists in function allowAccess(address,bytes4). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/37/0x80c201224090cb52d3f9e40a8abcfe038ca3e768.sol", "function": "allowAccess(address,bytes4)", "lineno": 129, "title": "Transaction order dependence", "type": "Warning"}, {"address": 2343, "code": "ionResult(senderAddress, result, _token, _amount, _destination, block.number);\n  ", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/37/0x80c201224090cb52d3f9e40a8abcfe038ca3e768.sol", "function": "allowTransaction(uint256,address,address)", "lineno": 110, "title": "Message call to external contract", "type": "Informational"}, {"address": 2343, "code": "ionResult(senderAddress, result, _token, _amount, _destination, block.number);\n  ", "debug": "", "description": "A possible transaction order independence vulnerability exists in function allowTransaction(uint256,address,address). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/37/0x80c201224090cb52d3f9e40a8abcfe038ca3e768.sol", "function": "allowTransaction(uint256,address,address)", "lineno": 110, "title": "Transaction order dependence", "type": "Warning"}], "success": true}