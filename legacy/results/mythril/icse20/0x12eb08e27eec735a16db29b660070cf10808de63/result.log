{"error": null, "issues": [{"address": 1154, "code": "sender == owner);\n        _", "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_VestingContract_0: 0x21b8092e00000000000000000000000000000000000000000000000000000000\ncalldatasize_VestingContract: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/9/0x12eb08e27eec735a16db29b660070cf10808de63.sol", "function": "setWithdrawalAddress(address)", "lineno": 12, "title": "Exception state", "type": "Informational"}, {"address": 1899, "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/9/0x12eb08e27eec735a16db29b660070cf10808de63.sol", "function": "getTokenBalance()", "lineno": 102, "title": "Message call to external contract", "type": "Informational"}, {"address": 2122, "code": "sender == owner);\n        _", "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_VestingContract_0: 0xa0929cda00000000000000000000000000000000000000000000000000000000\ncalldatasize_VestingContract: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/9/0x12eb08e27eec735a16db29b660070cf10808de63.sol", "function": "salvageTokensFromContract(address,address,uint256)", "lineno": 12, "title": "Exception state", "type": "Informational"}, {"address": 2382, "code": "ters\n    //\n\n    function setWithdrawalAddress(ad", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/9/0x12eb08e27eec735a16db29b660070cf10808de63.sol", "function": "salvageTokensFromContract(address,address,uint256)", "lineno": 84, "title": "Message call to external contract", "type": "Warning"}, {"address": 2533, "code": "sender == owner);\n        _", "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_VestingContract_0: 0xb88a802f00000000000000000000000000000000000000000000000000000000\ncalldatasize_VestingContract: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/9/0x12eb08e27eec735a16db29b660070cf10808de63.sol", "function": "claimReward()", "lineno": 12, "title": "Exception state", "type": "Informational"}, {"address": 2750, "code": "         withdrawalAmount = reward;\n        }else ", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/9/0x12eb08e27eec735a16db29b660070cf10808de63.sol", "function": "claimReward()", "lineno": 68, "title": "Message call to external contract", "type": "Informational"}, {"address": 2750, "code": "         withdrawalAmount = reward;\n        }else ", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3307\nCall at address: 3014\nCall at address: 3307\n", "filename": "/unique_chucks/9/0x12eb08e27eec735a16db29b660070cf10808de63.sol", "function": "claimReward()", "lineno": 68, "title": "Multiple Calls", "type": "Information"}, {"address": 3014, "code": " IERC20Token(tokenAddress).transfer(withdrawalAddr", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/9/0x12eb08e27eec735a16db29b660070cf10808de63.sol", "function": "claimReward()", "lineno": 72, "title": "Message call to external contract", "type": "Informational"}, {"address": 3014, "code": " IERC20Token(tokenAddress).transfer(withdrawalAddr", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3307\n", "filename": "/unique_chucks/9/0x12eb08e27eec735a16db29b660070cf10808de63.sol", "function": "claimReward()", "lineno": 72, "title": "Multiple Calls", "type": "Information"}, {"address": 3307, "code": ";\n        lastBlockClaimed += blockDelay;\n        ClaimExecuted(withdra", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/9/0x12eb08e27eec735a16db29b660070cf10808de63.sol", "function": "claimReward()", "lineno": 72, "title": "Message call to external contract", "type": "Informational"}, {"address": 3375, "code": "block.number, withdrawalAddres", "debug": "storage_4: 0x80000000000220780d0b2aace014023000802e0c22820153c10c080000000800\nstorage_5: 0xffffffffdffb38bc3aa02fc8b064073000af4063d46dfeffc000000000000000\nretval_2750: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nretval_3307: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_6: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nreturndatasize: 0x20\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nblock_number: 0x7fffffffdffd593447ab5a7590780960012f6e6ff6f00053810c080000000800\nstorage_0: 0x0\ncaller: 0x0\ncalldata_VestingContract_0: 0xb88a802f00000000000000000000000000000000000000000000000000000000\ncalldatasize_VestingContract: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `claimReward()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/9/0x12eb08e27eec735a16db29b660070cf10808de63.sol", "function": "claimReward()", "lineno": 74, "title": "Integer Overflow ", "type": "Warning"}, {"address": 3703, "code": "sender == owner);\n        _", "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_VestingContract_0: 0xf2fde38b00000000000000000000000000000000000000000000000000000000\ncalldatasize_VestingContract: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/9/0x12eb08e27eec735a16db29b660070cf10808de63.sol", "function": "transferOwnership(address)", "lineno": 12, "title": "Exception state", "type": "Informational"}, {"address": 3957, "code": "sender == owner);\n        _", "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_VestingContract_0: 0xfa67ae5a00000000000000000000000000000000000000000000000000000000\ncalldatasize_VestingContract: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/9/0x12eb08e27eec735a16db29b660070cf10808de63.sol", "function": "setBlockDelay(uint256)", "lineno": 12, "title": "Exception state", "type": "Informational"}], "success": true}