{"error": null, "issues": [{"address": 4081, "code": "turns", "debug": "callvalue: 0x93931c13e507cbbcbf74d9eee4fb920eeaef84aa5110428da2eddb017d5ebcdd\nstorage_42968895388377710148156740012165625056958882193801299486065383385270288799431: 0xb2c81e3be60b809eebca250ae5f3958de8241f3c0942692d3cecd1fd00743211\ncalldatasize_ldoh: 0x3\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/19/0x3cc2806b2aff4a3a77dfb99f0ed689db221a4a29.sol", "function": "fallback", "lineno": 565, "title": "Integer Overflow ", "type": "Warning"}, {"address": 4234, "code": "ess\n\tmapping(address => address[]) \t\tpublic affli", "debug": "The exception is triggered under the following conditions:\n\ncalldata_ldoh_32 + 4: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\ncalldata_ldoh_4: 0x0\ncalldata_ldoh_0: 0x11a3311c00000000000000000000000000000000000000000000000000000000\ncalldatasize_ldoh: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/19/0x3cc2806b2aff4a3a77dfb99f0ed689db221a4a29.sol", "function": "_function_0x11a3311c", "lineno": 99, "title": "Exception state", "type": "Informational"}, {"address": 4875, "code": "unt);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\n      ", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/19/0x3cc2806b2aff4a3a77dfb99f0ed689db221a4a29.sol", "function": "Holdplatform_Withdraw(uint256)", "lineno": 507, "title": "Message call to external contract", "type": "Informational"}, {"address": 4875, "code": "unt);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\n      ", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 5110\n", "filename": "/unique_chucks/19/0x3cc2806b2aff4a3a77dfb99f0ed689db221a4a29.sol", "function": "Holdplatform_Withdraw(uint256)", "lineno": 507, "title": "Multiple Calls", "type": "Information"}, {"address": 5110, "code": " }\n        }\n\t\t\n    }   \n\t\n\t\n\t/*==", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/19/0x3cc2806b2aff4a3a77dfb99f0ed689db221a4a29.sol", "function": "Holdplatform_Withdraw(uint256)", "lineno": 513, "title": "Message call to external contract", "type": "Informational"}], "success": true}