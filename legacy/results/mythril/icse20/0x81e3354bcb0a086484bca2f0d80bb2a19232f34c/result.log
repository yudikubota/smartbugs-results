{"error": null, "issues": [{"address": 497, "code": "ng _info) public onlyOwner {\n        require(records[_uuid].timestamp == 0);\n        records[_uuid].timestamp = now;\n        records[_uuid].info = _info;\n    }\n    \n    function getInfo(uint _", "debug": "calldata_RegistryContract_32 + 4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_RegistryContract_0: 0x5a7511d000000000000000000000000000000000000000000000000000000000\ncalldatasize_RegistryContract: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `put(uint256,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/37/0x81e3354bcb0a086484bca2f0d80bb2a19232f34c.sol", "function": "put(uint256,string)", "lineno": 30, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1501, "code": "ntract RegistryContract {\n    \n    struct record {\n       uint timestamp;\n       string info;\n    }\n    \n    mapping (uint => record) public records;\n   \n    address owner;\n   \n   \n    modifier onlyOwner() {\n        require(msg.sender == owner);\n        _;\n    }\n   \n   \n   \n    function RegistryContract() {\n       owner = msg.sender;\n    }\n    \n    function transferOwnership(address newOwner) public onlyOwner {\n        owner = newOwner;\n    }\n    \n    function put(uint _uuid, string _info) public onlyOwner {\n        require(records[_uuid].timestamp == 0);\n        records[_uuid].timestamp = now;\n        records[_uuid].info = _info;\n    }\n    \n    function getInfo(uint _uuid) public returns(string) {\n        return records[_uuid].info;\n    }\n    \n    function getTimestamp(uint _uuid) public returns(uint) {\n        return records[_uuid].timestamp;\n    }\n    \n}", "debug": "keccac_1_+_keccac_calldata_RegistryContract_4: 0xff13e6a7459ae5a4c49c419171c3f89100a371508000000000129200000219e2\nstorage_1 + keccac_calldata_RegistryContract_4: 0xbac1c3147749165dd7d1977fffffffffffffffffffffffffffffffffffffffc5\nstorage_1: 0x0\ncaller: 0x0\ncalldata_RegistryContract_0: 0x5a7511d000000000000000000000000000000000000000000000000000000000\ncalldatasize_RegistryContract: 0x4\nstorage_0 + keccac_calldata_RegistryContract_4: 0x0\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `put(uint256,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/37/0x81e3354bcb0a086484bca2f0d80bb2a19232f34c.sol", "function": "put(uint256,string)", "lineno": 3, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1530, "code": "ntract RegistryContract {\n    \n    struct record {\n       uint timestamp;\n       string info;\n    }\n    \n    mapping (uint => record) public records;\n   \n    address owner;\n   \n   \n    modifier onlyOwner() {\n        require(msg.sender == owner);\n        _;\n    }\n   \n   \n   \n    function RegistryContract() {\n       owner = msg.sender;\n    }\n    \n    function transferOwnership(address newOwner) public onlyOwner {\n        owner = newOwner;\n    }\n    \n    function put(uint _uuid, string _info) public onlyOwner {\n        require(records[_uuid].timestamp == 0);\n        records[_uuid].timestamp = now;\n        records[_uuid].info = _info;\n    }\n    \n    function getInfo(uint _uuid) public returns(string) {\n        return records[_uuid].info;\n    }\n    \n    function getTimestamp(uint _uuid) public returns(uint) {\n        return records[_uuid].timestamp;\n    }\n    \n}", "debug": "calldata_RegistryContract_4 + calldata_RegistryContract_32 + 4: 0x8000000000000000000000000000000000000000000000000000000000000000\nstorage_1: 0x0\ncaller: 0x0\ncalldata_RegistryContract_0: 0x5a7511d000000000000000000000000000000000000000000000000000000000\ncalldatasize_RegistryContract: 0x4\nstorage_0 + keccac_calldata_RegistryContract_4: 0x0\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `put(uint256,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/37/0x81e3354bcb0a086484bca2f0d80bb2a19232f34c.sol", "function": "put(uint256,string)", "lineno": 3, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1544, "code": "ntract RegistryContract {\n    \n    struct record {\n       uint timestamp;\n       string info;\n    }\n    \n    mapping (uint => record) public records;\n   \n    address owner;\n   \n   \n    modifier onlyOwner() {\n        require(msg.sender == owner);\n        _;\n    }\n   \n   \n   \n    function RegistryContract() {\n       owner = msg.sender;\n    }\n    \n    function transferOwnership(address newOwner) public onlyOwner {\n        owner = newOwner;\n    }\n    \n    function put(uint _uuid, string _info) public onlyOwner {\n        require(records[_uuid].timestamp == 0);\n        records[_uuid].timestamp = now;\n        records[_uuid].info = _info;\n    }\n    \n    function getInfo(uint _uuid) public returns(string) {\n        return records[_uuid].info;\n    }\n    \n    function getTimestamp(uint _uuid) public returns(uint) {\n        return records[_uuid].timestamp;\n    }\n    \n}", "debug": "calldata_RegistryContract_4 + calldata_RegistryContract_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\nstorage_1: 0x0\ncaller: 0x0\ncalldata_RegistryContract_0: 0x5a7511d000000000000000000000000000000000000000000000000000000000\ncalldatasize_RegistryContract: 0x4\nstorage_0 + keccac_calldata_RegistryContract_4: 0x0\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `put(uint256,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/37/0x81e3354bcb0a086484bca2f0d80bb2a19232f34c.sol", "function": "put(uint256,string)", "lineno": 3, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1566, "code": "ntract RegistryContract {\n    \n    struct record {\n       uint timestamp;\n       string info;\n    }\n    \n    mapping (uint => record) public records;\n   \n    address owner;\n   \n   \n    modifier onlyOwner() {\n        require(msg.sender == owner);\n        _;\n    }\n   \n   \n   \n    function RegistryContract() {\n       owner = msg.sender;\n    }\n    \n    function transferOwnership(address newOwner) public onlyOwner {\n        owner = newOwner;\n    }\n    \n    function put(uint _uuid, string _info) public onlyOwner {\n        require(records[_uuid].timestamp == 0);\n        records[_uuid].timestamp = now;\n        records[_uuid].info = _info;\n    }\n    \n    function getInfo(uint _uuid) public returns(string) {\n        return records[_uuid].info;\n    }\n    \n    function getTimestamp(uint _uuid) public returns(uint) {\n        return records[_uuid].timestamp;\n    }\n    \n}", "debug": "calldata_RegistryContract_4 + calldata_RegistryContract_32 + 4: 0x4000f04100100000000000000000000000000000d6401413fffffffffffffe0\nkeccac_1_+_keccac_calldata_RegistryContract_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_1: 0x0\ncaller: 0x0\ncalldata_RegistryContract_0: 0x5a7511d000000000000000000000000000000000000000000000000000000000\ncalldatasize_RegistryContract: 0x4\nstorage_0 + keccac_calldata_RegistryContract_4: 0x0\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `put(uint256,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/37/0x81e3354bcb0a086484bca2f0d80bb2a19232f34c.sol", "function": "put(uint256,string)", "lineno": 3, "title": "Integer Overflow ", "type": "Warning"}], "success": true}