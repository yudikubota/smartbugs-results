{
  "contract": "0xc6b0adaec68a91e36903a9601d3489ef6a6ff9ce",
  "tool": "mythril",
  "start": 1563741269.46963,
  "end": 1563741294.129687,
  "duration": 24.660057067871094,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 531,
        "code": "  ) public returns(address newContract)\n  {\n    //remember to call Token(address).approve(this, amount) or this contract will not be able to do the transfer on your behalf.\n    require(Accelerator(ACCELERATOR_ADDR).transferFrom(msg.sender, this, 10**21));\n    /// @dev Send the tokens to address(0) (the burn address) - require it or fail here\n    require(Accelerator(ACCELERATOR_ADDR).transfer(address(0), 10**21));\n    address c = new Domain(register_domain);\n    contracts.push(c);\n    return c;\n  }\n}",
        "debug": "calldata_Registrar_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_Registrar_0: 0xf2c298be00000000000000000000000000000000000000000000000000000000\ncalldatasize_Registrar: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `register(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/41/0xc6b0adaec68a91e36903a9601d3489ef6a6ff9ce.sol",
        "function": "register(string)",
        "lineno": 49,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 737,
        "code": "ful to know the row count ",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_Registrar_4: 0x0\nstorage_0: 0x0\ncalldata_Registrar_0: 0x474da79a00000000000000000000000000000000000000000000000000000000\ncalldatasize_Registrar: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/41/0xc6b0adaec68a91e36903a9601d3489ef6a6ff9ce.sol",
        "function": "_function_0x474da79a",
        "lineno": 38,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 1071,
        "code": "er, this, 10**21));\n    /// @dev Send the tokens to address(0) (the ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/41/0xc6b0adaec68a91e36903a9601d3489ef6a6ff9ce.sol",
        "function": "register(string)",
        "lineno": 52,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 1071,
        "code": "er, this, 10**21));\n    /// @dev Send the tokens to address(0) (the ",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1334\n",
        "filename": "/unique_chucks/41/0xc6b0adaec68a91e36903a9601d3489ef6a6ff9ce.sol",
        "function": "register(string)",
        "lineno": 52,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 1334,
        "code": "**21));\n    address c = new Domain(register_domain);\n    c",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/41/0xc6b0adaec68a91e36903a9601d3489ef6a6ff9ce.sol",
        "function": "register(string)",
        "lineno": 54,
        "title": "Message call to external contract",
        "type": "Informational"
      }
    ],
    "success": true
  }
}