{
  "contract": "0x582ea0af091ae0d98fdf08216cb2846711a65f6a",
  "tool": "mythril",
  "start": 1563544942.5000303,
  "end": 1563545186.9590592,
  "duration": 244.4590289592743,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 1382,
        "code": "ErrorReport( tx.origin, 0x820000000, uint(msg.sender) );\n            return false;\n        }\n\n        if( validate ) {\n            if( ( sources.length != dests.length ) ||\n                ( sources.length != conversionRates.length ) ||\n                ( sources.length != expiryBlocks.length ) ) {\n                // arrays length are not identical\n                ErrorReport( tx.origin, 0x820000001, 0 );\n                return false;\n            }\n        }\n\n        for( uint i = 0 ; i < sources.length ; i++ ) {\n            SetRate( sources[i], dests[i], conversionRates[i], expiryBlocks[i] );\n            pairConversionRate[sha3(sources[i],dests[i])] = ConversionRate( conversionRates[i], expiryBlocks[i] );\n        }\n\n        ErrorReport( tx.origin, 0, 0 );\n        return true;\n    }\n\n    event EnableTrade( bool enable );\n\n    /// @notice can be called only by owner\n    /// @dev enable of disable trade\n    /// @param enable if true trade is enabled, otherwise disabled\n    /// @return true iff trade is succesful\n    function enab",
        "debug": "calldata_KyberReserve_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_KyberReserve_0: 0xda6dfea700000000000000000000000000000000000000000000000000000000\ncalldatasize_KyberReserve: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `_function_0xda6dfea7`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/16/0x582ea0af091ae0d98fdf08216cb2846711a65f6a.sol",
        "function": "_function_0xda6dfea7",
        "lineno": 230,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1886,
        "code": "g.sender ",
        "debug": "",
        "description": "Function _function_0x0363b1e1 retrieves the transaction origin (tx.origin) using the ORIGIN opcode. Use msg.sender instead.\nSee also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin",
        "filename": "/unique_chucks/16/0x582ea0af091ae0d98fdf08216cb2846711a65f6a.sol",
        "function": "_function_0x0363b1e1",
        "lineno": 194,
        "title": "Use of tx.origin",
        "type": "Warning"
      },
      {
        "address": 2148,
        "code": " if( ! do",
        "debug": "",
        "description": "Function _function_0x0363b1e1 retrieves the transaction origin (tx.origin) using the ORIGIN opcode. Use msg.sender instead.\nSee also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin",
        "filename": "/unique_chucks/16/0x582ea0af091ae0d98fdf08216cb2846711a65f6a.sol",
        "function": "_function_0x0363b1e1",
        "lineno": 204,
        "title": "Use of tx.origin",
        "type": "Warning"
      },
      {
        "address": 2363,
        "code": ", 0 );\n  ",
        "debug": "",
        "description": "Function _function_0x0363b1e1 retrieves the transaction origin (tx.origin) using the ORIGIN opcode. Use msg.sender instead.\nSee also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin",
        "filename": "/unique_chucks/16/0x582ea0af091ae0d98fdf08216cb2846711a65f6a.sol",
        "function": "_function_0x0363b1e1",
        "lineno": 213,
        "title": "Use of tx.origin",
        "type": "Warning"
      },
      {
        "address": 2875,
        "code": "     // transfer from failed\n      ",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/16/0x582ea0af091ae0d98fdf08216cb2846711a65f6a.sol",
        "function": "_function_0x338b5dea",
        "lineno": 301,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 2875,
        "code": "     // transfer from failed\n      ",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3520\nCall at address: 3209\n",
        "filename": "/unique_chucks/16/0x582ea0af091ae0d98fdf08216cb2846711a65f6a.sol",
        "function": "_function_0x338b5dea",
        "lineno": 301,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 2938,
        "code": "   }\n\n   ",
        "debug": "",
        "description": "Function _function_0x338b5dea retrieves the transaction origin (tx.origin) using the ORIGIN opcode. Use msg.sender instead.\nSee also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin",
        "filename": "/unique_chucks/16/0x582ea0af091ae0d98fdf08216cb2846711a65f6a.sol",
        "function": "_function_0x338b5dea",
        "lineno": 304,
        "title": "Use of tx.origin",
        "type": "Warning"
      },
      {
        "address": 3209,
        "code": "en( token, amount );\n        return",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/16/0x582ea0af091ae0d98fdf08216cb2846711a65f6a.sol",
        "function": "_function_0x338b5dea",
        "lineno": 306,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 3520,
        "code": ", address destination );\n\n    /// @notice can",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/16/0x582ea0af091ae0d98fdf08216cb2846711a65f6a.sol",
        "function": "_function_0x338b5dea",
        "lineno": 311,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 3583,
        "code": "contract\n",
        "debug": "",
        "description": "Function _function_0x338b5dea retrieves the transaction origin (tx.origin) using the ORIGIN opcode. Use msg.sender instead.\nSee also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin",
        "filename": "/unique_chucks/16/0x582ea0af091ae0d98fdf08216cb2846711a65f6a.sol",
        "function": "_function_0x338b5dea",
        "lineno": 314,
        "title": "Use of tx.origin",
        "type": "Warning"
      },
      {
        "address": 4307,
        "code": " this.balance;\n     ",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/16/0x582ea0af091ae0d98fdf08216cb2846711a65f6a.sol",
        "function": "_function_0x400f7a1e",
        "lineno": 368,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 4477,
        "code": "rigin, 0x",
        "debug": "",
        "description": "Function _function_0x69328dec retrieves the transaction origin (tx.origin) using the ORIGIN opcode. Use msg.sender instead.\nSee also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin",
        "filename": "/unique_chucks/16/0x582ea0af091ae0d98fdf08216cb2846711a65f6a.sol",
        "function": "_function_0x69328dec",
        "lineno": 331,
        "title": "Use of tx.origin",
        "type": "Warning"
      },
      {
        "address": 4905,
        "code": "{\n      if( msg.sender != reserveO",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/16/0x582ea0af091ae0d98fdf08216cb2846711a65f6a.sol",
        "function": "_function_0x69328dec",
        "lineno": 339,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 4968,
        "code": "/////////",
        "debug": "",
        "description": "Function _function_0x69328dec retrieves the transaction origin (tx.origin) using the ORIGIN opcode. Use msg.sender instead.\nSee also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin",
        "filename": "/unique_chucks/16/0x582ea0af091ae0d98fdf08216cb2846711a65f6a.sol",
        "function": "_function_0x69328dec",
        "lineno": 344,
        "title": "Use of tx.origin",
        "type": "Warning"
      },
      {
        "address": 5091,
        "code": "/////////",
        "debug": "",
        "description": "Function _function_0x69328dec retrieves the transaction origin (tx.origin) using the ORIGIN opcode. Use msg.sender instead.\nSee also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin",
        "filename": "/unique_chucks/16/0x582ea0af091ae0d98fdf08216cb2846711a65f6a.sol",
        "function": "_function_0x69328dec",
        "lineno": 345,
        "title": "Use of tx.origin",
        "type": "Warning"
      },
      {
        "address": 5347,
        "code": "/ @param ",
        "debug": "",
        "description": "Function depositEther() retrieves the transaction origin (tx.origin) using the ORIGIN opcode. Use msg.sender instead.\nSee also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin",
        "filename": "/unique_chucks/16/0x582ea0af091ae0d98fdf08216cb2846711a65f6a.sol",
        "function": "depositEther()",
        "lineno": 291,
        "title": "Use of tx.origin",
        "type": "Warning"
      },
      {
        "address": 5852,
        "code": ");\n    fu",
        "debug": "",
        "description": "Function enableTrade(bool) retrieves the transaction origin (tx.origin) using the ORIGIN opcode. Use msg.sender instead.\nSee also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin",
        "filename": "/unique_chucks/16/0x582ea0af091ae0d98fdf08216cb2846711a65f6a.sol",
        "function": "enableTrade(bool)",
        "lineno": 273,
        "title": "Use of tx.origin",
        "type": "Warning"
      },
      {
        "address": 6000,
        "code": "hout call",
        "debug": "",
        "description": "Function enableTrade(bool) retrieves the transaction origin (tx.origin) using the ORIGIN opcode. Use msg.sender instead.\nSee also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin",
        "filename": "/unique_chucks/16/0x582ea0af091ae0d98fdf08216cb2846711a65f6a.sol",
        "function": "enableTrade(bool)",
        "lineno": 278,
        "title": "Use of tx.origin",
        "type": "Warning"
      },
      {
        "address": 6341,
        "code": "oken Source toke",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/16/0x582ea0af091ae0d98fdf08216cb2846711a65f6a.sol",
        "function": "_function_0xcf54aaa0",
        "lineno": 76,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 6341,
        "code": "oken Source toke",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 6341\n",
        "filename": "/unique_chucks/16/0x582ea0af091ae0d98fdf08216cb2846711a65f6a.sol",
        "function": "_function_0x0363b1e1",
        "lineno": 76,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 6514,
        "code": "         ",
        "debug": "",
        "description": "Function _function_0xda6dfea7 retrieves the transaction origin (tx.origin) using the ORIGIN opcode. Use msg.sender instead.\nSee also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin",
        "filename": "/unique_chucks/16/0x582ea0af091ae0d98fdf08216cb2846711a65f6a.sol",
        "function": "_function_0xda6dfea7",
        "lineno": 237,
        "title": "Use of tx.origin",
        "type": "Warning"
      },
      {
        "address": 6679,
        "code": "onversion",
        "debug": "",
        "description": "Function _function_0xda6dfea7 retrieves the transaction origin (tx.origin) using the ORIGIN opcode. Use msg.sender instead.\nSee also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin",
        "filename": "/unique_chucks/16/0x582ea0af091ae0d98fdf08216cb2846711a65f6a.sol",
        "function": "_function_0xda6dfea7",
        "lineno": 246,
        "title": "Use of tx.origin",
        "type": "Warning"
      },
      {
        "address": 6864,
        "code": "   event",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_KyberReserve_4 + calldata_KyberReserve_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_0: 0x0\ncaller: 0x0\ncalldata_KyberReserve_0: 0xda6dfea700000000000000000000000000000000000000000000000000000000\ncalldatasize_KyberReserve: 0x4\nmem_128 +\n32 +\n32*calldata_KyberReserve_4 + calldata_KyberReserve_4: 0x0\ncalldata_KyberReserve_32 + 100: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/16/0x582ea0af091ae0d98fdf08216cb2846711a65f6a.sol",
        "function": "_function_0xda6dfea7",
        "lineno": 253,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 6888,
        "code": "nableTrade( bool e",
        "debug": "The exception is triggered under the following conditions:\n\nmem_128 +\n32 +\n32*calldata_KyberReserve_4 + calldata_KyberReserve_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_KyberReserve_4 + calldata_KyberReserve_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_0: 0x0\ncaller: 0x0\ncalldata_KyberReserve_0: 0xda6dfea700000000000000000000000000000000000000000000000000000000\ncalldatasize_KyberReserve: 0x4\nmem_160 +\n32*calldata_KyberReserve_4 + calldata_KyberReserve_4 +\n32 +\n32*calldata_KyberReserve_4 + calldata_KyberReserve_32 + 4: 0x0\ncalldata_KyberReserve_32 + 100: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/16/0x582ea0af091ae0d98fdf08216cb2846711a65f6a.sol",
        "function": "_function_0xda6dfea7",
        "lineno": 253,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 6912,
        "code": "ble );\n\n    ///",
        "debug": "The exception is triggered under the following conditions:\n\nmem_160 +\n32*calldata_KyberReserve_4 + calldata_KyberReserve_4 +\n32 +\n32*calldata_KyberReserve_4 + calldata_KyberReserve_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nmem_128 +\n32 +\n32*calldata_KyberReserve_4 + calldata_KyberReserve_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_KyberReserve_4 + calldata_KyberReserve_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_0: 0x0\ncaller: 0x0\ncalldata_KyberReserve_0: 0xda6dfea700000000000000000000000000000000000000000000000000000000\ncalldatasize_KyberReserve: 0x4\nmem_192 +\n32*calldata_KyberReserve_4 + calldata_KyberReserve_4 +\n32*calldata_KyberReserve_4 + calldata_KyberReserve_32 + 4 +\n32 +\n32*calldata_KyberReserve_4 + calldata_KyberReserve_32 + 36: 0x0\ncalldata_KyberReserve_32 + 100: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/16/0x582ea0af091ae0d98fdf08216cb2846711a65f6a.sol",
        "function": "_function_0xda6dfea7",
        "lineno": 253,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 7377,
        "code": "n true if",
        "debug": "",
        "description": "Function _function_0xda6dfea7 retrieves the transaction origin (tx.origin) using the ORIGIN opcode. Use msg.sender instead.\nSee also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin",
        "filename": "/unique_chucks/16/0x582ea0af091ae0d98fdf08216cb2846711a65f6a.sol",
        "function": "_function_0xda6dfea7",
        "lineno": 258,
        "title": "Use of tx.origin",
        "type": "Warning"
      },
      {
        "address": 7778,
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/16/0x582ea0af091ae0d98fdf08216cb2846711a65f6a.sol",
        "function": "_function_0xf8b2cb4f",
        "lineno": 371,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 7871,
        "code": "ourceToke",
        "debug": "",
        "description": "Function _function_0x0363b1e1 retrieves the transaction origin (tx.origin) using the ORIGIN opcode. Use msg.sender instead.\nSee also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin",
        "filename": "/unique_chucks/16/0x582ea0af091ae0d98fdf08216cb2846711a65f6a.sol",
        "function": "_function_0x0363b1e1",
        "lineno": 96,
        "title": "Use of tx.origin",
        "type": "Warning"
      },
      {
        "address": 8053,
        "code": "   }\n    ",
        "debug": "",
        "description": "Function _function_0x0363b1e1 retrieves the transaction origin (tx.origin) using the ORIGIN opcode. Use msg.sender instead.\nSee also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin",
        "filename": "/unique_chucks/16/0x582ea0af091ae0d98fdf08216cb2846711a65f6a.sol",
        "function": "_function_0x0363b1e1",
        "lineno": 102,
        "title": "Use of tx.origin",
        "type": "Warning"
      },
      {
        "address": 8167,
        "code": "urceToken",
        "debug": "",
        "description": "Function _function_0x0363b1e1 retrieves the transaction origin (tx.origin) using the ORIGIN opcode. Use msg.sender instead.\nSee also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin",
        "filename": "/unique_chucks/16/0x582ea0af091ae0d98fdf08216cb2846711a65f6a.sol",
        "function": "_function_0x0363b1e1",
        "lineno": 108,
        "title": "Use of tx.origin",
        "type": "Warning"
      },
      {
        "address": 8477,
        "code": "            ErrorReport( tx.origin, 0x80",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/16/0x582ea0af091ae0d98fdf08216cb2846711a65f6a.sol",
        "function": "_function_0x0363b1e1",
        "lineno": 110,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 8477,
        "code": "            ErrorReport( tx.origin, 0x80",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 8811\n",
        "filename": "/unique_chucks/16/0x582ea0af091ae0d98fdf08216cb2846711a65f6a.sol",
        "function": "_function_0x0363b1e1",
        "lineno": 110,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 8540,
        "code": " }\n      ",
        "debug": "",
        "description": "Function _function_0x0363b1e1 retrieves the transaction origin (tx.origin) using the ORIGIN opcode. Use msg.sender instead.\nSee also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin",
        "filename": "/unique_chucks/16/0x582ea0af091ae0d98fdf08216cb2846711a65f6a.sol",
        "function": "_function_0x0363b1e1",
        "lineno": 112,
        "title": "Use of tx.origin",
        "type": "Warning"
      },
      {
        "address": 8811,
        "code": "nt conversionRate = getConversionRate( s",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/16/0x582ea0af091ae0d98fdf08216cb2846711a65f6a.sol",
        "function": "_function_0x0363b1e1",
        "lineno": 115,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 8953,
        "code": "tToken ==",
        "debug": "",
        "description": "Function _function_0x0363b1e1 retrieves the transaction origin (tx.origin) using the ORIGIN opcode. Use msg.sender instead.\nSee also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin",
        "filename": "/unique_chucks/16/0x582ea0af091ae0d98fdf08216cb2846711a65f6a.sol",
        "function": "_function_0x0363b1e1",
        "lineno": 127,
        "title": "Use of tx.origin",
        "type": "Warning"
      }
    ],
    "success": true
  }
}