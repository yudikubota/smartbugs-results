{
  "contract": "0x0a7f20c58c3014e1dfb7f9d460d8bc2202f7bf1f",
  "tool": "mythril",
  "start": 1563785082.8928983,
  "end": 1563785114.0025055,
  "duration": 31.109607219696045,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 100,
        "code": "component",
        "debug": "",
        "description": "Function fallback retrieves the transaction origin (tx.origin) using the ORIGIN opcode. Use msg.sender instead.\nSee also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin",
        "filename": "/unique_chucks/48/0x0a7f20c58c3014e1dfb7f9d460d8bc2202f7bf1f.sol",
        "function": "fallback",
        "lineno": 355,
        "title": "Use of tx.origin",
        "type": "Warning"
      },
      {
        "address": 428,
        "code": "ADDRESS, units[i]);",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/48/0x0a7f20c58c3014e1dfb7f9d460d8bc2202f7bf1f.sol",
        "function": "_function_0xad7fadc5",
        "lineno": 303,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 428,
        "code": "ADDRESS, units[i]);",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2288\nCall at address: 675\n",
        "filename": "/unique_chucks/48/0x0a7f20c58c3014e1dfb7f9d460d8bc2202f7bf1f.sol",
        "function": "_function_0xad7fadc5",
        "lineno": 303,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 675,
        "code": "dd(weight[i]);",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/48/0x0a7f20c58c3014e1dfb7f9d460d8bc2202f7bf1f.sol",
        "function": "_function_0xad7fadc5",
        "lineno": 304,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 675,
        "code": "dd(weight[i]);",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2288\n",
        "filename": "/unique_chucks/48/0x0a7f20c58c3014e1dfb7f9d460d8bc2202f7bf1f.sol",
        "function": "_function_0xad7fadc5",
        "lineno": 304,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 2288,
        "code": " function() public payable {\n        requi",
        "debug": "SOLVER OUTPUT:\nmem_retval_428 + 128: 0xf8000003\nreturndatasize: 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffbe\nmem_mem_128 + Concat(Extract(255, 5, 31 + returndatasize), 0) +\n128 +\nConcat(Extract(255, 5, 31 + returndatasize), 0): 0x0\nmem_128 + Concat(Extract(255, 5, 31 + returndatasize), 0): 0xffffff9f\nretval_428: 0xffffff00\nbalance_at_1461501637330902918203684832716283019655932542975 & 0: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nretval_2164: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nretval_675: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_SetBuyer_0: 0xad7fadc500000000000000000000000000000000000000000000000000000000\ncalldatasize_SetBuyer: 0x4\n",
        "description": "In the function `_function_0xad7fadc5` a non-zero amount of Ether is sent to msg.sender.\nIt seems that this function can be called without restrictions.",
        "filename": "/unique_chucks/48/0x0a7f20c58c3014e1dfb7f9d460d8bc2202f7bf1f.sol",
        "function": "_function_0xad7fadc5",
        "lineno": 339,
        "title": "Ether send",
        "type": "Warning"
      }
    ],
    "success": true
  }
}