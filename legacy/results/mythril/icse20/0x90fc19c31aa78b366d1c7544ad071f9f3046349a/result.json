{
  "contract": "0x90fc19c31aa78b366d1c7544ad071f9f3046349a",
  "tool": "mythril",
  "start": 1563489303.1940007,
  "end": 1563489392.7094717,
  "duration": 89.5154709815979,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 1268,
        "code": "     require(total <= balances[msg.sender]);\n\n        for(uint j = 0; j < _recipients.length; j++){\n            balances[_recipients[j]] = balances[_recipients[j]].add(_values[j]);\n            Transfer(msg.sender, _recipients[j], _values[j]);\n        }\n\n        balances[msg.sender] = balances[msg.sender].sub(total);\n        return true;\n    }\n}",
        "debug": "calldata_TAI_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_TAI_0: 0x88d695b200000000000000000000000000000000000000000000000000000000\ncalldatasize_TAI: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `_function_0x88d695b2`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/4/0x90fc19c31aa78b366d1c7544ad071f9f3046349a.sol",
        "function": "_function_0x88d695b2",
        "lineno": 317,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2156,
        "code": " }\n}\n",
        "debug": "calldata_TAI_32 + 36: 0xfe51000008ce80008001c1d33616877ffffffffffffff7ffffe10000398d50ac\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TAI_32_+_4: 0xc050fffff320c00020003d81af848540000000000000040000110001bd062022\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xfe51000008ce80008001c1d33616877ffffffffffffff7ffffe10000398d50ac\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TAI_4: 0xfe51000008ce80008001c1d33616877ffffffffffffff7ffffe10000398d50ac\ncalldata_TAI_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_TAI_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_TAI: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `transferFrom(address,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/4/0x90fc19c31aa78b366d1c7544ad071f9f3046349a.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 46,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2169,
        "code": "* @title Ownab",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_TAI_32 + 36: 0x53632f08ddbb360427befb69cb0d577a76825c1eb02b4cefbf971939ae256117\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TAI_32_+_4: 0xd32ba62e013a1e544c40f8298f8c838ef0ca495e903244487f8ba1f8c2a013e7\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x53632f08ddbb360427befb69cb0d577a76825c1eb02b4cefbf971939ae256117\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TAI_4: 0x53632f08ddbb360427befb69cb0d577a76825c1eb02b4cefbf971939ae256117\ncalldata_TAI_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_TAI_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_TAI: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/4/0x90fc19c31aa78b366d1c7544ad071f9f3046349a.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 51,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}