{"error": null, "issues": [{"address": 197, "code": "owned, token ", "debug": "The exception is triggered under the following conditions:\n\ncalldata_tokenRecipient_0: 0x6fdde1300000000000000000000000000000000000000000000000000000000\ncalldatasize_tokenRecipient: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/25/0x9f03d94bf3545153cb28014bc7d1e7177ca99034.sol", "function": "fallback", "lineno": 94, "title": "Exception state", "type": "Informational"}, {"address": 1198, "code": "xtraData)\n  returns (bool success) {\n    tokenRecipient spender = tokenRecipient(_spender);\n    if (approve(_spender, _value)) {\n      spender.receiveApproval(msg.sender, _value, this, _extraData);\n      return true;\n    }\n  }\n\n  /* A contract attempts to get the coins */\n  function transferFrom(ad", "debug": "calldata_tokenRecipient_32 + 36: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_tokenRecipient_0: 0xcae9ca5100000000000000000000000000000000000000000000000000000000\ncalldatasize_tokenRecipient: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `approveAndCall(address,uint256,bytes)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/25/0x9f03d94bf3545153cb28014bc7d1e7177ca99034.sol", "function": "approveAndCall(address,uint256,bytes)", "lineno": 67, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1793, "code": "as enough\n    assert (balanceOf[_to", "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_tokenRecipient_4: 0x0\ncalldata_tokenRecipient_32 + 36: 0x1\ncalldata_tokenRecipient_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_tokenRecipient: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/25/0x9f03d94bf3545153cb28014bc7d1e7177ca99034.sol", "function": "transferFrom(address,address,uint256)", "lineno": 78, "title": "Exception state", "type": "Informational"}, {"address": 1933, "code": "  assert (_value <= allowance[_from][msg.sender]);", "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_tokenRecipient_32_+_4: 0xbd5dfeabad0efffffffffeffffffffffd599ffefbfe6f24271e80e64322c0700\ncalldata_tokenRecipient_32 + 36: 0x6218000d800000000000000000000000039800002005500633e06f771baff7fc\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_tokenRecipient_4: 0x6218000d800000000000000000000000039800002005500633e06f771baff7fc\ncalldata_tokenRecipient_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_tokenRecipient: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/25/0x9f03d94bf3545153cb28014bc7d1e7177ca99034.sol", "function": "transferFrom(address,address,uint256)", "lineno": 80, "title": "Exception state", "type": "Informational"}, {"address": 2069, "code": "anceOf[_from] -= _value;                       ", "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_tokenRecipient_32_+_4: 0x7ec8da611f7056c0006a6034a596e50a7b2c30423c350db7c24841c7fcf90041\ncalldata_tokenRecipient_32 + 36: 0x4d0ec2736df154ff7e6b4534bd36d7aacb943c1038b08994cfed7de7ecf92975\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x4d0ec2736df154ff7e6b4534bd36d7aacb943c1038b08994cfed7de7ecf92974\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_tokenRecipient_4: 0x4d0ec2736df154ff7e6b4534bd36d7aacb943c1038b08994cfed7de7ecf92975\ncalldata_tokenRecipient_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_tokenRecipient: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/25/0x9f03d94bf3545153cb28014bc7d1e7177ca99034.sol", "function": "transferFrom(address,address,uint256)", "lineno": 81, "title": "Exception state", "type": "Informational"}, {"address": 2907, "code": "  // Check if the sender has enough\n    ", "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncalldata_tokenRecipient_32 + 4: 0x1\ncalldata_tokenRecipient_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncalldatasize_tokenRecipient: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/25/0x9f03d94bf3545153cb28014bc7d1e7177ca99034.sol", "function": "transfer(address,uint256)", "lineno": 52, "title": "Exception state", "type": "Informational"}, {"address": 3047, "code": " // Check for overflows\n    balanceOf[msg.sender] ", "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_tokenRecipient_4: 0xbd5dfeabad0efffffffffeffffffffffd599ffefbfe6f24271e80e64322c0700\ncalldata_tokenRecipient_32 + 4: 0x6218000d800000000000000000000000039800002005500633e06f771baff7fc\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x6218000d800000000000000000000000039800002005500633e06f771baff7fc\ncalldata_tokenRecipient_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncalldatasize_tokenRecipient: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/25/0x9f03d94bf3545153cb28014bc7d1e7177ca99034.sol", "function": "transfer(address,uint256)", "lineno": 53, "title": "Exception state", "type": "Informational"}, {"address": 3655, "code": "eturn true;\n    }\n  }\n\n  /* A contract attempts to get the co", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/25/0x9f03d94bf3545153cb28014bc7d1e7177ca99034.sol", "function": "approveAndCall(address,uint256,bytes)", "lineno": 72, "title": "Message call to external contract", "type": "Warning"}], "success": true}