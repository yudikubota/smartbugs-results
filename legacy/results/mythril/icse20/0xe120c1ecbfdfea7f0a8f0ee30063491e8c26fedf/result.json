{
  "contract": "0xe120c1ecbfdfea7f0a8f0ee30063491e8c26fedf",
  "tool": "mythril",
  "start": 1563489471.5794942,
  "end": 1563489500.633659,
  "duration": 29.05416464805603,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 1570,
        "code": "es _extraData) returns (bool success) {\n    tokenRecipient spender = tokenRecipient(_spender);\n    if (approve(_spender, _value)) {\n      spender.receiveApproval(msg.sender, _value, this, _extraData);\n      return true;\n    }\n  }\n\n  function burn(uint256 _value) returns (bool success) {\n    asse",
        "debug": "calldata_tokenRecipient_32 + 36: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_tokenRecipient_0: 0xcae9ca5100000000000000000000000000000000000000000000000000000000\ncalldatasize_tokenRecipient: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `approveAndCall(address,uint256,bytes)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/4/0xe120c1ecbfdfea7f0a8f0ee30063491e8c26fedf.sol",
        "function": "approveAndCall(address,uint256,bytes)",
        "lineno": 62,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2160,
        "code": "rt(!(balanceOf[_to] + _value < balan",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_tokenRecipient_4: 0x0\ncalldata_tokenRecipient_32 + 36: 0x1\ncalldata_tokenRecipient_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_tokenRecipient_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_tokenRecipient: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/4/0xe120c1ecbfdfea7f0a8f0ee30063491e8c26fedf.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 48,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2300,
        "code": "o]));\n    assert(!(_value > allowance[_from][msg.se",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_tokenRecipient_32_+_4: 0xbd5dfeabad0efffffffffeffffffffffd599ffefbfe6f24271e80e64322c0700\ncalldata_tokenRecipient_32 + 36: 0x6218000d800000000000000000000000039800002005500633e06f771baff7fc\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_tokenRecipient_4: 0x6218000d800000000000000000000000039800002005500633e06f771baff7fc\ncalldata_tokenRecipient_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_tokenRecipient_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_tokenRecipient: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/4/0xe120c1ecbfdfea7f0a8f0ee30063491e8c26fedf.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 48,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2436,
        "code": ";\n    balanceOf[_from] -= _value;\n    balanceOf[",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_tokenRecipient_32_+_4: 0x7ec8da611f7056c0006a6034a596e50a7b2c30423c350db7c24841c7fcf90041\ncalldata_tokenRecipient_32 + 36: 0x4d0ec2736df154ff7e6b4534bd36d7aacb943c1038b08994cfed7de7ecf92975\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x4d0ec2736df154ff7e6b4534bd36d7aacb943c1038b08994cfed7de7ecf92974\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_tokenRecipient_4: 0x4d0ec2736df154ff7e6b4534bd36d7aacb943c1038b08994cfed7de7ecf92975\ncalldata_tokenRecipient_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_tokenRecipient_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_tokenRecipient: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/4/0xe120c1ecbfdfea7f0a8f0ee30063491e8c26fedf.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 49,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2922,
        "code": "= _value;\n    totalSupply -= _value;\n    ",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncalldata_tokenRecipient_4: 0x1\ncalldata_tokenRecipient_0: 0x42966c6800000000000000000000000000000000000000000000000000000000\ncalldatasize_tokenRecipient: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/4/0xe120c1ecbfdfea7f0a8f0ee30063491e8c26fedf.sol",
        "function": "burn(uint256)",
        "lineno": 72,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3008,
        "code": "}\n\n  function burnFro",
        "debug": "calldata_tokenRecipient_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_0: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_tokenRecipient_0: 0x42966c6800000000000000000000000000000000000000000000000000000000\ncalldatasize_tokenRecipient: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer underflow exists in the function `burn(uint256)`.\nThe subtraction may result in a value < 0.",
        "filename": "/unique_chucks/4/0xe120c1ecbfdfea7f0a8f0ee30063491e8c26fedf.sol",
        "function": "burn(uint256)",
        "lineno": 76,
        "title": "Integer Underflow",
        "type": "Warning"
      },
      {
        "address": 3259,
        "code": "sg.sender]));\n    balanceOf[_from] -",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_tokenRecipient_4: 0x0\ncalldata_tokenRecipient_32 + 4: 0x1\ncalldata_tokenRecipient_0: 0x79cc679000000000000000000000000000000000000000000000000000000000\ncalldatasize_tokenRecipient: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/4/0xe120c1ecbfdfea7f0a8f0ee30063491e8c26fedf.sol",
        "function": "burnFrom(address,uint256)",
        "lineno": 80,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3395,
        "code": "e;\n    totalSupply -= _value;\n    Burn(_from, _v",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_tokenRecipient_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_tokenRecipient_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_tokenRecipient_0: 0x79cc679000000000000000000000000000000000000000000000000000000000\ncalldatasize_tokenRecipient: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/4/0xe120c1ecbfdfea7f0a8f0ee30063491e8c26fedf.sol",
        "function": "burnFrom(address,uint256)",
        "lineno": 81,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3481,
        "debug": "calldata_tokenRecipient_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_0: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_tokenRecipient_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_tokenRecipient_0: 0x79cc679000000000000000000000000000000000000000000000000000000000\ncalldatasize_tokenRecipient: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer underflow exists in the function `burnFrom(address,uint256)`.\nThe subtraction may result in a value < 0.",
        "filename": "/unique_chucks/4/0xe120c1ecbfdfea7f0a8f0ee30063491e8c26fedf.sol",
        "function": "burnFrom(address,uint256)",
        "lineno": 86,
        "title": "Integer Underflow",
        "type": "Warning"
      },
      {
        "address": 3761,
        "code": ";\n    owner = _newOwner;\n  ",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_1: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_tokenRecipient_0: 0xa39a45b700000000000000000000000000000000000000000000000000000000\ncalldatasize_tokenRecipient: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/4/0xe120c1ecbfdfea7f0a8f0ee30063491e8c26fedf.sol",
        "function": "replaceOwner(address)",
        "lineno": 28,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 4106,
        "code": "lue));\n    assert(!(balanceOf[_to] + _val",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncalldata_tokenRecipient_32 + 4: 0x1\ncalldata_tokenRecipient_4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_tokenRecipient_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncalldatasize_tokenRecipient: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/4/0xe120c1ecbfdfea7f0a8f0ee30063491e8c26fedf.sol",
        "function": "transfer(address,uint256)",
        "lineno": 37,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 4246,
        "code": "lanceOf[_to]));\n    balanceOf[msg.sender] -= _value",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_tokenRecipient_4: 0xbd5dfeabad0efffffffffeffffffffffd599ffefbfe6f24271e80e64322c0700\ncalldata_tokenRecipient_32 + 4: 0x6218000d800000000000000000000000039800002005500633e06f771baff7fc\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x6218000d800000000000000000000000039800002005500633e06f771baff7fc\ncalldata_tokenRecipient_4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_tokenRecipient_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncalldatasize_tokenRecipient: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/4/0xe120c1ecbfdfea7f0a8f0ee30063491e8c26fedf.sol",
        "function": "transfer(address,uint256)",
        "lineno": 38,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}