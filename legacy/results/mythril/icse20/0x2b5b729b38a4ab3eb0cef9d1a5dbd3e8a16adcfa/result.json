{
  "contract": "0x2b5b729b38a4ab3eb0cef9d1a5dbd3e8a16adcfa",
  "tool": "mythril",
  "start": 1563591768.60708,
  "end": 1563592062.1958601,
  "duration": 293.5887801647186,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 667,
        "code": "T.transfer(msg.sender, amountZLT);\n     ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/21/0x2b5b729b38a4ab3eb0cef9d1a5dbd3e8a16adcfa.sol",
        "function": "fallback",
        "lineno": 59,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 667,
        "code": "T.transfer(msg.sender, amountZLT);\n     ",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 991\nCall at address: 888\n",
        "filename": "/unique_chucks/21/0x2b5b729b38a4ab3eb0cef9d1a5dbd3e8a16adcfa.sol",
        "function": "fallback",
        "lineno": 59,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 888,
        "code": "ary.transfer(donation);\n    }\n    \n    /",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/21/0x2b5b729b38a4ab3eb0cef9d1a5dbd3e8a16adcfa.sol",
        "function": "fallback",
        "lineno": 60,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 888,
        "code": "ary.transfer(donation);\n    }\n    \n    /",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 991\n",
        "filename": "/unique_chucks/21/0x2b5b729b38a4ab3eb0cef9d1a5dbd3e8a16adcfa.sol",
        "function": "fallback",
        "lineno": 60,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 2760,
        "code": "e available token balanc",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/21/0x2b5b729b38a4ab3eb0cef9d1a5dbd3e8a16adcfa.sol",
        "function": "setTokenReward(address,address)",
        "lineno": 104,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 2760,
        "code": "e available token balanc",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3014\n",
        "filename": "/unique_chucks/21/0x2b5b729b38a4ab3eb0cef9d1a5dbd3e8a16adcfa.sol",
        "function": "setTokenReward(address,address)",
        "lineno": 104,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 2760,
        "code": "e available token balanc",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function setAvailableToken(). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/21/0x2b5b729b38a4ab3eb0cef9d1a5dbd3e8a16adcfa.sol",
        "function": "setAvailableToken()",
        "lineno": 104,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 2821,
        "code": " \n    // Set the available token balanc",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/21/0x2b5b729b38a4ab3eb0cef9d1a5dbd3e8a16adcfa.sol",
        "function": "setAvailableToken()",
        "lineno": 103,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 3014,
        "code": "y\n    function setAvaila",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/21/0x2b5b729b38a4ab3eb0cef9d1a5dbd3e8a16adcfa.sol",
        "function": "setTokenReward(address,address)",
        "lineno": 104,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 3014,
        "code": "y\n    function setAvaila",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function setAvailableToken(). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/21/0x2b5b729b38a4ab3eb0cef9d1a5dbd3e8a16adcfa.sol",
        "function": "setAvailableToken()",
        "lineno": 104,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 3075,
        "code": "ontract manually\n    function setAvaila",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/21/0x2b5b729b38a4ab3eb0cef9d1a5dbd3e8a16adcfa.sol",
        "function": "setAvailableToken()",
        "lineno": 104,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 3432,
        "code": "mountZLT);\n    }\n    \n    // Set token",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/21/0x2b5b729b38a4ab3eb0cef9d1a5dbd3e8a16adcfa.sol",
        "function": "withdrawAvailableToken(address,uint256,uint256)",
        "lineno": 79,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 3432,
        "code": "mountZLT);\n    }\n    \n    // Set token",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3653\n",
        "filename": "/unique_chucks/21/0x2b5b729b38a4ab3eb0cef9d1a5dbd3e8a16adcfa.sol",
        "function": "withdrawAvailableToken(address,uint256,uint256)",
        "lineno": 79,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 3432,
        "code": "mountZLT);\n    }\n    \n    // Set token",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function withdrawAvailableToken(address,uint256,uint256). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/21/0x2b5b729b38a4ab3eb0cef9d1a5dbd3e8a16adcfa.sol",
        "function": "withdrawAvailableToken(address,uint256,uint256)",
        "lineno": 79,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 3653,
        "code": "TH donation/contribution\n    function ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/21/0x2b5b729b38a4ab3eb0cef9d1a5dbd3e8a16adcfa.sol",
        "function": "withdrawAvailableToken(address,uint256,uint256)",
        "lineno": 82,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 3653,
        "code": "TH donation/contribution\n    function ",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function withdrawAvailableToken(address,uint256,uint256). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/21/0x2b5b729b38a4ab3eb0cef9d1a5dbd3e8a16adcfa.sol",
        "function": "withdrawAvailableToken(address,uint256,uint256)",
        "lineno": 82,
        "title": "Transaction order dependence",
        "type": "Warning"
      }
    ],
    "success": true
  }
}