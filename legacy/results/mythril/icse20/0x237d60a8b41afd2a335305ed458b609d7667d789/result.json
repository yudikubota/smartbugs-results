{
  "contract": "0x237d60a8b41afd2a335305ed458b609d7667d789",
  "tool": "mythril",
  "start": 1563534256.037491,
  "end": 1563534260.3990781,
  "duration": 4.361587047576904,
  "analysis": {
    "success": false,
    "error": "Solc experienced a fatal error (code 1).\n\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:14:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use \"constructor(...) { ... }\" instead.\n    function Owned() { owner = msg.sender; }\r\n    ^--------------------------------------^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:26:51: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n    modifier onlyOwner { if (msg.sender != owner) throw; _; }\r\n                                                  ^---^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:132:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use \"constructor(...) { ... }\" instead.\n    function TokenHash(string _name, string _symbol, uint8 _decimals, uint256 _count) {\r\n    ^ (Relevant source part starts here and spans across multiple lines).\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:148:9: Warning: Use of the \"var\" keyword is deprecated.\n        var sender = sha3(msg.sender);\r\n        ^--------^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:167:9: Warning: Use of the \"var\" keyword is deprecated.\n        var sender = sha3(msg.sender);\r\n        ^--------^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:188:9: Warning: Use of the \"var\" keyword is deprecated.\n        var to    = sha3(_to);\r\n        ^----^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:189:9: Warning: Use of the \"var\" keyword is deprecated.\n        var from  = sha3(_from);\r\n        ^------^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:190:9: Warning: Use of the \"var\" keyword is deprecated.\n        var sender= sha3(msg.sender);\r\n        ^--------^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:191:9: Warning: Use of the \"var\" keyword is deprecated.\n        var avail = allowances[from][sender]\r\n        ^-------^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:213:9: Warning: Use of the \"var\" keyword is deprecated.\n        var sender= sha3(msg.sender);\r\n        ^--------^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:214:9: Warning: Use of the \"var\" keyword is deprecated.\n        var avail = allowances[_from][sender]\r\n        ^-------^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:328:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use \"constructor(...) { ... }\" instead.\n    function AiraEtherFunds(address _bot_reg, string _name, string _symbol)\r\n    ^ (Relevant source part starts here and spans across multiple lines).\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:355:9: Warning: Use of the \"var\" keyword is deprecated.\n        var value = msg.value;\r\n        ^-------^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:359:30: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n            if (value < fee) throw;\r\n                             ^---^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:366:13: Warning: Use of the \"var\" keyword is deprecated.\n            var refund = value - limit;\r\n            ^--------^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:367:43: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n            if (!msg.sender.send(refund)) throw;\r\n                                          ^---^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:405:50: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n        if (balances[_dest] + msg.value > limit) throw;\r\n                                                 ^---^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:420:9: Warning: Use of the \"var\" keyword is deprecated.\n        var sender = sha3(msg.sender);\r\n        ^--------^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:421:9: Warning: Use of the \"var\" keyword is deprecated.\n        var avail = allowances[_from][sender]\r\n        ^-------^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:428:36: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n            if (!_to.send(_value)) throw;\r\n                                   ^---^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:433:69: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n    modifier onlySecure { if (msg.sender != reg.addr(\"AiraSecure\")) throw; _; }\r\n                                                                    ^---^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:441:9: Warning: Use of the \"var\" keyword is deprecated.\n        var ethBot = reg.addr(\"AiraEth\");\r\n        ^--------^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:453:9: Warning: Use of the \"var\" keyword is deprecated.\n        var ethBot = reg.addr(\"AiraEth\");\r\n        ^--------^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:459:33: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n    function kill() onlyOwner { throw; }\r\n                                ^---^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:295:5: Error: Identifier already declared.\n    function owner(string _name) constant returns (address o_owner)\r\n    ^ (Relevant source part starts here and spans across multiple lines).\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:9:5: The previous declaration is here:\n    address public owner;\r\n    ^------------------^\n\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:37:7: Warning: \"suicide\" has been deprecated in favour of \"selfdestruct\"\n    { suicide(owner); }\r\n      ^------------^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:103:23: Warning: \"sha3\" has been deprecated in favour of \"keccak256\"\n    { return balances[sha3(_owner)]; }\r\n                      ^----------^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:103:23: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n    { return balances[sha3(_owner)]; }\r\n                      ^----------^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:103:23: Warning: The provided argument of type address is not implicitly convertible to expected type bytes memory.\n    { return balances[sha3(_owner)]; }\r\n                      ^----------^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:120:25: Warning: \"sha3\" has been deprecated in favour of \"keccak256\"\n    { return allowances[sha3(_owner)][sha3(_spender)]; }\r\n                        ^----------^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:120:25: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n    { return allowances[sha3(_owner)][sha3(_spender)]; }\r\n                        ^----------^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:120:25: Warning: The provided argument of type address is not implicitly convertible to expected type bytes memory.\n    { return allowances[sha3(_owner)][sha3(_spender)]; }\r\n                        ^----------^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:120:39: Warning: \"sha3\" has been deprecated in favour of \"keccak256\"\n    { return allowances[sha3(_owner)][sha3(_spender)]; }\r\n                                      ^------------^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:120:39: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n    { return allowances[sha3(_owner)][sha3(_spender)]; }\r\n                                      ^------------^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:120:39: Warning: The provided argument of type address is not implicitly convertible to expected type bytes memory.\n    { return allowances[sha3(_owner)][sha3(_spender)]; }\r\n                                      ^------------^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:137:18: Warning: \"sha3\" has been deprecated in favour of \"keccak256\"\n        balances[sha3(msg.sender)] = _count;\r\n                 ^--------------^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:137:18: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n        balances[sha3(msg.sender)] = _count;\r\n                 ^--------------^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:137:18: Warning: The provided argument of type address is not implicitly convertible to expected type bytes memory.\n        balances[sha3(msg.sender)] = _count;\r\n                 ^--------------^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:148:22: Warning: \"sha3\" has been deprecated in favour of \"keccak256\"\n        var sender = sha3(msg.sender);\r\n                     ^--------------^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:148:22: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n        var sender = sha3(msg.sender);\r\n                     ^--------------^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:148:22: Warning: The provided argument of type address is not implicitly convertible to expected type bytes memory.\n        var sender = sha3(msg.sender);\r\n                     ^--------------^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:152:22: Warning: \"sha3\" has been deprecated in favour of \"keccak256\"\n            balances[sha3(_to)] += _value;\r\n                     ^-------^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:152:22: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n            balances[sha3(_to)] += _value;\r\n                     ^-------^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:152:22: Warning: The provided argument of type address is not implicitly convertible to expected type bytes memory.\n            balances[sha3(_to)] += _value;\r\n                     ^-------^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:153:13: Warning: Invoking events without \"emit\" prefix is deprecated.\n            Transfer(msg.sender, _to, _value);\r\n            ^-------------------------------^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:167:22: Warning: \"sha3\" has been deprecated in favour of \"keccak256\"\n        var sender = sha3(msg.sender);\r\n                     ^--------------^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:167:22: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n        var sender = sha3(msg.sender);\r\n                     ^--------------^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:167:22: Warning: The provided argument of type address is not implicitly convertible to expected type bytes memory.\n        var sender = sha3(msg.sender);\r\n                     ^--------------^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:172:13: Warning: Invoking events without \"emit\" prefix is deprecated.\n            TransferHash(sender, _to, _value);\r\n            ^-------------------------------^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:188:21: Warning: \"sha3\" has been deprecated in favour of \"keccak256\"\n        var to    = sha3(_to);\r\n                    ^-------^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:188:21: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n        var to    = sha3(_to);\r\n                    ^-------^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:188:21: Warning: The provided argument of type address is not implicitly convertible to expected type bytes memory.\n        var to    = sha3(_to);\r\n                    ^-------^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:189:21: Warning: \"sha3\" has been deprecated in favour of \"keccak256\"\n        var from  = sha3(_from);\r\n                    ^---------^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:189:21: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n        var from  = sha3(_from);\r\n                    ^---------^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:189:21: Warning: The provided argument of type address is not implicitly convertible to expected type bytes memory.\n        var from  = sha3(_from);\r\n                    ^---------^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:190:21: Warning: \"sha3\" has been deprecated in favour of \"keccak256\"\n        var sender= sha3(msg.sender);\r\n                    ^--------------^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:190:21: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n        var sender= sha3(msg.sender);\r\n                    ^--------------^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:190:21: Warning: The provided argument of type address is not implicitly convertible to expected type bytes memory.\n        var sender= sha3(msg.sender);\r\n                    ^--------------^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:198:13: Warning: Invoking events without \"emit\" prefix is deprecated.\n            Transfer(_from, _to, _value);\r\n            ^--------------------------^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:213:21: Warning: \"sha3\" has been deprecated in favour of \"keccak256\"\n        var sender= sha3(msg.sender);\r\n                    ^--------------^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:213:21: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n        var sender= sha3(msg.sender);\r\n                    ^--------------^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:213:21: Warning: The provided argument of type address is not implicitly convertible to expected type bytes memory.\n        var sender= sha3(msg.sender);\r\n                    ^--------------^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:221:13: Warning: Invoking events without \"emit\" prefix is deprecated.\n            TransferHash(_from, _to, _value);\r\n            ^------------------------------^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:233:20: Warning: \"sha3\" has been deprecated in favour of \"keccak256\"\n        allowances[sha3(msg.sender)][sha3(_spender)] += _value;\r\n                   ^--------------^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:233:20: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n        allowances[sha3(msg.sender)][sha3(_spender)] += _value;\r\n                   ^--------------^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:233:20: Warning: The provided argument of type address is not implicitly convertible to expected type bytes memory.\n        allowances[sha3(msg.sender)][sha3(_spender)] += _value;\r\n                   ^--------------^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:233:38: Warning: \"sha3\" has been deprecated in favour of \"keccak256\"\n        allowances[sha3(msg.sender)][sha3(_spender)] += _value;\r\n                                     ^------------^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:233:38: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n        allowances[sha3(msg.sender)][sha3(_spender)] += _value;\r\n                                     ^------------^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:233:38: Warning: The provided argument of type address is not implicitly convertible to expected type bytes memory.\n        allowances[sha3(msg.sender)][sha3(_spender)] += _value;\r\n                                     ^------------^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:234:9: Warning: Invoking events without \"emit\" prefix is deprecated.\n        Approval(msg.sender, _spender, _value);\r\n        ^------------------------------------^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:244:20: Warning: \"sha3\" has been deprecated in favour of \"keccak256\"\n        allowances[sha3(msg.sender)][_spender] += _value;\r\n                   ^--------------^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:244:20: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n        allowances[sha3(msg.sender)][_spender] += _value;\r\n                   ^--------------^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:244:20: Warning: The provided argument of type address is not implicitly convertible to expected type bytes memory.\n        allowances[sha3(msg.sender)][_spender] += _value;\r\n                   ^--------------^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:245:22: Warning: \"sha3\" has been deprecated in favour of \"keccak256\"\n        ApprovalHash(sha3(msg.sender), _spender, _value);\r\n                     ^--------------^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:245:22: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n        ApprovalHash(sha3(msg.sender), _spender, _value);\r\n                     ^--------------^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:245:22: Warning: The provided argument of type address is not implicitly convertible to expected type bytes memory.\n        ApprovalHash(sha3(msg.sender), _spender, _value);\r\n                     ^--------------^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:245:9: Warning: Invoking events without \"emit\" prefix is deprecated.\n        ApprovalHash(sha3(msg.sender), _spender, _value);\r\n        ^----------------------------------------------^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:254:18: Warning: \"sha3\" has been deprecated in favour of \"keccak256\"\n    { allowances[sha3(msg.sender)][sha3(_spender)] = 0; }\r\n                 ^--------------^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:254:18: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n    { allowances[sha3(msg.sender)][sha3(_spender)] = 0; }\r\n                 ^--------------^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:254:18: Warning: The provided argument of type address is not implicitly convertible to expected type bytes memory.\n    { allowances[sha3(msg.sender)][sha3(_spender)] = 0; }\r\n                 ^--------------^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:254:36: Warning: \"sha3\" has been deprecated in favour of \"keccak256\"\n    { allowances[sha3(msg.sender)][sha3(_spender)] = 0; }\r\n                                   ^------------^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:254:36: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n    { allowances[sha3(msg.sender)][sha3(_spender)] = 0; }\r\n                                   ^------------^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:254:36: Warning: The provided argument of type address is not implicitly convertible to expected type bytes memory.\n    { allowances[sha3(msg.sender)][sha3(_spender)] = 0; }\r\n                                   ^------------^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:261:18: Warning: \"sha3\" has been deprecated in favour of \"keccak256\"\n    { allowances[sha3(msg.sender)][_spender] = 0; }\r\n                 ^--------------^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:261:18: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n    { allowances[sha3(msg.sender)][_spender] = 0; }\r\n                 ^--------------^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:261:18: Warning: The provided argument of type address is not implicitly convertible to expected type bytes memory.\n    { allowances[sha3(msg.sender)][_spender] = 0; }\r\n                 ^--------------^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:300:3: Warning: Invoking events without \"emit\" prefix is deprecated.\n\t\tChanged(_name);\r\n\t\t^------------^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:305:3: Warning: Invoking events without \"emit\" prefix is deprecated.\n\t\tChanged(_name);\r\n\t\t^------------^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:309:3: Warning: Invoking events without \"emit\" prefix is deprecated.\n\t\tChanged(_name);\r\n\t\t^------------^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:313:3: Warning: Invoking events without \"emit\" prefix is deprecated.\n\t\tChanged(_name);\r\n\t\t^------------^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:360:22: Warning: \"sha3\" has been deprecated in favour of \"keccak256\"\n            balances[sha3(owner)] += fee;\r\n                     ^---------^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:360:22: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n            balances[sha3(owner)] += fee;\r\n                     ^---------^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:360:22: Warning: The provided argument of type address is not implicitly convertible to expected type bytes memory.\n            balances[sha3(owner)] += fee;\r\n                     ^---------^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:372:18: Warning: \"sha3\" has been deprecated in favour of \"keccak256\"\n        balances[sha3(msg.sender)] += value;\r\n                 ^--------------^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:372:18: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n        balances[sha3(msg.sender)] += value;\r\n                 ^--------------^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:372:18: Warning: The provided argument of type address is not implicitly convertible to expected type bytes memory.\n        balances[sha3(msg.sender)] += value;\r\n                 ^--------------^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:376:9: Warning: Invoking events without \"emit\" prefix is deprecated.\n        ActivationRequest(msg.sender, stringToBytes32(_code));\r\n        ^---------------------------------------------------^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:390:21: Warning: \"sha3\" has been deprecated in favour of \"keccak256\"\n    { return refill(sha3(_dest)); }\r\n                    ^---------^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:390:21: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n    { return refill(sha3(_dest)); }\r\n                    ^---------^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:390:21: Warning: The provided argument of type address is not implicitly convertible to expected type bytes memory.\n    { return refill(sha3(_dest)); }\r\n                    ^---------^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:420:22: Warning: \"sha3\" has been deprecated in favour of \"keccak256\"\n        var sender = sha3(msg.sender);\r\n                     ^--------------^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:420:22: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n        var sender = sha3(msg.sender);\r\n                     ^--------------^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:420:22: Warning: The provided argument of type address is not implicitly convertible to expected type bytes memory.\n        var sender = sha3(msg.sender);\r\n                     ^--------------^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:443:33: Warning: \"sha3\" has been deprecated in favour of \"keccak256\"\n            allowances[_client][sha3(ethBot)] += _value;\r\n                                ^----------^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:443:33: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n            allowances[_client][sha3(ethBot)] += _value;\r\n                                ^----------^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:443:33: Warning: The provided argument of type address is not implicitly convertible to expected type bytes memory.\n            allowances[_client][sha3(ethBot)] += _value;\r\n                                ^----------^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:444:35: Warning: \"sha3\" has been deprecated in favour of \"keccak256\"\n            ApprovalHash(_client, sha3(ethBot), _value);\r\n                                  ^----------^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:444:35: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n            ApprovalHash(_client, sha3(ethBot), _value);\r\n                                  ^----------^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:444:35: Warning: The provided argument of type address is not implicitly convertible to expected type bytes memory.\n            ApprovalHash(_client, sha3(ethBot), _value);\r\n                                  ^----------^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:444:13: Warning: Invoking events without \"emit\" prefix is deprecated.\n            ApprovalHash(_client, sha3(ethBot), _value);\r\n            ^-----------------------------------------^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:455:33: Warning: \"sha3\" has been deprecated in favour of \"keccak256\"\n            allowances[_client][sha3(ethBot)] = 0;\r\n                                ^----------^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:455:33: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n            allowances[_client][sha3(ethBot)] = 0;\r\n                                ^----------^\n/unique_chucks/16/0x237d60a8b41afd2a335305ed458b609d7667d789.sol:455:33: Warning: The provided argument of type address is not implicitly convertible to expected type bytes memory.\n            allowances[_client][sha3(ethBot)] = 0;\r\n                                ^----------^\n",
    "issues": []
  }
}