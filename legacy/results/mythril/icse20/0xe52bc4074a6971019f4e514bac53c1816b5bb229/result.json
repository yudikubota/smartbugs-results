{
  "contract": "0xe52bc4074a6971019f4e514bac53c1816b5bb229",
  "tool": "mythril",
  "start": 1563587044.7757256,
  "end": 1563587241.648483,
  "duration": 196.87275743484497,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 403,
        "code": " }\n\n    function setSender(address _sender) public onlyOwner {\n        sender = _sender;\n    }\n\n    function setToken(address _tokenAddress) public onlyOwner {\n        token = StandardToken(_tokenAddress);\n    }\n\n    function resetWith(address _sender, address _tokenAddress) public onlyOwner {\n     ",
        "debug": "calldata_TokensSpreader_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_TokensSpreader_0: 0x2b071e4700000000000000000000000000000000000000000000000000000000\ncalldatasize_TokensSpreader: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `spread(address[],uint256[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/23/0xe52bc4074a6971019f4e514bac53c1816b5bb229.sol",
        "function": "spread(address[],uint256[])",
        "lineno": 299,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1813,
        "code": "etWith(address _sender, address _tokenAddress) publi",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/23/0xe52bc4074a6971019f4e514bac53c1816b5bb229.sol",
        "function": "spread(address[],uint256[])",
        "lineno": 309,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 1813,
        "code": "etWith(address _sender, address _tokenAddress) publi",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1813\n",
        "filename": "/unique_chucks/23/0xe52bc4074a6971019f4e514bac53c1816b5bb229.sol",
        "function": "spread(address[],uint256[])",
        "lineno": 309,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 1813,
        "code": "etWith(address _sender, address _tokenAddress) publi",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function spread(address[],uint256[]). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/23/0xe52bc4074a6971019f4e514bac53c1816b5bb229.sol",
        "function": "spread(address[],uint256[])",
        "lineno": 309,
        "title": "Transaction order dependence",
        "type": "Warning"
      }
    ],
    "success": true
  }
}