{"error": null, "issues": [{"address": 419, "code": " beneficiary\n  ", "debug": "The exception is triggered under the following conditions:\n\nstorage_18: 0x8000\ncalldatasize_ZTCrowdsale: 0x3\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/20/0xaf7aea249098f2c2f50cc11d4000ccf798194373.sol", "function": "fallback", "lineno": 81, "title": "Exception state", "type": "Informational"}, {"address": 698, "code": "end(ethFees)) {\n                ", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/20/0xaf7aea249098f2c2f50cc11d4000ccf798194373.sol", "function": "fallback", "lineno": 257, "title": "Message call to external contract", "type": "Informational"}, {"address": 698, "code": "end(ethFees)) {\n                ", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 881\n", "filename": "/unique_chucks/20/0xaf7aea249098f2c2f50cc11d4000ccf798194373.sol", "function": "fallback", "lineno": 257, "title": "Multiple Calls", "type": "Information"}, {"address": 1077, "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/20/0xaf7aea249098f2c2f50cc11d4000ccf798194373.sol", "function": "fallback", "lineno": 279, "title": "State change after external call", "type": "Warning"}, {"address": 1094, "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/20/0xaf7aea249098f2c2f50cc11d4000ccf798194373.sol", "function": "fallback", "lineno": 279, "title": "State change after external call", "type": "Warning"}, {"address": 2625, "code": ") {\n                r", "debug": "The exception is triggered under the following conditions:\n\nstorage_18: 0x8000\ncalldata_ZTCrowdsale_0: 0x612472fe00000000000000000000000000000000000000000000000000000000\ncalldatasize_ZTCrowdsale: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/20/0xaf7aea249098f2c2f50cc11d4000ccf798194373.sol", "function": "toZT(uint256)", "lineno": 136, "title": "Exception state", "type": "Informational"}, {"address": 2668, "code": "= start + rateAngelDa", "debug": "timestamp: 0x3e4b41e376680803c3a406f24e0681faccda05f3446853050b668d9005f88f5d\nstorage_19: 0x21af2dd738ac91a3abb90807efe4a8f90fc8a64a77d5fba6bf52ed4f55f4df4c\nstorage_20: 0xae81e3e199280105f0ba04c622067c5ccad8190630ce20c8c1a6c00fe1fc1f91\nstorage_18: 0x0\nstorage_12: 0xfd9ccfc3df7dd20bc2f7d4478f17b6fdef0f56d3775ffbacf856e11c6505df32\ncallvalue: 0x0\nstorage_5: 0x0\ncalldatasize_ZTCrowdsale: 0x3\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/20/0xaf7aea249098f2c2f50cc11d4000ccf798194373.sol", "function": "fallback", "lineno": 141, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2693, "code": "tart + rateFirstWeekEnd", "debug": "timestamp: 0x3e4b41e376680803c3a406f24e0681faccda05f3446853050b668d9005f88f5d\nstorage_19: 0x21af2dd738ac91a3abb90807efe4a8f90fc8a64a77d5fba6bf52ed4f55f4df4c\nstorage_20: 0xae81e3e199280105f0ba04c622067c5ccad8190630ce20c8c1a6c00fe1fc1f91\nstorage_13: 0xfd9ccfc3df7dd20bc2f7d4478f17b6fdef0f56d3775ffbacf856e11c6505df32\nstorage_18: 0x0\ncallvalue: 0x0\nstorage_12: 0x1c9c140c3dbb766017eafeea5e21d901bd115fa8cc92575e4c13a040b003b010\nstorage_5: 0x0\ncalldatasize_ZTCrowdsale: 0x3\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/20/0xaf7aea249098f2c2f50cc11d4000ccf798194373.sol", "function": "fallback", "lineno": 146, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2718, "code": "rt + rateSecondWeekEnd) ", "debug": "timestamp: 0x3e4b41e376680803c3a406f24e0681faccda05f3446853050b668d9005f88f5d\nstorage_19: 0x21af2dd738ac91a3abb90807efe4a8f90fc8a64a77d5fba6bf52ed4f55f4df4c\nstorage_20: 0xae81e3e199280105f0ba04c622067c5ccad8190630ce20c8c1a6c00fe1fc1f91\nstorage_18: 0x0\nstorage_14: 0xfd9ccfc3df7dd20bc2f7d4478f17b6fdef0f56d3775ffbacf856e11c6505df32\ncallvalue: 0x0\nstorage_13: 0x1c9c140c3dbb766017eafeea5e21d901bd115fa8cc92575e4c13a040b003b010\nstorage_12: 0x1c9c140c3dbb766017eafeea5e21d901bd115fa8cc92575e4c13a040b003b010\nstorage_5: 0x0\ncalldatasize_ZTCrowdsale: 0x3\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/20/0xaf7aea249098f2c2f50cc11d4000ccf798194373.sol", "function": "fallback", "lineno": 151, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2743, "code": " rateThirdWeekEnd) {\n    ", "debug": "storage_15: 0xfd9ccfc3df7dd20bc2f7d4478f17b6fdef0f56d3775ffbacf856e11c6505df32\ntimestamp: 0x3e4b41e376680803c3a406f24e0681faccda05f3446853050b668d9005f88f5d\nstorage_19: 0x21af2dd738ac91a3abb90807efe4a8f90fc8a64a77d5fba6bf52ed4f55f4df4c\nstorage_20: 0xae81e3e199280105f0ba04c622067c5ccad8190630ce20c8c1a6c00fe1fc1f91\nstorage_18: 0x0\ncallvalue: 0x0\nstorage_14: 0x1c9c140c3dbb766017eafeea5e21d901bd115fa8cc92575e4c13a040b003b010\nstorage_13: 0x1c9c140c3dbb766017eafeea5e21d901bd115fa8cc92575e4c13a040b003b010\nstorage_12: 0x1c9c140c3dbb766017eafeea5e21d901bd115fa8cc92575e4c13a040b003b010\nstorage_5: 0x0\ncalldatasize_ZTCrowdsale: 0x3\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/20/0xaf7aea249098f2c2f50cc11d4000ccf798194373.sol", "function": "fallback", "lineno": 156, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2768, "code": "tWeekEnd) {\n            ", "debug": "storage_16: 0xfd9ccfc3df7dd20bc2f7d4478f17b6fdef0f56d3775ffbacf856e11c6505df32\ntimestamp: 0x3e4b41e376680803c3a406f24e0681faccda05f3446853050b668d9005f88f5d\nstorage_19: 0x21af2dd738ac91a3abb90807efe4a8f90fc8a64a77d5fba6bf52ed4f55f4df4c\nstorage_20: 0xae81e3e199280105f0ba04c622067c5ccad8190630ce20c8c1a6c00fe1fc1f91\nstorage_18: 0x0\ncallvalue: 0x0\nstorage_15: 0x1c9c140c3dbb766017eafeea5e21d901bd115fa8cc92575e4c13a040b003b010\nstorage_14: 0x1c9c140c3dbb766017eafeea5e21d901bd115fa8cc92575e4c13a040b003b010\nstorage_13: 0x1c9c140c3dbb766017eafeea5e21d901bd115fa8cc92575e4c13a040b003b010\nstorage_12: 0x1c9c140c3dbb766017eafeea5e21d901bd115fa8cc92575e4c13a040b003b010\nstorage_5: 0x0\ncalldatasize_ZTCrowdsale: 0x3\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/20/0xaf7aea249098f2c2f50cc11d4000ccf798194373.sol", "function": "fallback", "lineno": 161, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2793, "code": "8 decimals\n\n        // ", "debug": "storage_17: 0xfd9ccfc3df7dd20bc2f7d4478f17b6fdef0f56d3775ffbacf856e11c6505df32\ntimestamp: 0x3e4b41e376680803c3a406f24e0681faccda05f3446853050b668d9005f88f5d\nstorage_19: 0x21af2dd738ac91a3abb90807efe4a8f90fc8a64a77d5fba6bf52ed4f55f4df4c\nstorage_20: 0xae81e3e199280105f0ba04c622067c5ccad8190630ce20c8c1a6c00fe1fc1f91\nstorage_18: 0x0\ncallvalue: 0x0\nstorage_16: 0x1c9c140c3dbb766017eafeea5e21d901bd115fa8cc92575e4c13a040b003b010\nstorage_15: 0x1c9c140c3dbb766017eafeea5e21d901bd115fa8cc92575e4c13a040b003b010\nstorage_14: 0x1c9c140c3dbb766017eafeea5e21d901bd115fa8cc92575e4c13a040b003b010\nstorage_13: 0x1c9c140c3dbb766017eafeea5e21d901bd115fa8cc92575e4c13a040b003b010\nstorage_12: 0x1c9c140c3dbb766017eafeea5e21d901bd115fa8cc92575e4c13a040b003b010\nstorage_5: 0x0\ncalldatasize_ZTCrowdsale: 0x3\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/20/0xaf7aea249098f2c2f50cc11d4000ccf798194373.sol", "function": "fallback", "lineno": 166, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2869, "code": "        }\n\n       ", "debug": "The exception is triggered under the following conditions:\n\ntimestamp: 0x7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffbffff\nstorage_19: 0x0\nstorage_20: 0x800000000000000000000000000000000000000000000000000000000007ffff\nstorage_18: 0x0\ncallvalue: 0x0\nstorage_21: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_12: 0x7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffbffff\nstorage_5: 0x0\ncalldatasize_ZTCrowdsale: 0x3\nstorage_3: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/20/0xaf7aea249098f2c2f50cc11d4000ccf798194373.sol", "function": "fallback", "lineno": 174, "title": "Exception state", "type": "Informational"}, {"address": 3058, "code": " beneficiary\n  ", "debug": "The exception is triggered under the following conditions:\n\nstorage_18: 0x8000\ncalldata_ZTCrowdsale_0: 0x2095f2d400000000000000000000000000000000000000000000000000000000\ncalldatasize_ZTCrowdsale: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/20/0xaf7aea249098f2c2f50cc11d4000ccf798194373.sol", "function": "endCrowdsale()", "lineno": 81, "title": "Exception state", "type": "Informational"}, {"address": 3213, "code": " beneficiary\n  ", "debug": "The exception is triggered under the following conditions:\n\nstorage_18: 0x8000\ncalldata_ZTCrowdsale_0: 0x3ccfd60b00000000000000000000000000000000000000000000000000000000\ncalldatasize_ZTCrowdsale: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/20/0xaf7aea249098f2c2f50cc11d4000ccf798194373.sol", "function": "withdraw()", "lineno": 81, "title": "Exception state", "type": "Informational"}, {"address": 3372, "code": "sale is considered unsucc", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3478\n", "filename": "/unique_chucks/20/0xaf7aea249098f2c2f50cc11d4000ccf798194373.sol", "function": "withdraw()", "lineno": 213, "title": "Multiple Calls", "type": "Information"}, {"address": 3608, "code": " beneficiary\n  ", "debug": "The exception is triggered under the following conditions:\n\nstorage_18: 0x8000\ncalldata_ZTCrowdsale_0: 0x590e1ae300000000000000000000000000000000000000000000000000000000\ncalldatasize_ZTCrowdsale: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/20/0xaf7aea249098f2c2f50cc11d4000ccf798194373.sol", "function": "refund()", "lineno": 81, "title": "Exception state", "type": "Informational"}], "success": true}