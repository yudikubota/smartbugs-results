{
  "contract": "0xe86c6b6c21de28da056e609bda3409ac60028e40",
  "tool": "mythril",
  "start": 1563557671.1178515,
  "end": 1563557693.6171234,
  "duration": 22.499271869659424,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 759,
        "code": " Default function",
        "debug": "balance_at_1461501637330902918203684832716283019655932542975 & 0: 0x1043561a8829300002\ncallvalue: 0x1\nstorage_1: 0x0\ncalldata_ERC20_0: 0xf00000000000000000000000000000000000000000000000000000000\ncalldatasize_ERC20: 0x4\n",
        "description": "A possible integer underflow exists in the function `fallback`.\nThe subtraction may result in a value < 0.",
        "filename": "/unique_chucks/15/0xe86c6b6c21de28da056e609bda3409ac60028e40.sol",
        "function": "fallback",
        "lineno": 115,
        "title": "Integer Underflow",
        "type": "Warning"
      },
      {
        "address": 809,
        "code": " when a user sends ETH to t",
        "debug": "SOLVER OUTPUT:\nbalance_at_1461501637330902918203684832716283019655932542975 & 0: 0x8000000000000000000000000000000000000000000000000000000000000000\nstorage_1: 0x0\ncalldata_ERC20_0: 0x2300000000000000000000000000000000000000000000000000000000\ncalldatasize_ERC20: 0x4\n",
        "description": "In the function `fallback` a non-zero amount of Ether is sent to msg.sender.\n\nThere is a check on storage index 1. This storage slot can be written to by calling the function `buy_the_tokens()`.",
        "filename": "/unique_chucks/15/0xe86c6b6c21de28da056e609bda3409ac60028e40.sol",
        "function": "fallback",
        "lineno": 115,
        "title": "Ether send",
        "type": "Warning"
      },
      {
        "address": 902,
        "code": " function () payable {\n    // D",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x500304a9c2e3d6c00040efc00000008000000000000000131bc1063d0a026799\nbalance_at_1461501637330902918203684832716283019655932542975 & 0: 0x440033657aa2d3200c3907cefa00000000000000000000025086000000000000\ncallvalue: 0xff4be7b8c996b6200bae07cef9ffff7fffffffffffffffea14b0a8fbe7b92b41\nretval_809: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_1: 0x0\ncalldata_ERC20_0: 0x400000000000000000000000000000000000000000000000000000000\ncalldatasize_ERC20: 0x4\n",
        "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/15/0xe86c6b6c21de28da056e609bda3409ac60028e40.sol",
        "function": "fallback",
        "lineno": 116,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1150,
        "code": "contracts to interact.\n  function",
        "debug": "",
        "description": "In the function `buy_the_tokens()` the following predictable state variables are used to determine Ether recipient:\n- block.number\n",
        "filename": "/unique_chucks/15/0xe86c6b6c21de28da056e609bda3409ac60028e40.sol",
        "function": "buy_the_tokens()",
        "lineno": 102,
        "title": "Dependence on predictable environment variable",
        "type": "Warning"
      },
      {
        "address": 1447,
        "code": "o the presale wallet and records the",
        "debug": "SOLVER OUTPUT:\nstorage_1: 0x0\ncalldata_ERC20_0: 0x81702c3400000000000000000000000000000000000000000000000000000000\ncalldatasize_ERC20: 0x4\ncallvalue: 0x0\n",
        "description": "In the function `refund_me()` a non-zero amount of Ether is sent to msg.sender.\n\nThere is a check on storage index 1. This storage slot can be written to by calling the function `buy_the_tokens()`.",
        "filename": "/unique_chucks/15/0xe86c6b6c21de28da056e609bda3409ac60028e40.sol",
        "function": "refund_me()",
        "lineno": 81,
        "title": "Ether send",
        "type": "Warning"
      },
      {
        "address": 1672,
        "code": "sallow token withdrawals if th",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/15/0xe86c6b6c21de28da056e609bda3409ac60028e40.sol",
        "function": "perform_withdraw(address)",
        "lineno": 51,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 1672,
        "code": "sallow token withdrawals if th",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2136\n",
        "filename": "/unique_chucks/15/0xe86c6b6c21de28da056e609bda3409ac60028e40.sol",
        "function": "perform_withdraw(address)",
        "lineno": 51,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 1820,
        "code": "ract_eth_value;\n      \n    // Update the value of tokens currently h",
        "debug": "The exception is triggered under the following conditions:\n\nreturndatasize: 0x20\nretval_1672: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_1: 0xff00\ncalldata_ERC20_0: 0xfcfdbc2300000000000000000000000000000000000000000000000000000000\ncalldatasize_ERC20: 0x4\nstorage_2: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/15/0xe86c6b6c21de28da056e609bda3409ac60028e40.sol",
        "function": "perform_withdraw(address)",
        "lineno": 55,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 1895,
        "code": " Update the user's balance prior to sendin",
        "debug": "storage_2: 0x1\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x2\nreturndatasize: 0x20\nretval_1672: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_1: 0xff00\ncalldata_ERC20_0: 0xfcfdbc2300000000000000000000000000000000000000000000000000000000\ncalldatasize_ERC20: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer underflow exists in the function `perform_withdraw(address)`.\nThe subtraction may result in a value < 0.",
        "filename": "/unique_chucks/15/0xe86c6b6c21de28da056e609bda3409ac60028e40.sol",
        "function": "perform_withdraw(address)",
        "lineno": 60,
        "title": "Integer Underflow",
        "type": "Warning"
      },
      {
        "address": 1901,
        "code": " Update the user's balance prior to sendin",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/15/0xe86c6b6c21de28da056e609bda3409ac60028e40.sol",
        "function": "perform_withdraw(address)",
        "lineno": 60,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 1969,
        "code": " failure to prevent loss",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/15/0xe86c6b6c21de28da056e609bda3409ac60028e40.sol",
        "function": "perform_withdraw(address)",
        "lineno": 63,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 2136,
        "code": " // Allows any user to get his eth refunded be",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/15/0xe86c6b6c21de28da056e609bda3409ac60028e40.sol",
        "function": "perform_withdraw(address)",
        "lineno": 67,
        "title": "Message call to external contract",
        "type": "Warning"
      }
    ],
    "success": true
  }
}