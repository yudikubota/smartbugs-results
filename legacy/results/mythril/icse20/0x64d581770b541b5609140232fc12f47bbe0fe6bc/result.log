{"error": null, "issues": [{"address": 677, "code": "     returns (bool)\n    {\n        require(transfer(_to, _value));\n\n        uint codeLength;\n\n        assembly {\n            // Retrieve the size of the code on target address, this needs assembly.\n            codeLength := extcodesize(_to)\n        }\n\n        if (codeLength > 0) {\n            ERC223ReceivingContract receiver = ERC223ReceivingContract(_to);\n            receiver.tokenFallback(msg.sender, _value, _data);\n        }\n\n        return true;\n    }\n\n    /// @notice Transfer `_value` tokens from `_from` to `_to` if `msg.sender` is allowed.\n    /// @dev Allows for an appro", "debug": "calldata_StandardToken_32 + 36: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_StandardToken_0: 0xbe45fd6200000000000000000000000000000000000000000000000000000000\ncalldatasize_StandardToken: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `transfer(address,uint256,bytes)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/27/0x64d581770b541b5609140232fc12f47bbe0fe6bc.sol", "function": "transfer(address,uint256,bytes)", "lineno": 109, "title": "Integer Overflow ", "type": "Warning"}, {"address": 3200, "code": "e` tokens from `_from` to `_to` if `msg.sender` i", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/27/0x64d581770b541b5609140232fc12f47bbe0fe6bc.sol", "function": "transfer(address,uint256,bytes)", "lineno": 128, "title": "Message call to external contract", "type": "Warning"}], "success": true}