{
  "contract": "0xc67e520f6ff27552411c458cf3cf6a920dbd0832",
  "tool": "mythril",
  "start": 1563641311.9710312,
  "end": 1563642036.2083561,
  "duration": 724.2373249530792,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 488,
        "code": "(string commento) public payable returns(bool){ //aggiunge testo al contratto\n        comments[msg.sender].push(commento);\n        emit newComment(msg.sender, commento);\n        return true;\n    }\n    \n    function dest",
        "debug": "calldata_MessaggioInBottiglia_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_MessaggioInBottiglia_0: 0x843b438600000000000000000000000000000000000000000000000000000000\ncalldatasize_MessaggioInBottiglia: 0x4\n",
        "description": "A possible integer overflow exists in the function `addComment(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/30/0xc67e520f6ff27552411c458cf3cf6a920dbd0832.sol",
        "function": "addComment(string)",
        "lineno": 19,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 863,
        "code": "g(address => string[]) public comments; //co",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_MessaggioInBottiglia_32 + 4: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\ncalldata_MessaggioInBottiglia_4: 0x0\ncalldata_MessaggioInBottiglia_0: 0xc4174b700000000000000000000000000000000000000000000000000000000\ncalldatasize_MessaggioInBottiglia: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/30/0xc67e520f6ff27552411c458cf3cf6a920dbd0832.sol",
        "function": "_function_0x0c4174b7",
        "lineno": 7,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 1268,
        "code": "\ncontract Messaggi",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_MessaggioInBottiglia_0: 0x843b438600000000000000000000000000000000000000000000000000000000\ncalldatasize_MessaggioInBottiglia: 0x4\n",
        "description": "A possible integer overflow exists in the function `addComment(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/30/0xc67e520f6ff27552411c458cf3cf6a920dbd0832.sol",
        "function": "addComment(string)",
        "lineno": 1,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1921,
        "code": "ontract MessaggioInBottiglia {\n    address public owner; //proprietario del contratto\n    string public message; //messaggio da lanciare\n    string public ownerName;\n    \n    mapping(address => string[]) public comments; //commenti\n    \n    modifier onlyOwner() { require(owner == msg.sender); _; }\n    \n    event newComment(address _sender, string _comment);\n    \n    constructor() public { //costruttore del contratto\n        owner = msg.sender;\n        ownerName = \"Gaibrasch Tripfud\";\n        message = \"Questo \u00e8 messaggio di prova, scritto dal un temibile pirata. Aggiungi un commento se vuoi scopire dove si trova il tesoro nascosto.\";\n    }\n    \n    function addComment(string commento) public payable returns(bool){ //aggiunge testo al contratto\n        comments[msg.sender].push(commento);\n        emit newComment(msg.sender, commento);\n        return true;\n    }\n    \n    function destroyBottle() public onlyOwner { //distrugge la bottiglia e il messaggio e quindi tutto il contratto\n        selfdestruct(owner);\n    }\n}",
        "debug": "keccac_keccac_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller_+\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xff13e6a7459ae5a4c49c419171c3f89100a371508000000000129200000219e2\nstorage_keccac_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller +\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xbac1c3147749165dd7d1977fffffffffffffffffffffffffffffffffffffffc5\ncalldata_MessaggioInBottiglia_0: 0x843b438600000000000000000000000000000000000000000000000000000000\ncalldatasize_MessaggioInBottiglia: 0x4\n",
        "description": "A possible integer overflow exists in the function `addComment(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/30/0xc67e520f6ff27552411c458cf3cf6a920dbd0832.sol",
        "function": "addComment(string)",
        "lineno": 2,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1950,
        "code": "ontract MessaggioInBottiglia {\n    address public owner; //proprietario del contratto\n    string public message; //messaggio da lanciare\n    string public ownerName;\n    \n    mapping(address => string[]) public comments; //commenti\n    \n    modifier onlyOwner() { require(owner == msg.sender); _; }\n    \n    event newComment(address _sender, string _comment);\n    \n    constructor() public { //costruttore del contratto\n        owner = msg.sender;\n        ownerName = \"Gaibrasch Tripfud\";\n        message = \"Questo \u00e8 messaggio di prova, scritto dal un temibile pirata. Aggiungi un commento se vuoi scopire dove si trova il tesoro nascosto.\";\n    }\n    \n    function addComment(string commento) public payable returns(bool){ //aggiunge testo al contratto\n        comments[msg.sender].push(commento);\n        emit newComment(msg.sender, commento);\n        return true;\n    }\n    \n    function destroyBottle() public onlyOwner { //distrugge la bottiglia e il messaggio e quindi tutto il contratto\n        selfdestruct(owner);\n    }\n}",
        "debug": "calldata_MessaggioInBottiglia_4 + calldata_MessaggioInBottiglia_4: 0x8000000000000000000000000000000000000000000000000000000000000000\ncalldata_MessaggioInBottiglia_0: 0x843b438600000000000000000000000000000000000000000000000000000000\ncalldatasize_MessaggioInBottiglia: 0x4\n",
        "description": "A possible integer overflow exists in the function `addComment(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/30/0xc67e520f6ff27552411c458cf3cf6a920dbd0832.sol",
        "function": "addComment(string)",
        "lineno": 2,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1964,
        "code": "ontract MessaggioInBottiglia {\n    address public owner; //proprietario del contratto\n    string public message; //messaggio da lanciare\n    string public ownerName;\n    \n    mapping(address => string[]) public comments; //commenti\n    \n    modifier onlyOwner() { require(owner == msg.sender); _; }\n    \n    event newComment(address _sender, string _comment);\n    \n    constructor() public { //costruttore del contratto\n        owner = msg.sender;\n        ownerName = \"Gaibrasch Tripfud\";\n        message = \"Questo \u00e8 messaggio di prova, scritto dal un temibile pirata. Aggiungi un commento se vuoi scopire dove si trova il tesoro nascosto.\";\n    }\n    \n    function addComment(string commento) public payable returns(bool){ //aggiunge testo al contratto\n        comments[msg.sender].push(commento);\n        emit newComment(msg.sender, commento);\n        return true;\n    }\n    \n    function destroyBottle() public onlyOwner { //distrugge la bottiglia e il messaggio e quindi tutto il contratto\n        selfdestruct(owner);\n    }\n}",
        "debug": "calldata_MessaggioInBottiglia_4 + calldata_MessaggioInBottiglia_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\ncalldata_MessaggioInBottiglia_0: 0x843b438600000000000000000000000000000000000000000000000000000000\ncalldatasize_MessaggioInBottiglia: 0x4\n",
        "description": "A possible integer overflow exists in the function `addComment(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/30/0xc67e520f6ff27552411c458cf3cf6a920dbd0832.sol",
        "function": "addComment(string)",
        "lineno": 2,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1986,
        "code": "ontract MessaggioInBottiglia {\n    address public owner; //proprietario del contratto\n    string public message; //messaggio da lanciare\n    string public ownerName;\n    \n    mapping(address => string[]) public comments; //commenti\n    \n    modifier onlyOwner() { require(owner == msg.sender); _; }\n    \n    event newComment(address _sender, string _comment);\n    \n    constructor() public { //costruttore del contratto\n        owner = msg.sender;\n        ownerName = \"Gaibrasch Tripfud\";\n        message = \"Questo \u00e8 messaggio di prova, scritto dal un temibile pirata. Aggiungi un commento se vuoi scopire dove si trova il tesoro nascosto.\";\n    }\n    \n    function addComment(string commento) public payable returns(bool){ //aggiunge testo al contratto\n        comments[msg.sender].push(commento);\n        emit newComment(msg.sender, commento);\n        return true;\n    }\n    \n    function destroyBottle() public onlyOwner { //distrugge la bottiglia e il messaggio e quindi tutto il contratto\n        selfdestruct(owner);\n    }\n}",
        "debug": "keccac_keccac_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller_+\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_MessaggioInBottiglia_4 + calldata_MessaggioInBottiglia_4: 0x4000f04100100000000000000000000000000000d6401413fffffffffffffe0\ncalldata_MessaggioInBottiglia_0: 0x843b438600000000000000000000000000000000000000000000000000000000\ncalldatasize_MessaggioInBottiglia: 0x4\n",
        "description": "A possible integer overflow exists in the function `addComment(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/30/0xc67e520f6ff27552411c458cf3cf6a920dbd0832.sol",
        "function": "addComment(string)",
        "lineno": 2,
        "title": "Integer Overflow ",
        "type": "Warning"
      }
    ],
    "success": true
  }
}