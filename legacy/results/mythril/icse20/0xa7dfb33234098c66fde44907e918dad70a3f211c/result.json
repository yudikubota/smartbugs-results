{
  "contract": "0xa7dfb33234098c66fde44907e918dad70a3f211c",
  "tool": "mythril",
  "start": 1563481530.4375918,
  "end": 1563481557.9056118,
  "duration": 27.46801996231079,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 3574,
        "code": "        emit Mint(use",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/3/0xa7dfb33234098c66fde44907e918dad70a3f211c.sol",
        "function": "transferFromGate()",
        "lineno": 286,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 3574,
        "code": "        emit Mint(use",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3746\n",
        "filename": "/unique_chucks/3/0xa7dfb33234098c66fde44907e918dad70a3f211c.sol",
        "function": "transferFromGate()",
        "lineno": 286,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 3746,
        "code": "  }\n\n    function withdraw(uint25",
        "debug": "",
        "description": "This contract executes a message call to the address of the transaction sender. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/3/0xa7dfb33234098c66fde44907e918dad70a3f211c.sol",
        "function": "transferFromGate()",
        "lineno": 287,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 3776,
        "code": "lue > 0 && _destinati",
        "debug": "retval_3574: 0x93931c13e507cbbcbf74d9eee4fb920eeaef84aa5110428da2eddb017d5ebcdd\nstorage_1: 0xb2c81e3be60b809eebca250ae5f3958de8241f3c0942692d3cecd1fd00743211\nretval_3746: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nreturndatasize: 0x20\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffff00\ncalldata_TokenProxy_0: 0x58f24f3d00000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenProxy: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `transferFromGate()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/3/0xa7dfb33234098c66fde44907e918dad70a3f211c.sol",
        "function": "transferFromGate()",
        "lineno": 294,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 3782,
        "code": "lue > 0 && _destinati",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/3/0xa7dfb33234098c66fde44907e918dad70a3f211c.sol",
        "function": "transferFromGate()",
        "lineno": 294,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 3852,
        "code": "ss(0));\n        burn(_v",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x593c50f7345161b472b45bb10ed6a6b40bbf622f6a124cec1d8198c7838853ce\nretval_3574: 0xd6b9e6f2176c11012ab8da2de6e5a4a068205b3c8bd64eefdcadded7fbd75be4\nretval_3746: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nreturndatasize: 0x20\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_TokenProxy_0: 0x58f24f3d00000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenProxy: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `transferFromGate()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/3/0xa7dfb33234098c66fde44907e918dad70a3f211c.sol",
        "function": "transferFromGate()",
        "lineno": 294,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 3858,
        "code": "ss(0));\n        burn(_v",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/3/0xa7dfb33234098c66fde44907e918dad70a3f211c.sol",
        "function": "transferFromGate()",
        "lineno": 294,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 6071,
        "code": "m, address indexed to, uint256 value",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/3/0xa7dfb33234098c66fde44907e918dad70a3f211c.sol",
        "function": "withdraw(uint256)",
        "lineno": 307,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 6893,
        "code": " b) internal p",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_TokenProxy_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_1: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_TokenProxy_0: 0x42966c6800000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenProxy: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/3/0xa7dfb33234098c66fde44907e918dad70a3f211c.sol",
        "function": "burn(uint256)",
        "lineno": 138,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 6911,
        "code": "int25",
        "debug": "calldata_TokenProxy_32 + 4: 0x57f25cd000000000000000000000000000000000000000000000000000000000\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TokenProxy_4: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncalldata_TokenProxy_0: 0xd73dd62300000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenProxy: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `increaseApproval(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/3/0xa7dfb33234098c66fde44907e918dad70a3f211c.sol",
        "function": "increaseApproval(address,uint256)",
        "lineno": 147,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 6924,
        "code": "ernal allowed;",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TokenProxy_4: 0x1\ncalldata_TokenProxy_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_TokenProxy_0: 0xd73dd62300000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenProxy: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/3/0xa7dfb33234098c66fde44907e918dad70a3f211c.sol",
        "function": "increaseApproval(address,uint256)",
        "lineno": 147,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}