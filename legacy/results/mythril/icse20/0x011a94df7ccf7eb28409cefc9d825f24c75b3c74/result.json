{
  "contract": "0x011a94df7ccf7eb28409cefc9d825f24c75b3c74",
  "tool": "mythril",
  "start": 1563680592.9391608,
  "end": 1563681367.1328642,
  "duration": 774.1937034130096,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 523,
        "code": "horce_image, string unique_id, string sex,string DOB, string country_name, string Pedigree_name,string color, string owner_name,string breed,string Pedigree_link,string Pedigree_image) public returns(uint) {\n        users.length++;\n        // users[users.length-1].salaryId = unique_id;\n        users[users.length-1].name = name;\n        // users[users.length-1].userAddress = horce_image;\n       //users[users.length-1].salary = _salary;\n        return users.length;\n    }\n      \n      \n     function add_medical_rec",
        "debug": "calldata_SalaryInfo_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_SalaryInfo_0: 0xb5caacc700000000000000000000000000000000000000000000000000000000\ncalldatasize_SalaryInfo: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `addUser(string,string,string,string,string,string,string,string,string,string,string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/34/0x011a94df7ccf7eb28409cefc9d825f24c75b3c74.sol",
        "function": "addUser(string,string,string,string,string,string,string,string,string,string,string,string)",
        "lineno": 38,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1803,
        "code": "addUser(string name",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_SalaryInfo_4: 0x0\nstorage_0: 0x0\ncalldata_SalaryInfo_0: 0x365b98b200000000000000000000000000000000000000000000000000000000\ncalldatasize_SalaryInfo: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/34/0x011a94df7ccf7eb28409cefc9d825f24c75b3c74.sol",
        "function": "_function_0x365b98b2",
        "lineno": 38,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2010,
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_SalaryInfo_4: 0x0\nstorage_0: 0x0\ncalldata_SalaryInfo_0: 0xb0467deb00000000000000000000000000000000000000000000000000000000\ncalldatasize_SalaryInfo: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/34/0x011a94df7ccf7eb28409cefc9d825f24c75b3c74.sol",
        "function": "getUser(uint256)",
        "lineno": 64,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2195,
        "code": ".length-1].sal",
        "debug": "storage_0: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_SalaryInfo_0: 0xb5caacc700000000000000000000000000000000000000000000000000000000\ncalldatasize_SalaryInfo: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `addUser(string,string,string,string,string,string,string,string,string,string,string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/34/0x011a94df7ccf7eb28409cefc9d825f24c75b3c74.sol",
        "function": "addUser(string,string,string,string,string,string,string,string,string,string,string,string)",
        "lineno": 40,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2229,
        "code": "   // users[users.len",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_SalaryInfo_0: 0xb5caacc700000000000000000000000000000000000000000000000000000000\ncalldatasize_SalaryInfo: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/34/0x011a94df7ccf7eb28409cefc9d825f24c75b3c74.sol",
        "function": "addUser(string,string,string,string,string,string,string,string,string,string,string,string)",
        "lineno": 42,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2381,
        "code": "\n    struct User {\n        string name;\n        // string horce_image;\n        // string unique_id;\n        // string sex;\n        // uint256 DOB;\n        // string country_name;\n        // string Pedigree_name;\n        // string color;\n        // string owner_name;\n        // string breed;\n        // string Pedigree_link;\n    }\n    User[] public users;\n\n    function addUser(string name, string horce_image, string unique_id, string sex,string DOB, string country_name, string Pedigree_name,string color, string owner_name,string breed,string Pedigree_link,string Pedigree_image) public returns(uint) {\n        users.length++;\n        // users[users.length-1].salaryId = unique_id;\n        users[users.length-1].name = name;\n        // users[users.length-1].userAddress = horce_image;\n       //users[users.length-1].salary = _salary;\n        return users.length;\n    }\n      \n      \n     function add_medical_records(string record_type, string medical_date, string vaccination,string product,string details) public returns(uint) {\n    //     users.length++;\n    //     // users[users.length-1].salaryId = unique_id;\n    //     users[users.length-1].name = name;\n    //     // users[users.length-1].userAddress = horce_image;\n    //   //users[users.length-1].salary = _salary;\n    //     return users.length;\n     }\n    \n    function getUsersCount() public constant returns(uint) {\n        return users.length;\n    }\n\n    function getUser(uint index) public constant returns(string) {\n        return (users[index].name);\n    }\n}",
        "debug": "keccac_0_+\n18569430475105882587588266137607568536673111973893317399460219858819262702947_+\nstorage_0: 0xff8007b08649eba518062bad4024f63b0581e1673f0b574bf7ba80dfcf20ca00\nstorage_0 +\n18569430475105882587588266137607568536673111973893317399460219858819262702947 +\nstorage_0: 0x7403a9bcd8faddf5d1e685cff3ba22e265c519effac9cb3ec6759905c67efc51\nstorage_0: 0x413eb400000002088020000002000010576c118a884fd9a3152000004b020000\ncalldata_SalaryInfo_0: 0xb5caacc700000000000000000000000000000000000000000000000000000000\ncalldatasize_SalaryInfo: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `addUser(string,string,string,string,string,string,string,string,string,string,string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/34/0x011a94df7ccf7eb28409cefc9d825f24c75b3c74.sol",
        "function": "addUser(string,string,string,string,string,string,string,string,string,string,string,string)",
        "lineno": 22,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2410,
        "code": "\n    struct User {\n        string name;\n        // string horce_image;\n        // string unique_id;\n        // string sex;\n        // uint256 DOB;\n        // string country_name;\n        // string Pedigree_name;\n        // string color;\n        // string owner_name;\n        // string breed;\n        // string Pedigree_link;\n    }\n    User[] public users;\n\n    function addUser(string name, string horce_image, string unique_id, string sex,string DOB, string country_name, string Pedigree_name,string color, string owner_name,string breed,string Pedigree_link,string Pedigree_image) public returns(uint) {\n        users.length++;\n        // users[users.length-1].salaryId = unique_id;\n        users[users.length-1].name = name;\n        // users[users.length-1].userAddress = horce_image;\n       //users[users.length-1].salary = _salary;\n        return users.length;\n    }\n      \n      \n     function add_medical_records(string record_type, string medical_date, string vaccination,string product,string details) public returns(uint) {\n    //     users.length++;\n    //     // users[users.length-1].salaryId = unique_id;\n    //     users[users.length-1].name = name;\n    //     // users[users.length-1].userAddress = horce_image;\n    //   //users[users.length-1].salary = _salary;\n    //     return users.length;\n     }\n    \n    function getUsersCount() public constant returns(uint) {\n        return users.length;\n    }\n\n    function getUser(uint index) public constant returns(string) {\n        return (users[index].name);\n    }\n}",
        "debug": "calldata_SalaryInfo_4 + calldata_SalaryInfo_4: 0x8000000000000000000000000000000000000000000000000000000000000000\nstorage_0: 0x3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_SalaryInfo_0: 0xb5caacc700000000000000000000000000000000000000000000000000000000\ncalldatasize_SalaryInfo: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `addUser(string,string,string,string,string,string,string,string,string,string,string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/34/0x011a94df7ccf7eb28409cefc9d825f24c75b3c74.sol",
        "function": "addUser(string,string,string,string,string,string,string,string,string,string,string,string)",
        "lineno": 22,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2424,
        "code": "\n    struct User {\n        string name;\n        // string horce_image;\n        // string unique_id;\n        // string sex;\n        // uint256 DOB;\n        // string country_name;\n        // string Pedigree_name;\n        // string color;\n        // string owner_name;\n        // string breed;\n        // string Pedigree_link;\n    }\n    User[] public users;\n\n    function addUser(string name, string horce_image, string unique_id, string sex,string DOB, string country_name, string Pedigree_name,string color, string owner_name,string breed,string Pedigree_link,string Pedigree_image) public returns(uint) {\n        users.length++;\n        // users[users.length-1].salaryId = unique_id;\n        users[users.length-1].name = name;\n        // users[users.length-1].userAddress = horce_image;\n       //users[users.length-1].salary = _salary;\n        return users.length;\n    }\n      \n      \n     function add_medical_records(string record_type, string medical_date, string vaccination,string product,string details) public returns(uint) {\n    //     users.length++;\n    //     // users[users.length-1].salaryId = unique_id;\n    //     users[users.length-1].name = name;\n    //     // users[users.length-1].userAddress = horce_image;\n    //   //users[users.length-1].salary = _salary;\n    //     return users.length;\n     }\n    \n    function getUsersCount() public constant returns(uint) {\n        return users.length;\n    }\n\n    function getUser(uint index) public constant returns(string) {\n        return (users[index].name);\n    }\n}",
        "debug": "calldata_SalaryInfo_4 + calldata_SalaryInfo_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\nstorage_0: 0x3164cdbbd7715000000000000000000000000000000000000000000000000000\ncalldata_SalaryInfo_0: 0xb5caacc700000000000000000000000000000000000000000000000000000000\ncalldatasize_SalaryInfo: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `addUser(string,string,string,string,string,string,string,string,string,string,string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/34/0x011a94df7ccf7eb28409cefc9d825f24c75b3c74.sol",
        "function": "addUser(string,string,string,string,string,string,string,string,string,string,string,string)",
        "lineno": 22,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2446,
        "code": "\n    struct User {\n        string name;\n        // string horce_image;\n        // string unique_id;\n        // string sex;\n        // uint256 DOB;\n        // string country_name;\n        // string Pedigree_name;\n        // string color;\n        // string owner_name;\n        // string breed;\n        // string Pedigree_link;\n    }\n    User[] public users;\n\n    function addUser(string name, string horce_image, string unique_id, string sex,string DOB, string country_name, string Pedigree_name,string color, string owner_name,string breed,string Pedigree_link,string Pedigree_image) public returns(uint) {\n        users.length++;\n        // users[users.length-1].salaryId = unique_id;\n        users[users.length-1].name = name;\n        // users[users.length-1].userAddress = horce_image;\n       //users[users.length-1].salary = _salary;\n        return users.length;\n    }\n      \n      \n     function add_medical_records(string record_type, string medical_date, string vaccination,string product,string details) public returns(uint) {\n    //     users.length++;\n    //     // users[users.length-1].salaryId = unique_id;\n    //     users[users.length-1].name = name;\n    //     // users[users.length-1].userAddress = horce_image;\n    //   //users[users.length-1].salary = _salary;\n    //     return users.length;\n     }\n    \n    function getUsersCount() public constant returns(uint) {\n        return users.length;\n    }\n\n    function getUser(uint index) public constant returns(string) {\n        return (users[index].name);\n    }\n}",
        "debug": "calldata_SalaryInfo_4 + calldata_SalaryInfo_4: 0xd9f465dcb1385ec6f56865e7fff10\nkeccac_0_+\n18569430475105882587588266137607568536673111973893317399460219858819262702947_+\nstorage_0: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_0: 0x86ee06a7908d001a0039d770000006feffffff135fdaffefb7579fe3ebffffff\ncalldata_SalaryInfo_0: 0xb5caacc700000000000000000000000000000000000000000000000000000000\ncalldatasize_SalaryInfo: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `addUser(string,string,string,string,string,string,string,string,string,string,string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/34/0x011a94df7ccf7eb28409cefc9d825f24c75b3c74.sol",
        "function": "addUser(string,string,string,string,string,string,string,string,string,string,string,string)",
        "lineno": 22,
        "title": "Integer Overflow ",
        "type": "Warning"
      }
    ],
    "success": true
  }
}