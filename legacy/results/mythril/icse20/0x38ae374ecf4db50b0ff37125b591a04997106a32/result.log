{"success": false, "error": "Solc experienced a fatal error (code 1).\n\n/unique_contracts/0x38ae374ecf4db50b0ff37125b591a04997106a32.sol:1:1: Error: Source file requires different compiler version (current compiler is 0.4.25+commit.59dbf8f1.Linux.g++ - note that nightly builds are considered to be strictly less than the released version\npragma solidity 0.4.24;\r\n^---------------------^\n/unique_contracts/0x38ae374ecf4db50b0ff37125b591a04997106a32.sol:154:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use \"constructor(...) { ... }\" instead.\n  function Ownable() public {\r\n  ^ (Relevant source part starts here and spans across multiple lines).\n/unique_contracts/0x38ae374ecf4db50b0ff37125b591a04997106a32.sol:203:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use \"constructor(...) { ... }\" instead.\n    function WrapperLock(address _originalToken, string _name, string _symbol, uint _decimals, bool _erc20old) Ownable() {\r\n    ^ (Relevant source part starts here and spans across multiple lines).\n/unique_contracts/0x38ae374ecf4db50b0ff37125b591a04997106a32.sol:123:5: Warning: Invoking events without \"emit\" prefix is deprecated.\n    Transfer(msg.sender, _to, _value);\r\n    ^-------------------------------^\n/unique_contracts/0x38ae374ecf4db50b0ff37125b591a04997106a32.sol:172:5: Warning: Invoking events without \"emit\" prefix is deprecated.\n    OwnershipTransferred(owner, newOwner);\r\n    ^-----------------------------------^\n/unique_contracts/0x38ae374ecf4db50b0ff37125b591a04997106a32.sol:190:42: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0x7e03D2B8edc3585eCd8A5807661fff0830a0b603'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals\n    address public TRANSFER_PROXY_VEFX = 0x7e03d2b8edc3585ecd8a5807661fff0830a0b603;\r\n                                         ^----------------------------------------^\n/unique_contracts/0x38ae374ecf4db50b0ff37125b591a04997106a32.sol:240:38: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n            require(isValidSignature(keccak256(msg.sender, address(this), signatureValidUntilBlock), v, r, s));\r\n                                     ^------------------------------------------------------------^\n/unique_contracts/0x38ae374ecf4db50b0ff37125b591a04997106a32.sol:284:9: Warning: Invoking events without \"emit\" prefix is deprecated.\n        Transfer(_from, _to, _value);\r\n        ^--------------------------^\n/unique_contracts/0x38ae374ecf4db50b0ff37125b591a04997106a32.sol:308:13: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n            keccak256(\"\\x19Ethereum Signed Message:\\n32\", hash),\r\n            ^-------------------------------------------------^\n/unique_contracts/0x38ae374ecf4db50b0ff37125b591a04997106a32.sol:321:16: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n        return keccak256(_sender, _wrapper, _validTill);\r\n               ^--------------------------------------^\n", "issues": []}