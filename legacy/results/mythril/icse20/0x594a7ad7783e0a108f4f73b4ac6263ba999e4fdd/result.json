{
  "contract": "0x594a7ad7783e0a108f4f73b4ac6263ba999e4fdd",
  "tool": "mythril",
  "start": 1563553455.348309,
  "end": 1563553480.6684656,
  "duration": 25.320156574249268,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 671,
        "code": " locks [id];",
        "debug": "storage_1: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_0: 0x0\ncaller: 0x0\ncalldata_Token_32 + 36: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_Token_0: 0x4b86c22500000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `_function_0x4b86c225`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/17/0x594a7ad7783e0a108f4f73b4ac6263ba999e4fdd.sol",
        "function": "_function_0x4b86c225",
        "lineno": 61,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1178,
        "code": "    }\n\n    /**\n     * Unlock tokens locked unde",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/17/0x594a7ad7783e0a108f4f73b4ac6263ba999e4fdd.sol",
        "function": "_function_0x4b86c225",
        "lineno": 73,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 1959,
        "code": "  /**\n     * If you like this contract, you may send some ether to this address a",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/17/0x594a7ad7783e0a108f4f73b4ac6263ba999e4fdd.sol",
        "function": "_function_0x6198e339",
        "lineno": 96,
        "title": "Message call to external contract",
        "type": "Warning"
      }
    ],
    "success": true
  }
}