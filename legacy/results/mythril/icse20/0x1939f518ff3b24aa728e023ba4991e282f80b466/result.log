{"error": null, "issues": [{"address": 1465, "code": "ised + amount - WEI_MAXIMUM_EARLY", "debug": "storage_3: 0xe228b1b4c0849aebc1e8d45b77495d5fcfabaff5397bf93c803bd33edd1664b5\ntimestamp: 0x59adb440\ncallvalue: 0x926e9625418692a80035d11226dd91582e2baf84c5f2fbfd940e189fd1d37737\ncalldatasize_SYC2ndEarlyPurchase: 0x3\nstorage_2: 0x0\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/26/0x1939f518ff3b24aa728e023ba4991e282f80b466.sol", "function": "fallback", "lineno": 111, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1536, "code": "rlyPurchase(purchaser, WEI_MAXIMUM_EARLYPURCHASE - totalEarlyPurchaseRaised, ", "debug": "", "description": "A possible transaction order independence vulnerability exists in function fallback. The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/26/0x1939f518ff3b24aa728e023ba4991e282f80b466.sol", "function": "fallback", "lineno": 112, "title": "Transaction order dependence", "type": "Warning"}, {"address": 1536, "code": "rlyPurchase(purchaser, WEI_MAXIMUM_EARLYPURCHASE - totalEarlyPurchaseRaised, ", "debug": "", "description": "The return value of an external call is not checked. Note that execution continue even if the called contract throws.", "filename": "/unique_chucks/26/0x1939f518ff3b24aa728e023ba4991e282f80b466.sol", "function": "fallback", "lineno": 112, "title": "Unchecked CALL return value", "type": "Informational"}, {"address": 1599, "code": "AXIMUM_EARLYPURCHASE - totalEarlyPurchaseRaised;\n   ", "debug": "storage_3: 0x91e0009a406c2880c9e8682e6b40010000000002000400fbca89b0aa8c481000\ntimestamp: 0x59af3580\ncallvalue: 0x7fffff7ffff4d77fc61797d1f4bfff00000001fe007bff8191972fb801f7ffff\ncalldatasize_SYC2ndEarlyPurchase: 0x3\nstorage_2: 0x0\n", "description": "A possible integer underflow exists in the function `fallback`.\nThe subtraction may result in a value < 0.", "filename": "/unique_chucks/26/0x1939f518ff3b24aa728e023ba4991e282f80b466.sol", "function": "fallback", "lineno": 113, "title": "Integer Underflow", "type": "Warning"}, {"address": 1615, "code": "\n\n/// @title 2nd E", "debug": "timestamp: 0x59b000c0\nstorage_1: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncallvalue: 0x8ac7230489e80000\nstorage_3: 0x17aedbc9d648c780000\ncalldatasize_SYC2ndEarlyPurchase: 0x3\nstorage_2: 0x0\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/26/0x1939f518ff3b24aa728e023ba4991e282f80b466.sol", "function": "fallback", "lineno": 1, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1760, "code": "Purchase(purchaser, amount, purchasedAt));\n         ", "debug": "storage_3: 0xd2a63138c06819d0c9e8602e6b401000000000000000003bc681b8730c620000\ntimestamp: 0x59af3c40\ncallvalue: 0xffffe07ffff7e62fc6179fd1f4bff00000000000000000c3959f27d001ffffff\ncalldatasize_SYC2ndEarlyPurchase: 0x3\nstorage_2: 0x0\n", "description": "A possible integer underflow exists in the function `fallback`.\nThe subtraction may result in a value < 0.", "filename": "/unique_chucks/26/0x1939f518ff3b24aa728e023ba4991e282f80b466.sol", "function": "fallback", "lineno": 116, "title": "Integer Underflow", "type": "Warning"}, {"address": 1768, "code": "   earlyPurchases.push(EarlyPurchase(purchaser, amount, purchasedAt));\n         ", "debug": "storage_3: 0xe409087260800064d3a531185a6f7cda59fda4883641024dff83e02000000080\ntimestamp: 0x59b0c000\ncallvalue: 0x7ffefffffffffffffcffe5fefd90d353ee684bc3dbdefdfe737ee3672b7fefff\ncalldatasize_SYC2ndEarlyPurchase: 0x3\nstorage_2: 0x0\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/26/0x1939f518ff3b24aa728e023ba4991e282f80b466.sol", "function": "fallback", "lineno": 116, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1839, "code": "\n\n/// @title 2nd E", "debug": "timestamp: 0x59b000c0\nstorage_1: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncallvalue: 0x8ac7230489e80000\nstorage_3: 0x17aedbc9d648c77ffff\ncalldatasize_SYC2ndEarlyPurchase: 0x3\nstorage_2: 0x0\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/26/0x1939f518ff3b24aa728e023ba4991e282f80b466.sol", "function": "fallback", "lineno": 1, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1978, "code": " >= ENDING_TIME){\n            earl", "debug": "storage_3: 0xe6800000000000000000000000000000000000000000000ef4257efeb7bd12ec\ntimestamp: 0x59ad5cc0\ncallvalue: 0x198000000000000000000000000000000000000000000052af1a60bebfa01c8c\ncalldatasize_SYC2ndEarlyPurchase: 0x3\nstorage_2: 0x0\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/26/0x1939f518ff3b24aa728e023ba4991e282f80b466.sol", "function": "fallback", "lineno": 120, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2055, "code": "c earlyPurchases;\n    uint public ear", "debug": "The exception is triggered under the following conditions:\n\ncalldata_SYC2ndEarlyPurchase_4: 0x0\nstorage_1: 0x0\ncalldata_SYC2ndEarlyPurchase_0: 0x2288fad600000000000000000000000000000000000000000000000000000000\ncalldatasize_SYC2ndEarlyPurchase: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/26/0x1939f518ff3b24aa728e023ba4991e282f80b466.sol", "function": "_function_0x2288fad6", "lineno": 20, "title": "Exception state", "type": "Informational"}, {"address": 2320, "code": "if(!owner.send(this.balance)", "debug": "", "description": "A possible transaction order independence vulnerability exists in function withdraw(uint256). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/26/0x1939f518ff3b24aa728e023ba4991e282f80b466.sol", "function": "withdraw(uint256)", "lineno": 139, "title": "Transaction order dependence", "type": "Warning"}, {"address": 2945, "code": "Owner {\n        owner = ", "debug": "", "description": "A possible transaction order independence vulnerability exists in function withdrawAll(). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/26/0x1939f518ff3b24aa728e023ba4991e282f80b466.sol", "function": "withdrawAll()", "lineno": 142, "title": "Transaction order dependence", "type": "Warning"}], "success": true}