{"error": null, "issues": [{"address": 802, "code": "investor] = true;\n    }\n    \n    funct", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/12/0xecfe4b7afc47260cb590d3043d3f790a61bb7910.sol", "function": "fallback", "lineno": 149, "title": "Message call to external contract", "type": "Informational"}, {"address": 802, "code": "investor] = true;\n    }\n    \n    funct", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1137\n", "filename": "/unique_chucks/12/0xecfe4b7afc47260cb590d3043d3f790a61bb7910.sol", "function": "fallback", "lineno": 149, "title": "Multiple Calls", "type": "Information"}, {"address": 1137, "code": "        return ebyteToken.balanceOf(th", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/12/0xecfe4b7afc47260cb590d3043d3f790a61bb7910.sol", "function": "fallback", "lineno": 153, "title": "Message call to external contract", "type": "Informational"}, {"address": 1280, "code": "    \n    function withdraw", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/12/0xecfe4b7afc47260cb590d3043d3f790a61bb7910.sol", "function": "fallback", "lineno": 155, "title": "State change after external call", "type": "Warning"}, {"address": 1321, "code": "istributeEbyteForEBYTE(addresses);\n            distributeEbyteForETH(addresses);\n            break;\n        }\n    }\n  \n    function () payable onlyWhitelist isUnlocked public {\n        address investor = msg.sender;\n        uint256 toGiveT = (getTokenB", "debug": "calldata_Token_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_Token_0: 0x7b664300000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/12/0xecfe4b7afc47260cb590d3043d3f790a61bb7910.sol", "function": "fallback", "lineno": 134, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1843, "code": "r (uint i = 0; i < addresses.length; i++) {\n            blacklist[addresses[i]] = true;\n        }\n    }\n    \n    function lockContract() onlyOwner public returns (bool) {\n     ", "debug": "calldata_Token_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_Token_0: 0x502dadb000000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `disableWhitelist(address[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/12/0xecfe4b7afc47260cb590d3043d3f790a61bb7910.sol", "function": "disableWhitelist(address[])", "lineno": 71, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2209, "code": "es.length; i++) {\n            if (getEthBalance(addresses[i]) < ethBalance) {\n                continue;\n            }\n            uint256 ethMulti = getEthBalance(addresses[i]) / 1000000000000000000;\n            uint256 toDistr = rate * ethMulti;\n            sendTokens(addresses[i], toDistr);\n            ebyteToken.transfer(addresses[i], toDistr);\n        }\n    }\n    \n    function distributeEbyteForEBYTE(address[] addresses) onlyOwner public {\n        for (uint i = 0; i < addre", "debug": "calldata_Token_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_Token_0: 0x932e1c7600000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `distributeEbyteForETH(address[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/12/0xecfe4b7afc47260cb590d3043d3f790a61bb7910.sol", "function": "distributeEbyteForETH(address[])", "lineno": 109, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2311, "code": "   for (uint i = 0; i < addresses.length; i++) {\n            blacklist[addresses[i]] = false;\n        }\n    }\n\n    function disableWhitelist(address[] addresses) onlyOwner {\n  ", "debug": "calldata_Token_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_Token_0: 0x9c09c83500000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `enableWhitelist(address[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/12/0xecfe4b7afc47260cb590d3043d3f790a61bb7910.sol", "function": "enableWhitelist(address[])", "lineno": 65, "title": "Integer Overflow ", "type": "Warning"}, {"address": 3242, "code": " _addr) constant public r", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/12/0xecfe4b7afc47260cb590d3043d3f790a61bb7910.sol", "function": "getTokenBalance(address)", "lineno": 97, "title": "Message call to external contract", "type": "Informational"}, {"address": 3242, "code": " _addr) constant public r", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3242\nCall at address: 3242\n", "filename": "/unique_chucks/12/0xecfe4b7afc47260cb590d3043d3f790a61bb7910.sol", "function": "fallback", "lineno": 97, "title": "Multiple Calls", "type": "Information"}, {"address": 4338, "code": "herBalance);\n    }\n    \n  ", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/12/0xecfe4b7afc47260cb590d3043d3f790a61bb7910.sol", "function": "tokensAvailable()", "lineno": 158, "title": "Message call to external contract", "type": "Informational"}], "success": true}