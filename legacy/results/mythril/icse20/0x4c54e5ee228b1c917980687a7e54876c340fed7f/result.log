{"error": null, "issues": [{"address": 596, "code": ";\n    require(balances[msg.sender] >= totalAmount);\n\n    for (uint i = 0; i < addresses.length; i++) {\n      require(addresses[i] != 0x0\n              && frozenAccount[addresses[i]] == false\n              && now > unlockUnixTime[addresses[i]]);\n\n      balances[addresses[i]] = SafeMath.add(balances[addresses[i]], amount);\n      Transfer(msg.sender, addresses[i], amount);\n    }\n    balances[msg.sender] = SafeMath.sub(balances[msg.sender], totalAmount);\n    return true;\n  }\n\n  /**\n   * @dev Function to collect tokens from the list of addresses\n   */\n  function collectTokens(address[] addresses, uint[] amounts) onlyOwner public returns (bool) {\n    require(addresses.length > 0\n            && addresses.length == amounts.length);\n\n    uint256 totalAmount = 0;\n\n    for (uint i = 0; i < addresses.length; i++) {\n      require(amounts[i] > 0\n  ", "debug": "calldata_Seiyuu_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_Seiyuu_0: 0x256fa24100000000000000000000000000000000000000000000000000000000\ncalldatasize_Seiyuu: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `distributeTokens(address[],uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/10/0x4c54e5ee228b1c917980687a7e54876c340fed7f.sol", "function": "distributeTokens(address[],uint256)", "lineno": 359, "title": "Integer Overflow ", "type": "Warning"}, {"address": 968, "code": "ts[i]] = unixTimes[i];\n      LockedFunds(targets[i], unixTimes[i]);\n    }\n  }\n\n  /**\n   * @dev Burns a specific amount of tokens.\n   * @param _from The address that will burn the tokens.\n   * @param _unitAmount The amount of token to be burned.\n   */\n  function burn(address _from, uint256 _unitAmount) onlyOwner public {\n    require(_unitAmount > 0\n            && balanceOf(_from", "debug": "calldata_Seiyuu_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_Seiyuu_0: 0x64ddc60500000000000000000000000000000000000000000000000000000000\ncalldatasize_Seiyuu: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `_function_0x64ddc605`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/10/0x4c54e5ee228b1c917980687a7e54876c340fed7f.sol", "function": "_function_0x64ddc605", "lineno": 301, "title": "Integer Overflow ", "type": "Warning"}, {"address": 10863, "code": ") pub", "debug": "storage_6: 0xb2c81e3be60b809eebca250ae5f3958de8241f3c0942692d3cecd1fd00743211\ncalldata_Seiyuu_32 + 4: 0x93931c13e507cbbcbf74d9eee4fb920eeaef84aa5110428da2eddb017d5ebcdd\nstorage_8: 0x0\nstorage_1: 0x0\ncaller: 0x0\ncalldata_Seiyuu_0: 0x40c10f1900000000000000000000000000000000000000000000000000000000\ncalldatasize_Seiyuu: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `mint(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/10/0x4c54e5ee228b1c917980687a7e54876c340fed7f.sol", "function": "mint(address,uint256)", "lineno": 120, "title": "Integer Overflow ", "type": "Warning"}, {"address": 10876, "code": "w returns (str", "debug": "The exception is triggered under the following conditions:\n\nstorage_6: 0xc63a21246c99b000ea0030728005ea6909080a424a47ca48059be3c0ff803205\ncalldata_Seiyuu_32 + 4: 0xd2bd697b67b8b7eebcef8ebaf405ca6a0b728a06c347eda3d5dbebfeffbdb977\nstorage_8: 0x0\nstorage_1: 0x0\ncaller: 0x0\ncalldata_Seiyuu_0: 0x40c10f1900000000000000000000000000000000000000000000000000000000\ncalldatasize_Seiyuu: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/10/0x4c54e5ee228b1c917980687a7e54876c340fed7f.sol", "function": "mint(address,uint256)", "lineno": 120, "title": "Exception state", "type": "Informational"}, {"address": 10911, "code": "f two", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncalldata_Seiyuu_32 + 4: 0x5c1018b0a84f8104223cdb39998180421b36669bd200d9857308130c5ddc57cc\ntimestamp: 0x1\ncalldata_Seiyuu_4 + calldata_Seiyuu_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_Seiyuu_0: 0x256fa24100000000000000000000000000000000000000000000000000000000\ncalldatasize_Seiyuu: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `distributeTokens(address[],uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/10/0x4c54e5ee228b1c917980687a7e54876c340fed7f.sol", "function": "distributeTokens(address[],uint256)", "lineno": 90, "title": "Integer Overflow ", "type": "Warning"}], "success": true}