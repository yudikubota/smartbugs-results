{"error": null, "issues": [{"address": 286, "code": "ised += amount;\n        tokenRe", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xc9f848302ed6bb8c7e301cd0921c2c099b6ff6b5b6f819ba755592bfbdb15101\ncallvalue: 0x4dc4029780ccb99d68613761c00f2ce1934f0505a8f039237e669d15b9229859\nstorage_2: 0x0\nstorage_3: 0x0\nstorage_8: 0x0\ncalldata_Token_0: 0x0\ncalldatasize_Token: 0x4\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x79e10a7324e97ef9d6ab9f5dd069b847f99ee851.sol", "function": "fallback", "lineno": 51, "title": "Integer Overflow ", "type": "Warning"}, {"address": 302, "code": "er(msg.sender, amount ", "debug": "storage_3: 0xabbb99598b67a07443a3b7307d1cb2004ac21e7000867cf42ce2e86021152df6\ncallvalue: 0xa8a0cbe2d08859766fa266a3c19c3a864ef0817450f3c1c4cf12736765d455e1\nstorage_2: 0xabbb99598b67a07443a3b7307d1cb2004ac21e7000867cf42ce2e86021152df6\nstorage_8: 0x0\ncalldata_Token_0: 0x2100000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x79e10a7324e97ef9d6ab9f5dd069b847f99ee851.sol", "function": "fallback", "lineno": 52, "title": "Integer Overflow ", "type": "Warning"}, {"address": 391, "code": "    FundTransfer(msg.sender, amount, true);\n", "debug": "The exception is triggered under the following conditions:\n\nstorage_2: 0x0\nstorage_3: 0x0\nstorage_8: 0x0\ncalldata_Token_0: 0x1cb3a2000000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\nstorage_5: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_contracts/0x79e10a7324e97ef9d6ab9f5dd069b847f99ee851.sol", "function": "fallback", "lineno": 53, "title": "Exception state", "type": "Informational"}, {"address": 529, "code": "t256(tokenDecimal) / price);\n        FundTransfer(msg.sender, amount, true);\n ", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_contracts/0x79e10a7324e97ef9d6ab9f5dd069b847f99ee851.sol", "function": "fallback", "lineno": 52, "title": "Message call to external contract", "type": "Informational"}, {"address": 1811, "code": "ount, false);\n         ", "debug": "", "description": "In the function `safeWithdrawal()` the following predictable state variables are used to determine Ether recipient:\n- block.timestamp\n", "filename": "/unique_contracts/0x79e10a7324e97ef9d6ab9f5dd069b847f99ee851.sol", "function": "safeWithdrawal()", "lineno": 76, "title": "Dependence on predictable environment variable", "type": "Warning"}, {"address": 1811, "code": "ount, false);\n         ", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2209\nCall at address: 2209\nCall at address: 2209\nCall at address: 2209\n", "filename": "/unique_contracts/0x79e10a7324e97ef9d6ab9f5dd069b847f99ee851.sol", "function": "safeWithdrawal()", "lineno": 76, "title": "Multiple Calls", "type": "Information"}, {"address": 2209, "code": "aised, false);\n            } e", "debug": "", "description": "In the function `safeWithdrawal()` the following predictable state variables are used to determine Ether recipient:\n- block.timestamp\n", "filename": "/unique_contracts/0x79e10a7324e97ef9d6ab9f5dd069b847f99ee851.sol", "function": "safeWithdrawal()", "lineno": 85, "title": "Dependence on predictable environment variable", "type": "Warning"}, {"address": 2209, "code": "aised, false);\n            } e", "debug": "", "description": "A possible transaction order independence vulnerability exists in function safeWithdrawal(). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_contracts/0x79e10a7324e97ef9d6ab9f5dd069b847f99ee851.sol", "function": "safeWithdrawal()", "lineno": 85, "title": "Transaction order dependence", "type": "Warning"}], "success": true}