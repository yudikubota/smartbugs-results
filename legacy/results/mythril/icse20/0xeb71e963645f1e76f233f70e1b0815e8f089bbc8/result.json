{
  "contract": "0xeb71e963645f1e76f233f70e1b0815e8f089bbc8",
  "tool": "mythril",
  "start": 1563661951.8802474,
  "end": 1563662001.6742916,
  "duration": 49.79404425621033,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 2119,
        "code": "_ndx]];\n    }\n   ",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_SimplePHXExchange_4: 0x0\nstorage_1: 0x0\ncalldata_SimplePHXExchange_0: 0xf45f52800000000000000000000000000000000000000000000000000000000\ncalldatasize_SimplePHXExchange: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/35/0xeb71e963645f1e76f233f70e1b0815e8f089bbc8.sol",
        "function": "getTknOfferor(uint256)",
        "lineno": 164,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2364,
        "code": " always 1 more th",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_SimplePHXExchange_4: 0x0\nstorage_1: 0x0\ncalldata_SimplePHXExchange_0: 0x213e609f00000000000000000000000000000000000000000000000000000000\ncalldatasize_SimplePHXExchange: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/35/0xeb71e963645f1e76f233f70e1b0815e8f089bbc8.sol",
        "function": "getTknOfferAmount(uint256)",
        "lineno": 172,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2511,
        "code": ".e. # of Wei Requ",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_SimplePHXExchange_4: 0x0\nstorage_1: 0x0\ncalldata_SimplePHXExchange_0: 0x3c5b7d3f00000000000000000000000000000000000000000000000000000000\ncalldatasize_SimplePHXExchange: 0x4\nextcodesize: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/35/0xeb71e963645f1e76f233f70e1b0815e8f089bbc8.sol",
        "function": "buyTkn(uint256)",
        "lineno": 125,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2697,
        "code": "18\n        require(msg.value >= _purchasePrice);\n        require(phxC",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_SimplePHXExchange_4: 0x0\nstorage_1: 0x1\ncalldata_SimplePHXExchange_0: 0x3c5b7d3f00000000000000000000000000000000000000000000000000000000\ncalldatasize_SimplePHXExchange: 0x4\nstorage_0: 0x0\nextcodesize: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/35/0xeb71e963645f1e76f233f70e1b0815e8f089bbc8.sol",
        "function": "buyTkn(uint256)",
        "lineno": 125,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2979,
        "code": "fer(_purchasePrice);\n        _cancelTknOffer(_offeror);\n",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/35/0xeb71e963645f1e76f233f70e1b0815e8f089bbc8.sol",
        "function": "buyTkn(uint256)",
        "lineno": 128,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 2979,
        "code": "fer(_purchasePrice);\n        _cancelTknOffer(_offeror);\n",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3094\n",
        "filename": "/unique_chucks/35/0xeb71e963645f1e76f233f70e1b0815e8f089bbc8.sol",
        "function": "buyTkn(uint256)",
        "lineno": 128,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 3147,
        "code": "  \n    function g",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_SimplePHXExchange_4: 0x0\nstorage_5: 0x0\ncalldata_SimplePHXExchange_0: 0x4bba863e00000000000000000000000000000000000000000000000000000000\ncalldatasize_SimplePHXExchange: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/35/0xeb71e963645f1e76f233f70e1b0815e8f089bbc8.sol",
        "function": "getEthOfferor(uint256)",
        "lineno": 182,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3218,
        "code": "\" address is a co",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_SimplePHXExchange_4: 0x0\nstorage_5: 0x0\ncalldata_SimplePHXExchange_0: 0x5416707c00000000000000000000000000000000000000000000000000000000\ncalldatasize_SimplePHXExchange: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/35/0xeb71e963645f1e76f233f70e1b0815e8f089bbc8.sol",
        "function": "getEthOfferAmount(uint256)",
        "lineno": 191,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3348,
        "code": "[_ndx]];\n    }\n  ",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_SimplePHXExchange_4: 0x0\nstorage_1: 0x0\ncalldata_SimplePHXExchange_0: 0x681c2ad000000000000000000000000000000000000000000000000000000000\ncalldatasize_SimplePHXExchange: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/35/0xeb71e963645f1e76f233f70e1b0815e8f089bbc8.sol",
        "function": "getTknOfferPrice(uint256)",
        "lineno": 168,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3798,
        "code": "     _cancelTknOffer(msg.sender);\n    }\n\n    function _can",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/35/0xeb71e963645f1e76f233f70e1b0815e8f089bbc8.sol",
        "function": "cancelTknOffer()",
        "lineno": 85,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 3942,
        "code": "ises Required = W",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_SimplePHXExchange_4: 0x0\nstorage_5: 0x0\ncalldata_SimplePHXExchange_0: 0x847dd67c00000000000000000000000000000000000000000000000000000000\ncalldatasize_SimplePHXExchange: 0x4\nextcodesize: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/35/0xeb71e963645f1e76f233f70e1b0815e8f089bbc8.sol",
        "function": "buyEth(uint256)",
        "lineno": 135,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 4128,
        "code": "require(phxCoin.transferFrom(msg.sender, _offeror, _purchasePrice));",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_SimplePHXExchange_4: 0x0\nstorage_5: 0x1\ncalldata_SimplePHXExchange_0: 0x847dd67c00000000000000000000000000000000000000000000000000000000\ncalldatasize_SimplePHXExchange: 0x4\nstorage_0: 0x0\nextcodesize: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/35/0xeb71e963645f1e76f233f70e1b0815e8f089bbc8.sol",
        "function": "buyEth(uint256)",
        "lineno": 136,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 4384,
        "code": "EtherOffered[_offeror]);\n        _cancelEthOffer(_offeror)",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/35/0xeb71e963645f1e76f233f70e1b0815e8f089bbc8.sol",
        "function": "buyEth(uint256)",
        "lineno": 137,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 4895,
        "code": ";\n\n/*\n*   Basic PH",
        "debug": "storage_5: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncallvalue: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_SimplePHXExchange_0: 0x8f1fdbb900000000000000000000000000000000000000000000000000000000\ncalldatasize_SimplePHXExchange: 0x4\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\nextcodesize: 0x0\n",
        "description": "A possible integer overflow exists in the function `offerEth(uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/35/0xeb71e963645f1e76f233f70e1b0815e8f089bbc8.sol",
        "function": "offerEth(uint256)",
        "lineno": 1,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 4996,
        "code": "f(tknAddrNdx[msg.sende",
        "debug": "storage_5: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncallvalue: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_SimplePHXExchange_0: 0x8f1fdbb900000000000000000000000000000000000000000000000000000000\ncalldatasize_SimplePHXExchange: 0x4\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\nextcodesize: 0x0\n",
        "description": "A possible integer underflow exists in the function `offerEth(uint256)`.\nThe subtraction may result in a value < 0.",
        "filename": "/unique_chucks/35/0xeb71e963645f1e76f233f70e1b0815e8f089bbc8.sol",
        "function": "offerEth(uint256)",
        "lineno": 83,
        "title": "Integer Underflow",
        "type": "Warning"
      },
      {
        "address": 5985,
        "code": " \n    // **\n    \n",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_SimplePHXExchange_4: 0x0\nstorage_5: 0x0\ncalldata_SimplePHXExchange_0: 0x9c4abe0600000000000000000000000000000000000000000000000000000000\ncalldatasize_SimplePHXExchange: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/35/0xeb71e963645f1e76f233f70e1b0815e8f089bbc8.sol",
        "function": "getEthOfferPrice(uint256)",
        "lineno": 186,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 6621,
        "code": "nt ndx = tknAddrNdx[_offeror];\n\n ",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/35/0xeb71e963645f1e76f233f70e1b0815e8f089bbc8.sol",
        "function": "cancelTknOffer()",
        "lineno": 92,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 6688,
        "code": "f this isn't the only offer, resh",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/35/0xeb71e963645f1e76f233f70e1b0815e8f089bbc8.sol",
        "function": "cancelTknOffer()",
        "lineno": 94,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 6774,
        "code": "dx;\n        delete tknOfferors[tknO",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_1: 0x0\nreturndatasize: 0x20\nretval_3798: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_SimplePHXExchange_0: 0x6feef2bf00000000000000000000000000000000000000000000000000000000\ncalldatasize_SimplePHXExchange: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/35/0xeb71e963645f1e76f233f70e1b0815e8f089bbc8.sol",
        "function": "cancelTknOffer()",
        "lineno": 97,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 6904,
        "code": "rs.length - 1]] = ndx;\n        delete tknOfferors[tknO",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/35/0xeb71e963645f1e76f233f70e1b0815e8f089bbc8.sol",
        "function": "cancelTknOffer()",
        "lineno": 97,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 7035,
        "code": "gth - 1];\n        delete tknAddrNdx[_offeror]; // !im",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/35/0xeb71e963645f1e76f233f70e1b0815e8f089bbc8.sol",
        "function": "cancelTknOffer()",
        "lineno": 98,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 7102,
        "code": " }\n\n    function cancelEthOffer() public {",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/35/0xeb71e963645f1e76f233f70e1b0815e8f089bbc8.sol",
        "function": "cancelTknOffer()",
        "lineno": 100,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 7169,
        "code": "(ethAddrNdx[msg.sender] == ",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/35/0xeb71e963645f1e76f233f70e1b0815e8f089bbc8.sol",
        "function": "cancelTknOffer()",
        "lineno": 103,
        "title": "State change after external call",
        "type": "Warning"
      }
    ],
    "success": true
  }
}