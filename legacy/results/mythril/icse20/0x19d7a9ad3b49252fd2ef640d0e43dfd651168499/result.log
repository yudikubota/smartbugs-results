{"error": null, "issues": [{"address": 1810, "code": "       uint256 amount_invest = msg.v", "debug": "The exception is triggered under the following conditions:\n\ntimestamp: 0x59c00000\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xff00\ncalldata_BMmkPreICO_0: 0x492cc76900000000000000000000000000000000000000000000000000000000\ncalldatasize_BMmkPreICO: 0x4\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/5/0x19d7a9ad3b49252fd2ef640d0e43dfd651168499.sol", "function": "buy(string)", "lineno": 180, "title": "Exception state", "type": "Informational"}, {"address": 1842, "code": "   uint256 reward = etherToTokens(amount_invest,", "debug": "The exception is triggered under the following conditions:\n\ntimestamp: 0x59ffc780\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncalldata_BMmkPreICO_0: 0x492cc76900000000000000000000000000000000000000000000000000000000\ncalldatasize_BMmkPreICO: 0x4\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/5/0x19d7a9ad3b49252fd2ef640d0e43dfd651168499.sol", "function": "buy(string)", "lineno": 181, "title": "Exception state", "type": "Informational"}, {"address": 1856, "code": "[period_number]);\n\n       ", "debug": "The exception is triggered under the following conditions:\n\ntimestamp: 0x59c00000\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncalldata_BMmkPreICO_0: 0x492cc76900000000000000000000000000000000000000000000000000000000\ncalldatasize_BMmkPreICO: 0x4\nstorage_15: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/5/0x19d7a9ad3b49252fd2ef640d0e43dfd651168499.sol", "function": "buy(string)", "lineno": 181, "title": "Exception state", "type": "Informational"}, {"address": 1876, "code": "> icoTokenSupply)\n        {\n  ", "debug": "The exception is triggered under the following conditions:\n\ntimestamp: 0x59c00000\ncallvalue: 0x16345785d89ffff\nstorage_15: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncalldata_BMmkPreICO_0: 0x492cc76900000000000000000000000000000000000000000000000000000000\ncalldatasize_BMmkPreICO: 0x4\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/5/0x19d7a9ad3b49252fd2ef640d0e43dfd651168499.sol", "function": "buy(string)", "lineno": 183, "title": "Exception state", "type": "Informational"}, {"address": 3271, "code": "uint256 tokenAmount, uint256 tokenPrice) constant returns(uint256)", "debug": "The exception is triggered under the following conditions:\n\nreturndatasize: 0x20\nretval_3595: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_BMmkPreICO_4: 0x0\ncalldata_BMmkPreICO_0: 0x182439de00000000000000000000000000000000000000000000000000000000\ncalldatasize_BMmkPreICO: 0x4\nstorage_49770914062467534727464520940189510692542195219353951018743532495390116924161: 0x0\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/5/0x19d7a9ad3b49252fd2ef640d0e43dfd651168499.sol", "function": "claim_PreICOTokens(address)", "lineno": 108, "title": "Exception state", "type": "Informational"}, {"address": 3595, "code": "      }\n\n        if(claimedPreICO[holde", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/5/0x19d7a9ad3b49252fd2ef640d0e43dfd651168499.sol", "function": "claim_PreICOTokens(address)", "lineno": 139, "title": "Message call to external contract", "type": "Informational"}, {"address": 4070, "code": "        reward += etherToTokens(contr", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/5/0x19d7a9ad3b49252fd2ef640d0e43dfd651168499.sol", "function": "claim_PreICOTokens(address)", "lineno": 145, "title": "Message call to external contract", "type": "Informational"}, {"address": 4562, "code": "else\n        {\n ", "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_BMmkPreICO_4: 0xff00\ncalldata_BMmkPreICO_0: 0x182439de00000000000000000000000000000000000000000000000000000000\ncalldatasize_BMmkPreICO: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/5/0x19d7a9ad3b49252fd2ef640d0e43dfd651168499.sol", "function": "claim_PreICOTokens(address)", "lineno": 155, "title": "Exception state", "type": "Informational"}, {"address": 5459, "code": " new_owner) isOwner {\n     ", "debug": "The exception is triggered under the following conditions:\n\nstorage_5: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_BMmkPreICO_0: 0x5090985100000000000000000000000000000000000000000000000000000000\ncalldatasize_BMmkPreICO: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/5/0x19d7a9ad3b49252fd2ef640d0e43dfd651168499.sol", "function": "ownerEmit()", "lineno": 84, "title": "Exception state", "type": "Informational"}, {"address": 5472, "code": "amount = ico amount *", "debug": "The exception is triggered under the following conditions:\n\nstorage_13: 0x0\ntimestamp: 0x0\nstorage_5: 0x0\ncaller: 0x0\ncalldata_BMmkPreICO_0: 0x5090985100000000000000000000000000000000000000000000000000000000\ncalldatasize_BMmkPreICO: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/5/0x19d7a9ad3b49252fd2ef640d0e43dfd651168499.sol", "function": "ownerEmit()", "lineno": 233, "title": "Exception state", "type": "Informational"}, {"address": 5503, "code": "    uint256 dev_emit = use", "debug": "The exception is triggered under the following conditions:\n\nstorage_13: 0x0\nstorage_14: 0xff00\ntimestamp: 0x1\nstorage_5: 0x0\ncaller: 0x0\ncalldata_BMmkPreICO_0: 0x5090985100000000000000000000000000000000000000000000000000000000\ncalldatasize_BMmkPreICO: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/5/0x19d7a9ad3b49252fd2ef640d0e43dfd651168499.sol", "function": "ownerEmit()", "lineno": 234, "title": "Exception state", "type": "Informational"}, {"address": 5677, "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/5/0x19d7a9ad3b49252fd2ef640d0e43dfd651168499.sol", "function": "ownerEmit()", "lineno": 244, "title": "Message call to external contract", "type": "Informational"}, {"address": 5677, "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 5965\n", "filename": "/unique_chucks/5/0x19d7a9ad3b49252fd2ef640d0e43dfd651168499.sol", "function": "ownerEmit()", "lineno": 244, "title": "Multiple Calls", "type": "Information"}, {"address": 5765, "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/5/0x19d7a9ad3b49252fd2ef640d0e43dfd651168499.sol", "function": "ownerEmit()", "lineno": 244, "title": "State change after external call", "type": "Warning"}, {"address": 5965, "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/5/0x19d7a9ad3b49252fd2ef640d0e43dfd651168499.sol", "function": "ownerEmit()", "lineno": 244, "title": "Message call to external contract", "type": "Informational"}, {"address": 6082, "code": " assert(reward>0);\n\n        contractTokens.m", "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_BMmkPreICO_4: 0xff00\ncalldata_BMmkPreICO_0: 0x6e3c575900000000000000000000000000000000000000000000000000000000\ncalldatasize_BMmkPreICO: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/5/0x19d7a9ad3b49252fd2ef640d0e43dfd651168499.sol", "function": "claim_partnerPreICOTokens(address)", "lineno": 166, "title": "Exception state", "type": "Informational"}, {"address": 6277, "code": "dPartnerPreICO[partner] = true;\n    }\n\n    function", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/5/0x19d7a9ad3b49252fd2ef640d0e43dfd651168499.sol", "function": "claim_partnerPreICOTokens(address)", "lineno": 169, "title": "Message call to external contract", "type": "Informational"}, {"address": 6838, "code": " new_owner) isOwner {\n     ", "debug": "The exception is triggered under the following conditions:\n\nstorage_5: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_BMmkPreICO_0: 0xa6f9dae100000000000000000000000000000000000000000000000000000000\ncalldatasize_BMmkPreICO: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/5/0x19d7a9ad3b49252fd2ef640d0e43dfd651168499.sol", "function": "changeOwner(address)", "lineno": 84, "title": "Exception state", "type": "Informational"}, {"address": 6895, "code": "wner = new_owner;\n    }\n\n    fu", "debug": "The exception is triggered under the following conditions:\n\ncalldata_BMmkPreICO_4: 0x0\nstorage_5: 0x0\ncaller: 0x0\ncalldata_BMmkPreICO_0: 0xa6f9dae100000000000000000000000000000000000000000000000000000000\ncalldatasize_BMmkPreICO: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/5/0x19d7a9ad3b49252fd2ef640d0e43dfd651168499.sol", "function": "changeOwner(address)", "lineno": 87, "title": "Exception state", "type": "Informational"}, {"address": 7108, "code": " new_owner) isOwner {\n     ", "debug": "The exception is triggered under the following conditions:\n\nstorage_5: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_BMmkPreICO_0: 0xaa10ce2200000000000000000000000000000000000000000000000000000000\ncalldatasize_BMmkPreICO: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/5/0x19d7a9ad3b49252fd2ef640d0e43dfd651168499.sol", "function": "addExchange(address)", "lineno": 84, "title": "Exception state", "type": "Informational"}, {"address": 7165, "code": "sert(exchanges[new_exchange]==fals", "debug": "The exception is triggered under the following conditions:\n\ncalldata_BMmkPreICO_4: 0x0\nstorage_5: 0x0\ncaller: 0x0\ncalldata_BMmkPreICO_0: 0xaa10ce2200000000000000000000000000000000000000000000000000000000\ncalldatasize_BMmkPreICO: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/5/0x19d7a9ad3b49252fd2ef640d0e43dfd651168499.sol", "function": "addExchange(address)", "lineno": 94, "title": "Exception state", "type": "Informational"}, {"address": 7313, "code": "nction cast(uint256 x) constant intern", "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_BMmkPreICO_4: 0xff00\ncalldata_BMmkPreICO_4: 0xffffffffffffffffffffffffffffffffffffffff\nstorage_5: 0x0\ncaller: 0x0\ncalldata_BMmkPreICO_0: 0xaa10ce2200000000000000000000000000000000000000000000000000000000\ncalldatasize_BMmkPreICO: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/5/0x19d7a9ad3b49252fd2ef640d0e43dfd651168499.sol", "function": "addExchange(address)", "lineno": 98, "title": "Exception state", "type": "Informational"}, {"address": 7876, "code": "Price) constant returns(uint2", "debug": "The exception is triggered under the following conditions:\n\nstorage_63494115790245236833190262165204403781416728104395367008488472023786642762591: 0xffffffffffffffffffffffffffffffff00000000000000000000000000000000\nreturndatasize: 0x20\nretval_6277: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_BMmkPreICO_4: 0x0\ncalldata_BMmkPreICO_0: 0x6e3c575900000000000000000000000000000000000000000000000000000000\ncalldatasize_BMmkPreICO: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/5/0x19d7a9ad3b49252fd2ef640d0e43dfd651168499.sol", "function": "claim_partnerPreICOTokens(address)", "lineno": 103, "title": "Exception state", "type": "Informational"}], "success": true}