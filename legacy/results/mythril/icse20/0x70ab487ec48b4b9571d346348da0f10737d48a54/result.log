{"error": null, "issues": [{"address": 2736, "code": "me + disputeWindow * 1 seconds;", "debug": "timestamp: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncalldata_PredictionHandshake_32 + 68: 0x57f25cd000000000000000000000000000000000000000000000000000000000\nstorage_5: 0x0\ncaller: 0x0\ncalldata_PredictionHandshake_0: 0x9ea1f19300000000000000000000000000000000000000000000000000000000\ncalldatasize_PredictionHandshake: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `createMarketForShurikenUser(address,uint256,bytes32,uint256,uint256,uint256,bytes32)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/2/0x70ab487ec48b4b9571d346348da0f10737d48a54.sol", "function": "createMarketForShurikenUser(address,uint256,bytes32,uint256,uint256,uint256,bytes32)", "lineno": 151, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2755, "code": "            markets.push(m);\n\n          ", "debug": "calldata_PredictionHandshake_32 + 100: 0x43d5ae6891e389eec0bf7fcc09a728ebedad75cf0b796b5664cbdc6b793da881\ntimestamp: 0x72dc24493301c1ec5cff6c4ea1548de3644903aaeafe924d13450f3b1701469e\ncalldata_PredictionHandshake_32 + 68: 0x8078080001ff2760a13f09dde4212006a0800000c00002000704820f6fc00058\nstorage_5: 0x0\ncaller: 0x0\ncalldata_PredictionHandshake_0: 0x9ea1f19300000000000000000000000000000000000000000000000000000000\ncalldatasize_PredictionHandshake: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `createMarketForShurikenUser(address,uint256,bytes32,uint256,uint256,uint256,bytes32)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/2/0x70ab487ec48b4b9571d346348da0f10737d48a54.sol", "function": "createMarketForShurikenUser(address,uint256,bytes32,uint256,uint256,uint256,bytes32)", "lineno": 153, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2774, "code": "ength - 1, m.closingTime, m.reportTime, ", "debug": "calldata_PredictionHandshake_32 + 100: 0x1d0\ncalldata_PredictionHandshake_32 + 132: 0x7ffffe0000000000000000000000000000000000000000000000000000000000\ntimestamp: 0x400000000000000800000000000000000000003ffffffffdfffffffffffffe2f\ncalldata_PredictionHandshake_32 + 68: 0xbffffffffffffff7ffffffffffffffffffffffc0000000020000000000000000\nstorage_5: 0x0\ncaller: 0x0\ncalldata_PredictionHandshake_0: 0x9ea1f19300000000000000000000000000000000000000000000000000000000\ncalldatasize_PredictionHandshake: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `createMarketForShurikenUser(address,uint256,bytes32,uint256,uint256,uint256,bytes32)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/2/0x70ab487ec48b4b9571d346348da0f10737d48a54.sol", "function": "createMarketForShurikenUser(address,uint256,bytes32,uint256,uint256,uint256,bytes32)", "lineno": 155, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2804, "code": "ge is an exchange ", "debug": "storage_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_5: 0x0\ncaller: 0x0\ncalldata_PredictionHandshake_0: 0x9ea1f19300000000000000000000000000000000000000000000000000000000\ncalldatasize_PredictionHandshake: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `createMarketForShurikenUser(address,uint256,bytes32,uint256,uint256,uint256,bytes32)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/2/0x70ab487ec48b4b9571d346348da0f10737d48a54.sol", "function": "createMarketForShurikenUser(address,uint256,bytes32,uint256,uint256,uint256,bytes32)", "lineno": 3, "title": "Integer Overflow ", "type": "Warning"}, {"address": 3321, "code": "          //", "debug": "The exception is triggered under the following conditions:\n\ncalldata_PredictionHandshake_4: 0x0\nstorage_4: 0x0\nstorage_5: 0x0\ncaller: 0x0\ncalldata_PredictionHandshake_0: 0x5f25794a00000000000000000000000000000000000000000000000000000000\ncalldatasize_PredictionHandshake: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/2/0x70ab487ec48b4b9571d346348da0f10737d48a54.sol", "function": "getOpenData(uint256,uint256,address,uint256)", "lineno": 69, "title": "Exception state", "type": "Informational"}, {"address": 3652, "code": "      uint stake, \n ", "debug": "", "description": "A possible transaction order independence vulnerability exists in function withdrawTrial(). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/2/0x70ab487ec48b4b9571d346348da0f10737d48a54.sol", "function": "withdrawTrial()", "lineno": 243, "title": "Transaction order dependence", "type": "Warning"}, {"address": 3872, "debug": "The exception is triggered under the following conditions:\n\ncalldata_PredictionHandshake_4: 0x0\nstorage_4: 0x0\ncalldata_PredictionHandshake_0: 0x71eedb8800000000000000000000000000000000000000000000000000000000\ncalldatasize_PredictionHandshake: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/2/0x70ab487ec48b4b9571d346348da0f10737d48a54.sol", "function": "refund(uint256,bytes32)", "lineno": 595, "title": "Exception state", "type": "Informational"}, {"address": 5324, "code": "id, uint outcome, bytes3", "debug": "", "description": "In the function `refund(uint256,bytes32)` the following predictable state variables are used to determine Ether recipient:\n- block.timestamp\n", "filename": "/unique_chucks/2/0x70ab487ec48b4b9571d346348da0f10737d48a54.sol", "function": "refund(uint256,bytes32)", "lineno": 510, "title": "Dependence on predictable environment variable", "type": "Warning"}, {"address": 5506, "code": "  m.outcome = outcome;\n ", "debug": "", "description": "In the function `refund(uint256,bytes32)` the following predictable state variables are used to determine Ether recipient:\n- block.timestamp\n", "filename": "/unique_chucks/2/0x70ab487ec48b4b9571d346348da0f10737d48a54.sol", "function": "refund(uint256,bytes32)", "lineno": 515, "title": "Dependence on predictable environment variable", "type": "Warning"}, {"address": 5994, "code": "address taker,\n                uint take", "debug": "storage_keccac_calldata_PredictionHandshake_32_+_68: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncallvalue: 0x57f25cd000000000000000000000000000000000000000000000000000000000\nstorage_5: 0x0\ncaller: 0x0\ncalldata_PredictionHandshake_0: 0x9d56ded400000000000000000000000000000000000000000000000000000000\ncalldatasize_PredictionHandshake: 0x4\n", "description": "A possible integer overflow exists in the function `shakeTestDrive(uint256,uint256,address,uint256,address,uint256,bytes32)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/2/0x70ab487ec48b4b9571d346348da0f10737d48a54.sol", "function": "shakeTestDrive(uint256,uint256,address,uint256,address,uint256,bytes32)", "lineno": 347, "title": "Integer Overflow ", "type": "Warning"}, {"address": 6091, "code": "     address maker, \n                uint ", "debug": "callvalue: 0x57f25cd000000000000000000000000000000000000000000000000000000000\nstorage_keccac_calldata_PredictionHandshake_4: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_5: 0x0\ncaller: 0x0\ncalldata_PredictionHandshake_0: 0x9d56ded400000000000000000000000000000000000000000000000000000000\ncalldatasize_PredictionHandshake: 0x4\n", "description": "A possible integer overflow exists in the function `shakeTestDrive(uint256,uint256,address,uint256,address,uint256,bytes32)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/2/0x70ab487ec48b4b9571d346348da0f10737d48a54.sol", "function": "shakeTestDrive(uint256,uint256,address,uint256,address,uint256,bytes32)", "lineno": 349, "title": "Integer Overflow ", "type": "Warning"}, {"address": 6625, "debug": "The exception is triggered under the following conditions:\n\ncalldata_PredictionHandshake_4: 0x0\nstorage_4: 0x0\ncalldata_PredictionHandshake_0: 0xa420d8d900000000000000000000000000000000000000000000000000000000\ncalldatasize_PredictionHandshake: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/2/0x70ab487ec48b4b9571d346348da0f10737d48a54.sol", "function": "uninit(uint256,uint256,uint256,uint256,bytes32)", "lineno": 595, "title": "Exception state", "type": "Informational"}, {"address": 8236, "code": "markets[hid]", "debug": "The exception is triggered under the following conditions:\n\ncalldata_PredictionHandshake_4: 0x0\nstorage_4: 0x0\nstorage_5: 0x0\ncaller: 0x0\ncalldata_PredictionHandshake_0: 0xa7d07c8200000000000000000000000000000000000000000000000000000000\ncalldatasize_PredictionHandshake: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/2/0x70ab487ec48b4b9571d346348da0f10737d48a54.sol", "function": "resolve(uint256,uint256,bytes32)", "lineno": 586, "title": "Exception state", "type": "Informational"}, {"address": 8448, "code": "  mapping(address => Tr", "debug": "The exception is triggered under the following conditions:\n\ncalldata_PredictionHandshake_4: 0x0\nstorage_4: 0x0\ncalldata_PredictionHandshake_0: 0xb1283e7700000000000000000000000000000000000000000000000000000000\ncalldatasize_PredictionHandshake: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/2/0x70ab487ec48b4b9571d346348da0f10737d48a54.sol", "function": "_function_0xb1283e77", "lineno": 96, "title": "Exception state", "type": "Informational"}, {"address": 8914, "code": "fchain);\n        }\n        \n       ", "debug": "storage_keccac_calldata_PredictionHandshake_32_+_36: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncallvalue: 0x57f25cd000000000000000000000000000000000000000000000000000000000\nstorage_5: 0x0\ncaller: 0x0\ncalldata_PredictionHandshake_0: 0xb86c8cf400000000000000000000000000000000000000000000000000000000\ncalldatasize_PredictionHandshake: 0x4\n", "description": "A possible integer overflow exists in the function `initTestDrive(uint256,uint256,uint256,address,bytes32)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/2/0x70ab487ec48b4b9571d346348da0f10737d48a54.sol", "function": "initTestDrive(uint256,uint256,uint256,address,bytes32)", "lineno": 194, "title": "Integer Overflow ", "type": "Warning"}, {"address": 9011, "code": "tDrive\n        (\n            uint hid,\n   ", "debug": "callvalue: 0x57f25cd000000000000000000000000000000000000000000000000000000000\nstorage_keccac_calldata_PredictionHandshake_4: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_5: 0x0\ncaller: 0x0\ncalldata_PredictionHandshake_0: 0xb86c8cf400000000000000000000000000000000000000000000000000000000\ncalldatasize_PredictionHandshake: 0x4\n", "description": "A possible integer overflow exists in the function `initTestDrive(uint256,uint256,uint256,address,bytes32)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/2/0x70ab487ec48b4b9571d346348da0f10737d48a54.sol", "function": "initTestDrive(uint256,uint256,uint256,address,bytes32)", "lineno": 197, "title": "Integer Overflow ", "type": "Warning"}, {"address": 12117, "code": "    emit __i", "debug": "The exception is triggered under the following conditions:\n\ncalldata_PredictionHandshake_4: 0x0\nstorage_4: 0x0\nstorage_5: 0x0\ncaller: 0x0\ncalldata_PredictionHandshake_0: 0xb86c8cf400000000000000000000000000000000000000000000000000000000\ncalldatasize_PredictionHandshake: 0x4\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/2/0x70ab487ec48b4b9571d346348da0f10737d48a54.sol", "function": "initTestDrive(uint256,uint256,uint256,address,bytes32)", "lineno": 288, "title": "Exception state", "type": "Informational"}, {"address": 12263, "code": "uninit(uint hid, bytes32 offchain);\n  ", "debug": "callvalue: 0x57f25cd000000000000000000000000000000000000000000000000000000000\nstorage_0 + keccac_calldata_PredictionHandshake_32_+_4: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ntimestamp: 0x0\ncalldata_PredictionHandshake_4: 0x0\nstorage_3 +\n62514009886607029107290561805838585334079798074568712924583230797734656856475 +\n16*calldata_PredictionHandshake_4: 0x1\nstorage_4: 0x1\nstorage_5: 0x0\ncaller: 0x0\ncalldata_PredictionHandshake_0: 0xb86c8cf400000000000000000000000000000000000000000000000000000000\ncalldatasize_PredictionHandshake: 0x4\nstorage_6 +\n62514009886607029107290561805838585334079798074568712924583230797734656856475 +\n16*calldata_PredictionHandshake_4: 0x1\n", "description": "A possible integer overflow exists in the function `initTestDrive(uint256,uint256,uint256,address,bytes32)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/2/0x70ab487ec48b4b9571d346348da0f10737d48a54.sol", "function": "initTestDrive(uint256,uint256,uint256,address,bytes32)", "lineno": 293, "title": "Integer Overflow ", "type": "Warning"}, {"address": 12379, "code": "_uninit(uint stake);\n\n        \n\n\n        ev", "debug": "storage_keccac_calldata_PredictionHandshake_32_+_36: 0x8000000000800000000000000000000000000000000000002000000000000002\ncallvalue: 0x7ffffffffbffffffffffffffffffffffffffffffffffffffdffffffffffffffd\ntimestamp: 0x0\ncalldata_PredictionHandshake_4: 0x0\nstorage_3 +\n62514009886607029107290561805838585334079798074568712924583230797734656856475 +\n16*calldata_PredictionHandshake_4: 0x1\nstorage_4: 0x1\nstorage_5: 0x0\ncaller: 0x0\ncalldata_PredictionHandshake_0: 0xb86c8cf400000000000000000000000000000000000000000000000000000000\ncalldatasize_PredictionHandshake: 0x4\nstorage_6 +\n62514009886607029107290561805838585334079798074568712924583230797734656856475 +\n16*calldata_PredictionHandshake_4: 0x1\n", "description": "A possible integer overflow exists in the function `initTestDrive(uint256,uint256,uint256,address,bytes32)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/2/0x70ab487ec48b4b9571d346348da0f10737d48a54.sol", "function": "initTestDrive(uint256,uint256,uint256,address,bytes32)", "lineno": 294, "title": "Integer Overflow ", "type": "Warning"}, {"address": 12397, "code": "d, bytes32 offchain);\n       ", "debug": "callvalue: 0x57f25cd000000000000000000000000000000000000000000000000000000000\nstorage_9 +\n62514009886607029107290561805838585334079798074568712924583230797734656856475 +\n16*calldata_PredictionHandshake_4: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ntimestamp: 0x0\ncalldata_PredictionHandshake_4: 0x0\nstorage_3 +\n62514009886607029107290561805838585334079798074568712924583230797734656856475 +\n16*calldata_PredictionHandshake_4: 0x1\nstorage_4: 0x1\nstorage_5: 0x0\ncaller: 0x0\ncalldata_PredictionHandshake_0: 0xb86c8cf400000000000000000000000000000000000000000000000000000000\ncalldatasize_PredictionHandshake: 0x4\nstorage_6 +\n62514009886607029107290561805838585334079798074568712924583230797734656856475 +\n16*calldata_PredictionHandshake_4: 0x1\n", "description": "A possible integer overflow exists in the function `initTestDrive(uint256,uint256,uint256,address,bytes32)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/2/0x70ab487ec48b4b9571d346348da0f10737d48a54.sol", "function": "initTestDrive(uint256,uint256,uint256,address,bytes32)", "lineno": 299, "title": "Integer Overflow ", "type": "Warning"}, {"address": 12643, "code": "n[winner][1]", "debug": "The exception is triggered under the following conditions:\n\ncalldata_PredictionHandshake_4: 0x0\nstorage_4: 0x0\nstorage_5: 0x0\ncaller: 0x0\ncalldata_PredictionHandshake_0: 0x67d528ad00000000000000000000000000000000000000000000000000000000\ncalldatasize_PredictionHandshake: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/2/0x70ab487ec48b4b9571d346348da0f10737d48a54.sol", "function": "collectTestDrive(uint256,address,bytes32)", "lineno": 439, "title": "Exception state", "type": "Informational"}, {"address": 12795, "code": "      m.totalOpenStake -= m.open[winner][1]", "debug": "storage_1 +\n62514009886607029107290561805838585334079798074568712924583230797734656856475 +\n16*calldata_PredictionHandshake_4: 0xde9aa0007ffff9dbbb05d00001000207fffdffbfffbfbfbfffbfbfefbfbff7f6\nstorage_1 +\nkeccac_storage_7_+\n62514009886607029107290561805838585334079798074568712924583230797734656856475_+\n16*calldata_PredictionHandshake_4: 0xff3717ddf147ba7fd6976a72ee859c9c251431c6dd4346e384e0fd941c87b69c\nstorage_5 +\n62514009886607029107290561805838585334079798074568712924583230797734656856475 +\n16*calldata_PredictionHandshake_4: 0x0\ncalldata_PredictionHandshake_4: 0x0\ntimestamp: 0x1\nstorage_4: 0x1\nstorage_5: 0x0\ncaller: 0x0\ncalldata_PredictionHandshake_0: 0x67d528ad00000000000000000000000000000000000000000000000000000000\ncalldatasize_PredictionHandshake: 0x4\nstorage_6 +\n62514009886607029107290561805838585334079798074568712924583230797734656856475 +\n16*calldata_PredictionHandshake_4: 0x2\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `collectTestDrive(uint256,address,bytes32)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/2/0x70ab487ec48b4b9571d346348da0f10737d48a54.sol", "function": "collectTestDrive(uint256,address,bytes32)", "lineno": 446, "title": "Integer Overflow ", "type": "Warning"}, {"address": 13007, "code": "dStake -= m.matched[winner][2]", "debug": "storage_0 + keccac_0: 0x57f25cd000000000000000000000000000000000000000000000000000000000\nstorage_1 +\nkeccac_storage_7_+\n62514009886607029107290561805838585334079798074568712924583230797734656856475_+\n16*calldata_PredictionHandshake_4: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_5 +\n62514009886607029107290561805838585334079798074568712924583230797734656856475 +\n16*calldata_PredictionHandshake_4: 0x0\ncalldata_PredictionHandshake_4: 0x0\ntimestamp: 0x1\nstorage_4: 0x1\nstorage_5: 0x0\ncaller: 0x0\ncalldata_PredictionHandshake_0: 0x67d528ad00000000000000000000000000000000000000000000000000000000\ncalldatasize_PredictionHandshake: 0x4\nstorage_6 +\n62514009886607029107290561805838585334079798074568712924583230797734656856475 +\n16*calldata_PredictionHandshake_4: 0x2\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `collectTestDrive(uint256,address,bytes32)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/2/0x70ab487ec48b4b9571d346348da0f10737d48a54.sol", "function": "collectTestDrive(uint256,address,bytes32)", "lineno": 449, "title": "Integer Overflow ", "type": "Warning"}, {"address": 13098, "code": "     // wipe data\n            ", "debug": "storage_0 + keccac_0: 0x7ffffffffbffffffffffffffffffffffffffffffffffffffdffffffffffffffd\nstorage_1 +\nkeccac_storage_7_+\n62514009886607029107290561805838585334079798074568712924583230797734656856475_+\n16*calldata_PredictionHandshake_4: 0x8000000000800000000000000000000000000000000000002000000000000002\nstorage_5 +\n62514009886607029107290561805838585334079798074568712924583230797734656856475 +\n16*calldata_PredictionHandshake_4: 0x0\ncalldata_PredictionHandshake_4: 0x0\ntimestamp: 0x1\nstorage_4: 0x1\nstorage_5: 0x0\ncaller: 0x0\ncalldata_PredictionHandshake_0: 0x67d528ad00000000000000000000000000000000000000000000000000000000\ncalldatasize_PredictionHandshake: 0x4\nstorage_6 +\n62514009886607029107290561805838585334079798074568712924583230797734656856475 +\n16*calldata_PredictionHandshake_4: 0x2\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `collectTestDrive(uint256,address,bytes32)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/2/0x70ab487ec48b4b9571d346348da0f10737d48a54.sol", "function": "collectTestDrive(uint256,address,bytes32)", "lineno": 451, "title": "Integer Overflow ", "type": "Warning"}, {"address": 13233, "code": "].stake = 0;\n                m.matched[winn", "debug": "storage_9 +\n62514009886607029107290561805838585334079798074568712924583230797734656856475 +\n16*calldata_PredictionHandshake_4: 0x0\nstorage_5 +\n62514009886607029107290561805838585334079798074568712924583230797734656856475 +\n16*calldata_PredictionHandshake_4: 0x0\ncalldata_PredictionHandshake_4: 0x0\nstorage_0 + keccac_0: 0x1\ntimestamp: 0x1\nstorage_4: 0x1\nstorage_5: 0x0\ncaller: 0x0\ncalldata_PredictionHandshake_0: 0x67d528ad00000000000000000000000000000000000000000000000000000000\ncalldatasize_PredictionHandshake: 0x4\nstorage_6 +\n62514009886607029107290561805838585334079798074568712924583230797734656856475 +\n16*calldata_PredictionHandshake_4: 0x2\ncallvalue: 0x0\n", "description": "A possible integer underflow exists in the function `collectTestDrive(uint256,address,bytes32)`.\nThe subtraction may result in a value < 0.", "filename": "/unique_chucks/2/0x70ab487ec48b4b9571d346348da0f10737d48a54.sol", "function": "collectTestDrive(uint256,address,bytes32)", "lineno": 455, "title": "Integer Underflow", "type": "Warning"}, {"address": 13337, "code": "ut = 0;\n\n                winner.transfer(am", "debug": "storage_5 +\n62514009886607029107290561805838585334079798074568712924583230797734656856475 +\n16*calldata_PredictionHandshake_4: 0x0\ncalldata_PredictionHandshake_4: 0x0\nstorage_0 + keccac_0: 0x1\nstorage_9 +\n62514009886607029107290561805838585334079798074568712924583230797734656856475 +\n16*calldata_PredictionHandshake_4: 0x1\ntimestamp: 0x1\nstorage_4: 0x1\nstorage_5: 0x0\ncaller: 0x0\ncalldata_PredictionHandshake_0: 0x67d528ad00000000000000000000000000000000000000000000000000000000\ncalldatasize_PredictionHandshake: 0x4\nstorage_6 +\n62514009886607029107290561805838585334079798074568712924583230797734656856475 +\n16*calldata_PredictionHandshake_4: 0x2\ncallvalue: 0x0\n", "description": "A possible integer underflow exists in the function `collectTestDrive(uint256,address,bytes32)`.\nThe subtraction may result in a value < 0.", "filename": "/unique_chucks/2/0x70ab487ec48b4b9571d346348da0f10737d48a54.sol", "function": "collectTestDrive(uint256,address,bytes32)", "lineno": 456, "title": "Integer Underflow", "type": "Warning"}, {"address": 13441, "code": "              m.creator.transfer(marketComm - net", "debug": "storage_8 +\n62514009886607029107290561805838585334079798074568712924583230797734656856475 +\n16*calldata_PredictionHandshake_4: 0x0\nstorage_5 +\n62514009886607029107290561805838585334079798074568712924583230797734656856475 +\n16*calldata_PredictionHandshake_4: 0x0\ncalldata_PredictionHandshake_4: 0x0\nstorage_0 + keccac_0: 0x1\ntimestamp: 0x1\nstorage_4: 0x1\nstorage_5: 0x0\ncaller: 0x0\ncalldata_PredictionHandshake_0: 0x67d528ad00000000000000000000000000000000000000000000000000000000\ncalldatasize_PredictionHandshake: 0x4\nstorage_6 +\n62514009886607029107290561805838585334079798074568712924583230797734656856475 +\n16*calldata_PredictionHandshake_4: 0x2\ncallvalue: 0x0\n", "description": "A possible integer underflow exists in the function `collectTestDrive(uint256,address,bytes32)`.\nThe subtraction may result in a value < 0.", "filename": "/unique_chucks/2/0x70ab487ec48b4b9571d346348da0f10737d48a54.sol", "function": "collectTestDrive(uint256,address,bytes32)", "lineno": 459, "title": "Integer Underflow", "type": "Warning"}, {"address": 13545, "code": "        root.transfer(networkComm);\n\n            ", "debug": "storage_5 +\n62514009886607029107290561805838585334079798074568712924583230797734656856475 +\n16*calldata_PredictionHandshake_4: 0x0\ncalldata_PredictionHandshake_4: 0x0\nstorage_0 + keccac_0: 0x1\nstorage_8 +\n62514009886607029107290561805838585334079798074568712924583230797734656856475 +\n16*calldata_PredictionHandshake_4: 0x1\ntimestamp: 0x1\nstorage_4: 0x1\nstorage_5: 0x0\ncaller: 0x0\ncalldata_PredictionHandshake_0: 0x67d528ad00000000000000000000000000000000000000000000000000000000\ncalldatasize_PredictionHandshake: 0x4\nstorage_6 +\n62514009886607029107290561805838585334079798074568712924583230797734656856475 +\n16*calldata_PredictionHandshake_4: 0x2\ncallvalue: 0x0\n", "description": "A possible integer underflow exists in the function `collectTestDrive(uint256,address,bytes32)`.\nThe subtraction may result in a value < 0.", "filename": "/unique_chucks/2/0x70ab487ec48b4b9571d346348da0f10737d48a54.sol", "function": "collectTestDrive(uint256,address,bytes32)", "lineno": 460, "title": "Integer Underflow", "type": "Warning"}, {"address": 14065, "code": "\n        function refund(uint hid", "debug": "", "description": "In the function `collectTestDrive(uint256,address,bytes32)` the following predictable state variables are used to determine Ether recipient:\n- block.timestamp\n", "filename": "/unique_chucks/2/0x70ab487ec48b4b9571d346348da0f10737d48a54.sol", "function": "collectTestDrive(uint256,address,bytes32)", "lineno": 470, "title": "Dependence on predictable environment variable", "type": "Warning"}, {"address": 14065, "code": "\n        function refund(uint hid", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 14279\nCall at address: 14174\n", "filename": "/unique_chucks/2/0x70ab487ec48b4b9571d346348da0f10737d48a54.sol", "function": "collectTestDrive(uint256,address,bytes32)", "lineno": 470, "title": "Multiple Calls", "type": "Information"}, {"address": 14174, "code": " public onlyPredictor(hid) {\n\n              ", "debug": "", "description": "In the function `collectTestDrive(uint256,address,bytes32)` the following predictable state variables are used to determine Ether recipient:\n- block.timestamp\n", "filename": "/unique_chucks/2/0x70ab487ec48b4b9571d346348da0f10737d48a54.sol", "function": "collectTestDrive(uint256,address,bytes32)", "lineno": 471, "title": "Dependence on predictable environment variable", "type": "Warning"}, {"address": 14174, "code": " public onlyPredictor(hid) {\n\n              ", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 14279\n", "filename": "/unique_chucks/2/0x70ab487ec48b4b9571d346348da0f10737d48a54.sol", "function": "collectTestDrive(uint256,address,bytes32)", "lineno": 471, "title": "Multiple Calls", "type": "Information"}, {"address": 14279, "code": "= markets[hid]; \n\n        ", "debug": "", "description": "In the function `collectTestDrive(uint256,address,bytes32)` the following predictable state variables are used to determine Ether recipient:\n- block.timestamp\n", "filename": "/unique_chucks/2/0x70ab487ec48b4b9571d346348da0f10737d48a54.sol", "function": "collectTestDrive(uint256,address,bytes32)", "lineno": 473, "title": "Dependence on predictable environment variable", "type": "Warning"}, {"address": 14552, "code": "t = (makerSt", "debug": "The exception is triggered under the following conditions:\n\ncalldata_PredictionHandshake_4: 0x0\nstorage_1: 0x0\nstorage_4: 0x0\ncalldata_PredictionHandshake_32 + 132: 0x0\ncalldata_PredictionHandshake_32 + 68: 0x0\ncalldata_PredictionHandshake_32 + 100: 0xffffffffffffffffffffffffffffffffffffffff\nstorage_5: 0x0\ncaller: 0x0\ncalldata_PredictionHandshake_0: 0x9d56ded400000000000000000000000000000000000000000000000000000000\ncalldatasize_PredictionHandshake: 0x4\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/2/0x70ab487ec48b4b9571d346348da0f10737d48a54.sol", "function": "shakeTestDrive(uint256,uint256,address,uint256,address,uint256,bytes32)", "lineno": 370, "title": "Exception state", "type": "Informational"}, {"address": 14717, "code": "             takerPayout = makerP", "debug": "The exception is triggered under the following conditions:\n\ntimestamp: 0x0\ncalldata_PredictionHandshake_4: 0x0\nstorage_3 +\n62514009886607029107290561805838585334079798074568712924583230797734656856475 +\n16*calldata_PredictionHandshake_4: 0x1\nstorage_4: 0x1\ncalldata_PredictionHandshake_32 + 100: 0xffffffffffffffffffffffffffffffffffffffff\nstorage_5: 0x0\ncaller: 0x0\ncalldata_PredictionHandshake_0: 0x9d56ded400000000000000000000000000000000000000000000000000000000\ncalldatasize_PredictionHandshake: 0x4\nstorage_1: 0x0\nstorage_6 +\n62514009886607029107290561805838585334079798074568712924583230797734656856475 +\n16*calldata_PredictionHandshake_4: 0x1\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/2/0x70ab487ec48b4b9571d346348da0f10737d48a54.sol", "function": "shakeTestDrive(uint256,uint256,address,uint256,address,uint256,bytes32)", "lineno": 377, "title": "Exception state", "type": "Informational"}, {"address": 16690, "code": "e += m.match", "debug": "The exception is triggered under the following conditions:\n\ncalldata_PredictionHandshake_4: 0x0\nstorage_4: 0x0\nstorage_2 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_PredictionHandshake_32_+_4: 0xff00\nstorage_5: 0x0\ncaller: 0x0\ncalldata_PredictionHandshake_0: 0x9ff1493400000000000000000000000000000000000000000000000000000000\ncalldatasize_PredictionHandshake: 0x4\nstorage_0 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_PredictionHandshake_32_+_4: 0x0\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/2/0x70ab487ec48b4b9571d346348da0f10737d48a54.sol", "function": "disputeTestDrive(uint256,address,bytes32)", "lineno": 550, "title": "Exception state", "type": "Informational"}], "success": true}