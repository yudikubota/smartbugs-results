{
  "contract": "0x89b1e9f46d0f1d1a59c7611fc50d6a1498e63159",
  "tool": "mythril",
  "start": 1563432819.2794638,
  "end": 1563432981.4344985,
  "duration": 162.15503478050232,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 544,
        "code": "   return (\n            deals[deal].buyer,\n            deals[deal].seller,\n            deals[deal].signer,\n            deals[deal].sum,\n            deals[deal].atCreated,\n            deals[deal].status,\n            deals[deal].objectType,\n            deal\n            );\n    }\n    \n    /**\n     * @dev Get comment, fee, atCloced, date, is prolong of deal\n     * @param _dealNumber - uniq number of deal \n     */ \n    function getDealDataByNumber(uint _dealNumber)  constant public returns (\n    string comment, \n    uint fee, \n    uint atClosed,\n ",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_realestate_4: 0x0\nstorage_8 +\n62514009886607029107290561805838585334079798074568712924583230797734656856475 +\n14*calldata_realestate_4: 0xfc00\nstorage_4: 0x1\nstorage_2: 0x0\ncaller: 0x0\ncalldata_realestate_0: 0xaba73d700000000000000000000000000000000000000000000000000000000\ncalldatasize_realestate: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0x89b1e9f46d0f1d1a59c7611fc50d6a1498e63159.sol",
        "function": "getDealById(uint256)",
        "lineno": 262,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2498,
        "code": "     deals[",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_calldata_realestate_4: 0x0\nstorage_5: 0x0\ncalldata_realestate_0: 0x6a5f08700000000000000000000000000000000000000000000000000000000\ncalldatasize_realestate: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0x89b1e9f46d0f1d1a59c7611fc50d6a1498e63159.sol",
        "function": "signSeller(uint256)",
        "lineno": 398,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2593,
        "code": "\n   }*/\n   ",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_calldata_realestate_4: 0x0\nstorage_4: 0x0\nstorage_1 +\n1546678032441257452667456735582814959992782782816731922691272282333561699760 +\n5*storage_keccac_calldata_realestate_4: 0x0\nstorage_5: 0x1\ncalldata_realestate_0: 0x6a5f08700000000000000000000000000000000000000000000000000000000\ncalldatasize_realestate: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0x89b1e9f46d0f1d1a59c7611fc50d6a1498e63159.sol",
        "function": "signSeller(uint256)",
        "lineno": 399,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2919,
        "code": "/**\n     * ",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_realestate_4: 0x0\nstorage_4: 0x0\nstorage_2: 0x0\ncaller: 0x0\ncalldata_realestate_0: 0xaba73d700000000000000000000000000000000000000000000000000000000\ncalldatasize_realestate: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0x89b1e9f46d0f1d1a59c7611fc50d6a1498e63159.sol",
        "function": "getDealById(uint256)",
        "lineno": 274,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3349,
        "code": "= dealNumbe",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_calldata_realestate_4: 0x0\nstorage_4: 0x0\ncalldata_realestate_0: 0x278ecde100000000000000000000000000000000000000000000000000000000\ncalldatasize_realestate: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0x89b1e9f46d0f1d1a59c7611fc50d6a1498e63159.sol",
        "function": "refund(uint256)",
        "lineno": 424,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3688,
        "code": "== statuses.signed );\n       \n       //SIGNING.",
        "debug": "",
        "description": "In the function `refund(uint256)` the following predictable state variables are used to determine Ether recipient:\n- block.timestamp\n",
        "filename": "/unique_contracts/0x89b1e9f46d0f1d1a59c7611fc50d6a1498e63159.sol",
        "function": "refund(uint256)",
        "lineno": 426,
        "title": "Dependence on predictable environment variable",
        "type": "Warning"
      },
      {
        "address": 3688,
        "code": "== statuses.signed );\n       \n       //SIGNING.",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function refund(uint256). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_contracts/0x89b1e9f46d0f1d1a59c7611fc50d6a1498e63159.sol",
        "function": "refund(uint256)",
        "lineno": 426,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 3794,
        "code": "r;\n    }\n  ",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_calldata_realestate_4: 0x0\nstorage_4: 0x0\ncalldata_realestate_0: 0x31ea1a3900000000000000000000000000000000000000000000000000000000\ncalldatasize_realestate: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0x89b1e9f46d0f1d1a59c7611fc50d6a1498e63159.sol",
        "function": "cancelDeal(uint256)",
        "lineno": 154,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 4036,
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_calldata_realestate_4: 0x0\nstorage_8 +\n62514009886607029107290561805838585334079798074568712924583230797734656856475 +\n14*storage_keccac_calldata_realestate_4: 0xfc00\nstorage_7 +\n62514009886607029107290561805838585334079798074568712924583230797734656856475 +\n14*storage_keccac_calldata_realestate_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_2 +\n62514009886607029107290561805838585334079798074568712924583230797734656856475 +\n14*storage_keccac_calldata_realestate_4: 0x0\ncaller: 0x0\nstorage_4: 0x1\ncalldata_realestate_0: 0x31ea1a3900000000000000000000000000000000000000000000000000000000\ncalldatasize_realestate: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0x89b1e9f46d0f1d1a59c7611fc50d6a1498e63159.sol",
        "function": "cancelDeal(uint256)",
        "lineno": 494,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 4194,
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function cancelDeal(uint256). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_contracts/0x89b1e9f46d0f1d1a59c7611fc50d6a1498e63159.sol",
        "function": "cancelDeal(uint256)",
        "lineno": 494,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 4607,
        "code": "r\n    * @pa",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_calldata_realestate_4: 0x0\nstorage_4: 0x0\ncalldata_realestate_0: 0x4b3c45db00000000000000000000000000000000000000000000000000000000\ncalldatasize_realestate: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0x89b1e9f46d0f1d1a59c7611fc50d6a1498e63159.sol",
        "function": "getDealDataByNumber(uint256)",
        "lineno": 300,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 5024,
        "code": "    deals[d",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_calldata_realestate_4: 0x0\nstorage_5: 0x0\ncalldata_realestate_0: 0x5030c32500000000000000000000000000000000000000000000000000000000\ncalldatasize_realestate: 0x4\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0x89b1e9f46d0f1d1a59c7611fc50d6a1498e63159.sol",
        "function": "signBuyer(uint256)",
        "lineno": 374,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 5119,
        "code": " \n   }\n   \n",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_calldata_realestate_4: 0x0\nstorage_4: 0x0\nstorage_0 +\n1546678032441257452667456735582814959992782782816731922691272282333561699760 +\n5*storage_keccac_calldata_realestate_4: 0x0\nstorage_5: 0x1\ncalldata_realestate_0: 0x5030c32500000000000000000000000000000000000000000000000000000000\ncalldatasize_realestate: 0x4\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0x89b1e9f46d0f1d1a59c7611fc50d6a1498e63159.sol",
        "function": "signBuyer(uint256)",
        "lineno": 375,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 6039,
        "code": "er of deal ",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_calldata_realestate_4: 0x0\nstorage_4: 0x0\nstorage_2: 0x0\ncaller: 0x0\ncalldata_realestate_0: 0x63176ad900000000000000000000000000000000000000000000000000000000\ncalldatasize_realestate: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0x89b1e9f46d0f1d1a59c7611fc50d6a1498e63159.sol",
        "function": "changeDealDate(uint256,uint256)",
        "lineno": 192,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 6088,
        "code": " public return",
        "debug": "calldata_realestate_32 + 4: 0x200000000000000000000000000000000000000000000000000000000000000\nstorage_keccac_calldata_realestate_4: 0x0\nstorage_13 +\n62514009886607029107290561805838585334079798074568712924583230797734656856475 +\n14*storage_keccac_calldata_realestate_4: 0xff00\nstorage_4: 0x1\nstorage_2: 0x0\ncaller: 0x0\ncalldata_realestate_0: 0x63176ad900000000000000000000000000000000000000000000000000000000\ncalldatasize_realestate: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `changeDealDate(uint256,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x89b1e9f46d0f1d1a59c7611fc50d6a1498e63159.sol",
        "function": "changeDealDate(uint256,uint256)",
        "lineno": 194,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 6090,
        "code": "nstant public return",
        "debug": "timestamp: 0x29189e3775e07a568b57c32affec278f748807883841d3e9675e40904a48aa80\ncalldata_realestate_32 + 4: 0x86333caec32ab3cd6168662afd0bebbd5187de81937a720a45887a4ba94a43\nstorage_keccac_calldata_realestate_4: 0x0\nstorage_13 +\n62514009886607029107290561805838585334079798074568712924583230797734656856475 +\n14*storage_keccac_calldata_realestate_4: 0xff00\nstorage_4: 0x1\nstorage_2: 0x0\ncaller: 0x0\ncalldata_realestate_0: 0x63176ad900000000000000000000000000000000000000000000000000000000\ncalldatasize_realestate: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `changeDealDate(uint256,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x89b1e9f46d0f1d1a59c7611fc50d6a1498e63159.sol",
        "function": "changeDealDate(uint256,uint256)",
        "lineno": 194,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 6513,
        "code": "      deals[ne",
        "debug": "storage_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_realestate_32 + 68: 0x0\ncalldata_realestate_32 + 100: 0x0\nstorage_2: 0x0\ncaller: 0x0\ncalldata_realestate_0: 0x77daeb8000000000000000000000000000000000000000000000000000000000\ncalldatasize_realestate: 0x4\ncalldata_realestate_32 + 228: 0x0\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `addDeal(address,address,address,uint256,uint256,uint256,uint256,string,uint256,uint256,bool)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x89b1e9f46d0f1d1a59c7611fc50d6a1498e63159.sol",
        "function": "addDeal(address,address,address,uint256,uint256,uint256,uint256,string,uint256,uint256,bool)",
        "lineno": 338,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 6535,
        "code": "ndex].atCreated",
        "debug": "storage_4: 0xb6e9a0de8be855de76e277ffffffffffffffffffffffffffffffffffffffffff\nstorage_5: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_realestate_32 + 228: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_2: 0x0\ncaller: 0x0\ncalldata_realestate_0: 0x77daeb8000000000000000000000000000000000000000000000000000000000\ncalldatasize_realestate: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `addDeal(address,address,address,uint256,uint256,uint256,uint256,string,uint256,uint256,bool)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x89b1e9f46d0f1d1a59c7611fc50d6a1498e63159.sol",
        "function": "addDeal(address,address,address,uint256,uint256,uint256,uint256,string,uint256,uint256,bool)",
        "lineno": 338,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 7911,
        "code": "hSignSigner",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_calldata_realestate_4: 0x0\nstorage_5: 0x0\ncalldata_realestate_0: 0xa6f7257a00000000000000000000000000000000000000000000000000000000\ncalldatasize_realestate: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0x89b1e9f46d0f1d1a59c7611fc50d6a1498e63159.sol",
        "function": "getSigns(uint256)",
        "lineno": 209,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 8283,
        "code": "r;\n       }",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_calldata_realestate_4: 0x0\nstorage_4: 0x0\ncalldata_realestate_0: 0xa99da6af00000000000000000000000000000000000000000000000000000000\ncalldatasize_realestate: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0x89b1e9f46d0f1d1a59c7611fc50d6a1498e63159.sol",
        "function": "finishDeal(uint256)",
        "lineno": 438,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 11394,
        "code": " \n}\n\ncontract ",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_realestate_32 + 68: 0x1\ncalldata_realestate_32 + 100: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_2: 0x0\ncaller: 0x0\ncalldata_realestate_0: 0x77daeb8000000000000000000000000000000000000000000000000000000000\ncalldatasize_realestate: 0x4\ncalldata_realestate_32 + 228: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0x89b1e9f46d0f1d1a59c7611fc50d6a1498e63159.sol",
        "function": "addDeal(address,address,address,uint256,uint256,uint256,uint256,string,uint256,uint256,bool)",
        "lineno": 36,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}