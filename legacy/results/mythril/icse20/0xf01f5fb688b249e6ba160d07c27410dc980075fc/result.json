{
  "contract": "0xf01f5fb688b249e6ba160d07c27410dc980075fc",
  "tool": "mythril",
  "start": 1563674668.4720829,
  "end": 1563674970.2071545,
  "duration": 301.73507165908813,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 909,
        "code": ") public {\n        uint hash = uint(keccak256(bytes(reason)));\n        if (!ZEROxBTCHaters[hash]){\n            // congratulations we found new hate for 0xBTC!\n            // reward: an 0xBTC hate token \n            ZEROxBTCHaters[hash] = true; \n            balanceOf[msg.sender] += (10 ** 18);\n            emit Transfer(0xe05dEadE05deADe05deAde05dEADe05dEeeEAAAd, msg.sender, 10**18); // kek \n            emit New0xBTCHate(msg.sender, reason);\n            totalSupply += (10 ** 18); // CANNOT OVERFLOW THIS BECAUSE WE ONLY HAVE UINT HASHES (HACKERS BTFO)\n        }\n    }\n\n    function transfer(address _to, uint256",
        "debug": "calldata_ZEROxBTCHate_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_ZEROxBTCHate_0: 0x9c62622d00000000000000000000000000000000000000000000000000000000\ncalldatasize_ZEROxBTCHate: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `IHate0xBTC(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/35/0xf01f5fb688b249e6ba160d07c27410dc980075fc.sol",
        "function": "IHate0xBTC(string)",
        "lineno": 34,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1463,
        "code": "\n        _;\n    }\n    \n  ",
        "debug": "The exception is triggered under the following conditions:\n\ncaller: 0x0\ncalldata_ZEROxBTCHate_0: 0x95ea7b300000000000000000000000000000000000000000000000000000000\ncalldatasize_ZEROxBTCHate: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/35/0xf01f5fb688b249e6ba160d07c27410dc980075fc.sol",
        "function": "approve(address,uint256)",
        "lineno": 27,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 1896,
        "code": "\n        _;\n    }\n    \n  ",
        "debug": "The exception is triggered under the following conditions:\n\ncaller: 0x0\ncalldata_ZEROxBTCHate_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_ZEROxBTCHate: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/35/0xf01f5fb688b249e6ba160d07c27410dc980075fc.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 27,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3117,
        "code": "          emit Transfer(0xe05dEadE0",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffff0ffffe3c0c0000\ncalldata_ZEROxBTCHate_4 + calldata_ZEROxBTCHate_4: 0x80\nstorage_keccac_UDiv(KECCAC_mem_128_+\n32_+\n32*\nConcat(0,\n_______Extract(255,\n_______________5,\n_______________31_+\n_______________calldata_ZEROxBTCHate_4_+_calldata_ZEROxBTCHate_4))),\n_____1): 0x0\ncalldata_ZEROxBTCHate_0: 0x9c62622d00000000000000000000000000000000000000000000000000000000\ncalldatasize_ZEROxBTCHate: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `IHate0xBTC(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/35/0xf01f5fb688b249e6ba160d07c27410dc980075fc.sol",
        "function": "IHate0xBTC(string)",
        "lineno": 41,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 3478,
        "code": "LOW THIS BECAUSE WE ONLY ",
        "debug": "calldata_ZEROxBTCHate_4 + calldata_ZEROxBTCHate_4: 0x30\nstorage_6: 0xfffffffffffffffffffffffffffffffffffffffffffffffffef5400000000000\nstorage_keccac_UDiv(KECCAC_mem_128_+\n32_+\n32*\nConcat(0,\n_______Extract(255,\n_______________5,\n_______________31_+\n_______________calldata_ZEROxBTCHate_4_+_calldata_ZEROxBTCHate_4))),\n_____1): 0x0\ncalldata_ZEROxBTCHate_0: 0x9c62622d00000000000000000000000000000000000000000000000000000000\ncalldatasize_ZEROxBTCHate: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `IHate0xBTC(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/35/0xf01f5fb688b249e6ba160d07c27410dc980075fc.sol",
        "function": "IHate0xBTC(string)",
        "lineno": 43,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 3526,
        "code": "\n        _;\n    }\n    \n  ",
        "debug": "The exception is triggered under the following conditions:\n\ncaller: 0x0\ncalldata_ZEROxBTCHate_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncalldatasize_ZEROxBTCHate: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/35/0xf01f5fb688b249e6ba160d07c27410dc980075fc.sol",
        "function": "transfer(address,uint256)",
        "lineno": 27,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}