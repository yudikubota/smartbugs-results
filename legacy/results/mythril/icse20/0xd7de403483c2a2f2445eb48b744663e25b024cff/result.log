{"error": null, "issues": [{"address": 4267, "code": "itle ", "debug": "calldata_VeetuneCrowdsale_32 + 4: 0x57f25cd000000000000000000000000000000000000000000000000000000000\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_VeetuneCrowdsale_4: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_4: 0x0\ncaller: 0x0\ncalldata_VeetuneCrowdsale_0: 0x6039fbdb00000000000000000000000000000000000000000000000000000000\ncalldatasize_VeetuneCrowdsale: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `addTokens(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/35/0xd7de403483c2a2f2445eb48b744663e25b024cff.sol", "function": "addTokens(address,uint256)", "lineno": 77, "title": "Integer Overflow ", "type": "Warning"}, {"address": 4280, "code": "* @dev Crowdsa", "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_VeetuneCrowdsale_4: 0x1\ncalldata_VeetuneCrowdsale_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_4: 0x0\ncaller: 0x0\ncalldata_VeetuneCrowdsale_0: 0x6039fbdb00000000000000000000000000000000000000000000000000000000\ncalldatasize_VeetuneCrowdsale: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/35/0xd7de403483c2a2f2445eb48b744663e25b024cff.sol", "function": "addTokens(address,uint256)", "lineno": 78, "title": "Exception state", "type": "Informational"}, {"address": 4881, "code": "dev Adds two n", "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_VeetuneCrowdsale_4: 0x10000000000000000000\ncalldata_VeetuneCrowdsale_32 + 36: 0x10000000000000000001\nstorage_4: 0x0\ncaller: 0x0\ncalldata_VeetuneCrowdsale_0: 0xa64b6e5f00000000000000000000000000000000000000000000000000000000\ncalldatasize_VeetuneCrowdsale: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/35/0xd7de403483c2a2f2445eb48b744663e25b024cff.sol", "function": "transferTokens(address,address,uint256)", "lineno": 66, "title": "Exception state", "type": "Informational"}, {"address": 5170, "code": "beneficiary Address receiving the tokens\n ", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/35/0xd7de403483c2a2f2445eb48b744663e25b024cff.sol", "function": "withdrawTokens()", "lineno": 201, "title": "Message call to external contract", "type": "Informational"}], "success": true}