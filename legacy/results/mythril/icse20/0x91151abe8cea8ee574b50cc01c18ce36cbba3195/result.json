{
  "contract": "0x91151abe8cea8ee574b50cc01c18ce36cbba3195",
  "tool": "mythril",
  "start": 1563592745.5123403,
  "end": 1563592766.3426983,
  "duration": 20.830358028411865,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 1233,
        "code": ", msg.value);\n        }\n    }\n\n  ",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x9012701205830248c04dd6b18284e6bd6d401097f6f574602a088c5ebc1faef5\ncallvalue: 0xf32efff37d3edb090a5a26b99f8466a124a0201706068641926ebe8703e02085\nstorage_2: 0xf32efff37d3edb090a5a26b99f8466a124a0201706068641926ebe8703e02085\ncalldata_Vault_0: 0xe500000000000000000000000000000000000000000000000000000000\ncalldatasize_Vault: 0x4\n",
        "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/21/0x91151abe8cea8ee574b50cc01c18ce36cbba3195.sol",
        "function": "fallback",
        "lineno": 67,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1575,
        "code": "o, amount);\n    }\n    \n    functi",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/21/0x91151abe8cea8ee574b50cc01c18ce36cbba3195.sol",
        "function": "emtpyTo(address,address)",
        "lineno": 24,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 1760,
        "code": "turn owner; }\n}",
        "debug": "SOLVER OUTPUT:\ncalldata_Vault_0: 0x41c0e1b500000000000000000000000000000000000000000000000000000000\ncalldatasize_Vault: 0x4\nbalance_at_1461501637330902918203684832716283019655932542975 & 0: 0x0\ncallvalue: 0x0\n",
        "description": "The function `kill()` executes the SUICIDE instruction. The remaining Ether is sent to a stored address.\n\nIt seems that this function can be called without restrictions.",
        "filename": "/unique_chucks/21/0x91151abe8cea8ee574b50cc01c18ce36cbba3195.sol",
        "function": "kill()",
        "lineno": 89,
        "title": "Unchecked SUICIDE",
        "type": "Warning"
      },
      {
        "address": 1972,
        "code": ");\n    }\n    \n    function e",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/21/0x91151abe8cea8ee574b50cc01c18ce36cbba3195.sol",
        "function": "withdrawToken(address)",
        "lineno": 29,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 1972,
        "code": ");\n    }\n    \n    function e",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1575\n",
        "filename": "/unique_chucks/21/0x91151abe8cea8ee574b50cc01c18ce36cbba3195.sol",
        "function": "withdrawToken(address)",
        "lineno": 29,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 2220,
        "code": "  }\n}\n\n// store ether & toke",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/21/0x91151abe8cea8ee574b50cc01c18ce36cbba3195.sol",
        "function": "emtpyTo(address,address)",
        "lineno": 35,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 2220,
        "code": "  }\n}\n\n// store ether & toke",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1575\n",
        "filename": "/unique_chucks/21/0x91151abe8cea8ee574b50cc01c18ce36cbba3195.sol",
        "function": "emtpyTo(address,address)",
        "lineno": 35,
        "title": "Multiple Calls",
        "type": "Information"
      }
    ],
    "success": true
  }
}