{
  "contract": "0x358898a0a781f195a30ecb76056e47456b2ed170",
  "tool": "mythril",
  "start": 1563350805.4946113,
  "end": 1563350914.247975,
  "duration": 108.75336384773254,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 505,
        "code": "ens that\n   * an owner allowed to a spender and execute a call with the sent data.\n   *\n   * approve should be called when allowed[_spender] == 0. To decrement\n   * allowed value is better to use this function to avoid 2 calls (and wait until\n   * the firs",
        "debug": "calldata_Stefan_32 + 36: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_Stefan_0: 0x16ca3b6300000000000000000000000000000000000000000000000000000000\ncalldatasize_Stefan: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `increaseApproval(address,uint256,bytes)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x358898a0a781f195a30ecb76056e47456b2ed170.sol",
        "function": "increaseApproval(address,uint256,bytes)",
        "lineno": 339,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 942,
        "code": "ethods. Transfer tokens to a specified\n     address and execute a call with the sent data on the same transaction\n\n     @param _to address The address which you want to transfer to\n     @param _value uint256 the amout of tokens to ",
        "debug": "calldata_Stefan_32 + 36: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_Stefan_0: 0x5c17f9f400000000000000000000000000000000000000000000000000000000\ncalldatasize_Stefan: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `approve(address,uint256,bytes)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x358898a0a781f195a30ecb76056e47456b2ed170.sol",
        "function": "approve(address,uint256,bytes)",
        "lineno": 278,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1440,
        "code": "basic authorization control\n * functions, this simplifies the implementation of \"user permissions\".\n */\ncontract Ownable {\n  address public owner;\n\n\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n\n  /**\n   * @dev The Ownable ",
        "debug": "calldata_Stefan_32 + 36: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_Stefan_0: 0x7272ad4900000000000000000000000000000000000000000000000000000000\ncalldatasize_Stefan: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `decreaseApproval(address,uint256,bytes)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x358898a0a781f195a30ecb76056e47456b2ed170.sol",
        "function": "decreaseApproval(address,uint256,bytes)",
        "lineno": 364,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 3915,
        "code": " to avoid 2 calls (a",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_contracts/0x358898a0a781f195a30ecb76056e47456b2ed170.sol",
        "function": "increaseApproval(address,uint256,bytes)",
        "lineno": 343,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 5132,
        "code": "  @param _value uint",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_contracts/0x358898a0a781f195a30ecb76056e47456b2ed170.sol",
        "function": "approve(address,uint256,bytes)",
        "lineno": 282,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 6228,
        "code": "dexed newOwner);\n\n\n ",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_contracts/0x358898a0a781f195a30ecb76056e47456b2ed170.sol",
        "function": "decreaseApproval(address,uint256,bytes)",
        "lineno": 371,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 8528,
        "code": "on of",
        "debug": "callvalue: 0xff8dd1180277f6048eff0ba68dfa1b212642db55a4c1650e814d13480aebfbdb\nstorage_1: 0x6fa613b31105f33968dfdfd25de19aceb682c10d6428182e2082d401048be3f8\nstorage_0 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ntimestamp: 0x1e1337f\nstorage_4: 0xff8dd1180277f6048eff0ba68dfa1b212642db55a4c1650e814d13480aebfbdb\nstorage_3: 0xff00\ncalldata_Stefan_0: 0x8d9940b900000000000000000000000000000000000000000000000000000000\ncalldatasize_Stefan: 0x4\n",
        "description": "A possible integer overflow exists in the function `createRetainer()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x358898a0a781f195a30ecb76056e47456b2ed170.sol",
        "function": "createRetainer()",
        "lineno": 102,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 8541,
        "code": "rdToken, with ",
        "debug": "The exception is triggered under the following conditions:\n\ncallvalue: 0x9a25bb3192ba0c740b90baebbe9c8d7e8b7710cefe36fc61eaa2b4bb7ad6ab6f\nstorage_1: 0x9ad75d9480a3bc02456020cba0ac2840908034c2b0a0e2f6e5502d0360c25b4f\nstorage_0 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ntimestamp: 0x1e1337f\nstorage_4: 0x9a25bb3192ba0c740b90baebbe9c8d7e8b7710cefe36fc61eaa2b4bb7ad6ab6f\nstorage_3: 0xff00\ncalldata_Stefan_0: 0x8d9940b900000000000000000000000000000000000000000000000000000000\ncalldatasize_Stefan: 0x4\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0x358898a0a781f195a30ecb76056e47456b2ed170.sol",
        "function": "createRetainer()",
        "lineno": 102,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}