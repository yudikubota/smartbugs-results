{"error": null, "issues": [{"address": 1171, "code": "internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n        uint256 c = a", "debug": "storage_2: 0x800000000000000000000000000000000000000000000000000000000000000\ncalldata_XKnockoutRegular2_0: 0xa50fac0100000000000000000000000000000000000000000000000000000000\ncalldatasize_XKnockoutRegular2: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `queueVIP()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/23/0x13565d214f1e5b32e2ada98607cbfdf30cd5357a.sol", "function": "queueVIP()", "lineno": 296, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1322, "code": "      assert(c / a == b);\n        return c;\n    }\n\n    function div(uint256 a, uint256 b) internal pure returns ", "debug": "storage_1: 0x800000000000000000000000000000000000000000000000000000000000000\ncalldata_XKnockoutRegular2_0: 0xd388954000000000000000000000000000000000000000000000000000000000\ncalldatasize_XKnockoutRegular2: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `queueREG()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/23/0x13565d214f1e5b32e2ada98607cbfdf30cd5357a.sol", "function": "queueREG()", "lineno": 301, "title": "Integer Overflow ", "type": "Warning"}, {"address": 5966, "code": "ddress dev;\n  uint256 base ", "debug": "The exception is triggered under the following conditions:\n\ncalldata_XKnockoutRegular2_4: 0x0\nstorage_1: 0x0\ncalldata_XKnockoutRegular2_0: 0x404cbffb00000000000000000000000000000000000000000000000000000000\ncalldatasize_XKnockoutRegular2: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/23/0x13565d214f1e5b32e2ada98607cbfdf30cd5357a.sol", "function": "_function_0x404cbffb", "lineno": 63, "title": "Exception state", "type": "Informational"}, {"address": 6202, "code": "}\n\nlibrary SafeMath {\n ", "debug": "", "description": "In the function `fallback` the following predictable state variables are used to determine Ether recipient:\n- block.timestamp\n", "filename": "/unique_chucks/23/0x13565d214f1e5b32e2ada98607cbfdf30cd5357a.sol", "function": "fallback", "lineno": 293, "title": "Dependence on predictable environment variable", "type": "Warning"}, {"address": 6202, "code": "}\n\nlibrary SafeMath {\n ", "debug": "", "description": "A possible transaction order independence vulnerability exists in function rewardDev(). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/23/0x13565d214f1e5b32e2ada98607cbfdf30cd5357a.sol", "function": "rewardDev()", "lineno": 293, "title": "Transaction order dependence", "type": "Warning"}, {"address": 6249, "code": "000000000000000; //base ", "debug": "The exception is triggered under the following conditions:\n\ncalldata_XKnockoutRegular2_4: 0x0\nstorage_2: 0x0\ncalldata_XKnockoutRegular2_0: 0x9dc3454c00000000000000000000000000000000000000000000000000000000\ncalldatasize_XKnockoutRegular2: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/23/0x13565d214f1e5b32e2ada98607cbfdf30cd5357a.sol", "function": "_function_0x9dc3454c", "lineno": 64, "title": "Exception state", "type": "Informational"}, {"address": 6341, "code": "       uint256", "debug": "storage_2: 0x8421003f084001f4210815cf88407c00000000000000037c1d000e8d178001f\ncalldata_XKnockoutRegular2_0: 0xa50fac0100000000000000000000000000000000000000000000000000000000\ncalldatasize_XKnockoutRegular2: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `queueVIP()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/23/0x13565d214f1e5b32e2ada98607cbfdf30cd5357a.sol", "function": "queueVIP()", "lineno": 300, "title": "Integer Overflow ", "type": "Warning"}, {"address": 6343, "code": "       uint256", "debug": "storage_2: 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffb\ncalldata_XKnockoutRegular2_0: 0xa50fac0100000000000000000000000000000000000000000000000000000000\ncalldatasize_XKnockoutRegular2: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `queueVIP()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/23/0x13565d214f1e5b32e2ada98607cbfdf30cd5357a.sol", "function": "queueVIP()", "lineno": 300, "title": "Integer Overflow ", "type": "Warning"}, {"address": 6489, "code": " internal pure re", "debug": "storage_1: 0x8421003f084001f4210815cf88407c00000000000000037c1d000e8d178001f\ncalldata_XKnockoutRegular2_0: 0xd388954000000000000000000000000000000000000000000000000000000000\ncalldatasize_XKnockoutRegular2: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `queueREG()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/23/0x13565d214f1e5b32e2ada98607cbfdf30cd5357a.sol", "function": "queueREG()", "lineno": 305, "title": "Integer Overflow ", "type": "Warning"}, {"address": 6491, "code": " internal pure re", "debug": "storage_1: 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffb\ncalldata_XKnockoutRegular2_0: 0xd388954000000000000000000000000000000000000000000000000000000000\ncalldatasize_XKnockoutRegular2: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `queueREG()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/23/0x13565d214f1e5b32e2ada98607cbfdf30cd5357a.sol", "function": "queueREG()", "lineno": 305, "title": "Integer Overflow ", "type": "Warning"}, {"address": 6702, "code": " 9999;\n      ", "debug": "The exception is triggered under the following conditions:\n\nstorage_1: 0x1\nstorage_6: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_80084422859880547211683076133703299733277748156566366325829078699459944778998 +\n115792089237316195423570985008687907853269984665640564039457584007913129639935 +\nstorage_1: 0x0\nstorage_9: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ntimestamp: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_5: 0x0\ncalldatasize_XKnockoutRegular2: 0x3\nstorage_2: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/23/0x13565d214f1e5b32e2ada98607cbfdf30cd5357a.sol", "function": "fallback", "lineno": 215, "title": "Exception state", "type": "Informational"}, {"address": 6789, "code": "ist", "debug": "storage_1: 0x1\nstorage_6: 0x0\nstorage_80084422859880547211683076133703299733277748156566366325829078699459944778998 +\n115792089237316195423570985008687907853269984665640564039457584007913129639935 +\nstorage_1: 0x0\nstorage_9: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ntimestamp: 0x0\nstorage_5: 0x0\ncalldatasize_XKnockoutRegular2: 0x3\nstorage_2: 0x0\n", "description": "A possible integer underflow exists in the function `fallback`.\nThe subtraction may result in a value < 0.", "filename": "/unique_chucks/23/0x13565d214f1e5b32e2ada98607cbfdf30cd5357a.sol", "function": "fallback", "lineno": 215, "title": "Integer Underflow", "type": "Warning"}, {"address": 6911, "code": "t's public", "debug": "The exception is triggered under the following conditions:\n\nstorage_2: 0x1\nstorage_6: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_29102676481673041902632991033461445430619272659676223336789171408008386403022 +\n115792089237316195423570985008687907853269984665640564039457584007913129639935 +\nstorage_2: 0x0\ntimestamp: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_5: 0x0\ncalldata_XKnockoutRegular2_0: 0x44dce30600000000000000000000000000000000000000000000000000000000\ncalldatasize_XKnockoutRegular2: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/23/0x13565d214f1e5b32e2ada98607cbfdf30cd5357a.sol", "function": "checkRemaining()", "lineno": 227, "title": "Exception state", "type": "Informational"}, {"address": 6998, "code": "the", "debug": "storage_2: 0x1\nstorage_6: 0x0\nstorage_29102676481673041902632991033461445430619272659676223336789171408008386403022 +\n115792089237316195423570985008687907853269984665640564039457584007913129639935 +\nstorage_2: 0x0\ntimestamp: 0x0\nstorage_5: 0x0\ncalldata_XKnockoutRegular2_0: 0x44dce30600000000000000000000000000000000000000000000000000000000\ncalldatasize_XKnockoutRegular2: 0x4\ncallvalue: 0x0\n", "description": "A possible integer underflow exists in the function `checkRemaining()`.\nThe subtraction may result in a value < 0.", "filename": "/unique_chucks/23/0x13565d214f1e5b32e2ada98607cbfdf30cd5357a.sol", "function": "checkRemaining()", "lineno": 226, "title": "Integer Underflow", "type": "Warning"}, {"address": 7023, "code": "HIS C", "debug": "storage_6: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_5: 0x57f25cd000000000000000000000000000000000000000000000000000000000\ncalldata_XKnockoutRegular2_0: 0x44dce30600000000000000000000000000000000000000000000000000000000\ncalldatasize_XKnockoutRegular2: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `checkRemaining()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/23/0x13565d214f1e5b32e2ada98607cbfdf30cd5357a.sol", "function": "checkRemaining()", "lineno": 328, "title": "Integer Overflow ", "type": "Warning"}, {"address": 7036, "code": "L DIE WITH CAN", "debug": "The exception is triggered under the following conditions:\n\nstorage_6: 0x1\nstorage_5: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_XKnockoutRegular2_0: 0x12fc404a00000000000000000000000000000000000000000000000000000000\ncalldatasize_XKnockoutRegular2: 0x4\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/23/0x13565d214f1e5b32e2ada98607cbfdf30cd5357a.sol", "function": "fallback", "lineno": 328, "title": "Exception state", "type": "Informational"}, {"address": 7060, "code": "pa methods\n   ", "debug": "The exception is triggered under the following conditions:\n\nstorage_10: 0x0\nstorage_6: 0xfffffffffffffffffbffffffffffffffffffffffff7ffffffffffdffffffffff\nstorage_11: 0x1\ntimestamp: 0xfffffffffffffffffbffffffffffffffffffffffff7ffffffffffdfffffffffe\nstorage_5: 0x0\ncalldata_XKnockoutRegular2_0: 0x44dce30600000000000000000000000000000000000000000000000000000000\ncalldatasize_XKnockoutRegular2: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/23/0x13565d214f1e5b32e2ada98607cbfdf30cd5357a.sol", "function": "checkRemaining()", "lineno": 325, "title": "Exception state", "type": "Informational"}], "success": true}