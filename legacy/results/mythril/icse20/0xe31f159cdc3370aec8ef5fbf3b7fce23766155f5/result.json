{
  "contract": "0xe31f159cdc3370aec8ef5fbf3b7fce23766155f5",
  "tool": "mythril",
  "start": 1563608726.9041998,
  "end": 1563608731.7103448,
  "duration": 4.806144952774048,
  "analysis": {
    "success": false,
    "error": "Solc experienced a fatal error (code 1).\n\n/unique_chucks/22/0xe31f159cdc3370aec8ef5fbf3b7fce23766155f5.sol:150:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use \"constructor(...) { ... }\" instead.\n    function BaseToken( uint256 _initialSupply, uint8 _decimalUnits, string _name, string _symbol, address _owner ) {\r\n    ^ (Relevant source part starts here and spans across multiple lines).\n/unique_chucks/22/0xe31f159cdc3370aec8ef5fbf3b7fce23766155f5.sol:205:25: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n        if (_to == 0x0) throw; // Prevent transfer to 0x0 address. Use burn() instead\r\n                        ^---^\n/unique_chucks/22/0xe31f159cdc3370aec8ef5fbf3b7fce23766155f5.sol:206:45: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n        if (balanceOf[msg.sender] < _value) throw; // Check if the sender has enough\r\n                                            ^---^\n/unique_chucks/22/0xe31f159cdc3370aec8ef5fbf3b7fce23766155f5.sol:207:55: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n        if (balanceOf[_to] + _value < balanceOf[_to]) throw; // Check for overflows\r\n                                                      ^---^\n/unique_chucks/22/0xe31f159cdc3370aec8ef5fbf3b7fce23766155f5.sol:247:25: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n        if (_to == 0x0) throw; // Prevent transfer to 0x0 address. Use burn() instead\r\n                        ^---^\n/unique_chucks/22/0xe31f159cdc3370aec8ef5fbf3b7fce23766155f5.sol:248:40: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n        if (balanceOf[_from] < _value) throw; // Check if the sender has enough\r\n                                       ^---^\n/unique_chucks/22/0xe31f159cdc3370aec8ef5fbf3b7fce23766155f5.sol:249:55: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n        if (balanceOf[_to] + _value < balanceOf[_to]) throw; // Check for overflows\r\n                                                      ^---^\n/unique_chucks/22/0xe31f159cdc3370aec8ef5fbf3b7fce23766155f5.sol:250:52: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n        if (_value > allowance[_from][msg.sender]) throw; // Check allowance\r\n                                                   ^---^\n/unique_chucks/22/0xe31f159cdc3370aec8ef5fbf3b7fce23766155f5.sol:365:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use \"constructor(...) { ... }\" instead.\n    function TheStudioToken() {\r\n    ^ (Relevant source part starts here and spans across multiple lines).\n/unique_chucks/22/0xe31f159cdc3370aec8ef5fbf3b7fce23766155f5.sol:466:25: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n        if (_to == 0x0) throw; // Prevent transfer to 0x0 address. Use burn() instead\r\n                        ^---^\n/unique_chucks/22/0xe31f159cdc3370aec8ef5fbf3b7fce23766155f5.sol:467:45: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n        if (balanceOf[msg.sender] < _value) throw; // Check if the sender has enough\r\n                                            ^---^\n/unique_chucks/22/0xe31f159cdc3370aec8ef5fbf3b7fce23766155f5.sol:468:55: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n        if (balanceOf[_to] + _value < balanceOf[_to]) throw; // Check for overflows\r\n                                                      ^---^\n/unique_chucks/22/0xe31f159cdc3370aec8ef5fbf3b7fce23766155f5.sol:469:45: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n        if ( accountFreeze[ msg.sender ]  ) throw;\r\n                                            ^---^\n/unique_chucks/22/0xe31f159cdc3370aec8ef5fbf3b7fce23766155f5.sol:481:25: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n        if (_to == 0x0) throw; // Prevent transfer to 0x0 address. Use burn() instead\r\n                        ^---^\n/unique_chucks/22/0xe31f159cdc3370aec8ef5fbf3b7fce23766155f5.sol:482:40: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n        if (balanceOf[_from] < _value) throw; // Check if the sender has enough\r\n                                       ^---^\n/unique_chucks/22/0xe31f159cdc3370aec8ef5fbf3b7fce23766155f5.sol:483:55: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n        if (balanceOf[_to] + _value < balanceOf[_to]) throw; // Check for overflows\r\n                                                      ^---^\n/unique_chucks/22/0xe31f159cdc3370aec8ef5fbf3b7fce23766155f5.sol:484:52: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n        if (_value > allowance[_from][msg.sender]) throw; // Check allowance\r\n                                                   ^---^\n/unique_chucks/22/0xe31f159cdc3370aec8ef5fbf3b7fce23766155f5.sol:485:40: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n        if ( accountFreeze[ _from ]  ) throw;\r\n                                       ^---^\n/unique_chucks/22/0xe31f159cdc3370aec8ef5fbf3b7fce23766155f5.sol:532:45: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n        if (balanceOf[msg.sender] < _value) throw; // Check if the sender has enough\r\n                                            ^---^\n/unique_chucks/22/0xe31f159cdc3370aec8ef5fbf3b7fce23766155f5.sol:533:64: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n        if ( (totalSupply - _value) <  ( initialSupply / 2 ) ) throw;\r\n                                                               ^---^\n/unique_chucks/22/0xe31f159cdc3370aec8ef5fbf3b7fce23766155f5.sol:541:40: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n        if (balanceOf[_from] < _value) throw; // Check if the sender has enough\r\n                                       ^---^\n/unique_chucks/22/0xe31f159cdc3370aec8ef5fbf3b7fce23766155f5.sol:542:52: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n        if (_value > allowance[_from][msg.sender]) throw; // Check allowance\r\n                                                   ^---^\n/unique_chucks/22/0xe31f159cdc3370aec8ef5fbf3b7fce23766155f5.sol:543:62: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n       if ( (totalSupply - _value) <  ( initialSupply / 2 )) throw;\r\n                                                             ^---^\n/unique_chucks/22/0xe31f159cdc3370aec8ef5fbf3b7fce23766155f5.sol:101:44: Warning: This declaration shadows an existing declaration.\n   function totalSupply() constant returns(uint totalSupply);\r\n                                           ^--------------^\n/unique_chucks/22/0xe31f159cdc3370aec8ef5fbf3b7fce23766155f5.sol:101:4: The shadowed declaration is here:\n   function totalSupply() constant returns(uint totalSupply);\r\n   ^--------------------------------------------------------^\n\n/unique_chucks/22/0xe31f159cdc3370aec8ef5fbf3b7fce23766155f5.sol:85:9: Warning: Invoking events without \"emit\" prefix is deprecated.\n        ProjectCall ( _address , value  );\r\n        ^-------------------------------^\n/unique_chucks/22/0xe31f159cdc3370aec8ef5fbf3b7fce23766155f5.sol:212:9: Warning: Invoking events without \"emit\" prefix is deprecated.\n        Transfer(msg.sender, _to, _value); // Notify anyone listening that this transfer took place\r\n        ^-------------------------------^\n/unique_chucks/22/0xe31f159cdc3370aec8ef5fbf3b7fce23766155f5.sol:221:9: Warning: Invoking events without \"emit\" prefix is deprecated.\n        Approval( msg.sender ,_spender, _value);\r\n        ^-------------------------------------^\n/unique_chucks/22/0xe31f159cdc3370aec8ef5fbf3b7fce23766155f5.sol:256:9: Warning: Invoking events without \"emit\" prefix is deprecated.\n        Transfer(_from, _to, _value);\r\n        ^--------------------------^\n/unique_chucks/22/0xe31f159cdc3370aec8ef5fbf3b7fce23766155f5.sol:322:5: Error: Event with same name and arguments defined twice.\n    event Approval(address indexed owner, address indexed spender, uint value);\r\n    ^-------------------------------------------------------------------------^\n/unique_chucks/22/0xe31f159cdc3370aec8ef5fbf3b7fce23766155f5.sol:355:5: Other declaration is here:\n    event Approval(address indexed owner, address indexed spender, uint value);\r\n    ^-------------------------------------------------------------------------^\n\n/unique_chucks/22/0xe31f159cdc3370aec8ef5fbf3b7fce23766155f5.sol:321:5: Error: Event with same name and arguments defined twice.\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    ^----------------------------------------------------------------------^\n/unique_chucks/22/0xe31f159cdc3370aec8ef5fbf3b7fce23766155f5.sol:354:5: Other declaration is here:\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    ^----------------------------------------------------------------------^\n\n/unique_chucks/22/0xe31f159cdc3370aec8ef5fbf3b7fce23766155f5.sol:451:9: Warning: Invoking events without \"emit\" prefix is deprecated.\n        newMediaTokenCreated ( _name , _mediaToken , _symbol );\r\n        ^----------------------------------------------------^\n/unique_chucks/22/0xe31f159cdc3370aec8ef5fbf3b7fce23766155f5.sol:473:9: Warning: Invoking events without \"emit\" prefix is deprecated.\n        Transfer(msg.sender, _to, _value); // Notify anyone listening that this transfer took place\r\n        ^-------------------------------^\n/unique_chucks/22/0xe31f159cdc3370aec8ef5fbf3b7fce23766155f5.sol:490:9: Warning: Invoking events without \"emit\" prefix is deprecated.\n        Transfer(_from, _to, _value);\r\n        ^--------------------------^\n/unique_chucks/22/0xe31f159cdc3370aec8ef5fbf3b7fce23766155f5.sol:497:9: Warning: Invoking events without \"emit\" prefix is deprecated.\n        Approval( msg.sender ,_spender, _value);\r\n        ^-------------------------------------^\n/unique_chucks/22/0xe31f159cdc3370aec8ef5fbf3b7fce23766155f5.sol:536:9: Warning: Invoking events without \"emit\" prefix is deprecated.\n        Burn(msg.sender, _value);\r\n        ^----------------------^\n/unique_chucks/22/0xe31f159cdc3370aec8ef5fbf3b7fce23766155f5.sol:546:9: Warning: Invoking events without \"emit\" prefix is deprecated.\n        Burn(_from, _value);\r\n        ^-----------------^\n/unique_chucks/22/0xe31f159cdc3370aec8ef5fbf3b7fce23766155f5.sol:560:9: Warning: Invoking events without \"emit\" prefix is deprecated.\n        FrozenFunds ( _account , true );\r\n        ^-----------------------------^\n/unique_chucks/22/0xe31f159cdc3370aec8ef5fbf3b7fce23766155f5.sol:568:10: Warning: Invoking events without \"emit\" prefix is deprecated.\n         FrozenFunds ( _account , false );\r\n         ^------------------------------^\n",
    "issues": []
  }
}