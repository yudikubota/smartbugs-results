{
  "contract": "0xabc1280a0187a2020cc675437aed400185f86db6",
  "tool": "mythril",
  "start": 1563272800.6295998,
  "end": 1563273204.8708608,
  "duration": 404.2412610054016,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 5660,
        "code": " add(uint256 a",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_sacToken_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_3: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_sacToken_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_2: 0x0\ncaller: 0x0\ncalldata_sacToken_0: 0x8f8d322e00000000000000000000000000000000000000000000000000000000\ncalldatasize_sacToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0xabc1280a0187a2020cc675437aed400185f86db6.sol",
        "function": "melt(address,uint256)",
        "lineno": 75,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 5677,
        "code": "ken \u662f",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_sacToken_4: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncalldata_sacToken_32 + 4: 0x57f25cd000000000000000000000000000000000000000000000000000000000\nstorage_2: 0x0\ncaller: 0x0\ncalldata_sacToken_0: 0x40c10f1900000000000000000000000000000000000000000000000000000000\ncalldatasize_sacToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `mint(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0xabc1280a0187a2020cc675437aed400185f86db6.sol",
        "function": "mint(address,uint256)",
        "lineno": 84,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 5690,
        "code": "C20\u5408\u7ea6\n//------",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_sacToken_4: 0x1\ncalldata_sacToken_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_2: 0x0\ncaller: 0x0\ncalldata_sacToken_0: 0x40c10f1900000000000000000000000000000000000000000000000000000000\ncalldatasize_sacToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0xabc1280a0187a2020cc675437aed400185f86db6.sol",
        "function": "mint(address,uint256)",
        "lineno": 84,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}