{
  "contract": "0xbd1e1ea13de6f320e89f33a7076b29d1a00506d8",
  "tool": "mythril",
  "start": 1563757253.577691,
  "end": 1563757820.2678733,
  "duration": 566.6901822090149,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 436,
        "code": "s(0x0));\n        assert(partnersInfo[msg.sender].create==false);\n        assert(str_length(promo)>0 && str_length(promo)<=6);\n\n        partnersPromo[promo] = msg.sender;\n        partnersInfo[msg.sender].balance = 0;\n        partnersInfo[msg.sender].promo = promo;\n        partnersInfo[msg.sender].create = true;\n    }\n\n    function checkPromo(string promo) constant returns(bool){\n        return partnersPromo[pr",
        "debug": "calldata_BMICOAffiliateProgramm_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_BMICOAffiliateProgramm_0: 0x6faebbe00000000000000000000000000000000000000000000000000000000\ncalldatasize_BMICOAffiliateProgramm: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `setPromoToPartner(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/42/0xbd1e1ea13de6f320e89f33a7076b29d1a00506d8.sol",
        "function": "setPromoToPartner(string)",
        "lineno": 88,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 541,
        "code": "dress(0x0);\n    }\n\n    function checkPartner(address partner_address) constant returns(bool isPartner, string promo)",
        "debug": "calldata_BMICOAffiliateProgramm_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_BMICOAffiliateProgramm_0: 0x17d9b4ab00000000000000000000000000000000000000000000000000000000\ncalldatasize_BMICOAffiliateProgramm: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `checkPromo(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/42/0xbd1e1ea13de6f320e89f33a7076b29d1a00506d8.sol",
        "function": "checkPromo(string)",
        "lineno": 99,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2908,
        "code": "(itemHistory(now, referral, a",
        "debug": "calldata_BMICOAffiliateProgramm_32 + 36: 0x57f25cd000000000000000000000000000000000000000000000000000000000\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_BMICOAffiliateProgramm_4: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncalldata_BMICOAffiliateProgramm_4: 0x0\nstorage_KECCAC_mem_128): 0xffffffffffffffffffffffffffffffffffffffff00\nstorage_8: 0x0\nstorage_7: 0xffffffffffffffffffffffffffffffffffffffff00\ncaller: 0x0\ncalldata_BMICOAffiliateProgramm_0: 0x64d61800000000000000000000000000000000000000000000000000000000\ncalldatasize_BMICOAffiliateProgramm: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/42/0xbd1e1ea13de6f320e89f33a7076b29d1a00506d8.sol",
        "function": "fallback",
        "lineno": 179,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2924,
        "code": "      p_partner = (amount*uint25",
        "debug": "calldata_BMICOAffiliateProgramm_32 + 36: 0x57f25cd000000000000000000000000000000000000000000000000000000000\nstorage_5: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncalldata_BMICOAffiliateProgramm_4: 0x0\nstorage_KECCAC_mem_128): 0xffffffffffffffffffffffffffffffffffffffff00\nstorage_8: 0x0\nstorage_7: 0xffffffffffffffffffffffffffffffffffffffff00\ncaller: 0x0\ncalldata_BMICOAffiliateProgramm_0: 0x64d61800000000000000000000000000000000000000000000000000000000\ncalldatasize_BMICOAffiliateProgramm: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/42/0xbd1e1ea13de6f320e89f33a7076b29d1a00506d8.sol",
        "function": "fallback",
        "lineno": 180,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 3004,
        "code": "nt(amount)))/10000;\n                p_r",
        "debug": "calldata_BMICOAffiliateProgramm_32 + 36: 0x57f25cd000000000000000000000000000000000000000000000000000000000\nstorage_0 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\nUDiv(storage_KECCAC_mem_128),_256): 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncalldata_BMICOAffiliateProgramm_4: 0x0\nstorage_KECCAC_mem_128): 0xffffffffffffffffffffffffffffffffffffffff00\nstorage_8: 0x0\nstorage_7: 0xffffffffffffffffffffffffffffffffffffffff00\ncaller: 0x0\ncalldata_BMICOAffiliateProgramm_0: 0x64d61800000000000000000000000000000000000000000000000000000000\ncalldatasize_BMICOAffiliateProgramm: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/42/0xbd1e1ea13de6f320e89f33a7076b29d1a00506d8.sol",
        "function": "fallback",
        "lineno": 180,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 3131,
        "code": ";\n\n\ncontract BMICO",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\nUDiv(storage_KECCAC_mem_128),_256): 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_BMICOAffiliateProgramm_4: 0x0\nstorage_KECCAC_mem_128): 0xffffffffffffffffffffffffffffffffffffffff00\nstorage_8: 0x0\nstorage_7: 0xffffffffffffffffffffffffffffffffffffffff00\ncaller: 0x0\ncalldata_BMICOAffiliateProgramm_0: 0x64d61800000000000000000000000000000000000000000000000000000000\ncalldatasize_BMICOAffiliateProgramm: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/42/0xbd1e1ea13de6f320e89f33a7076b29d1a00506d8.sol",
        "function": "fallback",
        "lineno": 1,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 3517,
        "code": "ate==false);\n        assert(str_length(pro",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_BMICOAffiliateProgramm_4 + calldata_BMICOAffiliateProgramm_4: 0xe0\nstorage_KECCAC_mem_128 +\n32 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_BMICOAffiliateProgramm_4 + calldata_BMICOAffiliateProgramm_4))): 0xffffffffffffffffffffffffffffffffffffffff00\ncalldata_BMICOAffiliateProgramm_0: 0x6faebbe00000000000000000000000000000000000000000000000000000000\ncalldatasize_BMICOAffiliateProgramm: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/42/0xbd1e1ea13de6f320e89f33a7076b29d1a00506d8.sol",
        "function": "setPromoToPartner(string)",
        "lineno": 89,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3612,
        "code": "r_length(promo)<=6);\n\n        partnersPromo[pr",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_BMICOAffiliateProgramm_4 + calldata_BMICOAffiliateProgramm_4: 0xe0\nstorage_2 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xff00\nstorage_KECCAC_mem_128 +\n32 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_BMICOAffiliateProgramm_4 + calldata_BMICOAffiliateProgramm_4))): 0x0\ncalldata_BMICOAffiliateProgramm_0: 0x6faebbe00000000000000000000000000000000000000000000000000000000\ncalldatasize_BMICOAffiliateProgramm: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/42/0xbd1e1ea13de6f320e89f33a7076b29d1a00506d8.sol",
        "function": "setPromoToPartner(string)",
        "lineno": 90,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 4774,
        "code": ";\n    }\n\n    function str_l",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_6: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_BMICOAffiliateProgramm_0: 0x4e40616700000000000000000000000000000000000000000000000000000000\ncalldatasize_BMICOAffiliateProgramm: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/42/0xbd1e1ea13de6f320e89f33a7076b29d1a00506d8.sol",
        "function": "setContractICO(address)",
        "lineno": 40,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 4864,
        "code": "       assert(new_address!=addres",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_8: 0xffffffffffffffffffffffffffffffffffffffff00\nstorage_6: 0x0\ncaller: 0x0\ncalldata_BMICOAffiliateProgramm_0: 0x4e40616700000000000000000000000000000000000000000000000000000000\ncalldatasize_BMICOAffiliateProgramm: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/42/0xbd1e1ea13de6f320e89f33a7076b29d1a00506d8.sol",
        "function": "setContractICO(address)",
        "lineno": 82,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 4921,
        "code": "        contractICO = new_address",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_BMICOAffiliateProgramm_4: 0x0\nstorage_8: 0x0\nstorage_6: 0x0\ncaller: 0x0\ncalldata_BMICOAffiliateProgramm_0: 0x4e40616700000000000000000000000000000000000000000000000000000000\ncalldatasize_BMICOAffiliateProgramm: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/42/0xbd1e1ea13de6f320e89f33a7076b29d1a00506d8.sol",
        "function": "setContractICO(address)",
        "lineno": 84,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 5140,
        "code": ";\n    }\n\n    function str_l",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_6: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_BMICOAffiliateProgramm_0: 0x6129f25f00000000000000000000000000000000000000000000000000000000\ncalldatasize_BMICOAffiliateProgramm: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/42/0xbd1e1ea13de6f320e89f33a7076b29d1a00506d8.sol",
        "function": "setReferralPercent(uint256)",
        "lineno": 40,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 5262,
        "code": "w address[](0));\n       ",
        "debug": "",
        "description": "The return value of an external call is not checked. Note that execution continue even if the called contract throws.",
        "filename": "/unique_chucks/42/0xbd1e1ea13de6f320e89f33a7076b29d1a00506d8.sol",
        "function": "_function_0x6b8ce30e",
        "lineno": 165,
        "title": "Unchecked CALL return value",
        "type": "Informational"
      },
      {
        "address": 5804,
        "code": ";\n    }\n\n    function str_l",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_6: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_BMICOAffiliateProgramm_0: 0xa6f9dae100000000000000000000000000000000000000000000000000000000\ncalldatasize_BMICOAffiliateProgramm: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/42/0xbd1e1ea13de6f320e89f33a7076b29d1a00506d8.sol",
        "function": "changeOwner(address)",
        "lineno": 40,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 5861,
        "code": "ddress(this));\n\n        owner =",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_BMICOAffiliateProgramm_4: 0x0\nstorage_6: 0x0\ncaller: 0x0\ncalldata_BMICOAffiliateProgramm_0: 0xa6f9dae100000000000000000000000000000000000000000000000000000000\ncalldatasize_BMICOAffiliateProgramm: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/42/0xbd1e1ea13de6f320e89f33a7076b29d1a00506d8.sol",
        "function": "changeOwner(address)",
        "lineno": 62,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 6074,
        "code": ";\n    }\n\n    function str_l",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_6: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_BMICOAffiliateProgramm_0: 0xad6e155e00000000000000000000000000000000000000000000000000000000\ncalldatasize_BMICOAffiliateProgramm: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/42/0xbd1e1ea13de6f320e89f33a7076b29d1a00506d8.sol",
        "function": "setContractPreICO(address)",
        "lineno": 40,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 6164,
        "code": "ss(0x0));\n        assert(new_address",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_7: 0xffffffffffffffffffffffffffffffffffffffff00\nstorage_6: 0x0\ncaller: 0x0\ncalldata_BMICOAffiliateProgramm_0: 0xad6e155e00000000000000000000000000000000000000000000000000000000\ncalldatasize_BMICOAffiliateProgramm: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/42/0xbd1e1ea13de6f320e89f33a7076b29d1a00506d8.sol",
        "function": "setContractPreICO(address)",
        "lineno": 73,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 6221,
        "code": "his));\n\n        contractPreICO = ",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_BMICOAffiliateProgramm_4: 0x0\nstorage_7: 0x0\nstorage_6: 0x0\ncaller: 0x0\ncalldata_BMICOAffiliateProgramm_0: 0xad6e155e00000000000000000000000000000000000000000000000000000000\ncalldatasize_BMICOAffiliateProgramm: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/42/0xbd1e1ea13de6f320e89f33a7076b29d1a00506d8.sol",
        "function": "setContractPreICO(address)",
        "lineno": 74,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 6459,
        "code": "ytes32 r, bytes32 s) con",
        "debug": "",
        "description": "The return value of an external call is not checked. Note that execution continue even if the called contract throws.",
        "filename": "/unique_chucks/42/0xbd1e1ea13de6f320e89f33a7076b29d1a00506d8.sol",
        "function": "partnerInfo_for_Partner(bytes32,uint8,bytes32,bytes32)",
        "lineno": 160,
        "title": "Unchecked CALL return value",
        "type": "Informational"
      },
      {
        "address": 6837,
        "code": "= 0) {\n                b",
        "debug": "calldata_BMICOAffiliateProgramm_4 + calldata_BMICOAffiliateProgramm_4: 0x60\ncalldata_BMICOAffiliateProgramm_cpy: 0x100000000000000000000000000000000000000000000000000000000000000\nmem_128 +\n32 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_BMICOAffiliateProgramm_4 + calldata_BMICOAffiliateProgramm_4)): 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_2 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\nstorage_KECCAC_mem_128 +\n32 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_BMICOAffiliateProgramm_4 + calldata_BMICOAffiliateProgramm_4))): 0x0\ncalldata_BMICOAffiliateProgramm_0: 0x6faebbe00000000000000000000000000000000000000000000000000000000\ncalldatasize_BMICOAffiliateProgramm: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `setPromoToPartner(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/42/0xbd1e1ea13de6f320e89f33a7076b29d1a00506d8.sol",
        "function": "setPromoToPartner(string)",
        "lineno": 52,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 6934,
        "code": "ount++;\n            }\n",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_BMICOAffiliateProgramm_4 + calldata_BMICOAffiliateProgramm_4: 0x80\ncalldata_BMICOAffiliateProgramm_cpy: 0xff00000000000000000000000000000000000000000000000000000000000000\nstorage_2 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\nstorage_KECCAC_mem_128 +\n32 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_BMICOAffiliateProgramm_4 + calldata_BMICOAffiliateProgramm_4))): 0x0\ncalldata_BMICOAffiliateProgramm_0: 0x6faebbe00000000000000000000000000000000000000000000000000000000\ncalldatasize_BMICOAffiliateProgramm: 0x4\nmem_128 +\n32 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_BMICOAffiliateProgramm_4 + calldata_BMICOAffiliateProgramm_4)): 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/42/0xbd1e1ea13de6f320e89f33a7076b29d1a00506d8.sol",
        "function": "setPromoToPartner(string)",
        "lineno": 54,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}