{
  "contract": "0x3f5fa71ea48ae374faae502afa2e27715484c3b7",
  "tool": "mythril",
  "start": 1563477737.2874467,
  "end": 1563477808.9691837,
  "duration": 71.68173694610596,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 2444,
        "code": ").mul(msg.",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xefd5cdbe20000000000000000040200000000000000000000000000000000000\ntimestamp: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffbe80\ncallvalue: 0x0\nstorage_11: 0x0\ncalldatasize_ethairdrop: 0x3\n",
        "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/1/0x3f5fa71ea48ae374faae502afa2e27715484c3b7.sol",
        "function": "fallback",
        "lineno": 130,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 3555,
        "code": "ol success) {\n        require(_to !",
        "debug": "The exception is triggered under the following conditions:\n\ncalldatasize_ethairdrop: 0x60\ncalldata_ethairdrop_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/1/0x3f5fa71ea48ae374faae502afa2e27715484c3b7.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 158,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 5590,
        "code": "ol success) {\n        require(_to !",
        "debug": "The exception is triggered under the following conditions:\n\ncalldatasize_ethairdrop: 0x4\ncalldata_ethairdrop_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/1/0x3f5fa71ea48ae374faae502afa2e27715484c3b7.sol",
        "function": "transfer(address,uint256)",
        "lineno": 158,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 6324,
        "code": "  \n    function ",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/1/0x3f5fa71ea48ae374faae502afa2e27715484c3b7.sol",
        "function": "getTokenBalance(address,address)",
        "lineno": 201,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 7390,
        "code": ">= a)",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_11: 0x0\ncalldata_ethairdrop_0: 0xaa6ca80800000000000000000000000000000000000000000000000000000000\ncalldatasize_ethairdrop: 0x4\n",
        "description": "A possible integer overflow exists in the function `getTokens()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/1/0x3f5fa71ea48ae374faae502afa2e27715484c3b7.sol",
        "function": "getTokens()",
        "lineno": 22,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 7403,
        "code": "eturn c;\n  }\n}",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_11: 0x0\ncalldata_ethairdrop_0: 0xaa6ca80800000000000000000000000000000000000000000000000000000000\ncalldatasize_ethairdrop: 0x4\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/1/0x3f5fa71ea48ae374faae502afa2e27715484c3b7.sol",
        "function": "getTokens()",
        "lineno": 23,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 7420,
        "code": "b;\n  ",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_10: 0xe1641051d98f84df8e7c5def572673888019dbdf44243c6b1fc18a3548408d82\ncallvalue: 0x702000000000000000020700000080c820050000202fffffffff7f5ffd7df600\nstorage_11: 0x0\ncalldatasize_ethairdrop: 0x3\n",
        "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/1/0x3f5fa71ea48ae374faae502afa2e27715484c3b7.sol",
        "function": "fallback",
        "lineno": 5,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 7928,
        "code": "\n    return a ",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_ethairdrop_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_7: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_1: 0x0\ncaller: 0x0\ncalldata_ethairdrop_0: 0x42966c6800000000000000000000000000000000000000000000000000000000\ncalldatasize_ethairdrop: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/1/0x3f5fa71ea48ae374faae502afa2e27715484c3b7.sol",
        "function": "burn(uint256)",
        "lineno": 16,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}