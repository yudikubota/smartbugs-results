{
  "contract": "0x4216999f72768c09db4e4f69fdb42e2ca113e976",
  "tool": "mythril",
  "start": 1563725981.1856167,
  "end": 1563726372.7921083,
  "duration": 391.60649156570435,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 296,
        "code": "     emit Received(msg.sender,",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 401\n",
        "filename": "/unique_chucks/38/0x4216999f72768c09db4e4f69fdb42e2ca113e976.sol",
        "function": "fallback",
        "lineno": 83,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 296,
        "code": "     emit Received(msg.sender,",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function fallback. The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/38/0x4216999f72768c09db4e4f69fdb42e2ca113e976.sol",
        "function": "fallback",
        "lineno": 83,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 401,
        "code": "\n    }\n    \n    \n    //solo Cryptod",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function fallback. The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/38/0x4216999f72768c09db4e4f69fdb42e2ca113e976.sol",
        "function": "fallback",
        "lineno": 83,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 879,
        "code": "ublic onlyCryptodiamond{\n        name = _name;\n        surname = _surname;\n        comment = _comment;\n    }\n    \n    function fee(uint256 _amount,uint256 _fee) private returns(",
        "debug": "calldata_cryptodiamondwatch_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_cryptodiamondwatch_0: 0x6dec7a9300000000000000000000000000000000000000000000000000000000\ncalldatasize_cryptodiamondwatch: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `setInfo(string,string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/38/0x4216999f72768c09db4e4f69fdb42e2ca113e976.sol",
        "function": "setInfo(string,string,string)",
        "lineno": 66,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 891,
        "code": "ublic onlyCryptodiamond{\n        name = _name;\n        surname = _surname;\n        comment = _comment;\n    }\n    \n    function fee(uint256 _amount,uint256 _fee) private returns(",
        "debug": "calldata_cryptodiamondwatch_4 + calldata_cryptodiamondwatch_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8\ncalldata_cryptodiamondwatch_0: 0x6dec7a9300000000000000000000000000000000000000000000000000000000\ncalldatasize_cryptodiamondwatch: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `setInfo(string,string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/38/0x4216999f72768c09db4e4f69fdb42e2ca113e976.sol",
        "function": "setInfo(string,string,string)",
        "lineno": 66,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 900,
        "code": "ublic onlyCryptodiamond{\n        name = _name;\n        surname = _surname;\n        comment = _comment;\n    }\n    \n    function fee(uint256 _amount,uint256 _fee) private returns(",
        "debug": "calldata_cryptodiamondwatch_4 + calldata_cryptodiamondwatch_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc1\ncalldata_cryptodiamondwatch_0: 0x6dec7a9300000000000000000000000000000000000000000000000000000000\ncalldatasize_cryptodiamondwatch: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `setInfo(string,string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/38/0x4216999f72768c09db4e4f69fdb42e2ca113e976.sol",
        "function": "setInfo(string,string,string)",
        "lineno": 66,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 906,
        "code": "ublic onlyCryptodiamond{\n        name = _name;\n        surname = _surname;\n        comment = _comment;\n    }\n    \n    function fee(uint256 _amount,uint256 _fee) private returns(",
        "debug": "calldata_cryptodiamondwatch_4 + calldata_cryptodiamondwatch_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff41\ncalldata_cryptodiamondwatch_0: 0x6dec7a9300000000000000000000000000000000000000000000000000000000\ncalldatasize_cryptodiamondwatch: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `setInfo(string,string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/38/0x4216999f72768c09db4e4f69fdb42e2ca113e976.sol",
        "function": "setInfo(string,string,string)",
        "lineno": 66,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2177,
        "code": "se\n            revert(",
        "debug": "",
        "description": "In the function `allEthOUT()` the following predictable state variables are used to determine Ether recipient:\n- block.timestamp\n",
        "filename": "/unique_chucks/38/0x4216999f72768c09db4e4f69fdb42e2ca113e976.sol",
        "function": "allEthOUT()",
        "lineno": 100,
        "title": "Dependence on predictable environment variable",
        "type": "Warning"
      },
      {
        "address": 2177,
        "code": "se\n            revert(",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function allEthOUT(). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/38/0x4216999f72768c09db4e4f69fdb42e2ca113e976.sol",
        "function": "allEthOUT()",
        "lineno": 100,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 3575,
        "code": "emit Received(msg",
        "debug": "callvalue: 0x57f25cd000000000000000000000000000000000000000000000000000000000\nstorage_6: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_10: 0x0\ncaller: 0x0\ncalldata_cryptodiamondwatch_0: 0xc4c59c7700000000000000000000000000000000000000000000000000000000\ncalldatasize_cryptodiamondwatch: 0x4\n",
        "description": "A possible integer overflow exists in the function `ethIN()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/38/0x4216999f72768c09db4e4f69fdb42e2ca113e976.sol",
        "function": "ethIN()",
        "lineno": 91,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 3588,
        "code": "    \n    fu",
        "debug": "timestamp: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd0\nstorage_10: 0x0\ncaller: 0x0\ncalldata_cryptodiamondwatch_0: 0xc4c59c7700000000000000000000000000000000000000000000000000000000\ncalldatasize_cryptodiamondwatch: 0x4\n",
        "description": "A possible integer overflow exists in the function `ethIN()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/38/0x4216999f72768c09db4e4f69fdb42e2ca113e976.sol",
        "function": "ethIN()",
        "lineno": 93,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 3791,
        "code": "ryptodiamondwatch {\n    \n    string private ID; //format W-CRIBIXX (es: W-CRIBI01/W-CRIBI02...)\n    string private name;\n    string private surname;\n    string private comment;\n    string private metadataURL;\n    \n    uint256 private nID=1; //from ID (es: W-CRIBI01 => nID: 01)\n    \n    uint256 private amount;\n    \n    uint256 private unlockTime;\n    \n    address private tokenERC721Address;\n    address private owner;\n    address private cryptodiamondAddress;\n    \n    //eventi\n    event Created(string _id, address _address);\n    event InfoSetted(string _name, string _surname, string _comment);\n    event OwnershipChanged(address _address, address _newOwner,string _comment);\n    event Received(address _address ,uint _value);\n    \n    //id dell'orologio e indirizzo del tokenerc721 corrispondente\n    constructor(string _ID, address _tokenERC721Address)public{\n        ID = _ID;\n        tokenERC721Address = _tokenERC721Address;\n        cryptodiamondAddress = msg.sender;\n        name = \"not assigned yet\";\n        surname = \"not assigned yet\";\n        comment = \"not assigned yet\";\n        unlockTime=0;\n        amount=0;\n        owner=msg.sender;\n        emit Created(_ID,msg.sender);\n    }\n    \n    \n    modifier onlyOwner() { \n    \trequire (msg.sender == owner); \n    \t_; \n    }\n    \n    modifier onlyCryptodiamond() { \n    \trequire (msg.sender == cryptodiamondAddress); \n    \t_; \n    }\n    \n    modifier onlyToken() { \n    \trequire (msg.sender == tokenERC721Address); \n    \t_; \n    }\n    \n    \n    function setInfo(string _name, string _surname, string _comment)public onlyCryptodiamond{\n        name = _name;\n        surname = _surname;\n        comment = _comment;\n    }\n    \n    function fee(uint256 _amount,uint256 _fee) private returns(uint256){\n        uint256 calcFee;\n        calcFee=(_fee*_amount)/100;\n        return(_fee*amount/100);\n    }\n    \n    //fallback function\n    function () public payable{\n        uint256 cFee = fee(msg.value,1);\n        owner.transfer(msg.value-cFee);\n        cryptodiamondAddress.transfer(cFee);\n        emit Received(msg.sender,msg.value);\n    }\n    \n    \n    //solo Cryptodiamond pu\u00f2 inviare ether inizialmente\n    function ethIN() public payable onlyCryptodiamond{\n            amount+=msg.value;\n            unlockTime=now+7889400;    //7889400; +3 mesi\n            emit Received(msg.sender,msg.value);\n    }\n    \n    function allEthOUT() public onlyOwner{\n        if(now>=unlockTime){\n            owner.transfer(amount);\n            amount = 0;\n            unlockTime = 0;\n        }\n        else\n            revert();\n    }\n\n   function transferOwnershipTo(address _newOwner, string _comment) external onlyToken{\n        //cryptodiamondAddress.transfer(0.01 ether); //Cryptodiamond fee\n        //amount -=0.01 ether;\n        require(_newOwner != address(0));\n        require(_newOwner != cryptodiamondAddress);\n        emit OwnershipChanged(msg.sender,_newOwner,_comment);\n   \t\towner = _newOwner;\n   }\n    \n    function getOwner() public constant returns (address){\n        return owner;\n    }\n    function getCryptodiamondAddress() public constant returns (address){\n        return cryptodiamondAddress;\n    }\n    function getID() public constant returns (string){\n        return ID;\n    }\n    \n    function getNID() public constant returns (uint256){\n        return nID;\n    }\n\n    function getMetadataURL() public constant returns (string){\n        return metadataURL;\n    }\n    \n    function getName() public constant returns (string){\n        return name;\n    }\n    function getSurname() public constant returns (string){\n        return surname;\n    }\n    \n    function getUnlocktime() public constant returns (uint){\n        return unlockTime;\n    }\n    \n    function getAmount() external constant returns (uint){\n        return amount;\n    }\n    \n    \n}",
        "debug": "storage_1: 0x80\nmem_128 +\n32 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_cryptodiamondwatch_4 + calldata_cryptodiamondwatch_4)): 0x8000000000000000000000000000000000000000000000000000000000000000\ncalldata_cryptodiamondwatch_4 + calldata_cryptodiamondwatch_4: 0x0\nstorage_10: 0x0\ncaller: 0x0\ncalldata_cryptodiamondwatch_0: 0x6dec7a9300000000000000000000000000000000000000000000000000000000\ncalldatasize_cryptodiamondwatch: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `setInfo(string,string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/38/0x4216999f72768c09db4e4f69fdb42e2ca113e976.sol",
        "function": "setInfo(string,string,string)",
        "lineno": 11,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 3805,
        "code": "ryptodiamondwatch {\n    \n    string private ID; //format W-CRIBIXX (es: W-CRIBI01/W-CRIBI02...)\n    string private name;\n    string private surname;\n    string private comment;\n    string private metadataURL;\n    \n    uint256 private nID=1; //from ID (es: W-CRIBI01 => nID: 01)\n    \n    uint256 private amount;\n    \n    uint256 private unlockTime;\n    \n    address private tokenERC721Address;\n    address private owner;\n    address private cryptodiamondAddress;\n    \n    //eventi\n    event Created(string _id, address _address);\n    event InfoSetted(string _name, string _surname, string _comment);\n    event OwnershipChanged(address _address, address _newOwner,string _comment);\n    event Received(address _address ,uint _value);\n    \n    //id dell'orologio e indirizzo del tokenerc721 corrispondente\n    constructor(string _ID, address _tokenERC721Address)public{\n        ID = _ID;\n        tokenERC721Address = _tokenERC721Address;\n        cryptodiamondAddress = msg.sender;\n        name = \"not assigned yet\";\n        surname = \"not assigned yet\";\n        comment = \"not assigned yet\";\n        unlockTime=0;\n        amount=0;\n        owner=msg.sender;\n        emit Created(_ID,msg.sender);\n    }\n    \n    \n    modifier onlyOwner() { \n    \trequire (msg.sender == owner); \n    \t_; \n    }\n    \n    modifier onlyCryptodiamond() { \n    \trequire (msg.sender == cryptodiamondAddress); \n    \t_; \n    }\n    \n    modifier onlyToken() { \n    \trequire (msg.sender == tokenERC721Address); \n    \t_; \n    }\n    \n    \n    function setInfo(string _name, string _surname, string _comment)public onlyCryptodiamond{\n        name = _name;\n        surname = _surname;\n        comment = _comment;\n    }\n    \n    function fee(uint256 _amount,uint256 _fee) private returns(uint256){\n        uint256 calcFee;\n        calcFee=(_fee*_amount)/100;\n        return(_fee*amount/100);\n    }\n    \n    //fallback function\n    function () public payable{\n        uint256 cFee = fee(msg.value,1);\n        owner.transfer(msg.value-cFee);\n        cryptodiamondAddress.transfer(cFee);\n        emit Received(msg.sender,msg.value);\n    }\n    \n    \n    //solo Cryptodiamond pu\u00f2 inviare ether inizialmente\n    function ethIN() public payable onlyCryptodiamond{\n            amount+=msg.value;\n            unlockTime=now+7889400;    //7889400; +3 mesi\n            emit Received(msg.sender,msg.value);\n    }\n    \n    function allEthOUT() public onlyOwner{\n        if(now>=unlockTime){\n            owner.transfer(amount);\n            amount = 0;\n            unlockTime = 0;\n        }\n        else\n            revert();\n    }\n\n   function transferOwnershipTo(address _newOwner, string _comment) external onlyToken{\n        //cryptodiamondAddress.transfer(0.01 ether); //Cryptodiamond fee\n        //amount -=0.01 ether;\n        require(_newOwner != address(0));\n        require(_newOwner != cryptodiamondAddress);\n        emit OwnershipChanged(msg.sender,_newOwner,_comment);\n   \t\towner = _newOwner;\n   }\n    \n    function getOwner() public constant returns (address){\n        return owner;\n    }\n    function getCryptodiamondAddress() public constant returns (address){\n        return cryptodiamondAddress;\n    }\n    function getID() public constant returns (string){\n        return ID;\n    }\n    \n    function getNID() public constant returns (uint256){\n        return nID;\n    }\n\n    function getMetadataURL() public constant returns (string){\n        return metadataURL;\n    }\n    \n    function getName() public constant returns (string){\n        return name;\n    }\n    function getSurname() public constant returns (string){\n        return surname;\n    }\n    \n    function getUnlocktime() public constant returns (uint){\n        return unlockTime;\n    }\n    \n    function getAmount() external constant returns (uint){\n        return amount;\n    }\n    \n    \n}",
        "debug": "storage_1: 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff40\ncalldata_cryptodiamondwatch_4 + calldata_cryptodiamondwatch_4: 0x0\nmem_128 +\n32 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_cryptodiamondwatch_4 + calldata_cryptodiamondwatch_4)): 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\nstorage_10: 0x0\ncaller: 0x0\ncalldata_cryptodiamondwatch_0: 0x6dec7a9300000000000000000000000000000000000000000000000000000000\ncalldatasize_cryptodiamondwatch: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `setInfo(string,string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/38/0x4216999f72768c09db4e4f69fdb42e2ca113e976.sol",
        "function": "setInfo(string,string,string)",
        "lineno": 11,
        "title": "Integer Overflow ",
        "type": "Warning"
      }
    ],
    "success": true
  }
}