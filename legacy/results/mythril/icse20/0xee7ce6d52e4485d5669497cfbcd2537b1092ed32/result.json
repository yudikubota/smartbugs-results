{
  "contract": "0xee7ce6d52e4485d5669497cfbcd2537b1092ed32",
  "tool": "mythril",
  "start": 1563716124.9416,
  "end": 1563716147.4083574,
  "duration": 22.46675729751587,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 3183,
        "code": "proxy_to_contract(address _from, addre",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/40/0xee7ce6d52e4485d5669497cfbcd2537b1092ed32.sol",
        "function": "withdraw_arbitrary_token(address)",
        "lineno": 85,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 3183,
        "code": "proxy_to_contract(address _from, addre",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3375\n",
        "filename": "/unique_chucks/40/0xee7ce6d52e4485d5669497cfbcd2537b1092ed32.sol",
        "function": "withdraw_arbitrary_token(address)",
        "lineno": 85,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 3375,
        "code": "ction transfer_tokens_through_proxy_to_contract(address _from, addres",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/40/0xee7ce6d52e4485d5669497cfbcd2537b1092ed32.sol",
        "function": "withdraw_arbitrary_token(address)",
        "lineno": 85,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 3661,
        "code": "urns(uint256) {\n    return (_amount*(1 ether",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/40/0xee7ce6d52e4485d5669497cfbcd2537b1092ed32.sol",
        "function": "get_amount_buy(uint256)",
        "lineno": 173,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 5382,
        "code": "ivate {\n    eth_balance = eth_balance.add",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/40/0xee7ce6d52e4485d5669497cfbcd2537b1092ed32.sol",
        "function": "withdraw_token(uint256)",
        "lineno": 93,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 5528,
        "code": "kens_through_proxy_to",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function withdraw_eth(uint256). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/40/0xee7ce6d52e4485d5669497cfbcd2537b1092ed32.sol",
        "function": "withdraw_eth(uint256)",
        "lineno": 103,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 5599,
        "code": " asse",
        "debug": "callvalue: 0x57f25cd000000000000000000000000000000000000000000000000000000000\nstorage_6: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_7: 0x0\nstorage_1: 0x0\ncaller: 0x0\ncalldata_TokenLiquidityMarket_0: 0x3f5ab2fe00000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenLiquidityMarket: 0x4\nstorage_3: 0x57f25cd000000000000000000000000000000000000000000000000000000000\n",
        "description": "A possible integer overflow exists in the function `seed_eth()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/40/0xee7ce6d52e4485d5669497cfbcd2537b1092ed32.sol",
        "function": "seed_eth()",
        "lineno": 12,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 5612,
        "code": " a);\n    retur",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_6: 0x1\ncalldata_TokenLiquidityMarket_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_TokenLiquidityMarket_0: 0x7b5825d500000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenLiquidityMarket: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/40/0xee7ce6d52e4485d5669497cfbcd2537b1092ed32.sol",
        "function": "get_amount_buy(uint256)",
        "lineno": 12,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 6030,
        "code": "t(b <= a);\n   ",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_6: 0x0\ncalldata_TokenLiquidityMarket_4: 0x1\nstorage_1: 0x0\ncaller: 0x0\ncalldata_TokenLiquidityMarket_0: 0x30a95e6700000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenLiquidityMarket: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/40/0xee7ce6d52e4485d5669497cfbcd2537b1092ed32.sol",
        "function": "withdraw_eth(uint256)",
        "lineno": 6,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}