{
  "contract": "0x9f3ecba366bbf358314c4bcbc60771b0335aed2f",
  "tool": "mythril",
  "start": 1563817782.8554053,
  "end": 1563817802.0430498,
  "duration": 19.187644481658936,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 3111,
        "code": "emit FrozenFunds(_target, freez",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/16/0x9f3ecba366bbf358314c4bcbc60771b0335aed2f.sol",
        "function": "refundTokens(address,address,uint256)",
        "lineno": 371,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 5271,
        "code": " }\n\n  function",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_4: 0x80000000000000000000000000000000000000000000000e6d72180000000000\ncalldata_VACToken_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_2: 0x0\ncaller: 0x0\ncalldata_VACToken_0: 0x7e1f2bb800000000000000000000000000000000000000000000000000000000\ncalldatasize_VACToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/16/0x9f3ecba366bbf358314c4bcbc60771b0335aed2f.sol",
        "function": "createTokens(uint256)",
        "lineno": 38,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 5289,
        "code": "\n  }\n",
        "debug": "storage_4: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffff8f3cb6947d80b73f4c825430\ncalldata_VACToken_4: 0x10ba2be969242e47f969b559f\nstorage_2: 0x0\ncaller: 0x0\ncalldata_VACToken_0: 0x7e1f2bb800000000000000000000000000000000000000000000000000000000\ncalldatasize_VACToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `createTokens(uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/16/0x9f3ecba366bbf358314c4bcbc60771b0335aed2f.sol",
        "function": "createTokens(uint256)",
        "lineno": 43,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 5302,
        "code": "**\n * ERC-20 s",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_4: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffff91126b6d084ec946e563a862\ncalldata_VACToken_4: 0xed136c6df7ab2ab6c57b323d\nstorage_2: 0x0\ncaller: 0x0\ncalldata_VACToken_0: 0x7e1f2bb800000000000000000000000000000000000000000000000000000000\ncalldatasize_VACToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/16/0x9f3ecba366bbf358314c4bcbc60771b0335aed2f.sol",
        "function": "createTokens(uint256)",
        "lineno": 50,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}