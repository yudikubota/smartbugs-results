{
  "contract": "0x6edb1308c44e44f19d49b7f6941050150b0acc08",
  "tool": "mythril",
  "start": 1563525947.977589,
  "end": 1563526093.0860834,
  "duration": 145.10849452018738,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 425,
        "code": "ss[] memory) {\n        return operatorsGroup;\n    }\n\n    function getAlerters () external view returns(ad",
        "debug": "storage_4: 0x800000000000000000000000000000000000000000000000000000000000000\ncalldata_Withdrawable_0: 0x27a099d800000000000000000000000000000000000000000000000000000000\ncalldatasize_Withdrawable: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `_function_0x27a099d8`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/10/0x6edb1308c44e44f19d49b7f6941050150b0acc08.sol",
        "function": "_function_0x27a099d8",
        "lineno": 53,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 844,
        "code": "memory) {\n        return alertersGroup;\n    }\n\n    event TransferAdminPending(address pendingAdmin);\n\n ",
        "debug": "storage_5: 0x800000000000000000000000000000000000000000000000000000000000000\ncalldata_Withdrawable_0: 0x7c423f5400000000000000000000000000000000000000000000000000000000\ncalldatasize_Withdrawable: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `_function_0x7c423f54`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/10/0x6edb1308c44e44f19d49b7f6941050150b0acc08.sol",
        "function": "_function_0x7c423f54",
        "lineno": 57,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2179,
        "code": "s () external view re",
        "debug": "storage_4: 0x8421003f084001f4210815cf88407c00000000000000037c1d000e8d178001f\ncalldata_Withdrawable_0: 0x27a099d800000000000000000000000000000000000000000000000000000000\ncalldatasize_Withdrawable: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `_function_0x27a099d8`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/10/0x6edb1308c44e44f19d49b7f6941050150b0acc08.sol",
        "function": "_function_0x27a099d8",
        "lineno": 57,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2181,
        "code": "s () external view re",
        "debug": "storage_4: 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffb\ncalldata_Withdrawable_0: 0x27a099d800000000000000000000000000000000000000000000000000000000\ncalldatasize_Withdrawable: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `_function_0x27a099d8`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/10/0x6edb1308c44e44f19d49b7f6941050150b0acc08.sol",
        "function": "_function_0x27a099d8",
        "lineno": 57,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2639,
        "code": "indexed sendTo\n    );\n\n    /**",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/10/0x6edb1308c44e44f19d49b7f6941050150b0acc08.sol",
        "function": "_function_0x3ccdbb28",
        "lineno": 189,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 5606,
        "code": "ng(address pendingAd",
        "debug": "storage_5: 0x8421003f084001f4210815cf88407c00000000000000037c1d000e8d178001f\ncalldata_Withdrawable_0: 0x7c423f5400000000000000000000000000000000000000000000000000000000\ncalldatasize_Withdrawable: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `_function_0x7c423f54`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/10/0x6edb1308c44e44f19d49b7f6941050150b0acc08.sol",
        "function": "_function_0x7c423f54",
        "lineno": 61,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 5608,
        "code": "ng(address pendingAd",
        "debug": "storage_5: 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffb\ncalldata_Withdrawable_0: 0x7c423f5400000000000000000000000000000000000000000000000000000000\ncalldatasize_Withdrawable: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `_function_0x7c423f54`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/10/0x6edb1308c44e44f19d49b7f6941050150b0acc08.sol",
        "function": "_function_0x7c423f54",
        "lineno": 61,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 7822,
        "code": " /**\n     * @dev Withdraw all ERC20 compatible tokens\n     * @param token ERC20 The address of the token contract\n     */\n    function withdrawToken(\n      ERC20 token,\n      uint amount,\n      address sendTo\n    )\n        external\n        onlyAdmin\n    {\n        require(token.transfer(sendTo, amount), \"Could not transfer tokens\");\n        emit TokenWithdraw(token, amount, sendTo);\n    }\n\n    event EtherWithdraw(\n        uint amount,\n        address indexed sendTo\n    );\n\n    /**\n     * @dev Withdraw Ethers\n     */\n    function withdrawEther(\n        uint amount,\n        address payable sendTo\n    )\n        external\n        onlyAdmin\n    {\n        sendTo.transfer(amount);\n        emit EtherWithdraw(amount, sendTo);\n    }\n}\n\n// File: @gnosis.pm/util-contracts/contracts/Proxy.sol\n\n/// @title Proxied - indicates that a contract will be proxied. Also defines storage requirements for Proxy.\n/// @author Alan Lu - <alan@gnosis.pm",
        "debug": "storage_4: 0x7a00000000000000000000000000000000000000000000000000000000000000\ncalldatasize_Withdrawable: 0x84\ncalldata_Withdrawable_4: 0x0\nstorage_62514009886607029107290561805838585334079798074568712924583230797734656856475: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_Withdrawable_4: 0xff00\nstorage_0: 0x0\ncaller: 0x0\ncalldata_Withdrawable_0: 0xac8a584a00000000000000000000000000000000000000000000000000000000\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `_function_0xac8a584a`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/10/0x6edb1308c44e44f19d49b7f6941050150b0acc08.sol",
        "function": "_function_0xac8a584a",
        "lineno": 171,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 7824,
        "code": " /**\n     * @dev Withdraw all ERC20 compatible tokens\n     * @param token ERC20 The address of the token contract\n     */\n    function withdrawToken(\n      ERC20 token,\n      uint amount,\n      address sendTo\n    )\n        external\n        onlyAdmin\n    {\n        require(token.transfer(sendTo, amount), \"Could not transfer tokens\");\n        emit TokenWithdraw(token, amount, sendTo);\n    }\n\n    event EtherWithdraw(\n        uint amount,\n        address indexed sendTo\n    );\n\n    /**\n     * @dev Withdraw Ethers\n     */\n    function withdrawEther(\n        uint amount,\n        address payable sendTo\n    )\n        external\n        onlyAdmin\n    {\n        sendTo.transfer(amount);\n        emit EtherWithdraw(amount, sendTo);\n    }\n}\n\n// File: @gnosis.pm/util-contracts/contracts/Proxy.sol\n\n/// @title Proxied - indicates that a contract will be proxied. Also defines storage requirements for Proxy.\n/// @author Alan Lu - <alan@gnosis.pm",
        "debug": "storage_4: 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffbe\ncalldatasize_Withdrawable: 0x10000000000\ncalldata_Withdrawable_4: 0x0\nstorage_62514009886607029107290561805838585334079798074568712924583230797734656856475: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_Withdrawable_4: 0xff00\nstorage_0: 0x0\ncaller: 0x0\ncalldata_Withdrawable_0: 0xac8a584a00000000000000000000000000000000000000000000000000000000\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `_function_0xac8a584a`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/10/0x6edb1308c44e44f19d49b7f6941050150b0acc08.sol",
        "function": "_function_0xac8a584a",
        "lineno": 171,
        "title": "Integer Overflow ",
        "type": "Warning"
      }
    ],
    "success": true
  }
}