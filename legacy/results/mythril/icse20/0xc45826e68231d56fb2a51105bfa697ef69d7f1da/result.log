{"error": null, "issues": [{"address": 496, "code": "ens) external view returns (bool)\n    {\n        for (uint i = 0; i < _tokens.length; i++)\n        {\n  ", "debug": "storage_2: 0x800000000000000000000000000000000000000000000000000000000000000\ncalldata_TokenRegistryInterface_0: 0x352bc5800000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenRegistryInterface: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `getDefaultTokens()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/28/0xc45826e68231d56fb2a51105bfa697ef69d7f1da.sol", "function": "getDefaultTokens()", "lineno": 154, "title": "Integer Overflow ", "type": "Warning"}, {"address": 846, "code": "() external view returns (address[])\n    {\n        return allTokens;\n    }\n\n    function areAllTokensAllowed(addres", "debug": "storage_3: 0x800000000000000000000000000000000000000000000000000000000000000\ncalldata_TokenRegistryInterface_0: 0x1a05e21d00000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenRegistryInterface: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `getDefaultCreatorTokens()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/28/0xc45826e68231d56fb2a51105bfa697ef69d7f1da.sol", "function": "getDefaultCreatorTokens()", "lineno": 149, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1084, "code": "i] == _currentToken)\n            {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /// @dev Allow buy cuties for token\n    function addToken(ERC20 _tokenContract, PriceOracleInterface _priceOracle) external onlyOwner\n    {\n        // check if not added yet\n        require(address(priceOracle", "debug": "calldata_TokenRegistryInterface_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_TokenRegistryInterface_0: 0x223e6b5b00000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenRegistryInterface: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `isTokenInList(address[],address)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/28/0xc45826e68231d56fb2a51105bfa697ef69d7f1da.sol", "function": "isTokenInList(address[],address)", "lineno": 210, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1090, "code": "i] == _currentToken)\n            {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /// @dev Allow buy cuties for token\n    function addToken(ERC20 _tokenContract, PriceOracleInterface _priceOracle) external onlyOwner\n    {\n        // check if not added yet\n        require(address(priceOracle", "debug": "calldata_TokenRegistryInterface_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc\ncalldata_TokenRegistryInterface_0: 0x223e6b5b00000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenRegistryInterface: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `isTokenInList(address[],address)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/28/0xc45826e68231d56fb2a51105bfa697ef69d7f1da.sol", "function": "isTokenInList(address[],address)", "lineno": 210, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2014, "code": "  if (address(priceOracle[_tokens[i]]) == address(0x0) &&\n                address(kyberOracle[_tokens[i]]) == address(0x0))\n            {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    function getPriceInToken(ERC20 _tokenContract, uint128 priceWei)\n        external\n        view\n        returns (uint128)\n    {\n        if (isKyberToken(_token", "debug": "calldata_TokenRegistryInterface_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_TokenRegistryInterface_0: 0x90a308a500000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenRegistryInterface: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `areAllTokensAllowed(address[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/28/0xc45826e68231d56fb2a51105bfa697ef69d7f1da.sol", "function": "areAllTokensAllowed(address[])", "lineno": 158, "title": "Integer Overflow ", "type": "Warning"}, {"address": 3371, "code": ";\n\n// ------------", "debug": "storage_2: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TokenRegistryInterface_4: 0x0\nstorage_0: 0x0\ncaller: 0x0\ncalldata_TokenRegistryInterface_0: 0x275d5c800000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenRegistryInterface: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `_function_0x0275d5c8`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/28/0xc45826e68231d56fb2a51105bfa697ef69d7f1da.sol", "function": "_function_0x0275d5c8", "lineno": 1, "title": "Integer Overflow ", "type": "Warning"}, {"address": 3511, "code": "ength; i++)\n    ", "debug": "storage_2: 0x8421003f084001f4210815cf88407c00000000000000037c1d000e8d178001f\ncalldata_TokenRegistryInterface_0: 0x352bc5800000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenRegistryInterface: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `getDefaultTokens()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/28/0xc45826e68231d56fb2a51105bfa697ef69d7f1da.sol", "function": "getDefaultTokens()", "lineno": 156, "title": "Integer Overflow ", "type": "Warning"}, {"address": 3513, "code": "ength; i++)\n    ", "debug": "storage_2: 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffb\ncalldata_TokenRegistryInterface_0: 0x352bc5800000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenRegistryInterface: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `getDefaultTokens()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/28/0xc45826e68231d56fb2a51105bfa697ef69d7f1da.sol", "function": "getDefaultTokens()", "lineno": 156, "title": "Integer Overflow ", "type": "Warning"}, {"address": 4006, "code": "  }\n\n    function", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/28/0xc45826e68231d56fb2a51105bfa697ef69d7f1da.sol", "function": "_function_0x1308cbef", "lineno": 191, "title": "Message call to external contract", "type": "Warning"}, {"address": 4006, "code": "  }\n\n    function", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 4167\n", "filename": "/unique_chucks/28/0xc45826e68231d56fb2a51105bfa697ef69d7f1da.sol", "function": "_function_0x1308cbef", "lineno": 191, "title": "Multiple Calls", "type": "Information"}, {"address": 4167, "code": "kenContract, uint128 pric", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/28/0xc45826e68231d56fb2a51105bfa697ef69d7f1da.sol", "function": "_function_0x1308cbef", "lineno": 193, "title": "Message call to external contract", "type": "Warning"}, {"address": 4279, "code": "NetworkProxyInterface oracle = kyberOracle[address(_toke", "debug": "The exception is triggered under the following conditions:\n\nretval_4167: 0x20\nreturndatasize: 0x20\nretval_4006: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TokenRegistryInterface_4: 0xffffffffffffffffffffffffffffffffffffffff00\ncalldata_TokenRegistryInterface_0: 0x1308cbef00000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenRegistryInterface: 0x4\n10_EXP_Concat(0, 36 + 255*Extract(7, 0, retval_4167)): 0x0\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/28/0xc45826e68231d56fb2a51105bfa697ef69d7f1da.sol", "function": "_function_0x1308cbef", "lineno": 195, "title": "Exception state", "type": "Informational"}, {"address": 4336, "code": "ion areAllTokensAllowe", "debug": "storage_3: 0x8421003f084001f4210815cf88407c00000000000000037c1d000e8d178001f\ncalldata_TokenRegistryInterface_0: 0x1a05e21d00000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenRegistryInterface: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `getDefaultCreatorTokens()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/28/0xc45826e68231d56fb2a51105bfa697ef69d7f1da.sol", "function": "getDefaultCreatorTokens()", "lineno": 154, "title": "Integer Overflow ", "type": "Warning"}, {"address": 4338, "code": "ion areAllTokensAllowe", "debug": "storage_3: 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffb\ncalldata_TokenRegistryInterface_0: 0x1a05e21d00000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenRegistryInterface: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `getDefaultCreatorTokens()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/28/0xc45826e68231d56fb2a51105bfa697ef69d7f1da.sol", "function": "getDefaultCreatorTokens()", "lineno": 154, "title": "Integer Overflow ", "type": "Warning"}, {"address": 4853, "code": "rn uint128(uint256(priceWei) * ethPerToken / (10 ** uint256(power))", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/28/0xc45826e68231d56fb2a51105bfa697ef69d7f1da.sol", "function": "_function_0x1dbabd6f", "lineno": 203, "title": "Message call to external contract", "type": "Warning"}, {"address": 4853, "code": "rn uint128(uint256(priceWei) * ethPerToken / (10 ** uint256(power))", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 5043\n", "filename": "/unique_chucks/28/0xc45826e68231d56fb2a51105bfa697ef69d7f1da.sol", "function": "_function_0x1dbabd6f", "lineno": 203, "title": "Multiple Calls", "type": "Information"}, {"address": 5043, "code": "ress _currentToken) exter", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/28/0xc45826e68231d56fb2a51105bfa697ef69d7f1da.sol", "function": "_function_0x1dbabd6f", "lineno": 206, "title": "Message call to external contract", "type": "Warning"}, {"address": 5155, "code": "i < _allowedTokens.length; i++)\n        {\n            if", "debug": "The exception is triggered under the following conditions:\n\nretval_5043: 0x21\nreturndatasize: 0x40\nretval_4853: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TokenRegistryInterface_4: 0xffffffffffffffffffffffffffffffffffffffff00\ncalldata_TokenRegistryInterface_0: 0x1dbabd6f00000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenRegistryInterface: 0x4\n10_EXP_Concat(0, 36 + 255*Extract(7, 0, retval_5043)): 0x0\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/28/0xc45826e68231d56fb2a51105bfa697ef69d7f1da.sol", "function": "_function_0x1dbabd6f", "lineno": 208, "title": "Exception state", "type": "Informational"}, {"address": 5230, "code": "tract, PriceOracl", "debug": "calldata_TokenRegistryInterface_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffbc\ncalldata_TokenRegistryInterface_4 + calldata_TokenRegistryInterface_4: 0x800000000000000000000000000000000000000000000000000000\ncalldata_TokenRegistryInterface_32 + 4: 0x0\ncalldata_TokenRegistryInterface_0 + 36 + calldata_TokenRegistryInterface_4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_TokenRegistryInterface_0: 0x223e6b5b00000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenRegistryInterface: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `isTokenInList(address[],address)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/28/0xc45826e68231d56fb2a51105bfa697ef69d7f1da.sol", "function": "isTokenInList(address[],address)", "lineno": 219, "title": "Integer Overflow ", "type": "Warning"}, {"address": 6205, "code": ";\n\n// ------------", "debug": "storage_2: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TokenRegistryInterface_4: 0x0\nstorage_0: 0x0\ncaller: 0x0\ncalldata_TokenRegistryInterface_0: 0x5476bd7200000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenRegistryInterface: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `_function_0x5476bd72`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/28/0xc45826e68231d56fb2a51105bfa697ef69d7f1da.sol", "function": "_function_0x5476bd72", "lineno": 1, "title": "Integer Overflow ", "type": "Warning"}, {"address": 6307, "code": ";\n\n// ------------", "debug": "storage_3: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TokenRegistryInterface_4: 0x0\nstorage_0: 0x0\ncaller: 0x0\ncalldata_TokenRegistryInterface_0: 0x5476bd7200000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenRegistryInterface: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `_function_0x5476bd72`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/28/0xc45826e68231d56fb2a51105bfa697ef69d7f1da.sol", "function": "_function_0x5476bd72", "lineno": 1, "title": "Integer Overflow ", "type": "Warning"}, {"address": 7031, "code": " (address => KyberNetworkP", "debug": "The exception is triggered under the following conditions:\n\ncalldata_TokenRegistryInterface_4: 0x0\nstorage_2: 0x0\ncalldata_TokenRegistryInterface_0: 0x634282af00000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenRegistryInterface: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/28/0xc45826e68231d56fb2a51105bfa697ef69d7f1da.sol", "function": "_function_0x634282af", "lineno": 122, "title": "Exception state", "type": "Informational"}, {"address": 10044, "code": "rNetworkProxy), tokenQty);\n        uint destAmount = _kyberNetworkProx", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/28/0xc45826e68231d56fb2a51105bfa697ef69d7f1da.sol", "function": "_function_0x4e82a391", "lineno": 342, "title": "Message call to external contract", "type": "Warning"}], "success": true}