{
  "contract": "0xc352add7ad8cac8baa839d8c88e7e9d7df9a219b",
  "tool": "mythril",
  "start": 1563526602.127578,
  "end": 1563526692.4742007,
  "duration": 90.3466227054596,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 1591,
        "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0xff00\ncalldata_Fibonzi_0: 0x403446bd00000000000000000000000000000000000000000000000000000000\ncalldatasize_Fibonzi: 0x4\nstorage_3: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/10/0xc352add7ad8cac8baa839d8c88e7e9d7df9a219b.sol",
        "function": "getPlayersFibokens()",
        "lineno": 284,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2160,
        "code": "sender) >= 10);\n  ",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_3: 0x4000000000000000000000000000000000000000000000000000000000000000\nstorage_0: 0x200\nstorage_87903029871075914254377627908054574944891091886930582284385770809450030037084: 0xffffffffffffffffffffffffffffffffffffffff00\ncaller: 0x0\nstorage_87903029871075914254377627908054574944891091886930582284385770809450030037083: 0xffffffffffffffffffffffffffffffffffffffff00\ncalldata_Fibonzi_0: 0x4c62a64400000000000000000000000000000000000000000000000000000000\ncalldatasize_Fibonzi: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/10/0xc352add7ad8cac8baa839d8c88e7e9d7df9a219b.sol",
        "function": "withdrawComission()",
        "lineno": 115,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2238,
        "code": "    for(uint i=0;i<10;i++){\n           ",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_3: 0x4000000000000000000000000000000000000000000000000000000000000000\nstorage_0: 0x200\nstorage_87903029871075914254377627908054574944891091886930582284385770809450030037084: 0x0\ncaller: 0x0\nstorage_87903029871075914254377627908054574944891091886930582284385770809450030037083: 0x0\ncalldata_Fibonzi_0: 0x4c62a64400000000000000000000000000000000000000000000000000000000\ncalldatasize_Fibonzi: 0x4\nstorage_1 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/10/0xc352add7ad8cac8baa839d8c88e7e9d7df9a219b.sol",
        "function": "withdrawComission()",
        "lineno": 117,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2262,
        "code": "iboken();\n        }\n        \n        msg.sender.t",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0x100\nstorage_1 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncaller: 0x0\nstorage_87903029871075914254377627908054574944891091886930582284385770809450030037083: 0x0\nstorage_3: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_Fibonzi_0: 0x4c62a64400000000000000000000000000000000000000000000000000000000\ncalldatasize_Fibonzi: 0x4\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/10/0xc352add7ad8cac8baa839d8c88e7e9d7df9a219b.sol",
        "function": "withdrawComission()",
        "lineno": 118,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2706,
        "code": "ic playersList;\n    \n    str",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_Fibonzi_4: 0x0\nstorage_3: 0x0\ncalldata_Fibonzi_0: 0x7319b43e00000000000000000000000000000000000000000000000000000000\ncalldatasize_Fibonzi: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/10/0xc352add7ad8cac8baa839d8c88e7e9d7df9a219b.sol",
        "function": "_function_0x7319b43e",
        "lineno": 15,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2896,
        "code": "layersBalances",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0xff00\ncalldata_Fibonzi_0: 0x99c8762900000000000000000000000000000000000000000000000000000000\ncalldatasize_Fibonzi: 0x4\nstorage_3: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/10/0xc352add7ad8cac8baa839d8c88e7e9d7df9a219b.sol",
        "function": "getFibonziPlayers()",
        "lineno": 265,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3110,
        "code": "\n        assert(msg.value >",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0x0\ncalldata_Fibonzi_4: 0x1\ncalldata_Fibonzi_0: 0xb149ece000000000000000000000000000000000000000000000000000000000\ncalldatasize_Fibonzi: 0x4\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/10/0xc352add7ad8cac8baa839d8c88e7e9d7df9a219b.sol",
        "function": "joinPool(uint8)",
        "lineno": 81,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3226,
        "code": "lId].price);\n        assert( ( pools[pool",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_2 + keccac_255_&_255_&_255_&_calldata_Fibonzi_4: 0x0\ncaller: 0x0\nstorage_0: 0x0\ncalldata_Fibonzi_4: 0x0\ncalldata_Fibonzi_0: 0xb149ece000000000000000000000000000000000000000000000000000000000\ncalldatasize_Fibonzi: 0x4\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/10/0xc352add7ad8cac8baa839d8c88e7e9d7df9a219b.sol",
        "function": "joinPool(uint8)",
        "lineno": 82,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3266,
        "code": "= owner && poolCount == 1) || (pools[poo",
        "debug": "The exception is triggered under the following conditions:\n\ncallvalue: 0x0\nstorage_1 + keccac_255_&_255_&_255_&_calldata_Fibonzi_4: 0x1\nstorage_2 + keccac_255_&_255_&_255_&_calldata_Fibonzi_4: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\nstorage_0: 0x0\ncalldata_Fibonzi_4: 0x0\ncalldata_Fibonzi_0: 0xb149ece000000000000000000000000000000000000000000000000000000000\ncalldatasize_Fibonzi: 0x4\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/10/0xc352add7ad8cac8baa839d8c88e7e9d7df9a219b.sol",
        "function": "joinPool(uint8)",
        "lineno": 83,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3592,
        "code": "!= owner) );\n        \n        //Register the player if not registered\n        if(!isPlayer())",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0xff00\ncallvalue: 0x0\nstorage_1 + keccac_255_&_255_&_255_&_calldata_Fibonzi_4: 0x0\nstorage_2 + keccac_255_&_255_&_255_&_calldata_Fibonzi_4: 0xff00\ncaller: 0xffffffffffffffffffffffffffffffffffffff00\ncalldata_Fibonzi_4: 0xff\ncalldata_Fibonzi_0: 0xb149ece000000000000000000000000000000000000000000000000000000000\ncalldatasize_Fibonzi: 0x4\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/10/0xc352add7ad8cac8baa839d8c88e7e9d7df9a219b.sol",
        "function": "joinPool(uint8)",
        "lineno": 83,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 4558,
        "code": ");\n        assert(msg.value",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0x0\ncalldata_Fibonzi_4: 0x1\ncalldata_Fibonzi_0: 0xc83a981c00000000000000000000000000000000000000000000000000000000\ncalldatasize_Fibonzi: 0x4\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/10/0xc352add7ad8cac8baa839d8c88e7e9d7df9a219b.sol",
        "function": "openPool(uint8)",
        "lineno": 56,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 4574,
        "code": "oolId].price);\n   ",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0x0\ncalldata_Fibonzi_4: 0x0\ncalldata_Fibonzi_0: 0xc83a981c00000000000000000000000000000000000000000000000000000000\ncalldatasize_Fibonzi: 0x4\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/10/0xc352add7ad8cac8baa839d8c88e7e9d7df9a219b.sol",
        "function": "openPool(uint8)",
        "lineno": 57,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 5395,
        "code": "int sum = 0;\n ",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0xff00\ncalldata_Fibonzi_0: 0xd7af26f800000000000000000000000000000000000000000000000000000000\ncalldatasize_Fibonzi: 0x4\nstorage_3: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/10/0xc352add7ad8cac8baa839d8c88e7e9d7df9a219b.sol",
        "function": "getPlayersBalances()",
        "lineno": 273,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 5944,
        "code": "   \n    functi",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0xfe00\ncalldata_Fibonzi_4: 0xfe\ncalldata_Fibonzi_0: 0xc83a981c00000000000000000000000000000000000000000000000000000000\ncalldatasize_Fibonzi: 0x4\nstorage_3: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/10/0xc352add7ad8cac8baa839d8c88e7e9d7df9a219b.sol",
        "function": "openPool(uint8)",
        "lineno": 135,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}