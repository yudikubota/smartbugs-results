{
  "contract": "0x5209647ee5d6247daddae470ccc6a282c642f6d8",
  "tool": "mythril",
  "start": 1563533818.997252,
  "end": 1563534124.0252364,
  "duration": 305.02798438072205,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 687,
        "code": "  url = _url;\n  }\n\n  function balanceOf(address /*_owner*/) public vi",
        "debug": "calldata_ICOStartPromo_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_ICOStartPromo_0: 0x252498a200000000000000000000000000000000000000000000000000000000\ncalldatasize_ICOStartPromo: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `setUrl(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/10/0x5209647ee5d6247daddae470ccc6a282c642f6d8.sol",
        "function": "setUrl(string)",
        "lineno": 52,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1072,
        "code": "cipients.length > 0);\n    require(_recipients.length <= 200);\n    for (uint256 i = 0; i < _recipients.length; i++) {\n      emit Transfer(address(this), _recipients[i], 1000 ether);\n    }\n  }\n\n  function() public payable {\n  }\n\n  function transferOwnership(address newOwn",
        "debug": "calldata_ICOStartPromo_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_ICOStartPromo_0: 0x729ad39e00000000000000000000000000000000000000000000000000000000\ncalldatasize_ICOStartPromo: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `airdrop(address[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/10/0x5209647ee5d6247daddae470ccc6a282c642f6d8.sol",
        "function": "airdrop(address[])",
        "lineno": 76,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1442,
        "code": "ublic {\n    symbol = _symbol;\n  }\n\n  function setUrl(string _url) onlyOwner publi",
        "debug": "calldata_ICOStartPromo_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_ICOStartPromo_0: 0xb84c824600000000000000000000000000000000000000000000000000000000\ncalldatasize_ICOStartPromo: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `setSymbol(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/10/0x5209647ee5d6247daddae470ccc6a282c642f6d8.sol",
        "function": "setSymbol(string)",
        "lineno": 47,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1547,
        "code": "ublic {\n    name = _name;\n  }\n\n  function setSymbol(string _symbol) onlyO",
        "debug": "calldata_ICOStartPromo_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_ICOStartPromo_0: 0xc47f002700000000000000000000000000000000000000000000000000000000\ncalldatasize_ICOStartPromo: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `setName(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/10/0x5209647ee5d6247daddae470ccc6a282c642f6d8.sol",
        "function": "setName(string)",
        "lineno": 43,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 3578,
        "code": "mo {\n\n  string public url = \"https://icostart.ch/token-sale\";\n  string public name = \"icostart.ch/promo\";\n  string public symbol = \"ICHP\";\n  uint8 public decimals = 18;\n  uint256 public totalSupply = 1000000 ether;\n\n  address private owner;\n\n  event Transfer(address indexed _from, address indexed _to, uint256 _value);\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n  modifier onlyOwner() {\n    require(msg.sender == owner);\n    _;\n  }\n\n  function ICOStartPromo() public {\n    owner = msg.sender;\n  }\n\n  function setName(string _name) onlyOwner public {\n    name = _name;\n  }\n\n  function setSymbol(string _symbol) onlyOwner public {\n    symbol = _symbol;\n  }\n\n  function setUrl(string _url) onlyOwner public {\n    url = _url;\n  }\n\n  function balanceOf(address /*_owner*/) public view returns (uint256) {\n    return 1000 ether;\n  }\n\n  function transfer(address /*_to*/, uint256 /*_value*/) public returns (bool) {\n    return true;\n  }\n\n  function transferFrom(address /*_from*/, address /*_to*/, uint256 /*_value*/) public returns (bool) {\n    return true;\n  }\n\n  function approve(address /*_spender*/, uint256 /*_value*/) public returns (bool) {\n    return true;\n  }\n\n  function allowance(address /*_owner*/, address /*_spender*/) public view returns (uint256) {\n    return 0;\n  }\n\n  function airdrop(address[] _recipients) public onlyOwner {\n    require(_recipients.length > 0);\n    require(_recipients.length <= 200);\n    for (uint256 i = 0; i < _recipients.length; i++) {\n      emit Transfer(address(this), _recipients[i], 1000 ether);\n    }\n  }\n\n  function() public payable {\n  }\n\n  function transferOwnership(address newOwner) public onlyOwner {\n    require(newOwner != address(0));\n    emit OwnershipTransferred(owner, newOwner);\n    owner = newOwner;\n  }\n\n  function destroy() onlyOwner public {\n    selfdestruct(owner);\n  }\n\n}",
        "debug": "calldata_ICOStartPromo_4 + calldata_ICOStartPromo_4: 0x8000000000000000000000000000000000000000000000000000000000000000\nstorage_5: 0x0\ncaller: 0x0\ncalldata_ICOStartPromo_0: 0xc47f002700000000000000000000000000000000000000000000000000000000\ncalldatasize_ICOStartPromo: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `setName(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/10/0x5209647ee5d6247daddae470ccc6a282c642f6d8.sol",
        "function": "setName(string)",
        "lineno": 21,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 3592,
        "code": "mo {\n\n  string public url = \"https://icostart.ch/token-sale\";\n  string public name = \"icostart.ch/promo\";\n  string public symbol = \"ICHP\";\n  uint8 public decimals = 18;\n  uint256 public totalSupply = 1000000 ether;\n\n  address private owner;\n\n  event Transfer(address indexed _from, address indexed _to, uint256 _value);\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n  modifier onlyOwner() {\n    require(msg.sender == owner);\n    _;\n  }\n\n  function ICOStartPromo() public {\n    owner = msg.sender;\n  }\n\n  function setName(string _name) onlyOwner public {\n    name = _name;\n  }\n\n  function setSymbol(string _symbol) onlyOwner public {\n    symbol = _symbol;\n  }\n\n  function setUrl(string _url) onlyOwner public {\n    url = _url;\n  }\n\n  function balanceOf(address /*_owner*/) public view returns (uint256) {\n    return 1000 ether;\n  }\n\n  function transfer(address /*_to*/, uint256 /*_value*/) public returns (bool) {\n    return true;\n  }\n\n  function transferFrom(address /*_from*/, address /*_to*/, uint256 /*_value*/) public returns (bool) {\n    return true;\n  }\n\n  function approve(address /*_spender*/, uint256 /*_value*/) public returns (bool) {\n    return true;\n  }\n\n  function allowance(address /*_owner*/, address /*_spender*/) public view returns (uint256) {\n    return 0;\n  }\n\n  function airdrop(address[] _recipients) public onlyOwner {\n    require(_recipients.length > 0);\n    require(_recipients.length <= 200);\n    for (uint256 i = 0; i < _recipients.length; i++) {\n      emit Transfer(address(this), _recipients[i], 1000 ether);\n    }\n  }\n\n  function() public payable {\n  }\n\n  function transferOwnership(address newOwner) public onlyOwner {\n    require(newOwner != address(0));\n    emit OwnershipTransferred(owner, newOwner);\n    owner = newOwner;\n  }\n\n  function destroy() onlyOwner public {\n    selfdestruct(owner);\n  }\n\n}",
        "debug": "calldata_ICOStartPromo_4 + calldata_ICOStartPromo_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\nstorage_5: 0x0\ncaller: 0x0\ncalldata_ICOStartPromo_0: 0xc47f002700000000000000000000000000000000000000000000000000000000\ncalldatasize_ICOStartPromo: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `setName(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/10/0x5209647ee5d6247daddae470ccc6a282c642f6d8.sol",
        "function": "setName(string)",
        "lineno": 21,
        "title": "Integer Overflow ",
        "type": "Warning"
      }
    ],
    "success": true
  }
}