{"error": null, "issues": [{"address": 952, "code": "nutesInPeriod;\n    remainingTokensPerPeriod = _tokensPerPeriod;\n    in", "debug": "The exception is triggered under the following conditions:\n\nstorage_3 +\nkeccac_1461501637330902918203684832716283019655932542975_&\ncalldata_VestingAllocation_4: 0x8000\ncalldata_VestingAllocation_0: 0xa4f82f2700000000000000000000000000000000000000000000000000000000\ncalldatasize_VestingAllocation: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/23/0xfa74f89a6d4a918167c51132614bbbe193ee8c22.sol", "function": "_function_0xa4f82f27", "lineno": 563, "title": "Exception state", "type": "Informational"}, {"address": 1330, "code": "TokensPerPeriod = remainingTokensPerPeriod + tmp.tokensPerPeriod;\n  }\n\n ", "debug": "The exception is triggered under the following conditions:\n\nstorage_3 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_VestingAllocation_32_+_4: 0x8000\nstorage_0: 0x0\ncaller: 0x0\ncalldata_VestingAllocation_0: 0x1a62c92800000000000000000000000000000000000000000000000000000000\ncalldatasize_VestingAllocation: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/23/0xfa74f89a6d4a918167c51132614bbbe193ee8c22.sol", "function": "approveAllocation(address,address)", "lineno": 616, "title": "Exception state", "type": "Informational"}, {"address": 1965, "code": "n be claimed after periods\n   *\n   * @param _address - address for th", "debug": "The exception is triggered under the following conditions:\n\nstorage_3 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_VestingAllocation_32_+_4: 0x8000\ncalldata_VestingAllocation_32 + 36: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_1 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_VestingAllocation_32_+_4: 0xffffffffffffffffffffffffffffffffffffffff00\nstorage_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_0: 0x0\ncaller: 0x0\ncalldata_VestingAllocation_0: 0x39b8e0ff00000000000000000000000000000000000000000000000000000000\ncalldatasize_VestingAllocation: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/23/0xfa74f89a6d4a918167c51132614bbbe193ee8c22.sol", "function": "proposeAllocation(address,address,uint256)", "lineno": 597, "title": "Exception state", "type": "Informational"}, {"address": 2081, "code": "  function approveAllocation(address _approverAddress, address _addre", "debug": "The exception is triggered under the following conditions:\n\nstorage_3 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_VestingAllocation_32_+_4: 0x8000\ncalldata_VestingAllocation_32 + 36: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_1 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_VestingAllocation_32_+_4: 0x0\nstorage_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_0: 0x0\ncaller: 0x0\ncalldata_VestingAllocation_0: 0x39b8e0ff00000000000000000000000000000000000000000000000000000000\ncalldatasize_VestingAllocation: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/23/0xfa74f89a6d4a918167c51132614bbbe193ee8c22.sol", "function": "proposeAllocation(address,address,uint256)", "lineno": 601, "title": "Exception state", "type": "Informational"}, {"address": 2099, "code": ";\n\ncontract Alloca", "debug": "storage_1: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_3 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_VestingAllocation_32_+_4: 0x0\ncalldata_VestingAllocation_32 + 36: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_1 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_VestingAllocation_32_+_4: 0x0\nstorage_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_0: 0x0\ncaller: 0x0\ncalldata_VestingAllocation_0: 0x39b8e0ff00000000000000000000000000000000000000000000000000000000\ncalldatasize_VestingAllocation: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `proposeAllocation(address,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/23/0xfa74f89a6d4a918167c51132614bbbe193ee8c22.sol", "function": "proposeAllocation(address,address,uint256)", "lineno": 1, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2489, "code": "ess[] public allocationAddressList;\n}\n", "debug": "The exception is triggered under the following conditions:\n\ncalldata_VestingAllocation_4: 0x0\nstorage_1: 0x0\ncalldata_VestingAllocation_0: 0x4f22bcf800000000000000000000000000000000000000000000000000000000\ncalldatasize_VestingAllocation: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/23/0xfa74f89a6d4a918167c51132614bbbe193ee8c22.sol", "function": "_function_0x4f22bcf8", "lineno": 5, "title": "Exception state", "type": "Informational"}, {"address": 2884, "code": "lloc.tokensPerPeriod;\n      alloc.claimedPeriods = pe", "debug": "The exception is triggered under the following conditions:\n\nstorage_3 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_VestingAllocation_4: 0x8000\nstorage_0: 0x0\ncaller: 0x0\ncalldata_VestingAllocation_0: 0xbd95217800000000000000000000000000000000000000000000000000000000\ncalldatasize_VestingAllocation: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/23/0xfa74f89a6d4a918167c51132614bbbe193ee8c22.sol", "function": "rejectAllocation(address)", "lineno": 623, "title": "Exception state", "type": "Informational"}, {"address": 3006, "debug": "storage_4: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_3 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_VestingAllocation_4: 0x0\nstorage_0 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_VestingAllocation_4: 0x57f25cd000000000000000000000000000000000000000000000000000000000\nstorage_0: 0x0\ncaller: 0x0\ncalldata_VestingAllocation_0: 0xbd95217800000000000000000000000000000000000000000000000000000000\ncalldatasize_VestingAllocation: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `rejectAllocation(address)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/23/0xfa74f89a6d4a918167c51132614bbbe193ee8c22.sol", "function": "rejectAllocation(address)", "lineno": 630, "title": "Integer Overflow ", "type": "Warning"}, {"address": 3128, "debug": "The exception is triggered under the following conditions:\n\nstorage_3 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_VestingAllocation_4: 0x8000\ncalldata_VestingAllocation_0: 0xdf8de3e700000000000000000000000000000000000000000000000000000000\ncalldatasize_VestingAllocation: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/23/0xfa74f89a6d4a918167c51132614bbbe193ee8c22.sol", "function": "claimTokens(address)", "lineno": 630, "title": "Exception state", "type": "Informational"}, {"address": 3144, "debug": "storage_3: 0x888888888888888888888888888888888888888888888888888888888888889\nstorage_3 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_VestingAllocation_4: 0x100\ncalldata_VestingAllocation_0: 0xdf8de3e700000000000000000000000000000000000000000000000000000000\ncalldatasize_VestingAllocation: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `claimTokens(address)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/23/0xfa74f89a6d4a918167c51132614bbbe193ee8c22.sol", "function": "claimTokens(address)", "lineno": 630, "title": "Integer Overflow ", "type": "Warning"}, {"address": 3149, "debug": "storage_3 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_VestingAllocation_4: 0x100\ntimestamp: 0x0\nstorage_6: 0x1\ncalldata_VestingAllocation_0: 0xdf8de3e700000000000000000000000000000000000000000000000000000000\ncalldatasize_VestingAllocation: 0x4\ncallvalue: 0x0\n", "description": "A possible integer underflow exists in the function `claimTokens(address)`.\nThe subtraction may result in a value < 0.", "filename": "/unique_chucks/23/0xfa74f89a6d4a918167c51132614bbbe193ee8c22.sol", "function": "claimTokens(address)", "lineno": 630, "title": "Integer Underflow", "type": "Warning"}, {"address": 3157, "debug": "The exception is triggered under the following conditions:\n\nstorage_3: 0x0\nstorage_3 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_VestingAllocation_4: 0x100\ncalldata_VestingAllocation_0: 0xdf8de3e700000000000000000000000000000000000000000000000000000000\ncalldatasize_VestingAllocation: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/23/0xfa74f89a6d4a918167c51132614bbbe193ee8c22.sol", "function": "claimTokens(address)", "lineno": 630, "title": "Exception state", "type": "Informational"}], "success": true}