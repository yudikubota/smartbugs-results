{
  "contract": "0x06779e2a75cc5b7ad2c14cf98d88cf2cfcfcc6f1",
  "tool": "mythril",
  "start": 1563637669.7783775,
  "end": 1563638114.1433778,
  "duration": 444.3650002479553,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 411,
        "code": ";\n\n// --> http://l",
        "debug": "callvalue: 0x1ff973d6540000\nstorage_6: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_5: 0xff00\nstorage_8: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncaller: 0xffffffffffffffffffffffffffffffffffffff00\ncalldata_lucky9io_0: 0x1600000000000000000000000000000000000000000000000000000000\ncalldatasize_lucky9io: 0x4\n",
        "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/25/0x06779e2a75cc5b7ad2c14cf98d88cf2cfcfcc6f1.sol",
        "function": "fallback",
        "lineno": 1,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 514,
        "code": ";\n\n// --> http://l",
        "debug": "storage_7: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncallvalue: 0x2081f316348000\nstorage_5: 0xff00\nstorage_8: 0x0\nstorage_6: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffff00\ncalldata_lucky9io_0: 0x200000000000000000000000000000000000000000000000000000000\ncalldatasize_lucky9io: 0x4\n",
        "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/25/0x06779e2a75cc5b7ad2c14cf98d88cf2cfcfcc6f1.sol",
        "function": "fallback",
        "lineno": 1,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 667,
        "code": "        }\n        entries_count+",
        "debug": "The exception is triggered under the following conditions:\n\ncallvalue: 0x1ff973d6540000\nstorage_5: 0xff00\nstorage_8: 0x0\nstorage_7: 0x0\nstorage_6: 0x1\ncaller: 0xffffffffffffffffffffffffffffffffffffff00\ncalldata_lucky9io_0: 0x1600000000000000000000000000000000000000000000000000000000\ncalldatasize_lucky9io: 0x4\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/25/0x06779e2a75cc5b7ad2c14cf98d88cf2cfcfcc6f1.sol",
        "function": "fallback",
        "lineno": 62,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 700,
        "code": " }\n\n    functio",
        "debug": "storage_8: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncallvalue: 0x1ff973d6540000\nstorage_5: 0xff00\nstorage_6: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncaller: 0xffffffffffffffffffffffffffffffffffffff00\ncalldata_lucky9io_0: 0x1600000000000000000000000000000000000000000000000000000000\ncalldatasize_lucky9io: 0x4\n",
        "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/25/0x06779e2a75cc5b7ad2c14cf98d88cf2cfcfcc6f1.sol",
        "function": "fallback",
        "lineno": 67,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 718,
        "code": "rs(uint random_",
        "debug": "storage_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncallvalue: 0x1ff973d6540000\nstorage_5: 0xff00\nstorage_8: 0x0\nstorage_6: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffff00\ncalldata_lucky9io_0: 0x1600000000000000000000000000000000000000000000000000000000\ncalldatasize_lucky9io: 0x4\n",
        "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/25/0x06779e2a75cc5b7ad2c14cf98d88cf2cfcfcc6f1.sol",
        "function": "fallback",
        "lineno": 69,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1416,
        "code": ";\n\n            if(((",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_8: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_5: 0x0\ncaller: 0x0\ncalldata_lucky9io_0: 0x13123d5200000000000000000000000000000000000000000000000000000000\ncalldatasize_lucky9io: 0x4\nstorage_6: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/25/0x06779e2a75cc5b7ad2c14cf98d88cf2cfcfcc6f1.sol",
        "function": "pickWinners(uint256)",
        "lineno": 73,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 1548,
        "code": "= 1) {\n             ",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_6: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_8: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_5: 0x0\ncaller: 0x0\ncalldata_lucky9io_0: 0x13123d5200000000000000000000000000000000000000000000000000000000\ncalldatasize_lucky9io: 0x4\nstorage_7: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/25/0x06779e2a75cc5b7ad2c14cf98d88cf2cfcfcc6f1.sol",
        "function": "pickWinners(uint256)",
        "lineno": 75,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2709,
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function transferHouseEdge(uint256). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/25/0x06779e2a75cc5b7ad2c14cf98d88cf2cfcfcc6f1.sol",
        "function": "transferHouseEdge(uint256)",
        "lineno": 125,
        "title": "Transaction order dependence",
        "type": "Warning"
      }
    ],
    "success": true
  }
}