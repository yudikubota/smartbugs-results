{"error": null, "issues": [{"address": 4302, "code": "pdates totalSupply\n   ", "debug": "The exception is triggered under the following conditions:\n\nstorage_6: 0x0\ncaller: 0x0\ncalldata_tokenRecipient_0: 0x3c39911a00000000000000000000000000000000000000000000000000000000\ncalldatasize_tokenRecipient: 0x4\ncalldata_tokenRecipient_4: 0x0\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/9/0x6ee294117fdb8decf4097cd4e73de7c59eed93d7.sol", "function": "_function_0x3c39911a", "lineno": 252, "title": "Exception state", "type": "Informational"}, {"address": 4333, "code": "int ( msg.sender , ( _amount *", "debug": "The exception is triggered under the following conditions:\n\nstorage_6: 0xff00\ncalldata_tokenRecipient_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncaller: 0xff\ncalldata_tokenRecipient_0: 0x3c39911a00000000000000000000000000000000000000000000000000000000\ncalldatasize_tokenRecipient: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/9/0x6ee294117fdb8decf4097cd4e73de7c59eed93d7.sol", "function": "_function_0x3c39911a", "lineno": 253, "title": "Exception state", "type": "Informational"}, {"address": 4345, "code": "  \n    function d", "debug": "calldata_tokenRecipient_4: 0xb2ca30ad957af0006ba4e7c6e4a78ea2c02504a9cf8823ed01162c7304015831\nstorage_6: 0x0\ncaller: 0x0\ncalldata_tokenRecipient_0: 0x3c39911a00000000000000000000000000000000000000000000000000000000\ncalldatasize_tokenRecipient: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `_function_0x3c39911a`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/9/0x6ee294117fdb8decf4097cd4e73de7c59eed93d7.sol", "function": "_function_0x3c39911a", "lineno": 256, "title": "Integer Overflow ", "type": "Warning"}, {"address": 9966, "code": "\n    }\n\n    fu", "debug": "The exception is triggered under the following conditions:\n\ncalldata_tokenRecipient_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_tokenRecipient_0: 0x42966c6800000000000000000000000000000000000000000000000000000000\ncalldatasize_tokenRecipient: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/9/0x6ee294117fdb8decf4097cd4e73de7c59eed93d7.sol", "function": "burn(uint256)", "lineno": 39, "title": "Exception state", "type": "Informational"}, {"address": 9984, "code": "urn c", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x95d70270c8bdc2bd96fef51fb8ad9800410f4ff641d3c2959f04f06c30ec0000\ncalldata_tokenRecipient_4: 0x8b24788edb90d826aa134201313844e1d8e147faa1ff386000027aee7f1\nstorage_6: 0x0\ncaller: 0x0\ncalldata_tokenRecipient_0: 0x3c39911a00000000000000000000000000000000000000000000000000000000\ncalldatasize_tokenRecipient: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `_function_0x3c39911a`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/9/0x6ee294117fdb8decf4097cd4e73de7c59eed93d7.sol", "function": "_function_0x3c39911a", "lineno": 45, "title": "Integer Overflow ", "type": "Warning"}, {"address": 9997, "code": "\ncontract ERC2", "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x94aa320907f49d505ffdb4001557129dffd88061d1a842133e02029c06bc0000\ncalldata_tokenRecipient_4: 0x26711de4cc822b8049d188008bd1dcd3b22260792e027a12a0d64528ab51\nstorage_6: 0x0\ncaller: 0x0\ncalldata_tokenRecipient_0: 0x3c39911a00000000000000000000000000000000000000000000000000000000\ncalldatasize_tokenRecipient: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/9/0x6ee294117fdb8decf4097cd4e73de7c59eed93d7.sol", "function": "_function_0x3c39911a", "lineno": 49, "title": "Exception state", "type": "Informational"}], "success": true}