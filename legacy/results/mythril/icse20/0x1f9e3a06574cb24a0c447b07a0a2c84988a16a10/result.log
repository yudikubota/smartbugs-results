{"error": null, "issues": [{"address": 933, "code": "\t\t}\t\n\t\t\n    }\n\t\n\t\n//** Functio", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/16/0x1f9e3a06574cb24a0c447b07a0a2c84988a16a10.sol", "function": "fallback", "lineno": 199, "title": "Message call to external contract", "type": "Informational"}, {"address": 933, "code": "\t\t}\t\n\t\t\n    }\n\t\n\t\n//** Functio", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1170\n", "filename": "/unique_chucks/16/0x1f9e3a06574cb24a0c447b07a0a2c84988a16a10.sol", "function": "fallback", "lineno": 199, "title": "Multiple Calls", "type": "Information"}, {"address": 1170, "code": " function CashbackCode(address _cashbackcod", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/16/0x1f9e3a06574cb24a0c447b07a0a2c84988a16a10.sol", "function": "fallback", "lineno": 205, "title": "Message call to external contract", "type": "Informational"}, {"address": 1368, "code": "\n\t\trequire(_cashbackcode != msg.sender);\n\t\t\n\t\tif (cashbackcode[msg.sender] == 0) {\n\t\t", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/16/0x1f9e3a06574cb24a0c447b07a0a2c84988a16a10.sol", "function": "fallback", "lineno": 205, "title": "State change after external call", "type": "Warning"}, {"address": 5208, "code": ") pub", "debug": "storage_8980041631919178290161226234105977776452779202751091583642356499240698725347: 0xb2c81e3be60b809eebca250ae5f3958de8241f3c0942692d3cecd1fd00743211\ncallvalue: 0x93931c13e507cbbcbf74d9eee4fb920eeaef84aa5110428da2eddb017d5ebcdd\ncalldatasize_ldoh: 0x3\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/16/0x1f9e3a06574cb24a0c447b07a0a2c84988a16a10.sol", "function": "fallback", "lineno": 730, "title": "Integer Overflow ", "type": "Warning"}, {"address": 5394, "code": "hereumVault;    \t// 07 -- > Reserve Funds\t\t\t\t\n\tma", "debug": "The exception is triggered under the following conditions:\n\ncalldata_ldoh_32 + 4: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\ncalldata_ldoh_4: 0x0\ncalldata_ldoh_0: 0x11a3311c00000000000000000000000000000000000000000000000000000000\ncalldatasize_ldoh: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/16/0x1f9e3a06574cb24a0c447b07a0a2c84988a16a10.sol", "function": "_function_0x11a3311c", "lineno": 142, "title": "Exception state", "type": "Informational"}, {"address": 6719, "code": "=====\n    =      SAFE MATH FUN", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/16/0x1f9e3a06574cb24a0c447b07a0a2c84988a16a10.sol", "function": "Send0ETH_Withdraw(address)", "lineno": 681, "title": "Message call to external contract", "type": "Warning"}, {"address": 6719, "code": "=====\n    =      SAFE MATH FUN", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 6954\n", "filename": "/unique_chucks/16/0x1f9e3a06574cb24a0c447b07a0a2c84988a16a10.sol", "function": "Send0ETH_Withdraw(address)", "lineno": 681, "title": "Multiple Calls", "type": "Information"}, {"address": 6954, "code": "=========================*/  \t\n\t\n\t", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/16/0x1f9e3a06574cb24a0c447b07a0a2c84988a16a10.sol", "function": "Send0ETH_Withdraw(address)", "lineno": 683, "title": "Message call to external contract", "type": "Warning"}], "success": true}