{
  "contract": "0x8bccd8547cd101ee78c33c41476670cf58fff411",
  "tool": "mythril",
  "start": 1563764681.7084713,
  "end": 1563764770.867057,
  "duration": 89.15858578681946,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 292,
        "code": "erence, address _sender) onlyProxy() returns(bool) {\n        return _transferWithReference(_to, _value, _reference, _sender);\n    }\n\n    /**\n     * Calls back without modifications.\n     *\n     * @return",
        "debug": "calldata_BMCAssetProxy_32 + 36: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_BMCAssetProxy_0: 0x6a630ee700000000000000000000000000000000000000000000000000000000\ncalldatasize_BMCAssetProxy: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `__transferWithReference(address,uint256,string,address)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/43/0x8bccd8547cd101ee78c33c41476670cf58fff411.sol",
        "function": "__transferWithReference(address,uint256,string,address)",
        "lineno": 71,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 747,
        "code": "nce, address _sender) onlyProxy() returns(bool) {\n        return _transferFromWithReference(_from, _to, _value, _reference, _sender);\n    }\n\n    /**\n     * Calls back without modifications.\n     *\n     * @return success.\n     * @dev ",
        "debug": "calldata_BMCAssetProxy_32 + 68: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_BMCAssetProxy_0: 0xec698a2800000000000000000000000000000000000000000000000000000000\ncalldatasize_BMCAssetProxy: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `__transferFromWithReference(address,address,uint256,string,address)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/43/0x8bccd8547cd101ee78c33c41476670cf58fff411.sol",
        "function": "__transferFromWithReference(address,address,uint256,string,address)",
        "lineno": 93,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1881,
        "code": "    * Passes execution into virtual function.\n     *\n     * Can",
        "debug": "",
        "description": "This contract executes a message call to an address found at storage slot 0. This storage slot can be written to by calling the function `_function_0x19ab453c`. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/43/0x8bccd8547cd101ee78c33c41476670cf58fff411.sol",
        "function": "__transferWithReference(address,uint256,string,address)",
        "lineno": 86,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 1881,
        "code": "    * Passes execution into virtual function.\n     *\n     * Can",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function __transferWithReference(address,uint256,string,address). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/43/0x8bccd8547cd101ee78c33c41476670cf58fff411.sol",
        "function": "__transferWithReference(address,uint256,string,address)",
        "lineno": 86,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 2200,
        "code": "al Blackmooncrypto.com token implementatio",
        "debug": "",
        "description": "This contract executes a message call to an address found at storage slot 0. This storage slot can be written to by calling the function `_function_0x19ab453c`. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/43/0x8bccd8547cd101ee78c33c41476670cf58fff411.sol",
        "function": "__approve(address,uint256,address)",
        "lineno": 134,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 2200,
        "code": "al Blackmooncrypto.com token implementatio",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function __approve(address,uint256,address). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/43/0x8bccd8547cd101ee78c33c41476670cf58fff411.sol",
        "function": "__approve(address,uint256,address)",
        "lineno": 134,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 2679,
        "code": "s execution into virtual function.\n     *\n     * Can only be called by ass",
        "debug": "",
        "description": "This contract executes a message call to an address found at storage slot 0. This storage slot can be written to by calling the function `_function_0x19ab453c`. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/43/0x8bccd8547cd101ee78c33c41476670cf58fff411.sol",
        "function": "__transferFromWithReference(address,address,uint256,string,address)",
        "lineno": 108,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 2679,
        "code": "s execution into virtual function.\n     *\n     * Can only be called by ass",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function __transferFromWithReference(address,address,uint256,string,address). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/43/0x8bccd8547cd101ee78c33c41476670cf58fff411.sol",
        "function": "__transferFromWithReference(address,address,uint256,string,address)",
        "lineno": 108,
        "title": "Transaction order dependence",
        "type": "Warning"
      }
    ],
    "success": true
  }
}