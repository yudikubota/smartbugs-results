{"error": null, "issues": [{"address": 702, "code": "==================", "debug": "The exception is triggered under the following conditions:\n\nstorage_4: 0xfe00\ncalldata_Vault_0: 0xc19d93fb00000000000000000000000000000000000000000000000000000000\ncalldatasize_Vault: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/27/0x2b7a6374fbf06c080c36ff43fa99f9d6f09019ab.sol", "function": "_function_0xc19d93fb", "lineno": 658, "title": "Exception state", "type": "Informational"}, {"address": 1180, "code": "=========================", "debug": "The exception is triggered under the following conditions:\n\nstorage_4: 0xfe00\ncalldata_Vault_0: 0xefe6a8b00000000000000000000000000000000000000000000000000000000\ncalldatasize_Vault: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/27/0x2b7a6374fbf06c080c36ff43fa99f9d6f09019ab.sol", "function": "deposit(address,uint256,uint256)", "lineno": 685, "title": "Exception state", "type": "Informational"}, {"address": 1713, "code": "                    Public", "debug": "The exception is triggered under the following conditions:\n\nstorage_4: 0xfe00\ncalldata_Vault_0: 0x1e4bd42c00000000000000000000000000000000000000000000000000000000\ncalldatasize_Vault: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/27/0x2b7a6374fbf06c080c36ff43fa99f9d6f09019ab.sol", "function": "claimAllTokens()", "lineno": 686, "title": "Exception state", "type": "Informational"}, {"address": 1846, "code": "=========================", "debug": "The exception is triggered under the following conditions:\n\nstorage_4: 0xfe00\ncalldata_Vault_0: 0x29a6344a00000000000000000000000000000000000000000000000000000000\ncalldatasize_Vault: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/27/0x2b7a6374fbf06c080c36ff43fa99f9d6f09019ab.sol", "function": "removeSupporter(address)", "lineno": 685, "title": "Exception state", "type": "Informational"}, {"address": 2636, "code": ";\n        uint256 depositedETHValue = depositedE", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/27/0x2b7a6374fbf06c080c36ff43fa99f9d6f09019ab.sol", "function": "removeSupporter(address)", "lineno": 731, "title": "Message call to external contract", "type": "Informational"}, {"address": 2636, "code": ";\n        uint256 depositedETHValue = depositedE", "debug": "", "description": "A possible transaction order independence vulnerability exists in function removeSupporter(address). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/27/0x2b7a6374fbf06c080c36ff43fa99f9d6f09019ab.sol", "function": "removeSupporter(address)", "lineno": 731, "title": "Transaction order dependence", "type": "Warning"}, {"address": 2805, "code": "                    Public", "debug": "The exception is triggered under the following conditions:\n\nstorage_4: 0xfe00\ncalldata_Vault_0: 0x46e04a2f00000000000000000000000000000000000000000000000000000000\ncalldatasize_Vault: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/27/0x2b7a6374fbf06c080c36ff43fa99f9d6f09019ab.sol", "function": "claimTokens(uint256)", "lineno": 686, "title": "Exception state", "type": "Informational"}, {"address": 4419, "code": "=========================", "debug": "The exception is triggered under the following conditions:\n\nstorage_4: 0xfe00\ncalldata_Vault_0: 0xc803ae2a00000000000000000000000000000000000000000000000000000000\ncalldatasize_Vault: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/27/0x2b7a6374fbf06c080c36ff43fa99f9d6f09019ab.sol", "function": "kycComplete()", "lineno": 685, "title": "Exception state", "type": "Informational"}, {"address": 4683, "code": "                    Public", "debug": "The exception is triggered under the following conditions:\n\nstorage_4: 0xfe00\ncalldata_Vault_0: 0xed2ddeae00000000000000000000000000000000000000000000000000000000\ncalldatasize_Vault: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/27/0x2b7a6374fbf06c080c36ff43fa99f9d6f09019ab.sol", "function": "claimAllSupporterTokensByOwner(address)", "lineno": 686, "title": "Exception state", "type": "Informational"}, {"address": 5068, "code": " vault`s wallet, leaving all tokens to be clai", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/27/0x2b7a6374fbf06c080c36ff43fa99f9d6f09019ab.sol", "function": "claimAllSupporterTokensByOwner(address)", "lineno": 772, "title": "Message call to external contract", "type": "Informational"}, {"address": 5068, "code": " vault`s wallet, leaving all tokens to be clai", "debug": "", "description": "A possible transaction order independence vulnerability exists in function claimAllSupporterTokensByOwner(address). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/27/0x2b7a6374fbf06c080c36ff43fa99f9d6f09019ab.sol", "function": "claimAllSupporterTokensByOwner(address)", "lineno": 772, "title": "Transaction order dependence", "type": "Warning"}, {"address": 5434, "code": "    r", "debug": "storage_4: 0x0\ncalldata_Vault_32 + 36: 0x57f25cd000000000000000000000000000000000000000000000000000000000\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_Vault_4: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_0: 0x0\ncaller: 0x0\ncalldata_Vault_0: 0xefe6a8b00000000000000000000000000000000000000000000000000000000\ncalldatasize_Vault: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `deposit(address,uint256,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/27/0x2b7a6374fbf06c080c36ff43fa99f9d6f09019ab.sol", "function": "deposit(address,uint256,uint256)", "lineno": 30, "title": "Integer Overflow ", "type": "Warning"}, {"address": 5447, "code": ";\n  }\n}\n\n\n/**\n", "debug": "The exception is triggered under the following conditions:\n\nstorage_4: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_Vault_4: 0x1\ncalldata_Vault_32 + 36: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_0: 0x0\ncaller: 0x0\ncalldata_Vault_0: 0xefe6a8b00000000000000000000000000000000000000000000000000000000\ncalldatasize_Vault: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/27/0x2b7a6374fbf06c080c36ff43fa99f9d6f09019ab.sol", "function": "deposit(address,uint256,uint256)", "lineno": 30, "title": "Exception state", "type": "Informational"}], "success": true}