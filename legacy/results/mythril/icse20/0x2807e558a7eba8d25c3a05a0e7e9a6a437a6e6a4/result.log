{"error": null, "issues": [{"address": 455, "code": "de, bytes data) owner_only {\n        zones[node] = data;\n    }\n}", "debug": "calldata_Resolver_32 + 4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_Resolver_0: 0x76196c8800000000000000000000000000000000000000000000000000000000\ncalldatasize_Resolver: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `setDnsrr(bytes32,bytes)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/47/0x2807e558a7eba8d25c3a05a0e7e9a6a437a6e6a4.sol", "function": "setDnsrr(bytes32,bytes)", "lineno": 29, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1165, "code": "t DNSResolver is Resolver {\n    address public owner;\n    mapping(bytes32=>bytes) zones;\n    \n    function OwnedResolver() {\n        owner = msg.sender;\n    }\n    \n    modifier owner_only {\n        if(msg.sender != owner) throw;\n        _;\n    }\n    \n    function supportsInterface(bytes4 interfaceID) constant returns (bool) {\n        return interfaceID == 0x126a710e;\n    }\n    \n    function dnsrr(bytes32 node) constant returns (bytes data) {\n        return zones[node];\n    }\n    \n    function setDnsrr(bytes32 node, bytes data) owner_only {\n        zones[node] = data;\n    }\n}", "debug": "storage_keccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\ncalldata_Resolver_4: 0xbac1c3147749165dd7d1977fffffffffffffffffffffffffffffffffffffffc5\nkeccac_keccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\ncalldata_Resolver_4: 0xff13e6a7459ae5a4c49c419171c3f89100a371508000000000129200000219e2\nstorage_0: 0x0\ncaller: 0x0\ncalldata_Resolver_0: 0x76196c8800000000000000000000000000000000000000000000000000000000\ncalldatasize_Resolver: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `setDnsrr(bytes32,bytes)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/47/0x2807e558a7eba8d25c3a05a0e7e9a6a437a6e6a4.sol", "function": "setDnsrr(bytes32,bytes)", "lineno": 8, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1194, "code": "t DNSResolver is Resolver {\n    address public owner;\n    mapping(bytes32=>bytes) zones;\n    \n    function OwnedResolver() {\n        owner = msg.sender;\n    }\n    \n    modifier owner_only {\n        if(msg.sender != owner) throw;\n        _;\n    }\n    \n    function supportsInterface(bytes4 interfaceID) constant returns (bool) {\n        return interfaceID == 0x126a710e;\n    }\n    \n    function dnsrr(bytes32 node) constant returns (bytes data) {\n        return zones[node];\n    }\n    \n    function setDnsrr(bytes32 node, bytes data) owner_only {\n        zones[node] = data;\n    }\n}", "debug": "calldata_Resolver_4 + calldata_Resolver_32 + 4: 0x8000000000000000000000000000000000000000000000000000000000000000\nstorage_0: 0x0\ncaller: 0x0\ncalldata_Resolver_0: 0x76196c8800000000000000000000000000000000000000000000000000000000\ncalldatasize_Resolver: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `setDnsrr(bytes32,bytes)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/47/0x2807e558a7eba8d25c3a05a0e7e9a6a437a6e6a4.sol", "function": "setDnsrr(bytes32,bytes)", "lineno": 8, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1208, "code": "t DNSResolver is Resolver {\n    address public owner;\n    mapping(bytes32=>bytes) zones;\n    \n    function OwnedResolver() {\n        owner = msg.sender;\n    }\n    \n    modifier owner_only {\n        if(msg.sender != owner) throw;\n        _;\n    }\n    \n    function supportsInterface(bytes4 interfaceID) constant returns (bool) {\n        return interfaceID == 0x126a710e;\n    }\n    \n    function dnsrr(bytes32 node) constant returns (bytes data) {\n        return zones[node];\n    }\n    \n    function setDnsrr(bytes32 node, bytes data) owner_only {\n        zones[node] = data;\n    }\n}", "debug": "calldata_Resolver_4 + calldata_Resolver_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\nstorage_0: 0x0\ncaller: 0x0\ncalldata_Resolver_0: 0x76196c8800000000000000000000000000000000000000000000000000000000\ncalldatasize_Resolver: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `setDnsrr(bytes32,bytes)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/47/0x2807e558a7eba8d25c3a05a0e7e9a6a437a6e6a4.sol", "function": "setDnsrr(bytes32,bytes)", "lineno": 8, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1230, "code": "t DNSResolver is Resolver {\n    address public owner;\n    mapping(bytes32=>bytes) zones;\n    \n    function OwnedResolver() {\n        owner = msg.sender;\n    }\n    \n    modifier owner_only {\n        if(msg.sender != owner) throw;\n        _;\n    }\n    \n    function supportsInterface(bytes4 interfaceID) constant returns (bool) {\n        return interfaceID == 0x126a710e;\n    }\n    \n    function dnsrr(bytes32 node) constant returns (bytes data) {\n        return zones[node];\n    }\n    \n    function setDnsrr(bytes32 node, bytes data) owner_only {\n        zones[node] = data;\n    }\n}", "debug": "calldata_Resolver_4 + calldata_Resolver_32 + 4: 0x4000f04100100000000000000000000000000000d6401413fffffffffffffe0\nkeccac_keccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\ncalldata_Resolver_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_0: 0x0\ncaller: 0x0\ncalldata_Resolver_0: 0x76196c8800000000000000000000000000000000000000000000000000000000\ncalldatasize_Resolver: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `setDnsrr(bytes32,bytes)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/47/0x2807e558a7eba8d25c3a05a0e7e9a6a437a6e6a4.sol", "function": "setDnsrr(bytes32,bytes)", "lineno": 8, "title": "Integer Overflow ", "type": "Warning"}], "success": true}