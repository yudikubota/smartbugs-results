{"error": null, "issues": [{"address": 453, "debug": "storage_4: 0xf\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x7\nstorage_78338746147236970124700731725183845421594913511827187288591969170390706184117: 0xf\ncalldatasize_TokenFactoryAirdropToken: 0x3\n", "description": "A possible integer underflow exists in the function `fallback`.\nThe subtraction may result in a value < 0.", "filename": "/unique_chucks/21/0xcffea9528076d68aa6700fe356a4cd9590846fea.sol", "function": "fallback", "lineno": 324, "title": "Integer Underflow", "type": "Warning"}, {"address": 4087, "debug": "", "description": "A possible transaction order independence vulnerability exists in function safeWithdrawal(uint256). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/21/0xcffea9528076d68aa6700fe356a4cd9590846fea.sol", "function": "safeWithdrawal(uint256)", "lineno": 324, "title": "Transaction order dependence", "type": "Warning"}, {"address": 4197, "debug": "", "description": "A possible transaction order independence vulnerability exists in function safeWithdrawal(uint256). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/21/0xcffea9528076d68aa6700fe356a4cd9590846fea.sol", "function": "safeWithdrawal(uint256)", "lineno": 324, "title": "Transaction order dependence", "type": "Warning"}, {"address": 6897, "code": "\n/**\n", "debug": "calldata_TokenFactoryAirdropToken_32 + 4: 0x57f25cd000000000000000000000000000000000000000000000000000000000\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TokenFactoryAirdropToken_4: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncalldata_TokenFactoryAirdropToken_0: 0xd73dd62300000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenFactoryAirdropToken: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `increaseApproval(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/21/0xcffea9528076d68aa6700fe356a4cd9590846fea.sol", "function": "increaseApproval(address,uint256)", "lineno": 102, "title": "Integer Overflow ", "type": "Warning"}, {"address": 6910, "code": "le ERC20Basic\n", "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TokenFactoryAirdropToken_4: 0x1\ncalldata_TokenFactoryAirdropToken_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_TokenFactoryAirdropToken_0: 0xd73dd62300000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenFactoryAirdropToken: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/21/0xcffea9528076d68aa6700fe356a4cd9590846fea.sol", "function": "increaseApproval(address,uint256)", "lineno": 104, "title": "Exception state", "type": "Informational"}], "success": true}