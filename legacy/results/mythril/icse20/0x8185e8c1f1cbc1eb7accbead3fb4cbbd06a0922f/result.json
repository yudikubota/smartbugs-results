{
  "contract": "0x8185e8c1f1cbc1eb7accbead3fb4cbbd06a0922f",
  "tool": "mythril",
  "start": 1563521631.096027,
  "end": 1563522155.104197,
  "duration": 524.0081701278687,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 357,
        "code": "ring _reason) external onlyOwner returns (bool success) {\n        require(!isDeprecated());\n        address _currentAddress = this;\n        require(_newAddress != _currentAddress);\n        deprecatedSince = block.timestamp;\n        newAddress = _newAddress;\n        newVersion = _newVersion;\n        reason = _reason;\n        Deprecated(_newAddress, _newVersion, _reason);\n        require(!Upgradable(_newAddress).isDeprecated());\n        return true;\n    }\n\n    /**\n     * @notice check if the contract is deprecated\n     */\n    func",
        "debug": "calldata_Upgradable_32 + 4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_Upgradable_0: 0x3fcce62600000000000000000000000000000000000000000000000000000000\ncalldatasize_Upgradable: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `setDeprecated(address,string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/10/0x8185e8c1f1cbc1eb7accbead3fb4cbbd06a0922f.sol",
        "function": "setDeprecated(address,string,string)",
        "lineno": 67,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 363,
        "code": "ring _reason) external onlyOwner returns (bool success) {\n        require(!isDeprecated());\n        address _currentAddress = this;\n        require(_newAddress != _currentAddress);\n        deprecatedSince = block.timestamp;\n        newAddress = _newAddress;\n        newVersion = _newVersion;\n        reason = _reason;\n        Deprecated(_newAddress, _newVersion, _reason);\n        require(!Upgradable(_newAddress).isDeprecated());\n        return true;\n    }\n\n    /**\n     * @notice check if the contract is deprecated\n     */\n    func",
        "debug": "calldata_Upgradable_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc\ncalldata_Upgradable_0: 0x3fcce62600000000000000000000000000000000000000000000000000000000\ncalldatasize_Upgradable: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `setDeprecated(address,string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/10/0x8185e8c1f1cbc1eb7accbead3fb4cbbd06a0922f.sol",
        "function": "setDeprecated(address,string,string)",
        "lineno": 67,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 381,
        "code": "ring _reason) external onlyOwner returns (bool success) {\n        require(!isDeprecated());\n        address _currentAddress = this;\n        require(_newAddress != _currentAddress);\n        deprecatedSince = block.timestamp;\n        newAddress = _newAddress;\n        newVersion = _newVersion;\n        reason = _reason;\n        Deprecated(_newAddress, _newVersion, _reason);\n        require(!Upgradable(_newAddress).isDeprecated());\n        return true;\n    }\n\n    /**\n     * @notice check if the contract is deprecated\n     */\n    func",
        "debug": "calldata_Upgradable_32 + 36: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_Upgradable_0: 0x3fcce62600000000000000000000000000000000000000000000000000000000\ncalldatasize_Upgradable: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `setDeprecated(address,string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/10/0x8185e8c1f1cbc1eb7accbead3fb4cbbd06a0922f.sol",
        "function": "setDeprecated(address,string,string)",
        "lineno": 67,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 387,
        "code": "ring _reason) external onlyOwner returns (bool success) {\n        require(!isDeprecated());\n        address _currentAddress = this;\n        require(_newAddress != _currentAddress);\n        deprecatedSince = block.timestamp;\n        newAddress = _newAddress;\n        newVersion = _newVersion;\n        reason = _reason;\n        Deprecated(_newAddress, _newVersion, _reason);\n        require(!Upgradable(_newAddress).isDeprecated());\n        return true;\n    }\n\n    /**\n     * @notice check if the contract is deprecated\n     */\n    func",
        "debug": "calldata_Upgradable_32 + 36: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc\ncalldata_Upgradable_0: 0x3fcce62600000000000000000000000000000000000000000000000000000000\ncalldatasize_Upgradable: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `setDeprecated(address,string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/10/0x8185e8c1f1cbc1eb7accbead3fb4cbbd06a0922f.sol",
        "function": "setDeprecated(address,string,string)",
        "lineno": 67,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2538,
        "code": "public newAddress;\n\n    uint    public deprecatedSince;\n\n    string  public version;\n    string  public newVersion;\n    string  public reason;\n\n    event Deprecated(address newAddress, string newVersion, string reason);\n\n    /**\n     */\n    function Upgradable(string _version) public {\n        version = _version;\n    }\n\n    /**\n     */\n    function setDeprecated(address _newAddress, string _newVersion, string _reason) external onlyOwner returns (bool success) {\n        require(!isDeprecated());\n        address _currentAddress = this;\n        require(_newAddress != _currentAddress);\n        deprecatedSince = block.timestamp;\n        newAddress = _newAddress;\n        newVersion = _newVersion;\n        reason = _reason;\n        Deprecated(_newAddress, _newVersion, _reason);\n        require(!Upgradable(_newAddress).isDeprecated());\n        return true;\n    }\n\n    /**\n     * @notice check if the contract is deprecated\n     */\n    function isDeprecated() public view returns (bool deprecated) {\n        return (deprecatedSince != 0);\n    }\n}\n\ncontract TokenERC20 {\n\n    event Transfer(address indexed _from, address indexed _t",
        "debug": "storage_4: 0x2\ncalldata_Upgradable_4 + calldata_Upgradable_32 + 36: 0x8000000000000000000000000000000000000000000000000000000000000000\ncalldata_Upgradable_4 + calldata_Upgradable_32 + 4: 0x0\ncalldata_Upgradable_4: 0xffffffffffffffffffffffffffffffffffffffff\nstorage_0: 0x0\ncaller: 0x0\ncalldata_Upgradable_0: 0x3fcce62600000000000000000000000000000000000000000000000000000000\ncalldatasize_Upgradable: 0x4\nstorage_2: 0x0\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `setDeprecated(address,string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/10/0x8185e8c1f1cbc1eb7accbead3fb4cbbd06a0922f.sol",
        "function": "setDeprecated(address,string,string)",
        "lineno": 49,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2552,
        "code": "public newAddress;\n\n    uint    public deprecatedSince;\n\n    string  public version;\n    string  public newVersion;\n    string  public reason;\n\n    event Deprecated(address newAddress, string newVersion, string reason);\n\n    /**\n     */\n    function Upgradable(string _version) public {\n        version = _version;\n    }\n\n    /**\n     */\n    function setDeprecated(address _newAddress, string _newVersion, string _reason) external onlyOwner returns (bool success) {\n        require(!isDeprecated());\n        address _currentAddress = this;\n        require(_newAddress != _currentAddress);\n        deprecatedSince = block.timestamp;\n        newAddress = _newAddress;\n        newVersion = _newVersion;\n        reason = _reason;\n        Deprecated(_newAddress, _newVersion, _reason);\n        require(!Upgradable(_newAddress).isDeprecated());\n        return true;\n    }\n\n    /**\n     * @notice check if the contract is deprecated\n     */\n    function isDeprecated() public view returns (bool deprecated) {\n        return (deprecatedSince != 0);\n    }\n}\n\ncontract TokenERC20 {\n\n    event Transfer(address indexed _from, address indexed _t",
        "debug": "storage_4: 0x500304b0080000000000000000000000\ncalldata_Upgradable_4 + calldata_Upgradable_32 + 36: 0xfb774bd0595eda20449e28f04e7e0e02800400008020180399fa7796ffffffef\ncalldata_Upgradable_32 + 36: 0x424789c3c6d4bdff65fa215fffffffff3ffbfffffffffffe7ffffefd7ffffbfd\ncalldata_Upgradable_4 + calldata_Upgradable_32 + 4: 0x0\ncalldata_Upgradable_4: 0xffffffffffffffffffffffffffffffffffffffff\nstorage_0: 0x0\ncaller: 0x0\ncalldata_Upgradable_0: 0x3fcce62600000000000000000000000000000000000000000000000000000000\ncalldatasize_Upgradable: 0x4\nstorage_2: 0x0\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `setDeprecated(address,string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/10/0x8185e8c1f1cbc1eb7accbead3fb4cbbd06a0922f.sol",
        "function": "setDeprecated(address,string,string)",
        "lineno": 49,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2569,
        "code": "public newAddress;\n\n    uint    public deprecatedSince;\n\n    string  public version;\n    string  public newVersion;\n    string  public reason;\n\n    event Deprecated(address newAddress, string newVersion, string reason);\n\n    /**\n     */\n    function Upgradable(string _version) public {\n        version = _version;\n    }\n\n    /**\n     */\n    function setDeprecated(address _newAddress, string _newVersion, string _reason) external onlyOwner returns (bool success) {\n        require(!isDeprecated());\n        address _currentAddress = this;\n        require(_newAddress != _currentAddress);\n        deprecatedSince = block.timestamp;\n        newAddress = _newAddress;\n        newVersion = _newVersion;\n        reason = _reason;\n        Deprecated(_newAddress, _newVersion, _reason);\n        require(!Upgradable(_newAddress).isDeprecated());\n        return true;\n    }\n\n    /**\n     * @notice check if the contract is deprecated\n     */\n    function isDeprecated() public view returns (bool deprecated) {\n        return (deprecatedSince != 0);\n    }\n}\n\ncontract TokenERC20 {\n\n    event Transfer(address indexed _from, address indexed _t",
        "debug": "calldata_Upgradable_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9c\ncalldata_Upgradable_4 + calldata_Upgradable_32 + 4: 0x21\ncalldata_Upgradable_4: 0xffffffffffffffffffffffffffffffffffffffff\nstorage_0: 0x0\ncaller: 0x0\ncalldata_Upgradable_0: 0x3fcce62600000000000000000000000000000000000000000000000000000000\ncalldatasize_Upgradable: 0x4\nstorage_2: 0x0\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `setDeprecated(address,string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/10/0x8185e8c1f1cbc1eb7accbead3fb4cbbd06a0922f.sol",
        "function": "setDeprecated(address,string,string)",
        "lineno": 49,
        "title": "Integer Overflow ",
        "type": "Warning"
      }
    ],
    "success": true
  }
}