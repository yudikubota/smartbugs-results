{
  "contract": "0xfecbdc28f7fd30f24170fde058d36a29c21b3fad",
  "tool": "mythril",
  "start": 1563654840.9556007,
  "end": 1563655526.5232525,
  "duration": 685.5676517486572,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 460,
        "code": "ng suggestion) public {\n        Suggestions[msg.sender] = suggestion;\n        emit eSuggest(msg.sender, suggestion);\n    }\n\n    function Donate() ",
        "debug": "calldata_token_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_token_0: 0xe21fce300000000000000000000000000000000000000000000000000000000\ncalldatasize_token: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `Suggest(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/29/0xfecbdc28f7fd30f24170fde058d36a29c21b3fad.sol",
        "function": "Suggest(string)",
        "lineno": 22,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1924,
        "code": "unt);\n    }\n\n    function () payable pu",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/29/0xfecbdc28f7fd30f24170fde058d36a29c21b3fad.sol",
        "function": "CollectERC20(address,uint256)",
        "lineno": 36,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 2161,
        "code": "lue;\n        emit eDonate(msg.s",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncallvalue: 0x57f25cd000000000000000000000000000000000000000000000000000000000\nretval_2068: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_token_0: 0xd917deb500000000000000000000000000000000000000000000000000000000\ncalldatasize_token: 0x4\n",
        "description": "A possible integer overflow exists in the function `Donate()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/29/0xfecbdc28f7fd30f24170fde058d36a29c21b3fad.sol",
        "function": "Donate()",
        "lineno": 29,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2316,
        "code": "ct Conteract {\n\n    event eDonate(address donor, uint256 value);\n    event eSuggest(address person, string suggestion);\n\n    string public About;\n    address public Creator;\n    mapping (address => uint256) public Donors;\n    mapping (address => string) public Suggestions;\n\n    constructor(string about) public {\n        Creator = msg.sender;\n        About = about;\n    }\n\n    function Suggest(string suggestion) public {\n        Suggestions[msg.sender] = suggestion;\n        emit eSuggest(msg.sender, suggestion);\n    }\n\n    function Donate() payable public {\n        Creator.transfer(msg.value);\n        Donors[msg.sender] += msg.value;\n        emit eDonate(msg.sender, msg.value);\n    }\n\n    function CollectERC20(address tokenAddress, uint256 amount) public {\n        require(msg.sender == Creator);\n        token tokenTransfer = token(tokenAddress);\n        tokenTransfer.transfer(Creator, amount);\n    }\n\n    function () payable public {\n        Creator.transfer(msg.value);\n    }\n\n}",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xbac1c3147749165dd7d1977fffffffffffffffffffffffffffffffffffffffc5\nkeccac_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xff13e6a7459ae5a4c49c419171c3f89100a371508000000000129200000219e2\ncalldata_token_0: 0xe21fce300000000000000000000000000000000000000000000000000000000\ncalldatasize_token: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `Suggest(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/29/0xfecbdc28f7fd30f24170fde058d36a29c21b3fad.sol",
        "function": "Suggest(string)",
        "lineno": 7,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2345,
        "code": "ct Conteract {\n\n    event eDonate(address donor, uint256 value);\n    event eSuggest(address person, string suggestion);\n\n    string public About;\n    address public Creator;\n    mapping (address => uint256) public Donors;\n    mapping (address => string) public Suggestions;\n\n    constructor(string about) public {\n        Creator = msg.sender;\n        About = about;\n    }\n\n    function Suggest(string suggestion) public {\n        Suggestions[msg.sender] = suggestion;\n        emit eSuggest(msg.sender, suggestion);\n    }\n\n    function Donate() payable public {\n        Creator.transfer(msg.value);\n        Donors[msg.sender] += msg.value;\n        emit eDonate(msg.sender, msg.value);\n    }\n\n    function CollectERC20(address tokenAddress, uint256 amount) public {\n        require(msg.sender == Creator);\n        token tokenTransfer = token(tokenAddress);\n        tokenTransfer.transfer(Creator, amount);\n    }\n\n    function () payable public {\n        Creator.transfer(msg.value);\n    }\n\n}",
        "debug": "calldata_token_4 + calldata_token_4: 0x8000000000000000000000000000000000000000000000000000000000000000\ncalldata_token_0: 0xe21fce300000000000000000000000000000000000000000000000000000000\ncalldatasize_token: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `Suggest(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/29/0xfecbdc28f7fd30f24170fde058d36a29c21b3fad.sol",
        "function": "Suggest(string)",
        "lineno": 7,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2359,
        "code": "ct Conteract {\n\n    event eDonate(address donor, uint256 value);\n    event eSuggest(address person, string suggestion);\n\n    string public About;\n    address public Creator;\n    mapping (address => uint256) public Donors;\n    mapping (address => string) public Suggestions;\n\n    constructor(string about) public {\n        Creator = msg.sender;\n        About = about;\n    }\n\n    function Suggest(string suggestion) public {\n        Suggestions[msg.sender] = suggestion;\n        emit eSuggest(msg.sender, suggestion);\n    }\n\n    function Donate() payable public {\n        Creator.transfer(msg.value);\n        Donors[msg.sender] += msg.value;\n        emit eDonate(msg.sender, msg.value);\n    }\n\n    function CollectERC20(address tokenAddress, uint256 amount) public {\n        require(msg.sender == Creator);\n        token tokenTransfer = token(tokenAddress);\n        tokenTransfer.transfer(Creator, amount);\n    }\n\n    function () payable public {\n        Creator.transfer(msg.value);\n    }\n\n}",
        "debug": "calldata_token_4 + calldata_token_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\ncalldata_token_0: 0xe21fce300000000000000000000000000000000000000000000000000000000\ncalldatasize_token: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `Suggest(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/29/0xfecbdc28f7fd30f24170fde058d36a29c21b3fad.sol",
        "function": "Suggest(string)",
        "lineno": 7,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2381,
        "code": "ct Conteract {\n\n    event eDonate(address donor, uint256 value);\n    event eSuggest(address person, string suggestion);\n\n    string public About;\n    address public Creator;\n    mapping (address => uint256) public Donors;\n    mapping (address => string) public Suggestions;\n\n    constructor(string about) public {\n        Creator = msg.sender;\n        About = about;\n    }\n\n    function Suggest(string suggestion) public {\n        Suggestions[msg.sender] = suggestion;\n        emit eSuggest(msg.sender, suggestion);\n    }\n\n    function Donate() payable public {\n        Creator.transfer(msg.value);\n        Donors[msg.sender] += msg.value;\n        emit eDonate(msg.sender, msg.value);\n    }\n\n    function CollectERC20(address tokenAddress, uint256 amount) public {\n        require(msg.sender == Creator);\n        token tokenTransfer = token(tokenAddress);\n        tokenTransfer.transfer(Creator, amount);\n    }\n\n    function () payable public {\n        Creator.transfer(msg.value);\n    }\n\n}",
        "debug": "calldata_token_4 + calldata_token_4: 0x4000f04100100000000000000000000000000000d6401413fffffffffffffe0\nkeccac_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_token_0: 0xe21fce300000000000000000000000000000000000000000000000000000000\ncalldatasize_token: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `Suggest(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/29/0xfecbdc28f7fd30f24170fde058d36a29c21b3fad.sol",
        "function": "Suggest(string)",
        "lineno": 7,
        "title": "Integer Overflow ",
        "type": "Warning"
      }
    ],
    "success": true
  }
}