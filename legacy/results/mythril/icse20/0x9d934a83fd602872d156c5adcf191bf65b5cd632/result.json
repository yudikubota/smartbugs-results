{
  "contract": "0x9d934a83fd602872d156c5adcf191bf65b5cd632",
  "tool": "mythril",
  "start": 1563652240.9524548,
  "end": 1563652576.9189577,
  "duration": 335.96650290489197,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 624,
        "code": "g.value * ethUsdRate /",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/27/0x9d934a83fd602872d156c5adcf191bf65b5cd632.sol",
        "function": "fallback",
        "lineno": 301,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 624,
        "code": "g.value * ethUsdRate /",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function fallback. The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/27/0x9d934a83fd602872d156c5adcf191bf65b5cd632.sol",
        "function": "fallback",
        "lineno": 301,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 700,
        "code": " uint256 sPeriodTokensCount = reminde",
        "debug": "storage_1: 0x0\nstorage_10: 0x0\nstorage_11: 0x1\nreturndatasize: 0x20\nretval_624: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ntimestamp: 0x0\ncallvalue: 0x5af3107a4000\ncalldatasize_TwoPhases: 0x3\n",
        "description": "A possible integer underflow exists in the function `fallback`.\nThe subtraction may result in a value < 0.",
        "filename": "/unique_chucks/27/0x9d934a83fd602872d156c5adcf191bf65b5cd632.sol",
        "function": "fallback",
        "lineno": 305,
        "title": "Integer Underflow",
        "type": "Warning"
      },
      {
        "address": 701,
        "code": " uint256 sPeriodTokensCount = reminderCalc(soldToken",
        "debug": "storage_10: 0x0\nstorage_4: 0x1\nstorage_1: 0x0\nstorage_11: 0x0\nreturndatasize: 0x20\nretval_624: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ntimestamp: 0x0\ncallvalue: 0x5af3107a4000\ncalldatasize_TwoPhases: 0x3\n",
        "description": "A possible integer underflow exists in the function `fallback`.\nThe subtraction may result in a value < 0.",
        "filename": "/unique_chucks/27/0x9d934a83fd602872d156c5adcf191bf65b5cd632.sol",
        "function": "fallback",
        "lineno": 305,
        "title": "Integer Underflow",
        "type": "Warning"
      },
      {
        "address": 736,
        "code": "okensCount > 0) {\n                tokensCount -",
        "debug": "The exception is triggered under the following conditions:\n\ntimestamp: 0x0\nstorage_6: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_1: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_4: 0x0\nstorage_11: 0x0\nstorage_9: 0x1\nreturndatasize: 0x20\nretval_624: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_10: 0x0\ncallvalue: 0x5af3107a4000\ncalldatasize_TwoPhases: 0x3\nstorage_8: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/27/0x9d934a83fd602872d156c5adcf191bf65b5cd632.sol",
        "function": "fallback",
        "lineno": 307,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 759,
        "code": "weiLeft = sPeriodTokensCount * tokenStar",
        "debug": "The exception is triggered under the following conditions:\n\ntimestamp: 0x80000000000000000000000000000000004000000000\nstorage_6: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_1: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_4: 0x0\nstorage_11: 0x0\nstorage_9: 0x80000000000000000000000000000000004000000001\nreturndatasize: 0x20\nretval_624: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_10: 0x80000000000000000000000000000000004000000000\ncallvalue: 0x5af3107a4000\ncalldatasize_TwoPhases: 0x3\nstorage_7: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/27/0x9d934a83fd602872d156c5adcf191bf65b5cd632.sol",
        "function": "fallback",
        "lineno": 310,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 781,
        "code": "iodPrice;\n            }\n        }\n   ",
        "debug": "timestamp: 0x100000000\nstorage_1: 0x0\nstorage_11: 0x1\nstorage_7: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_6: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_4: 0x0\nstorage_9: 0x100000001\nreturndatasize: 0x20\nretval_624: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_10: 0x100000000\ncallvalue: 0x5af3107a4000\ncalldatasize_TwoPhases: 0x3\n",
        "description": "A possible integer underflow exists in the function `fallback`.\nThe subtraction may result in a value < 0.",
        "filename": "/unique_chucks/27/0x9d934a83fd602872d156c5adcf191bf65b5cd632.sol",
        "function": "fallback",
        "lineno": 312,
        "title": "Integer Underflow",
        "type": "Warning"
      },
      {
        "address": 782,
        "code": "iodPrice;\n            }\n        }\n        require(to",
        "debug": "storage_4: 0x800000000000ffffffe3fffffffffffffffffffff80000000000000000000000\ntimestamp: 0x0\nstorage_1: 0x10000000c00000000000000000000000000000000000000000000\nstorage_7: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_6: 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_11: 0x2800000000000000000000080000000000000000000000\nstorage_9: 0x1\nreturndatasize: 0x20\nretval_624: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_10: 0x0\ncallvalue: 0x5af3107a4000\ncalldatasize_TwoPhases: 0x3\n",
        "description": "A possible integer underflow exists in the function `fallback`.\nThe subtraction may result in a value < 0.",
        "filename": "/unique_chucks/27/0x9d934a83fd602872d156c5adcf191bf65b5cd632.sol",
        "function": "fallback",
        "lineno": 312,
        "title": "Integer Underflow",
        "type": "Warning"
      },
      {
        "address": 1168,
        "code": "ction setOracleAddress(address _ora",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/27/0x9d934a83fd602872d156c5adcf191bf65b5cd632.sol",
        "function": "fallback",
        "lineno": 331,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 1184,
        "code": " public onlyOwner {\n        or",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/27/0x9d934a83fd602872d156c5adcf191bf65b5cd632.sol",
        "function": "fallback",
        "lineno": 331,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 4264,
        "code": "\n}\n\nlibrary Sa",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_TwoPhases_32 + 4: 0x6218000d800000000000000000000000039800002005500633e06f771baff7fc\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TwoPhases_4: 0xbd5dfeabad0efffffffffeffffffffffd599ffefbfe6f24271e80e64322c0700\ncalldata_TwoPhases_4: 0xffffffffffffffffffffffffffffffffffffffff\nstorage_3: 0x6218000d800000000000000000000000039800002005500633e06f771baff7fc\nstorage_2: 0x0\ncaller: 0x0\ncalldata_TwoPhases_0: 0xb349dbdc00000000000000000000000000000000000000000000000000000000\ncalldatasize_TwoPhases: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/27/0x9d934a83fd602872d156c5adcf191bf65b5cd632.sol",
        "function": "nfsPoolTransfer(address,uint256)",
        "lineno": 42,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}