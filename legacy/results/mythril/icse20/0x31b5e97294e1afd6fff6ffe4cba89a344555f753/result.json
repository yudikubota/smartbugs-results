{
  "contract": "0x31b5e97294e1afd6fff6ffe4cba89a344555f753",
  "tool": "mythril",
  "start": 1563220176.1518443,
  "end": 1563220316.972358,
  "duration": 140.82051372528076,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 397,
        "code": "ring _text, uint _newPrice);\n    event S",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_6: 0xfe00\ncalldata_TripAlly_0: 0x55ad42e00000000000000000000000000000000000000000000000000000000\ncalldatasize_TripAlly: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0x31b5e97294e1afd6fff6ffe4cba89a344555f753.sol",
        "function": "_function_0x055ad42e",
        "lineno": 188,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 1961,
        "code": "            addToke",
        "debug": "callvalue: 0x541250e575bb18197c52e1cf3d6a6eb3bcdb681b1c66122daa075000736d60\nstorage_3: 0x0\ncalldatasize_TripAlly: 0x3\n",
        "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x31b5e97294e1afd6fff6ffe4cba89a344555f753.sol",
        "function": "fallback",
        "lineno": 206,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2989,
        "code": "e;\n        allowed[_fro",
        "debug": "calldata_TripAlly_32 + 36: 0x800000000000000003ffd0badcb9b7000000002781000000000000000006bfff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TripAlly_32_+_4: 0x800000000000000000008eb2e34648ee0801030820000000000000000000a000\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x800000000000000003ffd0badcb9b7000000002781000000000000000006bfff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TripAlly_4: 0x800000000000000003ffd0badcb9b7000000002781000000000000000006bfff\ncalldata_TripAlly_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_TripAlly: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `transferFrom(address,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x31b5e97294e1afd6fff6ffe4cba89a344555f753.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 59,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 4098,
        "debug": "calldata_TripAlly_32 + 4: 0x57f25cd000000000000000000000000000000000000000000000000000000000\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TripAlly_4: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncalldata_TripAlly_4: 0xffffffffffffffffffffffffffffffffffffffff\nstorage_3: 0x0\ncaller: 0x0\ncalldata_TripAlly_0: 0x827f32c000000000000000000000000000000000000000000000000000000000\ncalldatasize_TripAlly: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `generateTokens(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x31b5e97294e1afd6fff6ffe4cba89a344555f753.sol",
        "function": "generateTokens(address,uint256)",
        "lineno": 250,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 5797,
        "code": "nt c = a / b;",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_3: 0x0\ncalldatasize_TripAlly: 0x3\nstorage_4: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0x31b5e97294e1afd6fff6ffe4cba89a344555f753.sol",
        "function": "fallback",
        "lineno": 25,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 5854,
        "code": ";\n   ",
        "debug": "calldata_TripAlly_32 + 4: 0x57f25cd000000000000000000000000000000000000000000000000000000000\nstorage_0: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncalldata_TripAlly_4: 0xffffffffffffffffffffffffffffffffffffffff\nstorage_3: 0x0\ncaller: 0x0\ncalldata_TripAlly_0: 0x827f32c000000000000000000000000000000000000000000000000000000000\ncalldatasize_TripAlly: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `generateTokens(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x31b5e97294e1afd6fff6ffe4cba89a344555f753.sol",
        "function": "generateTokens(address,uint256)",
        "lineno": 6,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 5879,
        "code": "((z >= x) && (z >= y));\n    ",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0x1\ncalldata_TripAlly_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_TripAlly_4: 0xffffffffffffffffffffffffffffffffffffffff\nstorage_3: 0x0\ncaller: 0x0\ncalldata_TripAlly_0: 0x827f32c000000000000000000000000000000000000000000000000000000000\ncalldatasize_TripAlly: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0x31b5e97294e1afd6fff6ffe4cba89a344555f753.sol",
        "function": "generateTokens(address,uint256)",
        "lineno": 7,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}