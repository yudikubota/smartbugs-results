{
  "contract": "0x5cc4a441e43d11d27747aba48efed848de412d28",
  "tool": "mythril",
  "start": 1563650027.206934,
  "end": 1563650316.8628423,
  "duration": 289.65590834617615,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 205,
        "code": "ring dataString) {\n        _deleteEntry(sha3(dataString));\n    }\n    \n    // internals fo",
        "debug": "calldata_Prover_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_Prover_0: 0x1767454400000000000000000000000000000000000000000000000000000000\ncalldatasize_Prover: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `deleteEntry(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/30/0x5cc4a441e43d11d27747aba48efed848de412d28.sol",
        "function": "deleteEntry(string)",
        "lineno": 24,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 297,
        "code": "(string dataString) payable {\n        _addEntry(sha3(dataString));\n    }\n    function delet",
        "debug": "calldata_Prover_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_Prover_0: 0x17ce42bd00000000000000000000000000000000000000000000000000000000\ncalldatasize_Prover: 0x4\n",
        "description": "A possible integer overflow exists in the function `addEntry(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/30/0x5cc4a441e43d11d27747aba48efed848de412d28.sol",
        "function": "addEntry(string)",
        "lineno": 18,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 470,
        "code": "g) constant\n            returns (bool proved, uint256 time, uint256 value) {\n        // compute hash of the string\n        return status(claimant, sha3(dataString));\n    }\n    function proveIt(bytes32 dataHash) constant\n      ",
        "debug": "calldata_Prover_32 + 4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_Prover_0: 0xa07b246100000000000000000000000000000000000000000000000000000000\ncalldatasize_Prover: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `proveIt(address,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/30/0x5cc4a441e43d11d27747aba48efed848de412d28.sol",
        "function": "proveIt(address,string)",
        "lineno": 52,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 819,
        "code": "urns (bool proved, uint256 time, uint256 value) {\n        // compute hash of the string\n        return status(msg.sender, sha3(dataString));\n    }\n    \n    // internal for returning status of arbitrary entries\n",
        "debug": "calldata_Prover_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_Prover_0: 0xb47a7a6700000000000000000000000000000000000000000000000000000000\ncalldatasize_Prover: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `proveIt(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/30/0x5cc4a441e43d11d27747aba48efed848de412d28.sol",
        "function": "proveIt(string)",
        "lineno": 62,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1829,
        "code": "ists);\n        uint256 rebate = ledger[msg.",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_0 +\nkeccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\ncalldata_Prover_4: 0x0\ncalldata_Prover_0: 0xef8dd09b00000000000000000000000000000000000000000000000000000000\ncalldatasize_Prover: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/30/0x5cc4a441e43d11d27747aba48efed848de412d28.sol",
        "function": "deleteEntry(bytes32)",
        "lineno": 39,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2246,
        "code": "aHash].exists);\n        // initialize values",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_0 +\nkeccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\ncalldata_Prover_4: 0xff00\ncalldata_Prover_0: 0x5910a18b00000000000000000000000000000000000000000000000000000000\ncalldatasize_Prover: 0x4\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/30/0x5cc4a441e43d11d27747aba48efed848de412d28.sol",
        "function": "addEntry(bytes32)",
        "lineno": 31,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}