{"error": null, "issues": [{"address": 2552, "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/24/0xbe65014bcf1b527c79acbfb7c668ecfe2af83586.sol", "function": "finalizeCrowdsale()", "lineno": 700, "title": "Message call to external contract", "type": "Informational"}, {"address": 2552, "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3015\nCall at address: 2858\n", "filename": "/unique_chucks/24/0xbe65014bcf1b527c79acbfb7c668ecfe2af83586.sol", "function": "finalizeCrowdsale()", "lineno": 700, "title": "Multiple Calls", "type": "Information"}, {"address": 2632, "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/24/0xbe65014bcf1b527c79acbfb7c668ecfe2af83586.sol", "function": "finalizeCrowdsale()", "lineno": 700, "title": "State change after external call", "type": "Warning"}, {"address": 2858, "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/24/0xbe65014bcf1b527c79acbfb7c668ecfe2af83586.sol", "function": "finalizeCrowdsale()", "lineno": 700, "title": "Message call to external contract", "type": "Informational"}, {"address": 2858, "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3015\n", "filename": "/unique_chucks/24/0xbe65014bcf1b527c79acbfb7c668ecfe2af83586.sol", "function": "finalizeCrowdsale()", "lineno": 700, "title": "Multiple Calls", "type": "Information"}, {"address": 3015, "debug": "", "description": "In the function `finalizeCrowdsale()` the following predictable state variables are used to determine Ether recipient:\n- block.timestamp\n", "filename": "/unique_chucks/24/0xbe65014bcf1b527c79acbfb7c668ecfe2af83586.sol", "function": "finalizeCrowdsale()", "lineno": 700, "title": "Dependence on predictable environment variable", "type": "Warning"}, {"address": 3292, "code": "3 tokens to prevent a", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/24/0xbe65014bcf1b527c79acbfb7c668ecfe2af83586.sol", "function": "_function_0x17ffc320", "lineno": 203, "title": "Message call to external contract", "type": "Warning"}, {"address": 3292, "code": "3 tokens to prevent a", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 5770\n", "filename": "/unique_chucks/24/0xbe65014bcf1b527c79acbfb7c668ecfe2af83586.sol", "function": "_function_0x17ffc320", "lineno": 203, "title": "Multiple Calls", "type": "Information"}, {"address": 3717, "code": "oken received in a contract by transf", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/24/0xbe65014bcf1b527c79acbfb7c668ecfe2af83586.sol", "function": "reclaimContract(address)", "lineno": 183, "title": "Message call to external contract", "type": "Warning"}, {"address": 4127, "code": "  uint256 public toke", "debug": "The exception is triggered under the following conditions:\n\ncalldata_WorldCoinCrowdsale_4: 0x0\nstorage_2: 0x0\ncalldata_WorldCoinCrowdsale_0: 0x8c65c81f00000000000000000000000000000000000000000000000000000000\ncalldatasize_WorldCoinCrowdsale: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/24/0xbe65014bcf1b527c79acbfb7c668ecfe2af83586.sol", "function": "_function_0x8c65c81f", "lineno": 524, "title": "Exception state", "type": "Informational"}, {"address": 4231, "code": "tRate();\n        assert(r", "debug": "The exception is triggered under the following conditions:\n\nstorage_2: 0x0\ncalldata_WorldCoinCrowdsale_0: 0x97e12b0d00000000000000000000000000000000000000000000000000000000\ncalldatasize_WorldCoinCrowdsale: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/24/0xbe65014bcf1b527c79acbfb7c668ecfe2af83586.sol", "function": "lastRoundEndTimestamp()", "lineno": 625, "title": "Exception state", "type": "Informational"}, {"address": 5239, "code": "title", "debug": "storage_8: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncalldata_WorldCoinCrowdsale_32 + 4: 0x57f25cd000000000000000000000000000000000000000000000000000000000\nstorage_0: 0x0\ncaller: 0x0\ncalldata_WorldCoinCrowdsale_0: 0x7670dea800000000000000000000000000000000000000000000000000000000\ncalldatasize_WorldCoinCrowdsale: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `saleNonEther(address,uint256,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/24/0xbe65014bcf1b527c79acbfb7c668ecfe2af83586.sol", "function": "saleNonEther(address,uint256,string)", "lineno": 64, "title": "Integer Overflow ", "type": "Warning"}, {"address": 5252, "code": "C20\n * @dev Wr", "debug": "The exception is triggered under the following conditions:\n\nstorage_8: 0x1\ncalldata_WorldCoinCrowdsale_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_0: 0x0\ncaller: 0x0\ncalldata_WorldCoinCrowdsale_0: 0x7670dea800000000000000000000000000000000000000000000000000000000\ncalldatasize_WorldCoinCrowdsale: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/24/0xbe65014bcf1b527c79acbfb7c668ecfe2af83586.sol", "function": "saleNonEther(address,uint256,string)", "lineno": 64, "title": "Exception state", "type": "Informational"}, {"address": 5536, "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/24/0xbe65014bcf1b527c79acbfb7c668ecfe2af83586.sol", "function": "saleNonEther(address,uint256,string)", "lineno": 700, "title": "Message call to external contract", "type": "Informational"}, {"address": 5599, "debug": "The exception is triggered under the following conditions:\n\nstorage_8: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7\nreturndatasize: 0x20\nretval_5536: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_6: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7\ncalldata_WorldCoinCrowdsale_32 + 4: 0x0\nstorage_0: 0x0\ncaller: 0x0\ncalldata_WorldCoinCrowdsale_0: 0x7670dea800000000000000000000000000000000000000000000000000000000\ncalldatasize_WorldCoinCrowdsale: 0x4\nmem_128 +\n32 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_WorldCoinCrowdsale_4 + calldata_WorldCoinCrowdsale_32 + 36)): 0x0\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/24/0xbe65014bcf1b527c79acbfb7c668ecfe2af83586.sol", "function": "saleNonEther(address,uint256,string)", "lineno": 700, "title": "Exception state", "type": "Informational"}, {"address": 5770, "code": "en, address from, address", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/24/0xbe65014bcf1b527c79acbfb7c668ecfe2af83586.sol", "function": "_function_0x17ffc320", "lineno": 74, "title": "Message call to external contract", "type": "Warning"}], "success": true}