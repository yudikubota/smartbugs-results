{"error": null, "issues": [{"address": 577, "code": "],\n         ", "debug": "The exception is triggered under the following conditions:\n\ncalldata_caller_0: 0x23b0db4700000000000000000000000000000000000000000000000000000000\ncalldatasize_caller: 0x4\nmem_128 + 32 + 32*calldata_caller_4 + calldata_caller_32 + 4: 0x0\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/43/0x8ddf7bbe1df74e09e9475272447ac3c5ae0beb15.sol", "function": "delegate_2x(address,uint256[],address[],bytes32[])", "lineno": 12, "title": "Exception state", "type": "Informational"}, {"address": 602, "code": "        ", "debug": "The exception is triggered under the following conditions:\n\nmem_128 + 32 + 32*calldata_caller_4 + calldata_caller_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_caller_0: 0x23b0db4700000000000000000000000000000000000000000000000000000000\ncalldatasize_caller: 0x4\ncalldata_caller_4 + calldata_caller_32 + 4: 0x0\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/43/0x8ddf7bbe1df74e09e9475272447ac3c5ae0beb15.sol", "function": "delegate_2x(address,uint256[],address[],bytes32[])", "lineno": 14, "title": "Exception state", "type": "Informational"}, {"address": 627, "code": "\n          u", "debug": "The exception is triggered under the following conditions:\n\nmem_128 + 32 + 32*calldata_caller_4 + calldata_caller_32 + 4: 0x1\ncalldata_caller_4 + calldata_caller_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_caller_0: 0x23b0db4700000000000000000000000000000000000000000000000000000000\ncalldatasize_caller: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/43/0x8ddf7bbe1df74e09e9475272447ac3c5ae0beb15.sol", "function": "delegate_2x(address,uint256[],address[],bytes32[])", "lineno": 14, "title": "Exception state", "type": "Informational"}, {"address": 652, "code": "      b[", "debug": "The exception is triggered under the following conditions:\n\nmem_128 + 32 + 32*calldata_caller_4 + calldata_caller_32 + 4: 0x3\ncalldata_caller_4 + calldata_caller_32 + 4: 0x1\ncalldata_caller_0: 0x23b0db4700000000000000000000000000000000000000000000000000000000\ncalldatasize_caller: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/43/0x8ddf7bbe1df74e09e9475272447ac3c5ae0beb15.sol", "function": "delegate_2x(address,uint256[],address[],bytes32[])", "lineno": 16, "title": "Exception state", "type": "Informational"}, {"address": 677, "code": " b[2", "debug": "The exception is triggered under the following conditions:\n\nmem_128 + 32 + 32*calldata_caller_4 + calldata_caller_32 + 4: 0x3\ncalldata_caller_4 + calldata_caller_32 + 4: 0x3\ncalldata_caller_0: 0x23b0db4700000000000000000000000000000000000000000000000000000000\ncalldatasize_caller: 0x4\nmem_160 +\n32*calldata_caller_4 + calldata_caller_32 + 4 +\n32 +\n32*calldata_caller_4 + calldata_caller_32 + 36: 0x0\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/43/0x8ddf7bbe1df74e09e9475272447ac3c5ae0beb15.sol", "function": "delegate_2x(address,uint256[],address[],bytes32[])", "lineno": 17, "title": "Exception state", "type": "Informational"}, {"address": 702, "code": ") {\n", "debug": "The exception is triggered under the following conditions:\n\nmem_160 +\n32*calldata_caller_4 + calldata_caller_32 + 4 +\n32 +\n32*calldata_caller_4 + calldata_caller_32 + 36: 0x1\nmem_128 + 32 + 32*calldata_caller_4 + calldata_caller_32 + 4: 0x3\ncalldata_caller_4 + calldata_caller_32 + 4: 0x3\ncalldata_caller_0: 0x23b0db4700000000000000000000000000000000000000000000000000000000\ncalldatasize_caller: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/43/0x8ddf7bbe1df74e09e9475272447ac3c5ae0beb15.sol", "function": "delegate_2x(address,uint256[],address[],bytes32[])", "lineno": 18, "title": "Exception state", "type": "Informational"}, {"address": 920, "code": "egatecall(bytes4(keccak256(\"x(address,uint256,address,uint256,bytes32,bytes32)\")),\n          addresses[0],\n          uints[0],\n          addresses[2],\n          uints[2],\n          b[0],\n          b[2]\n          )) {\n        (call", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1433\n", "filename": "/unique_chucks/43/0x8ddf7bbe1df74e09e9475272447ac3c5ae0beb15.sol", "function": "delegate_2x(address,uint256[],address[],bytes32[])", "lineno": 11, "title": "Multiple Calls", "type": "Information"}, {"address": 1140, "code": "    uints[3]", "debug": "The exception is triggered under the following conditions:\n\nmem_160 +\n32*calldata_caller_4 + calldata_caller_32 + 4 +\n32 +\n32*calldata_caller_4 + calldata_caller_32 + 36: 0x3\nmem_128 + 32 + 32*calldata_caller_4 + calldata_caller_32 + 4: 0x3\ncalldata_caller_4 + calldata_caller_32 + 4: 0x8000000000000000000000000000000000000000000000000000000000000000\nretval_920: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_caller_0: 0x23b0db4700000000000000000000000000000000000000000000000000000000\ncalldatasize_caller: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/43/0x8ddf7bbe1df74e09e9475272447ac3c5ae0beb15.sol", "function": "delegate_2x(address,uint256[],address[],bytes32[])", "lineno": 23, "title": "Exception state", "type": "Informational"}, {"address": 1165, "code": "[1],\n   ", "debug": "The exception is triggered under the following conditions:\n\nmem_160 +\n32*calldata_caller_4 + calldata_caller_32 + 4 +\n32 +\n32*calldata_caller_4 + calldata_caller_32 + 36: 0x3\nmem_128 + 32 + 32*calldata_caller_4 + calldata_caller_32 + 4: 0x8000000000000000000000000000000000000000000000000000000000000000\ncalldata_caller_4 + calldata_caller_32 + 4: 0x3\nretval_920: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_caller_0: 0x23b0db4700000000000000000000000000000000000000000000000000000000\ncalldatasize_caller: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/43/0x8ddf7bbe1df74e09e9475272447ac3c5ae0beb15.sol", "function": "delegate_2x(address,uint256[],address[],bytes32[])", "lineno": 24, "title": "Exception state", "type": "Informational"}, {"address": 1215, "code": "    ", "debug": "The exception is triggered under the following conditions:\n\nmem_160 +\n32*calldata_caller_4 + calldata_caller_32 + 4 +\n32 +\n32*calldata_caller_4 + calldata_caller_32 + 36: 0x3\nmem_128 + 32 + 32*calldata_caller_4 + calldata_caller_32 + 4: 0x8000000000000000000000000000000000000000000000000000000000000000\ncalldata_caller_4 + calldata_caller_32 + 4: 0x8000000000000000000000000000000000000000000000000000000000000000\nretval_920: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_caller_0: 0x23b0db4700000000000000000000000000000000000000000000000000000000\ncalldatasize_caller: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/43/0x8ddf7bbe1df74e09e9475272447ac3c5ae0beb15.sol", "function": "delegate_2x(address,uint256[],address[],bytes32[])", "lineno": 27, "title": "Exception state", "type": "Informational"}], "success": true}