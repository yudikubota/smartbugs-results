{"error": null, "issues": [{"address": 1472, "code": "------\n\tfunction E4Token() \n\t{\n\t\towner", "debug": "The exception is triggered under the following conditions:\n\nstorage_38: 0x8000\ncalldata_iE4RowEscrow_0: 0x5f437e4800000000000000000000000000000000000000000000000000000000\ncalldatasize_iE4RowEscrow: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/26/0xe18c9465e6ed5cb3c58a316b990e0d17fb946eca.sol", "function": "_function_0x5f437e48", "lineno": 116, "title": "Exception state", "type": "Informational"}, {"address": 3375, "code": "ess \"unlocked\" debug)\n\t// ", "debug": "storage_17: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncallvalue: 0x57f25cd000000000000000000000000000000000000000000000000000000000\nstorage_38: 0x400\nstorage_4: 0x0\ncaller: 0x0\ncalldata_iE4RowEscrow_0: 0x33c7c02600000000000000000000000000000000000000000000000000000000\ncalldatasize_iE4RowEscrow: 0x4\n", "description": "A possible integer overflow exists in the function `feePayment()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/26/0xe18c9465e6ed5cb3c58a316b990e0d17fb946eca.sol", "function": "feePayment()", "lineno": 416, "title": "Integer Overflow ", "type": "Warning"}, {"address": 3391, "code": "its locked. ONLY ONCE!\n\t\t", "debug": "storage_8: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncallvalue: 0x57f25cd000000000000000000000000000000000000000000000000000000000\nstorage_38: 0x400\nstorage_4: 0x0\ncaller: 0x0\ncalldata_iE4RowEscrow_0: 0x33c7c02600000000000000000000000000000000000000000000000000000000\ncalldatasize_iE4RowEscrow: 0x4\n", "description": "A possible integer overflow exists in the function `feePayment()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/26/0xe18c9465e6ed5cb3c58a316b990e0d17fb946eca.sol", "function": "feePayment()", "lineno": 417, "title": "Integer Overflow ", "type": "Warning"}, {"address": 3590, "code": "rAccounts[npurcha", "debug": "The exception is triggered under the following conditions:\n\nstorage_4: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldatasize_iE4RowEscrow: 0x3\nstorage_13: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/26/0xe18c9465e6ed5cb3c58a316b990e0d17fb946eca.sol", "function": "fallback", "lineno": 369, "title": "Exception state", "type": "Informational"}, {"address": 4382, "code": "teValue.debug)\n\t\t\tthrow;\n\t\tif (msg.sender != own", "debug": "The exception is triggered under the following conditions:\n\nstorage_38: 0x8000\nstorage_1: 0x0\ncaller: 0x0\ncalldata_iE4RowEscrow_0: 0x2ff1fac00000000000000000000000000000000000000000000000000000000\ncalldatasize_iE4RowEscrow: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/26/0xe18c9465e6ed5cb3c58a316b990e0d17fb946eca.sol", "function": "changeDevevoperAccont(address)", "lineno": 801, "title": "Exception state", "type": "Informational"}, {"address": 4745, "code": "msg.sender == developers) \n\t\t\t&&  (n", "debug": "The exception is triggered under the following conditions:\n\nstorage_38: 0x8000\ncalldata_iE4RowEscrow_0: 0x18160ddd00000000000000000000000000000000000000000000000000000000\ncalldatasize_iE4RowEscrow: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/26/0xe18c9465e6ed5cb3c58a316b990e0d17fb946eca.sol", "function": "totalSupply()", "lineno": 248, "title": "Exception state", "type": "Informational"}, {"address": 5989, "code": "\t\tif ((now > fundingDeadline && numP ", "debug": "The exception is triggered under the following conditions:\n\nstorage_38: 0x8000\nstorage_4: 0x0\ncaller: 0x0\ncalldata_iE4RowEscrow_0: 0x33c7c02600000000000000000000000000000000000000000000000000000000\ncalldatasize_iE4RowEscrow: 0x4\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/26/0xe18c9465e6ed5cb3c58a316b990e0d17fb946eca.sol", "function": "feePayment()", "lineno": 485, "title": "Exception state", "type": "Informational"}, {"address": 7137, "code": " ----------------------------\n\t// check rew", "debug": "", "description": "In the function `withdrawDividends()` the following predictable state variables are used to determine Ether recipient:\n- block.timestamp\n", "filename": "/unique_chucks/26/0xe18c9465e6ed5cb3c58a316b990e0d17fb946eca.sol", "function": "withdrawDividends()", "lineno": 671, "title": "Dependence on predictable environment variable", "type": "Warning"}, {"address": 7137, "code": " ----------------------------\n\t// check rew", "debug": "", "description": "This contract executes a message call to the address of the transaction sender. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/26/0xe18c9465e6ed5cb3c58a316b990e0d17fb946eca.sol", "function": "withdrawDividends()", "lineno": 671, "title": "Message call to external contract", "type": "Warning"}, {"address": 7910, "code": "ux = auxPartner;\n\t\t\t_dev", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/26/0xe18c9465e6ed5cb3c58a316b990e0d17fb946eca.sol", "function": "fallback", "lineno": 458, "title": "Message call to external contract", "type": "Informational"}, {"address": 12355, "code": "---------------------------\n\t/", "debug": "storage_38: 0x100\nstorage_16: 0x0\nstorage_30: 0x1\nstorage_4: 0x0\ncaller: 0x0\ncalldatasize_iE4RowEscrow: 0x3\n", "description": "A possible integer underflow exists in the function `fallback`.\nThe subtraction may result in a value < 0.", "filename": "/unique_chucks/26/0xe18c9465e6ed5cb3c58a316b990e0d17fb946eca.sol", "function": "fallback", "lineno": 451, "title": "Integer Underflow", "type": "Warning"}, {"address": 13925, "code": "youtIndex; (paids < _numPays)", "debug": "storage_17: 0x2000000000000000000000000000000000000000000000000000000000000\nstorage_24: 0xee097c49b838203f082120d1399cbace4d9ffd0f89536e0e359284e707cf4c79\ncallvalue: 0x0\nstorage_28: 0x7207044ff8a8525d057dd978719e22005ddff1afed4b6fefb5d8f6f7f82c5c01\nstorage_38: 0x300\nstorage_16: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_14: 0x1ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_4: 0x0\ncaller: 0x0\ncalldatasize_iE4RowEscrow: 0x3\nstorage_18: 0x0\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/26/0xe18c9465e6ed5cb3c58a316b990e0d17fb946eca.sol", "function": "fallback", "lineno": 586, "title": "Integer Overflow ", "type": "Warning"}, {"address": 13946, "code": "alance > 0); ", "debug": "storage_17: 0x8000000000000000000000000000000000000000000000000000000000000000\nstorage_21: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncallvalue: 0x0\nstorage_38: 0x300\ntimestamp: 0x1\nstorage_24: 0x0\nstorage_28: 0x0\nstorage_16: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_14: 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_4: 0x0\ncaller: 0x0\ncalldatasize_iE4RowEscrow: 0x3\nstorage_18: 0x0\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/26/0xe18c9465e6ed5cb3c58a316b990e0d17fb946eca.sol", "function": "fallback", "lineno": 586, "title": "Integer Overflow ", "type": "Warning"}, {"address": 14167, "code": "Balance -= int(nAmount);\t\t\t\t\t\n\t\t\t\t\t\tpa", "debug": "The exception is triggered under the following conditions:\n\nstorage_17: 0x8000000000000000000000000000000000000000000000000000000000000000\ncallvalue: 0x0\nstorage_18: 0x2000000000000000000000000000000000000000000000000000000000000000\nstorage_38: 0x300\nstorage_16: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_14: 0x8000000000000000000000000000000000000000000000000000000000000000\nstorage_4: 0x0\ncaller: 0x0\ncalldatasize_iE4RowEscrow: 0x3\nstorage_20: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/26/0xe18c9465e6ed5cb3c58a316b990e0d17fb946eca.sol", "function": "fallback", "lineno": 597, "title": "Exception state", "type": "Informational"}, {"address": 15078, "code": "rns (uint256 supply)\n\t{", "debug": "storage_21: 0x5080505015552c7c2c2c0aaad3001d1000012cffe0ee30020400000000014320\ncalldata_iE4RowEscrow_32 + 36: 0x2\ntimestamp: 0x0\nstorage_1 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_iE4RowEscrow_4: 0x2\nstorage_0 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_iE4RowEscrow_32_+_4: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x2\nstorage_29: 0x0\nstorage_0: 0x0\ncalldata_iE4RowEscrow_4: 0x0\ncalldata_iE4RowEscrow_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_iE4RowEscrow: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `transferFrom(address,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/26/0xe18c9465e6ed5cb3c58a316b990e0d17fb946eca.sol", "function": "transferFrom(address,address,uint256)", "lineno": 237, "title": "Integer Overflow ", "type": "Warning"}, {"address": 15166, "code": "IcoStatusValu", "debug": "storage_7: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_iE4RowEscrow_32 + 36: 0x2\ntimestamp: 0x0\nstorage_1 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_iE4RowEscrow_4: 0x2\nstorage_0 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_iE4RowEscrow_32_+_4: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x2\nstorage_29: 0x0\nstorage_0: 0x0\ncalldata_iE4RowEscrow_4: 0x0\ncalldata_iE4RowEscrow_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_iE4RowEscrow: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `transferFrom(address,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/26/0xe18c9465e6ed5cb3c58a316b990e0d17fb946eca.sol", "function": "transferFrom(address,address,uint256)", "lineno": 239, "title": "Integer Overflow ", "type": "Warning"}], "success": true}