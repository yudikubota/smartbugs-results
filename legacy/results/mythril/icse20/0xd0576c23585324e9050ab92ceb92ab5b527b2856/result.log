{"error": null, "issues": [{"address": 5225, "code": "% tax fee (returning 3)", "debug": "The exception is triggered under the following conditions:\n\ncalldata__0xBabylon_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata__0xBabylon_32 + 36: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata__0xBabylon_0: 0x1423113a00000000000000000000000000000000000000000000000000000000\ncalldatasize__0xBabylon: 0x4\nstorage_11: 0x0\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/18/0xd0576c23585324e9050ab92ceb92ab5b527b2856.sol", "function": "fluxFeed(uint256,bool,bool)", "lineno": 268, "title": "Exception state", "type": "Informational"}, {"address": 5236, "code": "T = 66% tax fee (returning 3)\n", "debug": "The exception is triggered under the following conditions:\n\nstorage_11: 0x7ffffffffffffffffffffffffffffffffffffffffffffffff800000802000000\nstorage_15: 0x1000000000000000000000000000000000000000000000000bbbfffffe\nstorage_14: 0x0\ncalldata__0xBabylon_4: 0x0\ncalldata__0xBabylon_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata__0xBabylon_32 + 36: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata__0xBabylon_0: 0x1423113a00000000000000000000000000000000000000000000000000000000\ncalldatasize__0xBabylon: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/18/0xd0576c23585324e9050ab92ceb92ab5b527b2856.sol", "function": "fluxFeed(uint256,bool,bool)", "lineno": 268, "title": "Exception state", "type": "Informational"}, {"address": 5270, "code": ")\n\t\t\t100eth IN & 10eth OUT = 90%", "debug": "The exception is triggered under the following conditions:\n\ncalldata__0xBabylon_32 + 36: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata__0xBabylon_0: 0x1423113a00000000000000000000000000000000000000000000000000000000\ncalldatasize__0xBabylon: 0x4\nstorage_15: 0x0\ncalldata__0xBabylon_32 + 4: 0x0\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/18/0xd0576c23585324e9050ab92ceb92ab5b527b2856.sol", "function": "fluxFeed(uint256,bool,bool)", "lineno": 269, "title": "Exception state", "type": "Informational"}, {"address": 5555, "code": "ic view returns (uint25", "debug": "calldata__0xBabylon_32 + 36: 0xfe51000008ce80008001c1d33616877ffffffffffffff7ffffe10000398d50ac\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata__0xBabylon_32_+_4: 0xc050fffff320c00020003d81af848540000000000000040000110001bd062022\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xfe51000008ce80008001c1d33616877ffffffffffffff7ffffe10000398d50ac\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata__0xBabylon_4: 0xfe51000008ce80008001c1d33616877ffffffffffffff7ffffe10000398d50ac\ncalldata__0xBabylon_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize__0xBabylon: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `transferFrom(address,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/18/0xd0576c23585324e9050ab92ceb92ab5b527b2856.sol", "function": "transferFrom(address,address,uint256)", "lineno": 612, "title": "Integer Overflow ", "type": "Warning"}, {"address": 6101, "code": "wance = allowed[_from][msg.sender];\n\t\t\t\t\t\t\t\t\t        requ", "debug": "The exception is triggered under the following conditions:\n\ncalldata__0xBabylon_0: 0x2fa30d3300000000000000000000000000000000000000000000000000000000\ncalldatasize__0xBabylon: 0x4\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata__0xBabylon_4: 0x0\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/18/0xd0576c23585324e9050ab92ceb92ab5b527b2856.sol", "function": "calcResolve(address,uint256,uint256)", "lineno": 595, "title": "Exception state", "type": "Informational"}, {"address": 6111, "code": "wance = allowed[_from][msg.sender];\n\t\t\t\t\t\t\t\t\t        require( ", "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata__0xBabylon_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata__0xBabylon_0: 0x2fa30d3300000000000000000000000000000000000000000000000000000000\ncalldatasize__0xBabylon: 0x4\ncalldata__0xBabylon_32 + 36: 0x0\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/18/0xd0576c23585324e9050ab92ceb92ab5b527b2856.sol", "function": "calcResolve(address,uint256,uint256)", "lineno": 595, "title": "Exception state", "type": "Informational"}, {"address": 7895, "code": "Who,uint256 cR,uint256", "debug": "storage_15: 0xedb979000000000000000000000000000000000000000000000ffd621205e76d\ncallvalue: 0xc80101fff7fffffffffffffffffffffffffffffffffffffffff0009112813861\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\nUDiv(storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller,\n_____256): 0x0\nstorage_12: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\nstorage_13: 0xffffffffffffffffffffffffffffffffffffffff00\ncalldatasize__0xBabylon: 0x3\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/18/0xd0576c23585324e9050ab92ceb92ab5b527b2856.sol", "function": "fallback", "lineno": 229, "title": "Integer Overflow ", "type": "Warning"}, {"address": 8599, "code": "onna pass this up to ye", "debug": "storage_15: 0x0\nstorage_14: 0x1\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata__0xBabylon_0: 0x51cff8d900000000000000000000000000000000000000000000000000000000\ncalldatasize__0xBabylon: 0x4\ncallvalue: 0x0\n", "description": "A possible integer underflow exists in the function `withdraw(address)`.\nThe subtraction may result in a value < 0.", "filename": "/unique_chucks/18/0xd0576c23585324e9050ab92ceb92ab5b527b2856.sol", "function": "withdraw(address)", "lineno": 292, "title": "Integer Underflow", "type": "Warning"}, {"address": 8609, "code": "ho we're gonna pass this up to yet\n\t\t\t\t\t\tadd", "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata__0xBabylon_0: 0x51cff8d900000000000000000000000000000000000000000000000000000000\ncalldatasize__0xBabylon: 0x4\nstorage_15: 0x0\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/18/0xd0576c23585324e9050ab92ceb92ab5b527b2856.sol", "function": "withdraw(address)", "lineno": 292, "title": "Exception state", "type": "Informational"}], "success": true}