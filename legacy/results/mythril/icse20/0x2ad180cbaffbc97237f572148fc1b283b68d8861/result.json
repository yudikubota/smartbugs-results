{
  "contract": "0x2ad180cbaffbc97237f572148fc1b283b68d8861",
  "tool": "mythril",
  "start": 1563489225.8932333,
  "end": 1563489506.1429484,
  "duration": 280.249715089798,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 463,
        "code": " /// @return True if `_addr` is a contract\n    function isContract(ad",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/4/0x2ad180cbaffbc97237f572148fc1b283b68d8861.sol",
        "function": "fallback",
        "lineno": 207,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 463,
        "code": " /// @return True if `_addr` is a contract\n    function isContract(ad",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function fallback. The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/4/0x2ad180cbaffbc97237f572148fc1b283b68d8861.sol",
        "function": "fallback",
        "lineno": 207,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 2539,
        "code": "g.sender, _spender, _value);\n        return true;\n    }\n\n    functi",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/4/0x2ad180cbaffbc97237f572148fc1b283b68d8861.sol",
        "function": "approve(address,uint256)",
        "lineno": 153,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 2539,
        "code": "g.sender, _spender, _value);\n        return true;\n    }\n\n    functi",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function approve(address,uint256). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/4/0x2ad180cbaffbc97237f572148fc1b283b68d8861.sol",
        "function": "approve(address,uint256)",
        "lineno": 153,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 2735,
        "code": "er, address _spender) constant returns",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/4/0x2ad180cbaffbc97237f572148fc1b283b68d8861.sol",
        "function": "approve(address,uint256)",
        "lineno": 157,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 3371,
        "code": " -= _value;\n        if (allowance < MAX_UINT256) {\n       ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/4/0x2ad180cbaffbc97237f572148fc1b283b68d8861.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 133,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 3371,
        "code": " -= _value;\n        if (allowance < MAX_UINT256) {\n       ",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function transferFrom(address,address,uint256). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/4/0x2ad180cbaffbc97237f572148fc1b283b68d8861.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 133,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 3509,
        "code": "ender] -= _value;\n     ",
        "debug": "calldata_TokenController_32 + 36: 0xfe51000008ce80008001c1d33616877ffffffffffffff7ffffe10000398d50ac\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TokenController_32_+_4: 0xc050fffff320c00020003d81af848540000000000000040000110001bd062022\nstorage_0: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xfe51000008ce80008001c1d33616877ffffffffffffff7ffffe10000398d50ac\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TokenController_4: 0xfe51000008ce80008001c1d33616877ffffffffffffff7ffffe10000398d50ac\ncalldata_TokenController_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenController: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `transferFrom(address,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/4/0x2ad180cbaffbc97237f572148fc1b283b68d8861.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 135,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 3515,
        "code": "ender] -= _value;\n     ",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/4/0x2ad180cbaffbc97237f572148fc1b283b68d8861.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 135,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 3592,
        "code": "  Transfer(_from, _to, _v",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/4/0x2ad180cbaffbc97237f572148fc1b283b68d8861.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 137,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 5146,
        "code": "value;\n        balances[_to] += _value;\n        // Alerts the t",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/4/0x2ad180cbaffbc97237f572148fc1b283b68d8861.sol",
        "function": "transfer(address,uint256)",
        "lineno": 114,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 5146,
        "code": "value;\n        balances[_to] += _value;\n        // Alerts the t",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function transfer(address,uint256). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/4/0x2ad180cbaffbc97237f572148fc1b283b68d8861.sol",
        "function": "transfer(address,uint256)",
        "lineno": 114,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 5361,
        "code": " _value);\n        retur",
        "debug": "calldata_TokenController_32 + 4: 0xc290137095b13347e55005a6dc184559e0489f1233480050d0fb4bba17d34179\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TokenController_4: 0x9c9efb7ae5acd378025256a3945f5859076e809243093d9ecae2636c9fd28979\nstorage_0: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xc290137095b13347e55005a6dc184559e0489f1233480050d0fb4bba17d34179\ncalldata_TokenController_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenController: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `transfer(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/4/0x2ad180cbaffbc97237f572148fc1b283b68d8861.sol",
        "function": "transfer(address,uint256)",
        "lineno": 118,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 6156,
        "code": "ClaimedTokens(_token, controller,",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function claimTokens(address). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/4/0x2ad180cbaffbc97237f572148fc1b283b68d8861.sol",
        "function": "claimTokens(address)",
        "lineno": 230,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 6345,
        "code": "lowed;\n\n\n}\n\n\n\ncontrac",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/4/0x2ad180cbaffbc97237f572148fc1b283b68d8861.sol",
        "function": "claimTokens(address)",
        "lineno": 235,
        "title": "Message call to external contract",
        "type": "Warning"
      }
    ],
    "success": true
  }
}