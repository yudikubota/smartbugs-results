{
  "contract": "0x54a7c606ea45f9b20cff8dbe232cdf6146cb7d26",
  "tool": "mythril",
  "start": 1563824424.1326647,
  "end": 1563824926.8051481,
  "duration": 502.67248344421387,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 442,
        "code": " msg.value * 10000",
        "debug": "callvalue: 0x9e341779063fce813070aa546c20f27b947d14200a8d51145f02f698748549ff\nstorage_10: 0x0\ntimestamp: 0x0\nretval_400: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldatasize_ExToke: 0x3\n",
        "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/31/0x54a7c606ea45f9b20cff8dbe232cdf6146cb7d26.sol",
        "function": "fallback",
        "lineno": 111,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 459,
        "code": "(finishTime < bloc",
        "debug": "callvalue: 0x800000000000000000000000000000000000000000000000000000000000000\nstorage_10: 0x0\nstorage_3: 0x0\ntimestamp: 0x0\nretval_400: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldatasize_ExToke: 0x3\n",
        "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/31/0x54a7c606ea45f9b20cff8dbe232cdf6146cb7d26.sol",
        "function": "fallback",
        "lineno": 114,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 528,
        "code": "        }\n        else if(finishTime < bloc",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xa0fb9882801005baf812dd4fd1f2023f87e691ed2c18eb3f700ba638588c41e0\ncallvalue: 0x5900011512641326279c092d95206e02f31380c38c0566f014302a28a8b8435\nstorage_10: 0x0\nstorage_3: 0xda1a6c72ff3b8183077812dac9bdd4027a25a6187be3214cdfe544a7229b5f20\ntimestamp: 0x0\nretval_400: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldatasize_ExToke: 0x3\n",
        "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/31/0x54a7c606ea45f9b20cff8dbe232cdf6146cb7d26.sol",
        "function": "fallback",
        "lineno": 113,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 541,
        "code": "f[tokenAdmin] += c",
        "debug": "callvalue: 0x800000000000000000000000000000000000000000000000000000000000000\nstorage_10: 0x0\nstorage_3: 0x0\ntimestamp: 0x0\nretval_400: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldatasize_ExToke: 0x3\n",
        "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/31/0x54a7c606ea45f9b20cff8dbe232cdf6146cb7d26.sol",
        "function": "fallback",
        "lineno": 115,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 677,
        "code": "vTokens() public returns (bool success){",
        "debug": "storage_3: 0x57f25cd000000000000000000000000000000000000000000000000000000000\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\nUDiv(storage_9,_256): 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_10: 0x0\ntimestamp: 0x1\nretval_400: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldatasize_ExToke: 0x3\n",
        "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/31/0x54a7c606ea45f9b20cff8dbe232cdf6146cb7d26.sol",
        "function": "fallback",
        "lineno": 120,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 3163,
        "code": "value;\n        emit Tran",
        "debug": "storage_12: 0x0\nstorage_660301456019777184113296434797620819555017468543624515662331739614079884729 +\nstorage_12: 0x0\ncalldata_ExToke_32 + 36: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_15: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ntimestamp: 0x0\nstorage_11: 0x1\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_ExToke_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_ExToke_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_ExToke: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer underflow exists in the function `transferFrom(address,address,uint256)`.\nThe subtraction may result in a value < 0.",
        "filename": "/unique_chucks/31/0x54a7c606ea45f9b20cff8dbe232cdf6146cb7d26.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 100,
        "title": "Integer Underflow",
        "type": "Warning"
      },
      {
        "address": 3240,
        "code": "to, value);\n        re",
        "debug": "storage_15: 0xf671b0f621882baccd108fdc2d2c080f3218b46b5c26a661f591b7faf3e1ef36\ncalldata_ExToke_32 + 36: 0x450d0ddfdbfaea6ee52797dc68a981ed135e9ac0ffb666713569c500039dc8a4\nstorage_12: 0x0\nstorage_660301456019777184113296434797620819555017468543624515662331739614079884729 +\nstorage_12: 0x0\ntimestamp: 0x0\nstorage_11: 0x1\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x450d0ddfdbfaea6ee52797dc68a981ed135e9ac0ffb666713569c500039dc8a4\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_ExToke_4: 0x450d0ddfdbfaea6ee52797dc68a981ed135e9ac0ffb666713569c500039dc8a4\ncalldata_ExToke_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_ExToke: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `transferFrom(address,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/31/0x54a7c606ea45f9b20cff8dbe232cdf6146cb7d26.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 101,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 3603,
        "code": "    balanceOf[msg.sender] += amount;\n        ",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_12: 0x0\nstorage_660301456019777184113296434797620819555017468543624515662331739614079884729 +\nstorage_12: 0x0\nstorage_6: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ntimestamp: 0x1\nstorage_11: 0x1\ncalldata_ExToke_0: 0x3ccfd60b00000000000000000000000000000000000000000000000000000000\ncalldatasize_ExToke: 0x4\nstorage_13: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/31/0x54a7c606ea45f9b20cff8dbe232cdf6146cb7d26.sol",
        "function": "withdraw()",
        "lineno": 135,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3794,
        "code": "[1543665600, 1546344000, 1549022400, 1551441600, 1554120000, 1556712000,\n    1559390400, 1561982400, 1564660800, 1567339200, 1569931200, 1572609600,\n    1575201600, 1577880000, 1580558400, 1583064000, 1585742400, 1588334400,\n    1591012800, 1593604800, 1596283200, 1598961600, 1601553600, 1604232000];\n    \n    uint256 public nextRelease = 0",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_ExToke_4: 0x0\nstorage_11: 0x0\ncalldata_ExToke_0: 0x443e324400000000000000000000000000000000000000000000000000000000\ncalldatasize_ExToke: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/31/0x54a7c606ea45f9b20cff8dbe232cdf6146cb7d26.sol",
        "function": "_function_0x443e3244",
        "lineno": 39,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3848,
        "code": "y -= releaseAmount;\n     ",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_12: 0x0\nstorage_11: 0x0\ncalldata_ExToke_0: 0x670f4bd400000000000000000000000000000000000000000000000000000000\ncalldatasize_ExToke: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/31/0x54a7c606ea45f9b20cff8dbe232cdf6146cb7d26.sol",
        "function": "releaseDivTokens()",
        "lineno": 123,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3901,
        "code": "t * scaling) + scaledRemainder;\n     ",
        "debug": "10_EXP_Concat(0, Extract(15, 8, storage_2)): 0xe212800015804003672ff288305f1d179422721807e51ba4a0055ec1f7efac84\nstorage_660301456019777184113296434797620819555017468543624515662331739614079884729 +\nstorage_12: 0x0\nstorage_12: 0x0\ntimestamp: 0x1\nstorage_11: 0x1\ncalldata_ExToke_0: 0x670f4bd400000000000000000000000000000000000000000000000000000000\ncalldatasize_ExToke: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `releaseDivTokens()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/31/0x54a7c606ea45f9b20cff8dbe232cdf6146cb7d26.sol",
        "function": "releaseDivTokens()",
        "lineno": 124,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 3912,
        "code": "videndPerToken += available / t",
        "debug": "10_EXP_Concat(0, Extract(15, 8, storage_2)): 0x3c4400873801422f8a18dc2286807160400d944a11fc002d381c000482b515\nstorage_660301456019777184113296434797620819555017468543624515662331739614079884729 +\nstorage_12: 0x0\nstorage_12: 0x0\nstorage_5: 0xee9f777b8605d6e773325935a460329304c923bfb8986fd1cb6e297974074ff\ntimestamp: 0x1\nstorage_11: 0x1\ncalldata_ExToke_0: 0x670f4bd400000000000000000000000000000000000000000000000000000000\ncalldatasize_ExToke: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer underflow exists in the function `releaseDivTokens()`.\nThe subtraction may result in a value < 0.",
        "filename": "/unique_chucks/31/0x54a7c606ea45f9b20cff8dbe232cdf6146cb7d26.sol",
        "function": "releaseDivTokens()",
        "lineno": 125,
        "title": "Integer Underflow",
        "type": "Warning"
      },
      {
        "address": 3928,
        "code": "nder = available % totalSupply;\n        nex",
        "debug": "storage_18: 0xd6a27ff3fc0121e1cffce3a3febc1db00039e18f5013063ea8bf3f8c73008200\nstorage_660301456019777184113296434797620819555017468543624515662331739614079884729 +\nstorage_12: 0x0\nstorage_12: 0x0\nstorage_13: 0x1\n10_EXP_Concat(0, Extract(15, 8, storage_2)): 0x9e5b3e0e2d98968ced01725c441a8dd682effe2af0b18cb8c860e9c0367205\ntimestamp: 0x1\nstorage_11: 0x1\ncalldata_ExToke_0: 0x670f4bd400000000000000000000000000000000000000000000000000000000\ncalldatasize_ExToke: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `releaseDivTokens()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/31/0x54a7c606ea45f9b20cff8dbe232cdf6146cb7d26.sol",
        "function": "releaseDivTokens()",
        "lineno": 126,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 3942,
        "code": "   }\n\n    function with",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_660301456019777184113296434797620819555017468543624515662331739614079884729 +\nstorage_12: 0x0\nstorage_12: 0x0\ntimestamp: 0x1\nstorage_11: 0x1\ncalldata_ExToke_0: 0x670f4bd400000000000000000000000000000000000000000000000000000000\ncalldatasize_ExToke: 0x4\nstorage_6: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/31/0x54a7c606ea45f9b20cff8dbe232cdf6146cb7d26.sol",
        "function": "releaseDivTokens()",
        "lineno": 129,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 4397,
        "code": "-= sendAmount * 3;\n        }\n        return true;\n    }\n\n}",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/31/0x54a7c606ea45f9b20cff8dbe232cdf6146cb7d26.sol",
        "function": "swap(uint256)",
        "lineno": 153,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 5218,
        "code": ";\n        }\n        uint2",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_12: 0x0\nstorage_11: 0x0\ncalldata_ExToke_0: 0x3ccfd60b00000000000000000000000000000000000000000000000000000000\ncalldatasize_ExToke: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/31/0x54a7c606ea45f9b20cff8dbe232cdf6146cb7d26.sol",
        "function": "withdraw()",
        "lineno": 60,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 5316,
        "code": "      scaledDividendBalanceOf[account] += balanceOf[accoun",
        "debug": "storage_12: 0x0\nstorage_660301456019777184113296434797620819555017468543624515662331739614079884729 +\nstorage_12: 0x0\nstorage_6: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x1\nstorage_15: 0x0\nstorage_18: 0x0\nstorage_13: 0x1\n10_EXP_Concat(0, Extract(15, 8, storage_2)): 0x0\ntimestamp: 0x1\nstorage_11: 0x1\ncalldata_ExToke_0: 0x3ccfd60b00000000000000000000000000000000000000000000000000000000\ncalldatasize_ExToke: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer underflow exists in the function `withdraw()`.\nThe subtraction may result in a value < 0.",
        "filename": "/unique_chucks/31/0x54a7c606ea45f9b20cff8dbe232cdf6146cb7d26.sol",
        "function": "withdraw()",
        "lineno": 64,
        "title": "Integer Underflow",
        "type": "Warning"
      }
    ],
    "success": true
  }
}