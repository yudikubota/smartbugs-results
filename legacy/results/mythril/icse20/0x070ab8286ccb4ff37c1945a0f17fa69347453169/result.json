{
  "contract": "0x070ab8286ccb4ff37c1945a0f17fa69347453169",
  "tool": "mythril",
  "start": 1563582200.7499397,
  "end": 1563582401.6453629,
  "duration": 200.89542317390442,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 986,
        "code": "rdFunds();\n  }\n\n  // Override this ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/19/0x070ab8286ccb4ff37c1945a0f17fa69347453169.sol",
        "function": "fallback",
        "lineno": 151,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 986,
        "code": "rdFunds();\n  }\n\n  // Override this ",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1889\n",
        "filename": "/unique_chucks/19/0x070ab8286ccb4ff37c1945a0f17fa69347453169.sol",
        "function": "fallback",
        "lineno": 151,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 1796,
        "code": "ct SMEBankingP",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_3: 0x1bbfffffbffffbfffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncallvalue: 0x3\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_Sale_0: 0x700000000000000000000000000000000000000000000000000000000\ncalldatasize_Sale: 0x4\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/19/0x070ab8286ccb4ff37c1945a0f17fa69347453169.sol",
        "function": "fallback",
        "lineno": 51,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}