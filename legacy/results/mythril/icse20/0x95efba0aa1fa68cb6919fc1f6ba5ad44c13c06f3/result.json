{
  "contract": "0x95efba0aa1fa68cb6919fc1f6ba5ad44c13c06f3",
  "tool": "mythril",
  "start": 1563331539.4984279,
  "end": 1563332143.6110177,
  "duration": 604.1125898361206,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 1324,
        "code": "ic returns (bool success) {\n        allowed[msg.sender][_spender] = _value;\n        emit Approval(msg.sender, _spender, _value);\n        if(!_spender.call(_extraData)) { revert(); }\n        return true;\n    }\n}",
        "debug": "calldata_lvdongli_32 + 36: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_lvdongli_0: 0xb11c4fd800000000000000000000000000000000000000000000000000000000\ncalldatasize_lvdongli: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `approveAndCallcode(address,uint256,bytes)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x95efba0aa1fa68cb6919fc1f6ba5ad44c13c06f3.sol",
        "function": "approveAndCallcode(address,uint256,bytes)",
        "lineno": 85,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1495,
        "code": "ublic returns (bool success) {\n        allowed[msg.sender][_spender] = _value;\n        emit Approval(msg.sender, _spender, _value);\n        if(!_spender.call(bytes4(bytes32(keccak256(\"receiveApproval(address,uint256,address,bytes)\"))), msg.sender, _value, this, _extraData)) { revert(); }\n        return true;\n    }\n\n    function approveAndCallcode(address _spender, uint256 _value, bytes _extraDa",
        "debug": "calldata_lvdongli_32 + 36: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_lvdongli_0: 0xcae9ca5100000000000000000000000000000000000000000000000000000000\ncalldatasize_lvdongli: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `approveAndCall(address,uint256,bytes)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x95efba0aa1fa68cb6919fc1f6ba5ad44c13c06f3.sol",
        "function": "approveAndCall(address,uint256,bytes)",
        "lineno": 78,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 4295,
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_contracts/0x95efba0aa1fa68cb6919fc1f6ba5ad44c13c06f3.sol",
        "function": "approveAndCallcode(address,uint256,bytes)",
        "lineno": 91,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 4963,
        "code": "bytes)\"))), msg.sender, _value, this, _extraData)) { revert(); }\n        return true;\n    }\n\n    function approveAndCallcode(addr",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_contracts/0x95efba0aa1fa68cb6919fc1f6ba5ad44c13c06f3.sol",
        "function": "approveAndCall(address,uint256,bytes)",
        "lineno": 81,
        "title": "Message call to external contract",
        "type": "Warning"
      }
    ],
    "success": true
  }
}