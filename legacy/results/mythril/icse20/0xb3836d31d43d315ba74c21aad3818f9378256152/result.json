{
  "contract": "0xb3836d31d43d315ba74c21aad3818f9378256152",
  "tool": "mythril",
  "start": 1563513572.4041896,
  "end": 1563513635.4782932,
  "duration": 63.074103593826294,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 845,
        "code": "wPriceSetter The address of new PriceSetter.\n  */\n  function setPriceSetter(address newPriceSetter) \n    public \n    onlyOwner() \n    checkAccess()\n    atState(State.Active) \n  {\n    m_priceSetter = newPriceSetter;\n  }\n  \n  /**\n  * @dev Try create new player. \n  * @param addr Adrress of pretender player.\n  * @param inputAmount Input tokens amount of pretender player.\n  * @param referralAddr Referral address of pretender player.\n  * @return Whether specified player in game or not.\n ",
        "debug": "calldata_TheGame_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_TheGame_0: 0x68794b8700000000000000000000000000000000000000000000000000000000\ncalldatasize_TheGame: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `setState(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol",
        "function": "setState(string)",
        "lineno": 609,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 857,
        "code": "wPriceSetter The address of new PriceSetter.\n  */\n  function setPriceSetter(address newPriceSetter) \n    public \n    onlyOwner() \n    checkAccess()\n    atState(State.Active) \n  {\n    m_priceSetter = newPriceSetter;\n  }\n  \n  /**\n  * @dev Try create new player. \n  * @param addr Adrress of pretender player.\n  * @param inputAmount Input tokens amount of pretender player.\n  * @param referralAddr Referral address of pretender player.\n  * @return Whether specified player in game or not.\n ",
        "debug": "calldata_TheGame_4 + calldata_TheGame_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8\ncalldata_TheGame_0: 0x68794b8700000000000000000000000000000000000000000000000000000000\ncalldatasize_TheGame: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `setState(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol",
        "function": "setState(string)",
        "lineno": 609,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 866,
        "code": "wPriceSetter The address of new PriceSetter.\n  */\n  function setPriceSetter(address newPriceSetter) \n    public \n    onlyOwner() \n    checkAccess()\n    atState(State.Active) \n  {\n    m_priceSetter = newPriceSetter;\n  }\n  \n  /**\n  * @dev Try create new player. \n  * @param addr Adrress of pretender player.\n  * @param inputAmount Input tokens amount of pretender player.\n  * @param referralAddr Referral address of pretender player.\n  * @return Whether specified player in game or not.\n ",
        "debug": "calldata_TheGame_4 + calldata_TheGame_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc1\ncalldata_TheGame_0: 0x68794b8700000000000000000000000000000000000000000000000000000000\ncalldatasize_TheGame: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `setState(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol",
        "function": "setState(string)",
        "lineno": 609,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 872,
        "code": "wPriceSetter The address of new PriceSetter.\n  */\n  function setPriceSetter(address newPriceSetter) \n    public \n    onlyOwner() \n    checkAccess()\n    atState(State.Active) \n  {\n    m_priceSetter = newPriceSetter;\n  }\n  \n  /**\n  * @dev Try create new player. \n  * @param addr Adrress of pretender player.\n  * @param inputAmount Input tokens amount of pretender player.\n  * @param referralAddr Referral address of pretender player.\n  * @return Whether specified player in game or not.\n ",
        "debug": "calldata_TheGame_4 + calldata_TheGame_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff41\ncalldata_TheGame_0: 0x68794b8700000000000000000000000000000000000000000000000000000000\ncalldatasize_TheGame: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `setState(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol",
        "function": "setState(string)",
        "lineno": 609,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1727,
        "code": "fier isPlayer(ad",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0xfe00\ncalldata_TheGame_0: 0x1609e43b00000000000000000000000000000000000000000000000000000000\ncalldatasize_TheGame: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol",
        "function": "levelStartupTimestamp()",
        "lineno": 260,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 1880,
        "code": "fier isPlayer(ad",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0xfe00\ncaller: 0xfe\ncalldata_TheGame_0: 0x1e9bf0da00000000000000000000000000000000000000000000000000000000\ncalldatasize_TheGame: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol",
        "function": "disown()",
        "lineno": 260,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2016,
        "code": "fier isPlayer(ad",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0xfe00\ncalldata_TheGame_0: 0x2e56fd7a00000000000000000000000000000000000000000000000000000000\ncalldatasize_TheGame: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol",
        "function": "playerInfo(address)",
        "lineno": 260,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2163,
        "code": "fier isPlayer(ad",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0xfe00\ncalldata_TheGame_0: 0x4b11469100000000000000000000000000000000000000000000000000000000\ncalldatasize_TheGame: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol",
        "function": "playerInfo(address)",
        "lineno": 260,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2406,
        "code": "  {\n    if (!m_playersStorage.pla",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol",
        "function": "playerInfo(address)",
        "lineno": 377,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 2543,
        "code": "fier isPlayer(ad",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0xfe00\ncalldata_TheGame_0: 0x4c95baf300000000000000000000000000000000000000000000000000000000\ncalldatasize_TheGame: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol",
        "function": "compoundingFreq()",
        "lineno": 260,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2696,
        "code": ";\n    _;\n  }\n  \n  modifier",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0xfe00\ncaller: 0xfe\ncalldata_TheGame_0: 0x63791e3c00000000000000000000000000000000000000000000000000000000\ncalldatasize_TheGame: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol",
        "function": "setPriceSetter(address)",
        "lineno": 261,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2905,
        "code": "fier isPlayer(ad",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0xfe00\ncalldata_TheGame_0: 0x684edea800000000000000000000000000000000000000000000000000000000\ncalldatasize_TheGame: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol",
        "function": "ponziPriceInWei()",
        "lineno": 260,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3057,
        "code": ";\n    _;\n  }\n  \n  modifier",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0xfe00\ncaller: 0xfe\ncalldata_TheGame_0: 0x68794b8700000000000000000000000000000000000000000000000000000000\ncalldatasize_TheGame: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol",
        "function": "setState(string)",
        "lineno": 261,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3111,
        "code": "\n    onlyOwner",
        "debug": "storage_0: 0x0\ncalldata_TheGame_4 + calldata_TheGame_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01\ncaller: 0x0\ncalldata_TheGame_0: 0x68794b8700000000000000000000000000000000000000000000000000000000\ncalldatasize_TheGame: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `setState(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol",
        "function": "setState(string)",
        "lineno": 612,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 3245,
        "code": "   public \n    onlyOwner(",
        "debug": "storage_0: 0x0\nmem_128 +\n32 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 + calldata_TheGame_4 + calldata_TheGame_4)): 0x20\ncalldata_TheGame_4 + calldata_TheGame_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffee1\ncaller: 0x0\ncalldata_TheGame_0: 0x68794b8700000000000000000000000000000000000000000000000000000000\ncalldatasize_TheGame: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `setState(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol",
        "function": "setState(string)",
        "lineno": 612,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 4059,
        "code": "fier isPlayer(ad",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0xfe00\ncalldata_TheGame_0: 0x6fd5ae1500000000000000000000000000000000000000000000000000000000\ncalldatasize_TheGame: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol",
        "function": "level()",
        "lineno": 260,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 4123,
        "code": "fier isPlayer(ad",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0xfe00\ncalldata_TheGame_0: 0x7c3a00fd00000000000000000000000000000000000000000000000000000000\ncalldatasize_TheGame: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol",
        "function": "interestRate()",
        "lineno": 260,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 4193,
        "code": "fier isPlayer(ad",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0xfe00\ncalldata_TheGame_0: 0x8d0aadca00000000000000000000000000000000000000000000000000000000\ncalldatasize_TheGame: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol",
        "function": "playerDelayOnExit(address)",
        "lineno": 260,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 5041,
        "code": "ub.com/ethereum/EIPs/issues/677\n  *\n ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol",
        "function": "totalPonziInGame()",
        "lineno": 546,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 5144,
        "code": "fier isPlayer(ad",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0xfe00\ncalldata_TheGame_0: 0xc0ee0b8a00000000000000000000000000000000000000000000000000000000\ncalldatasize_TheGame: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol",
        "function": "tokenFallback(address,uint256,bytes)",
        "lineno": 260,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 5373,
        "code": "nction totalPonziInGame() ",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0xfe00\ncalldata_TheGame_0: 0xc19d93fb00000000000000000000000000000000000000000000000000000000\ncalldatasize_TheGame: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol",
        "function": "state()",
        "lineno": 517,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 5546,
        "code": "fier isPlayer(ad",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0xfe00\ncalldata_TheGame_0: 0xc3082e9500000000000000000000000000000000000000000000000000000000\ncalldatasize_TheGame: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol",
        "function": "playerOutputAtNow(address)",
        "lineno": 260,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 6472,
        "code": "fier isPlayer(ad",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0xfe00\ncalldata_TheGame_0: 0xe9fad8ee00000000000000000000000000000000000000000000000000000000\ncalldatasize_TheGame: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol",
        "function": "exit()",
        "lineno": 260,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 10416,
        "code": "6 amo",
        "debug": "storage_0: 0x100\nstorage_6: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7e400\ncalldata_TheGame_0: 0x2e56fd7a00000000000000000000000000000000000000000000000000000000\ncalldatasize_TheGame: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `playerInfo(address)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol",
        "function": "playerInfo(address)",
        "lineno": 183,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 10429,
        "code": "tes data) publ",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0x100\nstorage_6: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdd00\ncalldata_TheGame_0: 0xc0ee0b8a00000000000000000000000000000000000000000000000000000000\ncalldatasize_TheGame: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol",
        "function": "tokenFallback(address,uint256,bytes)",
        "lineno": 183,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 10453,
        "code": " }\n}\n\n\n// see:",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0x100\ntimestamp: 0x0\nstorage_5: 0x1\ncaller: 0x1\ncalldata_TheGame_0: 0x68794b8700000000000000000000000000000000000000000000000000000000\ncalldatasize_TheGame: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol",
        "function": "setState(string)",
        "lineno": 177,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}