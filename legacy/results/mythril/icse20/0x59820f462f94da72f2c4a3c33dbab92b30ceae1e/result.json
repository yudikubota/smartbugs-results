{
  "contract": "0x59820f462f94da72f2c4a3c33dbab92b30ceae1e",
  "tool": "mythril",
  "start": 1563779555.2824993,
  "end": 1563780140.0666444,
  "duration": 584.784145116806,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 695,
        "code": "t;\n            if ( c",
        "debug": "timestamp: 0x0\nstorage_1: 0x1\nreturndatasize: 0x20\nretval_1989: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_YeeLockerForYeeEcology_0: 0x8fd6589000000000000000000000000000000000000000000000000000000000\ncalldatasize_YeeLockerForYeeEcology: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer underflow exists in the function `getCurrentAvailableFunds()`.\nThe subtraction may result in a value < 0.",
        "filename": "/unique_chucks/45/0x59820f462f94da72f2c4a3c33dbab92b30ceae1e.sol",
        "function": "getCurrentAvailableFunds()",
        "lineno": 250,
        "title": "Integer Underflow",
        "type": "Warning"
      },
      {
        "address": 703,
        "code": "nt;\n            if ( count >= 1 && c",
        "debug": "The exception is triggered under the following conditions:\n\nreturndatasize: 0x20\nretval_1989: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_YeeLockerForYeeEcology_0: 0x8fd6589000000000000000000000000000000000000000000000000000000000\ncalldatasize_YeeLockerForYeeEcology: 0x4\nstorage_3: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/45/0x59820f462f94da72f2c4a3c33dbab92b30ceae1e.sol",
        "function": "getCurrentAvailableFunds()",
        "lineno": 250,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 706,
        "code": "nt;\n            if ( count >= 1 && count",
        "debug": "storage_3: 0x1\ntimestamp: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_1: 0x0\nreturndatasize: 0x20\nretval_1989: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_YeeLockerForYeeEcology_0: 0x8fd6589000000000000000000000000000000000000000000000000000000000\ncalldatasize_YeeLockerForYeeEcology: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `getCurrentAvailableFunds()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/45/0x59820f462f94da72f2c4a3c33dbab92b30ceae1e.sol",
        "function": "getCurrentAvailableFunds()",
        "lineno": 250,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1140,
        "code": "w - timeLockedStart)/unlockPeriod + 1; /",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/45/0x59820f462f94da72f2c4a3c33dbab92b30ceae1e.sol",
        "function": "unlockCurrentAvailableFunds()",
        "lineno": 244,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 1541,
        "code": "       else{\n           ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/45/0x59820f462f94da72f2c4a3c33dbab92b30ceae1e.sol",
        "function": "_balance()",
        "lineno": 236,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 1616,
        "code": " count <= 4 ){\n    ",
        "debug": "calldata_YeeLockerForYeeEcology_4: 0x0\ncalldata_YeeLockerForYeeEcology_32 + 4: 0x1\ncalldata_YeeLockerForYeeEcology_0: 0x6986ab8200000000000000000000000000000000000000000000000000000000\ncalldatasize_YeeLockerForYeeEcology: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer underflow exists in the function `getNeedLockFundsFromPeriod(uint256,uint256)`.\nThe subtraction may result in a value < 0.",
        "filename": "/unique_chucks/45/0x59820f462f94da72f2c4a3c33dbab92b30ceae1e.sol",
        "function": "getNeedLockFundsFromPeriod(uint256,uint256)",
        "lineno": 282,
        "title": "Integer Underflow",
        "type": "Warning"
      },
      {
        "address": 1624,
        "code": "& count <= 4 ){\n                un",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_YeeLockerForYeeEcology_0: 0x6986ab8200000000000000000000000000000000000000000000000000000000\ncalldatasize_YeeLockerForYeeEcology: 0x4\nstorage_3: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/45/0x59820f462f94da72f2c4a3c33dbab92b30ceae1e.sol",
        "function": "getNeedLockFundsFromPeriod(uint256,uint256)",
        "lineno": 282,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 1627,
        "code": "& count <= 4 ){\n                unlock",
        "debug": "storage_3: 0x1\ncalldata_YeeLockerForYeeEcology_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_YeeLockerForYeeEcology_32 + 4: 0x0\ncalldata_YeeLockerForYeeEcology_0: 0x6986ab8200000000000000000000000000000000000000000000000000000000\ncalldatasize_YeeLockerForYeeEcology: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `getNeedLockFundsFromPeriod(uint256,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/45/0x59820f462f94da72f2c4a3c33dbab92b30ceae1e.sol",
        "function": "getNeedLockFundsFromPeriod(uint256,uint256)",
        "lineno": 282,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1989,
        "code": "ndTime, uint256 startTim",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/45/0x59820f462f94da72f2c4a3c33dbab92b30ceae1e.sol",
        "function": "getCurrentAvailableFunds()",
        "lineno": 274,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 1989,
        "code": "ndTime, uint256 startTim",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1140\n",
        "filename": "/unique_chucks/45/0x59820f462f94da72f2c4a3c33dbab92b30ceae1e.sol",
        "function": "unlockCurrentAvailableFunds()",
        "lineno": 274,
        "title": "Multiple Calls",
        "type": "Information"
      }
    ],
    "success": true
  }
}