{
  "contract": "0x218de84696302333bdeefc332b021c1f866b2b49",
  "tool": "mythril",
  "start": 1563656928.3263125,
  "end": 1563657027.1581461,
  "duration": 98.83183360099792,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 1376,
        "code": "\n    event RefundPo",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol",
        "function": "tryToFinalize()",
        "lineno": 1124,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 2432,
        "code": "otesByAddress[msg.sender].w",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol",
        "function": "vote(bool)",
        "lineno": 926,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 2432,
        "code": "otesByAddress[msg.sender].w",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2629\n",
        "filename": "/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol",
        "function": "vote(bool)",
        "lineno": 926,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 2629,
        "code": "].agree = false;\n\n ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol",
        "function": "vote(bool)",
        "lineno": 927,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 3635,
        "code": "ubjectApproved();\n    }\n\n   ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol",
        "function": "onTokenTransfer(address,uint256)",
        "lineno": 981,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 4222,
        "code": "of \"u",
        "debug": "storage_6: 0xb29206ddb6d74c91a5619cdd1a9f35735d72238a42741c133bd3b5b62099eeeb\nstorage_5: 0xc4720a1966160d1848648bdc3b5cb3247242b23c7c6b8bc3a30226b77f5da4db\ncalldata_TapPoll_0: 0x80322cbd00000000000000000000000000000000000000000000000000000000\ncalldatasize_TapPoll: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `isNowApproved()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol",
        "function": "isNowApproved()",
        "lineno": 289,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 4235,
        "code": "sions\".\n */\nco",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_6: 0x65f83ccf5bffcf4b40923166d45393c74f38cf900f5b7ade3e9dc36ea0a329eb\nstorage_5: 0xf690104a71d825b94041140a70ac8408de0cc1588518a2d00031846a030f38b1\ncalldata_TapPoll_0: 0x80322cbd00000000000000000000000000000000000000000000000000000000\ncalldatasize_TapPoll: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol",
        "function": "isNowApproved()",
        "lineno": 289,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 4526,
        "code": "     require(token.balanceOf(msg",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol",
        "function": "tryToFinalize()",
        "lineno": 1118,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 4564,
        "code": "e\n * @dev The ",
        "debug": "The exception is triggered under the following conditions:\n\ntimestamp: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_7: 0x0\nstorage_0 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_3: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_2: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_TapPoll_0: 0x43c14b2200000000000000000000000000000000000000000000000000000000\ncalldatasize_TapPoll: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol",
        "function": "revokeVote()",
        "lineno": 287,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}