{
  "contract": "0x8ced9898d2a4c8fa6ddb3a299de11884a5e27bab",
  "tool": "mythril",
  "start": 1563323049.5406575,
  "end": 1563323089.5878317,
  "duration": 40.04717421531677,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 833,
        "code": "Token beneficiary\n   * @param _weiAmount Amount of wei contributed\n   */\n  function _preValidatePurchase(address _beneficiary, uint256 _weiAmount) internal isWhitelisted(_beneficiary) {\n   ",
        "debug": "calldata_WhitelistedCrowdsale_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_WhitelistedCrowdsale_0: 0x8c10671c00000000000000000000000000000000000000000000000000000000\ncalldatasize_WhitelistedCrowdsale: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `addManyToWhitelist(address[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x8ced9898d2a4c8fa6ddb3a299de11884a5e27bab.sol",
        "function": "addManyToWhitelist(address[])",
        "lineno": 551,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 3062,
        "code": "CAP) {\n            return BONUS_1_RATE;\n        }\n\n        //Second Bonus Period\n ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_contracts/0x8ced9898d2a4c8fa6ddb3a299de11884a5e27bab.sol",
        "function": "getMaxContributionAmount()",
        "lineno": 664,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 3062,
        "code": "CAP) {\n            return BONUS_1_RATE;\n        }\n\n        //Second Bonus Period\n ",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function getMaxContributionAmount(). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_contracts/0x8ced9898d2a4c8fa6ddb3a299de11884a5e27bab.sol",
        "function": "getMaxContributionAmount()",
        "lineno": 664,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 4575,
        "code": " @title Ownabl",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_3: 0xfc13620e0f13c754e39b0d1817d80010b8786135bc607b5810c1f05d121154b5\ncallvalue: 0x548913ec991b4358d27a000056e8d2bbfe5e7db1fc647b5e66fcfd2a59d654e5\nretval_3062: 0x609feff64ff30af0a40f6cfdb37c6e9dfec481e00000000001cf0f001c29c3c8\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\nreturndatasize: 0x20\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_5: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xff00\ncalldatasize_WhitelistedCrowdsale: 0x3\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0x8ced9898d2a4c8fa6ddb3a299de11884a5e27bab.sol",
        "function": "fallback",
        "lineno": 50,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 4939,
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_contracts/0x8ced9898d2a4c8fa6ddb3a299de11884a5e27bab.sol",
        "function": "closeCrowdsale()",
        "lineno": 713,
        "title": "Message call to external contract",
        "type": "Informational"
      }
    ],
    "success": true
  }
}