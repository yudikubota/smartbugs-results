{"success": false, "error": "Solc experienced a fatal error (code 1).\n\n/unique_chucks/22/0x802c31c7c0a89d3d289ca91cd57892d8338bc9ce.sol:22:21: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n    if (!assertion) throw;\r\n                    ^---^\n/unique_chucks/22/0x802c31c7c0a89d3d289ca91cd57892d8338bc9ce.sol:115:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use \"constructor(...) { ... }\" instead.\n  function ReserveToken() {\r\n  ^ (Relevant source part starts here and spans across multiple lines).\n/unique_chucks/22/0x802c31c7c0a89d3d289ca91cd57892d8338bc9ce.sol:119:31: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n    if (msg.sender != minter) throw;\r\n                              ^---^\n/unique_chucks/22/0x802c31c7c0a89d3d289ca91cd57892d8338bc9ce.sol:124:31: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n    if (msg.sender != minter) throw;\r\n                              ^---^\n/unique_chucks/22/0x802c31c7c0a89d3d289ca91cd57892d8338bc9ce.sol:125:37: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n    if (balances[account] < amount) throw;\r\n                                    ^---^\n/unique_chucks/22/0x802c31c7c0a89d3d289ca91cd57892d8338bc9ce.sol:168:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use \"constructor(...) { ... }\" instead.\n  function EtherTradex() public {\r\n  ^ (Relevant source part starts here and spans across multiple lines).\n/unique_chucks/22/0x802c31c7c0a89d3d289ca91cd57892d8338bc9ce.sol:178:5: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n    throw;\r\n    ^---^\n/unique_chucks/22/0x802c31c7c0a89d3d289ca91cd57892d8338bc9ce.sol:182:30: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n    if (msg.sender != admin) throw;\r\n                             ^---^\n/unique_chucks/22/0x802c31c7c0a89d3d289ca91cd57892d8338bc9ce.sol:187:30: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n    if (msg.sender != admin) throw;\r\n                             ^---^\n/unique_chucks/22/0x802c31c7c0a89d3d289ca91cd57892d8338bc9ce.sol:192:30: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n    if (msg.sender != admin) throw;\r\n                             ^---^\n/unique_chucks/22/0x802c31c7c0a89d3d289ca91cd57892d8338bc9ce.sol:197:30: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n    if (msg.sender != admin) throw;\r\n                             ^---^\n/unique_chucks/22/0x802c31c7c0a89d3d289ca91cd57892d8338bc9ce.sol:198:29: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n    if (feeMake_ > feeMake) throw;\r\n                            ^---^\n/unique_chucks/22/0x802c31c7c0a89d3d289ca91cd57892d8338bc9ce.sol:203:30: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n    if (msg.sender != admin) throw;\r\n                             ^---^\n/unique_chucks/22/0x802c31c7c0a89d3d289ca91cd57892d8338bc9ce.sol:204:53: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n    if (feeTake_ > feeTake || feeTake_ < feeRebate) throw;\r\n                                                    ^---^\n/unique_chucks/22/0x802c31c7c0a89d3d289ca91cd57892d8338bc9ce.sol:209:30: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n    if (msg.sender != admin) throw;\r\n                             ^---^\n/unique_chucks/22/0x802c31c7c0a89d3d289ca91cd57892d8338bc9ce.sol:210:57: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n    if (feeRebate_ < feeRebate || feeRebate_ > feeTake) throw;\r\n                                                        ^---^\n/unique_chucks/22/0x802c31c7c0a89d3d289ca91cd57892d8338bc9ce.sol:220:41: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n    if (tokens[0][msg.sender] < amount) throw;\r\n                                        ^---^\n/unique_chucks/22/0x802c31c7c0a89d3d289ca91cd57892d8338bc9ce.sol:222:43: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n    if (!msg.sender.call.value(amount)()) throw;\r\n                                          ^---^\n/unique_chucks/22/0x802c31c7c0a89d3d289ca91cd57892d8338bc9ce.sol:228:19: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n    if (token==0) throw;\r\n                  ^---^\n/unique_chucks/22/0x802c31c7c0a89d3d289ca91cd57892d8338bc9ce.sol:229:63: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n    if (!Token(token).transferFrom(msg.sender, this, amount)) throw;\r\n                                                              ^---^\n/unique_chucks/22/0x802c31c7c0a89d3d289ca91cd57892d8338bc9ce.sol:235:19: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n    if (token==0) throw;\r\n                  ^---^\n/unique_chucks/22/0x802c31c7c0a89d3d289ca91cd57892d8338bc9ce.sol:236:45: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n    if (tokens[token][msg.sender] < amount) throw;\r\n                                            ^---^\n/unique_chucks/22/0x802c31c7c0a89d3d289ca91cd57892d8338bc9ce.sol:238:53: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n    if (!Token(token).transfer(msg.sender, amount)) throw;\r\n                                                    ^---^\n/unique_chucks/22/0x802c31c7c0a89d3d289ca91cd57892d8338bc9ce.sol:259:8: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n    )) throw;\r\n       ^---^\n/unique_chucks/22/0x802c31c7c0a89d3d289ca91cd57892d8338bc9ce.sol:308:119: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n    if (!(orders[msg.sender][hash] || ecrecover(sha3(\"\\x19Ethereum Signed Message:\\n32\", hash),v,r,s) == msg.sender)) throw;\r\n                                                                                                                      ^---^\n/unique_chucks/22/0x802c31c7c0a89d3d289ca91cd57892d8338bc9ce.sol:21:3: Warning: This declaration shadows a builtin symbol.\n  function assert(bool assertion) internal {\r\n  ^ (Relevant source part starts here and spans across multiple lines).\n/unique_chucks/22/0x802c31c7c0a89d3d289ca91cd57892d8338bc9ce.sol:75:7: Warning: Invoking events without \"emit\" prefix is deprecated.\n      Transfer(msg.sender, _to, _value);\r\n      ^-------------------------------^\n/unique_chucks/22/0x802c31c7c0a89d3d289ca91cd57892d8338bc9ce.sol:87:7: Warning: Invoking events without \"emit\" prefix is deprecated.\n      Transfer(_from, _to, _value);\r\n      ^--------------------------^\n/unique_chucks/22/0x802c31c7c0a89d3d289ca91cd57892d8338bc9ce.sol:98:5: Warning: Invoking events without \"emit\" prefix is deprecated.\n    Approval(msg.sender, _spender, _value);\r\n    ^------------------------------------^\n/unique_chucks/22/0x802c31c7c0a89d3d289ca91cd57892d8338bc9ce.sol:169:13: Error: Type literal_string \"0xB29F2d430d1bA862a61c1657fA73Df7607E66E11\" is not implicitly convertible to expected type address.\n    admin = \"0xB29F2d430d1bA862a61c1657fA73Df7607E66E11\";\r\n            ^------------------------------------------^\n/unique_chucks/22/0x802c31c7c0a89d3d289ca91cd57892d8338bc9ce.sol:170:18: Error: Type literal_string \"0x8F741Ab9ebc7827D7F8222Ab358A5b4CeB19Ff07\" is not implicitly convertible to expected type address.\n    feeAccount = \"0x8F741Ab9ebc7827D7F8222Ab358A5b4CeB19Ff07\";\r\n                 ^------------------------------------------^\n/unique_chucks/22/0x802c31c7c0a89d3d289ca91cd57892d8338bc9ce.sol:171:25: Error: Type literal_string \"0x0000000000000000000000000000000000000000\" is not implicitly convertible to expected type address.\n    accountLevelsAddr = \"0x0000000000000000000000000000000000000000\";\r\n                        ^------------------------------------------^\n/unique_chucks/22/0x802c31c7c0a89d3d289ca91cd57892d8338bc9ce.sol:216:5: Warning: Invoking events without \"emit\" prefix is deprecated.\n    Deposit(0, msg.sender, msg.value, tokens[0][msg.sender]);\r\n    ^------------------------------------------------------^\n/unique_chucks/22/0x802c31c7c0a89d3d289ca91cd57892d8338bc9ce.sol:223:5: Warning: Invoking events without \"emit\" prefix is deprecated.\n    Withdraw(0, msg.sender, amount, tokens[0][msg.sender]);\r\n    ^----------------------------------------------------^\n/unique_chucks/22/0x802c31c7c0a89d3d289ca91cd57892d8338bc9ce.sol:231:5: Warning: Invoking events without \"emit\" prefix is deprecated.\n    Deposit(token, msg.sender, amount, tokens[token][msg.sender]);\r\n    ^-----------------------------------------------------------^\n/unique_chucks/22/0x802c31c7c0a89d3d289ca91cd57892d8338bc9ce.sol:239:5: Warning: Invoking events without \"emit\" prefix is deprecated.\n    Withdraw(token, msg.sender, amount, tokens[token][msg.sender]);\r\n    ^------------------------------------------------------------^\n/unique_chucks/22/0x802c31c7c0a89d3d289ca91cd57892d8338bc9ce.sol:247:20: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n    bytes32 hash = sha256(this, tokenGet, amountGet, tokenGive, amountGive, expires, nonce);\r\n                   ^----------------------------------------------------------------------^\n/unique_chucks/22/0x802c31c7c0a89d3d289ca91cd57892d8338bc9ce.sol:249:5: Warning: Invoking events without \"emit\" prefix is deprecated.\n    Order(tokenGet, amountGet, tokenGive, amountGive, expires, nonce, msg.sender);\r\n    ^---------------------------------------------------------------------------^\n/unique_chucks/22/0x802c31c7c0a89d3d289ca91cd57892d8338bc9ce.sol:254:20: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n    bytes32 hash = sha256(this, tokenGet, amountGet, tokenGive, amountGive, expires, nonce);\r\n                   ^----------------------------------------------------------------------^\n/unique_chucks/22/0x802c31c7c0a89d3d289ca91cd57892d8338bc9ce.sol:256:40: Warning: \"sha3\" has been deprecated in favour of \"keccak256\"\n      (orders[user][hash] || ecrecover(sha3(\"\\x19Ethereum Signed Message:\\n32\", hash),v,r,s) == user) &&\r\n                                       ^--------------------------------------------^\n/unique_chucks/22/0x802c31c7c0a89d3d289ca91cd57892d8338bc9ce.sol:256:40: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n      (orders[user][hash] || ecrecover(sha3(\"\\x19Ethereum Signed Message:\\n32\", hash),v,r,s) == user) &&\r\n                                       ^--------------------------------------------^\n/unique_chucks/22/0x802c31c7c0a89d3d289ca91cd57892d8338bc9ce.sol:262:5: Warning: Invoking events without \"emit\" prefix is deprecated.\n    Trade(tokenGet, amount, tokenGive, amountGive * amount / amountGet, user, msg.sender);\r\n    ^-----------------------------------------------------------------------------------^\n/unique_chucks/22/0x802c31c7c0a89d3d289ca91cd57892d8338bc9ce.sol:290:20: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n    bytes32 hash = sha256(this, tokenGet, amountGet, tokenGive, amountGive, expires, nonce);\r\n                   ^----------------------------------------------------------------------^\n/unique_chucks/22/0x802c31c7c0a89d3d289ca91cd57892d8338bc9ce.sol:292:40: Warning: \"sha3\" has been deprecated in favour of \"keccak256\"\n      (orders[user][hash] || ecrecover(sha3(\"\\x19Ethereum Signed Message:\\n32\", hash),v,r,s) == user) &&\r\n                                       ^--------------------------------------------^\n/unique_chucks/22/0x802c31c7c0a89d3d289ca91cd57892d8338bc9ce.sol:292:40: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n      (orders[user][hash] || ecrecover(sha3(\"\\x19Ethereum Signed Message:\\n32\", hash),v,r,s) == user) &&\r\n                                       ^--------------------------------------------^\n/unique_chucks/22/0x802c31c7c0a89d3d289ca91cd57892d8338bc9ce.sol:302:20: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n    bytes32 hash = sha256(this, tokenGet, amountGet, tokenGive, amountGive, expires, nonce);\r\n                   ^----------------------------------------------------------------------^\n/unique_chucks/22/0x802c31c7c0a89d3d289ca91cd57892d8338bc9ce.sol:307:20: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n    bytes32 hash = sha256(this, tokenGet, amountGet, tokenGive, amountGive, expires, nonce);\r\n                   ^----------------------------------------------------------------------^\n/unique_chucks/22/0x802c31c7c0a89d3d289ca91cd57892d8338bc9ce.sol:308:49: Warning: \"sha3\" has been deprecated in favour of \"keccak256\"\n    if (!(orders[msg.sender][hash] || ecrecover(sha3(\"\\x19Ethereum Signed Message:\\n32\", hash),v,r,s) == msg.sender)) throw;\r\n                                                ^--------------------------------------------^\n/unique_chucks/22/0x802c31c7c0a89d3d289ca91cd57892d8338bc9ce.sol:308:49: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n    if (!(orders[msg.sender][hash] || ecrecover(sha3(\"\\x19Ethereum Signed Message:\\n32\", hash),v,r,s) == msg.sender)) throw;\r\n                                                ^--------------------------------------------^\n/unique_chucks/22/0x802c31c7c0a89d3d289ca91cd57892d8338bc9ce.sol:310:5: Warning: Invoking events without \"emit\" prefix is deprecated.\n    Cancel(tokenGet, amountGet, tokenGive, amountGive, expires, nonce, msg.sender, v, r, s);\r\n    ^-------------------------------------------------------------------------------------^\n", "issues": []}