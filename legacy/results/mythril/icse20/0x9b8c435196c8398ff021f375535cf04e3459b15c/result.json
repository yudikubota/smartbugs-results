{
  "contract": "0x9b8c435196c8398ff021f375535cf04e3459b15c",
  "tool": "mythril",
  "start": 1563635953.2771194,
  "end": 1563636369.3777823,
  "duration": 416.10066294670105,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 997,
        "code": "nt256 tokenSupply = token.g",
        "debug": "",
        "description": "This contract executes a message call to an address found at storage slot 3. This storage slot can be written to by calling the function `switch_period()`. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/28/0x9b8c435196c8398ff021f375535cf04e3459b15c.sol",
        "function": "redeem(uint256)",
        "lineno": 83,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 997,
        "code": "nt256 tokenSupply = token.g",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1700\nCall at address: 1700\nCall at address: 1210\n",
        "filename": "/unique_chucks/28/0x9b8c435196c8398ff021f375535cf04e3459b15c.sol",
        "function": "redeem(uint256)",
        "lineno": 83,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 1210,
        "code": "deemed[msg.sender",
        "debug": "",
        "description": "This contract executes a message call to an address found at storage slot 3. This storage slot can be written to by calling the function `switch_period()`. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/28/0x9b8c435196c8398ff021f375535cf04e3459b15c.sol",
        "function": "redeem(uint256)",
        "lineno": 86,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 1210,
        "code": "deemed[msg.sender",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1700\nCall at address: 1700\n",
        "filename": "/unique_chucks/28/0x9b8c435196c8398ff021f375535cf04e3459b15c.sol",
        "function": "redeem(uint256)",
        "lineno": 86,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 1570,
        "code": "le, then give it to the owner\n      if (dividends_red",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/28/0x9b8c435196c8398ff021f375535cf04e3459b15c.sol",
        "function": "redeem(uint256)",
        "lineno": 94,
        "title": "State change after external call",
        "type": "Warning"
      }
    ],
    "success": true
  }
}