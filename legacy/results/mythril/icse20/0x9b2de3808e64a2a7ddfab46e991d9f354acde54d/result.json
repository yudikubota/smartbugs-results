{
  "contract": "0x9b2de3808e64a2a7ddfab46e991d9f354acde54d",
  "tool": "mythril",
  "start": 1563748171.1098166,
  "end": 1563748256.4948802,
  "duration": 85.38506364822388,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 267,
        "code": "Raised += amount;\n        if(am",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x744a55a47026c4cf77aeef8dddf2fdb35ef9ff6e7bfa42e736861f86803dc2a1\ncallvalue: 0xe2df426572c48480672f0f4e19a2fd3b5e01ae69530556c77ef39ff33d19faf9\nstorage_7: 0x0\ncalldata_token_0: 0x0\ncalldatasize_token: 0x4\n",
        "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/43/0x9b2de3808e64a2a7ddfab46e991d9f354acde54d.sol",
        "function": "fallback",
        "lineno": 49,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 283,
        "code": "ther){\n            tok",
        "debug": "storage_2: 0x744a55a47026c4cf77aeef8dddf2fdb35ef9ff6e7bfa42e736861f86803dc2a1\ncallvalue: 0xe2df426572c48480672f0f4e19a2fd3b5e01ae69530556c77ef39ff33d19faf9\nstorage_7: 0x0\ncalldata_token_0: 0x0\ncalldatasize_token: 0x4\n",
        "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/43/0x9b2de3808e64a2a7ddfab46e991d9f354acde54d.sol",
        "function": "fallback",
        "lineno": 50,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 383,
        "code": "        tokenR",
        "debug": "The exception is triggered under the following conditions:\n\ncallvalue: 0x8ac7230489e80001\nstorage_7: 0x0\ncalldata_token_0: 0x100000000000000000000000000000000000000000000000000000000\ncalldatasize_token: 0x4\nstorage_4: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/43/0x9b2de3808e64a2a7ddfab46e991d9f354acde54d.sol",
        "function": "fallback",
        "lineno": 54,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 573,
        "code": "+ ((amount / price)/2) + ((amount / price)/20));\n        }\n        else{\n            tokenReward.",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/43/0x9b2de3808e64a2a7ddfab46e991d9f354acde54d.sol",
        "function": "fallback",
        "lineno": 51,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 676,
        "code": "msg.sender, am",
        "debug": "The exception is triggered under the following conditions:\n\ncallvalue: 0x1e80001\nstorage_7: 0x0\ncalldata_token_0: 0x100000000000000000000000000000000000000000000000000000000\ncalldatasize_token: 0x4\nstorage_4: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/43/0x9b2de3808e64a2a7ddfab46e991d9f354acde54d.sol",
        "function": "fallback",
        "lineno": 56,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 839,
        "code": "(amount / price)/2)); \n        }\n        FundTransfer(msg.sender, amount,",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/43/0x9b2de3808e64a2a7ddfab46e991d9f354acde54d.sol",
        "function": "fallback",
        "lineno": 54,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 2060,
        "code": "            } else {\n  ",
        "debug": "",
        "description": "In the function `safeWithdrawal()` the following predictable state variables are used to determine Ether recipient:\n- block.timestamp\n",
        "filename": "/unique_chucks/43/0x9b2de3808e64a2a7ddfab46e991d9f354acde54d.sol",
        "function": "safeWithdrawal()",
        "lineno": 95,
        "title": "Dependence on predictable environment variable",
        "type": "Warning"
      },
      {
        "address": 2060,
        "code": "            } else {\n  ",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2458\nCall at address: 2458\nCall at address: 2458\nCall at address: 2458\n",
        "filename": "/unique_chucks/43/0x9b2de3808e64a2a7ddfab46e991d9f354acde54d.sol",
        "function": "safeWithdrawal()",
        "lineno": 95,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 2458,
        "code": "         } else {\n            ",
        "debug": "",
        "description": "In the function `safeWithdrawal()` the following predictable state variables are used to determine Ether recipient:\n- block.timestamp\n",
        "filename": "/unique_chucks/43/0x9b2de3808e64a2a7ddfab46e991d9f354acde54d.sol",
        "function": "safeWithdrawal()",
        "lineno": 104,
        "title": "Dependence on predictable environment variable",
        "type": "Warning"
      },
      {
        "address": 2458,
        "code": "         } else {\n            ",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function safeWithdrawal(). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/43/0x9b2de3808e64a2a7ddfab46e991d9f354acde54d.sol",
        "function": "safeWithdrawal()",
        "lineno": 104,
        "title": "Transaction order dependence",
        "type": "Warning"
      }
    ],
    "success": true
  }
}