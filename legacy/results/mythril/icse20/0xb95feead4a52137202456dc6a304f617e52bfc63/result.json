{
  "contract": "0xb95feead4a52137202456dc6a304f617e52bfc63",
  "tool": "mythril",
  "start": 1563598365.9154878,
  "end": 1563598444.7009046,
  "duration": 78.78541684150696,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 809,
        "code": "nt(2)**y);\n    }\n    \n    ",
        "debug": "2_EXP_calldata_st4ck_32 + 4: 0x2000000000000000000000000000000000000000000000000000000000000\ncallvalue: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncalldata_st4ck_0: 0xd3481bd000000000000000000000000000000000000000000000000000000000\ncalldatasize_st4ck: 0x4\n",
        "description": "A possible integer overflow exists in the function `buyBlock(uint256,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/21/0xb95feead4a52137202456dc6a304f617e52bfc63.sol",
        "function": "buyBlock(uint256,uint256)",
        "lineno": 18,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 939,
        "code": "balance[msg.sender] = 0;\n    }\n}",
        "debug": "SOLVER OUTPUT:\ncalldata_st4ck_0: 0x3ccfd60b00000000000000000000000000000000000000000000000000000000\ncalldatasize_st4ck: 0x4\ncallvalue: 0x0\n",
        "description": "In the function `withdraw()` a non-zero amount of Ether is sent to msg.sender.\nIt seems that this function can be called without restrictions.",
        "filename": "/unique_chucks/21/0xb95feead4a52137202456dc6a304f617e52bfc63.sol",
        "function": "withdraw()",
        "lineno": 52,
        "title": "Ether send",
        "type": "Warning"
      },
      {
        "address": 1207,
        "code": "gth;\n    ",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_st4ck_4: 0x0\nstorage_0: 0x0\ncalldata_st4ck_0: 0x9d3aee8d00000000000000000000000000000000000000000000000000000000\ncalldatasize_st4ck: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/21/0xb95feead4a52137202456dc6a304f617e52bfc63.sol",
        "function": "st4ckHeight(uint256)",
        "lineno": 14,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 1243,
        "code": "ress[][] public wereld;\n ",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_st4ck_4: 0x0\nstorage_0: 0x0\ncalldata_st4ck_0: 0xae7385a500000000000000000000000000000000000000000000000000000000\ncalldatasize_st4ck: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/21/0xb95feead4a52137202456dc6a304f617e52bfc63.sol",
        "function": "_function_0xae7385a5",
        "lineno": 4,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 1266,
        "code": "ress[][] public wereld;\n ",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_st4ck_4: 0x0\ncalldata_st4ck_32 + 4: 0x0\nstorage_18569430475105882587588266137607568536673111973893317399460219858819262702947 +\ncalldata_st4ck_4: 0x0\nstorage_0: 0x1\ncalldata_st4ck_0: 0xae7385a500000000000000000000000000000000000000000000000000000000\ncalldatasize_st4ck: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/21/0xb95feead4a52137202456dc6a304f617e52bfc63.sol",
        "function": "_function_0xae7385a5",
        "lineno": 4,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 1387,
        "code": ".value;\n        require(balance[",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncallvalue: 0x57f25cd000000000000000000000000000000000000000000000000000000000\ncalldata_st4ck_0: 0xd3481bd000000000000000000000000000000000000000000000000000000000\ncalldatasize_st4ck: 0x4\n",
        "description": "A possible integer overflow exists in the function `buyBlock(uint256,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/21/0xb95feead4a52137202456dc6a304f617e52bfc63.sol",
        "function": "buyBlock(uint256,uint256)",
        "lineno": 27,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1622,
        "code": "    else if (x ",
        "debug": "storage_0: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n2_EXP_calldata_st4ck_32 + 4: 0x4018a1ecd090fe0f217c3105263d8cfe2e737dc7e3be6539cfcd85f26b42\nstorage_3: 0x0\ncallvalue: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x45d1c60ae2a3bad82d976a999976088e61e724a8ce79db1cfa2d04543d610000\ncalldata_st4ck_0: 0xd3481bd000000000000000000000000000000000000000000000000000000000\ncalldatasize_st4ck: 0x4\ncalldata_st4ck_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n",
        "description": "A possible integer overflow exists in the function `buyBlock(uint256,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/21/0xb95feead4a52137202456dc6a304f617e52bfc63.sol",
        "function": "buyBlock(uint256,uint256)",
        "lineno": 34,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1732,
        "code": ";\n\ncontract st4ck ",
        "debug": "storage_18569430475105882587588266137607568536673111973893317399460219858819262702947 +\ncalldata_st4ck_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_0: 0x808100000248000000011280ab6f3df74cbb3e6926c67f23f971bf2e7f02682\n2_EXP_calldata_st4ck_32 + 4: 0x24ebc50cc140a11012400787836dc67fce07c4db7121802b8299899eb08\ncalldata_st4ck_4: 0x80208000004800000000031f0614818020d081b285080051a82400008001a02\ncallvalue: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xb79e4f80f08798834538a326324667898f39c8194da81126a92934154840000\ncalldata_st4ck_0: 0xd3481bd000000000000000000000000000000000000000000000000000000000\ncalldatasize_st4ck: 0x4\ncalldata_st4ck_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n",
        "description": "A possible integer overflow exists in the function `buyBlock(uint256,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/21/0xb95feead4a52137202456dc6a304f617e52bfc63.sol",
        "function": "buyBlock(uint256,uint256)",
        "lineno": 1,
        "title": "Integer Overflow ",
        "type": "Warning"
      }
    ],
    "success": true
  }
}