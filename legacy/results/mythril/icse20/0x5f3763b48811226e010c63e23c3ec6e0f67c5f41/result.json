{
  "contract": "0x5f3763b48811226e010c63e23c3ec6e0f67c5f41",
  "tool": "mythril",
  "start": 1563559494.2995493,
  "end": 1563559740.595737,
  "duration": 246.29618763923645,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 4673,
        "code": " appr",
        "debug": "storage_8980041631919178290161226234105977776452779202751091583642356499240698725347: 0xb2c81e3be60b809eebca250ae5f3958de8241f3c0942692d3cecd1fd00743211\ncallvalue: 0x93931c13e507cbbcbf74d9eee4fb920eeaef84aa5110428da2eddb017d5ebcdd\ncalldatasize_ldoh: 0x3\n",
        "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/17/0x5f3763b48811226e010c63e23c3ec6e0f67c5f41.sol",
        "function": "fallback",
        "lineno": 600,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 4826,
        "code": "ress\n\tmapping(address => uint256) \t\tprivate Ether",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_ldoh_32 + 4: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\ncalldata_ldoh_4: 0x0\ncalldata_ldoh_0: 0x11a3311c00000000000000000000000000000000000000000000000000000000\ncalldatasize_ldoh: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/17/0x5f3763b48811226e010c63e23c3ec6e0f67c5f41.sol",
        "function": "_function_0x11a3311c",
        "lineno": 95,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 14285,
        "code": " Many Contribute ?\n\n    functi",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/17/0x5f3763b48811226e010c63e23c3ec6e0f67c5f41.sol",
        "function": "ClaimCashback(uint256)",
        "lineno": 388,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 14285,
        "code": " Many Contribute ?\n\n    functi",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 14520\n",
        "filename": "/unique_chucks/17/0x5f3763b48811226e010c63e23c3ec6e0f67c5f41.sol",
        "function": "ClaimCashback(uint256)",
        "lineno": 388,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 14520,
        "code": "address hodler) public view ",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/17/0x5f3763b48811226e010c63e23c3ec6e0f67c5f41.sol",
        "function": "ClaimCashback(uint256)",
        "lineno": 390,
        "title": "Message call to external contract",
        "type": "Warning"
      }
    ],
    "success": true
  }
}