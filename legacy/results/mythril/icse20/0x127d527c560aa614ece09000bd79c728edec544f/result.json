{
  "contract": "0x127d527c560aa614ece09000bd79c728edec544f",
  "tool": "mythril",
  "start": 1563547814.5070095,
  "end": 1563547821.9027576,
  "duration": 7.395748138427734,
  "analysis": {
    "success": false,
    "error": "Solc experienced a fatal error (code 1).\n\n/unique_chucks/17/0x127d527c560aa614ece09000bd79c728edec544f.sol:755:1: Error: Source file requires different compiler version (current compiler is 0.4.25+commit.59dbf8f1.Linux.g++ - note that nightly builds are considered to be strictly less than the released version\n ... pragma solidity >=0.4.1 <=0.4.20; ... \n     ^-------------------------------^\n/unique_chucks/17/0x127d527c560aa614ece09000bd79c728edec544f.sol:1664:45: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n        if ((_nbytes == 0)||(_nbytes > 32)) throw;\r\n                                            ^---^\n/unique_chucks/17/0x127d527c560aa614ece09000bd79c728edec544f.sol:1780:71: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n        if ((_proof[0] != \"L\")||(_proof[1] != \"P\")||(_proof[2] != 1)) throw;\r\n                                                                      ^---^\n/unique_chucks/17/0x127d527c560aa614ece09000bd79c728edec544f.sol:1783:37: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n        if (proofVerified == false) throw;\r\n                                    ^---^\n/unique_chucks/17/0x127d527c560aa614ece09000bd79c728edec544f.sol:1801:39: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n\tif (prefix.length != n_random_bytes) throw;\r\n\t                                     ^---^\n/unique_chucks/17/0x127d527c560aa614ece09000bd79c728edec544f.sol:1859:13: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n            throw; // Should be a better way?\r\n            ^---^\n/unique_chucks/17/0x127d527c560aa614ece09000bd79c728edec544f.sol:1997:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use \"constructor(...) { ... }\" instead.\n  function Ownable() public {\r\n  ^ (Relevant source part starts here and spans across multiple lines).\n/unique_chucks/17/0x127d527c560aa614ece09000bd79c728edec544f.sol:2151:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use \"constructor(...) { ... }\" instead.\n    function Nihilum() public {\r\n    ^ (Relevant source part starts here and spans across multiple lines).\n/unique_chucks/17/0x127d527c560aa614ece09000bd79c728edec544f.sol:2205:9: Warning: Use of the \"var\" keyword is deprecated.\n        var fromOwing = nihilumBalanceOf(_from);\r\n        ^-----------^\n/unique_chucks/17/0x127d527c560aa614ece09000bd79c728edec544f.sol:2206:9: Warning: Use of the \"var\" keyword is deprecated.\n        var toOwing = nihilumBalanceOf(_to);\r\n        ^---------^\n/unique_chucks/17/0x127d527c560aa614ece09000bd79c728edec544f.sol:2274:9: Warning: Use of the \"var\" keyword is deprecated.\n        var numTokens = msg.value / _tokenPrice;\r\n        ^-----------^\n/unique_chucks/17/0x127d527c560aa614ece09000bd79c728edec544f.sol:2303:9: Warning: Use of the \"var\" keyword is deprecated.\n        var newNihilum = totalNihilum.sub(accounts[account].lastNihilum);\r\n        ^------------^\n/unique_chucks/17/0x127d527c560aa614ece09000bd79c728edec544f.sol:2304:9: Warning: Use of the \"var\" keyword is deprecated.\n        var product = accounts[account].balance.mul(newNihilum);\r\n        ^---------^\n/unique_chucks/17/0x127d527c560aa614ece09000bd79c728edec544f.sol:2312:9: Warning: Use of the \"var\" keyword is deprecated.\n        var owing = nihilumBalanceOf(msg.sender);\r\n        ^-------^\n/unique_chucks/17/0x127d527c560aa614ece09000bd79c728edec544f.sol:948:21: Warning: Result of exponentiation has type uint8 and thus might overflow. Silence this warning by converting the literal to the expected type.\n        return x * (2 ** y);\r\n                    ^----^\n/unique_chucks/17/0x127d527c560aa614ece09000bd79c728edec544f.sol:1704:50: Warning: \"sha3\" has been deprecated in favour of \"keccak256\"\n        oraclize_randomDS_setCommitment(queryId, sha3(delay_bytes8_left, args[1], sha256(args[0]), args[2]));\r\n                                                 ^--------------------------------------------------------^\n/unique_chucks/17/0x127d527c560aa614ece09000bd79c728edec544f.sol:1704:50: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n        oraclize_randomDS_setCommitment(queryId, sha3(delay_bytes8_left, args[1], sha256(args[0]), args[2]));\r\n                                                 ^--------------------------------------------------------^\n/unique_chucks/17/0x127d527c560aa614ece09000bd79c728edec544f.sol:1736:21: Warning: \"sha3\" has been deprecated in favour of \"keccak256\"\n        if (address(sha3(pubkey)) == signer) return true;\r\n                    ^----------^\n/unique_chucks/17/0x127d527c560aa614ece09000bd79c728edec544f.sol:1739:29: Warning: \"sha3\" has been deprecated in favour of \"keccak256\"\n            return (address(sha3(pubkey)) == signer);\r\n                            ^----------^\n/unique_chucks/17/0x127d527c560aa614ece09000bd79c728edec544f.sol:1754:22: Warning: Decimal literal assigned to bytesXX variable will be left-aligned. Use an explicit conversion to silence this warning.\n        tosign2[0] = 1; //role\r\n                     ^\n/unique_chucks/17/0x127d527c560aa614ece09000bd79c728edec544f.sol:1816:15: Warning: \"sha3\" has been deprecated in favour of \"keccak256\"\n        if (!(sha3(keyhash) == sha3(sha256(context_name, queryId)))) return false;\r\n              ^-----------^\n/unique_chucks/17/0x127d527c560aa614ece09000bd79c728edec544f.sol:1816:37: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n        if (!(sha3(keyhash) == sha3(sha256(context_name, queryId)))) return false;\r\n                                    ^---------------------------^\n/unique_chucks/17/0x127d527c560aa614ece09000bd79c728edec544f.sol:1816:32: Warning: \"sha3\" has been deprecated in favour of \"keccak256\"\n        if (!(sha3(keyhash) == sha3(sha256(context_name, queryId)))) return false;\r\n                               ^---------------------------------^\n/unique_chucks/17/0x127d527c560aa614ece09000bd79c728edec544f.sol:1816:32: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n        if (!(sha3(keyhash) == sha3(sha256(context_name, queryId)))) return false;\r\n                               ^---------------------------------^\n/unique_chucks/17/0x127d527c560aa614ece09000bd79c728edec544f.sol:1816:32: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.\n        if (!(sha3(keyhash) == sha3(sha256(context_name, queryId)))) return false;\r\n                               ^---------------------------------^\n/unique_chucks/17/0x127d527c560aa614ece09000bd79c728edec544f.sol:1834:48: Warning: \"sha3\" has been deprecated in favour of \"keccak256\"\n        if (oraclize_randomDS_args[queryId] == sha3(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match\r\n                                               ^---------------------------------------^\n/unique_chucks/17/0x127d527c560aa614ece09000bd79c728edec544f.sol:1834:48: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n        if (oraclize_randomDS_args[queryId] == sha3(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match\r\n                                               ^---------------------------------------^\n/unique_chucks/17/0x127d527c560aa614ece09000bd79c728edec544f.sol:2044:5: Warning: Invoking events without \"emit\" prefix is deprecated.\n    Pause();\r\n    ^-----^\n/unique_chucks/17/0x127d527c560aa614ece09000bd79c728edec544f.sol:2053:5: Warning: Invoking events without \"emit\" prefix is deprecated.\n    Unpause();\r\n    ^-------^\n/unique_chucks/17/0x127d527c560aa614ece09000bd79c728edec544f.sol:2086:5: Warning: Invoking events without \"emit\" prefix is deprecated.\n    PauseCrowdsale();\r\n    ^--------------^\n/unique_chucks/17/0x127d527c560aa614ece09000bd79c728edec544f.sol:2095:5: Warning: Invoking events without \"emit\" prefix is deprecated.\n    UnpauseCrowdsale();\r\n    ^----------------^\n/unique_chucks/17/0x127d527c560aa614ece09000bd79c728edec544f.sol:2192:9: Warning: Invoking events without \"emit\" prefix is deprecated.\n        Transfer(msg.sender, _to, _value);\r\n        ^-------------------------------^\n/unique_chucks/17/0x127d527c560aa614ece09000bd79c728edec544f.sol:2221:13: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n        if (keccak256(result) == keccak256(\"true\")) {\r\n            ^---------------^\n/unique_chucks/17/0x127d527c560aa614ece09000bd79c728edec544f.sol:2221:13: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.\n        if (keccak256(result) == keccak256(\"true\")) {\r\n            ^---------------^\n/unique_chucks/17/0x127d527c560aa614ece09000bd79c728edec544f.sol:2225:9: Warning: Invoking events without \"emit\" prefix is deprecated.\n        LogWhitelistUpdated(result);\r\n        ^-------------------------^\n/unique_chucks/17/0x127d527c560aa614ece09000bd79c728edec544f.sol:2230:40: Warning: Using contract member \"balance\" inherited from the address type is deprecated. Convert the contract to \"address\" type to access the member, for example use \"address(contract).balance\" instead.\n        if (oraclize_getPrice(\"URL\") > this.balance) {\r\n                                       ^----------^\n/unique_chucks/17/0x127d527c560aa614ece09000bd79c728edec544f.sol:2231:13: Warning: Invoking events without \"emit\" prefix is deprecated.\n            LogNewOraclizeQuery(\"Oraclize query was NOT sent, please add some ETH to cover for the query fee\");\r\n            ^------------------------------------------------------------------------------------------------^\n/unique_chucks/17/0x127d527c560aa614ece09000bd79c728edec544f.sol:2233:13: Warning: Invoking events without \"emit\" prefix is deprecated.\n            LogNewOraclizeQuery(\"Oraclize query was sent, standing by for the answer..\");\r\n            ^--------------------------------------------------------------------------^\n/unique_chucks/17/0x127d527c560aa614ece09000bd79c728edec544f.sol:2245:13: Warning: Invoking events without \"emit\" prefix is deprecated.\n            Transfer(0, msg.sender, numTokens);\r\n            ^--------------------------------^\n/unique_chucks/17/0x127d527c560aa614ece09000bd79c728edec544f.sol:2277:9: Warning: Invoking events without \"emit\" prefix is deprecated.\n        Transfer(0, msg.sender, numTokens);\r\n        ^--------------------------------^\n/unique_chucks/17/0x127d527c560aa614ece09000bd79c728edec544f.sol:2287:13: Warning: Using contract member \"balance\" inherited from the address type is deprecated. Convert the contract to \"address\" type to access the member, for example use \"address(contract).balance\" instead.\n        if (this.balance > 0 && totalShareholders > 0) {\r\n            ^----------^\n",
    "issues": []
  }
}