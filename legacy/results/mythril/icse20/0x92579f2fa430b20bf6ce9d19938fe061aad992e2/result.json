{
  "contract": "0x92579f2fa430b20bf6ce9d19938fe061aad992e2",
  "tool": "mythril",
  "start": 1563583568.076469,
  "end": 1563583784.5509548,
  "duration": 216.47448587417603,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 261,
        "code": "       balance",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_9: 0x0\ncalldata_token_0: 0x1cb3b2100000000000000000000000000000000000000000000000000000000\ncalldatasize_token: 0x4\nstorage_5: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/19/0x92579f2fa430b20bf6ce9d19938fe061aad992e2.sol",
        "function": "fallback",
        "lineno": 56,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 352,
        "code": "= amount;\n\n        tokenReward.",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xb037df78e62500f4160516fbbef3e62016410ad4b2473d1e76103a4dc2722d2d\ncallvalue: 0x7083f7bbe42c04b99225e8bb00029781046e26d0b771f94f57dd93ad077b0365\nstorage_5: 0x40000000000000000000000000000\nstorage_7: 0x0\nstorage_9: 0x0\ncalldata_token_0: 0x300000000000000000000000000000000000000000000000000000000\ncalldatasize_token: 0x4\n",
        "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/19/0x92579f2fa430b20bf6ce9d19938fe061aad992e2.sol",
        "function": "fallback",
        "lineno": 57,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 368,
        "code": "g.sender, amount / pri",
        "debug": "storage_3: 0xb037df78e62500f4160516fbbef3e62016410ad4b2473d1e76103a4dc2722d2d\ncallvalue: 0x7083f7bbe42c04b99225e8bb00029781046e26d0b771f94f57dd93ad077b0365\nstorage_5: 0x40000000000000000000000000000\nstorage_7: 0x0\nstorage_9: 0x0\ncalldata_token_0: 0x300000000000000000000000000000000000000000000000000000000\ncalldatasize_token: 0x4\n",
        "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/19/0x92579f2fa430b20bf6ce9d19938fe061aad992e2.sol",
        "function": "fallback",
        "lineno": 59,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 588,
        "code": "FundTransfer(msg.sender, amount, true);\n\n       ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/19/0x92579f2fa430b20bf6ce9d19938fe061aad992e2.sol",
        "function": "fallback",
        "lineno": 60,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 588,
        "code": "FundTransfer(msg.sender, amount, true);\n\n       ",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 921\n",
        "filename": "/unique_chucks/19/0x92579f2fa430b20bf6ce9d19938fe061aad992e2.sol",
        "function": "fallback",
        "lineno": 60,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 921,
        "code": "ft == 0) \n        {\n            crowdsa",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/19/0x92579f2fa430b20bf6ce9d19938fe061aad992e2.sol",
        "function": "fallback",
        "lineno": 63,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 982,
        "code": " if (tokensLeft == 0) \n        {\n            crowdsa",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/19/0x92579f2fa430b20bf6ce9d19938fe061aad992e2.sol",
        "function": "fallback",
        "lineno": 63,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 2406,
        "code": "\n}",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/19/0x92579f2fa430b20bf6ce9d19938fe061aad992e2.sol",
        "function": "bringBackTokens()",
        "lineno": 132,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 2406,
        "code": "\n}",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2619\n",
        "filename": "/unique_chucks/19/0x92579f2fa430b20bf6ce9d19938fe061aad992e2.sol",
        "function": "bringBackTokens()",
        "lineno": 132,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 2619,
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/19/0x92579f2fa430b20bf6ce9d19938fe061aad992e2.sol",
        "function": "bringBackTokens()",
        "lineno": 133,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 2680,
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/19/0x92579f2fa430b20bf6ce9d19938fe061aad992e2.sol",
        "function": "bringBackTokens()",
        "lineno": 133,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 3203,
        "code": "line() \n    {\n        if (now >= deadli",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/19/0x92579f2fa430b20bf6ce9d19938fe061aad992e2.sol",
        "function": "updateTokensAvailable()",
        "lineno": 74,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 3264,
        "code": "ier afterDeadline() \n    {\n        if (now >= deadli",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/19/0x92579f2fa430b20bf6ce9d19938fe061aad992e2.sol",
        "function": "updateTokensAvailable()",
        "lineno": 74,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 3494,
        "code": "alse);\n                ",
        "debug": "",
        "description": "In the function `safeWithdrawal()` the following predictable state variables are used to determine Ether recipient:\n- block.timestamp\n",
        "filename": "/unique_chucks/19/0x92579f2fa430b20bf6ce9d19938fe061aad992e2.sol",
        "function": "safeWithdrawal()",
        "lineno": 101,
        "title": "Dependence on predictable environment variable",
        "type": "Warning"
      },
      {
        "address": 3894,
        "code": "            } \n            els",
        "debug": "",
        "description": "In the function `safeWithdrawal()` the following predictable state variables are used to determine Ether recipient:\n- block.timestamp\n",
        "filename": "/unique_chucks/19/0x92579f2fa430b20bf6ce9d19938fe061aad992e2.sol",
        "function": "safeWithdrawal()",
        "lineno": 115,
        "title": "Dependence on predictable environment variable",
        "type": "Warning"
      },
      {
        "address": 3894,
        "code": "            } \n            els",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function safeWithdrawal(). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/19/0x92579f2fa430b20bf6ce9d19938fe061aad992e2.sol",
        "function": "safeWithdrawal()",
        "lineno": 115,
        "title": "Transaction order dependence",
        "type": "Warning"
      }
    ],
    "success": true
  }
}