{"error": null, "issues": [{"address": 341, "code": "gameBet, uint _startTime, string _questionText, address _officialAddress) public adminOnly payable {\n        gameCount ++;\n        address newGameAddress = new MajorityGame(gameCount, _gameBet, _startTime, _questionText, _officialAddress);\n        deployedGames.push(newGameAddress);\n        gameAddressIdMap[newGameAddress] = deployedGames.length;\n\n        setJackpot(newGameAddress, msg.value);\n    }\n\n    /**\n     * return all availa", "debug": "calldata_MajorityGameFactory_32 + 36: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_MajorityGameFactory_0: 0x4148f7e00000000000000000000000000000000000000000000000000000000\ncalldatasize_MajorityGameFactory: 0x4\n", "description": "A possible integer overflow exists in the function `_function_0x04148f7e`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/14/0x08f7e145df8b9a10a40674d7ed8396a3a9eae650.sol", "function": "_function_0x04148f7e", "lineno": 28, "title": "Integer Overflow ", "type": "Warning"}, {"address": 905, "code": "address[]) {\n        return endedGames;\n    }\n\n    /**\n     * set bonus of the game\n     **/\n", "debug": "storage_1: 0x800000000000000000000000000000000000000000000000000000000000000\ncalldata_MajorityGameFactory_0: 0xb38400ff00000000000000000000000000000000000000000000000000000000\ncalldatasize_MajorityGameFactory: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `getEndedGames()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/14/0x08f7e145df8b9a10a40674d7ed8396a3a9eae650.sol", "function": "getEndedGames()", "lineno": 47, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1122, "code": " returns (address[]) {\n        return deployedGames;\n    }\n\n    /**\n     * return all available gam", "debug": "storage_0: 0x800000000000000000000000000000000000000000000000000000000000000\ncalldata_MajorityGameFactory_0: 0xeae81c3700000000000000000000000000000000000000000000000000000000\ncalldatasize_MajorityGameFactory: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `getDeployedGames()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/14/0x08f7e145df8b9a10a40674d7ed8396a3a9eae650.sol", "function": "getDeployedGames()", "lineno": 40, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1276, "code": "s[] public tempArray;\n\n   ", "debug": "The exception is triggered under the following conditions:\n\ncalldata_MajorityGameFactory_4: 0x0\nstorage_2: 0x0\ncalldata_MajorityGameFactory_0: 0x160303c00000000000000000000000000000000000000000000000000000000\ncalldatasize_MajorityGameFactory: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/14/0x08f7e145df8b9a10a40674d7ed8396a3a9eae650.sol", "function": "_function_0x0160303c", "lineno": 7, "title": "Exception state", "type": "Informational"}, {"address": 1431, "code": "s newGameAdd", "debug": "storage_5: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_3: 0x0\ncaller: 0x0\ncalldata_MajorityGameFactory_0: 0x4148f7e00000000000000000000000000000000000000000000000000000000\ncalldatasize_MajorityGameFactory: 0x4\n", "description": "A possible integer overflow exists in the function `_function_0x04148f7e`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/14/0x08f7e145df8b9a10a40674d7ed8396a3a9eae650.sol", "function": "_function_0x04148f7e", "lineno": 30, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1939, "code": " deployedGames[t", "debug": "storage_6: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_MajorityGameFactory_0: 0x2a035b6c00000000000000000000000000000000000000000000000000000000\ncalldatasize_MajorityGameFactory: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `endGame(address)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/14/0x08f7e145df8b9a10a40674d7ed8396a3a9eae650.sol", "function": "endGame(address)", "lineno": 68, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1954, "code": ";\n\ncontract Majori", "debug": "storage_1: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_MajorityGameFactory_0: 0x2a035b6c00000000000000000000000000000000000000000000000000000000\ncalldatasize_MajorityGameFactory: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `endGame(address)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/14/0x08f7e145df8b9a10a40674d7ed8396a3a9eae650.sol", "function": "endGame(address)", "lineno": 1, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2068, "code": "ployedGames[deployedGames.length-1]] ", "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0x0\ncalldata_MajorityGameFactory_0: 0x2a035b6c00000000000000000000000000000000000000000000000000000000\ncalldatasize_MajorityGameFactory: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/14/0x08f7e145df8b9a10a40674d7ed8396a3a9eae650.sol", "function": "endGame(address)", "lineno": 70, "title": "Exception state", "type": "Informational"}, {"address": 2129, "code": "th-1];\n\n        gameAddressIdMap", "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0xffffffffffffffffffffffffffffffffe0000000000000000000000000000000\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_MajorityGameFactory_4: 0xffffffffffffffffffffffffffffffffe0000000000000000000000000000001\ncalldata_MajorityGameFactory_0: 0x2a035b6c00000000000000000000000000000000000000000000000000000000\ncalldatasize_MajorityGameFactory: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/14/0x08f7e145df8b9a10a40674d7ed8396a3a9eae650.sol", "function": "endGame(address)", "lineno": 68, "title": "Exception state", "type": "Informational"}, {"address": 2530, "code": "unction forceEn", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/14/0x08f7e145df8b9a10a40674d7ed8396a3a9eae650.sol", "function": "endGame(address)", "lineno": 82, "title": "Message call to external contract", "type": "Warning"}, {"address": 2765, "code": "     * end the game\n     **/\n", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/14/0x08f7e145df8b9a10a40674d7ed8396a3a9eae650.sol", "function": "setJackpot(address,uint256)", "lineno": 62, "title": "Message call to external contract", "type": "Warning"}, {"address": 3009, "code": "getGameIndex-1] ", "debug": "storage_6: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_3: 0x0\ncaller: 0x0\ncalldata_MajorityGameFactory_0: 0x493dbd0200000000000000000000000000000000000000000000000000000000\ncalldatasize_MajorityGameFactory: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `forceEndGame(address)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/14/0x08f7e145df8b9a10a40674d7ed8396a3a9eae650.sol", "function": "forceEndGame(address)", "lineno": 86, "title": "Integer Overflow ", "type": "Warning"}, {"address": 3024, "code": ";\n\ncontract Majori", "debug": "storage_1: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_3: 0x0\ncaller: 0x0\ncalldata_MajorityGameFactory_0: 0x493dbd0200000000000000000000000000000000000000000000000000000000\ncalldatasize_MajorityGameFactory: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `forceEndGame(address)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/14/0x08f7e145df8b9a10a40674d7ed8396a3a9eae650.sol", "function": "forceEndGame(address)", "lineno": 1, "title": "Integer Overflow ", "type": "Warning"}, {"address": 3138, "code": "edGames.length-1]] = targetGameIndex;", "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0x0\nstorage_3: 0x0\ncaller: 0x0\ncalldata_MajorityGameFactory_0: 0x493dbd0200000000000000000000000000000000000000000000000000000000\ncalldatasize_MajorityGameFactory: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/14/0x08f7e145df8b9a10a40674d7ed8396a3a9eae650.sol", "function": "forceEndGame(address)", "lineno": 88, "title": "Exception state", "type": "Informational"}, {"address": 3199, "code": "meAddressIdMap[deployedGames[dep", "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0xffffffffffffffffffffffffffffffffe0000000000000000000000000000000\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_MajorityGameFactory_4: 0xffffffffffffffffffffffffffffffffe0000000000000000000000000000001\nstorage_3: 0x0\ncaller: 0x0\ncalldata_MajorityGameFactory_0: 0x493dbd0200000000000000000000000000000000000000000000000000000000\ncalldatasize_MajorityGameFactory: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/14/0x08f7e145df8b9a10a40674d7ed8396a3a9eae650.sol", "function": "forceEndGame(address)", "lineno": 88, "title": "Exception state", "type": "Informational"}, {"address": 3600, "code": "private AVAILABLE_GA", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/14/0x08f7e145df8b9a10a40674d7ed8396a3a9eae650.sol", "function": "forceEndGame(address)", "lineno": 102, "title": "Message call to external contract", "type": "Warning"}, {"address": 3646, "code": "ess[] public deployedGames;\n  ", "debug": "The exception is triggered under the following conditions:\n\ncalldata_MajorityGameFactory_4: 0x0\nstorage_0: 0x0\ncalldata_MajorityGameFactory_0: 0x657908d100000000000000000000000000000000000000000000000000000000\ncalldatasize_MajorityGameFactory: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/14/0x08f7e145df8b9a10a40674d7ed8396a3a9eae650.sol", "function": "_function_0x657908d1", "lineno": 5, "title": "Exception state", "type": "Informational"}, {"address": 3738, "code": "nus of the game\n ", "debug": "storage_1: 0x8421003f084001f4210815cf88407c00000000000000037c1d000e8d178001f\ncalldata_MajorityGameFactory_0: 0xb38400ff00000000000000000000000000000000000000000000000000000000\ncalldatasize_MajorityGameFactory: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `getEndedGames()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/14/0x08f7e145df8b9a10a40674d7ed8396a3a9eae650.sol", "function": "getEndedGames()", "lineno": 52, "title": "Integer Overflow ", "type": "Warning"}, {"address": 3740, "code": "nus of the game\n ", "debug": "storage_1: 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffb\ncalldata_MajorityGameFactory_0: 0xb38400ff00000000000000000000000000000000000000000000000000000000\ncalldatasize_MajorityGameFactory: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `getEndedGames()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/14/0x08f7e145df8b9a10a40674d7ed8396a3a9eae650.sol", "function": "getEndedGames()", "lineno": 52, "title": "Integer Overflow ", "type": "Warning"}, {"address": 3850, "code": "ss[] public endedGames;\n   ", "debug": "The exception is triggered under the following conditions:\n\ncalldata_MajorityGameFactory_4: 0x0\nstorage_1: 0x0\ncalldata_MajorityGameFactory_0: 0xbc4b6b0000000000000000000000000000000000000000000000000000000000\ncalldatasize_MajorityGameFactory: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/14/0x08f7e145df8b9a10a40674d7ed8396a3a9eae650.sol", "function": "_function_0xbc4b6b00", "lineno": 6, "title": "Exception state", "type": "Informational"}, {"address": 3942, "code": "  * return all avail", "debug": "storage_0: 0x8421003f084001f4210815cf88407c00000000000000037c1d000e8d178001f\ncalldata_MajorityGameFactory_0: 0xeae81c3700000000000000000000000000000000000000000000000000000000\ncalldatasize_MajorityGameFactory: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `getDeployedGames()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/14/0x08f7e145df8b9a10a40674d7ed8396a3a9eae650.sol", "function": "getDeployedGames()", "lineno": 45, "title": "Integer Overflow ", "type": "Warning"}, {"address": 3944, "code": "  * return all avail", "debug": "storage_0: 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffb\ncalldata_MajorityGameFactory_0: 0xeae81c3700000000000000000000000000000000000000000000000000000000\ncalldatasize_MajorityGameFactory: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `getDeployedGames()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/14/0x08f7e145df8b9a10a40674d7ed8396a3a9eae650.sol", "function": "getDeployedGames()", "lineno": 45, "title": "Integer Overflow ", "type": "Warning"}, {"address": 4120, "code": "ntract MajorityGameFactory {\n\n    address[] public deployedGames;\n    address[] public endedGames;\n    address[] public tempArray;\n\n    address public adminAddress;\n\n    mapping(address => uint) private gameAddressIdMap;\n\n    uint public gameCount = 0;\n    uint public endedGameCount = 0;\n\n    modifier adminOnly() {\n        require(msg.sender == adminAddress);\n        _;\n    }\n\n    constructor () public {\n        adminAddress = msg.sender;\n    }\n\n    /**\n     * create new game\n     **/\n    function createGame (uint _gameBet, uint _startTime, string _questionText, address _officialAddress) public adminOnly payable {\n        gameCount ++;\n        address newGameAddress = new MajorityGame(gameCount, _gameBet, _startTime, _questionText, _officialAddress);\n        deployedGames.push(newGameAddress);\n        gameAddressIdMap[newGameAddress] = deployedGames.length;\n\n        setJackpot(newGameAddress, msg.value);\n    }\n\n    /**\n     * return all available games address\n     **/\n    function getDeployedGames() public view returns (address[]) {\n        return deployedGames;\n    }\n\n    /**\n     * return all available games address\n     **/\n    function getEndedGames() public view returns (address[]) {\n        return endedGames;\n    }\n\n    /**\n     * set bonus of the game\n     **/\n    function setJackpot(address targetAddress, uint val) adminOnly public {\n        if (val > 0) {\n            MajorityGame mGame = MajorityGame(targetAddress);\n            mGame.setJackpot.value(val)();\n        }\n    }\n\n    /**\n     * end the game\n     **/\n    function endGame(address targetAddress) public {\n        uint targetGameIndex = gameAddressIdMap[address(targetAddress)];\n        endedGameCount++;\n        endedGames.push(targetAddress);\n        deployedGames[targetGameIndex-1] = deployedGames[deployedGames.length-1];\n\n        gameAddressIdMap[deployedGames[deployedGames.length-1]] = targetGameIndex;\n\n        delete deployedGames[deployedGames.length-1];\n        deployedGames.length--;\n\n        MajorityGame mGame = MajorityGame(address(targetAddress));\n        mGame.endGame();\n    }\n\n    /**\n     * force to end the game\n     **/\n    function forceEndGame(address targetAddress) public adminOnly {\n        uint targetGameIndex = gameAddressIdMap[address(targetAddress)];\n        endedGameCount++;\n        endedGames.push(targetAddress);\n        deployedGames[targetGameIndex-1] = deployedGames[deployedGames.length-1];\n\n        gameAddressIdMap[deployedGames[deployedGames.length-1]] = targetGameIndex;\n\n        delete deployedGames[deployedGames.length-1];\n        deployedGames.length--;\n\n        MajorityGame mGame = MajorityGame(address(targetAddress));\n        mGame.forceEndGame();\n    }\n}\n\n\ncontract MajorityGame {\n\n    // 1 minute\n    //uint constant private AVAILABLE_GAME_TIME = 0", "debug": "storage_0: 0xf7f80197ffffcd1388fe9e147bffff19dc01100900000388870800090084080c\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_MajorityGameFactory_4: 0xf7f80197ffffcd1388fe9e147bffff19dc01100900000388870800090084080c\nstorage_3: 0x0\ncaller: 0x0\ncalldata_MajorityGameFactory_0: 0x493dbd0200000000000000000000000000000000000000000000000000000000\ncalldatasize_MajorityGameFactory: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `forceEndGame(address)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/14/0x08f7e145df8b9a10a40674d7ed8396a3a9eae650.sol", "function": "forceEndGame(address)", "lineno": 3, "title": "Integer Overflow ", "type": "Warning"}, {"address": 4122, "code": "ntract MajorityGameFactory {\n\n    address[] public deployedGames;\n    address[] public endedGames;\n    address[] public tempArray;\n\n    address public adminAddress;\n\n    mapping(address => uint) private gameAddressIdMap;\n\n    uint public gameCount = 0;\n    uint public endedGameCount = 0;\n\n    modifier adminOnly() {\n        require(msg.sender == adminAddress);\n        _;\n    }\n\n    constructor () public {\n        adminAddress = msg.sender;\n    }\n\n    /**\n     * create new game\n     **/\n    function createGame (uint _gameBet, uint _startTime, string _questionText, address _officialAddress) public adminOnly payable {\n        gameCount ++;\n        address newGameAddress = new MajorityGame(gameCount, _gameBet, _startTime, _questionText, _officialAddress);\n        deployedGames.push(newGameAddress);\n        gameAddressIdMap[newGameAddress] = deployedGames.length;\n\n        setJackpot(newGameAddress, msg.value);\n    }\n\n    /**\n     * return all available games address\n     **/\n    function getDeployedGames() public view returns (address[]) {\n        return deployedGames;\n    }\n\n    /**\n     * return all available games address\n     **/\n    function getEndedGames() public view returns (address[]) {\n        return endedGames;\n    }\n\n    /**\n     * set bonus of the game\n     **/\n    function setJackpot(address targetAddress, uint val) adminOnly public {\n        if (val > 0) {\n            MajorityGame mGame = MajorityGame(targetAddress);\n            mGame.setJackpot.value(val)();\n        }\n    }\n\n    /**\n     * end the game\n     **/\n    function endGame(address targetAddress) public {\n        uint targetGameIndex = gameAddressIdMap[address(targetAddress)];\n        endedGameCount++;\n        endedGames.push(targetAddress);\n        deployedGames[targetGameIndex-1] = deployedGames[deployedGames.length-1];\n\n        gameAddressIdMap[deployedGames[deployedGames.length-1]] = targetGameIndex;\n\n        delete deployedGames[deployedGames.length-1];\n        deployedGames.length--;\n\n        MajorityGame mGame = MajorityGame(address(targetAddress));\n        mGame.endGame();\n    }\n\n    /**\n     * force to end the game\n     **/\n    function forceEndGame(address targetAddress) public adminOnly {\n        uint targetGameIndex = gameAddressIdMap[address(targetAddress)];\n        endedGameCount++;\n        endedGames.push(targetAddress);\n        deployedGames[targetGameIndex-1] = deployedGames[deployedGames.length-1];\n\n        gameAddressIdMap[deployedGames[deployedGames.length-1]] = targetGameIndex;\n\n        delete deployedGames[deployedGames.length-1];\n        deployedGames.length--;\n\n        MajorityGame mGame = MajorityGame(address(targetAddress));\n        mGame.forceEndGame();\n    }\n}\n\n\ncontract MajorityGame {\n\n    // 1 minute\n    //uint constant private AVAILABLE_GAME_TIME = 0", "debug": "storage_0: 0xd800000000000000000000000000000000000000000000000000000000000000\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_MajorityGameFactory_4: 0xd800000000000000000000000000000000000000000000000000000000000000\nstorage_3: 0x0\ncaller: 0x0\ncalldata_MajorityGameFactory_0: 0x493dbd0200000000000000000000000000000000000000000000000000000000\ncalldatasize_MajorityGameFactory: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `forceEndGame(address)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/14/0x08f7e145df8b9a10a40674d7ed8396a3a9eae650.sol", "function": "forceEndGame(address)", "lineno": 3, "title": "Integer Overflow ", "type": "Warning"}], "success": true}