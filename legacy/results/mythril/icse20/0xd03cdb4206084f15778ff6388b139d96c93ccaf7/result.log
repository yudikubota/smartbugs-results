{"error": null, "issues": [{"address": 3539, "code": " require(amount > 0, ", "debug": "The exception is triggered under the following conditions:\n\nstorage_16: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_15: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_MobiusBlueToken_0: 0x4c85b42500000000000000000000000000000000000000000000000000000000\ncalldatasize_MobiusBlueToken: 0x4\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_contracts/0xd03cdb4206084f15778ff6388b139d96c93ccaf7.sol", "function": "buyShares(address)", "lineno": 394, "title": "Exception state", "type": "Informational"}, {"address": 4089, "code": "ER_SHARE));\n   ", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_contracts/0xd03cdb4206084f15778ff6388b139d96c93ccaf7.sol", "function": "upgrade(address)", "lineno": 493, "title": "State change after external call", "type": "Warning"}, {"address": 4154, "code": "ftDeadline = min(newDeadli", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_contracts/0xd03cdb4206084f15778ff6388b139d96c93ccaf7.sol", "function": "upgrade(address)", "lineno": 494, "title": "State change after external call", "type": "Warning"}, {"address": 4171, "code": "_DEADLINE_DURATION);\n", "debug": "The exception is triggered under the following conditions:\n\nstorage_15: 0x0\nstorage_16: 0x0\nstorage_4: 0x0\ncalldata_MobiusBlueToken_4: 0xffffffffffffffffffffffffffffffffffffffff\ncaller: 0x0\ncalldata_MobiusBlueToken_0: 0x900f01000000000000000000000000000000000000000000000000000000000\ncalldatasize_MobiusBlueToken: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_contracts/0xd03cdb4206084f15778ff6388b139d96c93ccaf7.sol", "function": "upgrade(address)", "lineno": 494, "title": "Exception state", "type": "Informational"}, {"address": 4791, "code": "           tota", "debug": "The exception is triggered under the following conditions:\n\ncalldata_MobiusBlueToken_32 + 4: 0x0\nstorage_16: 0x0\ncalldata_MobiusBlueToken_0: 0x3d6859f200000000000000000000000000000000000000000000000000000000\ncalldatasize_MobiusBlueToken: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_contracts/0xd03cdb4206084f15778ff6388b139d96c93ccaf7.sol", "function": "investorInfo(address,uint256)", "lineno": 344, "title": "Exception state", "type": "Informational"}, {"address": 4921, "code": "     ipfsHashTy", "debug": "The exception is triggered under the following conditions:\n\ncalldata_MobiusBlueToken_4: 0x0\nstorage_16: 0x0\ncalldata_MobiusBlueToken_0: 0x40c0ece300000000000000000000000000000000000000000000000000000000\ncalldatasize_MobiusBlueToken: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_contracts/0xd03cdb4206084f15778ff6388b139d96c93ccaf7.sol", "function": "updateMyReturns(uint256)", "lineno": 452, "title": "Exception state", "type": "Informational"}, {"address": 4983, "code": "(rounds.length ", "debug": "The exception is triggered under the following conditions:\n\ncalldata_MobiusBlueToken_4: 0x0\nstorage_16: 0x0\ncalldata_MobiusBlueToken_0: 0x427f0b0000000000000000000000000000000000000000000000000000000000\ncalldatasize_MobiusBlueToken: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_contracts/0xd03cdb4206084f15778ff6388b139d96c93ccaf7.sol", "function": "roundInfo(uint256)", "lineno": 359, "title": "Exception state", "type": "Informational"}, {"address": 5309, "code": " uint totalDivi", "debug": "The exception is triggered under the following conditions:\n\ncalldata_MobiusBlueToken_32 + 4: 0x0\nstorage_16: 0x0\ncalldata_MobiusBlueToken_0: 0x48afd1b300000000000000000000000000000000000000000000000000000000\ncalldatasize_MobiusBlueToken: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_contracts/0xd03cdb4206084f15778ff6388b139d96c93ccaf7.sol", "function": "hasReturns(address,uint256)", "lineno": 337, "title": "Exception state", "type": "Informational"}, {"address": 5431, "code": "    require(rounds[la", "debug": "The exception is triggered under the following conditions:\n\nstorage_15: 0x0\nstorage_16: 0x0\ncalldata_MobiusBlueToken_0: 0x4c7ce18a00000000000000000000000000000000000000000000000000000000\ncalldatasize_MobiusBlueToken: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_contracts/0xd03cdb4206084f15778ff6388b139d96c93ccaf7.sol", "function": "withdrawReturns()", "lineno": 421, "title": "Exception state", "type": "Informational"}, {"address": 8145, "code": "ue, ref);\n        // ", "debug": "The exception is triggered under the following conditions:\n\nstorage_15: 0x0\nstorage_16: 0x0\ncalldata_MobiusBlueToken_0: 0x536942b600000000000000000000000000000000000000000000000000000000\ncalldatasize_MobiusBlueToken: 0x4\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_contracts/0xd03cdb4206084f15778ff6388b139d96c93ccaf7.sol", "function": "finalizeAndRestart()", "lineno": 481, "title": "Exception state", "type": "Informational"}, {"address": 10414, "code": "     // 70% goes to share holders", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_contracts/0xd03cdb4206084f15778ff6388b139d96c93ccaf7.sol", "function": "withdrawDevShare()", "lineno": 206, "title": "Message call to external contract", "type": "Informational"}, {"address": 12808, "debug": "", "description": "Function fallback retrieves the transaction origin (tx.origin) using the ORIGIN opcode. Use msg.sender instead.\nSee also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin", "filename": "/unique_contracts/0xd03cdb4206084f15778ff6388b139d96c93ccaf7.sol", "function": "fallback", "lineno": 684, "title": "Use of tx.origin", "type": "Warning"}], "success": true}