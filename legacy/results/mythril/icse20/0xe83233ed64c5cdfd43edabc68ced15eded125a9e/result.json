{
  "contract": "0xe83233ed64c5cdfd43edabc68ced15eded125a9e",
  "tool": "mythril",
  "start": 1563522505.6961708,
  "end": 1563522553.3456957,
  "duration": 47.64952492713928,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 322,
        "code": "      {\n            EtherBook[addressArray[i]] = profitArray[i];\n        }\n    }\n    \n    //Check balance in the vault\n    function CheckBalance(address theAddress) public view returns(uint256 profit)\n    {\n        return EtherBook[theAddre",
        "debug": "calldata_ShareholderDividend_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_ShareholderDividend_0: 0x50883b2d00000000000000000000000000000000000000000000000000000000\ncalldatasize_ShareholderDividend: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `AdjustEtherBook(address[],uint256[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/13/0xe83233ed64c5cdfd43edabc68ced15eded125a9e.sol",
        "function": "AdjustEtherBook(address[],uint256[])",
        "lineno": 158,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 491,
        "code": "h;i++)\n        {\n            EtherBook[addressArray[i]] = EtherBook[addressArray[i]].add(profitArray[i]);\n        }\n    }\n    \n    // Adjust balance of accounts in the vault\n    function AdjustEtherBook(address[] addressArray, uint256[] profitArray) public onlyOwner\n    {",
        "debug": "calldata_ShareholderDividend_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_ShareholderDividend_0: 0x7fcff51100000000000000000000000000000000000000000000000000000000\ncalldatasize_ShareholderDividend: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `_function_0x7fcff511`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/13/0xe83233ed64c5cdfd43edabc68ced15eded125a9e.sol",
        "function": "_function_0x7fcff511",
        "lineno": 148,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1990,
        "code": "        return",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_ShareholderDividend_4 + calldata_ShareholderDividend_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_0: 0x0\ncaller: 0x0\ncalldata_ShareholderDividend_0: 0x50883b2d00000000000000000000000000000000000000000000000000000000\ncalldatasize_ShareholderDividend: 0x4\nmem_128 +\n32 +\n32*\ncalldata_ShareholderDividend_4 + calldata_ShareholderDividend_4: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/13/0xe83233ed64c5cdfd43edabc68ced15eded125a9e.sol",
        "function": "AdjustEtherBook(address[],uint256[])",
        "lineno": 166,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2337,
        "code": "rofitArray) pu",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_ShareholderDividend_4 + calldata_ShareholderDividend_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_0: 0x0\ncaller: 0x0\ncalldata_ShareholderDividend_0: 0x7fcff51100000000000000000000000000000000000000000000000000000000\ncalldatasize_ShareholderDividend: 0x4\nmem_128 +\n32 +\n32*\ncalldata_ShareholderDividend_4 + calldata_ShareholderDividend_4: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/13/0xe83233ed64c5cdfd43edabc68ced15eded125a9e.sol",
        "function": "_function_0x7fcff511",
        "lineno": 155,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2937,
        "code": "wnabl",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_ShareholderDividend_cpy: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nmem_0 +\n192 +\n32*\ncalldata_ShareholderDividend_4 + calldata_ShareholderDividend_4: 0x57f25cd000000000000000000000000000000000000000000000000000000000\nmem_128 +\n32 +\n32*\ncalldata_ShareholderDividend_4 + calldata_ShareholderDividend_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_ShareholderDividend_4 + calldata_ShareholderDividend_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_0: 0x0\ncaller: 0x0\ncalldata_ShareholderDividend_0: 0x7fcff51100000000000000000000000000000000000000000000000000000000\ncalldatasize_ShareholderDividend: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `_function_0x7fcff511`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/13/0xe83233ed64c5cdfd43edabc68ced15eded125a9e.sol",
        "function": "_function_0x7fcff511",
        "lineno": 100,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2950,
        "code": "has an owner a",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_ShareholderDividend_cpy: 0x1\nmem_0 +\n192 +\n32*\ncalldata_ShareholderDividend_4 + calldata_ShareholderDividend_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nmem_128 +\n32 +\n32*\ncalldata_ShareholderDividend_4 + calldata_ShareholderDividend_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_ShareholderDividend_4 + calldata_ShareholderDividend_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_0: 0x0\ncaller: 0x0\ncalldata_ShareholderDividend_0: 0x7fcff51100000000000000000000000000000000000000000000000000000000\ncalldatasize_ShareholderDividend: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/13/0xe83233ed64c5cdfd43edabc68ced15eded125a9e.sol",
        "function": "_function_0x7fcff511",
        "lineno": 100,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}