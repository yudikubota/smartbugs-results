{
  "contract": "0x340354b210d5b13327e4ee3305f92e7804e29b68",
  "tool": "mythril",
  "start": 1563749443.801182,
  "end": 1563749466.5826092,
  "duration": 22.781427145004272,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 1277,
        "code": " }\n\n}\n\ncontrac",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/46/0x340354b210d5b13327e4ee3305f92e7804e29b68.sol",
        "function": "stop()",
        "lineno": 95,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 1723,
        "code": "\n    }\n\n    function onTransfer(address _from, addr",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/46/0x340354b210d5b13327e4ee3305f92e7804e29b68.sol",
        "function": "changeController(address,address)",
        "lineno": 165,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 2941,
        "code": "}\n\ncontract DSNote {\n    event Lo",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/46/0x340354b210d5b13327e4ee3305f92e7804e29b68.sol",
        "function": "start()",
        "lineno": 55,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 2941,
        "code": "}\n\ncontract DSNote {\n    event Lo",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1723\n",
        "filename": "/unique_chucks/46/0x340354b210d5b13327e4ee3305f92e7804e29b68.sol",
        "function": "changeController(address,address)",
        "lineno": 55,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 2941,
        "code": "}\n\ncontract DSNote {\n    event Lo",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function start(). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/46/0x340354b210d5b13327e4ee3305f92e7804e29b68.sol",
        "function": "start()",
        "lineno": 55,
        "title": "Transaction order dependence",
        "type": "Warning"
      }
    ],
    "success": true
  }
}