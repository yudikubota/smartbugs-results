{
  "contract": "0x494791d2c0bda0502f35cda78caee80c8bed67f2",
  "tool": "mythril",
  "start": 1563710324.8814151,
  "end": 1563710493.2577322,
  "duration": 168.37631702423096,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 3254,
        "code": "o transfer all tokens of the s",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/38/0x494791d2c0bda0502f35cda78caee80c8bed67f2.sol",
        "function": "approve(address,uint256)",
        "lineno": 525,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 5595,
        "code": "g) {\n    return \"LTR Item Sa",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/38/0x494791d2c0bda0502f35cda78caee80c8bed67f2.sol",
        "function": "safeTransferFrom(address,address,uint256)",
        "lineno": 1092,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 9022,
        "code": "code is not act",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_9: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_12: 0x0\ncaller: 0x0\ncalldata_TradeableERC721Token_0: 0x449a52f800000000000000000000000000000000000000000000000000000000\ncalldatasize_TradeableERC721Token: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/38/0x494791d2c0bda0502f35cda78caee80c8bed67f2.sol",
        "function": "mintTo(address,uint256)",
        "lineno": 360,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}