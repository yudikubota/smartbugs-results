{
  "contract": "0x2ee5054ee925a122976281e1dfea22dc873de96f",
  "tool": "mythril",
  "start": 1563754401.4859807,
  "end": 1563755275.3184264,
  "duration": 873.8324456214905,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 864,
        "code": "t256 sel",
        "debug": "The exception is triggered under the following conditions:\n\nmem_160 +\n32*\nConcat(0, Extract(255, 5, 31 + calldatasize_WorldCupToken)) +\n32: 0x20\ncalldatasize_WorldCupToken: 0x0\nstorage_KECCAC_mem_160 +\n32*\nConcat(0, Extract(255, 5, 31 + calldatasize_WorldCupToken)) +\n32): 0x20\nmem_192 +\n32*\nConcat(0, Extract(255, 5, 31 + calldatasize_WorldCupToken)) +\n32 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               Concat(0,\n                      ~(~Extract(255,\n                                 1,\n                                 115792089237316195423570985008687907853269984665640564039457584007913129639935 +\n                                 256*\n                                 If(Extract(0,\n                                        0,\n                                        storage_KECCAC_mem_160 +\n32*\nConcat(0, Extract(255, 5, 31 + calldatasize_WorldCupToken)) +\n32)) ==\n                                    0,\n                                    1,\n                                    0)) |\n                        ~Extract(255,\n                                 1,\n                                 storage_KECCAC_mem_160 +\n32*\nConcat(0, Extract(255, 5, 31 + calldatasize_WorldCupToken)) +\n32)))))): 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdf\nmem_128 +\n32 +\n32*\nConcat(0, Extract(255, 5, 31 + calldatasize_WorldCupToken)): 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_7: 0x0\nstorage_8: 0x0\nstorage_KECCAC_mem_224 +\n32*\nConcat(0, Extract(255, 5, 31 + calldatasize_WorldCupToken)) +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               Concat(0,\n                      ~(~Extract(255,\n                                 1,\n                                 115792089237316195423570985008687907853269984665640564039457584007913129639935 +\n                                 256*\n                                 If(Extract(0,\n                                        0,\n                                        storage_KECCAC_mem_160 +\n32*\nConcat(0, Extract(255, 5, 31 + calldatasize_WorldCupToken)) +\n32)) ==\n                                    0,\n                                    1,\n                                    0)) |\n                        ~Extract(255,\n                                 1,\n                                 storage_KECCAC_mem_160 +\n32*\nConcat(0, Extract(255, 5, 31 + calldatasize_WorldCupToken)) +\n32)))))) +\n32): 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/46/0x2ee5054ee925a122976281e1dfea22dc873de96f.sol",
        "function": "fallback",
        "lineno": 261,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2720,
        "code": "okenId];\n    require(SafeMath.diffString(_name,team.name)==true);\n    teamName = team.name;\n    sellingPrice = teamIndexToPrice[_tokenId];\n    owner = teamIndexToOwner[_tokenId];\n  }\n  \n  \n  function implementsERC721() public pure returns (bool) {\n    return true;\n  }\n  function name() public pure returns (string) {\n    return NAME;\n  }\n  function ownerOf(uint256 _tokenId)\n    public\n    view\n    r",
        "debug": "calldata_WorldCupToken_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_WorldCupToken_0: 0xb5e7168700000000000000000000000000000000000000000000000000000000\ncalldatasize_WorldCupToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `getTeam4name(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/46/0x2ee5054ee925a122976281e1dfea22dc873de96f.sol",
        "function": "getTeam4name(string)",
        "lineno": 215,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 4530,
        "code": "tring teamName,",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_WorldCupToken_4: 0x0\nstorage_8: 0x0\ncalldata_WorldCupToken_0: 0x8e0f1b00000000000000000000000000000000000000000000000000000000\ncalldatasize_WorldCupToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/46/0x2ee5054ee925a122976281e1dfea22dc873de96f.sol",
        "function": "fallback",
        "lineno": 210,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 6587,
        "code": "entsERC721() pu",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_KECCAC_mem_128 +\n32 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_WorldCupToken_4 + calldata_WorldCupToken_4))): 0x0\nstorage_8: 0x0\ncalldata_WorldCupToken_4 + calldata_WorldCupToken_4: 0x1f\ncalldata_WorldCupToken_0: 0xb5e7168700000000000000000000000000000000000000000000000000000000\ncalldatasize_WorldCupToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/46/0x2ee5054ee925a122976281e1dfea22dc873de96f.sol",
        "function": "getTeam4name(string)",
        "lineno": 223,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 7473,
        "code": " {\n    if (a == 0) {\n     ",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_WorldCupToken_32_+_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_WorldCupToken_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_calldata_WorldCupToken_32_+_36: 0xffffffffffffffffffffffffffffffffffffffff00\ncalldata_WorldCupToken_4: 0xffffffffffffffffffffffffffffffffffffffff\nstorage_7: 0x0\ncalldata_WorldCupToken_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_WorldCupToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `transferFrom(address,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/46/0x2ee5054ee925a122976281e1dfea22dc873de96f.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 390,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 7689,
        "code": "}\n  /**\n  * @dev Integer div",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_WorldCupToken_4: 0x0\ncalldata_WorldCupToken_32 + 4: 0x1\nstorage_keccac_calldata_WorldCupToken_32_+_36: 0x100\ncalldata_WorldCupToken_4: 0x1\nstorage_7: 0x0\ncalldata_WorldCupToken_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_WorldCupToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer underflow exists in the function `transferFrom(address,address,uint256)`.\nThe subtraction may result in a value < 0.",
        "filename": "/unique_chucks/46/0x2ee5054ee925a122976281e1dfea22dc873de96f.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 397,
        "title": "Integer Underflow",
        "type": "Warning"
      },
      {
        "address": 8179,
        "code": "o, _tokenId);\n  }\n}\nlibrary S",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function payout(address). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/46/0x2ee5054ee925a122976281e1dfea22dc873de96f.sol",
        "function": "payout(address)",
        "lineno": 383,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 8179,
        "code": "o, _tokenId);\n  }\n}\nlibrary S",
        "debug": "",
        "description": "The return value of an external call is not checked. Note that execution continue even if the called contract throws.",
        "filename": "/unique_chucks/46/0x2ee5054ee925a122976281e1dfea22dc873de96f.sol",
        "function": "payout(address)",
        "lineno": 383,
        "title": "Unchecked CALL return value",
        "type": "Informational"
      },
      {
        "address": 8261,
        "code": "v Multiplies two numbe",
        "debug": "",
        "description": "The return value of an external call is not checked. Note that execution continue even if the called contract throws.",
        "filename": "/unique_chucks/46/0x2ee5054ee925a122976281e1dfea22dc873de96f.sol",
        "function": "payout(address)",
        "lineno": 388,
        "title": "Unchecked CALL return value",
        "type": "Informational"
      }
    ],
    "success": true
  }
}