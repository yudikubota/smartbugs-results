{
  "contract": "0x9211871ff287ebd5cc0d2f593b0c1e0c99db59c3",
  "tool": "mythril",
  "start": 1563311238.043214,
  "end": 1563311290.365381,
  "duration": 52.32216691970825,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 4991,
        "code": "{\n    \trequire(balances[msg.sender] >= _burntAmoun",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_contracts/0x9211871ff287ebd5cc0d2f593b0c1e0c99db59c3.sol",
        "function": "transferAnyERC20Token(address,address,uint256)",
        "lineno": 134,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 5501,
        "code": "     return a ",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_YSH_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_2: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_YSH_0: 0x42966c6800000000000000000000000000000000000000000000000000000000\ncalldatasize_YSH: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0x9211871ff287ebd5cc0d2f593b0c1e0c99db59c3.sol",
        "function": "_function_0x42966c68",
        "lineno": 21,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 5519,
        "code": ">= a)",
        "debug": "calldata_YSH_4: 0xeb7e3000000000012000200134010f94023a7a28e10000000bffefc46000b0f0\nstorage_5: 0x18a3d0000000003d83b1202da8090f2e6802400af2000000280000127fe43efa\nstorage_2: 0xeb7e3000000000012000200134010f94023a7a28e10000000bffefc46000b0f0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xeb7e3000000000012000200134010f94023a7a28e10000000bffefc46000b0f0\ncalldata_YSH_0: 0x42966c6800000000000000000000000000000000000000000000000000000000\ncalldatasize_YSH: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `_function_0x42966c68`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x9211871ff287ebd5cc0d2f593b0c1e0c99db59c3.sol",
        "function": "_function_0x42966c68",
        "lineno": 26,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 5532,
        "code": "eturn c;\n    }",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_YSH_32 + 4: 0x950dff78e666f73fd36ffedf5fe656f42f732f95edbafb7bf77fedeee4c653a9\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_YSH_4: 0xf71ca024c4e4c48edb080090575702d73908a831c1b8c07b8480010000f10f3b\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x950dff78e666f73fd36ffedf5fe656f42f732f95edbafb7bf77fedeee4c653a9\ncalldata_YSH_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncalldatasize_YSH: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0x9211871ff287ebd5cc0d2f593b0c1e0c99db59c3.sol",
        "function": "transfer(address,uint256)",
        "lineno": 27,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}