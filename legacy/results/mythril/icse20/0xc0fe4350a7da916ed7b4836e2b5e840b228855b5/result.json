{
  "contract": "0xc0fe4350a7da916ed7b4836e2b5e840b228855b5",
  "tool": "mythril",
  "start": 1563569038.3831005,
  "end": 1563569151.076056,
  "duration": 112.692955493927,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 678,
        "code": "LT.transfer(msg.sender, amountZLT);\n    ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/12/0xc0fe4350a7da916ed7b4836e2b5e840b228855b5.sol",
        "function": "fallback",
        "lineno": 58,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 678,
        "code": "LT.transfer(msg.sender, amountZLT);\n    ",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1002\nCall at address: 899\n",
        "filename": "/unique_chucks/12/0xc0fe4350a7da916ed7b4836e2b5e840b228855b5.sol",
        "function": "fallback",
        "lineno": 58,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 899,
        "code": "iary.transfer(donation);\n    }\n    \n    ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/12/0xc0fe4350a7da916ed7b4836e2b5e840b228855b5.sol",
        "function": "fallback",
        "lineno": 59,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 899,
        "code": "iary.transfer(donation);\n    }\n    \n    ",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1002\n",
        "filename": "/unique_chucks/12/0xc0fe4350a7da916ed7b4836e2b5e840b228855b5.sol",
        "function": "fallback",
        "lineno": 59,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 2740,
        "code": "the available token bala",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/12/0xc0fe4350a7da916ed7b4836e2b5e840b228855b5.sol",
        "function": "setTokenReward(address,address)",
        "lineno": 102,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 2740,
        "code": "the available token bala",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2994\n",
        "filename": "/unique_chucks/12/0xc0fe4350a7da916ed7b4836e2b5e840b228855b5.sol",
        "function": "setTokenReward(address,address)",
        "lineno": 102,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 2740,
        "code": "the available token bala",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function setAvailableToken(). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/12/0xc0fe4350a7da916ed7b4836e2b5e840b228855b5.sol",
        "function": "setAvailableToken()",
        "lineno": 102,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 2801,
        "code": "   \n    // Set the available token bala",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/12/0xc0fe4350a7da916ed7b4836e2b5e840b228855b5.sol",
        "function": "setAvailableToken()",
        "lineno": 101,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 2994,
        "code": "lly\n    function setAvai",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/12/0xc0fe4350a7da916ed7b4836e2b5e840b228855b5.sol",
        "function": "setTokenReward(address,address)",
        "lineno": 102,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 2994,
        "code": "lly\n    function setAvai",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function setAvailableToken(). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/12/0xc0fe4350a7da916ed7b4836e2b5e840b228855b5.sol",
        "function": "setAvailableToken()",
        "lineno": 102,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 3055,
        "code": " contract manually\n    function setAvai",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/12/0xc0fe4350a7da916ed7b4836e2b5e840b228855b5.sol",
        "function": "setAvailableToken()",
        "lineno": 102,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 3269,
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function withEth(uint256). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/12/0xc0fe4350a7da916ed7b4836e2b5e840b228855b5.sol",
        "function": "withEth(uint256)",
        "lineno": 121,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 3649,
        "code": " amountZLT);\n    }\n    \n    // Set tok",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/12/0xc0fe4350a7da916ed7b4836e2b5e840b228855b5.sol",
        "function": "withdrawAvailableToken(address,uint256,uint256)",
        "lineno": 77,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 3649,
        "code": " amountZLT);\n    }\n    \n    // Set tok",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3870\n",
        "filename": "/unique_chucks/12/0xc0fe4350a7da916ed7b4836e2b5e840b228855b5.sol",
        "function": "withdrawAvailableToken(address,uint256,uint256)",
        "lineno": 77,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 3649,
        "code": " amountZLT);\n    }\n    \n    // Set tok",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function withdrawAvailableToken(address,uint256,uint256). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/12/0xc0fe4350a7da916ed7b4836e2b5e840b228855b5.sol",
        "function": "withdrawAvailableToken(address,uint256,uint256)",
        "lineno": 77,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 3870,
        "code": " ETH donation/contribution\n    functio",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/12/0xc0fe4350a7da916ed7b4836e2b5e840b228855b5.sol",
        "function": "withdrawAvailableToken(address,uint256,uint256)",
        "lineno": 80,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 3870,
        "code": " ETH donation/contribution\n    functio",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function withdrawAvailableToken(address,uint256,uint256). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/12/0xc0fe4350a7da916ed7b4836e2b5e840b228855b5.sol",
        "function": "withdrawAvailableToken(address,uint256,uint256)",
        "lineno": 80,
        "title": "Transaction order dependence",
        "type": "Warning"
      }
    ],
    "success": true
  }
}