{"error": null, "issues": [{"address": 368, "code": "(address to, uint256 amountToken) {\n\t\tTrackInfo track = withdrawTracks[_withdrawId];\n\t\treturn (track.to, track.amountToken);\n\t}\n\n}\n\n\ncontract ContractSpendToken is StandardToken, Ownable {\n  mapping (address => address) private contractToReceiver;\n\n  function addContract(addres", "debug": "calldata_WithdrawTrack_32 + 36: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_WithdrawTrack_0: 0x14eaa43b00000000000000000000000000000000000000000000000000000000\ncalldatasize_WithdrawTrack: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `withdrawToken(address,uint256,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x943aca8ed65fbf188a7d369cfc2bee0ae435ee1b.sol", "function": "withdrawToken(address,uint256,string)", "lineno": 349, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1336, "code": "ntractAdd, address _to) external onlyOwner returns (bool) {\n    require(_contractAdd != address(0x0));\n    require(_to != address(0x0));\n\n    contractToReceiver[_contractAdd] = _to;\n    return tr", "debug": "calldata_WithdrawTrack_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_WithdrawTrack_0: 0xf6b5460f00000000000000000000000000000000000000000000000000000000\ncalldatasize_WithdrawTrack: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `withdrawTrackOf(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x943aca8ed65fbf188a7d369cfc2bee0ae435ee1b.sol", "function": "withdrawTrackOf(string)", "lineno": 360, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2087, "code": "Ownable {\n  mapping (address => address) private contractToReceiver;\n\n ", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_WithdrawTrack_4: 0xf51900914c8390c44b32d28fab96c903528f428dd8f6c1944621c79c92cb0c4\ncalldata_WithdrawTrack_32 + 4: 0x485a7d26068ad1d914bbcc8efa2081cfb77af845f33a6c7ee6fcbfedc93a2456\nmem_160 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_WithdrawTrack_4 + calldata_WithdrawTrack_32 + 36)) +\n64: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\ncalldata_WithdrawTrack_4 + calldata_WithdrawTrack_32 + 36: 0x1f\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x485a7d26068ad1d914bbcc8efa2081cfb77af845f33a6c7ee6fcbfedc93a2456\ncalldata_WithdrawTrack_4: 0xffffffffffffffffffffffffffffffffffffffff\nstorage_3: 0x0\ncaller: 0x0\ncalldata_WithdrawTrack_0: 0x14eaa43b00000000000000000000000000000000000000000000000000000000\ncalldatasize_WithdrawTrack: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `withdrawToken(address,uint256,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x943aca8ed65fbf188a7d369cfc2bee0ae435ee1b.sol", "function": "withdrawToken(address,uint256,string)", "lineno": 357, "title": "Integer Overflow ", "type": "Warning"}, {"address": 5572, "code": ";\n  }", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_WithdrawTrack_4: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncalldata_WithdrawTrack_32 + 4: 0x57f25cd000000000000000000000000000000000000000000000000000000000\ncalldata_WithdrawTrack_0: 0xd73dd62300000000000000000000000000000000000000000000000000000000\ncalldatasize_WithdrawTrack: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `increaseApproval(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x943aca8ed65fbf188a7d369cfc2bee0ae435ee1b.sol", "function": "increaseApproval(address,uint256)", "lineno": 42, "title": "Integer Overflow ", "type": "Warning"}, {"address": 5585, "code": "ntract BasicTo", "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_WithdrawTrack_4: 0x1\ncalldata_WithdrawTrack_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_WithdrawTrack_0: 0xd73dd62300000000000000000000000000000000000000000000000000000000\ncalldatasize_WithdrawTrack: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_contracts/0x943aca8ed65fbf188a7d369cfc2bee0ae435ee1b.sol", "function": "increaseApproval(address,uint256)", "lineno": 47, "title": "Exception state", "type": "Informational"}, {"address": 5663, "code": "tToken);\n\t\tif (result) {\n\t\t\twithdrawTracks[_withdrawId] = TrackInfo(_to, _amountToken, _withdrawId);\n\t\t}\n\t\treturn result;\n\t}\n\n\tfunction withdrawTrackOf(string _withdrawId) public view returns (address to, uint256 amountToken) {\n\t\tTrackInfo track = withdrawTracks[_withdrawId];\n\t\treturn (track.to, track.amountToken);\n\t}\n\n}\n\n\ncontract ContractSpendToken is StandardToken, Ownable {\n  mapping (address => address) private contractToReceiver;\n\n  function addContract(address _contractAdd, address _to) external onlyOwner returns (bool) {\n    require(_contractAdd != address(0x0));\n    require(_to != address(0x0));\n\n    contractToReceiver[_contractAdd] = _to;\n    return true;\n ", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_WithdrawTrack_4: 0x3edffffffffffff9f000000000000000001c07bdf87400001c03ce787fe3effd\ncalldata_WithdrawTrack_4 + calldata_WithdrawTrack_32 + 36: 0x20\ncalldata_WithdrawTrack_32 + 4: 0x0\nmem_mem_160 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_WithdrawTrack_4 + calldata_WithdrawTrack_32 + 36)) +\n64: 0x8000000000000000000000000000000000000000000000000000000000000000\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncalldata_WithdrawTrack_4: 0xffffffffffffffffffffffffffffffffffffffff\nstorage_3: 0x0\ncaller: 0x0\ncalldata_WithdrawTrack_0: 0x14eaa43b00000000000000000000000000000000000000000000000000000000\ncalldatasize_WithdrawTrack: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `withdrawToken(address,uint256,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x943aca8ed65fbf188a7d369cfc2bee0ae435ee1b.sol", "function": "withdrawToken(address,uint256,string)", "lineno": 342, "title": "Integer Overflow ", "type": "Warning"}, {"address": 5677, "code": "tToken);\n\t\tif (result) {\n\t\t\twithdrawTracks[_withdrawId] = TrackInfo(_to, _amountToken, _withdrawId);\n\t\t}\n\t\treturn result;\n\t}\n\n\tfunction withdrawTrackOf(string _withdrawId) public view returns (address to, uint256 amountToken) {\n\t\tTrackInfo track = withdrawTracks[_withdrawId];\n\t\treturn (track.to, track.amountToken);\n\t}\n\n}\n\n\ncontract ContractSpendToken is StandardToken, Ownable {\n  mapping (address => address) private contractToReceiver;\n\n  function addContract(address _contractAdd, address _to) external onlyOwner returns (bool) {\n    require(_contractAdd != address(0x0));\n    require(_to != address(0x0));\n\n    contractToReceiver[_contractAdd] = _to;\n    return true;\n ", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_WithdrawTrack_4: 0x3c99264f97f6ccbc3d41df004bf7bded4ad05fce002cfcb33669600000000000\ncalldata_WithdrawTrack_32 + 4: 0x4cbf0b2ae962403cb0154cd9c08000008023152bfdf0fd2e1ac11ffffffffffe\nmem_160 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_WithdrawTrack_4 + calldata_WithdrawTrack_32 + 36)) +\n64: 0x8522e7f7ddfbff8e000000000000000000000000000000000000000000000003\nmem_mem_160 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_WithdrawTrack_4 + calldata_WithdrawTrack_32 + 36)) +\n64: 0xaa057916f2cbf30dffffff7ffffffffffffffffffffffffffffffffffffffeef\ncalldata_WithdrawTrack_4 + calldata_WithdrawTrack_32 + 36: 0x1f\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x4cbf0b2ae962403cb0154cd9c08000008023152bfdf0fd2e1ac11ffffffffffe\ncalldata_WithdrawTrack_4: 0xffffffffffffffffffffffffffffffffffffffff\nstorage_3: 0x0\ncaller: 0x0\ncalldata_WithdrawTrack_0: 0x14eaa43b00000000000000000000000000000000000000000000000000000000\ncalldatasize_WithdrawTrack: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `withdrawToken(address,uint256,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x943aca8ed65fbf188a7d369cfc2bee0ae435ee1b.sol", "function": "withdrawToken(address,uint256,string)", "lineno": 342, "title": "Integer Overflow ", "type": "Warning"}], "success": true}