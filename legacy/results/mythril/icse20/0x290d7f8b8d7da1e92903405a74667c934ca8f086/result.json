{
  "contract": "0x290d7f8b8d7da1e92903405a74667c934ca8f086",
  "tool": "mythril",
  "start": 1563307316.9233143,
  "end": 1563307354.0287123,
  "duration": 37.10539793968201,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 878,
        "code": "         Deposit(msg.sender, msg.",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x800c280400200677c443027000373b306480322e909f5b714c05982bf1df1191\ncallvalue: 0xfefb13fd7fdffbffaf4bc2c0002033ff74a41a060edfe3625de533360598000b\nstorage_2: 0xfefb13fd7fdffbffaf4bc2c0002033ff74a41a060edfe3625de533360598000b\ncalldata_Wallet_0: 0x800000000000000000000000000000000000000000000000000000000\ncalldatasize_Wallet: 0x4\n",
        "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x290d7f8b8d7da1e92903405a74667c934ca8f086.sol",
        "function": "fallback",
        "lineno": 40,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1202,
        "code": "o, amount);\n       ",
        "debug": "",
        "description": "In the function `withdraw(uint256)` the following predictable state variables are used to determine Ether recipient:\n- block.timestamp\n",
        "filename": "/unique_contracts/0x290d7f8b8d7da1e92903405a74667c934ca8f086.sol",
        "function": "withdraw(uint256)",
        "lineno": 51,
        "title": "Dependence on predictable environment variable",
        "type": "Warning"
      },
      {
        "address": 1569,
        "code": "amount && amount > 0) {\n             ",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_contracts/0x290d7f8b8d7da1e92903405a74667c934ca8f086.sol",
        "function": "withdrawTokenTo(address,address,uint256)",
        "lineno": 64,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 1569,
        "code": "amount && amount > 0) {\n             ",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1814\nCall at address: 1814\n",
        "filename": "/unique_contracts/0x290d7f8b8d7da1e92903405a74667c934ca8f086.sol",
        "function": "withdrawTokenTo(address,address,uint256)",
        "lineno": 64,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 1814,
        "code": "\n\n    function MinimumDeposit() p",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_contracts/0x290d7f8b8d7da1e92903405a74667c934ca8f086.sol",
        "function": "withdrawTokenTo(address,address,uint256)",
        "lineno": 68,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 2254,
        "code": "on withdrawTokenTo(address token, add",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_contracts/0x290d7f8b8d7da1e92903405a74667c934ca8f086.sol",
        "function": "withdrawToken(address)",
        "lineno": 61,
        "title": "Message call to external contract",
        "type": "Warning"
      }
    ],
    "success": true
  }
}