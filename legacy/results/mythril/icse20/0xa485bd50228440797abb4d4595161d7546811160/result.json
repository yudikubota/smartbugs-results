{
  "contract": "0xa485bd50228440797abb4d4595161d7546811160",
  "tool": "mythril",
  "start": 1563512040.1671078,
  "end": 1563512066.0117884,
  "duration": 25.844680547714233,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 1118,
        "code": "owner = _newOwner;\n    }\n\n    func",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/5/0xa485bd50228440797abb4d4595161d7546811160.sol",
        "function": "setTotalBorrowed(uint256)",
        "lineno": 128,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 1191,
        "code": "    }\n\n    function payoutPEG(",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/5/0xa485bd50228440797abb4d4595161d7546811160.sol",
        "function": "setTotalBorrowed(uint256)",
        "lineno": 141,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 1386,
        "code": "owner = _newOwner;\n    }\n\n    func",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/5/0xa485bd50228440797abb4d4595161d7546811160.sol",
        "function": "setOwner(address)",
        "lineno": 128,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 1517,
        "code": " function setTota",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/5/0xa485bd50228440797abb4d4595161d7546811160.sol",
        "function": "setOwner(address)",
        "lineno": 135,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 1718,
        "code": "owner = _newOwner;\n    }\n\n    func",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/5/0xa485bd50228440797abb4d4595161d7546811160.sol",
        "function": "burnPEG(uint256)",
        "lineno": 128,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 1718,
        "code": "owner = _newOwner;\n    }\n\n    func",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2142\nCall at address: 1921\n",
        "filename": "/unique_chucks/5/0xa485bd50228440797abb4d4595161d7546811160.sol",
        "function": "burnPEG(uint256)",
        "lineno": 128,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 1921,
        "code": "unt) public authOnly {\n      ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/5/0xa485bd50228440797abb4d4595161d7546811160.sol",
        "function": "burnPEG(uint256)",
        "lineno": 151,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 1921,
        "code": "unt) public authOnly {\n      ",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2142\n",
        "filename": "/unique_chucks/5/0xa485bd50228440797abb4d4595161d7546811160.sol",
        "function": "burnPEG(uint256)",
        "lineno": 151,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 2142,
        "code": "unt) public authOnly {\n        _token.transfer(_to, _amount);",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/5/0xa485bd50228440797abb4d4595161d7546811160.sol",
        "function": "burnPEG(uint256)",
        "lineno": 151,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 2363,
        "code": "owner = _newOwner;\n    }\n\n    func",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/5/0xa485bd50228440797abb4d4595161d7546811160.sol",
        "function": "setRawDebt(uint256)",
        "lineno": 128,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 2436,
        "code": "rrowed;\n    }\n\n    fu",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/5/0xa485bd50228440797abb4d4595161d7546811160.sol",
        "function": "setRawDebt(uint256)",
        "lineno": 136,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 2669,
        "code": "owner = _newOwner;\n    }\n\n    func",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/5/0xa485bd50228440797abb4d4595161d7546811160.sol",
        "function": "_function_0x92940bf9",
        "lineno": 128,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 2669,
        "code": "owner = _newOwner;\n    }\n\n    func",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2902\n",
        "filename": "/unique_chucks/5/0xa485bd50228440797abb4d4595161d7546811160.sol",
        "function": "_function_0x92940bf9",
        "lineno": 128,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 2902,
        "code": "ace\n*/\ncontract ISmartToken i",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/5/0xa485bd50228440797abb4d4595161d7546811160.sol",
        "function": "_function_0x92940bf9",
        "lineno": 167,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 3155,
        "code": "owner = _newOwner;\n    }\n\n    func",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/5/0xa485bd50228440797abb4d4595161d7546811160.sol",
        "function": "setTimestamp(uint256)",
        "lineno": 128,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 3228,
        "code": "ansfer(_to, _amount);\n",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/5/0xa485bd50228440797abb4d4595161d7546811160.sol",
        "function": "setTimestamp(uint256)",
        "lineno": 144,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 3466,
        "code": "owner = _newOwner;\n    }\n\n    func",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/5/0xa485bd50228440797abb4d4595161d7546811160.sol",
        "function": "payoutPEG(address,uint256)",
        "lineno": 128,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 3466,
        "code": "owner = _newOwner;\n    }\n\n    func",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3669\n",
        "filename": "/unique_chucks/5/0xa485bd50228440797abb4d4595161d7546811160.sol",
        "function": "payoutPEG(address,uint256)",
        "lineno": 128,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 3669,
        "code": "kToken().destroy(address(this",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/5/0xa485bd50228440797abb4d4595161d7546811160.sol",
        "function": "payoutPEG(address,uint256)",
        "lineno": 148,
        "title": "Message call to external contract",
        "type": "Informational"
      }
    ],
    "success": true
  }
}