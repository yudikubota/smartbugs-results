{"error": null, "issues": [{"address": 1047, "code": ";\n        if (approve(_spender, _value)) {\n            spender.receiveApproval(msg.sender, _value, this, _extraData);\n            return true;\n        }\n    }\n}\n\ncontract BhuoCoin is Lockable, TokenERC20 {\n    string public version = \"v1.0.2\";\n    \n    mapping (address => bool) public frozenAccount;\n\n    event LogFro", "debug": "calldata_tokenRecipient_32 + 36: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_tokenRecipient_0: 0xcae9ca5100000000000000000000000000000000000000000000000000000000\ncalldatasize_tokenRecipient: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `approveAndCall(address,uint256,bytes)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0xadef4de5a5ce8c57a10a8cffb6dbf1cc51528983.sol", "function": "approveAndCall(address,uint256,bytes)", "lineno": 156, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2796, "code": "ring public version = \"v1.0.2\";\n    \n    mapping (address => ", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_contracts/0xadef4de5a5ce8c57a10a8cffb6dbf1cc51528983.sol", "function": "approveAndCall(address,uint256,bytes)", "lineno": 165, "title": "Message call to external contract", "type": "Warning"}], "success": true}