{"success": false, "error": "Solc experienced a fatal error (code 1).\n\n/unique_chucks/20/0xdd19b39e39c88bf36f562df03831014b4edb9e10.sol:21:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use \"constructor(...) { ... }\" instead.\n  function Ownable() public {\r\n  ^ (Relevant source part starts here and spans across multiple lines).\n/unique_chucks/20/0xdd19b39e39c88bf36f562df03831014b4edb9e10.sol:420:1: Error: Source file requires different compiler version (current compiler is 0.4.25+commit.59dbf8f1.Linux.g++ - note that nightly builds are considered to be strictly less than the released version\n ... pragma solidity >=0.4.1 <=0.4.20; ... \n     ^-------------------------------^\n/unique_chucks/20/0xdd19b39e39c88bf36f562df03831014b4edb9e10.sol:1329:45: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n        if ((_nbytes == 0)||(_nbytes > 32)) throw;\r\n                                            ^---^\n/unique_chucks/20/0xdd19b39e39c88bf36f562df03831014b4edb9e10.sol:1448:71: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n        if ((_proof[0] != \"L\")||(_proof[1] != \"P\")||(_proof[2] != 1)) throw;\r\n                                                                      ^---^\n/unique_chucks/20/0xdd19b39e39c88bf36f562df03831014b4edb9e10.sol:1451:37: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n        if (proofVerified == false) throw;\r\n                                    ^---^\n/unique_chucks/20/0xdd19b39e39c88bf36f562df03831014b4edb9e10.sol:1469:39: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n\tif (prefix.length != n_random_bytes) throw;\r\n\t                                     ^---^\n/unique_chucks/20/0xdd19b39e39c88bf36f562df03831014b4edb9e10.sol:1527:13: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n            throw; // Should be a better way?\r\n            ^---^\n/unique_chucks/20/0xdd19b39e39c88bf36f562df03831014b4edb9e10.sol:1677:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use \"constructor(...) { ... }\" instead.\n    function Mindmap_Token(uint256 _rate, address _wallet) public {\r\n    ^ (Relevant source part starts here and spans across multiple lines).\n/unique_chucks/20/0xdd19b39e39c88bf36f562df03831014b4edb9e10.sol:39:5: Warning: Invoking events without \"emit\" prefix is deprecated.\n    OwnershipTransferred(owner, newOwner);\r\n    ^-----------------------------------^\n/unique_chucks/20/0xdd19b39e39c88bf36f562df03831014b4edb9e10.sol:79:5: Warning: Invoking events without \"emit\" prefix is deprecated.\n    Pause();\r\n    ^-----^\n/unique_chucks/20/0xdd19b39e39c88bf36f562df03831014b4edb9e10.sol:87:5: Warning: Invoking events without \"emit\" prefix is deprecated.\n    Unpause();\r\n    ^-------^\n/unique_chucks/20/0xdd19b39e39c88bf36f562df03831014b4edb9e10.sol:185:5: Warning: Invoking events without \"emit\" prefix is deprecated.\n    Transfer(msg.sender, _to, _value);\r\n    ^-------------------------------^\n/unique_chucks/20/0xdd19b39e39c88bf36f562df03831014b4edb9e10.sol:241:5: Warning: Invoking events without \"emit\" prefix is deprecated.\n    Transfer(_from, _to, _value);\r\n    ^--------------------------^\n/unique_chucks/20/0xdd19b39e39c88bf36f562df03831014b4edb9e10.sol:257:5: Warning: Invoking events without \"emit\" prefix is deprecated.\n    Approval(msg.sender, _spender, _value);\r\n    ^------------------------------------^\n/unique_chucks/20/0xdd19b39e39c88bf36f562df03831014b4edb9e10.sol:283:5: Warning: Invoking events without \"emit\" prefix is deprecated.\n    Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\r\n    ^-----------------------------------------------------------^\n/unique_chucks/20/0xdd19b39e39c88bf36f562df03831014b4edb9e10.sol:304:5: Warning: Invoking events without \"emit\" prefix is deprecated.\n    Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\r\n    ^-----------------------------------------------------------^\n/unique_chucks/20/0xdd19b39e39c88bf36f562df03831014b4edb9e10.sol:372:5: Warning: Invoking events without \"emit\" prefix is deprecated.\n    Mint(_to, _amount);\r\n    ^----------------^\n/unique_chucks/20/0xdd19b39e39c88bf36f562df03831014b4edb9e10.sol:373:5: Warning: Invoking events without \"emit\" prefix is deprecated.\n    Transfer(address(0), _to, _amount);\r\n    ^--------------------------------^\n/unique_chucks/20/0xdd19b39e39c88bf36f562df03831014b4edb9e10.sol:383:5: Warning: Invoking events without \"emit\" prefix is deprecated.\n    MintFinished();\r\n    ^------------^\n/unique_chucks/20/0xdd19b39e39c88bf36f562df03831014b4edb9e10.sol:613:21: Warning: Result of exponentiation has type uint8 and thus might overflow. Silence this warning by converting the literal to the expected type.\n        return x * (2 ** y);\r\n                    ^----^\n/unique_chucks/20/0xdd19b39e39c88bf36f562df03831014b4edb9e10.sol:1372:50: Warning: \"sha3\" has been deprecated in favour of \"keccak256\"\n        oraclize_randomDS_setCommitment(queryId, sha3(delay_bytes8_left, args[1], sha256(args[0]), args[2]));\r\n                                                 ^--------------------------------------------------------^\n/unique_chucks/20/0xdd19b39e39c88bf36f562df03831014b4edb9e10.sol:1372:50: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n        oraclize_randomDS_setCommitment(queryId, sha3(delay_bytes8_left, args[1], sha256(args[0]), args[2]));\r\n                                                 ^--------------------------------------------------------^\n/unique_chucks/20/0xdd19b39e39c88bf36f562df03831014b4edb9e10.sol:1404:21: Warning: \"sha3\" has been deprecated in favour of \"keccak256\"\n        if (address(sha3(pubkey)) == signer) return true;\r\n                    ^----------^\n/unique_chucks/20/0xdd19b39e39c88bf36f562df03831014b4edb9e10.sol:1407:29: Warning: \"sha3\" has been deprecated in favour of \"keccak256\"\n            return (address(sha3(pubkey)) == signer);\r\n                            ^----------^\n/unique_chucks/20/0xdd19b39e39c88bf36f562df03831014b4edb9e10.sol:1422:22: Warning: Decimal literal assigned to bytesXX variable will be left-aligned. Use an explicit conversion to silence this warning.\n        tosign2[0] = 1; //role\r\n                     ^\n/unique_chucks/20/0xdd19b39e39c88bf36f562df03831014b4edb9e10.sol:1484:15: Warning: \"sha3\" has been deprecated in favour of \"keccak256\"\n        if (!(sha3(keyhash) == sha3(sha256(context_name, queryId)))) return false;\r\n              ^-----------^\n/unique_chucks/20/0xdd19b39e39c88bf36f562df03831014b4edb9e10.sol:1484:37: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n        if (!(sha3(keyhash) == sha3(sha256(context_name, queryId)))) return false;\r\n                                    ^---------------------------^\n/unique_chucks/20/0xdd19b39e39c88bf36f562df03831014b4edb9e10.sol:1484:32: Warning: \"sha3\" has been deprecated in favour of \"keccak256\"\n        if (!(sha3(keyhash) == sha3(sha256(context_name, queryId)))) return false;\r\n                               ^---------------------------------^\n/unique_chucks/20/0xdd19b39e39c88bf36f562df03831014b4edb9e10.sol:1484:32: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n        if (!(sha3(keyhash) == sha3(sha256(context_name, queryId)))) return false;\r\n                               ^---------------------------------^\n/unique_chucks/20/0xdd19b39e39c88bf36f562df03831014b4edb9e10.sol:1484:32: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.\n        if (!(sha3(keyhash) == sha3(sha256(context_name, queryId)))) return false;\r\n                               ^---------------------------------^\n/unique_chucks/20/0xdd19b39e39c88bf36f562df03831014b4edb9e10.sol:1502:48: Warning: \"sha3\" has been deprecated in favour of \"keccak256\"\n        if (oraclize_randomDS_args[queryId] == sha3(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match\r\n                                               ^---------------------------------------^\n/unique_chucks/20/0xdd19b39e39c88bf36f562df03831014b4edb9e10.sol:1502:48: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n        if (oraclize_randomDS_args[queryId] == sha3(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match\r\n                                               ^---------------------------------------^\n/unique_chucks/20/0xdd19b39e39c88bf36f562df03831014b4edb9e10.sol:1776:40: Warning: Using contract member \"balance\" inherited from the address type is deprecated. Convert the contract to \"address\" type to access the member, for example use \"address(contract).balance\" instead.\n        if (oraclize_getPrice(\"URL\") > this.balance) {\r\n                                       ^----------^\n/unique_chucks/20/0xdd19b39e39c88bf36f562df03831014b4edb9e10.sol:1777:13: Warning: Invoking events without \"emit\" prefix is deprecated.\n            newOraclizeQuery(\"Oraclize query was NOT sent, please add some ETH to cover for the query fee\");\r\n            ^---------------------------------------------------------------------------------------------^\n/unique_chucks/20/0xdd19b39e39c88bf36f562df03831014b4edb9e10.sol:1779:13: Warning: Invoking events without \"emit\" prefix is deprecated.\n            newOraclizeQuery(\"Oraclize query was sent, standing by for the answer..\");\r\n            ^-----------------------------------------------------------------------^\n/unique_chucks/20/0xdd19b39e39c88bf36f562df03831014b4edb9e10.sol:1803:9: Warning: Invoking events without \"emit\" prefix is deprecated.\n        TokenPurchase(msg.sender, beneficiary, msg.value, tokens);\r\n        ^-------------------------------------------------------^\n/unique_chucks/20/0xdd19b39e39c88bf36f562df03831014b4edb9e10.sol:1867:25: Warning: Using contract member \"balance\" inherited from the address type is deprecated. Convert the contract to \"address\" type to access the member, for example use \"address(contract).balance\" instead.\n        wallet.transfer(this.balance);\r\n                        ^----------^\n", "issues": []}