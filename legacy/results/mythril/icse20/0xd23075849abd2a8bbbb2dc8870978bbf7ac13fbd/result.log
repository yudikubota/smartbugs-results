{"error": null, "issues": [{"address": 341, "code": "  public\n        constant\n        returns(address[])\n    {\n        return ticketIndex;\n    }\n    \n    function", "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0x8000\ncalldata_UnilotTailEther_0: 0x1865c57d00000000000000000000000000000000000000000000000000000000\ncalldatasize_UnilotTailEther: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/24/0xd23075849abd2a8bbbb2dc8870978bbf7ac13fbd.sol", "function": "getState()", "lineno": 270, "title": "Exception state", "type": "Informational"}, {"address": 567, "code": "uint)\n    {\n        TicketLib.Ticket memory ticket = tickets[player];\n        \n        return (ticket.is_winner, ticket.is_act", "debug": "storage_3: 0x800000000000000000000000000000000000000000000000000000000000000\ncalldata_UnilotTailEther_0: 0x8b5b9ccc00000000000000000000000000000000000000000000000000000000\ncalldatasize_UnilotTailEther: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `getPlayers()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/24/0xd23075849abd2a8bbbb2dc8870978bbf7ac13fbd.sol", "function": "getPlayers()", "lineno": 281, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2162, "code": "nt = bet * ticketIndex.length;\n        }\n   ", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/24/0xd23075849abd2a8bbbb2dc8870978bbf7ac13fbd.sol", "function": "getWinners()", "lineno": 331, "title": "Message call to external contract", "type": "Informational"}, {"address": 2162, "code": "nt = bet * ticketIndex.length;\n        }\n   ", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2634\nCall at address: 2634\n", "filename": "/unique_chucks/24/0xd23075849abd2a8bbbb2dc8870978bbf7ac13fbd.sol", "function": "calcaultePrizes()", "lineno": 331, "title": "Multiple Calls", "type": "Information"}, {"address": 2288, "code": "t.is_winner, ticke", "debug": "storage_3: 0x8421003f084001f4210815cf88407c00000000000000037c1d000e8d178001f\ncalldata_UnilotTailEther_0: 0x8b5b9ccc00000000000000000000000000000000000000000000000000000000\ncalldatasize_UnilotTailEther: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `getPlayers()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/24/0xd23075849abd2a8bbbb2dc8870978bbf7ac13fbd.sol", "function": "getPlayers()", "lineno": 285, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2290, "code": "t.is_winner, ticke", "debug": "storage_3: 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffb\ncalldata_UnilotTailEther_0: 0x8b5b9ccc00000000000000000000000000000000000000000000000000000000\ncalldatasize_UnilotTailEther: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `getPlayers()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/24/0xd23075849abd2a8bbbb2dc8870978bbf7ac13fbd.sol", "function": "getPlayers()", "lineno": 285, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2634, "code": "            tickets[ticketIndex[i]].is_active = false;\n      ", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/24/0xd23075849abd2a8bbbb2dc8870978bbf7ac13fbd.sol", "function": "calcaultePrizes()", "lineno": 373, "title": "Message call to external contract", "type": "Informational"}, {"address": 2914, "code": "    \n    //Private me", "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0x8000\ncaller: 0x80\ncalldata_UnilotTailEther_0: 0xb6549f7500000000000000000000000000000000000000000000000000000000\ncalldatasize_UnilotTailEther: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/24/0xd23075849abd2a8bbbb2dc8870978bbf7ac13fbd.sol", "function": "revoke()", "lineno": 238, "title": "Exception state", "type": "Informational"}, {"address": 3329, "code": "Bet\n        onlyPlaye", "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0x8000\ncalldata_UnilotTailEther_0: 0xc8dd6ce700000000000000000000000000000000000000000000000000000000\ncalldatasize_UnilotTailEther: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/24/0xd23075849abd2a8bbbb2dc8870978bbf7ac13fbd.sol", "function": "getPlayerDetails(address)", "lineno": 245, "title": "Exception state", "type": "Informational"}, {"address": 3713, "code": "    \n    //Private me", "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0x8000\ncaller: 0x80\ncalldata_UnilotTailEther_0: 0xd56b288900000000000000000000000000000000000000000000000000000000\ncalldatasize_UnilotTailEther: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/24/0xd23075849abd2a8bbbb2dc8870978bbf7ac13fbd.sol", "function": "finish()", "lineno": 238, "title": "Exception state", "type": "Informational"}, {"address": 5431, "code": "    function getStat", "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0x8000\ncalldata_UnilotTailEther_0: 0xdf15c37e00000000000000000000000000000000000000000000000000000000\ncalldatasize_UnilotTailEther: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/24/0xd23075849abd2a8bbbb2dc8870978bbf7ac13fbd.sol", "function": "getWinners()", "lineno": 253, "title": "Exception state", "type": "Informational"}, {"address": 6120, "code": "ountWinners) = getNu", "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0x8000\ncalldata_UnilotTailEther_0: 0xecca9c2e00000000000000000000000000000000000000000000000000000000\ncalldatasize_UnilotTailEther: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/24/0xd23075849abd2a8bbbb2dc8870978bbf7ac13fbd.sol", "function": "getPrizeAmount()", "lineno": 344, "title": "Exception state", "type": "Informational"}, {"address": 6288, "code": "tWinners));\n    }\n\n    function calcau", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/24/0xd23075849abd2a8bbbb2dc8870978bbf7ac13fbd.sol", "function": "getPrizeAmount()", "lineno": 345, "title": "Message call to external contract", "type": "Informational"}], "success": true}