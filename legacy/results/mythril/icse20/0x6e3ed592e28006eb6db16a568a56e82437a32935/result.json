{
  "contract": "0x6e3ed592e28006eb6db16a568a56e82437a32935",
  "tool": "mythril",
  "start": 1563534865.9115782,
  "end": 1563534877.8443055,
  "duration": 11.932727336883545,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 2002,
        "code": "alue();",
        "debug": "storage_10: 0x100000000000000000000000000000000000000000000000000\ncalldata_MarchMadness_0: 0x98deeb500000000000000000000000000000000000000000000000000000000\ncalldatasize_MarchMadness: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `startScoring()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/14/0x6e3ed592e28006eb6db16a568a56e82437a32935.sol",
        "function": "startScoring()",
        "lineno": 261,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2219,
        "code": ";\n        return true;\n   ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/14/0x6e3ed592e28006eb6db16a568a56e82437a32935.sol",
        "function": "startScoring()",
        "lineno": 269,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 2407,
        "code": "  var submission = su",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/14/0x6e3ed592e28006eb6db16a568a56e82437a32935.sol",
        "function": "startScoring()",
        "lineno": 274,
        "title": "State change after external call",
        "type": "Warning"
      }
    ],
    "success": true
  }
}