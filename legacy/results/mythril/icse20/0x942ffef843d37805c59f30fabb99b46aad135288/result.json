{
  "contract": "0x942ffef843d37805c59f30fabb99b46aad135288",
  "tool": "mythril",
  "start": 1563551200.3641877,
  "end": 1563551238.8348055,
  "duration": 38.47061777114868,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 281,
        "code": "r further use\n    contributors.pu",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncalldata_PreTgeExperty_0: 0x2e3c9e9b00000000000000000000000000000000000000000000000000000000\ncalldatasize_PreTgeExperty: 0x4\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/11/0x942ffef843d37805c59f30fabb99b46aad135288.sol",
        "function": "fallback",
        "lineno": 65,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 350,
        "code": "\n\n// kovan:   0x72",
        "debug": "storage_0: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xff00\ncalldata_PreTgeExperty_0: 0x1800000000000000000000000000000000000000000000000000000000\ncalldatasize_PreTgeExperty: 0x4\n",
        "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/11/0x942ffef843d37805c59f30fabb99b46aad135288.sol",
        "function": "fallback",
        "lineno": 1,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1791,
        "code": "returns (uint count) {\n    c",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncalldata_PreTgeExperty_0: 0x2f430e1700000000000000000000000000000000000000000000000000000000\ncalldatasize_PreTgeExperty: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/11/0x942ffef843d37805c59f30fabb99b46aad135288.sol",
        "function": "approveTx(uint8)",
        "lineno": 120,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 1832,
        "code": "ive = fals",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_5: 0x0\ncalldata_PreTgeExperty_4: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xff00\ncalldata_PreTgeExperty_0: 0x2f430e1700000000000000000000000000000000000000000000000000000000\ncalldatasize_PreTgeExperty: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/11/0x942ffef843d37805c59f30fabb99b46aad135288.sol",
        "function": "approveTx(uint8)",
        "lineno": 89,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 1914,
        "code": "dx].active = false;\n    txs[txIdx].destA",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_5: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncaller: 0x0\nstorage_0 +\n1546678032441257452667456735582814959992782782816731922691272282333561699760 +\n4*Concat(0, Extract(7, 0, calldata_PreTgeExperty_4)): 0x0\ncalldata_PreTgeExperty_4: 0xfe\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xff00\ncalldata_PreTgeExperty_0: 0x2f430e1700000000000000000000000000000000000000000000000000000000\ncalldatasize_PreTgeExperty: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/11/0x942ffef843d37805c59f30fabb99b46aad135288.sol",
        "function": "approveTx(uint8)",
        "lineno": 89,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 1971,
        "code": "nsfer(txs[txIdx].amount);",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_5: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_3 +\n1546678032441257452667456735582814959992782782816731922691272282333561699760 +\n4*Concat(0, Extract(7, 0, calldata_PreTgeExperty_4)): 0x0\ncaller: 0x0\nstorage_0 +\n1546678032441257452667456735582814959992782782816731922691272282333561699760 +\n4*Concat(0, Extract(7, 0, calldata_PreTgeExperty_4)): 0xffffffffffffffffffffffffffffffffffffffff00\ncalldata_PreTgeExperty_4: 0xfe\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xff00\ncalldata_PreTgeExperty_0: 0x2f430e1700000000000000000000000000000000000000000000000000000000\ncalldatasize_PreTgeExperty: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/11/0x942ffef843d37805c59f30fabb99b46aad135288.sol",
        "function": "approveTx(uint8)",
        "lineno": 90,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2254,
        "code": "public contributors;\n  mapping(ad",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_PreTgeExperty_4: 0x0\nstorage_0: 0x0\ncalldata_PreTgeExperty_0: 0x3cb5d10000000000000000000000000000000000000000000000000000000000\ncalldatasize_PreTgeExperty: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/11/0x942ffef843d37805c59f30fabb99b46aad135288.sol",
        "function": "_function_0x3cb5d100",
        "lineno": 15,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2432,
        "code": "returns (uint count) {\n    c",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncalldata_PreTgeExperty_0: 0x3ce39a3d00000000000000000000000000000000000000000000000000000000\ncalldatasize_PreTgeExperty: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/11/0x942ffef843d37805c59f30fabb99b46aad135288.sol",
        "function": "proposeTx(address,uint256)",
        "lineno": 120,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2523,
        "code": "\n\n// kovan:   0x72",
        "debug": "storage_5: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xff00\ncalldata_PreTgeExperty_0: 0x3ce39a3d00000000000000000000000000000000000000000000000000000000\ncalldatasize_PreTgeExperty: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `proposeTx(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/11/0x942ffef843d37805c59f30fabb99b46aad135288.sol",
        "function": "proposeTx(address,uint256)",
        "lineno": 1,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 3197,
        "code": "nder() {\n    assert(founders[msg.sender]);",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_3: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_PreTgeExperty_0: 0x9b19251a00000000000000000000000000000000000000000000000000000000\ncalldatasize_PreTgeExperty: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/11/0x942ffef843d37805c59f30fabb99b46aad135288.sol",
        "function": "whitelist(address)",
        "lineno": 114,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3376,
        "code": "Manager() {\n    assert(msg.sender",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_2: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_PreTgeExperty_0: 0xb8adaa1100000000000000000000000000000000000000000000000000000000\ncalldatasize_PreTgeExperty: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/11/0x942ffef843d37805c59f30fabb99b46aad135288.sol",
        "function": "reject(uint256)",
        "lineno": 108,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3392,
        "code": "tion cant be reje",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_PreTgeExperty_4: 0x0\nstorage_0: 0x0\nstorage_2: 0x0\ncaller: 0x0\ncalldata_PreTgeExperty_0: 0xb8adaa1100000000000000000000000000000000000000000000000000000000\ncalldatasize_PreTgeExperty: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/11/0x942ffef843d37805c59f30fabb99b46aad135288.sol",
        "function": "reject(uint256)",
        "lineno": 47,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3474,
        "code": "ontribution cant be rejected\n    as",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_PreTgeExperty_4: 0x0\nstorage_0 +\n18569430475105882587588266137607568536673111973893317399460219858819262702947 +\n4*calldata_PreTgeExperty_4: 0x0\nstorage_0: 0x1\nstorage_2: 0x0\ncaller: 0x0\ncalldata_PreTgeExperty_0: 0xb8adaa1100000000000000000000000000000000000000000000000000000000\ncalldatasize_PreTgeExperty: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/11/0x942ffef843d37805c59f30fabb99b46aad135288.sol",
        "function": "reject(uint256)",
        "lineno": 47,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3529,
        "code": "-whitelist address\n    isWhiteliste",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_PreTgeExperty_4: 0x0\nstorage_3 +\n18569430475105882587588266137607568536673111973893317399460219858819262702947 +\n4*calldata_PreTgeExperty_4: 0xff00\nstorage_0 +\n18569430475105882587588266137607568536673111973893317399460219858819262702947 +\n4*calldata_PreTgeExperty_4: 0xffffffffffffffffffffffffffffffffffffffff00\nstorage_0: 0x1\nstorage_2: 0x0\ncaller: 0x0\ncalldata_PreTgeExperty_0: 0xb8adaa1100000000000000000000000000000000000000000000000000000000\ncalldatasize_PreTgeExperty: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/11/0x942ffef843d37805c59f30fabb99b46aad135288.sol",
        "function": "reject(uint256)",
        "lineno": 50,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3882,
        "code": ");\n  }\n\n  // contribute function\n  function() public paya",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function reject(uint256). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/11/0x942ffef843d37805c59f30fabb99b46aad135288.sol",
        "function": "reject(uint256)",
        "lineno": 57,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 4148,
        "code": "se;\n  }\n\n ",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_5: 0x0\ncalldata_PreTgeExperty_4: 0x0\ncalldata_PreTgeExperty_0: 0xe5bb9fb900000000000000000000000000000000000000000000000000000000\ncalldatasize_PreTgeExperty: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/11/0x942ffef843d37805c59f30fabb99b46aad135288.sol",
        "function": "cancelTx(uint8)",
        "lineno": 98,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 4229,
        "code": "e = false;\n  }\n\n  // isManager modifier\n",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_5: 0xfffffdffffffffffffffffffffffffffffffffffff7fffffffffffffffffffff\ncaller: 0x0\nstorage_0 +\n1546678032441257452667456735582814959992782782816731922691272282333561699760 +\n4*Concat(0, Extract(7, 0, calldata_PreTgeExperty_4)): 0xffffffffffffffffffffffffffffffffffffffff00\ncalldata_PreTgeExperty_4: 0xfe\ncalldata_PreTgeExperty_0: 0xe5bb9fb900000000000000000000000000000000000000000000000000000000\ncalldatasize_PreTgeExperty: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/11/0x942ffef843d37805c59f30fabb99b46aad135288.sol",
        "function": "cancelTx(uint8)",
        "lineno": 98,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 4286,
        "code": "ier isManager() {\n    ass",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_5: 0xfffffffbffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_3 +\n1546678032441257452667456735582814959992782782816731922691272282333561699760 +\n4*Concat(0, Extract(7, 0, calldata_PreTgeExperty_4)): 0x0\ncaller: 0x0\nstorage_0 +\n1546678032441257452667456735582814959992782782816731922691272282333561699760 +\n4*Concat(0, Extract(7, 0, calldata_PreTgeExperty_4)): 0x0\ncalldata_PreTgeExperty_4: 0xfe\ncalldata_PreTgeExperty_0: 0xe5bb9fb900000000000000000000000000000000000000000000000000000000\ncalldatasize_PreTgeExperty: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/11/0x942ffef843d37805c59f30fabb99b46aad135288.sol",
        "function": "cancelTx(uint8)",
        "lineno": 102,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 4364,
        "code": "GE constructor\n",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_PreTgeExperty_4: 0x0\nstorage_5: 0x0\ncalldata_PreTgeExperty_0: 0xf5715d5600000000000000000000000000000000000000000000000000000000\ncalldatasize_PreTgeExperty: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/11/0x942ffef843d37805c59f30fabb99b46aad135288.sol",
        "function": "_function_0xf5715d56",
        "lineno": 30,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}