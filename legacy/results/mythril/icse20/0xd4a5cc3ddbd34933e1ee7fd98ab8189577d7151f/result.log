{"error": null, "issues": [{"address": 1337, "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/24/0xd4a5cc3ddbd34933e1ee7fd98ab8189577d7151f.sol", "function": "killVesting()", "lineno": 250, "title": "Message call to external contract", "type": "Informational"}, {"address": 1402, "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/24/0xd4a5cc3ddbd34933e1ee7fd98ab8189577d7151f.sol", "function": "killVesting()", "lineno": 250, "title": "State change after external call", "type": "Warning"}, {"address": 3389, "code": " Function that allows the contract ow", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/24/0xd4a5cc3ddbd34933e1ee7fd98ab8189577d7151f.sol", "function": "fundVesting(uint256)", "lineno": 210, "title": "Message call to external contract", "type": "Informational"}, {"address": 3389, "code": " Function that allows the contract ow", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3751\n", "filename": "/unique_chucks/24/0xd4a5cc3ddbd34933e1ee7fd98ab8189577d7151f.sol", "function": "fundVesting(uint256)", "lineno": 210, "title": "Multiple Calls", "type": "Information"}, {"address": 3463, "code": "eiver\n  *@param newReceive", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/24/0xd4a5cc3ddbd34933e1ee7fd98ab8189577d7151f.sol", "function": "fundVesting(uint256)", "lineno": 210, "title": "State change after external call", "type": "Warning"}, {"address": 3751, "code": "ew receiver address\n  */\n  function changeReceiver(ad", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/24/0xd4a5cc3ddbd34933e1ee7fd98ab8189577d7151f.sol", "function": "fundVesting(uint256)", "lineno": 211, "title": "Message call to external contract", "type": "Informational"}, {"address": 4125, "code": " internal pure r", "debug": "The exception is triggered under the following conditions:\n\nstorage_7: 0x0\nstorage_8: 0x1\nstorage_0: 0x0\ncaller: 0x0\ncalldata_TokenVesting_0: 0xa0a287600000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenVesting: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/24/0xd4a5cc3ddbd34933e1ee7fd98ab8189577d7151f.sol", "function": "killVesting()", "lineno": 147, "title": "Exception state", "type": "Informational"}, {"address": 4155, "code": "blic token;\n  a", "debug": "The exception is triggered under the following conditions:\n\nstorage_3: 0x1\nstorage_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_2: 0x0\ncaller: 0x0\nstorage_7: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_TokenVesting_0: 0x48c54b9d00000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenVesting: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/24/0xd4a5cc3ddbd34933e1ee7fd98ab8189577d7151f.sol", "function": "claimTokens()", "lineno": 159, "title": "Exception state", "type": "Informational"}, {"address": 4177, "code": " sub(ui", "debug": "The exception is triggered under the following conditions:\n\ntimestamp: 0xffffffffffffffffffffffffffffffff0000000000000000000000000fffffff\nstorage_3: 0xbffffffffffffffffffffffff0000000\nstorage_4: 0x0\nstorage_2: 0x0\ncaller: 0x0\nstorage_7: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_TokenVesting_0: 0x48c54b9d00000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenVesting: 0x4\nstorage_6: 0x0\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/24/0xd4a5cc3ddbd34933e1ee7fd98ab8189577d7151f.sol", "function": "claimTokens()", "lineno": 139, "title": "Exception state", "type": "Informational"}], "success": true}