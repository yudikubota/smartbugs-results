{"error": null, "issues": [{"address": 1490, "code": "\n    }\n\n    fu", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/17/0xb70010ea4aa80292bbc49a2c8fac361d3c7f32df.sol", "function": "setOwner(address)", "lineno": 45, "title": "State change after external call", "type": "Warning"}, {"address": 1895, "code": "origin,\n        address indexe", "debug": "The exception is triggered under the following conditions:\n\ncalldata_WETHInterface_4: 0x0\ncaller: 0x0\ncalldata_WETHInterface_0: 0x3287d0f600000000000000000000000000000000000000000000000000000000\ncalldatasize_WETHInterface: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/17/0xb70010ea4aa80292bbc49a2c8fac361d3c7f32df.sol", "function": "switchReserve(address)", "lineno": 426, "title": "Exception state", "type": "Informational"}, {"address": 2829, "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/17/0xb70010ea4aa80292bbc49a2c8fac361d3c7f32df.sol", "function": "_function_0x69328dec", "lineno": 468, "title": "Message call to external contract", "type": "Warning"}, {"address": 3667, "code": "rade(ERC20 base, ERC20 quote, ", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/17/0xb70010ea4aa80292bbc49a2c8fac361d3c7f32df.sol", "function": "_function_0xda3e3397", "lineno": 434, "title": "Message call to external contract", "type": "Warning"}, {"address": 5351, "code": "ress_, bool whitelisted) public ", "debug": "The exception is triggered under the following conditions:\n\ncalldata_WETHInterface_4: 0x0\ncaller: 0x0\ncalldata_WETHInterface_0: 0xffda648000000000000000000000000000000000000000000000000000000000\ncalldatasize_WETHInterface: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/17/0xb70010ea4aa80292bbc49a2c8fac361d3c7f32df.sol", "function": "_function_0xffda6480", "lineno": 421, "title": "Exception state", "type": "Informational"}, {"address": 5988, "code": "htpool-contracts/src/interfaces/E", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/17/0xb70010ea4aa80292bbc49a2c8fac361d3c7f32df.sol", "function": "_function_0xffda6480", "lineno": 74, "title": "Message call to external contract", "type": "Informational"}, {"address": 5988, "code": "htpool-contracts/src/interfaces/E", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2829\nCall at address: 2635\n", "filename": "/unique_chucks/17/0xb70010ea4aa80292bbc49a2c8fac361d3c7f32df.sol", "function": "_function_0x69328dec", "lineno": 74, "title": "Multiple Calls", "type": "Information"}, {"address": 5988, "code": "htpool-contracts/src/interfaces/E", "debug": "", "description": "A possible transaction order independence vulnerability exists in function _function_0xffda6480. The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/17/0xb70010ea4aa80292bbc49a2c8fac361d3c7f32df.sol", "function": "_function_0xffda6480", "lineno": 74, "title": "Transaction order dependence", "type": "Warning"}], "success": true}