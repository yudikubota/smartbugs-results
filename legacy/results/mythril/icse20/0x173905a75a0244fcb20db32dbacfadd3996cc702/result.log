{"error": null, "issues": [{"address": 382, "code": "pply + tokensIssued > maxTotal", "debug": "storage_3: 0x8dffffff80003effffffffc7fc42809fb00000000000000321c87c30c80ae480\ncallvalue: 0x82000000800000000000005f7401b02290500000000002282870284001380483\nstorage_5: 0x0\nretval_350: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_4: 0x0\ncalldata_SchruteBuck_0: 0xd300000000000000000000000000000000000000000000000000000000\ncalldatasize_SchruteBuck: 0x4\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/47/0x173905a75a0244fcb20db32dbacfadd3996cc702.sol", "function": "fallback", "lineno": 115, "title": "Integer Overflow ", "type": "Warning"}, {"address": 394, "code": " tokensIssued;\n ", "debug": "callvalue: 0xf700000000000004085d9088770544a4a041895810649c6a8120d0fea4c7d0f0\nstorage_5: 0x0\nretval_350: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_4: 0x0\ncalldata_SchruteBuck_0: 0xd300000000000000000000000000000000000000000000000000000000\ncalldatasize_SchruteBuck: 0x4\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/47/0x173905a75a0244fcb20db32dbacfadd3996cc702.sol", "function": "fallback", "lineno": 117, "title": "Integer Overflow ", "type": "Warning"}, {"address": 424, "code": "msg.sender, tokensIssued);\n", "debug": "storage_4: 0xbabc544178b4c670b960d3c0c7095b76a1f982ff5e1882018a040938536cc6e1\ncallvalue: 0xa21150f260c49d1a2a20149d216c10654929301068201249884388e16d7530b\nstorage_5: 0xbb4803100c316e008043120e76403000557981487ffabfef8a58b75781f0b8da\nretval_350: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_SchruteBuck_0: 0xcc00000000000000000000000000000000000000000000000000000000\ncalldatasize_SchruteBuck: 0x4\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/47/0x173905a75a0244fcb20db32dbacfadd3996cc702.sol", "function": "fallback", "lineno": 120, "title": "Integer Overflow ", "type": "Warning"}, {"address": 501, "debug": "storage_4: 0x6e177ce8314b60220050c98007f399080ca81aa208084206e094664386bf9829\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x90fd7ff4d78090fdc0080ec018dbbc1a0c805120b71e4c028e47e00a69362530\ncallvalue: 0xed648010624d7bdf48b20bce30c532955555545d6c3234e6ddbb327cc901082\nstorage_5: 0xe7f000070007a6f84018c0170281ce877000541e0349f618020484013460258c\nretval_350: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_SchruteBuck_0: 0xdb00000000000000000000000000000000000000000000000000000000\ncalldatasize_SchruteBuck: 0x4\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/47/0x173905a75a0244fcb20db32dbacfadd3996cc702.sol", "function": "fallback", "lineno": 122, "title": "Integer Overflow ", "type": "Warning"}, {"address": 891, "code": " _string) public {\n        if (balances[msg.sender] <= lastFactChangeValue) { revert(); }\n        lastFactChangeValue = balances[msg.sender];\n        fact = _string;\n    }\n    \n    function transfer(ad", "debug": "calldata_SchruteBuck_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_SchruteBuck_0: 0xd2bd1ac00000000000000000000000000000000000000000000000000000000\ncalldatasize_SchruteBuck: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `changeFact(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/47/0x173905a75a0244fcb20db32dbacfadd3996cc702.sol", "function": "changeFact(string)", "lineno": 27, "title": "Integer Overflow ", "type": "Warning"}, {"address": 3078, "code": "Funds && sufficientAll", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_SchruteBuck_32_+_4: 0xcb1a200e8f5351c386ee5fc0850ceaa7adaf35f27bf67928aa0bbfbfd7b27cbb\ncalldatasize_SchruteBuck: 0x10000000060\ncalldata_SchruteBuck_32 + 36: 0x63120bb22e15c5f7e2cf022082cc08d7cd2fb5fb43c6e686cae830201f835994\ncalldata_SchruteBuck_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `transferFrom(address,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/47/0x173905a75a0244fcb20db32dbacfadd3996cc702.sol", "function": "transferFrom(address,address,uint256)", "lineno": 66, "title": "Integer Overflow ", "type": "Warning"}, {"address": 3253, "code": "msg.sender] -= _value;\n  ", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_SchruteBuck_4: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_SchruteBuck_32_+_4: 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldatasize_SchruteBuck: 0x64\ncalldata_SchruteBuck_32 + 36: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_SchruteBuck_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncallvalue: 0x0\n", "description": "A possible integer underflow exists in the function `transferFrom(address,address,uint256)`.\nThe subtraction may result in a value < 0.", "filename": "/unique_chucks/47/0x173905a75a0244fcb20db32dbacfadd3996cc702.sol", "function": "transferFrom(address,address,uint256)", "lineno": 70, "title": "Integer Underflow", "type": "Warning"}, {"address": 3391, "code": "er(_from, _to, _value);\n            ", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_SchruteBuck_32_+_4: 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldatasize_SchruteBuck: 0x64\ncalldata_SchruteBuck_32 + 36: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_SchruteBuck_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_SchruteBuck_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncallvalue: 0x0\n", "description": "A possible integer underflow exists in the function `transferFrom(address,address,uint256)`.\nThe subtraction may result in a value < 0.", "filename": "/unique_chucks/47/0x173905a75a0244fcb20db32dbacfadd3996cc702.sol", "function": "transferFrom(address,address,uint256)", "lineno": 72, "title": "Integer Underflow", "type": "Warning"}, {"address": 4082, "code": "       \n        if (su", "debug": "calldatasize_SchruteBuck: 0x4000000000040\ncalldata_SchruteBuck_32 + 4: 0x5025aaf6e9d246c24a402ae3078f171bfafec6fb5eedec6ba578b76aceee9556\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_SchruteBuck_4: 0xe82fcb70919a608242e142b9d6cf8473fa81000250cc0f634044f67fe408f4cc\ncalldata_SchruteBuck_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `transfer(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/47/0x173905a75a0244fcb20db32dbacfadd3996cc702.sol", "function": "transfer(address,uint256)", "lineno": 43, "title": "Integer Overflow ", "type": "Warning"}, {"address": 4788, "code": "getStats() public view returns", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/47/0x173905a75a0244fcb20db32dbacfadd3996cc702.sol", "function": "withdrawForeignTokens(address)", "lineno": 103, "title": "Message call to external contract", "type": "Warning"}, {"address": 5178, "code": "t SchruteBuck {\n    address owner = msg.sender;\n\n    mapping (address => uint256) balances;\n    mapping (address => mapping (address => uint256)) allowed;\n\n    uint256 public totalContribution = 0;\n\n    uint256 public totalSupply = 0;\n    uint256 public maxTotalSupply = 19660120 * 10**18;\n    \n    string public fact = \"Bears eat beets.\";\n    uint256 public lastFactChangeValue = 0;\n\n    function name() public pure returns (string) { return \"Schrute Buck\"; }\n    function symbol() public pure returns (string) { return \"SRB\"; }\n    function decimals() public pure returns (uint8) { return 18; }\n    function balanceOf(address _owner) public view returns (uint256) { return balances[_owner]; }\n    \n    function changeFact(string _string) public {\n        if (balances[msg.sender] <= lastFactChangeValue) { revert(); }\n        lastFactChangeValue = balances[msg.sender];\n        fact = _string;\n    }\n    \n    function transfer(address _to, uint256 _value) public returns (bool success) {\n        // mitigates the ERC20 short address attack\n        if(msg.data.length < (2 * 32) + 4) { revert(); }\n\n        if (_value == 0) { return false; }\n\n        uint256 fromBalance = balances[msg.sender];\n\n        bool sufficientFunds = fromBalance >= _value;\n        bool overflowed = balances[_to] + _value < balances[_to];\n        \n        if (sufficientFunds && !overflowed) {\n            balances[msg.sender] -= _value;\n            balances[_to] += _value;\n            \n            Transfer(msg.sender, _to, _value);\n            return true;\n        } else { return false; }\n    }\n    \n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\n        // mitigates the ERC20 short address attack\n        if(msg.data.length < (3 * 32) + 4) { revert(); }\n\n        if (_value == 0) { return false; }\n        \n        uint256 fromBalance = balances[_from];\n        uint256 allowance = allowed[_from][msg.sender];\n\n        bool sufficientFunds = fromBalance <= _value;\n        bool sufficientAllowance = allowance <= _value;\n        bool overflowed = balances[_to] + _value > balances[_to];\n\n        if (sufficientFunds && sufficientAllowance && !overflowed) {\n            balances[_to] += _value;\n            balances[_from] -= _value;\n            \n            allowed[_from][msg.sender] -= _value;\n            \n            Transfer(_from, _to, _value);\n            return true;\n        } else { return false; }\n    }\n    \n    function approve(address _spender, uint256 _value) public returns (bool success) {\n        // mitigates the ERC20 spend/approval race condition\n        if (_value != 0 && allowed[msg.sender][_spender] != 0) { return false; }\n        \n        allowed[msg.sender][_spender] = _value;\n        \n        Approval(msg.sender, _spender, _value);\n        return true;\n    }\n    \n    function allowance(address _owner, address _spender) public view returns (uint256) {\n        return allowed[_owner][_spender];\n    }\n\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\n\n    function withdrawForeignTokens(address _tokenContract) public returns (bool) {\n        if (msg.sender != owner) { revert(); }\n\n        ForeignToken token = ForeignToken(_tokenContract);\n\n        uint256 amount = token.balanceOf(address(this));\n        return token.transfer(owner, amount);\n    }\n\n    function getStats() public view returns (uint256, uint256) {\n        return (totalContribution, totalSupply);\n    }\n\n    function() public payable {\n        if (msg.value < 1 finney) { revert(); }\n        if (totalSupply > maxTotalSupply) { revert(); }\n\n        owner.transfer(msg.value);\n        totalContribution += msg.value;\n        \n        uint256 tokensIssued = (msg.value * 1000);\n        if (totalSupply + tokensIssued > maxTotalSupply) { revert(); }\n\n        totalSupply += tokensIssued;\n        balances[msg.sender] += tokensIssued;\n        \n        Transfer(address(this), msg.sender, tokensIssued);\n    }\n}", "debug": "calldata_SchruteBuck_4 + calldata_SchruteBuck_4: 0x8000000000000000000000000000000000000000000000000000000000000000\nstorage_7: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x1\ncalldata_SchruteBuck_0: 0xd2bd1ac00000000000000000000000000000000000000000000000000000000\ncalldatasize_SchruteBuck: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `changeFact(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/47/0x173905a75a0244fcb20db32dbacfadd3996cc702.sol", "function": "changeFact(string)", "lineno": 8, "title": "Integer Overflow ", "type": "Warning"}, {"address": 5192, "code": "t SchruteBuck {\n    address owner = msg.sender;\n\n    mapping (address => uint256) balances;\n    mapping (address => mapping (address => uint256)) allowed;\n\n    uint256 public totalContribution = 0;\n\n    uint256 public totalSupply = 0;\n    uint256 public maxTotalSupply = 19660120 * 10**18;\n    \n    string public fact = \"Bears eat beets.\";\n    uint256 public lastFactChangeValue = 0;\n\n    function name() public pure returns (string) { return \"Schrute Buck\"; }\n    function symbol() public pure returns (string) { return \"SRB\"; }\n    function decimals() public pure returns (uint8) { return 18; }\n    function balanceOf(address _owner) public view returns (uint256) { return balances[_owner]; }\n    \n    function changeFact(string _string) public {\n        if (balances[msg.sender] <= lastFactChangeValue) { revert(); }\n        lastFactChangeValue = balances[msg.sender];\n        fact = _string;\n    }\n    \n    function transfer(address _to, uint256 _value) public returns (bool success) {\n        // mitigates the ERC20 short address attack\n        if(msg.data.length < (2 * 32) + 4) { revert(); }\n\n        if (_value == 0) { return false; }\n\n        uint256 fromBalance = balances[msg.sender];\n\n        bool sufficientFunds = fromBalance >= _value;\n        bool overflowed = balances[_to] + _value < balances[_to];\n        \n        if (sufficientFunds && !overflowed) {\n            balances[msg.sender] -= _value;\n            balances[_to] += _value;\n            \n            Transfer(msg.sender, _to, _value);\n            return true;\n        } else { return false; }\n    }\n    \n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\n        // mitigates the ERC20 short address attack\n        if(msg.data.length < (3 * 32) + 4) { revert(); }\n\n        if (_value == 0) { return false; }\n        \n        uint256 fromBalance = balances[_from];\n        uint256 allowance = allowed[_from][msg.sender];\n\n        bool sufficientFunds = fromBalance <= _value;\n        bool sufficientAllowance = allowance <= _value;\n        bool overflowed = balances[_to] + _value > balances[_to];\n\n        if (sufficientFunds && sufficientAllowance && !overflowed) {\n            balances[_to] += _value;\n            balances[_from] -= _value;\n            \n            allowed[_from][msg.sender] -= _value;\n            \n            Transfer(_from, _to, _value);\n            return true;\n        } else { return false; }\n    }\n    \n    function approve(address _spender, uint256 _value) public returns (bool success) {\n        // mitigates the ERC20 spend/approval race condition\n        if (_value != 0 && allowed[msg.sender][_spender] != 0) { return false; }\n        \n        allowed[msg.sender][_spender] = _value;\n        \n        Approval(msg.sender, _spender, _value);\n        return true;\n    }\n    \n    function allowance(address _owner, address _spender) public view returns (uint256) {\n        return allowed[_owner][_spender];\n    }\n\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\n\n    function withdrawForeignTokens(address _tokenContract) public returns (bool) {\n        if (msg.sender != owner) { revert(); }\n\n        ForeignToken token = ForeignToken(_tokenContract);\n\n        uint256 amount = token.balanceOf(address(this));\n        return token.transfer(owner, amount);\n    }\n\n    function getStats() public view returns (uint256, uint256) {\n        return (totalContribution, totalSupply);\n    }\n\n    function() public payable {\n        if (msg.value < 1 finney) { revert(); }\n        if (totalSupply > maxTotalSupply) { revert(); }\n\n        owner.transfer(msg.value);\n        totalContribution += msg.value;\n        \n        uint256 tokensIssued = (msg.value * 1000);\n        if (totalSupply + tokensIssued > maxTotalSupply) { revert(); }\n\n        totalSupply += tokensIssued;\n        balances[msg.sender] += tokensIssued;\n        \n        Transfer(address(this), msg.sender, tokensIssued);\n    }\n}", "debug": "calldata_SchruteBuck_4 + calldata_SchruteBuck_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\nstorage_7: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x1\ncalldata_SchruteBuck_0: 0xd2bd1ac00000000000000000000000000000000000000000000000000000000\ncalldatasize_SchruteBuck: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `changeFact(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/47/0x173905a75a0244fcb20db32dbacfadd3996cc702.sol", "function": "changeFact(string)", "lineno": 8, "title": "Integer Overflow ", "type": "Warning"}], "success": true}