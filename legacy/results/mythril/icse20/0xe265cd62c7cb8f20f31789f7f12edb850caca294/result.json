{
  "contract": "0xe265cd62c7cb8f20f31789f7f12edb850caca294",
  "tool": "mythril",
  "start": 1563589192.4232705,
  "end": 1563589215.0821536,
  "duration": 22.658883094787598,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 193,
        "code": "        require(tokens.length <= 100, \"tokens.length too long\");\n        address _token;\n        uint256 balance;\n        ERC20Token token;\n        for(uint256 i; i<tokens.length; i++){\n            _token = tokens[i];\n            if (_token == 0x0) {\n                balance = address(this).balance;\n                if(balance > 0){\n                    msg.sender.transfer(balance);\n                }\n            }else{\n                token = ERC20Token(_token);\n                balance = token.balanceOf(address(this));\n                token.transfer(msg.sender, balance);\n                emit ClaimedTokens(_token, msg.sender, balance);\n            }\n        }\n    }\n}\n\ncontract TokenController {\n    function proxyPayment(address _owner) payable p",
        "debug": "calldata_TokenI_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_TokenI_0: 0xeef72a3c00000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenI: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `claimTokens(address[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/21/0xe265cd62c7cb8f20f31789f7f12edb850caca294.sol",
        "function": "claimTokens(address[])",
        "lineno": 65,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 875,
        "code": "          token = ERC20Token",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 875\n",
        "filename": "/unique_chucks/21/0xe265cd62c7cb8f20f31789f7f12edb850caca294.sol",
        "function": "claimTokens(address[])",
        "lineno": 77,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 1065,
        "code": "lance);\n                emit C",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/21/0xe265cd62c7cb8f20f31789f7f12edb850caca294.sol",
        "function": "claimTokens(address[])",
        "lineno": 79,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 1065,
        "code": "lance);\n                emit C",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 875\nCall at address: 1289\n",
        "filename": "/unique_chucks/21/0xe265cd62c7cb8f20f31789f7f12edb850caca294.sol",
        "function": "claimTokens(address[])",
        "lineno": 79,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 1289,
        "code": ", msg.sender, balance);\n           ",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/21/0xe265cd62c7cb8f20f31789f7f12edb850caca294.sol",
        "function": "claimTokens(address[])",
        "lineno": 80,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 1289,
        "code": ", msg.sender, balance);\n           ",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 875\n",
        "filename": "/unique_chucks/21/0xe265cd62c7cb8f20f31789f7f12edb850caca294.sol",
        "function": "claimTokens(address[])",
        "lineno": 80,
        "title": "Multiple Calls",
        "type": "Information"
      }
    ],
    "success": true
  }
}