{
  "contract": "0xbcf2fba87b929b801c5209aff1eaf9bd28493461",
  "tool": "mythril",
  "start": 1563750707.2583475,
  "end": 1563750726.981696,
  "duration": 19.723348379135132,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 3104,
        "code": "emit FrozenFunds(_target, freez",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/42/0xbcf2fba87b929b801c5209aff1eaf9bd28493461.sol",
        "function": "refundTokens(address,address,uint256)",
        "lineno": 371,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 5264,
        "code": " }\n\n  function",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_4: 0x8000000000000000000000000000000000000000000000000000000000000000\ncalldata_Vancoin_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_2: 0x0\ncaller: 0x0\ncalldata_Vancoin_0: 0x7e1f2bb800000000000000000000000000000000000000000000000000000000\ncalldatasize_Vancoin: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/42/0xbcf2fba87b929b801c5209aff1eaf9bd28493461.sol",
        "function": "createTokens(uint256)",
        "lineno": 38,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 5282,
        "code": "\n  }\n",
        "debug": "storage_4: 0x180000000000\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffff13fdef7bd5d\ncalldata_Vancoin_4: 0x1b3fd2cc2021\nstorage_2: 0x0\ncaller: 0x0\ncalldata_Vancoin_0: 0x7e1f2bb800000000000000000000000000000000000000000000000000000000\ncalldatasize_Vancoin: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `createTokens(uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/42/0xbcf2fba87b929b801c5209aff1eaf9bd28493461.sol",
        "function": "createTokens(uint256)",
        "lineno": 43,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 5295,
        "code": "**\n * ERC-20 s",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_4: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffff46a8a98d019\ncalldata_Vancoin_4: 0x3741e1ded7dd\nstorage_2: 0x0\ncaller: 0x0\ncalldata_Vancoin_0: 0x7e1f2bb800000000000000000000000000000000000000000000000000000000\ncalldatasize_Vancoin: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/42/0xbcf2fba87b929b801c5209aff1eaf9bd28493461.sol",
        "function": "createTokens(uint256)",
        "lineno": 50,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}