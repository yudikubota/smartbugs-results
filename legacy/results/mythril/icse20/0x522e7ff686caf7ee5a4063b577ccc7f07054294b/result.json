{
  "contract": "0x522e7ff686caf7ee5a4063b577ccc7f07054294b",
  "tool": "mythril",
  "start": 1563336210.0724268,
  "end": 1563336273.1038587,
  "duration": 63.031431913375854,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 416,
        "code": "expired (i.e. is empty)\n    expirationCheck();\n\n",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_contracts/0x522e7ff686caf7ee5a4063b577ccc7f07054294b.sol",
        "function": "fallback",
        "lineno": 88,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 416,
        "code": "expired (i.e. is empty)\n    expirationCheck();\n\n",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1469\nCall at address: 1469\n",
        "filename": "/unique_contracts/0x522e7ff686caf7ee5a4063b577ccc7f07054294b.sol",
        "function": "fallback",
        "lineno": 88,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 1469,
        "code": "****************************",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_contracts/0x522e7ff686caf7ee5a4063b577ccc7f07054294b.sol",
        "function": "fallback",
        "lineno": 130,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 1878,
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_contracts/0x522e7ff686caf7ee5a4063b577ccc7f07054294b.sol",
        "function": "adminWithdrawMiscTokens(address,uint256)",
        "lineno": 169,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 2745,
        "code": "***********************************\\\n   *",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_contracts/0x522e7ff686caf7ee5a4063b577ccc7f07054294b.sol",
        "function": "adminWithdrawTokens(uint256)",
        "lineno": 156,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 3314,
        "code": "e; \n\n    msg.sender.transfer(redemptionValue);\n\n   ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_contracts/0x522e7ff686caf7ee5a4063b577ccc7f07054294b.sol",
        "function": "redeemTokens(uint256)",
        "lineno": 105,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 3314,
        "code": "e; \n\n    msg.sender.transfer(redemptionValue);\n\n   ",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3445\n",
        "filename": "/unique_contracts/0x522e7ff686caf7ee5a4063b577ccc7f07054294b.sol",
        "function": "redeemTokens(uint256)",
        "lineno": 105,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 3393,
        "code": "emption(msg.sender, a",
        "debug": "The exception is triggered under the following conditions:\n\ntimestamp: 0x0\nreturndatasize: 0x20\nretval_3314: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_3: 0x1\nstorage_4: 0xff00\ncalldata_Token_0: 0xa6e158f800000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\nstorage_2: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0x522e7ff686caf7ee5a4063b577ccc7f07054294b.sol",
        "function": "redeemTokens(uint256)",
        "lineno": 110,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3445,
        "code": "emptionValue);\n  }\n\n  /*************",
        "debug": "",
        "description": "In the function `redeemTokens(uint256)` the following predictable state variables are used to determine Ether recipient:\n- block.timestamp\n",
        "filename": "/unique_contracts/0x522e7ff686caf7ee5a4063b577ccc7f07054294b.sol",
        "function": "redeemTokens(uint256)",
        "lineno": 110,
        "title": "Dependence on predictable environment variable",
        "type": "Warning"
      }
    ],
    "success": true
  }
}