{
  "contract": "0xa1ea6670edf54d0cf557491cc9be249dc25dc20b",
  "tool": "mythril",
  "start": 1563553304.6281226,
  "end": 1563553424.7084024,
  "duration": 120.08027982711792,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 1428,
        "code": "ance != 0);\n    uint256 tokens",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/17/0xa1ea6670edf54d0cf557491cc9be249dc25dc20b.sol",
        "function": "withdraw_bonus()",
        "lineno": 64,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 1428,
        "code": "ance != 0);\n    uint256 tokens",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1931\n",
        "filename": "/unique_chucks/17/0xa1ea6670edf54d0cf557491cc9be249dc25dc20b.sol",
        "function": "withdraw_bonus()",
        "lineno": 64,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 1428,
        "code": "ance != 0);\n    uint256 tokens",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function withdraw_bonus(). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/17/0xa1ea6670edf54d0cf557491cc9be249dc25dc20b.sol",
        "function": "withdraw_bonus()",
        "lineno": 64,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 1579,
        "code": "_eth_value_bonus;\n    contract_eth_value_bonus -= balances_bonus[msg.sender];\n  ",
        "debug": "The exception is triggered under the following conditions:\n\nreturndatasize: 0x20\nretval_1428: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_5: 0xff00\nstorage_2: 0xff00\ncalldata_SECRETSanity_0: 0x107a8df00000000000000000000000000000000000000000000000000000000\ncalldatasize_SECRETSanity: 0x4\nstorage_4: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/17/0xa1ea6670edf54d0cf557491cc9be249dc25dc20b.sol",
        "function": "withdraw_bonus()",
        "lineno": 65,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 1655,
        "code": "ces_bonus[msg.sender] = 0;\n    require(token.transfer(",
        "debug": "storage_4: 0x1000000000000000000\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x1000000000000000001\nreturndatasize: 0x20\nretval_1428: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_5: 0xff00\nstorage_2: 0xff00\ncalldata_SECRETSanity_0: 0x107a8df00000000000000000000000000000000000000000000000000000000\ncalldatasize_SECRETSanity: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer underflow exists in the function `withdraw_bonus()`.\nThe subtraction may result in a value < 0.",
        "filename": "/unique_chucks/17/0xa1ea6670edf54d0cf557491cc9be249dc25dc20b.sol",
        "function": "withdraw_bonus()",
        "lineno": 67,
        "title": "Integer Underflow",
        "type": "Warning"
      },
      {
        "address": 1661,
        "code": "ces_bonus[msg.sender] = 0;\n    require(token.transfer(",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/17/0xa1ea6670edf54d0cf557491cc9be249dc25dc20b.sol",
        "function": "withdraw_bonus()",
        "lineno": 67,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 1730,
        "code": "der, tokens_to_withdraw));\n  }",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/17/0xa1ea6670edf54d0cf557491cc9be249dc25dc20b.sol",
        "function": "withdraw_bonus()",
        "lineno": 68,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 1931,
        "code": " any user to get his eth refunded before the p",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/17/0xa1ea6670edf54d0cf557491cc9be249dc25dc20b.sol",
        "function": "withdraw_bonus()",
        "lineno": 71,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 1931,
        "code": " any user to get his eth refunded before the p",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function withdraw_bonus(). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/17/0xa1ea6670edf54d0cf557491cc9be249dc25dc20b.sol",
        "function": "withdraw_bonus()",
        "lineno": 71,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 2325,
        "code": "lue.\n    contract_eth_va",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2492\n",
        "filename": "/unique_chucks/17/0xa1ea6670edf54d0cf557491cc9be249dc25dc20b.sol",
        "function": "buy_the_tokens()",
        "lineno": 92,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 2325,
        "code": "lue.\n    contract_eth_va",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function buy_the_tokens(). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/17/0xa1ea6670edf54d0cf557491cc9be249dc25dc20b.sol",
        "function": "buy_the_tokens()",
        "lineno": 92,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 2492,
        "code": "r {\n    require(_token != 0x0);\n ",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function buy_the_tokens(). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/17/0xa1ea6670edf54d0cf557491cc9be249dc25dc20b.sol",
        "function": "buy_the_tokens()",
        "lineno": 99,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 2739,
        "code": "llow token withdrawals if ther",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/17/0xa1ea6670edf54d0cf557491cc9be249dc25dc20b.sol",
        "function": "withdraw()",
        "lineno": 45,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 2739,
        "code": "llow token withdrawals if ther",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3239\n",
        "filename": "/unique_chucks/17/0xa1ea6670edf54d0cf557491cc9be249dc25dc20b.sol",
        "function": "withdraw()",
        "lineno": 45,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 2739,
        "code": "llow token withdrawals if ther",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function withdraw(). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/17/0xa1ea6670edf54d0cf557491cc9be249dc25dc20b.sol",
        "function": "withdraw()",
        "lineno": 45,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 2889,
        "code": ") / contract_eth_value;\n    // Update the value of tokens currently ",
        "debug": "The exception is triggered under the following conditions:\n\nreturndatasize: 0x20\nretval_2739: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_2: 0xff00\ncalldata_SECRETSanity_0: 0x3ccfd60b00000000000000000000000000000000000000000000000000000000\ncalldatasize_SECRETSanity: 0x4\nstorage_3: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/17/0xa1ea6670edf54d0cf557491cc9be249dc25dc20b.sol",
        "function": "withdraw()",
        "lineno": 47,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2964,
        "code": "// Update the user's balance prior to send",
        "debug": "storage_3: 0x1\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x2\nreturndatasize: 0x20\nretval_2739: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_2: 0xff00\ncalldata_SECRETSanity_0: 0x3ccfd60b00000000000000000000000000000000000000000000000000000000\ncalldatasize_SECRETSanity: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer underflow exists in the function `withdraw()`.\nThe subtraction may result in a value < 0.",
        "filename": "/unique_chucks/17/0xa1ea6670edf54d0cf557491cc9be249dc25dc20b.sol",
        "function": "withdraw()",
        "lineno": 50,
        "title": "Integer Underflow",
        "type": "Warning"
      },
      {
        "address": 2970,
        "code": "// Update the user's balance prior to send",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/17/0xa1ea6670edf54d0cf557491cc9be249dc25dc20b.sol",
        "function": "withdraw()",
        "lineno": 50,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 3038,
        "code": "Throws on failure to pre",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/17/0xa1ea6670edf54d0cf557491cc9be249dc25dc20b.sol",
        "function": "withdraw()",
        "lineno": 52,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 3239,
        "code": "\n\n  function withdraw_bonus() {\n  /*\n    Speci",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/17/0xa1ea6670edf54d0cf557491cc9be249dc25dc20b.sol",
        "function": "withdraw()",
        "lineno": 54,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 3239,
        "code": "\n\n  function withdraw_bonus() {\n  /*\n    Speci",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function withdraw(). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/17/0xa1ea6670edf54d0cf557491cc9be249dc25dc20b.sol",
        "function": "withdraw()",
        "lineno": 54,
        "title": "Transaction order dependence",
        "type": "Warning"
      }
    ],
    "success": true
  }
}