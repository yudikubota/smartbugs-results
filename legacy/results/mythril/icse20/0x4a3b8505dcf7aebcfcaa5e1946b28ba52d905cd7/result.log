{"error": null, "issues": [{"address": 192, "code": "es32 _titulo, bytes32 _fileHash) onlyOwner external {\n        require(storeByString[_ipfsLink].titulo == 0x0);\n        require(storeByTitle[_titulo].titulo == 0x0);\n        indice += 1;\n        Documento memory _documento = Documento(_ipfsLink, _titulo, now, msg.sender, _fileHash, indice); \n        storeByTitle[_titulo] = _documento;\n        storeByString[_ipfsLink] = _documento;\n        storeById[indice] = _documento;\n        storeByHash[_fileHash] = _documento;\n    }\n    \n    function buscarDocumentoPorQM (string _ipfsLin", "debug": "calldata_docStore_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_docStore_0: 0xe56f52900000000000000000000000000000000000000000000000000000000\ncalldatasize_docStore: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `guardarDocumento(string,bytes32,bytes32)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/24/0x4a3b8505dcf7aebcfcaa5e1946b28ba52d905cd7.sol", "function": "guardarDocumento(string,bytes32,bytes32)", "lineno": 48, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1750, "code": " Documento(", "debug": "storage_1: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_0: 0x0\ncaller: 0x0\ncalldata_docStore_0: 0xe56f52900000000000000000000000000000000000000000000000000000000\ncalldatasize_docStore: 0x4\nstorage_1 +\nkeccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\ncalldata_docStore_32_+_4: 0x0\nstorage_1 + KECCAC_mem_320): 0x0\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `guardarDocumento(string,bytes32,bytes32)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/24/0x4a3b8505dcf7aebcfcaa5e1946b28ba52d905cd7.sol", "function": "guardarDocumento(string,bytes32,bytes32)", "lineno": 52, "title": "Integer Overflow ", "type": "Warning"}, {"address": 4700, "code": "d {\n    \n    uint public indice;\n    \n    mapping(string => Documento) private storeByString;\n    mapping(bytes32 => Documento) private storeByTitle;\n    mapping(uint => Documento) private storeById;\n    mapping(bytes32 => Documento) private storeByHash;\n    \n    struct Documento {\n        string ipfsLink;\n        bytes32 titulo;\n        uint timestamp;\n        address walletAddress;\n        bytes32 fileHash;\n        uint Id;\n    }\n    \n    function docStore() public {\n        indice = 0;\n    }\n    \n    function guardarDocumento(string _ipfsLink, bytes32 _titulo, bytes32 _fileHash) onlyOwner external {\n        require(storeByString[_ipfsLink].titulo == 0x0);\n        require(storeByTitle[_titulo].titulo == 0x0);\n        indice += 1;\n        Documento memory _documento = Documento(_ipfsLink, _titulo, now, msg.sender, _fileHash, indice); \n        storeByTitle[_titulo] = _documento;\n        storeByString[_ipfsLink] = _documento;\n        storeById[indice] = _documento;\n        storeByHash[_fileHash] = _documento;\n    }\n    \n    function buscarDocumentoPorQM (string _ipfsLink) view external returns (string, bytes32, uint, address, bytes32, uint){\n        Documento memory _documento = storeByString[_ipfsLink];\n        return (_documento.ipfsLink, _documento.titulo, _documento.timestamp, _documento.walletAddress, _documento.fileHash, _documento.Id);\n    }\n    \n    function buscarDocumentoPorTitulo (bytes32 _titulo) view external returns (string, bytes32, uint, address, bytes32, uint){\n        Documento memory _documento = storeByTitle[_titulo];\n        return (_documento.ipfsLink, _documento.titulo, _documento.timestamp, _documento.walletAddress, _documento.fileHash, _documento.Id);\n    }\n    \n    function buscarDocumentoPorId (uint _index) view external returns (string, bytes32, uint, address, bytes32, uint){\n        Documento memory _documento = storeById[_index];\n        return (_documento.ipfsLink, _documento.titulo, _documento.timestamp, _documento.walletAddress, _documento.fileHash, _documento.Id);\n    }\n\n    function buscarDocumentoPorHash (bytes32 _index) view external returns (string, bytes32, uint, address, bytes32, uint){\n        Documento memory _documento = storeByHash[_index];\n        return (_documento.ipfsLink, _documento.titulo, _documento.timestamp, _documento.walletAddress, _documento.fileHash, _documento.Id);\n    }\n    \n}", "debug": "storage_0 +\nkeccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\ncalldata_docStore_32_+_4: 0xbac1c3147749165dd7d1977fffffffffffffffffffffffffffffffffffffffc5\nkeccac_0_+\nkeccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\ncalldata_docStore_32_+_4: 0xff13e6a7459ae5a4c49c419171c3f89100a371508000000000129200000219e2\nstorage_0: 0x0\ncaller: 0x0\ncalldata_docStore_0: 0xe56f52900000000000000000000000000000000000000000000000000000000\ncalldatasize_docStore: 0x4\nstorage_1 +\nkeccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\ncalldata_docStore_32_+_4: 0x0\nstorage_1 + KECCAC_mem_320): 0x0\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `guardarDocumento(string,bytes32,bytes32)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/24/0x4a3b8505dcf7aebcfcaa5e1946b28ba52d905cd7.sol", "function": "guardarDocumento(string,bytes32,bytes32)", "lineno": 26, "title": "Integer Overflow ", "type": "Warning"}, {"address": 4729, "code": "d {\n    \n    uint public indice;\n    \n    mapping(string => Documento) private storeByString;\n    mapping(bytes32 => Documento) private storeByTitle;\n    mapping(uint => Documento) private storeById;\n    mapping(bytes32 => Documento) private storeByHash;\n    \n    struct Documento {\n        string ipfsLink;\n        bytes32 titulo;\n        uint timestamp;\n        address walletAddress;\n        bytes32 fileHash;\n        uint Id;\n    }\n    \n    function docStore() public {\n        indice = 0;\n    }\n    \n    function guardarDocumento(string _ipfsLink, bytes32 _titulo, bytes32 _fileHash) onlyOwner external {\n        require(storeByString[_ipfsLink].titulo == 0x0);\n        require(storeByTitle[_titulo].titulo == 0x0);\n        indice += 1;\n        Documento memory _documento = Documento(_ipfsLink, _titulo, now, msg.sender, _fileHash, indice); \n        storeByTitle[_titulo] = _documento;\n        storeByString[_ipfsLink] = _documento;\n        storeById[indice] = _documento;\n        storeByHash[_fileHash] = _documento;\n    }\n    \n    function buscarDocumentoPorQM (string _ipfsLink) view external returns (string, bytes32, uint, address, bytes32, uint){\n        Documento memory _documento = storeByString[_ipfsLink];\n        return (_documento.ipfsLink, _documento.titulo, _documento.timestamp, _documento.walletAddress, _documento.fileHash, _documento.Id);\n    }\n    \n    function buscarDocumentoPorTitulo (bytes32 _titulo) view external returns (string, bytes32, uint, address, bytes32, uint){\n        Documento memory _documento = storeByTitle[_titulo];\n        return (_documento.ipfsLink, _documento.titulo, _documento.timestamp, _documento.walletAddress, _documento.fileHash, _documento.Id);\n    }\n    \n    function buscarDocumentoPorId (uint _index) view external returns (string, bytes32, uint, address, bytes32, uint){\n        Documento memory _documento = storeById[_index];\n        return (_documento.ipfsLink, _documento.titulo, _documento.timestamp, _documento.walletAddress, _documento.fileHash, _documento.Id);\n    }\n\n    function buscarDocumentoPorHash (bytes32 _index) view external returns (string, bytes32, uint, address, bytes32, uint){\n        Documento memory _documento = storeByHash[_index];\n        return (_documento.ipfsLink, _documento.titulo, _documento.timestamp, _documento.walletAddress, _documento.fileHash, _documento.Id);\n    }\n    \n}", "debug": "calldata_docStore_4 + calldata_docStore_4: 0x8000000000000000000000000000000000000000000000000000000000000000\nstorage_0: 0x0\ncaller: 0x0\ncalldata_docStore_0: 0xe56f52900000000000000000000000000000000000000000000000000000000\ncalldatasize_docStore: 0x4\nstorage_1 +\nkeccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\ncalldata_docStore_32_+_4: 0x0\nstorage_1 + KECCAC_mem_320): 0x0\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `guardarDocumento(string,bytes32,bytes32)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/24/0x4a3b8505dcf7aebcfcaa5e1946b28ba52d905cd7.sol", "function": "guardarDocumento(string,bytes32,bytes32)", "lineno": 26, "title": "Integer Overflow ", "type": "Warning"}, {"address": 4743, "code": "d {\n    \n    uint public indice;\n    \n    mapping(string => Documento) private storeByString;\n    mapping(bytes32 => Documento) private storeByTitle;\n    mapping(uint => Documento) private storeById;\n    mapping(bytes32 => Documento) private storeByHash;\n    \n    struct Documento {\n        string ipfsLink;\n        bytes32 titulo;\n        uint timestamp;\n        address walletAddress;\n        bytes32 fileHash;\n        uint Id;\n    }\n    \n    function docStore() public {\n        indice = 0;\n    }\n    \n    function guardarDocumento(string _ipfsLink, bytes32 _titulo, bytes32 _fileHash) onlyOwner external {\n        require(storeByString[_ipfsLink].titulo == 0x0);\n        require(storeByTitle[_titulo].titulo == 0x0);\n        indice += 1;\n        Documento memory _documento = Documento(_ipfsLink, _titulo, now, msg.sender, _fileHash, indice); \n        storeByTitle[_titulo] = _documento;\n        storeByString[_ipfsLink] = _documento;\n        storeById[indice] = _documento;\n        storeByHash[_fileHash] = _documento;\n    }\n    \n    function buscarDocumentoPorQM (string _ipfsLink) view external returns (string, bytes32, uint, address, bytes32, uint){\n        Documento memory _documento = storeByString[_ipfsLink];\n        return (_documento.ipfsLink, _documento.titulo, _documento.timestamp, _documento.walletAddress, _documento.fileHash, _documento.Id);\n    }\n    \n    function buscarDocumentoPorTitulo (bytes32 _titulo) view external returns (string, bytes32, uint, address, bytes32, uint){\n        Documento memory _documento = storeByTitle[_titulo];\n        return (_documento.ipfsLink, _documento.titulo, _documento.timestamp, _documento.walletAddress, _documento.fileHash, _documento.Id);\n    }\n    \n    function buscarDocumentoPorId (uint _index) view external returns (string, bytes32, uint, address, bytes32, uint){\n        Documento memory _documento = storeById[_index];\n        return (_documento.ipfsLink, _documento.titulo, _documento.timestamp, _documento.walletAddress, _documento.fileHash, _documento.Id);\n    }\n\n    function buscarDocumentoPorHash (bytes32 _index) view external returns (string, bytes32, uint, address, bytes32, uint){\n        Documento memory _documento = storeByHash[_index];\n        return (_documento.ipfsLink, _documento.titulo, _documento.timestamp, _documento.walletAddress, _documento.fileHash, _documento.Id);\n    }\n    \n}", "debug": "calldata_docStore_4 + calldata_docStore_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffde0\nstorage_0: 0x0\ncaller: 0x0\ncalldata_docStore_0: 0xe56f52900000000000000000000000000000000000000000000000000000000\ncalldatasize_docStore: 0x4\nstorage_1 +\nkeccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\ncalldata_docStore_32_+_4: 0x0\nstorage_1 + KECCAC_mem_320): 0x0\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `guardarDocumento(string,bytes32,bytes32)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/24/0x4a3b8505dcf7aebcfcaa5e1946b28ba52d905cd7.sol", "function": "guardarDocumento(string,bytes32,bytes32)", "lineno": 26, "title": "Integer Overflow ", "type": "Warning"}, {"address": 4765, "code": "d {\n    \n    uint public indice;\n    \n    mapping(string => Documento) private storeByString;\n    mapping(bytes32 => Documento) private storeByTitle;\n    mapping(uint => Documento) private storeById;\n    mapping(bytes32 => Documento) private storeByHash;\n    \n    struct Documento {\n        string ipfsLink;\n        bytes32 titulo;\n        uint timestamp;\n        address walletAddress;\n        bytes32 fileHash;\n        uint Id;\n    }\n    \n    function docStore() public {\n        indice = 0;\n    }\n    \n    function guardarDocumento(string _ipfsLink, bytes32 _titulo, bytes32 _fileHash) onlyOwner external {\n        require(storeByString[_ipfsLink].titulo == 0x0);\n        require(storeByTitle[_titulo].titulo == 0x0);\n        indice += 1;\n        Documento memory _documento = Documento(_ipfsLink, _titulo, now, msg.sender, _fileHash, indice); \n        storeByTitle[_titulo] = _documento;\n        storeByString[_ipfsLink] = _documento;\n        storeById[indice] = _documento;\n        storeByHash[_fileHash] = _documento;\n    }\n    \n    function buscarDocumentoPorQM (string _ipfsLink) view external returns (string, bytes32, uint, address, bytes32, uint){\n        Documento memory _documento = storeByString[_ipfsLink];\n        return (_documento.ipfsLink, _documento.titulo, _documento.timestamp, _documento.walletAddress, _documento.fileHash, _documento.Id);\n    }\n    \n    function buscarDocumentoPorTitulo (bytes32 _titulo) view external returns (string, bytes32, uint, address, bytes32, uint){\n        Documento memory _documento = storeByTitle[_titulo];\n        return (_documento.ipfsLink, _documento.titulo, _documento.timestamp, _documento.walletAddress, _documento.fileHash, _documento.Id);\n    }\n    \n    function buscarDocumentoPorId (uint _index) view external returns (string, bytes32, uint, address, bytes32, uint){\n        Documento memory _documento = storeById[_index];\n        return (_documento.ipfsLink, _documento.titulo, _documento.timestamp, _documento.walletAddress, _documento.fileHash, _documento.Id);\n    }\n\n    function buscarDocumentoPorHash (bytes32 _index) view external returns (string, bytes32, uint, address, bytes32, uint){\n        Documento memory _documento = storeByHash[_index];\n        return (_documento.ipfsLink, _documento.titulo, _documento.timestamp, _documento.walletAddress, _documento.fileHash, _documento.Id);\n    }\n    \n}", "debug": "calldata_docStore_4 + calldata_docStore_4: 0x7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe00\nkeccac_0_+\nkeccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\ncalldata_docStore_32_+_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_0: 0x0\ncaller: 0x0\ncalldata_docStore_0: 0xe56f52900000000000000000000000000000000000000000000000000000000\ncalldatasize_docStore: 0x4\nstorage_1 +\nkeccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\ncalldata_docStore_32_+_4: 0x0\nstorage_1 + KECCAC_mem_320): 0x0\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `guardarDocumento(string,bytes32,bytes32)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/24/0x4a3b8505dcf7aebcfcaa5e1946b28ba52d905cd7.sol", "function": "guardarDocumento(string,bytes32,bytes32)", "lineno": 26, "title": "Integer Overflow ", "type": "Warning"}], "success": true}