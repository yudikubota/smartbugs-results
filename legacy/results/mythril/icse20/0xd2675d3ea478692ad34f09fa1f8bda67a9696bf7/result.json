{
  "contract": "0xd2675d3ea478692ad34f09fa1f8bda67a9696bf7",
  "tool": "mythril",
  "start": 1563593349.0677333,
  "end": 1563593405.8630772,
  "duration": 56.79534387588501,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 248,
        "code": "maxs, uint16 _chunkNr)\n    setupOnly\n    adminOnly\n    external {\n        var len = addrs.length;\n        require ( chunkNr++ == _chunkNr);\n        require ( mins.length == len &&  mins.length == len );\n        for(uint16 i=0; i<len; ++i) {\n            var addr = addrs[i];\n            var max  = maxs[i];\n            var min  = mins[i];\n            Limit lim = allowed[addr];\n            //remove old record if exists\n            if (lim.max > 0) {\n                controlSum -= uint160(addr) + lim.min + lim.max;\n                delete allowed[addr];\n            }\n            //insert record if max > 0\n            if (max > 0) {\n                // max > 0 means add a new record into the list.\n                allowed[addr] = Limit({min:min, max:max});\n                controlSum += uint160(addr) + min + max;\n            }\n        }//for\n        recordNum+=len;\n    }\n\n    ///@notice switch off setup mode\n    function start()\n    adminOnly\n    publi",
        "debug": "calldata_SantimentWhiteList_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_SantimentWhiteList_0: 0x472c681f00000000000000000000000000000000000000000000000000000000\ncalldatasize_SantimentWhiteList: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `addPack(address[],uint24[],uint24[],uint16)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/19/0xd2675d3ea478692ad34f09fa1f8bda67a9696bf7.sol",
        "function": "addPack(address[],uint24[],uint24[],uint16)",
        "lineno": 59,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 254,
        "code": "maxs, uint16 _chunkNr)\n    setupOnly\n    adminOnly\n    external {\n        var len = addrs.length;\n        require ( chunkNr++ == _chunkNr);\n        require ( mins.length == len &&  mins.length == len );\n        for(uint16 i=0; i<len; ++i) {\n            var addr = addrs[i];\n            var max  = maxs[i];\n            var min  = mins[i];\n            Limit lim = allowed[addr];\n            //remove old record if exists\n            if (lim.max > 0) {\n                controlSum -= uint160(addr) + lim.min + lim.max;\n                delete allowed[addr];\n            }\n            //insert record if max > 0\n            if (max > 0) {\n                // max > 0 means add a new record into the list.\n                allowed[addr] = Limit({min:min, max:max});\n                controlSum += uint160(addr) + min + max;\n            }\n        }//for\n        recordNum+=len;\n    }\n\n    ///@notice switch off setup mode\n    function start()\n    adminOnly\n    publi",
        "debug": "calldata_SantimentWhiteList_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc\ncalldata_SantimentWhiteList_0: 0x472c681f00000000000000000000000000000000000000000000000000000000\ncalldatasize_SantimentWhiteList: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `addPack(address[],uint24[],uint24[],uint16)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/19/0xd2675d3ea478692ad34f09fa1f8bda67a9696bf7.sol",
        "function": "addPack(address[],uint24[],uint24[],uint16)",
        "lineno": 59,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 272,
        "code": "maxs, uint16 _chunkNr)\n    setupOnly\n    adminOnly\n    external {\n        var len = addrs.length;\n        require ( chunkNr++ == _chunkNr);\n        require ( mins.length == len &&  mins.length == len );\n        for(uint16 i=0; i<len; ++i) {\n            var addr = addrs[i];\n            var max  = maxs[i];\n            var min  = mins[i];\n            Limit lim = allowed[addr];\n            //remove old record if exists\n            if (lim.max > 0) {\n                controlSum -= uint160(addr) + lim.min + lim.max;\n                delete allowed[addr];\n            }\n            //insert record if max > 0\n            if (max > 0) {\n                // max > 0 means add a new record into the list.\n                allowed[addr] = Limit({min:min, max:max});\n                controlSum += uint160(addr) + min + max;\n            }\n        }//for\n        recordNum+=len;\n    }\n\n    ///@notice switch off setup mode\n    function start()\n    adminOnly\n    publi",
        "debug": "calldata_SantimentWhiteList_32 + 4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_SantimentWhiteList_0: 0x472c681f00000000000000000000000000000000000000000000000000000000\ncalldatasize_SantimentWhiteList: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `addPack(address[],uint24[],uint24[],uint16)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/19/0xd2675d3ea478692ad34f09fa1f8bda67a9696bf7.sol",
        "function": "addPack(address[],uint24[],uint24[],uint16)",
        "lineno": 59,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 278,
        "code": "maxs, uint16 _chunkNr)\n    setupOnly\n    adminOnly\n    external {\n        var len = addrs.length;\n        require ( chunkNr++ == _chunkNr);\n        require ( mins.length == len &&  mins.length == len );\n        for(uint16 i=0; i<len; ++i) {\n            var addr = addrs[i];\n            var max  = maxs[i];\n            var min  = mins[i];\n            Limit lim = allowed[addr];\n            //remove old record if exists\n            if (lim.max > 0) {\n                controlSum -= uint160(addr) + lim.min + lim.max;\n                delete allowed[addr];\n            }\n            //insert record if max > 0\n            if (max > 0) {\n                // max > 0 means add a new record into the list.\n                allowed[addr] = Limit({min:min, max:max});\n                controlSum += uint160(addr) + min + max;\n            }\n        }//for\n        recordNum+=len;\n    }\n\n    ///@notice switch off setup mode\n    function start()\n    adminOnly\n    publi",
        "debug": "calldata_SantimentWhiteList_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc\ncalldata_SantimentWhiteList_0: 0x472c681f00000000000000000000000000000000000000000000000000000000\ncalldatasize_SantimentWhiteList: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `addPack(address[],uint24[],uint24[],uint16)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/19/0xd2675d3ea478692ad34f09fa1f8bda67a9696bf7.sol",
        "function": "addPack(address[],uint24[],uint24[],uint16)",
        "lineno": 59,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 296,
        "code": "maxs, uint16 _chunkNr)\n    setupOnly\n    adminOnly\n    external {\n        var len = addrs.length;\n        require ( chunkNr++ == _chunkNr);\n        require ( mins.length == len &&  mins.length == len );\n        for(uint16 i=0; i<len; ++i) {\n            var addr = addrs[i];\n            var max  = maxs[i];\n            var min  = mins[i];\n            Limit lim = allowed[addr];\n            //remove old record if exists\n            if (lim.max > 0) {\n                controlSum -= uint160(addr) + lim.min + lim.max;\n                delete allowed[addr];\n            }\n            //insert record if max > 0\n            if (max > 0) {\n                // max > 0 means add a new record into the list.\n                allowed[addr] = Limit({min:min, max:max});\n                controlSum += uint160(addr) + min + max;\n            }\n        }//for\n        recordNum+=len;\n    }\n\n    ///@notice switch off setup mode\n    function start()\n    adminOnly\n    publi",
        "debug": "calldata_SantimentWhiteList_32 + 36: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_SantimentWhiteList_0: 0x472c681f00000000000000000000000000000000000000000000000000000000\ncalldatasize_SantimentWhiteList: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `addPack(address[],uint24[],uint24[],uint16)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/19/0xd2675d3ea478692ad34f09fa1f8bda67a9696bf7.sol",
        "function": "addPack(address[],uint24[],uint24[],uint16)",
        "lineno": 59,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 302,
        "code": "maxs, uint16 _chunkNr)\n    setupOnly\n    adminOnly\n    external {\n        var len = addrs.length;\n        require ( chunkNr++ == _chunkNr);\n        require ( mins.length == len &&  mins.length == len );\n        for(uint16 i=0; i<len; ++i) {\n            var addr = addrs[i];\n            var max  = maxs[i];\n            var min  = mins[i];\n            Limit lim = allowed[addr];\n            //remove old record if exists\n            if (lim.max > 0) {\n                controlSum -= uint160(addr) + lim.min + lim.max;\n                delete allowed[addr];\n            }\n            //insert record if max > 0\n            if (max > 0) {\n                // max > 0 means add a new record into the list.\n                allowed[addr] = Limit({min:min, max:max});\n                controlSum += uint160(addr) + min + max;\n            }\n        }//for\n        recordNum+=len;\n    }\n\n    ///@notice switch off setup mode\n    function start()\n    adminOnly\n    publi",
        "debug": "calldata_SantimentWhiteList_32 + 36: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc\ncalldata_SantimentWhiteList_0: 0x472c681f00000000000000000000000000000000000000000000000000000000\ncalldatasize_SantimentWhiteList: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `addPack(address[],uint24[],uint24[],uint16)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/19/0xd2675d3ea478692ad34f09fa1f8bda67a9696bf7.sol",
        "function": "addPack(address[],uint24[],uint24[],uint16)",
        "lineno": 59,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1129,
        "code": "ins[i];\n",
        "debug": "calldata_SantimentWhiteList_4 + calldata_SantimentWhiteList_4: 0x800000000000000000000000000000000000000000000000000000\ncalldata_SantimentWhiteList_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffbc\nstorage_4: 0xff00\ncalldata_SantimentWhiteList_0 + 36 + calldata_SantimentWhiteList_32 + 36: 0xffffff\nstorage_0 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_SantimentWhiteList_0_+_36_+_calldata_SantimentWhiteList_4: 0xffffff00\ncalldata_SantimentWhiteList_4 + calldata_SantimentWhiteList_32 + 36: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_SantimentWhiteList_32 + 68: 0x0\nstorage_1: 0x0\ncaller: 0xff\ncalldata_SantimentWhiteList_0: 0x472c681f00000000000000000000000000000000000000000000000000000000\ncalldatasize_SantimentWhiteList: 0x4\ncalldata_SantimentWhiteList_4 + calldata_SantimentWhiteList_32 + 4: 0x800000000000000000000000000000000000000000000000000000\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `addPack(address[],uint24[],uint24[],uint16)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/19/0xd2675d3ea478692ad34f09fa1f8bda67a9696bf7.sol",
        "function": "addPack(address[],uint24[],uint24[],uint16)",
        "lineno": 69,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1171,
        "code": "lowed[a",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_4: 0xff00\ncalldata_SantimentWhiteList_4 + calldata_SantimentWhiteList_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_SantimentWhiteList_32 + 68: 0x0\nstorage_1: 0x0\ncaller: 0xff\ncalldata_SantimentWhiteList_0: 0x472c681f00000000000000000000000000000000000000000000000000000000\ncalldatasize_SantimentWhiteList: 0x4\ncalldata_SantimentWhiteList_4 + calldata_SantimentWhiteList_32 + 36: 0x0\ncalldata_SantimentWhiteList_4 + calldata_SantimentWhiteList_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/19/0xd2675d3ea478692ad34f09fa1f8bda67a9696bf7.sol",
        "function": "addPack(address[],uint24[],uint24[],uint16)",
        "lineno": 70,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 1398,
        "code": "allowed[addr];\n            }\n            //inse",
        "debug": "storage_4: 0xff00\nstorage_3: 0xfffffffffffffffffffffffffffffffffffffffe\ncalldata_SantimentWhiteList_0 + 36 + calldata_SantimentWhiteList_4: 0xfffffffffffffffffffffffffffffffffe000001\nstorage_0 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_SantimentWhiteList_0_+_36_+_calldata_SantimentWhiteList_4: 0xffffff00\ncalldata_SantimentWhiteList_4 + calldata_SantimentWhiteList_32 + 36: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_SantimentWhiteList_4 + calldata_SantimentWhiteList_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_SantimentWhiteList_32 + 68: 0x0\nstorage_1: 0x0\ncaller: 0xff\ncalldata_SantimentWhiteList_0: 0x472c681f00000000000000000000000000000000000000000000000000000000\ncalldatasize_SantimentWhiteList: 0x4\ncalldata_SantimentWhiteList_4 + calldata_SantimentWhiteList_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncallvalue: 0x0\n",
        "description": "A possible integer underflow exists in the function `addPack(address[],uint24[],uint24[],uint16)`.\nThe subtraction may result in a value < 0.",
        "filename": "/unique_chucks/19/0xd2675d3ea478692ad34f09fa1f8bda67a9696bf7.sol",
        "function": "addPack(address[],uint24[],uint24[],uint16)",
        "lineno": 74,
        "title": "Integer Underflow",
        "type": "Warning"
      },
      {
        "address": 1744,
        "code": "ecordNum+=len;\n    }\n\n    ///@notice sw",
        "debug": "storage_3: 0x452f925fffffffffffffffffffffffffff921ab1\nstorage_4: 0xff00\ncalldata_SantimentWhiteList_0 + 36 + calldata_SantimentWhiteList_32 + 4: 0x226ccd\ncalldata_SantimentWhiteList_0 + 36 + calldata_SantimentWhiteList_4: 0xa00f6a01fffffffffffffffffffffffffe000000\ncalldata_SantimentWhiteList_0 + 36 + calldata_SantimentWhiteList_32 + 36: 0x70e600\nstorage_0 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_SantimentWhiteList_0_+_36_+_calldata_SantimentWhiteList_4: 0x10000000\ncalldata_SantimentWhiteList_4 + calldata_SantimentWhiteList_32 + 36: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_SantimentWhiteList_4 + calldata_SantimentWhiteList_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_SantimentWhiteList_32 + 68: 0x0\nstorage_1: 0x0\ncaller: 0xff\ncalldata_SantimentWhiteList_0: 0x472c681f00000000000000000000000000000000000000000000000000000000\ncalldatasize_SantimentWhiteList: 0x4\ncalldata_SantimentWhiteList_4 + calldata_SantimentWhiteList_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `addPack(address[],uint24[],uint24[],uint16)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/19/0xd2675d3ea478692ad34f09fa1f8bda67a9696bf7.sol",
        "function": "addPack(address[],uint24[],uint24[],uint16)",
        "lineno": 83,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1772,
        "code": "   adminOnly\n ",
        "debug": "calldata_SantimentWhiteList_4 + calldata_SantimentWhiteList_4: 0x1\nstorage_2: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_4: 0xff00\ncalldata_SantimentWhiteList_0 + 36 + calldata_SantimentWhiteList_32 + 36: 0xffffff\nstorage_0 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_SantimentWhiteList_0_+_36_+_calldata_SantimentWhiteList_4: 0xffffff00\ncalldata_SantimentWhiteList_4 + calldata_SantimentWhiteList_32 + 36: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_SantimentWhiteList_32 + 68: 0x0\nstorage_1: 0x0\ncaller: 0xff\ncalldata_SantimentWhiteList_0: 0x472c681f00000000000000000000000000000000000000000000000000000000\ncalldatasize_SantimentWhiteList: 0x4\ncalldata_SantimentWhiteList_4 + calldata_SantimentWhiteList_32 + 4: 0x1\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `addPack(address[],uint24[],uint24[],uint16)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/19/0xd2675d3ea478692ad34f09fa1f8bda67a9696bf7.sol",
        "function": "addPack(address[],uint24[],uint24[],uint16)",
        "lineno": 88,
        "title": "Integer Overflow ",
        "type": "Warning"
      }
    ],
    "success": true
  }
}