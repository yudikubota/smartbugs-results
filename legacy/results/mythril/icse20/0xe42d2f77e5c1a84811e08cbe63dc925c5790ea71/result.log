{"error": null, "issues": [{"address": 814, "code": "function changeName(string _name) public ownerOnly returns(bool success) \n    {\n\n        name = _name;\n        emit NameChange(name);\n\n        return true;\n    }", "debug": "calldata_Steganograph_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_Steganograph_0: 0x5353a2d800000000000000000000000000000000000000000000000000000000\ncalldatasize_Steganograph: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `changeName(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/12/0xe42d2f77e5c1a84811e08cbe63dc925c5790ea71.sol", "function": "changeName(string)", "lineno": 37, "title": "Integer Overflow ", "type": "Warning"}, {"address": 826, "code": "function changeName(string _name) public ownerOnly returns(bool success) \n    {\n\n        name = _name;\n        emit NameChange(name);\n\n        return true;\n    }", "debug": "calldata_Steganograph_4 + calldata_Steganograph_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8\ncalldata_Steganograph_0: 0x5353a2d800000000000000000000000000000000000000000000000000000000\ncalldatasize_Steganograph: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `changeName(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/12/0xe42d2f77e5c1a84811e08cbe63dc925c5790ea71.sol", "function": "changeName(string)", "lineno": 37, "title": "Integer Overflow ", "type": "Warning"}, {"address": 835, "code": "function changeName(string _name) public ownerOnly returns(bool success) \n    {\n\n        name = _name;\n        emit NameChange(name);\n\n        return true;\n    }", "debug": "calldata_Steganograph_4 + calldata_Steganograph_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc1\ncalldata_Steganograph_0: 0x5353a2d800000000000000000000000000000000000000000000000000000000\ncalldatasize_Steganograph: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `changeName(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/12/0xe42d2f77e5c1a84811e08cbe63dc925c5790ea71.sol", "function": "changeName(string)", "lineno": 37, "title": "Integer Overflow ", "type": "Warning"}, {"address": 841, "code": "function changeName(string _name) public ownerOnly returns(bool success) \n    {\n\n        name = _name;\n        emit NameChange(name);\n\n        return true;\n    }", "debug": "calldata_Steganograph_4 + calldata_Steganograph_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff41\ncalldata_Steganograph_0: 0x5353a2d800000000000000000000000000000000000000000000000000000000\ncalldatasize_Steganograph: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `changeName(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/12/0xe42d2f77e5c1a84811e08cbe63dc925c5790ea71.sol", "function": "changeName(string)", "lineno": 37, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1318, "code": "function changeSymbol(string _symbol) public ownerOnly returns(bool success) \n    {\n\n        symbol = _symbol;\n        emit SymbolChange(symbol);\n\n        return true;\n    }", "debug": "calldata_Steganograph_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_Steganograph_0: 0xa3895fff00000000000000000000000000000000000000000000000000000000\ncalldatasize_Steganograph: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `changeSymbol(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/12/0xe42d2f77e5c1a84811e08cbe63dc925c5790ea71.sol", "function": "changeSymbol(string)", "lineno": 49, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2891, "code": "balances[_to] += _value", "debug": "calldata_Steganograph_32 + 36: 0xeb7e3000000000012000200134010f94023a7a28e10000000bffefc46000b0f0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_Steganograph_32_+_4: 0x18a3d0000000003d83b1202da8090f2e6802400af2000000280000127fe43efa\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_Steganograph_4: 0xeb7e3000000000012000200134010f94023a7a28e10000000bffefc46000b0f0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xeb7e3000000000012000200134010f94023a7a28e10000000bffefc46000b0f0\ncalldata_Steganograph_4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_Steganograph_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_Steganograph: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `transferFrom(address,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/12/0xe42d2f77e5c1a84811e08cbe63dc925c5790ea71.sol", "function": "transferFrom(address,address,uint256)", "lineno": 115, "title": "Integer Overflow ", "type": "Warning"}, {"address": 4278, "code": "balances[_to] += _value", "debug": "calldata_Steganograph_32 + 4: 0xb135d1e4a0020a903239033aa9b45a69384c906b52a71e0575829626809581fd\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_Steganograph_4: 0xa7e6e147bc0ca40011bf9bbaadf7593cb8cc90b17cb7d73775f0d8eb1435e9c1\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xb135d1e4a0020a903239033aa9b45a69384c906b52a71e0575829626809581fd\ncalldata_Steganograph_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncalldatasize_Steganograph: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `transfer(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/12/0xe42d2f77e5c1a84811e08cbe63dc925c5790ea71.sol", "function": "transfer(address,uint256)", "lineno": 77, "title": "Integer Overflow ", "type": "Warning"}, {"address": 4464, "code": "contract Steganograph\n{\n\n\n    address     owner = 0x12C3Fd99ab45Bd806128E96062dc5A6C273d8AF6;\n\n\n    string      public standard = 'Token 0.1';\n    string      public name = 'Steganograph'; \n    string      public symbol = 'PHY';\n    uint8       public decimals = 3; \n    uint256     public totalSupply = 1168000000000;\n    \n\n    mapping (address => uint256) balances;  \n    mapping (address => mapping (address => uint256)) allowed;\n\n\n    modifier ownerOnly() \n    {\n        require(msg.sender == owner);\n        _;\n    }       \n\n\n    // We might change the token name only in case of emergency\n    // ____________________________________________________________________________________\n    function changeName(string _name) public ownerOnly returns(bool success) \n    {\n\n        name = _name;\n        emit NameChange(name);\n\n        return true;\n    }\n\n\n    // We might change the token symbol only in case of emergency\n    // ____________________________________________________________________________________\n    function changeSymbol(string _symbol) public ownerOnly returns(bool success) \n    {\n\n        symbol = _symbol;\n        emit SymbolChange(symbol);\n\n        return true;\n    }\n\n\n    // Use it to get your real PHY balance\n    // ____________________________________________________________________________________\n    function balanceOf(address _owner) public constant returns(uint256 tokens) \n    {\n\n        return balances[_owner];\n    }\n    \n\n    // Use it to transfer PHY to another address\n    // ____________________________________________________________________________________\n    function transfer(address _to, uint256 _value) public returns(bool success)\n    { \n\n        require(_value > 0 && balances[msg.sender] >= _value);\n\n\n        balances[msg.sender] -= _value;\n        balances[_to] += _value;\n        emit Transfer(msg.sender, _to, _value);\n\n        return true;\n    }\n\n\n    // How much someone allows you to transfer from his/her address\n    // ____________________________________________________________________________________\n    function canTransferFrom(address _owner, address _spender) public constant returns(uint256 tokens) \n    {\n\n        require(_owner != 0x0 && _spender != 0x0);\n        \n\n        if (_owner == _spender)\n        {\n            return balances[_owner];\n        }\n        else \n        {\n            return allowed[_owner][_spender];\n        }\n    }\n\n    \n    // Transfer allowed amount of PHY tokens from another address\n    // ____________________________________________________________________________________\n    function transferFrom(address _from, address _to, uint256 _value) public returns(bool success) \n    {\n\n        require(_value > 0 && _from != 0x0 &&\n                allowed[_from][msg.sender] >= _value && \n                balances[_from] >= _value);\n                \n\n        balances[_from] -= _value;\n        allowed[_from][msg.sender] -= _value;\n        balances[_to] += _value;    \n        emit Transfer(_from, _to, _value);\n\n        return true;\n    }\n\n    \n    // Allow someone transfer PHY tokens from your address\n    // ____________________________________________________________________________________\n    function approve(address _spender, uint256 _value) public returns(bool success)  \n    {\n\n        require(_spender != 0x0 && _spender != msg.sender);\n\n\n        allowed[msg.sender][_spender] = _value;\n        emit Approval(msg.sender, _spender, _value);\n\n        return true;\n    }\n\n\n    // Token constructor\n    // ____________________________________________________________________________________\n    constructor() public\n    {\n        owner = msg.sender;\n        balances[owner] = totalSupply;\n        emit TokenDeployed(totalSupply);\n    }\n\n\n    // ====================================================================================\n    //\n    // List of all events\n\n    event NameChange(string _name);\n    event SymbolChange(string _symbol);\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\n    event TokenDeployed(uint256 _totalSupply);\n\n}", "debug": "calldata_Steganograph_4 + calldata_Steganograph_4: 0x8000000000000000000000000000000000000000000000000000000000000000\nstorage_0: 0x0\ncaller: 0x0\ncalldata_Steganograph_0: 0xa3895fff00000000000000000000000000000000000000000000000000000000\ncalldatasize_Steganograph: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `changeSymbol(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/12/0xe42d2f77e5c1a84811e08cbe63dc925c5790ea71.sol", "function": "changeSymbol(string)", "lineno": 10, "title": "Integer Overflow ", "type": "Warning"}, {"address": 4478, "code": "contract Steganograph\n{\n\n\n    address     owner = 0x12C3Fd99ab45Bd806128E96062dc5A6C273d8AF6;\n\n\n    string      public standard = 'Token 0.1';\n    string      public name = 'Steganograph'; \n    string      public symbol = 'PHY';\n    uint8       public decimals = 3; \n    uint256     public totalSupply = 1168000000000;\n    \n\n    mapping (address => uint256) balances;  \n    mapping (address => mapping (address => uint256)) allowed;\n\n\n    modifier ownerOnly() \n    {\n        require(msg.sender == owner);\n        _;\n    }       \n\n\n    // We might change the token name only in case of emergency\n    // ____________________________________________________________________________________\n    function changeName(string _name) public ownerOnly returns(bool success) \n    {\n\n        name = _name;\n        emit NameChange(name);\n\n        return true;\n    }\n\n\n    // We might change the token symbol only in case of emergency\n    // ____________________________________________________________________________________\n    function changeSymbol(string _symbol) public ownerOnly returns(bool success) \n    {\n\n        symbol = _symbol;\n        emit SymbolChange(symbol);\n\n        return true;\n    }\n\n\n    // Use it to get your real PHY balance\n    // ____________________________________________________________________________________\n    function balanceOf(address _owner) public constant returns(uint256 tokens) \n    {\n\n        return balances[_owner];\n    }\n    \n\n    // Use it to transfer PHY to another address\n    // ____________________________________________________________________________________\n    function transfer(address _to, uint256 _value) public returns(bool success)\n    { \n\n        require(_value > 0 && balances[msg.sender] >= _value);\n\n\n        balances[msg.sender] -= _value;\n        balances[_to] += _value;\n        emit Transfer(msg.sender, _to, _value);\n\n        return true;\n    }\n\n\n    // How much someone allows you to transfer from his/her address\n    // ____________________________________________________________________________________\n    function canTransferFrom(address _owner, address _spender) public constant returns(uint256 tokens) \n    {\n\n        require(_owner != 0x0 && _spender != 0x0);\n        \n\n        if (_owner == _spender)\n        {\n            return balances[_owner];\n        }\n        else \n        {\n            return allowed[_owner][_spender];\n        }\n    }\n\n    \n    // Transfer allowed amount of PHY tokens from another address\n    // ____________________________________________________________________________________\n    function transferFrom(address _from, address _to, uint256 _value) public returns(bool success) \n    {\n\n        require(_value > 0 && _from != 0x0 &&\n                allowed[_from][msg.sender] >= _value && \n                balances[_from] >= _value);\n                \n\n        balances[_from] -= _value;\n        allowed[_from][msg.sender] -= _value;\n        balances[_to] += _value;    \n        emit Transfer(_from, _to, _value);\n\n        return true;\n    }\n\n    \n    // Allow someone transfer PHY tokens from your address\n    // ____________________________________________________________________________________\n    function approve(address _spender, uint256 _value) public returns(bool success)  \n    {\n\n        require(_spender != 0x0 && _spender != msg.sender);\n\n\n        allowed[msg.sender][_spender] = _value;\n        emit Approval(msg.sender, _spender, _value);\n\n        return true;\n    }\n\n\n    // Token constructor\n    // ____________________________________________________________________________________\n    constructor() public\n    {\n        owner = msg.sender;\n        balances[owner] = totalSupply;\n        emit TokenDeployed(totalSupply);\n    }\n\n\n    // ====================================================================================\n    //\n    // List of all events\n\n    event NameChange(string _name);\n    event SymbolChange(string _symbol);\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\n    event TokenDeployed(uint256 _totalSupply);\n\n}", "debug": "calldata_Steganograph_4 + calldata_Steganograph_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\nstorage_0: 0x0\ncaller: 0x0\ncalldata_Steganograph_0: 0xa3895fff00000000000000000000000000000000000000000000000000000000\ncalldatasize_Steganograph: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `changeSymbol(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/12/0xe42d2f77e5c1a84811e08cbe63dc925c5790ea71.sol", "function": "changeSymbol(string)", "lineno": 10, "title": "Integer Overflow ", "type": "Warning"}], "success": true}