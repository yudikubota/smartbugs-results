{
  "contract": "0xa4c09aa7fb154d4769547d1f21f9172c0b74f7a7",
  "tool": "mythril",
  "start": 1563492673.8368044,
  "end": 1563492701.3184292,
  "duration": 27.481624841690063,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 200,
        "code": "Transfer = balances[msg.sender",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 545\n",
        "filename": "/unique_chucks/8/0xa4c09aa7fb154d4769547d1f21f9172c0b74f7a7.sol",
        "function": "fallback",
        "lineno": 63,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 545,
        "code": "thdrawTokens(uint256 _value) public ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/8/0xa4c09aa7fb154d4769547d1f21f9172c0b74f7a7.sol",
        "function": "fallback",
        "lineno": 68,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 639,
        "code": "nlyOwner {\n        for(uint i=0; i < _addrs.length; i++) {\n            balances[_addrs[i]] = LMDA.balanceOf(_addrs[i]);\n        }\n    }\n    \n    function getBalanceOf(address _owner) publ",
        "debug": "calldata_TokenInterface_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_TokenInterface_0: 0x520b81f00000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenInterface: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `initBalances(address[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/8/0xa4c09aa7fb154d4769547d1f21f9172c0b74f7a7.sol",
        "function": "initBalances(address[])",
        "lineno": 49,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1562,
        "code": "  function getBalanceOf(a",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/8/0xa4c09aa7fb154d4769547d1f21f9172c0b74f7a7.sol",
        "function": "initBalances(address[])",
        "lineno": 55,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 1562,
        "code": "  function getBalanceOf(a",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1562\nCall at address: 1562\n",
        "filename": "/unique_chucks/8/0xa4c09aa7fb154d4769547d1f21f9172c0b74f7a7.sol",
        "function": "initBalances(address[])",
        "lineno": 55,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 2083,
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/8/0xa4c09aa7fb154d4769547d1f21f9172c0b74f7a7.sol",
        "function": "withdrawTokens(uint256)",
        "lineno": 72,
        "title": "Message call to external contract",
        "type": "Informational"
      }
    ],
    "success": true
  }
}