{
  "contract": "0xdbeefc28155894b887d379113c1dadb4db545a78",
  "tool": "mythril",
  "start": 1563275175.3766432,
  "end": 1563275218.3475006,
  "duration": 42.97085738182068,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 2332,
        "code": "wallet = _wallet;\n    }\n    \n    ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_contracts/0xdbeefc28155894b887d379113c1dadb4db545a78.sol",
        "function": "withdrawTokens(address,uint256)",
        "lineno": 265,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 2952,
        "code": "dress indexed ambassador);\n  ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_contracts/0xdbeefc28155894b887d379113c1dadb4db545a78.sol",
        "function": "buyFromRC(address,uint256,uint256)",
        "lineno": 189,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 2952,
        "code": "dress indexed ambassador);\n  ",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 4941\n",
        "filename": "/unique_contracts/0xdbeefc28155894b887d379113c1dadb4db545a78.sol",
        "function": "buyFromRC(address,uint256,uint256)",
        "lineno": 189,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 4125,
        "code": "tart;\n   ",
        "debug": "",
        "description": "Function addMeByRC() retrieves the transaction origin (tx.origin) using the ORIGIN opcode. Use msg.sender instead.\nSee also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin",
        "filename": "/unique_contracts/0xdbeefc28155894b887d379113c1dadb4db545a78.sol",
        "function": "addMeByRC()",
        "lineno": 243,
        "title": "Use of tx.origin",
        "type": "Warning"
      },
      {
        "address": 4941,
        "code": "le() {\n        require( now ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_contracts/0xdbeefc28155894b887d379113c1dadb4db545a78.sol",
        "function": "tokenValueInEther(uint256)",
        "lineno": 179,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 4941,
        "code": "le() {\n        require( now ",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function tokenValueInEther(uint256). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_contracts/0xdbeefc28155894b887d379113c1dadb4db545a78.sol",
        "function": "tokenValueInEther(uint256)",
        "lineno": 179,
        "title": "Transaction order dependence",
        "type": "Warning"
      }
    ],
    "success": true
  }
}