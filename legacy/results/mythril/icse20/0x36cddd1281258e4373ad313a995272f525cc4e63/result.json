{
  "contract": "0x36cddd1281258e4373ad313a995272f525cc4e63",
  "tool": "mythril",
  "start": 1563545855.5518398,
  "end": 1563546141.1120014,
  "duration": 285.5601615905762,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 440,
        "code": "row if sender i",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_21: 0x8000\ncalldatasize_IToken: 0x3\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/14/0x36cddd1281258e4373ad313a995272f525cc4e63.sol",
        "function": "fallback",
        "lineno": 67,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 693,
        "code": "if (!beneficiary.se",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/14/0x36cddd1281258e4373ad313a995272f525cc4e63.sol",
        "function": "fallback",
        "lineno": 245,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 2762,
        "code": "        rate = ratePr",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_21: 0x8000\ncalldata_IToken_0: 0x60ca46cd00000000000000000000000000000000000000000000000000000000\ncalldatasize_IToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/14/0x36cddd1281258e4373ad313a995272f525cc4e63.sol",
        "function": "toTokens(uint256)",
        "lineno": 149,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2805,
        "code": "t + rateWaitingEnd) {",
        "debug": "storage_21: 0x0\ntimestamp: 0xf0fd17ecfbfd32843ff2de9fe7a9b50483c827dfe3d9ff9e03ff93d936c15900\nstorage_22: 0x327643f1bbaab26e78e6dbde4e56b824fd2622976759d5053a8b91f95eff74f0\nstorage_14: 0xe848d9cb22d482055807d7900515105469a82466d0185df330e035ed68bacc06\nstorage_23: 0xf0fd17ecfbfd32843ff2de9fe7a9b50483c827dfe3d9ff9e03ff93d936c15900\ncalldata_IToken_0: 0x60ca46cd00000000000000000000000000000000000000000000000000000000\ncalldatasize_IToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `toTokens(uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/14/0x36cddd1281258e4373ad313a995272f525cc4e63.sol",
        "function": "toTokens(uint256)",
        "lineno": 153,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2830,
        "code": "ngelDayEnd) {\n        ",
        "debug": "storage_21: 0x0\nstorage_15: 0x9d3642da408dc6204bb791ada5ea8f9a0b994fef76acfd1e68eeda0da08308b2\ntimestamp: 0xbe1776cfbfffb9dde02d47f4ffb00fa13a10f9ff8ebf0473fcf82097fd0ffec2\nstorage_22: 0xbc1a425c41850bdd51e50e63ce616f9cd39d404f60aef2d150a85851a4a640b0\nstorage_14: 0x1fd34737e7aae008e483991314ea0046673b9b02e1011a2ac4fc8465869be11\nstorage_23: 0xbe1776cfbfffb9dde02d47f4ffb00fa13a10f9ff8ebf0473fcf82097fd0ffec2\ncalldata_IToken_0: 0x60ca46cd00000000000000000000000000000000000000000000000000000000\ncalldatasize_IToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `toTokens(uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/14/0x36cddd1281258e4373ad313a995272f525cc4e63.sol",
        "function": "toTokens(uint256)",
        "lineno": 158,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2855,
        "code": "eekEnd) {\n             ",
        "debug": "storage_21: 0x100\nstorage_16: 0x8a80088954379ecb2409796792f4fa1191c84cc8f7c9a7f6ff31c84400f21a85\ntimestamp: 0xc3900008086f367777cfff277dbbe0207ee0e680029d78bfddfbcc6662290f08\nstorage_22: 0x8b0032a0a817192ab09b5b585056fc60ddf6ea32f6adffffa803ab5642234ae4\ncallvalue: 0x0\nstorage_15: 0x388fcd6760581d4cc734a3cf2d64e3bfa0e9fc4d0bef78c035f821102005c423\nstorage_14: 0x388fcd6760581d4cc734a3cf2d64e3bfa0e9fc4d0bef78c035f821102005c423\nstorage_6: 0x0\nstorage_23: 0xc3900008086f367777cfff277dbbe0207ee0e680029d78bfddfbcc6662290f08\ncalldatasize_IToken: 0x3\n",
        "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/14/0x36cddd1281258e4373ad313a995272f525cc4e63.sol",
        "function": "fallback",
        "lineno": 163,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2880,
        "code": "ekEnd) {\n               ",
        "debug": "storage_21: 0x100\nstorage_17: 0x8a80088954379ecb2409796792f4fa1191c84cc8f7c9a7f6ff31c84400f21a85\ntimestamp: 0xc3900008086f367777cfff277dbbe0207ee0e680029d78bfddfbcc6662290f08\nstorage_22: 0x8b0032a0a817192ab09b5b585056fc60ddf6ea32f6adffffa803ab5642234ae4\ncallvalue: 0x0\nstorage_16: 0x388fcd6760581d4cc734a3cf2d64e3bfa0e9fc4d0bef78c035f821102005c423\nstorage_15: 0x388fcd6760581d4cc734a3cf2d64e3bfa0e9fc4d0bef78c035f821102005c423\nstorage_14: 0x388fcd6760581d4cc734a3cf2d64e3bfa0e9fc4d0bef78c035f821102005c423\nstorage_6: 0x0\nstorage_23: 0xc3900008086f367777cfff277dbbe0207ee0e680029d78bfddfbcc6662290f08\ncalldatasize_IToken: 0x3\n",
        "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/14/0x36cddd1281258e4373ad313a995272f525cc4e63.sol",
        "function": "fallback",
        "lineno": 168,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2905,
        "code": ") {\n                rate ",
        "debug": "storage_21: 0x100\ntimestamp: 0xc3900008086f367777cfff277dbbe0207ee0e680029d78bfddfbcc6662290f08\nstorage_22: 0x8b0032a0a817192ab09b5b585056fc60ddf6ea32f6adffffa803ab5642234ae4\nstorage_18: 0x8a80088954379ecb2409796792f4fa1191c84cc8f7c9a7f6ff31c84400f21a85\ncallvalue: 0x0\nstorage_17: 0x388fcd6760581d4cc734a3cf2d64e3bfa0e9fc4d0bef78c035f821102005c423\nstorage_16: 0x388fcd6760581d4cc734a3cf2d64e3bfa0e9fc4d0bef78c035f821102005c423\nstorage_15: 0x388fcd6760581d4cc734a3cf2d64e3bfa0e9fc4d0bef78c035f821102005c423\nstorage_14: 0x388fcd6760581d4cc734a3cf2d64e3bfa0e9fc4d0bef78c035f821102005c423\nstorage_6: 0x0\nstorage_23: 0xc3900008086f367777cfff277dbbe0207ee0e680029d78bfddfbcc6662290f08\ncalldatasize_IToken: 0x3\n",
        "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/14/0x36cddd1281258e4373ad313a995272f525cc4e63.sol",
        "function": "fallback",
        "lineno": 173,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2930,
        "code": "           rate = rateLa",
        "debug": "storage_21: 0x100\ntimestamp: 0xc3900008086f367777cfff277dbbe0207ee0e680029d78bfddfbcc6662290f08\nstorage_19: 0x8a80088954379ecb2409796792f4fa1191c84cc8f7c9a7f6ff31c84400f21a85\nstorage_22: 0x8b0032a0a817192ab09b5b585056fc60ddf6ea32f6adffffa803ab5642234ae4\ncallvalue: 0x0\nstorage_18: 0x388fcd6760581d4cc734a3cf2d64e3bfa0e9fc4d0bef78c035f821102005c423\nstorage_17: 0x388fcd6760581d4cc734a3cf2d64e3bfa0e9fc4d0bef78c035f821102005c423\nstorage_16: 0x388fcd6760581d4cc734a3cf2d64e3bfa0e9fc4d0bef78c035f821102005c423\nstorage_15: 0x388fcd6760581d4cc734a3cf2d64e3bfa0e9fc4d0bef78c035f821102005c423\nstorage_14: 0x388fcd6760581d4cc734a3cf2d64e3bfa0e9fc4d0bef78c035f821102005c423\nstorage_6: 0x0\nstorage_23: 0xc3900008086f367777cfff277dbbe0207ee0e680029d78bfddfbcc6662290f08\ncalldatasize_IToken: 0x3\n",
        "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/14/0x36cddd1281258e4373ad313a995272f525cc4e63.sol",
        "function": "fallback",
        "lineno": 179,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2955,
        "code": "   * Function to end th",
        "debug": "storage_21: 0x100\ntimestamp: 0xc3900008086f367777cfff277dbbe0207ee0e680029d78bfddfbcc6662290f08\nstorage_20: 0x8a80088954379ecb2409796792f4fa1191c84cc8f7c9a7f6ff31c84400f21a85\nstorage_22: 0x8b0032a0a817192ab09b5b585056fc60ddf6ea32f6adffffa803ab5642234ae4\ncallvalue: 0x0\nstorage_19: 0x388fcd6760581d4cc734a3cf2d64e3bfa0e9fc4d0bef78c035f821102005c423\nstorage_18: 0x388fcd6760581d4cc734a3cf2d64e3bfa0e9fc4d0bef78c035f821102005c423\nstorage_17: 0x388fcd6760581d4cc734a3cf2d64e3bfa0e9fc4d0bef78c035f821102005c423\nstorage_16: 0x388fcd6760581d4cc734a3cf2d64e3bfa0e9fc4d0bef78c035f821102005c423\nstorage_15: 0x388fcd6760581d4cc734a3cf2d64e3bfa0e9fc4d0bef78c035f821102005c423\nstorage_14: 0x388fcd6760581d4cc734a3cf2d64e3bfa0e9fc4d0bef78c035f821102005c423\nstorage_6: 0x0\nstorage_23: 0xc3900008086f367777cfff277dbbe0207ee0e680029d78bfddfbcc6662290f08\ncalldatasize_IToken: 0x3\n",
        "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/14/0x36cddd1281258e4373ad313a995272f525cc4e63.sol",
        "function": "fallback",
        "lineno": 188,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 3096,
        "code": "row if sender i",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_21: 0x8000\ncalldata_IToken_0: 0x2095f2d400000000000000000000000000000000000000000000000000000000\ncalldatasize_IToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/14/0x36cddd1281258e4373ad313a995272f525cc4e63.sol",
        "function": "endCrowdsale()",
        "lineno": 67,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3298,
        "code": "hdraw() onlyBe",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/14/0x36cddd1281258e4373ad313a995272f525cc4e63.sol",
        "function": "endCrowdsale()",
        "lineno": 205,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 3612,
        "code": "row if sender i",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_21: 0x8000\ncaller: 0x0\nstorage_0: 0x0\ncalldata_IToken_0: 0x3ccfd60b00000000000000000000000000000000000000000000000000000000\ncalldatasize_IToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/14/0x36cddd1281258e4373ad313a995272f525cc4e63.sol",
        "function": "withdraw()",
        "lineno": 67,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}