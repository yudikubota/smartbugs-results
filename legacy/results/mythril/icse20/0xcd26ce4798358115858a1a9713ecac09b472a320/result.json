{
  "contract": "0xcd26ce4798358115858a1a9713ecac09b472a320",
  "tool": "mythril",
  "start": 1563748636.7997038,
  "end": 1563748672.338702,
  "duration": 35.53899812698364,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 818,
        "code": "ember);\n    _;\n  }\n\n  // In the construc",
        "debug": "",
        "description": "This contract executes a message call to an address found at storage slot 0. This storage slot can be written to by calling the function `setMembershipStatus()`. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/41/0xcd26ce4798358115858a1a9713ecac09b472a320.sol",
        "function": "donateTokens(address)",
        "lineno": 57,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 818,
        "code": "ember);\n    _;\n  }\n\n  // In the construc",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1693\nCall at address: 1501\nCall at address: 1152\n",
        "filename": "/unique_chucks/41/0xcd26ce4798358115858a1a9713ecac09b472a320.sol",
        "function": "donateTokens(address)",
        "lineno": 57,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 818,
        "code": "ember);\n    _;\n  }\n\n  // In the construc",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function donateTokens(address). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/41/0xcd26ce4798358115858a1a9713ecac09b472a320.sol",
        "function": "donateTokens(address)",
        "lineno": 57,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 1152,
        "code": "f(this));\n  }\n\n  // The donation address for",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/41/0xcd26ce4798358115858a1a9713ecac09b472a320.sol",
        "function": "donateTokens(address)",
        "lineno": 229,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 1152,
        "code": "f(this));\n  }\n\n  // The donation address for",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1693\nCall at address: 1501\n",
        "filename": "/unique_chucks/41/0xcd26ce4798358115858a1a9713ecac09b472a320.sol",
        "function": "donateTokens(address)",
        "lineno": 229,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 1501,
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/41/0xcd26ce4798358115858a1a9713ecac09b472a320.sol",
        "function": "donateTokens(address)",
        "lineno": 236,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 1501,
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1693\n",
        "filename": "/unique_chucks/41/0xcd26ce4798358115858a1a9713ecac09b472a320.sol",
        "function": "donateTokens(address)",
        "lineno": 236,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 1693,
        "code": "w returns(address) {\n    return donationAddress_;\n  }\n}",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/41/0xcd26ce4798358115858a1a9713ecac09b472a320.sol",
        "function": "donateTokens(address)",
        "lineno": 233,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 1947,
        "code": "ember);\n    _;\n  }\n\n  // In the construc",
        "debug": "",
        "description": "This contract executes a message call to an address found at storage slot 0. This storage slot can be written to by calling the function `setMembershipStatus()`. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/41/0xcd26ce4798358115858a1a9713ecac09b472a320.sol",
        "function": "revokeSelf()",
        "lineno": 57,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 1947,
        "code": "ember);\n    _;\n  }\n\n  // In the construc",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2445\nCall at address: 2220\n",
        "filename": "/unique_chucks/41/0xcd26ce4798358115858a1a9713ecac09b472a320.sol",
        "function": "revokeSelf()",
        "lineno": 57,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 1947,
        "code": "ember);\n    _;\n  }\n\n  // In the construc",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function revokeSelf(). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/41/0xcd26ce4798358115858a1a9713ecac09b472a320.sol",
        "function": "revokeSelf()",
        "lineno": 57,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 2220,
        "code": "design, but could end up with a balance ",
        "debug": "",
        "description": "This contract executes a message call to an address found at storage slot 0. This storage slot can be written to by calling the function `setMembershipStatus()`. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/41/0xcd26ce4798358115858a1a9713ecac09b472a320.sol",
        "function": "revokeSelf()",
        "lineno": 210,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 2220,
        "code": "design, but could end up with a balance ",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2445\n",
        "filename": "/unique_chucks/41/0xcd26ce4798358115858a1a9713ecac09b472a320.sol",
        "function": "revokeSelf()",
        "lineno": 210,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 2220,
        "code": "design, but could end up with a balance ",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function revokeSelf(). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/41/0xcd26ce4798358115858a1a9713ecac09b472a320.sol",
        "function": "revokeSelf()",
        "lineno": 210,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 2445,
        "code": "s() public membersOnly {\n    // Log",
        "debug": "",
        "description": "This contract executes a message call to an address found at storage slot 0. This storage slot can be written to by calling the function `setMembershipStatus()`. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/41/0xcd26ce4798358115858a1a9713ecac09b472a320.sol",
        "function": "revokeSelf()",
        "lineno": 212,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 2445,
        "code": "s() public membersOnly {\n    // Log",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function revokeSelf(). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/41/0xcd26ce4798358115858a1a9713ecac09b472a320.sol",
        "function": "revokeSelf()",
        "lineno": 212,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 2662,
        "code": "ember);\n    _;\n  }\n\n  // In the construc",
        "debug": "",
        "description": "This contract executes a message call to an address found at storage slot 0. This storage slot can be written to by calling the function `setMembershipStatus()`. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/41/0xcd26ce4798358115858a1a9713ecac09b472a320.sol",
        "function": "heartbeat()",
        "lineno": 57,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 2662,
        "code": "ember);\n    _;\n  }\n\n  // In the construc",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2881\n",
        "filename": "/unique_chucks/41/0xcd26ce4798358115858a1a9713ecac09b472a320.sol",
        "function": "heartbeat()",
        "lineno": 57,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 2662,
        "code": "ember);\n    _;\n  }\n\n  // In the construc",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function heartbeat(). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/41/0xcd26ce4798358115858a1a9713ecac09b472a320.sol",
        "function": "heartbeat()",
        "lineno": 57,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 2881,
        "code": " new member.\n  funct",
        "debug": "",
        "description": "This contract executes a message call to an address found at storage slot 0. This storage slot can be written to by calling the function `setMembershipStatus()`. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/41/0xcd26ce4798358115858a1a9713ecac09b472a320.sol",
        "function": "heartbeat()",
        "lineno": 98,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 2881,
        "code": " new member.\n  funct",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function heartbeat(). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/41/0xcd26ce4798358115858a1a9713ecac09b472a320.sol",
        "function": "heartbeat()",
        "lineno": 98,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 3098,
        "code": "ember);\n    _;\n  }\n\n  // In the construc",
        "debug": "",
        "description": "This contract executes a message call to an address found at storage slot 0. This storage slot can be written to by calling the function `setMembershipStatus()`. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/41/0xcd26ce4798358115858a1a9713ecac09b472a320.sol",
        "function": "inactivateSelf()",
        "lineno": 57,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 3098,
        "code": "ember);\n    _;\n  }\n\n  // In the construc",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3596\nCall at address: 3371\n",
        "filename": "/unique_chucks/41/0xcd26ce4798358115858a1a9713ecac09b472a320.sol",
        "function": "inactivateSelf()",
        "lineno": 57,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 3098,
        "code": "ember);\n    _;\n  }\n\n  // In the construc",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function inactivateSelf(). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/41/0xcd26ce4798358115858a1a9713ecac09b472a320.sol",
        "function": "inactivateSelf()",
        "lineno": 57,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 3371,
        "code": "(memberId);\n  }\n\n  // Revoke all members",
        "debug": "",
        "description": "This contract executes a message call to an address found at storage slot 0. This storage slot can be written to by calling the function `setMembershipStatus()`. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/41/0xcd26ce4798358115858a1a9713ecac09b472a320.sol",
        "function": "inactivateSelf()",
        "lineno": 155,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 3371,
        "code": "(memberId);\n  }\n\n  // Revoke all members",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3596\n",
        "filename": "/unique_chucks/41/0xcd26ce4798358115858a1a9713ecac09b472a320.sol",
        "function": "inactivateSelf()",
        "lineno": 155,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 3371,
        "code": "(memberId);\n  }\n\n  // Revoke all members",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function inactivateSelf(). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/41/0xcd26ce4798358115858a1a9713ecac09b472a320.sol",
        "function": "inactivateSelf()",
        "lineno": 155,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 3596,
        "code": " longer than the inactivity timeout",
        "debug": "",
        "description": "This contract executes a message call to an address found at storage slot 0. This storage slot can be written to by calling the function `setMembershipStatus()`. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/41/0xcd26ce4798358115858a1a9713ecac09b472a320.sol",
        "function": "inactivateSelf()",
        "lineno": 159,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 3596,
        "code": " longer than the inactivity timeout",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function inactivateSelf(). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/41/0xcd26ce4798358115858a1a9713ecac09b472a320.sol",
        "function": "inactivateSelf()",
        "lineno": 159,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 3813,
        "code": "ember);\n    _;\n  }\n\n  // In the construc",
        "debug": "",
        "description": "This contract executes a message call to an address found at storage slot 0. This storage slot can be written to by calling the function `setMembershipStatus()`. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/41/0xcd26ce4798358115858a1a9713ecac09b472a320.sol",
        "function": "donateFunds()",
        "lineno": 57,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 3813,
        "code": "ember);\n    _;\n  }\n\n  // In the construc",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 4079\n",
        "filename": "/unique_chucks/41/0xcd26ce4798358115858a1a9713ecac09b472a320.sol",
        "function": "donateFunds()",
        "lineno": 57,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 3813,
        "code": "ember);\n    _;\n  }\n\n  // In the construc",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function donateFunds(). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/41/0xcd26ce4798358115858a1a9713ecac09b472a320.sol",
        "function": "donateFunds()",
        "lineno": 57,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 4079,
        "code": "ure that we didn't pass in the current ",
        "debug": "SOLVER OUTPUT:\nreturndatasize: 0x40\nretval_3813: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_theCyberMemberUtilities_0: 0x7150773d00000000000000000000000000000000000000000000000000000000\ncalldatasize_theCyberMemberUtilities: 0x4\ncallvalue: 0x0\n",
        "description": "In the function `donateFunds()` a non-zero amount of Ether is sent to an address taken from storage slot 1.\nThere is a check on storage index 1. This storage slot can be written to by calling the function `revokeAllVulnerable()`.\nIt seems that this function can be called without restrictions.",
        "filename": "/unique_chucks/41/0xcd26ce4798358115858a1a9713ecac09b472a320.sol",
        "function": "donateFunds()",
        "lineno": 222,
        "title": "Ether send",
        "type": "Warning"
      },
      {
        "address": 4079,
        "code": "ure that we didn't pass in the current ",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function donateFunds(). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/41/0xcd26ce4798358115858a1a9713ecac09b472a320.sol",
        "function": "donateFunds()",
        "lineno": 222,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 4304,
        "code": "ember);\n    _;\n  }\n\n  // In the construc",
        "debug": "",
        "description": "This contract executes a message call to an address found at storage slot 0. This storage slot can be written to by calling the function `setMembershipStatus()`. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/41/0xcd26ce4798358115858a1a9713ecac09b472a320.sol",
        "function": "revokeAllVulnerable()",
        "lineno": 57,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 4304,
        "code": "ember);\n    _;\n  }\n\n  // In the construc",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 4876\nCall at address: 4604\n",
        "filename": "/unique_chucks/41/0xcd26ce4798358115858a1a9713ecac09b472a320.sol",
        "function": "revokeAllVulnerable()",
        "lineno": 57,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 4304,
        "code": "ember);\n    _;\n  }\n\n  // In the construc",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function revokeAllVulnerable(). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/41/0xcd26ce4798358115858a1a9713ecac09b472a320.sol",
        "function": "revokeAllVulnerable()",
        "lineno": 57,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 4604,
        "code": "s;\n    \n    // Pick up where the functio",
        "debug": "",
        "description": "This contract executes a message call to an address found at storage slot 0. This storage slot can be written to by calling the function `setMembershipStatus()`. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/41/0xcd26ce4798358115858a1a9713ecac09b472a320.sol",
        "function": "revokeAllVulnerable()",
        "lineno": 170,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 4604,
        "code": "s;\n    \n    // Pick up where the functio",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 4876\n",
        "filename": "/unique_chucks/41/0xcd26ce4798358115858a1a9713ecac09b472a320.sol",
        "function": "revokeAllVulnerable()",
        "lineno": 170,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 4604,
        "code": "s;\n    \n    // Pick up where the functio",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function revokeAllVulnerable(). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/41/0xcd26ce4798358115858a1a9713ecac09b472a320.sol",
        "function": "revokeAllVulnerable()",
        "lineno": 170,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 4876,
        "code": "yTimeout_)) {\n        // Revoke ",
        "debug": "",
        "description": "This contract executes a message call to an address found at storage slot 0. This storage slot can be written to by calling the function `setMembershipStatus()`. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/41/0xcd26ce4798358115858a1a9713ecac09b472a320.sol",
        "function": "revokeAllVulnerable()",
        "lineno": 182,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 4876,
        "code": "yTimeout_)) {\n        // Revoke ",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function revokeAllVulnerable(). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/41/0xcd26ce4798358115858a1a9713ecac09b472a320.sol",
        "function": "revokeAllVulnerable()",
        "lineno": 182,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 5486,
        "code": "berId of the calling member",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/41/0xcd26ce4798358115858a1a9713ecac09b472a320.sol",
        "function": "revokeAllVulnerable()",
        "lineno": 202,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 5696,
        "code": "ember);\n    _;\n  }\n\n  // In the construc",
        "debug": "",
        "description": "This contract executes a message call to an address found at storage slot 0. This storage slot can be written to by calling the function `setMembershipStatus()`. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/41/0xcd26ce4798358115858a1a9713ecac09b472a320.sol",
        "function": "revokeAndSetNewMember(uint8,bytes32,address)",
        "lineno": 57,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 5696,
        "code": "ember);\n    _;\n  }\n\n  // In the construc",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 6174\nCall at address: 5932\n",
        "filename": "/unique_chucks/41/0xcd26ce4798358115858a1a9713ecac09b472a320.sol",
        "function": "revokeAndSetNewMember(uint8,bytes32,address)",
        "lineno": 57,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 5696,
        "code": "ember);\n    _;\n  }\n\n  // In the construc",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function revokeAndSetNewMember(uint8,bytes32,address). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/41/0xcd26ce4798358115858a1a9713ecac09b472a320.sol",
        "function": "revokeAndSetNewMember(uint8,bytes32,address)",
        "lineno": 57,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 5932,
        "code": "w member is valid).\n    theCyber.new",
        "debug": "",
        "description": "This contract executes a message call to an address found at storage slot 0. This storage slot can be written to by calling the function `setMembershipStatus()`. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/41/0xcd26ce4798358115858a1a9713ecac09b472a320.sol",
        "function": "revokeAndSetNewMember(uint8,bytes32,address)",
        "lineno": 103,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 5932,
        "code": "w member is valid).\n    theCyber.new",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 6174\n",
        "filename": "/unique_chucks/41/0xcd26ce4798358115858a1a9713ecac09b472a320.sol",
        "function": "revokeAndSetNewMember(uint8,bytes32,address)",
        "lineno": 103,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 5932,
        "code": "w member is valid).\n    theCyber.new",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function revokeAndSetNewMember(uint8,bytes32,address). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/41/0xcd26ce4798358115858a1a9713ecac09b472a320.sol",
        "function": "revokeAndSetNewMember(uint8,bytes32,address)",
        "lineno": 103,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 6174,
        "code": "tract & msg.sender) as inactive.\n  function proclaimAllIna",
        "debug": "",
        "description": "This contract executes a message call to an address found at storage slot 0. This storage slot can be written to by calling the function `setMembershipStatus()`. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/41/0xcd26ce4798358115858a1a9713ecac09b472a320.sol",
        "function": "revokeAndSetNewMember(uint8,bytes32,address)",
        "lineno": 107,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 6174,
        "code": "tract & msg.sender) as inactive.\n  function proclaimAllIna",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function revokeAndSetNewMember(uint8,bytes32,address). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/41/0xcd26ce4798358115858a1a9713ecac09b472a320.sol",
        "function": "revokeAndSetNewMember(uint8,bytes32,address)",
        "lineno": 107,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 6393,
        "code": "ember);\n    _;\n  }\n\n  // In the construc",
        "debug": "",
        "description": "This contract executes a message call to an address found at storage slot 0. This storage slot can be written to by calling the function `setMembershipStatus()`. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/41/0xcd26ce4798358115858a1a9713ecac09b472a320.sol",
        "function": "setMembershipStatus()",
        "lineno": 57,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 6393,
        "code": "ember);\n    _;\n  }\n\n  // In the construc",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 6666\n",
        "filename": "/unique_chucks/41/0xcd26ce4798358115858a1a9713ecac09b472a320.sol",
        "function": "setMembershipStatus()",
        "lineno": 57,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 6393,
        "code": "ember);\n    _;\n  }\n\n  // In the construc",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function setMembershipStatus(). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/41/0xcd26ce4798358115858a1a9713ecac09b472a320.sol",
        "function": "setMembershipStatus()",
        "lineno": 57,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 6666,
        "code": "contract.\n    MembershipStatusSet(",
        "debug": "",
        "description": "This contract executes a message call to an address found at storage slot 0. This storage slot can be written to by calling the function `setMembershipStatus()`. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/41/0xcd26ce4798358115858a1a9713ecac09b472a320.sol",
        "function": "setMembershipStatus()",
        "lineno": 88,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 6666,
        "code": "contract.\n    MembershipStatusSet(",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function setMembershipStatus(). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/41/0xcd26ce4798358115858a1a9713ecac09b472a320.sol",
        "function": "setMembershipStatus()",
        "lineno": 88,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 6764,
        "code": "p status of the utility contract.\n    MembershipStatusSet(",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/41/0xcd26ce4798358115858a1a9713ecac09b472a320.sol",
        "function": "setMembershipStatus()",
        "lineno": 88,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 6788,
        "code": "p status of the utility contract.\n    MembershipStatusSet(",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/41/0xcd26ce4798358115858a1a9713ecac09b472a320.sol",
        "function": "setMembershipStatus()",
        "lineno": 88,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 7096,
        "code": "ember);\n    _;\n  }\n\n  // In the construc",
        "debug": "",
        "description": "This contract executes a message call to an address found at storage slot 0. This storage slot can be written to by calling the function `setMembershipStatus()`. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/41/0xcd26ce4798358115858a1a9713ecac09b472a320.sol",
        "function": "proclaimAllInactive()",
        "lineno": 57,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 7096,
        "code": "ember);\n    _;\n  }\n\n  // In the construc",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 7396\n",
        "filename": "/unique_chucks/41/0xcd26ce4798358115858a1a9713ecac09b472a320.sol",
        "function": "proclaimAllInactive()",
        "lineno": 57,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 7096,
        "code": "ember);\n    _;\n  }\n\n  // In the construc",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function proclaimAllInactive(). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/41/0xcd26ce4798358115858a1a9713ecac09b472a320.sol",
        "function": "proclaimAllInactive()",
        "lineno": 57,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 7396,
        "code": ".\n    uint64 inactiveSince;\n    address ",
        "debug": "",
        "description": "This contract executes a message call to an address found at storage slot 0. This storage slot can be written to by calling the function `setMembershipStatus()`. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/41/0xcd26ce4798358115858a1a9713ecac09b472a320.sol",
        "function": "proclaimAllInactive()",
        "lineno": 116,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 7396,
        "code": ".\n    uint64 inactiveSince;\n    address ",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function proclaimAllInactive(). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/41/0xcd26ce4798358115858a1a9713ecac09b472a320.sol",
        "function": "proclaimAllInactive()",
        "lineno": 116,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 8231,
        "code": "on inactivateSelf() public m",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/41/0xcd26ce4798358115858a1a9713ecac09b472a320.sol",
        "function": "proclaimAllInactive()",
        "lineno": 149,
        "title": "State change after external call",
        "type": "Warning"
      }
    ],
    "success": true
  }
}