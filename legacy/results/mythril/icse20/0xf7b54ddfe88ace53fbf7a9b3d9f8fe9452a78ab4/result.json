{
  "contract": "0xf7b54ddfe88ace53fbf7a9b3d9f8fe9452a78ab4",
  "tool": "mythril",
  "start": 1563618986.1006117,
  "end": 1563619065.5979376,
  "duration": 79.4973258972168,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 1762,
        "code": "wner(address _newOwner) {\n        r",
        "debug": "",
        "description": "In the function `distributeOwnership()` the following predictable state variables are used to determine Ether recipient:\n- block.number\n- block.number\n",
        "filename": "/unique_chucks/22/0xf7b54ddfe88ace53fbf7a9b3d9f8fe9452a78ab4.sol",
        "function": "distributeOwnership()",
        "lineno": 435,
        "title": "Dependence on predictable environment variable",
        "type": "Warning"
      },
      {
        "address": 1762,
        "code": "wner(address _newOwner) {\n        r",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function distributeOwnership(). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/22/0xf7b54ddfe88ace53fbf7a9b3d9f8fe9452a78ab4.sol",
        "function": "distributeOwnership()",
        "lineno": 435,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 2302,
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/22/0xf7b54ddfe88ace53fbf7a9b3d9f8fe9452a78ab4.sol",
        "function": "changeFundOwner(address)",
        "lineno": 440,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 3641,
        "code": "   return a - ",
        "debug": "The exception is triggered under the following conditions:\n\nretval_4401: 0x989680\nblock_number: 0x0\nstorage_4: 0x1\nreturndatasize: 0x20\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_5: 0x0\nstorage_0: 0x0\ncaller: 0x0\ncalldata_SlotCrowdsale_0: 0x102fcfc00000000000000000000000000000000000000000000000000000000\ncalldatasize_SlotCrowdsale: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/22/0xf7b54ddfe88ace53fbf7a9b3d9f8fe9452a78ab4.sol",
        "function": "distributeOwnership()",
        "lineno": 23,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 4401,
        "code": "\n    function dist",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/22/0xf7b54ddfe88ace53fbf7a9b3d9f8fe9452a78ab4.sol",
        "function": "distributeBounty()",
        "lineno": 403,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 4401,
        "code": "\n    function dist",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1762\n",
        "filename": "/unique_chucks/22/0xf7b54ddfe88ace53fbf7a9b3d9f8fe9452a78ab4.sol",
        "function": "distributeOwnership()",
        "lineno": 403,
        "title": "Multiple Calls",
        "type": "Information"
      }
    ],
    "success": true
  }
}