{"error": null, "issues": [{"address": 234, "code": "sed += amount;\n        tokenRew", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xfd43d065a3683e61b59b72e31e7b196274c2b3cb639d44635c156d22ffdee8cf\ncallvalue: 0xe05f1f344b34b65dbce2206b4cc1dd758323c3ebdbdd6706a1510fd2fd9891e3\nstorage_7: 0x0\ncalldata_token_0: 0x300000000000000000000000000000000000000000000000000000000\ncalldatasize_token: 0x4\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/45/0x51109152d0335fa841443fd78ba678b0cf276ed7.sol", "function": "fallback", "lineno": 52, "title": "Integer Overflow ", "type": "Warning"}, {"address": 250, "code": "r(msg.sender, amount /", "debug": "storage_2: 0xfd43d065a3683e61b59b72e31e7b196274c2b3cb639d44635c156d22ffdee8cf\ncallvalue: 0xe05f1f344b34b65dbce2206b4cc1dd758323c3ebdbdd6706a1510fd2fd9891e3\nstorage_7: 0x0\ncalldata_token_0: 0x300000000000000000000000000000000000000000000000000000000\ncalldatasize_token: 0x4\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/45/0x51109152d0335fa841443fd78ba678b0cf276ed7.sol", "function": "fallback", "lineno": 53, "title": "Integer Overflow ", "type": "Warning"}, {"address": 332, "code": "ountRaised);\n ", "debug": "The exception is triggered under the following conditions:\n\nstorage_7: 0x0\ncalldata_token_0: 0x9dcb0cf00000000000000000000000000000000000000000000000000000000\ncalldatasize_token: 0x4\nstorage_4: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/45/0x51109152d0335fa841443fd78ba678b0cf276ed7.sol", "function": "fallback", "lineno": 54, "title": "Exception state", "type": "Informational"}, {"address": 470, "code": "     \n        beneficiary.send(amountRaised);\n  ", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/45/0x51109152d0335fa841443fd78ba678b0cf276ed7.sol", "function": "fallback", "lineno": 53, "title": "Message call to external contract", "type": "Informational"}, {"address": 470, "code": "     \n        beneficiary.send(amountRaised);\n  ", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 574\n", "filename": "/unique_chucks/45/0x51109152d0335fa841443fd78ba678b0cf276ed7.sol", "function": "fallback", "lineno": 53, "title": "Multiple Calls", "type": "Information"}, {"address": 574, "code": "= 0;\n        FundTransfer(msg.", "debug": "", "description": "A possible transaction order independence vulnerability exists in function fallback. The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/45/0x51109152d0335fa841443fd78ba678b0cf276ed7.sol", "function": "fallback", "lineno": 55, "title": "Transaction order dependence", "type": "Warning"}, {"address": 574, "code": "= 0;\n        FundTransfer(msg.", "debug": "", "description": "The return value of an external call is not checked. Note that execution continue even if the called contract throws.", "filename": "/unique_chucks/45/0x51109152d0335fa841443fd78ba678b0cf276ed7.sol", "function": "fallback", "lineno": 55, "title": "Unchecked CALL return value", "type": "Informational"}, {"address": 587, "code": "unt, true);\n    ", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/45/0x51109152d0335fa841443fd78ba678b0cf276ed7.sol", "function": "fallback", "lineno": 56, "title": "State change after external call", "type": "Warning"}], "success": true}