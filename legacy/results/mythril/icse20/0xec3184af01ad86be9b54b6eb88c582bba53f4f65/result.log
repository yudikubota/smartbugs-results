{"error": null, "issues": [{"address": 221, "debug": "", "description": "A possible transaction order independence vulnerability exists in function fallback. The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/29/0xec3184af01ad86be9b54b6eb88c582bba53f4f65.sol", "function": "fallback", "lineno": 52, "title": "Transaction order dependence", "type": "Warning"}, {"address": 1009, "code": ")<tokens) revert();\n        trust[ta", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/29/0xec3184af01ad86be9b54b6eb88c582bba53f4f65.sol", "function": "withdrawTokens(address,uint256)", "lineno": 36, "title": "Message call to external contract", "type": "Warning"}, {"address": 1009, "code": ")<tokens) revert();\n        trust[ta", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1485\n", "filename": "/unique_chucks/29/0xec3184af01ad86be9b54b6eb88c582bba53f4f65.sol", "function": "withdrawTokens(address,uint256)", "lineno": 36, "title": "Multiple Calls", "type": "Information"}, {"address": 1148, "code": "r,trust[tadr])", "debug": "calldata_TokenTrust_32 + 4: 0x8000000001001b40080008000000040000022104062224200400003700001\nretval_1009: 0x8007ffbfffffccf6b3ff74007bbf70000ffd0019efae3d19907b343ff74ffecc\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TokenTrust_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nreturndatasize: 0x20\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_0: 0x0\ncaller: 0x0\ncalldata_TokenTrust_0: 0x6b091f900000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenTrust: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `withdrawTokens(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/29/0xec3184af01ad86be9b54b6eb88c582bba53f4f65.sol", "function": "withdrawTokens(address,uint256)", "lineno": 38, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1154, "code": "r,trust[tadr])", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/29/0xec3184af01ad86be9b54b6eb88c582bba53f4f65.sol", "function": "withdrawTokens(address,uint256)", "lineno": 38, "title": "State change after external call", "type": "Warning"}, {"address": 1485, "code": "   }\n    \n    function addTokenTrus", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/29/0xec3184af01ad86be9b54b6eb88c582bba53f4f65.sol", "function": "withdrawTokens(address,uint256)", "lineno": 40, "title": "Message call to external contract", "type": "Warning"}, {"address": 1795, "code": "rt();\n        trust[tadr]+=1;\n   ", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/29/0xec3184af01ad86be9b54b6eb88c582bba53f4f65.sol", "function": "addTokenTrust(address)", "lineno": 43, "title": "Message call to external contract", "type": "Warning"}, {"address": 1795, "code": "rt();\n        trust[tadr]+=1;\n   ", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2153\n", "filename": "/unique_chucks/29/0xec3184af01ad86be9b54b6eb88c582bba53f4f65.sol", "function": "addTokenTrust(address)", "lineno": 43, "title": "Multiple Calls", "type": "Information"}, {"address": 1934, "code": "[tadr]);\n     ", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TokenTrust_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nreturndatasize: 0x20\nretval_1795: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_TokenTrust_4: 0xffffffffffffffffffffffffffffffffffffffff\ncallvalue: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_TokenTrust_0: 0x4d4b1a8800000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenTrust: 0x4\n", "description": "A possible integer overflow exists in the function `addTokenTrust(address)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/29/0xec3184af01ad86be9b54b6eb88c582bba53f4f65.sol", "function": "addTokenTrust(address)", "lineno": 45, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1940, "code": "[tadr]);\n     ", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/29/0xec3184af01ad86be9b54b6eb88c582bba53f4f65.sol", "function": "addTokenTrust(address)", "lineno": 45, "title": "State change after external call", "type": "Warning"}, {"address": 2153, "code": "ction () payable public {", "debug": "", "description": "A possible transaction order independence vulnerability exists in function addTokenTrust(address). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/29/0xec3184af01ad86be9b54b6eb88c582bba53f4f65.sol", "function": "addTokenTrust(address)", "lineno": 49, "title": "Transaction order dependence", "type": "Warning"}], "success": true}