{
  "contract": "0xedd7868662f1ae17c53ddaea63469b4c1292ea7c",
  "tool": "mythril",
  "start": 1563610681.9659777,
  "end": 1563610761.3690314,
  "duration": 79.40305376052856,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 5030,
        "code": "  require(reduceBalance(user, token, amount));\n        if (token == address(0)) {\n       ",
        "debug": "",
        "description": "The return value of an external call is not checked. Note that execution continue even if the called contract throws.",
        "filename": "/unique_chucks/17/0xedd7868662f1ae17c53ddaea63469b4c1292ea7c.sol",
        "function": "withdrawAdmin(address,uint256,address,uint256,uint8,bytes32,bytes32)",
        "lineno": 135,
        "title": "Unchecked CALL return value",
        "type": "Informational"
      },
      {
        "address": 5903,
        "code": " }\n\n    modifier onlyAdmin ",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_Token_0: 0x13af403500000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/17/0xedd7868662f1ae17c53ddaea63469b4c1292ea7c.sol",
        "function": "setOwner(address)",
        "lineno": 46,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 6213,
        "code": ");\n        increaseBalance(msg.sender, token, amount);\n        emit Depos",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/17/0xedd7868662f1ae17c53ddaea63469b4c1292ea7c.sol",
        "function": "depositToken(address,uint256)",
        "lineno": 74,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 7021,
        "code": " }\n\n    modifier onlyAdmin ",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_Token_0: 0x4b0bddd200000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/17/0xedd7868662f1ae17c53ddaea63469b4c1292ea7c.sol",
        "function": "setAdmin(address,bool)",
        "lineno": 46,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}