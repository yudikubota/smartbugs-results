{"error": null, "issues": [{"address": 154, "code": "tion Try(string _response) external payable {\n        require(msg.sender == tx.origin);\n        \n        if(responseHash == keccak256(abi.encodePacked(_response)) && msg.value>minBet)\n        {\n            msg.sender.transfer(address(this).balance);\n        }\n    }\n\n    strin", "debug": "calldata_MathTest_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_MathTest_0: 0x3853682c00000000000000000000000000000000000000000000000000000000\ncalldatasize_MathTest: 0x4\n", "description": "A possible integer overflow exists in the function `Try(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/20/0x8be54acd944f301eb0185ea48fe03914d99e83b8.sol", "function": "Try(string)", "lineno": 5, "title": "Integer Overflow ", "type": "Warning"}, {"address": 200, "code": "n, bytes32 _responseHash) public payable onlyQuestionSender {\n        question = _question;\n        responseHash = _responseHash;\n    }\n    \n    function newQuestioner(addres", "debug": "calldata_MathTest_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_MathTest_0: 0x3e3ee85900000000000000000000000000000000000000000000000000000000\ncalldatasize_MathTest: 0x4\n", "description": "A possible integer overflow exists in the function `NewQuestion(string,bytes32)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/20/0x8be54acd944f301eb0185ea48fe03914d99e83b8.sol", "function": "NewQuestion(string,bytes32)", "lineno": 37, "title": "Integer Overflow ", "type": "Warning"}, {"address": 560, "code": "me(string _question,bytes32 _response, uint _count) public payable {\n        if(responseHash==0x0) \n        {\n            responseHash = _response;\n            question = _question;\n            count = _count;\n            questionSender = msg.sender;\n        }\n    }\n    \n    function StopGame() ", "debug": "calldata_MathTest_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_MathTest_0: 0x9995aafd00000000000000000000000000000000000000000000000000000000\ncalldatasize_MathTest: 0x4\n", "description": "A possible integer overflow exists in the function `start_quiz_game(string,bytes32,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/20/0x8be54acd944f301eb0185ea48fe03914d99e83b8.sol", "function": "start_quiz_game(string,bytes32,uint256)", "lineno": 23, "title": "Integer Overflow ", "type": "Warning"}, {"address": 666, "code": "igin);\n  ", "debug": "", "description": "Function Try(string) retrieves the transaction origin (tx.origin) using the ORIGIN opcode. Use msg.sender instead.\nSee also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin", "filename": "/unique_chucks/20/0x8be54acd944f301eb0185ea48fe03914d99e83b8.sol", "function": "Try(string)", "lineno": 6, "title": "Use of tx.origin", "type": "Warning"}, {"address": 740, "code": "odePacked(_response)) && ms", "debug": "calldata_MathTest_4 + calldata_MathTest_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60\norigin: 0x0\ncaller: 0x0\ncalldata_MathTest_0: 0x3853682c00000000000000000000000000000000000000000000000000000000\ncalldatasize_MathTest: 0x4\n", "description": "A possible integer overflow exists in the function `Try(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/20/0x8be54acd944f301eb0185ea48fe03914d99e83b8.sol", "function": "Try(string)", "lineno": 8, "title": "Integer Overflow ", "type": "Warning"}, {"address": 755, "code": "contract MathTest\n{\n ", "debug": "calldata_MathTest_4 + calldata_MathTest_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdf\norigin: 0x0\ncaller: 0x0\ncalldata_MathTest_0: 0x3853682c00000000000000000000000000000000000000000000000000000000\ncalldatasize_MathTest: 0x4\n", "description": "A possible integer underflow exists in the function `Try(string)`.\nThe subtraction may result in a value < 0.", "filename": "/unique_chucks/20/0x8be54acd944f301eb0185ea48fe03914d99e83b8.sol", "function": "Try(string)", "lineno": 3, "title": "Integer Underflow", "type": "Warning"}, {"address": 756, "code": "5;\n\ncontract MathTest\n{\n    func", "debug": "calldata_MathTest_4 + calldata_MathTest_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\norigin: 0x0\ncaller: 0x0\ncalldata_MathTest_0: 0x3853682c00000000000000000000000000000000000000000000000000000000\ncalldatasize_MathTest: 0x4\n", "description": "A possible integer underflow exists in the function `Try(string)`.\nThe subtraction may result in a value < 0.", "filename": "/unique_chucks/20/0x8be54acd944f301eb0185ea48fe03914d99e83b8.sol", "function": "Try(string)", "lineno": 1, "title": "Integer Underflow", "type": "Warning"}, {"address": 1736, "code": ".balance);\n    }\n    \n    function NewQues", "debug": "SOLVER OUTPUT:\nstorage_2: 0x0\ncaller: 0x0\ncalldata_MathTest_0: 0xf50ab24700000000000000000000000000000000000000000000000000000000\ncalldatasize_MathTest: 0x4\n", "description": "In the function `StopGame()` a non-zero amount of Ether is sent to msg.sender.\n\nThere is a check on storage index 2. This storage slot can be written to by calling the function `start_quiz_game(string,bytes32,uint256)`.", "filename": "/unique_chucks/20/0x8be54acd944f301eb0185ea48fe03914d99e83b8.sol", "function": "StopGame()", "lineno": 34, "title": "Ether send", "type": "Warning"}, {"address": 1829, "code": "ntract MathTest\n{\n    function Try(string _response) external payable {\n        require(msg.sender == tx.origin);\n        \n        if(responseHash == keccak256(abi.encodePacked(_response)) && msg.value>minBet)\n        {\n            msg.sender.transfer(address(this).balance);\n        }\n    }\n\n    string public question;\n    uint256 public minBet = count * 2 * 10 finney;\n    \n    address questionSender;\n    \n    bytes32 responseHash;\n \n    uint count;\n    \n    function start_quiz_game(string _question,bytes32 _response, uint _count) public payable {\n        if(responseHash==0x0) \n        {\n            responseHash = _response;\n            question = _question;\n            count = _count;\n            questionSender = msg.sender;\n        }\n    }\n    \n    function StopGame() public payable onlyQuestionSender {\n       msg.sender.transfer(address(this).balance);\n    }\n    \n    function NewQuestion(string _question, bytes32 _responseHash) public payable onlyQuestionSender {\n        question = _question;\n        responseHash = _responseHash;\n    }\n    \n    function newQuestioner(address newAddress) public onlyQuestionSender{\n        questionSender = newAddress;\n    }\n    \n    modifier onlyQuestionSender(){\n        require(msg.sender==questionSender);\n        _;\n    }\n    \n    function() public payable{}\n}", "debug": "calldata_MathTest_4 + calldata_MathTest_4: 0x8000000000000000000000000000000000000000000000000000000000000000\ncalldata_MathTest_0: 0x9995aafd00000000000000000000000000000000000000000000000000000000\ncalldatasize_MathTest: 0x4\nstorage_3: 0x0\n", "description": "A possible integer overflow exists in the function `start_quiz_game(string,bytes32,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/20/0x8be54acd944f301eb0185ea48fe03914d99e83b8.sol", "function": "start_quiz_game(string,bytes32,uint256)", "lineno": 3, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1843, "code": "ntract MathTest\n{\n    function Try(string _response) external payable {\n        require(msg.sender == tx.origin);\n        \n        if(responseHash == keccak256(abi.encodePacked(_response)) && msg.value>minBet)\n        {\n            msg.sender.transfer(address(this).balance);\n        }\n    }\n\n    string public question;\n    uint256 public minBet = count * 2 * 10 finney;\n    \n    address questionSender;\n    \n    bytes32 responseHash;\n \n    uint count;\n    \n    function start_quiz_game(string _question,bytes32 _response, uint _count) public payable {\n        if(responseHash==0x0) \n        {\n            responseHash = _response;\n            question = _question;\n            count = _count;\n            questionSender = msg.sender;\n        }\n    }\n    \n    function StopGame() public payable onlyQuestionSender {\n       msg.sender.transfer(address(this).balance);\n    }\n    \n    function NewQuestion(string _question, bytes32 _responseHash) public payable onlyQuestionSender {\n        question = _question;\n        responseHash = _responseHash;\n    }\n    \n    function newQuestioner(address newAddress) public onlyQuestionSender{\n        questionSender = newAddress;\n    }\n    \n    modifier onlyQuestionSender(){\n        require(msg.sender==questionSender);\n        _;\n    }\n    \n    function() public payable{}\n}", "debug": "calldata_MathTest_4 + calldata_MathTest_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\ncalldata_MathTest_0: 0x9995aafd00000000000000000000000000000000000000000000000000000000\ncalldatasize_MathTest: 0x4\nstorage_3: 0x0\n", "description": "A possible integer overflow exists in the function `start_quiz_game(string,bytes32,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/20/0x8be54acd944f301eb0185ea48fe03914d99e83b8.sol", "function": "start_quiz_game(string,bytes32,uint256)", "lineno": 3, "title": "Integer Overflow ", "type": "Warning"}], "success": true}