{
  "contract": "0x6cc9505ae1a300d276d307cfdcc38f4e8850ac8c",
  "tool": "mythril",
  "start": 1563663262.7289567,
  "end": 1563663357.4719365,
  "duration": 94.74297976493835,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 321,
        "code": "56 returnWei = 0;\n        \n    ",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_5: 0x8000\ncalldatasize_UHCToken: 0x3\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/30/0x6cc9505ae1a300d276d307cfdcc38f4e8850ac8c.sol",
        "function": "fallback",
        "lineno": 274,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2810,
        "code": "  ass",
        "debug": "callvalue: 0x348001fbc9fe3c366946a0727d04e13e7c0312f6c90f915e54d17fed14ab651a\nstorage_5: 0x100\nstorage_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldatasize_UHCToken: 0x3\n",
        "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/30/0x6cc9505ae1a300d276d307cfdcc38f4e8850ac8c.sol",
        "function": "fallback",
        "lineno": 15,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2871,
        "code": "eturn",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_UHCToken_32_+_4: 0xc050fffff320c00020003d81af848540000000000000040000110001bd062022\ncalldata_UHCToken_32 + 36: 0xfe51000008ce80008001c1d33616877ffffffffffffff7ffffe10000398d50ac\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xfe51000008ce80008001c1d33616877ffffffffffffff7ffffe10000398d50ac\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_UHCToken_4: 0xfe51000008ce80008001c1d33616877ffffffffffffff7ffffe10000398d50ac\ncalldata_UHCToken_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_UHCToken_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_UHCToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `transferFrom(address,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/30/0x6cc9505ae1a300d276d307cfdcc38f4e8850ac8c.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 43,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2884,
        "code": "\n/**\n * @title",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_UHCToken_32_+_4: 0xd32ba62e013a1e544c40f8298f8c838ef0ca495e903244487f8ba1f8c2a013e7\ncalldata_UHCToken_32 + 36: 0x53632f08ddbb360427befb69cb0d577a76825c1eb02b4cefbf971939ae256117\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x53632f08ddbb360427befb69cb0d577a76825c1eb02b4cefbf971939ae256117\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_UHCToken_4: 0x53632f08ddbb360427befb69cb0d577a76825c1eb02b4cefbf971939ae256117\ncalldata_UHCToken_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_UHCToken_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_UHCToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/30/0x6cc9505ae1a300d276d307cfdcc38f4e8850ac8c.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 45,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 5075,
        "code": "er] = balances[owner].add(rem",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_5: 0x8000\ncaller: 0x80\ncalldata_UHCToken_0: 0x89311e6f00000000000000000000000000000000000000000000000000000000\ncalldatasize_UHCToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/30/0x6cc9505ae1a300d276d307cfdcc38f4e8850ac8c.sol",
        "function": "startIco()",
        "lineno": 310,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 5295,
        "debug": "The exception is triggered under the following conditions:\n\nstorage_5: 0x8000\ncaller: 0x80\ncalldata_UHCToken_0: 0x903a3ef600000000000000000000000000000000000000000000000000000000\ncalldatasize_UHCToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/30/0x6cc9505ae1a300d276d307cfdcc38f4e8850ac8c.sol",
        "function": "finalizeIco()",
        "lineno": 331,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 7317,
        "code": "HC Token\n **/\ncontract UHCToken is Cr",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function finalizeIco(). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/30/0x6cc9505ae1a300d276d307cfdcc38f4e8850ac8c.sol",
        "function": "finalizeIco()",
        "lineno": 325,
        "title": "Transaction order dependence",
        "type": "Warning"
      }
    ],
    "success": true
  }
}