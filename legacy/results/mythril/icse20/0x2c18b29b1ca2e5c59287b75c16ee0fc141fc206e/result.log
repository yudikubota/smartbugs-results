{"error": null, "issues": [{"address": 158, "code": "ken, address[] to, uint256[] value) onlyOwner public {\n    for (uint256 i = 0; i < to.length; i++) {\n      token.transfer(to[i], value[i]);\n    }\n  }\n}", "debug": "calldata_TokenERC20_32 + 4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_TokenERC20_0: 0x7da5efc800000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenERC20: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `_function_0x7da5efc8`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x2c18b29b1ca2e5c59287b75c16ee0fc141fc206e.sol", "function": "_function_0x7da5efc8", "lineno": 28, "title": "Integer Overflow ", "type": "Warning"}, {"address": 619, "debug": "The exception is triggered under the following conditions:\n\ncalldata_TokenERC20_4 + calldata_TokenERC20_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_0: 0x0\ncaller: 0x0\ncalldata_TokenERC20_0: 0x7da5efc800000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenERC20: 0x4\nmem_128 +\n32 +\n32*calldata_TokenERC20_4 + calldata_TokenERC20_32 + 4: 0x0\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_contracts/0x2c18b29b1ca2e5c59287b75c16ee0fc141fc206e.sol", "function": "_function_0x7da5efc8", "lineno": 33, "title": "Exception state", "type": "Informational"}, {"address": 766, "code": "]);\n    }\n  }\n}", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_contracts/0x2c18b29b1ca2e5c59287b75c16ee0fc141fc206e.sol", "function": "_function_0x7da5efc8", "lineno": 30, "title": "Message call to external contract", "type": "Warning"}, {"address": 766, "code": "]);\n    }\n  }\n}", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 766\nCall at address: 766\n", "filename": "/unique_contracts/0x2c18b29b1ca2e5c59287b75c16ee0fc141fc206e.sol", "function": "_function_0x7da5efc8", "lineno": 30, "title": "Multiple Calls", "type": "Information"}], "success": true}