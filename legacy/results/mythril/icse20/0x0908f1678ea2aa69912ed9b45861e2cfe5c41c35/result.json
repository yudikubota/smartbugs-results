{
  "contract": "0x0908f1678ea2aa69912ed9b45861e2cfe5c41c35",
  "tool": "mythril",
  "start": 1563595636.8452327,
  "end": 1563595680.8053796,
  "duration": 43.9601469039917,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 656,
        "code": "state = State.Fundraising;\n    \n    ma",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0xfe00\ncalldata_token_0: 0xc19d93fb00000000000000000000000000000000000000000000000000000000\ncalldatasize_token: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/21/0x0908f1678ea2aa69912ed9b45861e2cfe5c41c35.sol",
        "function": "_function_0xc19d93fb",
        "lineno": 14,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 882,
        "code": "   }\n    modifi",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0xfe00\ncallvalue: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_token_0: 0x2d05cbf00000000000000000000000000000000000000000000000000000000\ncalldatasize_token: 0x4\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/21/0x0908f1678ea2aa69912ed9b45861e2cfe5c41c35.sol",
        "function": "fallback",
        "lineno": 42,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 1364,
        "code": "alRaised;\n\n        LogContribut",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xfd2cb99b3beea660e85b6125b0d3d00a3bb00dda4c77eb95c887ca822b5dbb7d\ncallvalue: 0x7fa13e5842094b7295c899a855eb160b614ba01906f7092180174c06a2523a71\nstorage_0: 0x0\ncalldata_token_0: 0xf00000000000000000000000000000000000000000000000000000000\ncalldatasize_token: 0x4\nstorage_2: 0x0\n",
        "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/21/0x0908f1678ea2aa69912ed9b45861e2cfe5c41c35.sol",
        "function": "fallback",
        "lineno": 98,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1380,
        "code": "ted (msg.sender, balance",
        "debug": "storage_3: 0xfd2cb99b3beea660e85b6125b0d3d00a3bb00dda4c77eb95c887ca822b5dbb7d\ncallvalue: 0x7fa13e5842094b7295c899a855eb160b614ba01906f7092180174c06a2523a71\nstorage_0: 0x0\ncalldata_token_0: 0xf00000000000000000000000000000000000000000000000000000000\ncalldatasize_token: 0x4\nstorage_2: 0x0\n",
        "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/21/0x0908f1678ea2aa69912ed9b45861e2cfe5c41c35.sol",
        "function": "fallback",
        "lineno": 100,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2000,
        "code": "   }\n    modifi",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0xfe00\ncalldata_token_0: 0xbef4876b00000000000000000000000000000000000000000000000000000000\ncalldatasize_token: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/21/0x0908f1678ea2aa69912ed9b45861e2cfe5c41c35.sol",
        "function": "finished()",
        "lineno": 42,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2118,
        "code": "emoveContract()\n    public\n   ",
        "debug": "",
        "description": "In the function `checkIfFundingCompleteOrExpired()` the following predictable state variables are used to determine Ether recipient:\n- block.timestamp\n",
        "filename": "/unique_chucks/21/0x0908f1678ea2aa69912ed9b45861e2cfe5c41c35.sol",
        "function": "checkIfFundingCompleteOrExpired()",
        "lineno": 161,
        "title": "Dependence on predictable environment variable",
        "type": "Warning"
      },
      {
        "address": 2340,
        "code": "   }\n    modifi",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0xfe00\ncalldata_token_0: 0xc205240300000000000000000000000000000000000000000000000000000000\ncalldatasize_token: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/21/0x0908f1678ea2aa69912ed9b45861e2cfe5c41c35.sol",
        "function": "payOut()",
        "lineno": 42,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2977,
        "code": "          LogContributorsPayout(a",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0x100\nstorage_29102676481673041902632991033461445430619272659676223336789171408008386403022: 0x0\nstorage_2: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_8: 0xffffffffffffffffffffffffffffffffffffffff00\ncaller: 0x0\ncalldata_token_0: 0xc205240300000000000000000000000000000000000000000000000000000000\ncalldatasize_token: 0x4\nstorage_3: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/21/0x0908f1678ea2aa69912ed9b45861e2cfe5c41c35.sol",
        "function": "payOut()",
        "lineno": 143,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3250,
        "code": "            }\n        }\n    }\n\n  ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/21/0x0908f1678ea2aa69912ed9b45861e2cfe5c41c35.sol",
        "function": "payOut()",
        "lineno": 146,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 3544,
        "code": "urs < now)) {\n           ",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0xfe00\nstorage_8: 0x0\ncaller: 0x0\ncalldata_token_0: 0xfe389e0900000000000000000000000000000000000000000000000000000000\ncalldatasize_token: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/21/0x0908f1678ea2aa69912ed9b45861e2cfe5c41c35.sol",
        "function": "removeContract()",
        "lineno": 48,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}