{"error": null, "issues": [{"address": 464, "code": "g.sender);\n            h.deed.closeDeed(1000);\n        }\n\n        HashInvalidated(hash, unhashedName, h.value, h.registrationDate);\n\n        h.value = 0;\n        h.highestBid = 0;\n        h.deed = Deed(0);\n    }\n\n    /**\n     * @dev Allows anyone to delete the owner and resolver records for a (subdomain of) a\n     *      name that is not currently owned in the registrar. If passing, eg, 'foo.bar.eth',\n     *      the owner and resolver fields on 'foo.bar.eth' and 'bar.eth' will all be cleared.\n     * @param labels A series of label hashes identifying the name to zero out, rooted at the\n     *        registrar's root. Must contain at least one element. For instance, to zero \n     *        'foo.bar.eth' on a registrar that owns '.eth'", "debug": "calldata_Registrar_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_Registrar_0: 0x15f7333100000000000000000000000000000000000000000000000000000000\ncalldatasize_Registrar: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `invalidateName(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/1/0x6090a6e47849629b7245dfa1ca21d94cd15878ef.sol", "function": "invalidateName(string)", "lineno": 523, "title": "Integer Overflow ", "type": "Warning"}, {"address": 476, "code": "g.sender);\n            h.deed.closeDeed(1000);\n        }\n\n        HashInvalidated(hash, unhashedName, h.value, h.registrationDate);\n\n        h.value = 0;\n        h.highestBid = 0;\n        h.deed = Deed(0);\n    }\n\n    /**\n     * @dev Allows anyone to delete the owner and resolver records for a (subdomain of) a\n     *      name that is not currently owned in the registrar. If passing, eg, 'foo.bar.eth',\n     *      the owner and resolver fields on 'foo.bar.eth' and 'bar.eth' will all be cleared.\n     * @param labels A series of label hashes identifying the name to zero out, rooted at the\n     *        registrar's root. Must contain at least one element. For instance, to zero \n     *        'foo.bar.eth' on a registrar that owns '.eth'", "debug": "calldata_Registrar_4 + calldata_Registrar_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8\ncalldata_Registrar_0: 0x15f7333100000000000000000000000000000000000000000000000000000000\ncalldatasize_Registrar: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `invalidateName(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/1/0x6090a6e47849629b7245dfa1ca21d94cd15878ef.sol", "function": "invalidateName(string)", "lineno": 523, "title": "Integer Overflow ", "type": "Warning"}, {"address": 485, "code": "g.sender);\n            h.deed.closeDeed(1000);\n        }\n\n        HashInvalidated(hash, unhashedName, h.value, h.registrationDate);\n\n        h.value = 0;\n        h.highestBid = 0;\n        h.deed = Deed(0);\n    }\n\n    /**\n     * @dev Allows anyone to delete the owner and resolver records for a (subdomain of) a\n     *      name that is not currently owned in the registrar. If passing, eg, 'foo.bar.eth',\n     *      the owner and resolver fields on 'foo.bar.eth' and 'bar.eth' will all be cleared.\n     * @param labels A series of label hashes identifying the name to zero out, rooted at the\n     *        registrar's root. Must contain at least one element. For instance, to zero \n     *        'foo.bar.eth' on a registrar that owns '.eth'", "debug": "calldata_Registrar_4 + calldata_Registrar_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc1\ncalldata_Registrar_0: 0x15f7333100000000000000000000000000000000000000000000000000000000\ncalldatasize_Registrar: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `invalidateName(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/1/0x6090a6e47849629b7245dfa1ca21d94cd15878ef.sol", "function": "invalidateName(string)", "lineno": 523, "title": "Integer Overflow ", "type": "Warning"}, {"address": 491, "code": "g.sender);\n            h.deed.closeDeed(1000);\n        }\n\n        HashInvalidated(hash, unhashedName, h.value, h.registrationDate);\n\n        h.value = 0;\n        h.highestBid = 0;\n        h.deed = Deed(0);\n    }\n\n    /**\n     * @dev Allows anyone to delete the owner and resolver records for a (subdomain of) a\n     *      name that is not currently owned in the registrar. If passing, eg, 'foo.bar.eth',\n     *      the owner and resolver fields on 'foo.bar.eth' and 'bar.eth' will all be cleared.\n     * @param labels A series of label hashes identifying the name to zero out, rooted at the\n     *        registrar's root. Must contain at least one element. For instance, to zero \n     *        'foo.bar.eth' on a registrar that owns '.eth'", "debug": "calldata_Registrar_4 + calldata_Registrar_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff41\ncalldata_Registrar_0: 0x15f7333100000000000000000000000000000000000000000000000000000000\ncalldatasize_Registrar: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `invalidateName(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/1/0x6090a6e47849629b7245dfa1ca21d94cd15878ef.sol", "function": "invalidateName(string)", "lineno": 523, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2396, "code": "dress(this)) throw;\n        ", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/1/0x6090a6e47849629b7245dfa1ca21d94cd15878ef.sol", "function": "releaseDeed(bytes32)", "lineno": 188, "title": "Message call to external contract", "type": "Warning"}, {"address": 2396, "code": "dress(this)) throw;\n        ", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2778\n", "filename": "/unique_chucks/1/0x6090a6e47849629b7245dfa1ca21d94cd15878ef.sol", "function": "releaseDeed(bytes32)", "lineno": 188, "title": "Multiple Calls", "type": "Information"}, {"address": 2589, "code": " way to force it into being ", "debug": "timestamp: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffcab53e\nstorage_1 +\nkeccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\ncalldata_Registrar_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8eac40\nretval_2396: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\nreturndatasize: 0x20\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_3 +\nkeccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\ncalldata_Registrar_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffcab53d\ncalldata_Registrar_4: 0x0\ncalldata_Registrar_0: 0x230a07c00000000000000000000000000000000000000000000000000000000\ncalldatasize_Registrar: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `releaseDeed(bytes32)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/1/0x6090a6e47849629b7245dfa1ca21d94cd15878ef.sol", "function": "releaseDeed(bytes32)", "lineno": 505, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2778, "code": "ructured\n     * in ", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/1/0x6090a6e47849629b7245dfa1ca21d94cd15878ef.sol", "function": "releaseDeed(bytes32)", "lineno": 505, "title": "Message call to external contract", "type": "Informational"}, {"address": 2877, "code": "me An inval", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/1/0x6090a6e47849629b7245dfa1ca21d94cd15878ef.sol", "function": "releaseDeed(bytes32)", "lineno": 507, "title": "State change after external call", "type": "Warning"}, {"address": 2887, "code": "search for in th", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/1/0x6090a6e47849629b7245dfa1ca21d94cd15878ef.sol", "function": "releaseDeed(bytes32)", "lineno": 507, "title": "State change after external call", "type": "Warning"}, {"address": 2955, "code": "\n     *\n     */\n", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/1/0x6090a6e47849629b7245dfa1ca21d94cd15878ef.sol", "function": "releaseDeed(bytes32)", "lineno": 507, "title": "State change after external call", "type": "Warning"}, {"address": 3209, "code": "/\n    function trySetSubnodeOwner(bytes32 _hash, address", "debug": "storage_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffb8028\ncalldata_Registrar_4: 0x714d238b1918927a49a5d04473d2654600000000000000000000000000000000\ncalldata_Registrar_0: 0x79ce9fac00000000000000000000000000000000000000000000000000000000\ncalldatasize_Registrar: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `transfer(bytes32,address)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/1/0x6090a6e47849629b7245dfa1ca21d94cd15878ef.sol", "function": "transfer(bytes32,address)", "lineno": 294, "title": "Integer Overflow ", "type": "Warning"}, {"address": 4888, "code": "Auction(bytes32 _h", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/1/0x6090a6e47849629b7245dfa1ca21d94cd15878ef.sol", "function": "cancelBid(address,bytes32)", "lineno": 459, "title": "Message call to external contract", "type": "Warning"}, {"address": 4888, "code": "Auction(bytes32 _h", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 5253\nCall at address: 5117\n", "filename": "/unique_chucks/1/0x6090a6e47849629b7245dfa1ca21d94cd15878ef.sol", "function": "cancelBid(address,bytes32)", "lineno": 459, "title": "Multiple Calls", "type": "Information"}, {"address": 5117, "code": "ngle bidder (h.value is ", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/1/0x6090a6e47849629b7245dfa1ca21d94cd15878ef.sol", "function": "cancelBid(address,bytes32)", "lineno": 462, "title": "Message call to external contract", "type": "Warning"}, {"address": 5117, "code": "ngle bidder (h.value is ", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 5253\n", "filename": "/unique_chucks/1/0x6090a6e47849629b7245dfa1ca21d94cd15878ef.sol", "function": "cancelBid(address,bytes32)", "lineno": 462, "title": "Multiple Calls", "type": "Information"}, {"address": 5253, "code": "   h.value =  ma", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/1/0x6090a6e47849629b7245dfa1ca21d94cd15878ef.sol", "function": "cancelBid(address,bytes32)", "lineno": 463, "title": "Message call to external contract", "type": "Warning"}, {"address": 5425, "code": "minPrice);\n        h.deed.setBalan", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/1/0x6090a6e47849629b7245dfa1ca21d94cd15878ef.sol", "function": "cancelBid(address,bytes32)", "lineno": 463, "title": "State change after external call", "type": "Warning"}, {"address": 6156, "code": " else if (v", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/1/0x6090a6e47849629b7245dfa1ca21d94cd15878ef.sol", "function": "unsealBid(bytes32,uint256,bytes32)", "lineno": 402, "title": "Message call to external contract", "type": "Warning"}, {"address": 6156, "code": " else if (v", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 6346\nCall at address: 6346\n", "filename": "/unique_chucks/1/0x6090a6e47849629b7245dfa1ca21d94cd15878ef.sol", "function": "unsealBid(bytes32,uint256,bytes32)", "lineno": 402, "title": "Multiple Calls", "type": "Information"}, {"address": 6346, "code": "ice || bid.creationDate() >", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/1/0x6090a6e47849629b7245dfa1ca21d94cd15878ef.sol", "function": "unsealBid(bytes32,uint256,bytes32)", "lineno": 402, "title": "Message call to external contract", "type": "Warning"}, {"address": 9406, "code": "e {\n            if(entry.highestBid =", "debug": "timestamp: 0x2\nstorage_1 +\nkeccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\ncalldata_Registrar_4: 0x3\nstorage_4: 0x1\ncalldata_Registrar_4: 0x0\ncalldata_Registrar_0: 0x61d585da00000000000000000000000000000000000000000000000000000000\ncalldatasize_Registrar: 0x4\ncallvalue: 0x0\n", "description": "A possible integer underflow exists in the function `state(bytes32)`.\nThe subtraction may result in a value < 0.", "filename": "/unique_chucks/1/0x6090a6e47849629b7245dfa1ca21d94cd15878ef.sol", "function": "state(bytes32)", "lineno": 168, "title": "Integer Underflow", "type": "Warning"}], "success": true}