{"error": null, "issues": [{"address": 277, "code": "tPhase = Phase.Created;\n    \n    address ", "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0x8000\ncalldata_ATP_0: 0x55ad42e00000000000000000000000000000000000000000000000000000000\ncalldatasize_ATP: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/7/0x6d85320c086aee2ecd2693855fb2164c494fd251.sol", "function": "_function_0x055ad42e", "lineno": 20, "title": "Exception state", "type": "Informational"}, {"address": 1405, "code": "quire(msg.value != 0);\n      ", "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0x8000\ncalldata_ATP_0: 0xe00000000000000000000000000000000000000000000000000000000\ncalldatasize_ATP: 0x4\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/7/0x6d85320c086aee2ecd2693855fb2164c494fd251.sol", "function": "fallback", "lineno": 44, "title": "Exception state", "type": "Informational"}, {"address": 1439, "code": "y + tokenAmount <", "debug": "callvalue: 0xacfa1b45a98dc1e6d5842751100489b48e5f0b6e950827952cb014e20ddcca0f\nstorage_0: 0x100\ncalldatasize_ATP: 0x3\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/7/0x6d85320c086aee2ecd2693855fb2164c494fd251.sol", "function": "fallback", "lineno": 47, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1541, "code": "pply += tokenAmount;\n        Bu", "debug": "storage_3: 0x693d243f895fed6acd573d1a621968863f525df67c5adffc79000214007ed387\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xaa34141df85bfe88405b208be0f94006376c3e282278efa640f701effffb3502\ncallvalue: 0x337fa01e4a3f2d275440351b526f7974d5cca30bada188400e79280a0103244c\nstorage_0: 0x100\ncalldatasize_ATP: 0x3\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/7/0x6d85320c086aee2ecd2693855fb2164c494fd251.sol", "function": "fallback", "lineno": 50, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1557, "code": "okenAmount);\n    }\n    \n  ", "debug": "storage_3: 0xaf531d3faf907b3d3a8232e5edefceb5f3b81f0ebf84f4771c9dff23081fd5d\ncallvalue: 0xafe21ccbdf90fef88c002c8a4cdd9815d6c00247000a288949cabace275d41ea\nstorage_0: 0x100\ncalldatasize_ATP: 0x3\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/7/0x6d85320c086aee2ecd2693855fb2164c494fd251.sol", "function": "fallback", "lineno": 51, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1858, "code": "          || (currentPhase ==", "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0x8000\ncaller: 0x80\ncalldata_ATP_0: 0x1ca2e94a00000000000000000000000000000000000000000000000000000000\ncalldatasize_ATP: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/7/0x6d85320c086aee2ecd2693855fb2164c494fd251.sol", "function": "_function_0x1ca2e94a", "lineno": 66, "title": "Exception state", "type": "Informational"}, {"address": 1891, "code": "se.Running && _nextPhase ==", "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0x0\ncalldata_ATP_4: 0x80\ncaller: 0x0\ncalldata_ATP_0: 0x1ca2e94a00000000000000000000000000000000000000000000000000000000\ncalldatasize_ATP: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/7/0x6d85320c086aee2ecd2693855fb2164c494fd251.sol", "function": "_function_0x1ca2e94a", "lineno": 66, "title": "Exception state", "type": "Informational"}, {"address": 1971, "code": "e.Running || currentPhase ", "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0x100\ncalldata_ATP_4: 0x80\ncaller: 0x1\ncalldata_ATP_0: 0x1ca2e94a00000000000000000000000000000000000000000000000000000000\ncalldatasize_ATP: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/7/0x6d85320c086aee2ecd2693855fb2164c494fd251.sol", "function": "_function_0x1ca2e94a", "lineno": 67, "title": "Exception state", "type": "Informational"}, {"address": 2694, "code": "   function withdrawEther() pub", "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0x8000\ncaller: 0x80\ncalldata_ATP_0: 0x4defd1bf00000000000000000000000000000000000000000000000000000000\ncalldatasize_ATP: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/7/0x6d85320c086aee2ecd2693855fb2164c494fd251.sol", "function": "setCrowdsaleManager(address)", "lineno": 84, "title": "Exception state", "type": "Informational"}, {"address": 3299, "code": "ire(tokens > 0);\n        \n     ", "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0x8000\nstorage_2: 0x0\ncaller: 0x0\ncalldata_ATP_0: 0xb237f7d400000000000000000000000000000000000000000000000000000000\ncalldatasize_ATP: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/7/0x6d85320c086aee2ecd2693855fb2164c494fd251.sol", "function": "burnTokens(address)", "lineno": 99, "title": "Exception state", "type": "Informational"}, {"address": 3471, "code": "    currentPhase = Ph", "debug": "storage_0: 0x300\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_ATP_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_3: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_2: 0x0\ncaller: 0x0\ncalldata_ATP_0: 0xb237f7d400000000000000000000000000000000000000000000000000000000\ncalldatasize_ATP: 0x4\ncallvalue: 0x0\n", "description": "A possible integer underflow exists in the function `burnTokens(address)`.\nThe subtraction may result in a value < 0.", "filename": "/unique_chucks/7/0x6d85320c086aee2ecd2693855fb2164c494fd251.sol", "function": "burnTokens(address)", "lineno": 106, "title": "Integer Underflow", "type": "Warning"}], "success": true}