{
  "contract": "0x3adfc4999f77d04c8341bac5f3a76f58dff5b37a",
  "tool": "mythril",
  "start": 1563474645.7163398,
  "end": 1563474669.071396,
  "duration": 23.355056285858154,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 4227,
        "debug": "storage_75506153327051474587906755573858019282972751592871715030499431892688993766217: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_Token_4: 0x57f25cd000000000000000000000000000000000000000000000000000000000\nstorage_3: 0x0\ncaller: 0x0\ncalldata_Token_0: 0x89afcb4400000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `burn(address)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/3/0x3adfc4999f77d04c8341bac5f3a76f58dff5b37a.sol",
        "function": "burn(address)",
        "lineno": 593,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 6409,
        "code": " a);\n",
        "debug": "calldata_Token_32 + 4: 0x57f25cd000000000000000000000000000000000000000000000000000000000\nstorage_0: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_3: 0x0\ncaller: 0x0\ncalldata_Token_0: 0x40c10f1900000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `mint(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/3/0x3adfc4999f77d04c8341bac5f3a76f58dff5b37a.sol",
        "function": "mint(address,uint256)",
        "lineno": 24,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 6422,
        "code": "urn c;\n  }\n}\n\n",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_Token_4: 0x1\ncalldata_Token_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_Token_0: 0xd73dd62300000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/3/0x3adfc4999f77d04c8341bac5f3a76f58dff5b37a.sol",
        "function": "_function_0xd73dd623",
        "lineno": 25,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 6446,
        "code": "   return a - ",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_Token_4: 0x0\ncalldata_Token_32 + 36: 0x1\ncalldata_Token_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\nstorage_3: 0xff00\ncalldata_Token_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/3/0x3adfc4999f77d04c8341bac5f3a76f58dff5b37a.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 19,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}