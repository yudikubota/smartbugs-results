{
  "contract": "0x0b71bee14c6fb53ac5d452e429d57f5020106d3e",
  "tool": "mythril",
  "start": 1563705497.6181204,
  "end": 1563705530.8997483,
  "duration": 33.281627893447876,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 2546,
        "code": "ss);\n    ",
        "debug": "",
        "description": "Function register() retrieves the transaction origin (tx.origin) using the ORIGIN opcode. Use msg.sender instead.\nSee also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin",
        "filename": "/unique_chucks/39/0x0b71bee14c6fb53ac5d452e429d57f5020106d3e.sol",
        "function": "register()",
        "lineno": 379,
        "title": "Use of tx.origin",
        "type": "Warning"
      },
      {
        "address": 2840,
        "code": "d(ninetyPercent);\n        givethPool = givethPool.add(fivePerc",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/39/0x0b71bee14c6fb53ac5d452e429d57f5020106d3e.sol",
        "function": "register()",
        "lineno": 381,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 2925,
        "code": "l  = adminPool.add(fivePercent);\n        emit Registration(_",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/39/0x0b71bee14c6fb53ac5d452e429d57f5020106d3e.sol",
        "function": "register()",
        "lineno": 383,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 3013,
        "code": "ress);\n    }\n\n    // Make a prediction fo",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/39/0x0b71bee14c6fb53ac5d452e429d57f5020106d3e.sol",
        "function": "register()",
        "lineno": 384,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 3105,
        "code": "n example would be makePrediction(1, \"D",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/39/0x0b71bee14c6fb53ac5d452e429d57f5020106d3e.sol",
        "function": "register()",
        "lineno": 387,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 3116,
        "code": ";\n\n/*\n\nETHEREUM WO",
        "debug": "storage_11: 0x7ffffffbfffffe6979788d28177fffffffffffffffffffffffffffffffffffff\nstorage_18: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nreturndatasize: 0x20\nretval_2840: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncaller: 0x0\norigin: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncalldata_ZeroBTCWorldCup_0: 0x1aa3a00800000000000000000000000000000000000000000000000000000000\ncalldatasize_ZeroBTCWorldCup: 0x4\n",
        "description": "A possible integer overflow exists in the function `register()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/39/0x0b71bee14c6fb53ac5d452e429d57f5020106d3e.sol",
        "function": "register()",
        "lineno": 1,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 3119,
        "code": "CUP : 14th June - 15th ",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/39/0x0b71bee14c6fb53ac5d452e429d57f5020106d3e.sol",
        "function": "register()",
        "lineno": 5,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 3206,
        "code": "/   if you anticipate a draw in t",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/39/0x0b71bee14c6fb53ac5d452e429d57f5020106d3e.sol",
        "function": "register()",
        "lineno": 388,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 4756,
        "code": "ngth) minLength = b.length;\n        for ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/39/0x0b71bee14c6fb53ac5d452e429d57f5020106d3e.sol",
        "function": "pullRipCord()",
        "lineno": 724,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 9447,
        "code": "       public\n        returns (int16)\n ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/39/0x0b71bee14c6fb53ac5d452e429d57f5020106d3e.sol",
        "function": "seekApproval()",
        "lineno": 436,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 13773,
        "debug": "storage_11: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nreturndatasize: 0x20\nretval_2840: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncaller: 0x0\norigin: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncalldata_ZeroBTCWorldCup_0: 0x1aa3a00800000000000000000000000000000000000000000000000000000000\ncalldatasize_ZeroBTCWorldCup: 0x4\n",
        "description": "A possible integer overflow exists in the function `register()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/39/0x0b71bee14c6fb53ac5d452e429d57f5020106d3e.sol",
        "function": "register()",
        "lineno": 797,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 13786,
        "debug": "The exception is triggered under the following conditions:\n\nstorage_11: 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nreturndatasize: 0x20\nretval_2840: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncaller: 0x0\norigin: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncalldata_ZeroBTCWorldCup_0: 0x1aa3a00800000000000000000000000000000000000000000000000000000000\ncalldatasize_ZeroBTCWorldCup: 0x4\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/39/0x0b71bee14c6fb53ac5d452e429d57f5020106d3e.sol",
        "function": "register()",
        "lineno": 797,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 13816,
        "debug": "The exception is triggered under the following conditions:\n\nstorage_8: 0x1\nstorage_9: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncaller: 0x4f4ebf556cfdc21c3424f85ff6572c77c514fcae\ncalldata_ZeroBTCWorldCup_0: 0x9b1dd3e500000000000000000000000000000000000000000000000000000000\ncalldatasize_ZeroBTCWorldCup: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/39/0x0b71bee14c6fb53ac5d452e429d57f5020106d3e.sol",
        "function": "pullRipCord()",
        "lineno": 797,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}