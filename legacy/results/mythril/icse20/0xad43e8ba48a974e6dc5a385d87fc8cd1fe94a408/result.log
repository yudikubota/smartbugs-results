{"error": null, "issues": [{"address": 310, "code": "           //save users eth val", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xfffffffffffffffffffffffffffffffffffffffffffffffff653d3013038a9fd\ncallvalue: 0x17802b7dbbc52c81\nstorage_5: 0x0\ncalldata_token_0: 0x100000000000000000000000000000000000000000000000000000000\ncalldatasize_token: 0x4\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/9/0xad43e8ba48a974e6dc5a385d87fc8cd1fe94a408.sol", "function": "fallback", "lineno": 73, "title": "Integer Overflow ", "type": "Warning"}, {"address": 326, "code": "          //update tot", "debug": "callvalue: 0x17802b7dbbc52c81\nstorage_1: 0xfffffffffffffffffffffffffffffffffffffffffffffffff653d3013038a9fd\nstorage_5: 0x0\ncalldata_token_0: 0x100000000000000000000000000000000000000000000000000000000\ncalldatasize_token: 0x4\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/9/0xad43e8ba48a974e6dc5a385d87fc8cd1fe94a408.sol", "function": "fallback", "lineno": 74, "title": "Integer Overflow ", "type": "Warning"}, {"address": 350, "code": "e user's token", "debug": "The exception is triggered under the following conditions:\n\ncallvalue: 0x80001\nstorage_5: 0x0\ncalldata_token_0: 0x100000000000000000000000000000000000000000000000000000000\ncalldatasize_token: 0x4\nstorage_4: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/9/0xad43e8ba48a974e6dc5a385d87fc8cd1fe94a408.sol", "function": "fallback", "lineno": 75, "title": "Exception state", "type": "Informational"}, {"address": 555, "code": "        //send tokens to user\n        soldTo", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/9/0xad43e8ba48a974e6dc5a385d87fc8cd1fe94a408.sol", "function": "fallback", "lineno": 76, "title": "Message call to external contract", "type": "Informational"}, {"address": 555, "code": "        //send tokens to user\n        soldTo", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 803\n", "filename": "/unique_chucks/9/0xad43e8ba48a974e6dc5a385d87fc8cd1fe94a408.sol", "function": "fallback", "lineno": 76, "title": "Multiple Calls", "type": "Information"}, {"address": 591, "code": "       //update total sold toke", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/9/0xad43e8ba48a974e6dc5a385d87fc8cd1fe94a408.sol", "function": "fallback", "lineno": 77, "title": "State change after external call", "type": "Warning"}, {"address": 2064, "code": "\n\n    /**\n     * Return unsold tokens t", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/9/0xad43e8ba48a974e6dc5a385d87fc8cd1fe94a408.sol", "function": "getUnsoldTokens(uint256)", "lineno": 48, "title": "Message call to external contract", "type": "Informational"}, {"address": 2420, "code": "*\n     * Close/Open crowdsale\n     */\n ", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/9/0xad43e8ba48a974e6dc5a385d87fc8cd1fe94a408.sol", "function": "getUnsoldTokensWithDecimals(uint256,uint256)", "lineno": 58, "title": "Message call to external contract", "type": "Informational"}], "success": true}