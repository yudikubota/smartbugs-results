{"error": null, "issues": [{"address": 1653, "code": "      [2] fee\n            [3] profit\n            [4] loss\n            [5] balance\n            [6] gasFee\n            [7] reserve\n\n            boolValues\n            [0] newPostion\n            [1] side\n            [2] increase position\n\n        */\n\n        //                          qty * price * fee\n        // uint256 pam[0] = safeMul(safeMul(uintValues[0], uintValues[1]), uintValues[2]) / (1 ether);\n        // uint256 collateral;  \n\n\n        // pam = [fee value, collateral]                        \n        uint256[2] memory pam = [safeAdd(calculateFee(uintValues[0], uintValues[1], uintValues[2], futuresContract) * 1e10, uintValues[6]), 0];\n        \n        // LogUint(100, uintValues[3]);\n        // LogUint(9, uintValues[2]);\n        // LogUint(7, safeMul(uintValues[0], uintValues[2])  / (1 ether));\n        // return;\n\n        \n\n        // ", "debug": "calldata_Token_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_Token_0: 0x705718cf00000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `batchFuturesTrade(uint8[2][],bytes32[4][],uint256[8][],address[2][],bool[],bytes32[],uint256[4][])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/30/0xc901b7c08dece715d0898d89b06722101c98518e.sol", "function": "batchFuturesTrade(uint8[2][],bytes32[4][],uint256[8][],address[2][],bool[],bytes32[],uint256[4][])", "lineno": 1212, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1780, "code": "      [2] fee\n            [3] profit\n            [4] loss\n            [5] balance\n            [6] gasFee\n            [7] reserve\n\n            boolValues\n            [0] newPostion\n            [1] side\n            [2] increase position\n\n        */\n\n        //                          qty * price * fee\n        // uint256 pam[0] = safeMul(safeMul(uintValues[0], uintValues[1]), uintValues[2]) / (1 ether);\n        // uint256 collateral;  \n\n\n        // pam = [fee value, collateral]                        \n        uint256[2] memory pam = [safeAdd(calculateFee(uintValues[0], uintValues[1], uintValues[2], futuresContract) * 1e10, uintValues[6]), 0];\n        \n        // LogUint(100, uintValues[3]);\n        // LogUint(9, uintValues[2]);\n        // LogUint(7, safeMul(uintValues[0], uintValues[2])  / (1 ether));\n        // return;\n\n        \n\n        // ", "debug": "calldata_Token_32 + 4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_Token_4 + calldata_Token_4: 0x1\ncalldata_Token_0: 0x705718cf00000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `batchFuturesTrade(uint8[2][],bytes32[4][],uint256[8][],address[2][],bool[],bytes32[],uint256[4][])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/30/0xc901b7c08dece715d0898d89b06722101c98518e.sol", "function": "batchFuturesTrade(uint8[2][],bytes32[4][],uint256[8][],address[2][],bool[],bytes32[],uint256[4][])", "lineno": 1212, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1907, "code": "      [2] fee\n            [3] profit\n            [4] loss\n            [5] balance\n            [6] gasFee\n            [7] reserve\n\n            boolValues\n            [0] newPostion\n            [1] side\n            [2] increase position\n\n        */\n\n        //                          qty * price * fee\n        // uint256 pam[0] = safeMul(safeMul(uintValues[0], uintValues[1]), uintValues[2]) / (1 ether);\n        // uint256 collateral;  \n\n\n        // pam = [fee value, collateral]                        \n        uint256[2] memory pam = [safeAdd(calculateFee(uintValues[0], uintValues[1], uintValues[2], futuresContract) * 1e10, uintValues[6]), 0];\n        \n        // LogUint(100, uintValues[3]);\n        // LogUint(9, uintValues[2]);\n        // LogUint(7, safeMul(uintValues[0], uintValues[2])  / (1 ether));\n        // return;\n\n        \n\n        // ", "debug": "calldata_Token_32 + 36: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_Token_4 + calldata_Token_4: 0x1\ncalldata_Token_0: 0x705718cf00000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncalldata_Token_4 + calldata_Token_32 + 4: 0x0\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `batchFuturesTrade(uint8[2][],bytes32[4][],uint256[8][],address[2][],bool[],bytes32[],uint256[4][])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/30/0xc901b7c08dece715d0898d89b06722101c98518e.sol", "function": "batchFuturesTrade(uint8[2][],bytes32[4][],uint256[8][],address[2][],bool[],bytes32[],uint256[4][])", "lineno": 1212, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2035, "code": "      [2] fee\n            [3] profit\n            [4] loss\n            [5] balance\n            [6] gasFee\n            [7] reserve\n\n            boolValues\n            [0] newPostion\n            [1] side\n            [2] increase position\n\n        */\n\n        //                          qty * price * fee\n        // uint256 pam[0] = safeMul(safeMul(uintValues[0], uintValues[1]), uintValues[2]) / (1 ether);\n        // uint256 collateral;  \n\n\n        // pam = [fee value, collateral]                        \n        uint256[2] memory pam = [safeAdd(calculateFee(uintValues[0], uintValues[1], uintValues[2], futuresContract) * 1e10, uintValues[6]), 0];\n        \n        // LogUint(100, uintValues[3]);\n        // LogUint(9, uintValues[2]);\n        // LogUint(7, safeMul(uintValues[0], uintValues[2])  / (1 ether));\n        // return;\n\n        \n\n        // ", "debug": "calldata_Token_32 + 68: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_Token_0: 0x705718cf00000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncalldata_Token_4 + calldata_Token_32 + 36: 0x0\ncalldata_Token_4 + calldata_Token_32 + 4: 0x0\ncalldata_Token_4 + calldata_Token_4: 0x0\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `batchFuturesTrade(uint8[2][],bytes32[4][],uint256[8][],address[2][],bool[],bytes32[],uint256[4][])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/30/0xc901b7c08dece715d0898d89b06722101c98518e.sol", "function": "batchFuturesTrade(uint8[2][],bytes32[4][],uint256[8][],address[2][],bool[],bytes32[],uint256[4][])", "lineno": 1212, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2296, "code": "      [2] fee\n            [3] profit\n            [4] loss\n            [5] balance\n            [6] gasFee\n            [7] reserve\n\n            boolValues\n            [0] newPostion\n            [1] side\n            [2] increase position\n\n        */\n\n        //                          qty * price * fee\n        // uint256 pam[0] = safeMul(safeMul(uintValues[0], uintValues[1]), uintValues[2]) / (1 ether);\n        // uint256 collateral;  \n\n\n        // pam = [fee value, collateral]                        \n        uint256[2] memory pam = [safeAdd(calculateFee(uintValues[0], uintValues[1], uintValues[2], futuresContract) * 1e10, uintValues[6]), 0];\n        \n        // LogUint(100, uintValues[3]);\n        // LogUint(9, uintValues[2]);\n        // LogUint(7, safeMul(uintValues[0], uintValues[2])  / (1 ether));\n        // return;\n\n        \n\n        // ", "debug": "calldata_Token_32 + 164: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_Token_0: 0x705718cf00000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncalldata_Token_4 + calldata_Token_32 + 68: 0x0\ncalldata_Token_4 + calldata_Token_32 + 36: 0x0\ncalldata_Token_4 + calldata_Token_32 + 4: 0x0\ncalldata_Token_4 + calldata_Token_4: 0x0\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `batchFuturesTrade(uint8[2][],bytes32[4][],uint256[8][],address[2][],bool[],bytes32[],uint256[4][])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/30/0xc901b7c08dece715d0898d89b06722101c98518e.sol", "function": "batchFuturesTrade(uint8[2][],bytes32[4][],uint256[8][],address[2][],bool[],bytes32[],uint256[4][])", "lineno": 1212, "title": "Integer Overflow ", "type": "Warning"}], "success": true}