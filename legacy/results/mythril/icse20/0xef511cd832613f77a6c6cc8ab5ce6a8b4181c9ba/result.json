{
  "contract": "0xef511cd832613f77a6c6cc8ab5ce6a8b4181c9ba",
  "tool": "mythril",
  "start": 1563669929.8994849,
  "end": 1563669943.6880782,
  "duration": 13.788593292236328,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 1498,
        "code": "));\n  }\n  \n  function withdrawETH(){\n ",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/35/0xef511cd832613f77a6c6cc8ab5ce6a8b4181c9ba.sol",
        "function": "withdrawToken(address)",
        "lineno": 39,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 1498,
        "code": "));\n  }\n  \n  function withdrawETH(){\n ",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1690\n",
        "filename": "/unique_chucks/35/0xef511cd832613f77a6c6cc8ab5ce6a8b4181c9ba.sol",
        "function": "withdrawToken(address)",
        "lineno": 39,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 1690,
        "code": ").balanceOf(address(this))));\n  }\n  \n  function withdrawETH(){\n  ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/35/0xef511cd832613f77a6c6cc8ab5ce6a8b4181c9ba.sol",
        "function": "withdrawToken(address)",
        "lineno": 39,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 1690,
        "code": ").balanceOf(address(this))));\n  }\n  \n  function withdrawETH(){\n  ",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function withdrawToken(address). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/35/0xef511cd832613f77a6c6cc8ab5ce6a8b4181c9ba.sol",
        "function": "withdrawToken(address)",
        "lineno": 39,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 1929,
        "code": "unction buyWithFunction(bytes4 ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/35/0xef511cd832613f77a6c6cc8ab5ce6a8b4181c9ba.sol",
        "function": "buy()",
        "lineno": 54,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 1929,
        "code": "unction buyWithFunction(bytes4 ",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function buy(). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/35/0xef511cd832613f77a6c6cc8ab5ce6a8b4181c9ba.sol",
        "function": "buy()",
        "lineno": 54,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 2192,
        "code": "tion buyWithAddress(address _ICO){\n    ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/35/0xef511cd832613f77a6c6cc8ab5ce6a8b4181c9ba.sol",
        "function": "buyWithFunction(bytes4)",
        "lineno": 59,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 2192,
        "code": "tion buyWithAddress(address _ICO){\n    ",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function buyWithFunction(bytes4). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/35/0xef511cd832613f77a6c6cc8ab5ce6a8b4181c9ba.sol",
        "function": "buyWithFunction(bytes4)",
        "lineno": 59,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 2403,
        "code": "dressAndFunction(address _ICO, ",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/35/0xef511cd832613f77a6c6cc8ab5ce6a8b4181c9ba.sol",
        "function": "buyWithAddress(address)",
        "lineno": 65,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 2947,
        "code": "ion.  Called when a user sends ETH to t",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/35/0xef511cd832613f77a6c6cc8ab5ce6a8b4181c9ba.sol",
        "function": "buyWithAddressAndFunction(address,bytes4)",
        "lineno": 71,
        "title": "Message call to external contract",
        "type": "Warning"
      }
    ],
    "success": true
  }
}