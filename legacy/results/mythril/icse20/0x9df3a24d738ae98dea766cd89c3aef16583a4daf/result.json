{
  "contract": "0x9df3a24d738ae98dea766cd89c3aef16583a4daf",
  "tool": "mythril",
  "start": 1563469313.804758,
  "end": 1563469447.1602674,
  "duration": 133.35550928115845,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 1221,
        "code": "onMechanism (MVM) smart\n   co",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/2/0x9df3a24d738ae98dea766cd89c3aef16583a4daf.sol",
        "function": "claimTokens(uint256)",
        "lineno": 875,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 2122,
        "code": " on overflow.\n",
        "debug": "The exception is triggered under the following conditions:\n\ntimestamp: 0x0\nstorage_1: 0x1\ncalldata_VestedPayment_0: 0xe35568cb00000000000000000000000000000000000000000000000000000000\ncalldatasize_VestedPayment: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/2/0x9df3a24d738ae98dea766cd89c3aef16583a4daf.sol",
        "function": "getAvailableTokens()",
        "lineno": 84,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2147,
        "code": "h thi",
        "debug": "The exception is triggered under the following conditions:\n\ntimestamp: 0x0\nstorage_1: 0x0\ncalldata_VestedPayment_0: 0xe35568cb00000000000000000000000000000000000000000000000000000000\ncalldatasize_VestedPayment: 0x4\nstorage_2: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/2/0x9df3a24d738ae98dea766cd89c3aef16583a4daf.sol",
        "function": "getAvailableTokens()",
        "lineno": 71,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}