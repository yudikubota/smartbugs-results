{"error": null, "issues": [{"address": 202, "code": "ests, uint256[] values) public onlyOwner returns(uint256) {\n        uint256 i = 0;\n        while (i < dests.length) {\n            token.transfer(dests[i], values[i]);\n            i += 1;\n        }\n        return i;\n        \n    }\n    \n    \n}", "debug": "calldata_FrescoToken_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_FrescoToken_0: 0xa645ff5f00000000000000000000000000000000000000000000000000000000\ncalldatasize_FrescoToken: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `send(address[],uint256[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/5/0x1cbd39b61919b41e22b1eb8bc564e67cae7376b9.sol", "function": "send(address[],uint256[])", "lineno": 26, "title": "Integer Overflow ", "type": "Warning"}, {"address": 601, "code": " 1;\n     ", "debug": "The exception is triggered under the following conditions:\n\ncalldata_FrescoToken_4 + calldata_FrescoToken_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_0: 0x0\ncaller: 0x0\ncalldata_FrescoToken_0: 0xa645ff5f00000000000000000000000000000000000000000000000000000000\ncalldatasize_FrescoToken: 0x4\nmem_128 +\n32 +\n32*calldata_FrescoToken_4 + calldata_FrescoToken_4: 0x0\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/5/0x1cbd39b61919b41e22b1eb8bc564e67cae7376b9.sol", "function": "send(address[],uint256[])", "lineno": 30, "title": "Exception state", "type": "Informational"}, {"address": 748, "code": "ues[i]);\n            i += 1;\n      ", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/5/0x1cbd39b61919b41e22b1eb8bc564e67cae7376b9.sol", "function": "send(address[],uint256[])", "lineno": 29, "title": "Message call to external contract", "type": "Informational"}, {"address": 748, "code": "ues[i]);\n            i += 1;\n      ", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 748\n", "filename": "/unique_chucks/5/0x1cbd39b61919b41e22b1eb8bc564e67cae7376b9.sol", "function": "send(address[],uint256[])", "lineno": 29, "title": "Multiple Calls", "type": "Information"}], "success": true}