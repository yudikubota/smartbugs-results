{
  "contract": "0x3c337fa1bf8725f59f73db6db719c792c5e8ae74",
  "tool": "mythril",
  "start": 1563469292.1301389,
  "end": 1563469317.5380645,
  "duration": 25.407925605773926,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 1203,
        "code": "sted[users[index]] = true;\n             LogUserAdded(users[index]);\n        }\n    }\n\n    function() payable {\n        buy(msg.sender);\n    }\n}",
        "debug": "calldata_WhitelistSale_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_WhitelistSale_0: 0xed28ef5100000000000000000000000000000000000000000000000000000000\ncalldatasize_WhitelistSale: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `addManyUsers(address[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/2/0x3c337fa1bf8725f59f73db6db719c792c5e8ae74.sol",
        "function": "addManyUsers(address[])",
        "lineno": 176,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 3328,
        "code": "eiver;\n\n    event LogWithdraw",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_WhitelistSale_4: 0x6\ncalldata_WhitelistSale_0: 0x8024c40000000000000000000000000000000000000000000000000000000000\ncalldatasize_WhitelistSale: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/2/0x3c337fa1bf8725f59f73db6db719c792c5e8ae74.sol",
        "function": "_function_0x8024c400",
        "lineno": 84,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3950,
        "code": "eived\n    function changeReceiver(ad",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/2/0x3c337fa1bf8725f59f73db6db719c792c5e8ae74.sol",
        "function": "withdrawToken(address,uint256)",
        "lineno": 122,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 4671,
        "code": "eturn a - b;\n ",
        "debug": "The exception is triggered under the following conditions:\n\ntimestamp: 0x0\nstorage_3: 0x1\ncalldata_WhitelistSale_0: 0x14ba5d0900000000000000000000000000000000000000000000000000000000\ncalldatasize_WhitelistSale: 0x4\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/2/0x3c337fa1bf8725f59f73db6db719c792c5e8ae74.sol",
        "function": "fallback",
        "lineno": 23,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}