{"error": null, "issues": [{"address": 4891, "code": "ult = false;\n    for (uint25", "debug": "The exception is triggered under the following conditions:\n\ncalldata_StandardToken_4: 0x0\nstorage_1: 0x0\ncalldata_StandardToken_0: 0xcdf3872200000000000000000000000000000000000000000000000000000000\ncalldatasize_StandardToken: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/25/0x5e9cf9739de6bb500db12d678ec639592fe89060.sol", "function": "_function_0xcdf38722", "lineno": 139, "title": "Exception state", "type": "Informational"}, {"address": 5965, "code": " @tit", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_StandardToken_4: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncalldata_StandardToken_32 + 4: 0x57f25cd000000000000000000000000000000000000000000000000000000000\ncalldata_StandardToken_0: 0xd73dd62300000000000000000000000000000000000000000000000000000000\ncalldatasize_StandardToken: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `increaseApproval(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/25/0x5e9cf9739de6bb500db12d678ec639592fe89060.sol", "function": "increaseApproval(address,uint256)", "lineno": 62, "title": "Integer Overflow ", "type": "Warning"}, {"address": 5978, "code": "0Basic\n * @dev", "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_StandardToken_4: 0x1\ncalldata_StandardToken_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_StandardToken_0: 0xd73dd62300000000000000000000000000000000000000000000000000000000\ncalldatasize_StandardToken: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/25/0x5e9cf9739de6bb500db12d678ec639592fe89060.sol", "function": "increaseApproval(address,uint256)", "lineno": 62, "title": "Exception state", "type": "Informational"}, {"address": 6243, "code": "/ The", "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0x0\ncaller: 0x0\ncalldata_StandardToken_0: 0x7d58093900000000000000000000000000000000000000000000000000000000\ncalldatasize_StandardToken: 0x4\nstorage_1: 0x0\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/25/0x5e9cf9739de6bb500db12d678ec639592fe89060.sol", "function": "_HOLDersPayRoll()", "lineno": 45, "title": "Exception state", "type": "Informational"}], "success": true}