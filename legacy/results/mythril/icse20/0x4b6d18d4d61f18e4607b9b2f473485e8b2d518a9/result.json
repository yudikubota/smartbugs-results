{
  "contract": "0x4b6d18d4d61f18e4607b9b2f473485e8b2d518a9",
  "tool": "mythril",
  "start": 1563750993.0791554,
  "end": 1563751007.4056394,
  "duration": 14.326483964920044,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 1055,
        "code": "nt256 _cliff,\n        uint",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_TokenVestingFactory_4: 0x0\nstorage_1: 0x0\ncalldata_TokenVestingFactory_0: 0x474da79a00000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenVestingFactory: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/46/0x4b6d18d4d61f18e4607b9b2f473485e8b2d518a9.sol",
        "function": "_function_0x474da79a",
        "lineno": 342,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 1640,
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function claimTokens(address). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/46/0x4b6d18d4d61f18e4607b9b2f473485e8b2d518a9.sol",
        "function": "claimTokens(address)",
        "lineno": 370,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 1829,
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/46/0x4b6d18d4d61f18e4607b9b2f473485e8b2d518a9.sol",
        "function": "claimTokens(address)",
        "lineno": 370,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 1829,
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2086\n",
        "filename": "/unique_chucks/46/0x4b6d18d4d61f18e4607b9b2f473485e8b2d518a9.sol",
        "function": "claimTokens(address)",
        "lineno": 370,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 2086,
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/46/0x4b6d18d4d61f18e4607b9b2f473485e8b2d518a9.sol",
        "function": "claimTokens(address)",
        "lineno": 370,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 2491,
        "code": "wner {\n        if (_token",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_TokenVestingFactory_4: 0x0\nstorage_1: 0x0\nstorage_0: 0x0\ncaller: 0x0\ncalldata_TokenVestingFactory_0: 0xfc412f2500000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenVestingFactory: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/46/0x4b6d18d4d61f18e4607b9b2f473485e8b2d518a9.sol",
        "function": "_function_0xfc412f25",
        "lineno": 359,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2692,
        "code": " public onlyOwner {\n        if (_token == 0x0) {\n     ",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/46/0x4b6d18d4d61f18e4607b9b2f473485e8b2d518a9.sol",
        "function": "_function_0xfc412f25",
        "lineno": 359,
        "title": "Message call to external contract",
        "type": "Warning"
      }
    ],
    "success": true
  }
}