{"error": null, "issues": [{"address": 1413, "code": " memory ret = new uint256[](cnt);\n\t\tfor(i=0;i<cnt;i++) {\n\t\t\tret[i] = m[i];\n\t\t}\n\t\treturn ret;\n\t}\n\n\tfunction minerState(uint256 id) public constant returns (uint64) {\n\t\t// require(msg.sender == miners[id].owner);\n\n\t\t//working\n\t\tif(miners[id].workBlock !=0 && block.number - miners[id].workBlock <= miners[id].workDuration) {\n\t\t\treturn 0;\n\t\t}\n\t\t//sleeping\n\t\tif", "debug": "mem_128 + 32 + 32*storage_6: 0x800000000000000000000000000000000000000000000000000000000000000\ncalldata_CryptoGems_0: 0x3d1d220200000000000000000000000000000000000000000000000000000000\ncalldatasize_CryptoGems: 0x4\nstorage_6: 0x0\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `getMinersOnSale()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/5/0x4ad6590fe12cea6dbf9eda1bd4f74f9a0292e585.sol", "function": "getMinersOnSale()", "lineno": 258, "title": "Integer Overflow ", "type": "Warning"}, {"address": 4114, "code": ".workBlock", "debug": "The exception is triggered under the following conditions:\n\ncalldata_CryptoGems_4: 0x0\nstorage_6: 0x0\ncalldata_CryptoGems_0: 0x1754bd8e00000000000000000000000000000000000000000000000000000000\ncalldatasize_CryptoGems: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/5/0x4ad6590fe12cea6dbf9eda1bd4f74f9a0292e585.sol", "function": "minerState(uint256)", "lineno": 277, "title": "Exception state", "type": "Informational"}, {"address": 4240, "code": "er - miners[id].workBlock > miners[", "debug": "calldata_CryptoGems_4: 0x0\nstorage_3 +\n111414077815863400510004064629973595961579173665589224203503662149373724986687 +\n10*calldata_CryptoGems_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nblock_number: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_6: 0x1\ncalldata_CryptoGems_0: 0x1754bd8e00000000000000000000000000000000000000000000000000000000\ncalldatasize_CryptoGems: 0x4\ncallvalue: 0x0\n", "description": "A possible integer underflow exists in the function `minerState(uint256)`.\nThe subtraction may result in a value < 0.", "filename": "/unique_chucks/5/0x4ad6590fe12cea6dbf9eda1bd4f74f9a0292e585.sol", "function": "minerState(uint256)", "lineno": 277, "title": "Integer Underflow", "type": "Warning"}, {"address": 4399, "code": "(miners[id].sleepBlock !=0 && block.", "debug": "storage_3 +\n111414077815863400510004064629973595961579173665589224203503662149373724986687 +\n10*calldata_CryptoGems_4: 0x7fc00000000000000000000000000000000000000000000\nstorage_4 +\n111414077815863400510004064629973595961579173665589224203503662149373724986687 +\n10*calldata_CryptoGems_4: 0x80000000000000000000000000000000000000000000001\nblock_number: 0x80000000000000000000000000000000000000000000000\ncalldata_CryptoGems_4: 0x0\nstorage_2 +\n111414077815863400510004064629973595961579173665589224203503662149373724986687 +\n10*calldata_CryptoGems_4: 0x0\nstorage_6: 0x1\ncalldata_CryptoGems_0: 0x1754bd8e00000000000000000000000000000000000000000000000000000000\ncalldatasize_CryptoGems: 0x4\ncallvalue: 0x0\n", "description": "A possible integer underflow exists in the function `minerState(uint256)`.\nThe subtraction may result in a value < 0.", "filename": "/unique_chucks/5/0x4ad6590fe12cea6dbf9eda1bd4f74f9a0292e585.sol", "function": "minerState(uint256)", "lineno": 281, "title": "Integer Underflow", "type": "Warning"}, {"address": 4558, "code": "workBlock) {\n\t\t\treturn 3;\n\t\t}\n\t\tret", "debug": "storage_3 +\n111414077815863400510004064629973595961579173665589224203503662149373724986687 +\n10*calldata_CryptoGems_4: 0xffffffffffffffffffffffffffffffffff000000000000000000000000000001\nstorage_4 +\n111414077815863400510004064629973595961579173665589224203503662149373724986687 +\n10*calldata_CryptoGems_4: 0x100000000000000000000000000000000000000000000000000000000000\nblock_number: 0x100000000000000000000000000000ffffffffffffffffffffffffffffff\ncalldata_CryptoGems_4: 0x0\nstorage_2 +\n111414077815863400510004064629973595961579173665589224203503662149373724986687 +\n10*calldata_CryptoGems_4: 0x0\nstorage_6: 0x1\ncalldata_CryptoGems_0: 0x1754bd8e00000000000000000000000000000000000000000000000000000000\ncalldatasize_CryptoGems: 0x4\ncallvalue: 0x0\n", "description": "A possible integer underflow exists in the function `minerState(uint256)`.\nThe subtraction may result in a value < 0.", "filename": "/unique_chucks/5/0x4ad6590fe12cea6dbf9eda1bd4f74f9a0292e585.sol", "function": "minerState(uint256)", "lineno": 281, "title": "Integer Underflow", "type": "Warning"}, {"address": 5041, "code": "r, msg.sen", "debug": "The exception is triggered under the following conditions:\n\ncalldata_CryptoGems_4: 0x0\nstorage_6: 0x0\ncalldata_CryptoGems_0: 0x1f1b11cc00000000000000000000000000000000000000000000000000000000\ncalldatasize_CryptoGems: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/5/0x4ad6590fe12cea6dbf9eda1bd4f74f9a0292e585.sol", "function": "buyMinerFromSale(uint256)", "lineno": 209, "title": "Exception state", "type": "Informational"}, {"address": 6079, "code": "ances[_from] -= _value;", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_CryptoGems_32_+_4: 0xc050fffff320c00020003d81af848540000000000000040000110001bd062022\ncalldata_CryptoGems_32 + 36: 0xfe51000008ce80008001c1d33616877ffffffffffffff7ffffe10000398d50ac\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xfe51000008ce80008001c1d33616877ffffffffffffff7ffffe10000398d50ac\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_CryptoGems_4: 0xfe51000008ce80008001c1d33616877ffffffffffffff7ffffe10000398d50ac\ncalldata_CryptoGems_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_CryptoGems: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `transferFrom(address,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/5/0x4ad6590fe12cea6dbf9eda1bd4f74f9a0292e585.sol", "function": "transferFrom(address,address,uint256)", "lineno": 32, "title": "Integer Overflow ", "type": "Warning"}, {"address": 6606, "code": "}\n\t\n\n\n\t// ", "debug": "The exception is triggered under the following conditions:\n\ncalldata_CryptoGems_4: 0x0\nstorage_6: 0x0\ncalldata_CryptoGems_0: 0x2e2bec5c00000000000000000000000000000000000000000000000000000000\ncalldatasize_CryptoGems: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/5/0x4ad6590fe12cea6dbf9eda1bd4f74f9a0292e585.sol", "function": "getMinerLevel(uint256)", "lineno": 299, "title": "Exception state", "type": "Informational"}, {"address": 9276, "code": "e;\n\t\temit Transfer(msg.", "debug": "storage_8 +\n111414077815863400510004064629973595961579173665589224203503662149373724986687 +\n10*calldata_CryptoGems_4: 0xc290137095b13347e55005a6dc184559e0489f1233480050d0fb4bba17d34179\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\nUDiv(storage_7_+\n111414077815863400510004064629973595961579173665589224203503662149373724986687_+\n10*calldata_CryptoGems_4,\n_____256): 0x9c9efb7ae5acd378025256a3945f5859076e809243093d9ecae2636c9fd28979\nstorage_7 +\n111414077815863400510004064629973595961579173665589224203503662149373724986687 +\n10*calldata_CryptoGems_4: 0xff00\ncalldata_CryptoGems_4: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xc290137095b13347e55005a6dc184559e0489f1233480050d0fb4bba17d34179\ncaller: 0xffffffffffffffffffffffffffffffffffffff00\nstorage_6: 0x1\ncalldata_CryptoGems_0: 0x1f1b11cc00000000000000000000000000000000000000000000000000000000\ncalldatasize_CryptoGems: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `buyMinerFromSale(uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/5/0x4ad6590fe12cea6dbf9eda1bd4f74f9a0292e585.sol", "function": "buyMinerFromSale(uint256)", "lineno": 23, "title": "Integer Overflow ", "type": "Warning"}], "success": true}