{
  "contract": "0x241a34ef3a860ba44e709915605e9a366e421383",
  "tool": "mythril",
  "start": 1563658383.6059492,
  "end": 1563658401.0722177,
  "duration": 17.46626853942871,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 390,
        "code": "uint256 amounts) public {\n        for(uint256 i = 0; i < users.length; i++) {\n            address account = users[i];\n            uint256 amount = amounts;\n            \n            LogAccountAmount(account, amount);\n            \n            token.transfer(account, amount);\n        }\n    }\n    \n    function recoverTokens(address _user, ",
        "debug": "calldata_ERC20Basic_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_ERC20Basic_0: 0xe30f7c8b00000000000000000000000000000000000000000000000000000000\ncalldatasize_ERC20Basic: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `startAirdrop(address[],uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/29/0x241a34ef3a860ba44e709915605e9a366e421383.sol",
        "function": "startAirdrop(address[],uint256)",
        "lineno": 40,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 815,
        "code": "removeContract() public isCrea",
        "debug": "",
        "description": "This contract executes a message call to an address found at storage slot 0. This storage slot can be written to by calling the function `setToken(address)`. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/29/0x241a34ef3a860ba44e709915605e9a366e421383.sol",
        "function": "recoverTokens(address,uint256)",
        "lineno": 54,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 815,
        "code": "removeContract() public isCrea",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function recoverTokens(address,uint256). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/29/0x241a34ef3a860ba44e709915605e9a366e421383.sol",
        "function": "recoverTokens(address,uint256)",
        "lineno": 54,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 1257,
        "code": " }\n    \n    function recoverTok",
        "debug": "",
        "description": "This contract executes a message call to an address found at storage slot 0. This storage slot can be written to by calling the function `setToken(address)`. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/29/0x241a34ef3a860ba44e709915605e9a366e421383.sol",
        "function": "startAirdrop(address[],uint256)",
        "lineno": 49,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 1257,
        "code": " }\n    \n    function recoverTok",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1257\nCall at address: 1257\n",
        "filename": "/unique_chucks/29/0x241a34ef3a860ba44e709915605e9a366e421383.sol",
        "function": "startAirdrop(address[],uint256)",
        "lineno": 49,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 1257,
        "code": " }\n    \n    function recoverTok",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function startAirdrop(address[],uint256). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/29/0x241a34ef3a860ba44e709915605e9a366e421383.sol",
        "function": "startAirdrop(address[],uint256)",
        "lineno": 49,
        "title": "Transaction order dependence",
        "type": "Warning"
      }
    ],
    "success": true
  }
}