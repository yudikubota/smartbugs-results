{
  "contract": "0xff3212bdda5e2a00d4015599654169e4643b96a8",
  "tool": "mythril",
  "start": 1563708584.4537227,
  "end": 1563708689.8465915,
  "duration": 105.39286875724792,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 869,
        "code": "er = transfer_amount - target_amount;\n    // Major fee ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/39/0xff3212bdda5e2a00d4015599654169e4643b96a8.sol",
        "function": "fallback",
        "lineno": 77,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 869,
        "code": "er = transfer_amount - target_amount;\n    // Major fee ",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1083\nCall at address: 990\n",
        "filename": "/unique_chucks/39/0xff3212bdda5e2a00d4015599654169e4643b96a8.sol",
        "function": "fallback",
        "lineno": 77,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 990,
        "code": "   require(minor_partner_address.call.gas(gas).value(m",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/39/0xff3212bdda5e2a00d4015599654169e4643b96a8.sol",
        "function": "fallback",
        "lineno": 87,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 990,
        "code": "   require(minor_partner_address.call.gas(gas).value(m",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1083\n",
        "filename": "/unique_chucks/39/0xff3212bdda5e2a00d4015599654169e4643b96a8.sol",
        "function": "fallback",
        "lineno": 87,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 1083,
        "code": "gas allowed to investors\n  function set_transfer_gas(u",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/39/0xff3212bdda5e2a00d4015599654169e4643b96a8.sol",
        "function": "fallback",
        "lineno": 90,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 1583,
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/39/0xff3212bdda5e2a00d4015599654169e4643b96a8.sol",
        "function": "_function_0xb029c2c8",
        "lineno": 100,
        "title": "Message call to external contract",
        "type": "Warning"
      }
    ],
    "success": true
  }
}