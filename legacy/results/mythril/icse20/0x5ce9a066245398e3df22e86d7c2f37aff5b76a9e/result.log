{"error": null, "issues": [{"address": 585, "code": "me) public {\n        require(msg.sender==owner, \"need owner\");\n        erc20Array.push(erc20address);\n        erc20Map[erc20address] = erc20Name;\n    }\n}", "debug": "calldata_IERC20_32 + 4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_IERC20_0: 0xe6f0aaf600000000000000000000000000000000000000000000000000000000\ncalldatasize_IERC20: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `_function_0xe6f0aaf6`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/37/0x5ce9a066245398e3df22e86d7c2f37aff5b76a9e.sol", "function": "_function_0xe6f0aaf6", "lineno": 56, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1129, "code": "ddress owner;\n    construct", "debug": "The exception is triggered under the following conditions:\n\ncalldata_IERC20_4: 0x0\nstorage_1: 0x0\ncalldata_IERC20_0: 0x1691ebca00000000000000000000000000000000000000000000000000000000\ncalldatasize_IERC20: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/37/0x5ce9a066245398e3df22e86d7c2f37aff5b76a9e.sol", "function": "_function_0x1691ebca", "lineno": 36, "title": "Exception state", "type": "Informational"}, {"address": 1560, "code": ";\n\ninterface IERC2", "debug": "storage_1: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_2: 0x0\ncaller: 0x0\ncalldata_IERC20_0: 0xe6f0aaf600000000000000000000000000000000000000000000000000000000\ncalldatasize_IERC20: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `_function_0xe6f0aaf6`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/37/0x5ce9a066245398e3df22e86d7c2f37aff5b76a9e.sol", "function": "_function_0xe6f0aaf6", "lineno": 1, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1989, "code": "es[i] = erc20Balance;\n       ", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/37/0x5ce9a066245398e3df22e86d7c2f37aff5b76a9e.sol", "function": "getBalance(address)", "lineno": 51, "title": "Message call to external contract", "type": "Informational"}, {"address": 2061, "code": "rn balances", "debug": "The exception is triggered under the following conditions:\n\nreturndatasize: 0x20\nretval_1989: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_1: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_IERC20_0: 0xf8b2cb4f00000000000000000000000000000000000000000000000000000000\ncalldatasize_IERC20: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/37/0x5ce9a066245398e3df22e86d7c2f37aff5b76a9e.sol", "function": "getBalance(address)", "lineno": 53, "title": "Exception state", "type": "Informational"}, {"address": 2141, "code": "pping(address=>string) public erc20Map;\n    address[] public erc20Array;\n    address owner;\n    constructor () public{\n        owner = msg.sender;\n    }\n\n    function getBalance() public view returns (uint[]){\n        return this.getBalance(msg.sender);\n    }  \n\n    function getBalance(address addr) public view returns (uint[]){\n        uint erc20Length = erc20Array.length;\n        uint[] memory balances;\n        for(uint i = 0;i<erc20Length;i++){\n            IERC20 erc20Contract = IERC20(erc20Array[i]);\n            uint erc20Balance = erc20Contract.balanceOf(addr);\n            balances[i] = erc20Balance;\n        }\n        return balances;\n    }\n\n    function addErc20 (address erc20address, string erc20Name) public {\n        require(msg.sender==owner, \"need owner\");\n        erc20Array.push(erc20address);\n        erc20Map[erc20address] = erc20Name;\n    }\n}", "debug": "keccac_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_IERC20_4: 0xff13e6a7459ae5a4c49c419171c3f89100a371508000000000129200000219e2\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_IERC20_4: 0xbac1c3147749165dd7d1977fffffffffffffffffffffffffffffffffffffffc5\nstorage_2: 0x0\ncaller: 0x0\ncalldata_IERC20_0: 0xe6f0aaf600000000000000000000000000000000000000000000000000000000\ncalldatasize_IERC20: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `_function_0xe6f0aaf6`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/37/0x5ce9a066245398e3df22e86d7c2f37aff5b76a9e.sol", "function": "_function_0xe6f0aaf6", "lineno": 34, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2170, "code": "pping(address=>string) public erc20Map;\n    address[] public erc20Array;\n    address owner;\n    constructor () public{\n        owner = msg.sender;\n    }\n\n    function getBalance() public view returns (uint[]){\n        return this.getBalance(msg.sender);\n    }  \n\n    function getBalance(address addr) public view returns (uint[]){\n        uint erc20Length = erc20Array.length;\n        uint[] memory balances;\n        for(uint i = 0;i<erc20Length;i++){\n            IERC20 erc20Contract = IERC20(erc20Array[i]);\n            uint erc20Balance = erc20Contract.balanceOf(addr);\n            balances[i] = erc20Balance;\n        }\n        return balances;\n    }\n\n    function addErc20 (address erc20address, string erc20Name) public {\n        require(msg.sender==owner, \"need owner\");\n        erc20Array.push(erc20address);\n        erc20Map[erc20address] = erc20Name;\n    }\n}", "debug": "calldata_IERC20_4 + calldata_IERC20_32 + 4: 0x8000000000000000000000000000000000000000000000000000000000000000\nstorage_2: 0x0\ncaller: 0x0\ncalldata_IERC20_0: 0xe6f0aaf600000000000000000000000000000000000000000000000000000000\ncalldatasize_IERC20: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `_function_0xe6f0aaf6`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/37/0x5ce9a066245398e3df22e86d7c2f37aff5b76a9e.sol", "function": "_function_0xe6f0aaf6", "lineno": 34, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2184, "code": "pping(address=>string) public erc20Map;\n    address[] public erc20Array;\n    address owner;\n    constructor () public{\n        owner = msg.sender;\n    }\n\n    function getBalance() public view returns (uint[]){\n        return this.getBalance(msg.sender);\n    }  \n\n    function getBalance(address addr) public view returns (uint[]){\n        uint erc20Length = erc20Array.length;\n        uint[] memory balances;\n        for(uint i = 0;i<erc20Length;i++){\n            IERC20 erc20Contract = IERC20(erc20Array[i]);\n            uint erc20Balance = erc20Contract.balanceOf(addr);\n            balances[i] = erc20Balance;\n        }\n        return balances;\n    }\n\n    function addErc20 (address erc20address, string erc20Name) public {\n        require(msg.sender==owner, \"need owner\");\n        erc20Array.push(erc20address);\n        erc20Map[erc20address] = erc20Name;\n    }\n}", "debug": "calldata_IERC20_4 + calldata_IERC20_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\nstorage_2: 0x0\ncaller: 0x0\ncalldata_IERC20_0: 0xe6f0aaf600000000000000000000000000000000000000000000000000000000\ncalldatasize_IERC20: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `_function_0xe6f0aaf6`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/37/0x5ce9a066245398e3df22e86d7c2f37aff5b76a9e.sol", "function": "_function_0xe6f0aaf6", "lineno": 34, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2206, "code": "pping(address=>string) public erc20Map;\n    address[] public erc20Array;\n    address owner;\n    constructor () public{\n        owner = msg.sender;\n    }\n\n    function getBalance() public view returns (uint[]){\n        return this.getBalance(msg.sender);\n    }  \n\n    function getBalance(address addr) public view returns (uint[]){\n        uint erc20Length = erc20Array.length;\n        uint[] memory balances;\n        for(uint i = 0;i<erc20Length;i++){\n            IERC20 erc20Contract = IERC20(erc20Array[i]);\n            uint erc20Balance = erc20Contract.balanceOf(addr);\n            balances[i] = erc20Balance;\n        }\n        return balances;\n    }\n\n    function addErc20 (address erc20address, string erc20Name) public {\n        require(msg.sender==owner, \"need owner\");\n        erc20Array.push(erc20address);\n        erc20Map[erc20address] = erc20Name;\n    }\n}", "debug": "keccac_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_IERC20_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_IERC20_4 + calldata_IERC20_32 + 4: 0x4000f04100100000000000000000000000000000d6401413fffffffffffffe0\nstorage_2: 0x0\ncaller: 0x0\ncalldata_IERC20_0: 0xe6f0aaf600000000000000000000000000000000000000000000000000000000\ncalldatasize_IERC20: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `_function_0xe6f0aaf6`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/37/0x5ce9a066245398e3df22e86d7c2f37aff5b76a9e.sol", "function": "_function_0xe6f0aaf6", "lineno": 34, "title": "Integer Overflow ", "type": "Warning"}], "success": true}