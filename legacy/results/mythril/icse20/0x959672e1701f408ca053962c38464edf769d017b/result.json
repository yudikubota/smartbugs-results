{
  "contract": "0x959672e1701f408ca053962c38464edf769d017b",
  "tool": "mythril",
  "start": 1563617185.3575444,
  "end": 1563617754.660987,
  "duration": 569.3034424781799,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 357,
        "code": "ge) public payable returns (bool) {\n        require (msg.value >= price);\n        \n        if (msg.value > price) {\n            balance[msg.sender] += msg.value - price;\n        }\n        uint256 previousHodlersCount = previousHodlers.length;\n        for (uint256 i = 0; i < previousHodlersCount; i++) {\n            balance[previousHodlers[i]] += (price * 8 / 100) / previousHodlersCount;\n        }\n        balance[currentHodler] += price * 92 / 100;\n\n        price = price * 120 / 100;  \n        previousHodlers.push(currentHodler);\n        messages.push(message);\n        \n        currentHodler = msg.sender;\n        currentHodlerId = previousHodlersCount + 1;\n        emit Purchased(currentHodlerId, currentHodler);\n    }\n\n    function withdraw() public {\n        u",
        "debug": "calldata_OneToken_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_OneToken_0: 0x492cc76900000000000000000000000000000000000000000000000000000000\ncalldatasize_OneToken: 0x4\n",
        "description": "A possible integer overflow exists in the function `buy(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/20/0x959672e1701f408ca053962c38464edf769d017b.sol",
        "function": "buy(string)",
        "lineno": 26,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 835,
        "code": "] public messages;\n    u",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_OneToken_4: 0x0\nstorage_3: 0x0\ncalldata_OneToken_0: 0xd80fefd00000000000000000000000000000000000000000000000000000000\ncalldatasize_OneToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/20/0x959672e1701f408ca053962c38464edf769d017b.sol",
        "function": "_function_0x0d80fefd",
        "lineno": 8,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 1193,
        "debug": "SOLVER OUTPUT:\ncalldata_OneToken_0: 0x3ccfd60b00000000000000000000000000000000000000000000000000000000\ncalldatasize_OneToken: 0x4\ncallvalue: 0x0\n",
        "description": "In the function `withdraw()` a non-zero amount of Ether is sent to msg.sender.\nIt seems that this function can be called without restrictions.",
        "filename": "/unique_chucks/20/0x959672e1701f408ca053962c38464edf769d017b.sol",
        "function": "withdraw()",
        "lineno": 52,
        "title": "Ether send",
        "type": "Warning"
      },
      {
        "address": 1325,
        "code": "lue - price;\n        }\n        uint256 p",
        "debug": "storage_4: 0x8000000000000000000000000000000000000000000\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xfffffdefffedffb45a0000000000000000000000000000000000000000000001\ncallvalue: 0x7fffffffffffffffffff87fffffffffffffffffffffffffffffffffffffffffe\ncalldata_OneToken_0: 0x492cc76900000000000000000000000000000000000000000000000000000000\ncalldatasize_OneToken: 0x4\n",
        "description": "A possible integer overflow exists in the function `buy(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/20/0x959672e1701f408ca053962c38464edf769d017b.sol",
        "function": "buy(string)",
        "lineno": 30,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1363,
        "code": "sCount;\n ",
        "debug": "storage_4: 0x20000000000000070000000000000000000000002049249249257fffffffffff\ncallvalue: 0xa0000000000000070000ffffffffffffffffffffffffffffffff800000000000\nstorage_2: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_OneToken_0: 0x492cc76900000000000000000000000000000000000000000000000000000000\ncalldatasize_OneToken: 0x4\n",
        "description": "A possible integer overflow exists in the function `buy(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/20/0x959672e1701f408ca053962c38464edf769d017b.sol",
        "function": "buy(string)",
        "lineno": 34,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1537,
        "code": "price * 12",
        "debug": "storage_4: 0x2ce9980000000000000000000000000000001ffffffffffffffffffffffffff\nstorage_2: 0x2\ncallvalue: 0xfffffd8000000000007bfffffffffffffffffe00000000000000000000000000\ncalldata_OneToken_0: 0x492cc76900000000000000000000000000000000000000000000000000000000\ncalldatasize_OneToken: 0x4\n",
        "description": "A possible integer overflow exists in the function `buy(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/20/0x959672e1701f408ca053962c38464edf769d017b.sol",
        "function": "buy(string)",
        "lineno": 38,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1665,
        "code": "Hodlers.pus",
        "debug": "storage_4: 0xdd8a9167d99ac8a54ea50741aee2148ea733ff62371b1d94a499b22ab5afd8fa\nstorage_2: 0x2\ncallvalue: 0xe329023ff11c850994131000c05012cb92cc07d0ca4f600027540057f81fe5ff\ncalldata_OneToken_0: 0x492cc76900000000000000000000000000000000000000000000000000000000\ncalldatasize_OneToken: 0x4\n",
        "description": "A possible integer overflow exists in the function `buy(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/20/0x959672e1701f408ca053962c38464edf769d017b.sol",
        "function": "buy(string)",
        "lineno": 39,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1827,
        "code": ";\n\ncontract OneTok",
        "debug": "storage_4: 0x5e28209f1404441a9e0000001118310b735b8fa02b6da7c7600e032c1861dfff\nstorage_2: 0x2\nstorage_3: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncallvalue: 0x8175d26009d13ab4617fffffef2382f0c8c0781dc510103c27f0c133e58c6000\ncalldata_OneToken_0: 0x492cc76900000000000000000000000000000000000000000000000000000000\ncalldatasize_OneToken: 0x4\n",
        "description": "A possible integer overflow exists in the function `buy(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/20/0x959672e1701f408ca053962c38464edf769d017b.sol",
        "function": "buy(string)",
        "lineno": 1,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2112,
        "code": "ss[] public previousHodlers;\n   ",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_OneToken_4: 0x0\nstorage_2: 0x0\ncalldata_OneToken_0: 0x5587281300000000000000000000000000000000000000000000000000000000\ncalldatasize_OneToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/20/0x959672e1701f408ca053962c38464edf769d017b.sol",
        "function": "_function_0x55872813",
        "lineno": 6,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2273,
        "code": "ntract OneToken {\n    uint256 public currentHodlerId;\n    address public currentHodler;\n    address[] public previousHodlers;\n    \n    string[] public messages;\n    uint256 public price;\n    \n    event Purchased(\n        uint indexed _buyerId,\n        address _buyer\n    );\n\n    mapping (address => uint) public balance;\n\n    constructor() public {\n        currentHodler = msg.sender;\n        currentHodlerId = 0;\n        messages.push(\"Sky is the limit!\");\n        price = 8 finney;\n        emit Purchased(currentHodlerId, currentHodler);\n    }\n\n    function buy(string message) public payable returns (bool) {\n        require (msg.value >= price);\n        \n        if (msg.value > price) {\n            balance[msg.sender] += msg.value - price;\n        }\n        uint256 previousHodlersCount = previousHodlers.length;\n        for (uint256 i = 0; i < previousHodlersCount; i++) {\n            balance[previousHodlers[i]] += (price * 8 / 100) / previousHodlersCount;\n        }\n        balance[currentHodler] += price * 92 / 100;\n\n        price = price * 120 / 100;  \n        previousHodlers.push(currentHodler);\n        messages.push(message);\n        \n        currentHodler = msg.sender;\n        currentHodlerId = previousHodlersCount + 1;\n        emit Purchased(currentHodlerId, currentHodler);\n    }\n\n    function withdraw() public {\n        uint amount = balance[msg.sender];\n        balance[msg.sender] = 0;\n        msg.sender.transfer(amount);\n    }\n}",
        "debug": "storage_4: 0x7c7ff8ebf407ff4f3d6836022911e9308782f7dfa4fc600000a3767d68440022\nstorage_2: 0x1\nstorage_87903029871075914254377627908054574944891091886930582284385770809450030037083 +\nstorage_3: 0xbbdec000000000000000000000000000000000000000000000000000000000c5\ncallvalue: 0x808004240a2801fa6ee24ac0504c17b878700820d8084d7ffd761ce288840022\nkeccac_87903029871075914254377627908054574944891091886930582284385770809450030037083_+\nstorage_3: 0xfe8e78006853ec1190fffffffeabcfe8000d18a36f8cf01f7fde80e757c9fc62\ncalldata_OneToken_0: 0x492cc76900000000000000000000000000000000000000000000000000000000\ncalldatasize_OneToken: 0x4\n",
        "description": "A possible integer overflow exists in the function `buy(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/20/0x959672e1701f408ca053962c38464edf769d017b.sol",
        "function": "buy(string)",
        "lineno": 3,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2302,
        "code": "ntract OneToken {\n    uint256 public currentHodlerId;\n    address public currentHodler;\n    address[] public previousHodlers;\n    \n    string[] public messages;\n    uint256 public price;\n    \n    event Purchased(\n        uint indexed _buyerId,\n        address _buyer\n    );\n\n    mapping (address => uint) public balance;\n\n    constructor() public {\n        currentHodler = msg.sender;\n        currentHodlerId = 0;\n        messages.push(\"Sky is the limit!\");\n        price = 8 finney;\n        emit Purchased(currentHodlerId, currentHodler);\n    }\n\n    function buy(string message) public payable returns (bool) {\n        require (msg.value >= price);\n        \n        if (msg.value > price) {\n            balance[msg.sender] += msg.value - price;\n        }\n        uint256 previousHodlersCount = previousHodlers.length;\n        for (uint256 i = 0; i < previousHodlersCount; i++) {\n            balance[previousHodlers[i]] += (price * 8 / 100) / previousHodlersCount;\n        }\n        balance[currentHodler] += price * 92 / 100;\n\n        price = price * 120 / 100;  \n        previousHodlers.push(currentHodler);\n        messages.push(message);\n        \n        currentHodler = msg.sender;\n        currentHodlerId = previousHodlersCount + 1;\n        emit Purchased(currentHodlerId, currentHodler);\n    }\n\n    function withdraw() public {\n        uint amount = balance[msg.sender];\n        balance[msg.sender] = 0;\n        msg.sender.transfer(amount);\n    }\n}",
        "debug": "storage_4: 0xf7ffffffffffffffffff\nstorage_2: 0x2\ncallvalue: 0xffffffffffffffffffffffffffffffffffffffffffff00000000000000000000\ncalldata_OneToken_4 + calldata_OneToken_4: 0x8000000000000000000000000000000000000000000000000000000000000000\ncalldata_OneToken_0: 0x492cc76900000000000000000000000000000000000000000000000000000000\ncalldatasize_OneToken: 0x4\n",
        "description": "A possible integer overflow exists in the function `buy(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/20/0x959672e1701f408ca053962c38464edf769d017b.sol",
        "function": "buy(string)",
        "lineno": 3,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2316,
        "code": "ntract OneToken {\n    uint256 public currentHodlerId;\n    address public currentHodler;\n    address[] public previousHodlers;\n    \n    string[] public messages;\n    uint256 public price;\n    \n    event Purchased(\n        uint indexed _buyerId,\n        address _buyer\n    );\n\n    mapping (address => uint) public balance;\n\n    constructor() public {\n        currentHodler = msg.sender;\n        currentHodlerId = 0;\n        messages.push(\"Sky is the limit!\");\n        price = 8 finney;\n        emit Purchased(currentHodlerId, currentHodler);\n    }\n\n    function buy(string message) public payable returns (bool) {\n        require (msg.value >= price);\n        \n        if (msg.value > price) {\n            balance[msg.sender] += msg.value - price;\n        }\n        uint256 previousHodlersCount = previousHodlers.length;\n        for (uint256 i = 0; i < previousHodlersCount; i++) {\n            balance[previousHodlers[i]] += (price * 8 / 100) / previousHodlersCount;\n        }\n        balance[currentHodler] += price * 92 / 100;\n\n        price = price * 120 / 100;  \n        previousHodlers.push(currentHodler);\n        messages.push(message);\n        \n        currentHodler = msg.sender;\n        currentHodlerId = previousHodlersCount + 1;\n        emit Purchased(currentHodlerId, currentHodler);\n    }\n\n    function withdraw() public {\n        uint amount = balance[msg.sender];\n        balance[msg.sender] = 0;\n        msg.sender.transfer(amount);\n    }\n}",
        "debug": "storage_4: 0x8080000000080000000093a2958134b5147cbc00453653d0dfff20400040001\nstorage_2: 0x1\ncallvalue: 0xf222ffffffff00000001800002c408132294001dbfa46044f200080a00080000\ncalldata_OneToken_4 + calldata_OneToken_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0\ncalldata_OneToken_0: 0x492cc76900000000000000000000000000000000000000000000000000000000\ncalldatasize_OneToken: 0x4\n",
        "description": "A possible integer overflow exists in the function `buy(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/20/0x959672e1701f408ca053962c38464edf769d017b.sol",
        "function": "buy(string)",
        "lineno": 3,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2338,
        "code": "ntract OneToken {\n    uint256 public currentHodlerId;\n    address public currentHodler;\n    address[] public previousHodlers;\n    \n    string[] public messages;\n    uint256 public price;\n    \n    event Purchased(\n        uint indexed _buyerId,\n        address _buyer\n    );\n\n    mapping (address => uint) public balance;\n\n    constructor() public {\n        currentHodler = msg.sender;\n        currentHodlerId = 0;\n        messages.push(\"Sky is the limit!\");\n        price = 8 finney;\n        emit Purchased(currentHodlerId, currentHodler);\n    }\n\n    function buy(string message) public payable returns (bool) {\n        require (msg.value >= price);\n        \n        if (msg.value > price) {\n            balance[msg.sender] += msg.value - price;\n        }\n        uint256 previousHodlersCount = previousHodlers.length;\n        for (uint256 i = 0; i < previousHodlersCount; i++) {\n            balance[previousHodlers[i]] += (price * 8 / 100) / previousHodlersCount;\n        }\n        balance[currentHodler] += price * 92 / 100;\n\n        price = price * 120 / 100;  \n        previousHodlers.push(currentHodler);\n        messages.push(message);\n        \n        currentHodler = msg.sender;\n        currentHodlerId = previousHodlersCount + 1;\n        emit Purchased(currentHodlerId, currentHodler);\n    }\n\n    function withdraw() public {\n        uint amount = balance[msg.sender];\n        balance[msg.sender] = 0;\n        msg.sender.transfer(amount);\n    }\n}",
        "debug": "storage_4: 0x4a01840020001003ac9f77f3d000000685f6c1b35c000010e42d0b460640df6\ncallvalue: 0xf00000315d7ffcffc004000000ffffffd2a09080c22efabef1ef7a07278fd1b9\nkeccac_87903029871075914254377627908054574944891091886930582284385770809450030037083_+\nstorage_3: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_OneToken_4 + calldata_OneToken_4: 0x8021004028a02800032988000700003fffffffffffffffffffffffffff80\ncalldata_OneToken_0: 0x492cc76900000000000000000000000000000000000000000000000000000000\ncalldatasize_OneToken: 0x4\nstorage_2: 0x0\n",
        "description": "A possible integer overflow exists in the function `buy(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/20/0x959672e1701f408ca053962c38464edf769d017b.sol",
        "function": "buy(string)",
        "lineno": 3,
        "title": "Integer Overflow ",
        "type": "Warning"
      }
    ],
    "success": true
  }
}