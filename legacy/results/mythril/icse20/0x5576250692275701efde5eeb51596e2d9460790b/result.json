{
  "contract": "0x5576250692275701efde5eeb51596e2d9460790b",
  "tool": "mythril",
  "start": 1563344330.5002859,
  "end": 1563344515.904719,
  "duration": 185.40443325042725,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 726,
        "code": "lyr_[_pID].laff = _affID;\n            }\n        }\n\n        registerNameCore(_pID, _addr, _affID, _name, _isNewPlayer, _all);\n    }\n\n    function addMeToGame(uint256 _gameID)\n        isHuman()\n        public\n    {\n        require(_gameID <= gID_, \"that game doesn't exist yet\");\n        address _addr = msg.sender;\n        uint256 _pID = pIDxAddr_[_addr];\n        require(_pID != 0, \"player dont even have an account\");\n\n        games_[_gameID].receivePlayerInfo(_pID, _addr, plyr_[_pID].name, plyr_[_pID].laff);\n    }\n\n    function addMeToAllGames()\n        isHuman()\n        public\n    {\n        address _addr = msg.sender;\n        uint256 _pID = pIDxAddr_[_addr];\n        require(_pID != 0, \"player dont even have an account\");\n        uint256 _laff = plyr_[_pID].laf",
        "debug": "calldata_UserDataManagerReceiverInterface_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_UserDataManagerReceiverInterface_0: 0x3ddd469800000000000000000000000000000000000000000000000000000000\ncalldatasize_UserDataManagerReceiverInterface: 0x4\n",
        "description": "A possible integer overflow exists in the function `registerNameXaddr(string,address,bool)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x5576250692275701efde5eeb51596e2d9460790b.sol",
        "function": "registerNameXaddr(string,address,bool)",
        "lineno": 198,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 907,
        "code": "p[i] == 0x20 ||\n                    (_temp[i] > 0x60 && _temp[i] < 0x7b) ||\n                    (_temp[i] > 0x2f && _temp[i] < 0x3a),\n                    \"string contains invalid characters\"\n                );\n                if (_temp[i] == 0x20)\n                    require( _temp[i+1] != 0x20, \"string cannot contain consecutive spaces\");\n\n                if (_hasNonNumber == false && (_temp[i] < 0x30 || _temp[i] > 0x39))\n                    _hasNonNumber = true;\n            }\n        }\n\n        r",
        "debug": "calldata_UserDataManagerReceiverInterface_32 + 4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_UserDataManagerReceiverInterface_0: 0x3fda926e00000000000000000000000000000000000000000000000000000000\ncalldatasize_UserDataManagerReceiverInterface: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `addGame(address,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x5576250692275701efde5eeb51596e2d9460790b.sol",
        "function": "addGame(address,string)",
        "lineno": 448,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1216,
        "code": "   bytes32 _name = plyr_[_pID].name;\n\n        for (uint256 i = 1; i <= gID_; i++)\n        {\n            games_[i].receivePlayerInfo(_pID, _addr, _name, _laff);\n        }\n\n    }\n\n    function changeMyName(string _nameString)\n        isHuman()\n        public\n    {\n        bytes32 _name = _nameString.nameFilter();\n        uint256 _pID = pIDxAddr_[msg.sender];\n\n        plyr_[_pID].name = _name;\n    }\n\n    function registerNameCore(uint256 _pID, address _addr, uint256 _affID, bytes32 _name, bool _isNewPlayer, bool _all)\n        private\n    {\n        if (pIDxName_[_name] != 0)\n            require(pIDxName_[_name] == _pID, \"sorry that names already taken\");\n\n        plyr_[_pID].name = _name;\n        pIDxName_[_name] = _pID;\n\n        admin.transfer(address(th",
        "debug": "calldata_UserDataManagerReceiverInterface_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_UserDataManagerReceiverInterface_0: 0x685ffd8300000000000000000000000000000000000000000000000000000000\ncalldatasize_UserDataManagerReceiverInterface: 0x4\n",
        "description": "A possible integer overflow exists in the function `registerNameXname(string,bytes32,bool)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x5576250692275701efde5eeb51596e2d9460790b.sol",
        "function": "registerNameXname(string,bytes32,bool)",
        "lineno": 225,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1347,
        "code": "        uint256 _pID = pIDxAddr_[_addr];\n\n        uint256 _affID;\n        if (_affCode != address(0) && _affCode != _addr)\n        {\n            _affID = pIDxAddr_[_affCode];\n\n            if (_affID != plyr_[_pID].laff)\n            {\n                plyr_[_pID].la",
        "debug": "calldata_UserDataManagerReceiverInterface_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_UserDataManagerReceiverInterface_0: 0x6c52660d00000000000000000000000000000000000000000000000000000000\ncalldatasize_UserDataManagerReceiverInterface: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `checkIfNameValid(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x5576250692275701efde5eeb51596e2d9460790b.sol",
        "function": "checkIfNameValid(string)",
        "lineno": 160,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 3305,
        "code": "dr_[_addr]);\n    }\n    function getPlayerName(uint256 ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_contracts/0x5576250692275701efde5eeb51596e2d9460790b.sol",
        "function": "addMeToAllGames()",
        "lineno": 284,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 3305,
        "code": "dr_[_addr]);\n    }\n    function getPlayerName(uint256 ",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3305\nCall at address: 3305\nCall at address: 3305\n",
        "filename": "/unique_contracts/0x5576250692275701efde5eeb51596e2d9460790b.sol",
        "function": "addMeToAllGames()",
        "lineno": 284,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 4481,
        "code": "    );",
        "debug": "storage_5: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncaller: 0x0\nstorage_0: 0x0\ncalldata_UserDataManagerReceiverInterface_0: 0x3fda926e00000000000000000000000000000000000000000000000000000000\ncalldatasize_UserDataManagerReceiverInterface: 0x4\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_UserDataManagerReceiverInterface_4: 0x0\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `addGame(address,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x5576250692275701efde5eeb51596e2d9460790b.sol",
        "function": "addGame(address,string)",
        "lineno": 452,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 6916,
        "code": "terminePID(address _addr)\n        private\n        returns (bool)\n    {\n        if ",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_contracts/0x5576250692275701efde5eeb51596e2d9460790b.sol",
        "function": "addMeToGame(uint256)",
        "lineno": 262,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 10089,
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_UserDataManagerReceiverInterface_4 + calldata_UserDataManagerReceiverInterface_4: 0x1\ncallvalue: 0x0\ncalldata_UserDataManagerReceiverInterface_cpy: 0x3000000000000000000000000000000000000000000000000000000000000000\nmem_160 +\n115792089237316195423570985008687907853269984665640564039457584007913129639935 +\ncalldata_UserDataManagerReceiverInterface_4 + calldata_UserDataManagerReceiverInterface_4: 0x0\nstorage_1: 0x0\ncalldata_UserDataManagerReceiverInterface_0: 0x3ddd469800000000000000000000000000000000000000000000000000000000\ncalldatasize_UserDataManagerReceiverInterface: 0x4\nextcodesize: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0x5576250692275701efde5eeb51596e2d9460790b.sol",
        "function": "registerNameXaddr(string,address,bool)",
        "lineno": 469,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 13253,
        "code": "pID) {",
        "debug": "storage_6: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncallvalue: 0x0\nstorage_1: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_UserDataManagerReceiverInterface_0: 0x745ea0c100000000000000000000000000000000000000000000000000000000\ncalldatasize_UserDataManagerReceiverInterface: 0x4\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_UserDataManagerReceiverInterface_4: 0x0\n",
        "description": "A possible integer overflow exists in the function `registerNameXnameFromDapp(address,bytes32,bytes32,bool)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x5576250692275701efde5eeb51596e2d9460790b.sol",
        "function": "registerNameXnameFromDapp(address,bytes32,bytes32,bool)",
        "lineno": 330,
        "title": "Integer Overflow ",
        "type": "Warning"
      }
    ],
    "success": true
  }
}