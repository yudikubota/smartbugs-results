{
  "contract": "0x8de182b3a0c4c6f6dfecb7ade212ffb33b22e20a",
  "tool": "mythril",
  "start": 1563741374.3451788,
  "end": 1563741601.9095411,
  "duration": 227.56436228752136,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 1680,
        "code": "rn true;\n    }\n\n  ",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_WGCToken_0: 0x95ea7b300000000000000000000000000000000000000000000000000000000\ncalldatasize_WGCToken: 0x4\ncalldata_WGCToken_32 + 4: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/43/0x8de182b3a0c4c6f6dfecb7ade212ffb33b22e20a.sol",
        "function": "approve(address,uint256)",
        "lineno": 85,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 1861,
        "code": "e burn() instead\n ",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_WGCToken_32 + 4: 0x0\ncalldata_WGCToken_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_WGCToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/43/0x8de182b3a0c4c6f6dfecb7ade212ffb33b22e20a.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 90,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 1873,
        "code": "f the sender has e",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_WGCToken_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_WGCToken_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_WGCToken: 0x4\ncalldata_WGCToken_32 + 36: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/43/0x8de182b3a0c4c6f6dfecb7ade212ffb33b22e20a.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 92,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 1948,
        "code": "   assert(balanceOf[_to] + _value ",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_WGCToken_32 + 36: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_WGCToken_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncalldata_WGCToken_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_WGCToken_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_WGCToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/43/0x8de182b3a0c4c6f6dfecb7ade212ffb33b22e20a.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 93,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2088,
        "code": "alue <= allowance[_from][msg.sender]);     // Che",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_WGCToken_32 + 36: 0x950dff78e666f73fd36ffedf5fe656f42f732f95edbafb7bf77fedeee4c653a9\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_WGCToken_32_+_4: 0xf71ca024c4e4c48edb080090575702d73908a831c1b8c07b8480010000f10f3b\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_WGCToken_4: 0x950dff78e666f73fd36ffedf5fe656f42f732f95edbafb7bf77fedeee4c653a9\ncalldata_WGCToken_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_WGCToken_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_WGCToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/43/0x8de182b3a0c4c6f6dfecb7ade212ffb33b22e20a.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 94,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2224,
        "code": "m] = SafeMath.safeSub(balanceOf[_from], _value",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_WGCToken_32 + 36: 0xde909434450288b26659ed7ccac82179fdf3c75ecae9f535a802143befbd7757\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_WGCToken_32_+_4: 0x15ebcef777fa48d9f7c008301bc00179f8b82cdb888d3c306040111bc0210483\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xde909434450288b26659ed7ccac82179fdf3c75ecae9f535a802143befbd7756\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_WGCToken_4: 0xde909434450288b26659ed7ccac82179fdf3c75ecae9f535a802143befbd7757\ncalldata_WGCToken_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_WGCToken_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_WGCToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/43/0x8de182b3a0c4c6f6dfecb7ade212ffb33b22e20a.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 95,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2986,
        "code": "e {\n    }\n}",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_4: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_WGCToken_0: 0x3bed33ce00000000000000000000000000000000000000000000000000000000\ncalldatasize_WGCToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/43/0x8de182b3a0c4c6f6dfecb7ade212ffb33b22e20a.sol",
        "function": "withdrawEther(uint256)",
        "lineno": 126,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3069,
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function withdrawEther(uint256). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/43/0x8de182b3a0c4c6f6dfecb7ade212ffb33b22e20a.sol",
        "function": "withdrawEther(uint256)",
        "lineno": 128,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 3185,
        "code": "he sender has enough\n      ",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_4: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_WGCToken_0: 0x42966c6800000000000000000000000000000000000000000000000000000000\ncalldatasize_WGCToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/43/0x8de182b3a0c4c6f6dfecb7ade212ffb33b22e20a.sol",
        "function": "burn(uint256)",
        "lineno": 104,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3260,
        "code": "alue > 0);\n        balanceOf[msg.sender",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncalldata_WGCToken_4: 0x1\nstorage_4: 0x0\ncaller: 0x0\ncalldata_WGCToken_0: 0x42966c6800000000000000000000000000000000000000000000000000000000\ncalldatasize_WGCToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/43/0x8de182b3a0c4c6f6dfecb7ade212ffb33b22e20a.sol",
        "function": "burn(uint256)",
        "lineno": 105,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3272,
        "code": "                  ",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_4: 0x0\ncaller: 0x0\ncalldata_WGCToken_0: 0x42966c6800000000000000000000000000000000000000000000000000000000\ncalldatasize_WGCToken: 0x4\ncalldata_WGCToken_4: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/43/0x8de182b3a0c4c6f6dfecb7ade212ffb33b22e20a.sol",
        "function": "burn(uint256)",
        "lineno": 106,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3828,
        "code": "eturn true;\n    }\n\n    // t",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_4: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_WGCToken_0: 0xa6f9dae100000000000000000000000000000000000000000000000000000000\ncalldatasize_WGCToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/43/0x8de182b3a0c4c6f6dfecb7ade212ffb33b22e20a.sol",
        "function": "changeOwner(address)",
        "lineno": 116,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 4028,
        "code": "to 0x0 address. Us",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_WGCToken_4: 0x0\ncalldata_WGCToken_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncalldatasize_WGCToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/43/0x8de182b3a0c4c6f6dfecb7ade212ffb33b22e20a.sol",
        "function": "transfer(address,uint256)",
        "lineno": 71,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 4040,
        "code": "        // Check i",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_WGCToken_4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_WGCToken_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncalldatasize_WGCToken: 0x4\ncalldata_WGCToken_32 + 4: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/43/0x8de182b3a0c4c6f6dfecb7ade212ffb33b22e20a.sol",
        "function": "transfer(address,uint256)",
        "lineno": 73,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 4115,
        "code": "r has enough\n        assert(balanceOf[_",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_WGCToken_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncalldata_WGCToken_4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_WGCToken_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncalldatasize_WGCToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/43/0x8de182b3a0c4c6f6dfecb7ade212ffb33b22e20a.sol",
        "function": "transfer(address,uint256)",
        "lineno": 73,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 4255,
        "code": "\n        balanceOf[msg.sender] = SafeMath.safeSub",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_WGCToken_4: 0xf71ca024c4e4c48edb080090575702d73908a831c1b8c07b8480010000f10f3b\ncalldata_WGCToken_32 + 4: 0x950dff78e666f73fd36ffedf5fe656f42f732f95edbafb7bf77fedeee4c653a9\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x950dff78e666f73fd36ffedf5fe656f42f732f95edbafb7bf77fedeee4c653a9\ncalldata_WGCToken_4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_WGCToken_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncalldatasize_WGCToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/43/0x8de182b3a0c4c6f6dfecb7ade212ffb33b22e20a.sol",
        "function": "transfer(address,uint256)",
        "lineno": 74,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 4721,
        "code": "return a - b;\n",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_WGCToken_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_3: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_4: 0x0\ncaller: 0x0\ncalldata_WGCToken_0: 0x42966c6800000000000000000000000000000000000000000000000000000000\ncalldatasize_WGCToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/43/0x8de182b3a0c4c6f6dfecb7ade212ffb33b22e20a.sol",
        "function": "burn(uint256)",
        "lineno": 22,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}