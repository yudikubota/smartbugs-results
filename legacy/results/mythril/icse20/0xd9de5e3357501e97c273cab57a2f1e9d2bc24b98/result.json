{
  "contract": "0xd9de5e3357501e97c273cab57a2f1e9d2bc24b98",
  "tool": "mythril",
  "start": 1563212559.2768204,
  "end": 1563212628.0194387,
  "duration": 68.74261832237244,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 808,
        "code": " \n    \n  ",
        "debug": "",
        "description": "Function start(uint256) retrieves the transaction origin (tx.origin) using the ORIGIN opcode. Use msg.sender instead.\nSee also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin",
        "filename": "/unique_contracts/0xd9de5e3357501e97c273cab57a2f1e9d2bc24b98.sol",
        "function": "start(uint256)",
        "lineno": 36,
        "title": "Use of tx.origin",
        "type": "Warning"
      },
      {
        "address": 2034,
        "code": " returns (bool success);\n}  \n\n//Need to ensure the Lotter",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_contracts/0xd9de5e3357501e97c273cab57a2f1e9d2bc24b98.sol",
        "function": "returnAnyERC20Token(address,address,uint256)",
        "lineno": 161,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 2345,
        "code": "6)\n    {\n       uint256 balance = BITBalanceOf(this);\n ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_contracts/0xd9de5e3357501e97c273cab57a2f1e9d2bc24b98.sol",
        "function": "getTokensPaidToGame(address)",
        "lineno": 120,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 2345,
        "code": "6)\n    {\n       uint256 balance = BITBalanceOf(this);\n ",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2601\n",
        "filename": "/unique_contracts/0xd9de5e3357501e97c273cab57a2f1e9d2bc24b98.sol",
        "function": "start(uint256)",
        "lineno": 120,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 2601,
        "code": " view returns (uint256)\n    {\n    ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_contracts/0xd9de5e3357501e97c273cab57a2f1e9d2bc24b98.sol",
        "function": "BITBalanceOf(address)",
        "lineno": 115,
        "title": "Message call to external contract",
        "type": "Informational"
      }
    ],
    "success": true
  }
}