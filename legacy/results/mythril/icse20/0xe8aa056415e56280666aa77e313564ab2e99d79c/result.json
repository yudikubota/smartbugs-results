{
  "contract": "0xe8aa056415e56280666aa77e313564ab2e99d79c",
  "tool": "mythril",
  "start": 1563714591.7467978,
  "end": 1563714834.9470978,
  "duration": 243.20029997825623,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 1991,
        "code": "tokens);\n        if (balances[teamWallet]",
        "debug": "The exception is triggered under the following conditions:\n\ncalldatasize_XZEN: 0x3\nstorage_6: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/40/0xe8aa056415e56280666aa77e313564ab2e99d79c.sol",
        "function": "fallback",
        "lineno": 220,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2003,
        "code": "tokens;        \n  ",
        "debug": "storage_7: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffef00\nstorage_6: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldatasize_XZEN: 0x3\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/40/0xe8aa056415e56280666aa77e313564ab2e99d79c.sol",
        "function": "fallback",
        "lineno": 222,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2435,
        "code": "kenPrice) external onlyOwner {\n   ",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function fallback. The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/40/0xe8aa056415e56280666aa77e313564ab2e99d79c.sol",
        "function": "fallback",
        "lineno": 234,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 4166,
        "code": "       multiSigWallet = newMultisig;\n",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function withdraw(). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/40/0xe8aa056415e56280666aa77e313564ab2e99d79c.sol",
        "function": "withdraw()",
        "lineno": 239,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 6689,
        "code": "sert(",
        "debug": "callvalue: 0x1a00d8dca0a08067020000001c2809f0c11c68000870231c08800881089bc000\ncalldatasize_XZEN: 0x3\n",
        "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/40/0xe8aa056415e56280666aa77e313564ab2e99d79c.sol",
        "function": "fallback",
        "lineno": 15,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 6740,
        "code": "retur",
        "debug": "calldata_XZEN_32 + 36: 0xfe51000008ce80008001c1d33616877ffffffffffffff7ffffe10000398d50ac\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_XZEN_32_+_4: 0xc050fffff320c00020003d81af848540000000000000040000110001bd062022\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xfe51000008ce80008001c1d33616877ffffffffffffff7ffffe10000398d50ac\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_XZEN_4: 0xfe51000008ce80008001c1d33616877ffffffffffffff7ffffe10000398d50ac\ncalldata_XZEN_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_XZEN_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_XZEN: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `transferFrom(address,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/40/0xe8aa056415e56280666aa77e313564ab2e99d79c.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 34,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 6753,
        "code": "}\n}\n\ncontract ",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_XZEN_32 + 36: 0x53632f08ddbb360427befb69cb0d577a76825c1eb02b4cefbf971939ae256117\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_XZEN_32_+_4: 0xd32ba62e013a1e544c40f8298f8c838ef0ca495e903244487f8ba1f8c2a013e7\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x53632f08ddbb360427befb69cb0d577a76825c1eb02b4cefbf971939ae256117\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_XZEN_4: 0x53632f08ddbb360427befb69cb0d577a76825c1eb02b4cefbf971939ae256117\ncalldata_XZEN_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_XZEN_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_XZEN: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/40/0xe8aa056415e56280666aa77e313564ab2e99d79c.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 35,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}