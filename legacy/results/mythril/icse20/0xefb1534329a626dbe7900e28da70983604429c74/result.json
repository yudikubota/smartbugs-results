{
  "contract": "0xefb1534329a626dbe7900e28da70983604429c74",
  "tool": "mythril",
  "start": 1563311267.1413383,
  "end": 1563311275.1118577,
  "duration": 7.970519304275513,
  "analysis": {
    "success": false,
    "error": "Solc experienced a fatal error (code 1).\n\n/unique_contracts/0xefb1534329a626dbe7900e28da70983604429c74.sol:1:1: Error: Source file requires different compiler version (current compiler is 0.4.25+commit.59dbf8f1.Linux.g++ - note that nightly builds are considered to be strictly less than the released version\npragma solidity 0.4.11;\r\n^---------------------^\n/unique_contracts/0xefb1534329a626dbe7900e28da70983604429c74.sol:50:30: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n        if (state != _state) throw;\r\n                             ^---^\n/unique_contracts/0xefb1534329a626dbe7900e28da70983604429c74.sol:55:36: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n        if(msg.value < priceInWei) throw;\r\n                                   ^---^\n/unique_contracts/0xefb1534329a626dbe7900e28da70983604429c74.sol:62:36: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n        if (msg.sender != creator) throw;\r\n                                   ^---^\n/unique_contracts/0xefb1534329a626dbe7900e28da70983604429c74.sol:69:13: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n            throw;\r\n            ^---^\n/unique_contracts/0xefb1534329a626dbe7900e28da70983604429c74.sol:75:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use \"constructor(...) { ... }\" instead.\n    function CrowdSale(\r\n    ^ (Relevant source part starts here and spans across multiple lines).\n/unique_contracts/0xefb1534329a626dbe7900e28da70983604429c74.sol:165:17: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n                throw;\r\n                ^---^\n/unique_contracts/0xefb1534329a626dbe7900e28da70983604429c74.sol:206:23: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n        function () { throw; }\r\n                      ^---^\n/unique_contracts/0xefb1534329a626dbe7900e28da70983604429c74.sol:35:29: Warning: Decimal literal assigned to bytesXX variable will be left-aligned. Use an explicit conversion to silence this warning.\n    byte constant version = 1;\r\n                            ^\n/unique_contracts/0xefb1534329a626dbe7900e28da70983604429c74.sol:93:9: Warning: Invoking events without \"emit\" prefix is deprecated.\n        LogFunderInitialized(\r\n        ^ (Relevant source part starts here and spans across multiple lines).\n/unique_contracts/0xefb1534329a626dbe7900e28da70983604429c74.sol:127:9: Warning: Invoking events without \"emit\" prefix is deprecated.\n        LogFundingReceived(msg.sender, msg.value, totalRaised);\r\n        ^----------------------------------------------------^\n/unique_contracts/0xefb1534329a626dbe7900e28da70983604429c74.sol:140:13: Warning: Invoking events without \"emit\" prefix is deprecated.\n            LogFundingSuccessful(totalRaised);\r\n            ^-------------------------------^\n/unique_contracts/0xefb1534329a626dbe7900e28da70983604429c74.sol:147:21: Warning: Invoking events without \"emit\" prefix is deprecated.\n                    LogFundingSuccessful(totalRaised);\r\n                    ^-------------------------------^\n/unique_contracts/0xefb1534329a626dbe7900e28da70983604429c74.sol:164:34: Warning: Using contract member \"balance\" inherited from the address type is deprecated. Convert the contract to \"address\" type to access the member, for example use \"address(contract).balance\" instead.\n            if(!beneficiary.send(this.balance)) {\r\n                                 ^----------^\n/unique_contracts/0xefb1534329a626dbe7900e28da70983604429c74.sol:170:13: Warning: Invoking events without \"emit\" prefix is deprecated.\n            LogWinnerPaid(beneficiary);\r\n            ^------------------------^\n",
    "issues": []
  }
}