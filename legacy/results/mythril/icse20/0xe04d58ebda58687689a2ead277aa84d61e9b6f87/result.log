{"error": null, "issues": [{"address": 1819, "code": "()\n    public \n    returns (bool succes", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_contracts/0xe04d58ebda58687689a2ead277aa84d61e9b6f87.sol", "function": "withdrawTokens(address,uint256)", "lineno": 204, "title": "Message call to external contract", "type": "Warning"}, {"address": 2192, "code": "ageView(uint256 _packag", "debug": "The exception is triggered under the following conditions:\n\ncalldata_IERC20_4: 0x8000000000000000000000\nstorage_2: 0x8000000000000000000000\nstorage_3: 0x8000000000000000000000\nstorage_0: 0x0\ncaller: 0x0\ncalldata_IERC20_0: 0x1071b84d00000000000000000000000000000000000000000000000000000000\ncalldatasize_IERC20: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_contracts/0xe04d58ebda58687689a2ead277aa84d61e9b6f87.sol", "function": "packageEnabled(uint256,bool)", "lineno": 111, "title": "Exception state", "type": "Informational"}, {"address": 2308, "code": "ion packageTokenView(ui", "debug": "The exception is triggered under the following conditions:\n\ncalldata_IERC20_4: 0x1\nstorage_2: 0x1\nstorage_3: 0x1\ncalldata_IERC20_0: 0x1535d09d00000000000000000000000000000000000000000000000000000000\ncalldatasize_IERC20: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_contracts/0xe04d58ebda58687689a2ead277aa84d61e9b6f87.sol", "function": "packageView(uint256)", "lineno": 124, "title": "Exception state", "type": "Informational"}, {"address": 2844, "code": "\tfunction packageEnable", "debug": "The exception is triggered under the following conditions:\n\ncalldata_IERC20_4: 0x8\nstorage_2: 0x8\ncalldata_IERC20_32 + 36: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_IERC20_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\nstorage_3: 0x8\nstorage_0: 0x0\ncaller: 0x0\ncalldata_IERC20_0: 0x1e440bab00000000000000000000000000000000000000000000000000000000\ncalldatasize_IERC20: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_contracts/0xe04d58ebda58687689a2ead277aa84d61e9b6f87.sol", "function": "packageTokenCreate(uint256,address,uint256)", "lineno": 97, "title": "Exception state", "type": "Informational"}, {"address": 2873, "code": ";\n\n/*\n*   EBIC2019", "debug": "storage_0 +\n29102676481673041902632991033461445430619272659676223336789171408008386403022 +\n2*calldata_IERC20_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_IERC20_4: 0x8000000000000000000000000000000000000000000000000000000000000000\nstorage_2: 0x8000000000000000000000000000000000000000000000000000000000000001\ncalldata_IERC20_32 + 36: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_IERC20_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\nstorage_3: 0x8000000000000000000000000000000000000000000000000000000000000000\nstorage_0: 0x0\ncaller: 0x0\ncalldata_IERC20_0: 0x1e440bab00000000000000000000000000000000000000000000000000000000\ncalldatasize_IERC20: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `packageTokenCreate(uint256,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0xe04d58ebda58687689a2ead277aa84d61e9b6f87.sol", "function": "packageTokenCreate(uint256,address,uint256)", "lineno": 1, "title": "Integer Overflow ", "type": "Warning"}, {"address": 3496, "code": "== owner);\n        require(_token != ad", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_contracts/0xe04d58ebda58687689a2ead277aa84d61e9b6f87.sol", "function": "balanceOfTokens(address)", "lineno": 194, "title": "Message call to external contract", "type": "Warning"}, {"address": 3665, "code": "ge = packages[_in", "debug": "storage_2: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_0: 0x0\ncaller: 0x0\ncalldata_IERC20_0: 0x32534e6500000000000000000000000000000000000000000000000000000000\ncalldatasize_IERC20: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `packageCreate()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0xe04d58ebda58687689a2ead277aa84d61e9b6f87.sol", "function": "packageCreate()", "lineno": 70, "title": "Integer Overflow ", "type": "Warning"}, {"address": 3701, "code": "\n\t\n\tfunction pac", "debug": "The exception is triggered under the following conditions:\n\nstorage_2: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_0: 0x0\ncaller: 0x0\ncalldata_IERC20_0: 0x32534e6500000000000000000000000000000000000000000000000000000000\ncalldatasize_IERC20: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_contracts/0xe04d58ebda58687689a2ead277aa84d61e9b6f87.sol", "function": "packageCreate()", "lineno": 73, "title": "Exception state", "type": "Informational"}, {"address": 3760, "code": " address _toke", "debug": "storage_3: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_2: 0x2000000320537bdc0043e6005000000000000000000000000000000000000000\nstorage_0: 0x0\ncaller: 0x0\ncalldata_IERC20_0: 0x32534e6500000000000000000000000000000000000000000000000000000000\ncalldatasize_IERC20: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `packageCreate()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0xe04d58ebda58687689a2ead277aa84d61e9b6f87.sol", "function": "packageCreate()", "lineno": 75, "title": "Integer Overflow ", "type": "Warning"}, {"address": 4515, "code": "C20(package.tokens[inde", "debug": "The exception is triggered under the following conditions:\n\ncalldata_IERC20_32 + 4: 0x1\nstorage_2: 0x1\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_IERC20_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncalldata_IERC20_4: 0xffffffffffffffffffffffffffffffffffffffff\nstorage_1: 0x0\nstorage_0: 0xffffffffffffffffffffffffffffffffffffffff00\ncaller: 0x0\ncalldata_IERC20_0: 0x4c01660b00000000000000000000000000000000000000000000000000000000\ncalldatasize_IERC20: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_contracts/0xe04d58ebda58687689a2ead277aa84d61e9b6f87.sol", "function": "packageSend(address,uint256)", "lineno": 155, "title": "Exception state", "type": "Informational"}, {"address": 5372, "code": "okenIndex];\n\t    _token", "debug": "The exception is triggered under the following conditions:\n\ncalldata_IERC20_4: 0x1\nstorage_2: 0x1\nstorage_3: 0x1\ncalldata_IERC20_0: 0x4fd6922400000000000000000000000000000000000000000000000000000000\ncalldatasize_IERC20: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_contracts/0xe04d58ebda58687689a2ead277aa84d61e9b6f87.sol", "function": "packageTokenView(uint256,uint256)", "lineno": 135, "title": "Exception state", "type": "Informational"}], "success": true}