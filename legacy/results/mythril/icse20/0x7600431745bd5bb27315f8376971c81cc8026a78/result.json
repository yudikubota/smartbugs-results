{
  "contract": "0x7600431745bd5bb27315f8376971c81cc8026a78",
  "tool": "mythril",
  "start": 1563494849.0681114,
  "end": 1563495106.132629,
  "duration": 257.06451749801636,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 755,
        "code": "ert(msg.value>=minSizeInvest);\n\n\t\tif(holders[msg.sender] == 0){\n\t\t\tcountHolders += 1;\n\t\t}\n\t\tholders[msg.sender] += msg.value;\n\t\tamount_investments += msg.value;\n\t\tInvestment(msg.sender, msg.value);\n\n\t\tif(affiliate != address(0x0)){\n\t\t\tvar (partner_address, partner_bonus, referral_bonus) = contractAffiliate.add_referral(msg.sender, promo, msg.value);\n\t\t\tif(partner_bonus > 0 && partner_address != address(0x0)){\n\t\t\t\tholdersBonus[partner_address] += msg.value;\n\t\t\t\tamount_bonus += msg.value;\n\t\t\t}\n\t\t\tif(referral_bonus > 0){\n\t\t\t\tholdersBonus[msg.sender] = referral_bonus;\n\t\t\t\tamount_bonus += referral_bonus;\n\t\t\t}\n\t\t}\n\t\tstopPreIco_step2();\n\t}\n\n\tfunction () payable {\n\t\tbuy('');\n\t}\n}",
        "debug": "calldata_BMPre_ICO_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_BMPre_ICO_0: 0x492cc76900000000000000000000000000000000000000000000000000000000\ncalldatasize_BMPre_ICO: 0x4\n",
        "description": "A possible integer overflow exists in the function `buy(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/6/0x7600431745bd5bb27315f8376971c81cc8026a78.sol",
        "function": "buy(string)",
        "lineno": 103,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 767,
        "code": "ert(msg.value>=minSizeInvest);\n\n\t\tif(holders[msg.sender] == 0){\n\t\t\tcountHolders += 1;\n\t\t}\n\t\tholders[msg.sender] += msg.value;\n\t\tamount_investments += msg.value;\n\t\tInvestment(msg.sender, msg.value);\n\n\t\tif(affiliate != address(0x0)){\n\t\t\tvar (partner_address, partner_bonus, referral_bonus) = contractAffiliate.add_referral(msg.sender, promo, msg.value);\n\t\t\tif(partner_bonus > 0 && partner_address != address(0x0)){\n\t\t\t\tholdersBonus[partner_address] += msg.value;\n\t\t\t\tamount_bonus += msg.value;\n\t\t\t}\n\t\t\tif(referral_bonus > 0){\n\t\t\t\tholdersBonus[msg.sender] = referral_bonus;\n\t\t\t\tamount_bonus += referral_bonus;\n\t\t\t}\n\t\t}\n\t\tstopPreIco_step2();\n\t}\n\n\tfunction () payable {\n\t\tbuy('');\n\t}\n}",
        "debug": "calldata_BMPre_ICO_4 + calldata_BMPre_ICO_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8\ncalldata_BMPre_ICO_0: 0x492cc76900000000000000000000000000000000000000000000000000000000\ncalldatasize_BMPre_ICO: 0x4\n",
        "description": "A possible integer overflow exists in the function `buy(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/6/0x7600431745bd5bb27315f8376971c81cc8026a78.sol",
        "function": "buy(string)",
        "lineno": 103,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 776,
        "code": "ert(msg.value>=minSizeInvest);\n\n\t\tif(holders[msg.sender] == 0){\n\t\t\tcountHolders += 1;\n\t\t}\n\t\tholders[msg.sender] += msg.value;\n\t\tamount_investments += msg.value;\n\t\tInvestment(msg.sender, msg.value);\n\n\t\tif(affiliate != address(0x0)){\n\t\t\tvar (partner_address, partner_bonus, referral_bonus) = contractAffiliate.add_referral(msg.sender, promo, msg.value);\n\t\t\tif(partner_bonus > 0 && partner_address != address(0x0)){\n\t\t\t\tholdersBonus[partner_address] += msg.value;\n\t\t\t\tamount_bonus += msg.value;\n\t\t\t}\n\t\t\tif(referral_bonus > 0){\n\t\t\t\tholdersBonus[msg.sender] = referral_bonus;\n\t\t\t\tamount_bonus += referral_bonus;\n\t\t\t}\n\t\t}\n\t\tstopPreIco_step2();\n\t}\n\n\tfunction () payable {\n\t\tbuy('');\n\t}\n}",
        "debug": "calldata_BMPre_ICO_4 + calldata_BMPre_ICO_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc1\ncalldata_BMPre_ICO_0: 0x492cc76900000000000000000000000000000000000000000000000000000000\ncalldatasize_BMPre_ICO: 0x4\n",
        "description": "A possible integer overflow exists in the function `buy(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/6/0x7600431745bd5bb27315f8376971c81cc8026a78.sol",
        "function": "buy(string)",
        "lineno": 103,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 782,
        "code": "ert(msg.value>=minSizeInvest);\n\n\t\tif(holders[msg.sender] == 0){\n\t\t\tcountHolders += 1;\n\t\t}\n\t\tholders[msg.sender] += msg.value;\n\t\tamount_investments += msg.value;\n\t\tInvestment(msg.sender, msg.value);\n\n\t\tif(affiliate != address(0x0)){\n\t\t\tvar (partner_address, partner_bonus, referral_bonus) = contractAffiliate.add_referral(msg.sender, promo, msg.value);\n\t\t\tif(partner_bonus > 0 && partner_address != address(0x0)){\n\t\t\t\tholdersBonus[partner_address] += msg.value;\n\t\t\t\tamount_bonus += msg.value;\n\t\t\t}\n\t\t\tif(referral_bonus > 0){\n\t\t\t\tholdersBonus[msg.sender] = referral_bonus;\n\t\t\t\tamount_bonus += referral_bonus;\n\t\t\t}\n\t\t}\n\t\tstopPreIco_step2();\n\t}\n\n\tfunction () payable {\n\t\tbuy('');\n\t}\n}",
        "debug": "calldata_BMPre_ICO_4 + calldata_BMPre_ICO_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff41\ncalldata_BMPre_ICO_0: 0x492cc76900000000000000000000000000000000000000000000000000000000\ncalldatasize_BMPre_ICO: 0x4\n",
        "description": "A possible integer overflow exists in the function `buy(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/6/0x7600431745bd5bb27315f8376971c81cc8026a78.sol",
        "function": "buy(string)",
        "lineno": 103,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1479,
        "code": "ders[msg.sender] == 0){",
        "debug": "The exception is triggered under the following conditions:\n\ntimestamp: 0x0\nstorage_6: 0x0\ncalldata_BMPre_ICO_0: 0x492cc76900000000000000000000000000000000000000000000000000000000\ncalldatasize_BMPre_ICO: 0x4\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/6/0x7600431745bd5bb27315f8376971c81cc8026a78.sol",
        "function": "buy(string)",
        "lineno": 105,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 1493,
        "code": "ountHolders += 1;\n\t\t}\n\t\tho",
        "debug": "The exception is triggered under the following conditions:\n\ntimestamp: 0x0\nstorage_5: 0x1\nstorage_6: 0x1\ncalldata_BMPre_ICO_0: 0x492cc76900000000000000000000000000000000000000000000000000000000\ncalldatasize_BMPre_ICO: 0x4\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/6/0x7600431745bd5bb27315f8376971c81cc8026a78.sol",
        "function": "buy(string)",
        "lineno": 106,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 1507,
        "code": "[msg.sender] += msg.value;\n\t\tamo",
        "debug": "The exception is triggered under the following conditions:\n\ncallvalue: 0x0\ntimestamp: 0x0\nstorage_8: 0x1\nstorage_5: 0x0\nstorage_6: 0x1\ncalldata_BMPre_ICO_0: 0x492cc76900000000000000000000000000000000000000000000000000000000\ncalldatasize_BMPre_ICO: 0x4\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/6/0x7600431745bd5bb27315f8376971c81cc8026a78.sol",
        "function": "buy(string)",
        "lineno": 108,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 1589,
        "code": "t(msg.sender, msg",
        "debug": "storage_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncallvalue: 0x0\ntimestamp: 0x0\nstorage_8: 0x0\nstorage_5: 0x0\nstorage_6: 0x1\ncalldata_BMPre_ICO_0: 0x492cc76900000000000000000000000000000000000000000000000000000000\ncalldatasize_BMPre_ICO: 0x4\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\n",
        "description": "A possible integer overflow exists in the function `buy(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/6/0x7600431745bd5bb27315f8376971c81cc8026a78.sol",
        "function": "buy(string)",
        "lineno": 110,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1666,
        "code": "\t\tif(affiliate != address(0x0)){",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncallvalue: 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ntimestamp: 0x0\nstorage_8: 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_5: 0x0\nstorage_6: 0x1\ncalldata_BMPre_ICO_0: 0x492cc76900000000000000000000000000000000000000000000000000000000\ncalldatasize_BMPre_ICO: 0x4\n",
        "description": "A possible integer overflow exists in the function `buy(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/6/0x7600431745bd5bb27315f8376971c81cc8026a78.sol",
        "function": "buy(string)",
        "lineno": 112,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1682,
        "code": "ar (partner_address, partner_bo",
        "debug": "storage_2: 0x6fa613b31105f33968dfdfd25de19aceb682c10d6428182e2082d401048be3f8\ncallvalue: 0xff8dd1180277f6048eff0ba68dfa1b212642db55a4c1650e814d13480aebfbdb\ntimestamp: 0x0\nstorage_8: 0xff8dd1180277f6048eff0ba68dfa1b212642db55a4c1650e814d13480aebfbdb\nstorage_5: 0x0\nstorage_6: 0x1\ncalldata_BMPre_ICO_0: 0x492cc76900000000000000000000000000000000000000000000000000000000\ncalldatasize_BMPre_ICO: 0x4\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\n",
        "description": "A possible integer overflow exists in the function `buy(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/6/0x7600431745bd5bb27315f8376971c81cc8026a78.sol",
        "function": "buy(string)",
        "lineno": 113,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2192,
        "code": "ess(0x0)){\n\t\t\t\tholdersBonus[partner_address] += msg.value;\n\t",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/6/0x7600431745bd5bb27315f8376971c81cc8026a78.sol",
        "function": "buy(string)",
        "lineno": 114,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 2192,
        "code": "ess(0x0)){\n\t\t\t\tholdersBonus[partner_address] += msg.value;\n\t",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function buy(string). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/6/0x7600431745bd5bb27315f8376971c81cc8026a78.sol",
        "function": "buy(string)",
        "lineno": 114,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 2410,
        "code": "dersBonus[msg.sender] = referral_bonus;\n\t\t",
        "debug": "callvalue: 0xff8dd1180277f6048eff0ba68dfa1b212642db55a4c1650e814d13480aebfbdb\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\nmem_128_+\n32_+\n32*\nConcat(0,\n_______Extract(255,\n_______________5,\n_______________31_+\n_______________calldata_BMPre_ICO_4_+_calldata_BMPre_ICO_4)): 0x6fa613b31105f33968dfdfd25de19aceb682c10d6428182e2082d401048be3f8\ntimestamp: 0x0\nmem_128 +\n32 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_BMPre_ICO_4 + calldata_BMPre_ICO_4)): 0xffffffffffffffffffffffffffffffffffffffff\nmem_32 +\n160 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_BMPre_ICO_4 + calldata_BMPre_ICO_4)): 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nreturndatasize: 0x60\nretval_2192: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_10: 0xffffffffffffffffffffffffffffffffffffffff00\nstorage_8: 0xff8dd1180277f6048eff0ba68dfa1b212642db55a4c1650e814d13480aebfbdb\nstorage_5: 0x0\nstorage_6: 0x1\ncalldata_BMPre_ICO_0: 0x492cc76900000000000000000000000000000000000000000000000000000000\ncalldatasize_BMPre_ICO: 0x4\ncalldata_BMPre_ICO_4 + calldata_BMPre_ICO_4: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\n",
        "description": "A possible integer overflow exists in the function `buy(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/6/0x7600431745bd5bb27315f8376971c81cc8026a78.sol",
        "function": "buy(string)",
        "lineno": 119,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2426,
        "code": "t_bonus += referral_bonus",
        "debug": "storage_3: 0x6fa613b31105f33968dfdfd25de19aceb682c10d6428182e2082d401048be3f8\ncallvalue: 0xff8dd1180277f6048eff0ba68dfa1b212642db55a4c1650e814d13480aebfbdb\ntimestamp: 0x0\nmem_128 +\n32 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_BMPre_ICO_4 + calldata_BMPre_ICO_4)): 0xffffffffffffffffffffffffffffffffffffffff\nmem_32 +\n160 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_BMPre_ICO_4 + calldata_BMPre_ICO_4)): 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nreturndatasize: 0x60\nretval_2192: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_10: 0xffffffffffffffffffffffffffffffffffffffff00\nstorage_8: 0xff8dd1180277f6048eff0ba68dfa1b212642db55a4c1650e814d13480aebfbdb\nstorage_5: 0x0\nstorage_6: 0x1\ncalldata_BMPre_ICO_0: 0x492cc76900000000000000000000000000000000000000000000000000000000\ncalldatasize_BMPre_ICO: 0x4\ncalldata_BMPre_ICO_4 + calldata_BMPre_ICO_4: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\n",
        "description": "A possible integer overflow exists in the function `buy(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/6/0x7600431745bd5bb27315f8376971c81cc8026a78.sol",
        "function": "buy(string)",
        "lineno": 120,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2797,
        "code": "}\n\n\tfunction changeOwner(ad",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_9: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_BMPre_ICO_0: 0x9779dcd900000000000000000000000000000000000000000000000000000000\ncalldatasize_BMPre_ICO: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/6/0x7600431745bd5bb27315f8376971c81cc8026a78.sol",
        "function": "sendInvestmentsToOwner()",
        "lineno": 38,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2811,
        "code": "le {\n\t\tassert(now < preI",
        "debug": "The exception is triggered under the following conditions:\n\ntimestamp: 0x0\nstorage_6: 0x1\nstorage_9: 0x0\ncaller: 0x0\ncalldata_BMPre_ICO_0: 0x9779dcd900000000000000000000000000000000000000000000000000000000\ncalldatasize_BMPre_ICO: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/6/0x7600431745bd5bb27315f8376971c81cc8026a78.sol",
        "function": "sendInvestmentsToOwner()",
        "lineno": 100,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2917,
        "code": ");\n\t\tassert(now >= preIcoSta",
        "debug": "",
        "description": "In the function `sendInvestmentsToOwner()` the following predictable state variables are used to determine Ether recipient:\n- block.timestamp\n",
        "filename": "/unique_chucks/6/0x7600431745bd5bb27315f8376971c81cc8026a78.sol",
        "function": "sendInvestmentsToOwner()",
        "lineno": 101,
        "title": "Dependence on predictable environment variable",
        "type": "Warning"
      },
      {
        "address": 2917,
        "code": ");\n\t\tassert(now >= preIcoSta",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function sendInvestmentsToOwner(). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/6/0x7600431745bd5bb27315f8376971c81cc8026a78.sol",
        "function": "sendInvestmentsToOwner()",
        "lineno": 101,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 3030,
        "code": "}\n\n\tfunction changeOwner(ad",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_9: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_BMPre_ICO_0: 0xa6f9dae100000000000000000000000000000000000000000000000000000000\ncalldatasize_BMPre_ICO: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/6/0x7600431745bd5bb27315f8376971c81cc8026a78.sol",
        "function": "changeOwner(address)",
        "lineno": 38,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3087,
        "code": "t(new_owner!=address(this));\n\t\t",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_BMPre_ICO_4: 0x0\nstorage_9: 0x0\ncaller: 0x0\ncalldata_BMPre_ICO_0: 0xa6f9dae100000000000000000000000000000000000000000000000000000000\ncalldatasize_BMPre_ICO: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/6/0x7600431745bd5bb27315f8376971c81cc8026a78.sol",
        "function": "changeOwner(address)",
        "lineno": 42,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3282,
        "code": "0)/1000000000000000000",
        "debug": "storage_12: 0x100000\ncallvalue: 0x0\ntimestamp: 0x0\ncalldata_BMPre_ICO_4 + calldata_BMPre_ICO_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff21\nblockhash_block_storage_12: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nblock_number: 0x100001\nstorage_10: 0x0\nstorage_8: 0x0\nstorage_5: 0x0\nstorage_6: 0x1\ncalldata_BMPre_ICO_0: 0x492cc76900000000000000000000000000000000000000000000000000000000\ncalldatasize_BMPre_ICO: 0x4\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\n",
        "description": "A possible integer overflow exists in the function `buy(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/6/0x7600431745bd5bb27315f8376971c81cc8026a78.sol",
        "function": "buy(string)",
        "lineno": 80,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 3392,
        "code": "\n\t\t\t\t\tif(preIcoEnd - n",
        "debug": "storage_2: 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c291\ncallvalue: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_12: 0x8000000000000000000000000000000000000000000000000000000000000000\ntimestamp: 0x0\nblockhash_block_storage_12: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nblock_number: 0x8000000000000000000000000000000000000000000000000000000000000001\nstorage_10: 0x0\nstorage_8: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_5: 0x0\nstorage_6: 0x1\ncalldata_BMPre_ICO_0: 0x492cc76900000000000000000000000000000000000000000000000000000000\ncalldatasize_BMPre_ICO: 0x4\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\n",
        "description": "A possible integer overflow exists in the function `buy(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/6/0x7600431745bd5bb27315f8376971c81cc8026a78.sol",
        "function": "buy(string)",
        "lineno": 83,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 3614,
        "code": "}\n\n\tfunction changeOwner(ad",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_9: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_BMPre_ICO_0: 0xc161594500000000000000000000000000000000000000000000000000000000\ncalldatasize_BMPre_ICO: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/6/0x7600431745bd5bb27315f8376971c81cc8026a78.sol",
        "function": "setAffiliateContract(address)",
        "lineno": 38,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3671,
        "code": "w_address!=address(this));\n\t\taffi",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_BMPre_ICO_4: 0x0\nstorage_9: 0x0\ncaller: 0x0\ncalldata_BMPre_ICO_0: 0xc161594500000000000000000000000000000000000000000000000000000000\ncalldatasize_BMPre_ICO: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/6/0x7600431745bd5bb27315f8376971c81cc8026a78.sol",
        "function": "setAffiliateContract(address)",
        "lineno": 48,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}