{
  "contract": "0x3bb3354f82654dd609300e92c92cf2c7c1bf3171",
  "tool": "mythril",
  "start": 1563722858.4189599,
  "end": 1563723045.2849662,
  "duration": 186.86600637435913,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 5450,
        "code": "t amount. \n \t * @notice If this function is calle",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/38/0x3bb3354f82654dd609300e92c92cf2c7c1bf3171.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 483,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 5450,
        "code": "t amount. \n \t * @notice If this function is calle",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function transferFrom(address,address,uint256). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/38/0x3bb3354f82654dd609300e92c92cf2c7c1bf3171.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 483,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 5770,
        "code": "der, uint256 _amount) public returns (bool suc",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/38/0x3bb3354f82654dd609300e92c92cf2c7c1bf3171.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 486,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 7123,
        "code": "rror('tra",
        "debug": "",
        "description": "Function refundTokens(address,uint256) retrieves the transaction origin (tx.origin) using the ORIGIN opcode. Use msg.sender instead.\nSee also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin",
        "filename": "/unique_chucks/38/0x3bb3354f82654dd609300e92c92cf2c7c1bf3171.sol",
        "function": "refundTokens(address,uint256)",
        "lineno": 558,
        "title": "Use of tx.origin",
        "type": "Warning"
      },
      {
        "address": 7964,
        "code": "omplianceService(address _addressSCComplianceService) publ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/38/0x3bb3354f82654dd609300e92c92cf2c7c1bf3171.sol",
        "function": "refundTokens(address,uint256)",
        "lineno": 576,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 7964,
        "code": "omplianceService(address _addressSCComplianceService) publ",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function refundTokens(address,uint256). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/38/0x3bb3354f82654dd609300e92c92cf2c7c1bf3171.sol",
        "function": "refundTokens(address,uint256)",
        "lineno": 576,
        "title": "Transaction order dependence",
        "type": "Warning"
      }
    ],
    "success": true
  }
}