{
  "contract": "0x300cff0f78f58c8b6d395ca0ebe8604137884ce5",
  "tool": "mythril",
  "start": 1563643411.9584687,
  "end": 1563643493.4982133,
  "duration": 81.53974461555481,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 2155,
        "code": ";\n    }\n\n    /**\n    * @dev Evaluate current ba",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function fallback. The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/29/0x300cff0f78f58c8b6d395ca0ebe8604137884ce5.sol",
        "function": "fallback",
        "lineno": 92,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 4544,
        "debug": "The exception is triggered under the following conditions:\n\ntimestamp: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_Testing4_4: 0x1\ncalldata_Testing4_0: 0xf8b2cb4f00000000000000000000000000000000000000000000000000000000\ncalldatasize_Testing4: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/29/0x300cff0f78f58c8b6d395ca0ebe8604137884ce5.sol",
        "function": "getBalance(address)",
        "lineno": 224,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}