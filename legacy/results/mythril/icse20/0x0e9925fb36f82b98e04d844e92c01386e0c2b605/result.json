{
  "contract": "0x0e9925fb36f82b98e04d844e92c01386e0c2b605",
  "tool": "mythril",
  "start": 1563258907.4706929,
  "end": 1563259147.08011,
  "duration": 239.6094172000885,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 1463,
        "code": "           uint256 balance = token.balanceOf(this);\n            token.transfer(owner, balance);\n        }\n\n        selfdestruct(owner);\n    }\n}\n\ncontract BasicToken is ERC20Basic\n{\n    using SafeMath for uint256;\n\n    //--------------------------------------------------------------------------\n    //\n    //\tProperties\n    //",
        "debug": "calldata_TrinoToken_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_TrinoToken_0: 0xc6786e5a00000000000000000000000000000000000000000000000000000000\ncalldatasize_TrinoToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `destroy(address[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x0e9925fb36f82b98e04d844e92c01386e0c2b605.sol",
        "function": "destroy(address[])",
        "lineno": 181,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 5655,
        "code": "56;\n\n    //----------",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_contracts/0x0e9925fb36f82b98e04d844e92c01386e0c2b605.sol",
        "function": "destroy(address[])",
        "lineno": 191,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 6802,
        "code": " returns (uint",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_TrinoToken_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_1: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_TrinoToken_0: 0x42966c6800000000000000000000000000000000000000000000000000000000\ncalldatasize_TrinoToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0x0e9925fb36f82b98e04d844e92c01386e0c2b605.sol",
        "function": "burn(uint256)",
        "lineno": 102,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 6819,
        "code": "-----",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TrinoToken_4: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncalldata_TrinoToken_32 + 4: 0x57f25cd000000000000000000000000000000000000000000000000000000000\ncalldata_TrinoToken_0: 0xd73dd62300000000000000000000000000000000000000000000000000000000\ncalldatasize_TrinoToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `increaseApproval(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x0e9925fb36f82b98e04d844e92c01386e0c2b605.sol",
        "function": "increaseApproval(address,uint256)",
        "lineno": 112,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 6832,
        "code": "--------------",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TrinoToken_4: 0x1\ncalldata_TrinoToken_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_TrinoToken_0: 0xd73dd62300000000000000000000000000000000000000000000000000000000\ncalldatasize_TrinoToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0x0e9925fb36f82b98e04d844e92c01386e0c2b605.sol",
        "function": "increaseApproval(address,uint256)",
        "lineno": 112,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}