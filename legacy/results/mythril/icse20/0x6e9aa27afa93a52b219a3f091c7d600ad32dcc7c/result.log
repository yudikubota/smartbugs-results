{"error": null, "issues": [{"address": 180, "code": "source, address[] recipents, uint256 amount,uint decimals) public {\n  \t\tsamount=amount;\n        token=Token(source);\n        for(i=0;i<recipents.length;i++) {\n\t\t\ttoken.transfer(recipents[i],amount*(10**decimals));\n\t\t\temit TransferToken(recipents[i], samount);\n        }\n    }\n\tfunction adTransferFromA(address s", "debug": "calldata_Token_32 + 4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_Token_0: 0x63e71d5100000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `adTransferA(address,address[],uint256,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/19/0x6e9aa27afa93a52b219a3f091c7d600ad32dcc7c.sol", "function": "adTransferA(address,address[],uint256,uint256)", "lineno": 30, "title": "Integer Overflow ", "type": "Warning"}, {"address": 334, "code": "ce, address[] recipents, uint256 amount,uint decimals) public {\n \t\tsamount=amount;\n        token=Token(source);\n        for(i=0;i<recipents.length;i++) {\n\t\t\ttoken.transferFrom(msg.sender,recipents[i],amount*(10**decimals));\n\t\t\temit TransferFromToken(msg.sender,recipents[i],samount);\n        }\n    }\n}", "debug": "calldata_Token_32 + 4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_Token_0: 0x92e0b55100000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `adTransferFromA(address,address[],uint256,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/19/0x6e9aa27afa93a52b219a3f091c7d600ad32dcc7c.sol", "function": "adTransferFromA(address,address[],uint256,uint256)", "lineno": 38, "title": "Integer Overflow ", "type": "Warning"}, {"address": 488, "code": "m(address source, address[] recipents, uint256[] amount,uint decimals) public {\n        token=Token(source);\n        for(i=0;i<recipents.length;i++) {\n\t\t\ttoken.transferFrom(msg.sender,recipents[i],amount[i]*(10**decimals));\n\t\t\temit TransferFromToken(msg.sender,recipents[i],amount[i]);\n        }\n    }\n\tfunction adTransferA(addre", "debug": "calldata_Token_32 + 4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_Token_0: 0xc7761d7100000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `adTransferFrom(address,address[],uint256[],uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/19/0x6e9aa27afa93a52b219a3f091c7d600ad32dcc7c.sol", "function": "adTransferFrom(address,address[],uint256[],uint256)", "lineno": 23, "title": "Integer Overflow ", "type": "Warning"}, {"address": 699, "code": "nsfer(address source, address[] recipents, uint256[] amount,uint decimals) public {\n        token=Token(source);\n        for(i=0;i<recipents.length;i++) {\n\t\t\tsamount=amount[i];\n\t\t\ttoken.transfer(recipents[i],amount[i]*(10**decimals));\n\t\t\temit TransferToken(recipents[i],samount);\n        }\n    }\n\tfunction adTransfer", "debug": "calldata_Token_32 + 4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_Token_0: 0xecdca08400000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `adTransfer(address,address[],uint256[],uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/19/0x6e9aa27afa93a52b219a3f091c7d600ad32dcc7c.sol", "function": "adTransfer(address,address[],uint256[],uint256)", "lineno": 15, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1251, "code": "t*(10**decimals));\n\t\t\temit TransferToken(recipents", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/19/0x6e9aa27afa93a52b219a3f091c7d600ad32dcc7c.sol", "function": "adTransferA(address,address[],uint256,uint256)", "lineno": 34, "title": "Message call to external contract", "type": "Warning"}, {"address": 1251, "code": "t*(10**decimals));\n\t\t\temit TransferToken(recipents", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1251\nCall at address: 1251\n", "filename": "/unique_chucks/19/0x6e9aa27afa93a52b219a3f091c7d600ad32dcc7c.sol", "function": "adTransferA(address,address[],uint256,uint256)", "lineno": 34, "title": "Multiple Calls", "type": "Information"}, {"address": 1814, "code": "],amount*(10**decimals));\n\t\t\temit TransferFromToken(msg.sender,re", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/19/0x6e9aa27afa93a52b219a3f091c7d600ad32dcc7c.sol", "function": "adTransferFromA(address,address[],uint256,uint256)", "lineno": 42, "title": "Message call to external contract", "type": "Warning"}, {"address": 1814, "code": "],amount*(10**decimals));\n\t\t\temit TransferFromToken(msg.sender,re", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1814\nCall at address: 1814\n", "filename": "/unique_chucks/19/0x6e9aa27afa93a52b219a3f091c7d600ad32dcc7c.sol", "function": "adTransferFromA(address,address[],uint256,uint256)", "lineno": 42, "title": "Multiple Calls", "type": "Information"}, {"address": 2219, "code": ";\n\t\t\temit", "debug": "The exception is triggered under the following conditions:\n\ncalldata_Token_4 + calldata_Token_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_Token_0: 0xc7761d7100000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\nmem_128 + 32 + 32*calldata_Token_4 + calldata_Token_32 + 4: 0x0\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/19/0x6e9aa27afa93a52b219a3f091c7d600ad32dcc7c.sol", "function": "adTransferFrom(address,address[],uint256[],uint256)", "lineno": 26, "title": "Exception state", "type": "Informational"}, {"address": 2418, "code": "nder,recipents[i],amount[i]*(10**decimals));\n\t\t\temit TransferFromTok", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/19/0x6e9aa27afa93a52b219a3f091c7d600ad32dcc7c.sol", "function": "adTransferFrom(address,address[],uint256[],uint256)", "lineno": 26, "title": "Message call to external contract", "type": "Warning"}, {"address": 2418, "code": "nder,recipents[i],amount[i]*(10**decimals));\n\t\t\temit TransferFromTok", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2418\n", "filename": "/unique_chucks/19/0x6e9aa27afa93a52b219a3f091c7d600ad32dcc7c.sol", "function": "adTransferFrom(address,address[],uint256[],uint256)", "lineno": 26, "title": "Multiple Calls", "type": "Information"}, {"address": 2754, "code": "en.transf", "debug": "The exception is triggered under the following conditions:\n\ncalldata_Token_4 + calldata_Token_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_Token_0: 0xecdca08400000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\nmem_128 + 32 + 32*calldata_Token_4 + calldata_Token_32 + 4: 0x0\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/19/0x6e9aa27afa93a52b219a3f091c7d600ad32dcc7c.sol", "function": "adTransfer(address,address[],uint256[],uint256)", "lineno": 19, "title": "Exception state", "type": "Informational"}, {"address": 3025, "code": "ipents[i],amount[i]*(10**decimals));\n\t\t\temit Transfer", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/19/0x6e9aa27afa93a52b219a3f091c7d600ad32dcc7c.sol", "function": "adTransfer(address,address[],uint256[],uint256)", "lineno": 19, "title": "Message call to external contract", "type": "Warning"}, {"address": 3025, "code": "ipents[i],amount[i]*(10**decimals));\n\t\t\temit Transfer", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3025\n", "filename": "/unique_chucks/19/0x6e9aa27afa93a52b219a3f091c7d600ad32dcc7c.sol", "function": "adTransfer(address,address[],uint256[],uint256)", "lineno": 19, "title": "Multiple Calls", "type": "Information"}], "success": true}