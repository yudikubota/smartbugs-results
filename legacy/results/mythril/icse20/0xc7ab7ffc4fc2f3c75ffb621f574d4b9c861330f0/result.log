{"error": null, "issues": [{"address": 3678, "code": "etIntArray(keccak256(abi.encodePacked('oracles', provider, 'curves', endpoint))).len", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/11/0xc7ab7ffc4fc2f3c75ffb621f574d4b9c861330f0.sol", "function": "getProviderCurve(address,bytes32)", "lineno": 305, "title": "Message call to external contract", "type": "Informational"}, {"address": 3678, "code": "etIntArray(keccak256(abi.encodePacked('oracles', provider, 'curves', endpoint))).len", "debug": "", "description": "A possible transaction order independence vulnerability exists in function getProviderCurve(address,bytes32). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/11/0xc7ab7ffc4fc2f3c75ffb621f574d4b9c861330f0.sol", "function": "getProviderCurve(address,bytes32)", "lineno": 305, "title": "Transaction order dependence", "type": "Warning"}, {"address": 7619, "code": "l oracle addresses\n    function getAllOracles() external view returns (address[]) {\n      ", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/11/0xc7ab7ffc4fc2f3c75ffb621f574d4b9c861330f0.sol", "function": "getCurveUnset(address,bytes32)", "lineno": 350, "title": "Message call to external contract", "type": "Informational"}, {"address": 7619, "code": "l oracle addresses\n    function getAllOracles() external view returns (address[]) {\n      ", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3678\n", "filename": "/unique_chucks/11/0xc7ab7ffc4fc2f3c75ffb621f574d4b9c861330f0.sol", "function": "getProviderCurve(address,bytes32)", "lineno": 350, "title": "Multiple Calls", "type": "Information"}, {"address": 7619, "code": "l oracle addresses\n    function getAllOracles() external view returns (address[]) {\n      ", "debug": "", "description": "A possible transaction order independence vulnerability exists in function getCurveUnset(address,bytes32). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/11/0xc7ab7ffc4fc2f3c75ffb621f574d4b9c861330f0.sol", "function": "getCurveUnset(address,bytes32)", "lineno": 350, "title": "Transaction order dependence", "type": "Warning"}, {"address": 9688, "code": "ked('oracles', provider, \"title\")), title);\n    }\n\n    /// @de", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/11/0xc7ab7ffc4fc2f3c75ffb621f574d4b9c861330f0.sol", "function": "getAllOracles()", "lineno": 358, "title": "Message call to external contract", "type": "Informational"}, {"address": 9688, "code": "ked('oracles', provider, \"title\")), title);\n    }\n\n    /// @de", "debug": "", "description": "A possible transaction order independence vulnerability exists in function getAllOracles(). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/11/0xc7ab7ffc4fc2f3c75ffb621f574d4b9c861330f0.sol", "function": "getAllOracles()", "lineno": 358, "title": "Transaction order dependence", "type": "Warning"}, {"address": 10468, "code": " of a provider\n    function getProviderEndpoints(address provider) public v", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/11/0xc7ab7ffc4fc2f3c75ffb621f574d4b9c861330f0.sol", "function": "getPublicKey(address)", "lineno": 326, "title": "Message call to external contract", "type": "Informational"}, {"address": 10468, "code": " of a provider\n    function getProviderEndpoints(address provider) public v", "debug": "", "description": "A possible transaction order independence vulnerability exists in function getPublicKey(address). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/11/0xc7ab7ffc4fc2f3c75ffb621f574d4b9c861330f0.sol", "function": "getPublicKey(address)", "lineno": 326, "title": "Transaction order dependence", "type": "Warning"}, {"address": 15013, "code": "s provider, uint256 publicKey, bytes32 title) private {\n        db.setNumb", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/11/0xc7ab7ffc4fc2f3c75ffb621f574d4b9c861330f0.sol", "function": "getOracleAddress(uint256)", "lineno": 356, "title": "Message call to external contract", "type": "Informational"}, {"address": 15013, "code": "s provider, uint256 publicKey, bytes32 title) private {\n        db.setNumb", "debug": "", "description": "A possible transaction order independence vulnerability exists in function getOracleAddress(uint256). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/11/0xc7ab7ffc4fc2f3c75ffb621f574d4b9c861330f0.sol", "function": "getOracleAddress(uint256)", "lineno": 356, "title": "Transaction order dependence", "type": "Warning"}, {"address": 17937, "code": " @dev get all endpoint params\n    function getEndpointParams(address pro", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/11/0xc7ab7ffc4fc2f3c75ffb621f574d4b9c861330f0.sol", "function": "setProviderParameter(bytes32,bytes)", "lineno": 331, "title": "Message call to external contract", "type": "Informational"}, {"address": 17937, "code": " @dev get all endpoint params\n    function getEndpointParams(address pro", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 7619\n", "filename": "/unique_chucks/11/0xc7ab7ffc4fc2f3c75ffb621f574d4b9c861330f0.sol", "function": "initiateProviderCurve(bytes32,int256[],address)", "lineno": 331, "title": "Multiple Calls", "type": "Information"}, {"address": 17937, "code": " @dev get all endpoint params\n    function getEndpointParams(address pro", "debug": "", "description": "A possible transaction order independence vulnerability exists in function setProviderParameter(bytes32,bytes). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/11/0xc7ab7ffc4fc2f3c75ffb621f574d4b9c861330f0.sol", "function": "setProviderParameter(bytes32,bytes)", "lineno": 331, "title": "Transaction order dependence", "type": "Warning"}, {"address": 21149, "code": "ing exists, Oracle object is create", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/11/0xc7ab7ffc4fc2f3c75ffb621f574d4b9c861330f0.sol", "function": "updateDependencies()", "lineno": 168, "title": "Message call to external contract", "type": "Informational"}, {"address": 21271, "code": "param publicKey unique id for provider.", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/11/0xc7ab7ffc4fc2f3c75ffb621f574d4b9c861330f0.sol", "function": "updateDependencies()", "lineno": 169, "title": "State change after external call", "type": "Warning"}], "success": true}