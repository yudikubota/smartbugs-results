{
  "contract": "0xbd6f647163f8842947d0a828f57550f11439fe61",
  "tool": "mythril",
  "start": 1563522198.5205078,
  "end": 1563523287.2204711,
  "duration": 1088.6999633312225,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 2319,
        "code": "      require(\n                // is the c",
        "debug": "balance_at_1461501637330902918203684832716283019655932542975 & 0: 0x0\ncallvalue: 0x1\nstorage_16: 0xff00\ncalldatasize_TreasuryInterface: 0x3\n",
        "description": "A possible integer underflow exists in the function `fallback`.\nThe subtraction may result in a value < 0.",
        "filename": "/unique_chucks/13/0xbd6f647163f8842947d0a828f57550f11439fe61.sol",
        "function": "fallback",
        "lineno": 75,
        "title": "Integer Underflow",
        "type": "Warning"
      },
      {
        "address": 3630,
        "code": "e((earlyAdopterAccumulatedQuota_[_customer",
        "debug": "balance_at_1461501637330902918203684832716283019655932542975 & 0: 0xffffffffffffffffffffe\ncallvalue: 0xfffffffffffffffffffffffffffffffffffffffffff000000000000000000000\nstorage_7: 0xff00\nstorage_16: 0xff00\ncalldatasize_TreasuryInterface: 0x3\n",
        "description": "A possible integer underflow exists in the function `fallback`.\nThe subtraction may result in a value < 0.",
        "filename": "/unique_chucks/13/0xbd6f647163f8842947d0a828f57550f11439fe61.sol",
        "function": "fallback",
        "lineno": 93,
        "title": "Integer Underflow",
        "type": "Warning"
      },
      {
        "address": 11126,
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xfffb5afd69fffebfde6feffd77dea0bcf80000000000044026a303002475\ncallvalue: 0xffff0004a502960001402190100288215f43080000000000094076037ba09c21\nbalance_at_1461501637330902918203684832716283019655932542975 & 0: 0xffff0004a502960001402190100288215f4308000000000017212cb723049c20\nstorage_16: 0xff00\ncalldatasize_TreasuryInterface: 0x3\n",
        "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/13/0xbd6f647163f8842947d0a828f57550f11439fe61.sol",
        "function": "fallback",
        "lineno": 886,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 11139,
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x8ac00000000000000000000000000000000000000000000003600e03393c4703\ncallvalue: 0x7540000000000000000000000000000000000000000000000343e67bba3f57f8\nbalance_at_1461501637330902918203684832716283019655932542975 & 0: 0x75400000000000000000000000000000000000000000000011249d2f61a357f7\nstorage_16: 0xff00\ncalldatasize_TreasuryInterface: 0x3\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/13/0xbd6f647163f8842947d0a828f57550f11439fe61.sol",
        "function": "fallback",
        "lineno": 886,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 11690,
        "code": "okenPriceIncremental_ * 1e18)*",
        "debug": "storage_4: 0xe6089257c80ac0cbe60d5926ff262844c7005edbab82a162281118017d351c97\nstorage_13: 0x83ffb3569638cea3622d597040d78d7ab7ae5c8a2d8bbb012cad3fb961bad806\ncallvalue: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_TreasuryInterface_0: 0x5a64b78600000000000000000000000000000000000000000000000000000000\ncalldatasize_TreasuryInterface: 0x4\n",
        "description": "A possible integer overflow exists in the function `deposit_dividends()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/13/0xbd6f647163f8842947d0a828f57550f11439fe61.sol",
        "function": "deposit_dividends()",
        "lineno": 727,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 11702,
        "code": "                     (",
        "debug": "callvalue: 0x10000000000000001000000000000000000000000ffff0001\nstorage_13: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_TreasuryInterface_0: 0x5a64b78600000000000000000000000000000000000000000000000000000000\ncalldatasize_TreasuryInterface: 0x4\n",
        "description": "A possible integer overflow exists in the function `deposit_dividends()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/13/0xbd6f647163f8842947d0a828f57550f11439fe61.sol",
        "function": "deposit_dividends()",
        "lineno": 727,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 11710,
        "code": "                     (2*(tokenPriceIncremental_ * 1e18)*(",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncallvalue: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_TreasuryInterface_0: 0x5a64b78600000000000000000000000000000000000000000000000000000000\ncalldatasize_TreasuryInterface: 0x4\nstorage_13: 0x1\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/13/0xbd6f647163f8842947d0a828f57550f11439fe61.sol",
        "function": "deposit_dividends()",
        "lineno": 727,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 11751,
        "code": "ddress _treasuryAdd",
        "debug": "storage_13: 0xfffffffffffffffffffffffffffffffffffffffffffffffff90fb0802c080000\ncalldata_TreasuryInterface_0: 0x4b75033400000000000000000000000000000000000000000000000000000000\ncalldatasize_TreasuryInterface: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `sellPrice()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/13/0xbd6f647163f8842947d0a828f57550f11439fe61.sol",
        "function": "sellPrice()",
        "lineno": 776,
        "title": "Integer Overflow ",
        "type": "Warning"
      }
    ],
    "success": true
  }
}