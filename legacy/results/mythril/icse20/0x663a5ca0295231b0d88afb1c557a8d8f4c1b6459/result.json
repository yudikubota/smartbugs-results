{
  "contract": "0x663a5ca0295231b0d88afb1c557a8d8f4c1b6459",
  "tool": "mythril",
  "start": 1563535727.710692,
  "end": 1563535733.8442342,
  "duration": 6.13354229927063,
  "analysis": {
    "success": false,
    "error": "Solc experienced a fatal error (code 1).\n\n/unique_chucks/16/0x663a5ca0295231b0d88afb1c557a8d8f4c1b6459.sol:762:45: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n        if ((_nbytes == 0)||(_nbytes > 32)) throw;\r\n                                            ^---^\n/unique_chucks/16/0x663a5ca0295231b0d88afb1c557a8d8f4c1b6459.sol:852:71: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n        if ((_proof[0] != \"L\")||(_proof[1] != \"P\")||(_proof[2] != 1)) throw;\r\n                                                                      ^---^\n/unique_chucks/16/0x663a5ca0295231b0d88afb1c557a8d8f4c1b6459.sol:855:37: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n        if (proofVerified == false) throw;\r\n                                    ^---^\n/unique_chucks/16/0x663a5ca0295231b0d88afb1c557a8d8f4c1b6459.sol:863:14: Warning: Use of the \"var\" keyword is deprecated.\n        for (var i=0; i<prefix.length; i++){\r\n             ^---^\n/unique_chucks/16/0x663a5ca0295231b0d88afb1c557a8d8f4c1b6459.sol:926:13: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n            throw; // Should be a better way?\r\n            ^---^\n/unique_chucks/16/0x663a5ca0295231b0d88afb1c557a8d8f4c1b6459.sol:1024:1: Error: Source file requires different compiler version (current compiler is 0.4.25+commit.59dbf8f1.Linux.g++ - note that nightly builds are considered to be strictly less than the released version\npragma solidity 0.4.16;\r\n^---------------------^\n/unique_chucks/16/0x663a5ca0295231b0d88afb1c557a8d8f4c1b6459.sol:1032:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use \"constructor(...) { ... }\" instead.\n    function owned() { owner = msg.sender; }\r\n    ^--------------------------------------^\n/unique_chucks/16/0x663a5ca0295231b0d88afb1c557a8d8f4c1b6459.sol:1095:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use \"constructor(...) { ... }\" instead.\n    function Cillionaire() {\r\n    ^ (Relevant source part starts here and spans across multiple lines).\n/unique_chucks/16/0x663a5ca0295231b0d88afb1c557a8d8f4c1b6459.sol:776:50: Warning: \"sha3\" has been deprecated in favour of \"keccak256\"\n        oraclize_randomDS_setCommitment(queryId, sha3(bytes8(_delay), args[1], sha256(args[0]), args[2]));\r\n                                                 ^-----------------------------------------------------^\n/unique_chucks/16/0x663a5ca0295231b0d88afb1c557a8d8f4c1b6459.sol:776:50: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n        oraclize_randomDS_setCommitment(queryId, sha3(bytes8(_delay), args[1], sha256(args[0]), args[2]));\r\n                                                 ^-----------------------------------------------------^\n/unique_chucks/16/0x663a5ca0295231b0d88afb1c557a8d8f4c1b6459.sol:808:21: Warning: \"sha3\" has been deprecated in favour of \"keccak256\"\n        if (address(sha3(pubkey)) == signer) return true;\r\n                    ^----------^\n/unique_chucks/16/0x663a5ca0295231b0d88afb1c557a8d8f4c1b6459.sol:811:29: Warning: \"sha3\" has been deprecated in favour of \"keccak256\"\n            return (address(sha3(pubkey)) == signer);\r\n                            ^----------^\n/unique_chucks/16/0x663a5ca0295231b0d88afb1c557a8d8f4c1b6459.sol:826:22: Warning: Decimal literal assigned to bytesXX variable will be left-aligned. Use an explicit conversion to silence this warning.\n        tosign2[0] = 1; //role\r\n                     ^\n/unique_chucks/16/0x663a5ca0295231b0d88afb1c557a8d8f4c1b6459.sol:863:14: Warning: The type of this variable was inferred as uint8, which can hold values between 0 and 255. This is probably not desired. Use an explicit type to silence this warning.\n        for (var i=0; i<prefix.length; i++){\r\n             ^-----^\n/unique_chucks/16/0x663a5ca0295231b0d88afb1c557a8d8f4c1b6459.sol:878:20: Warning: \"sha3\" has been deprecated in favour of \"keccak256\"\n        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));\r\n                   ^-----------^\n/unique_chucks/16/0x663a5ca0295231b0d88afb1c557a8d8f4c1b6459.sol:878:42: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));\r\n                                         ^---------------------------^\n/unique_chucks/16/0x663a5ca0295231b0d88afb1c557a8d8f4c1b6459.sol:878:37: Warning: \"sha3\" has been deprecated in favour of \"keccak256\"\n        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));\r\n                                    ^---------------------------------^\n/unique_chucks/16/0x663a5ca0295231b0d88afb1c557a8d8f4c1b6459.sol:878:37: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));\r\n                                    ^---------------------------------^\n/unique_chucks/16/0x663a5ca0295231b0d88afb1c557a8d8f4c1b6459.sol:878:37: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.\n        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));\r\n                                    ^---------------------------------^\n/unique_chucks/16/0x663a5ca0295231b0d88afb1c557a8d8f4c1b6459.sol:900:48: Warning: \"sha3\" has been deprecated in favour of \"keccak256\"\n        if (oraclize_randomDS_args[queryId] == sha3(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match\r\n                                               ^---------------------------------------^\n/unique_chucks/16/0x663a5ca0295231b0d88afb1c557a8d8f4c1b6459.sol:900:48: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n        if (oraclize_randomDS_args[queryId] == sha3(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match\r\n                                               ^---------------------------------------^\n/unique_chucks/16/0x663a5ca0295231b0d88afb1c557a8d8f4c1b6459.sol:1041:9: Warning: Invoking events without \"emit\" prefix is deprecated.\n        ContractOwnershipTransferred(newOwner);\r\n        ^------------------------------------^\n/unique_chucks/16/0x663a5ca0295231b0d88afb1c557a8d8f4c1b6459.sol:1104:20: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0x632485f482cf86b098Fd4E75F6b99f7a04D3Ee71'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals\n        startRound(0x632485f482cf86b098fd4e75f6b99f7a04d3ee71); // a donor from the old contract 0x02b97cca6d6a5227e464b2a60ee1a580ea4f7da9\r\n                   ^----------------------------------------^\n/unique_chucks/16/0x663a5ca0295231b0d88afb1c557a8d8f4c1b6459.sol:1118:9: Warning: Invoking events without \"emit\" prefix is deprecated.\n        NewRoundStarted(beneficiary, startTimestamp, endTimestamp, maxDonors, duration, donation, fee);\r\n        ^--------------------------------------------------------------------------------------------^\n/unique_chucks/16/0x663a5ca0295231b0d88afb1c557a8d8f4c1b6459.sol:1129:9: Warning: Invoking events without \"emit\" prefix is deprecated.\n        NewDonor(msg.sender, amountAfterFee, fee);\r\n        ^---------------------------------------^\n/unique_chucks/16/0x663a5ca0295231b0d88afb1c557a8d8f4c1b6459.sol:1134:17: Warning: Using contract member \"balance\" inherited from the address type is deprecated. Convert the contract to \"address\" type to access the member, for example use \"address(contract).balance\" instead.\n ... this.balance ... \n     ^----------^\n/unique_chucks/16/0x663a5ca0295231b0d88afb1c557a8d8f4c1b6459.sol:1139:13: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.\n            msg.sender.send(msg.value); // refund everything. \r\n            ^------------------------^\n/unique_chucks/16/0x663a5ca0295231b0d88afb1c557a8d8f4c1b6459.sol:1145:9: Warning: Invoking events without \"emit\" prefix is deprecated.\n        RoundEnded(beneficiary, donationSum);\r\n        ^----------------------------------^\n/unique_chucks/16/0x663a5ca0295231b0d88afb1c557a8d8f4c1b6459.sol:1150:34: Warning: \"sha3\" has been deprecated in favour of \"keccak256\"\n        uint randomNumber = uint(sha3(_result)); // https://gitter.im/oraclize/ethereum-api?at=595b98d7329651f46e5105b7\r\n                                 ^-----------^\n/unique_chucks/16/0x663a5ca0295231b0d88afb1c557a8d8f4c1b6459.sol:1150:34: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n        uint randomNumber = uint(sha3(_result)); // https://gitter.im/oraclize/ethereum-api?at=595b98d7329651f46e5105b7\r\n                                 ^-----------^\n/unique_chucks/16/0x663a5ca0295231b0d88afb1c557a8d8f4c1b6459.sol:1150:34: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.\n        uint randomNumber = uint(sha3(_result)); // https://gitter.im/oraclize/ethereum-api?at=595b98d7329651f46e5105b7\r\n                                 ^-----------^\n/unique_chucks/16/0x663a5ca0295231b0d88afb1c557a8d8f4c1b6459.sol:1151:9: Warning: Invoking events without \"emit\" prefix is deprecated.\n        RandomNumber(randomNumber);\r\n        ^------------------------^\n/unique_chucks/16/0x663a5ca0295231b0d88afb1c557a8d8f4c1b6459.sol:1169:17: Warning: Using contract member \"balance\" inherited from the address type is deprecated. Convert the contract to \"address\" type to access the member, for example use \"address(contract).balance\" instead.\n        require(this.balance > retainBalance);\r\n                ^----------^\n/unique_chucks/16/0x663a5ca0295231b0d88afb1c557a8d8f4c1b6459.sol:1170:23: Warning: Using contract member \"balance\" inherited from the address type is deprecated. Convert the contract to \"address\" type to access the member, for example use \"address(contract).balance\" instead.\n        uint amount = this.balance - retainBalance; // prevent owner from starving Oraclize\r\n                      ^----------^\n",
    "issues": []
  }
}