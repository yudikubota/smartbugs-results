{"error": null, "issues": [{"address": 562, "code": "ntation contract address.\n    address pendingVersion;\n\n    /", "debug": "", "description": "This contract executes a message call to the address of the transaction sender. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_contracts/0x211b1fe2227b53c1013b6fcc2caa4b8b68d75680.sol", "function": "fallback", "lineno": 344, "title": "Message call to external contract", "type": "Warning"}, {"address": 562, "code": "ntation contract address.\n    address pendingVersion;\n\n    /", "debug": "", "description": "A possible transaction order independence vulnerability exists in function fallback. The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_contracts/0x211b1fe2227b53c1013b6fcc2caa4b8b68d75680.sol", "function": "fallback", "lineno": 344, "title": "Transaction order dependence", "type": "Warning"}, {"address": 1708, "code": "ce(_to, _value, smbl, _reference, _sender) == OK;\n    }\n\n    /// @notice Performs allowance transfer of asset balance between holders.\n    /// @param _from holder address to take from.\n    /// @param _to holder address to give to.\n    /// @param _value amount to transfer.\n    /// @return success.\n    function transferFrom(", "debug": "calldata_ERC20Interface_32 + 36: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_ERC20Interface_0: 0x6a630ee700000000000000000000000000000000000000000000000000000000\ncalldatasize_ERC20Interface: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `__transferWithReference(address,uint256,string,address)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x211b1fe2227b53c1013b6fcc2caa4b8b68d75680.sol", "function": "__transferWithReference(address,uint256,string,address)", "lineno": 261, "title": "Integer Overflow ", "type": "Warning"}, {"address": 4028, "code": "/ @param _value amount to allow.\n    /// @param _se", "debug": "", "description": "This contract executes a message call to the address of the transaction sender. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_contracts/0x211b1fe2227b53c1013b6fcc2caa4b8b68d75680.sol", "function": "approve(address,uint256)", "lineno": 313, "title": "Message call to external contract", "type": "Warning"}, {"address": 4028, "code": "/ @param _value amount to allow.\n    /// @param _se", "debug": "", "description": "A possible transaction order independence vulnerability exists in function approve(address,uint256). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_contracts/0x211b1fe2227b53c1013b6fcc2caa4b8b68d75680.sol", "function": "approve(address,uint256)", "lineno": 313, "title": "Transaction order dependence", "type": "Warning"}, {"address": 4182, "code": "\n        if (userOptOutVersion[msg.sender] !=", "debug": "storage_7: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc4980\nstorage_6: 0xffffffffffffffffffffffffffffffffffffffff00\ncalldata_ERC20Interface_0: 0xba12c8300000000000000000000000000000000000000000000000000000000\ncalldatasize_ERC20Interface: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `commitUpgrade()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x211b1fe2227b53c1013b6fcc2caa4b8b68d75680.sol", "function": "commitUpgrade()", "lineno": 452, "title": "Integer Overflow ", "type": "Warning"}, {"address": 4549, "code": "ceOf(address _owner) public view ret", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_contracts/0x211b1fe2227b53c1013b6fcc2caa4b8b68d75680.sol", "function": "totalSupply()", "lineno": 195, "title": "Message call to external contract", "type": "Informational"}, {"address": 5133, "code": ".\n    ///\n    /// @param _from holder address to take from.\n    /// @param ", "debug": "", "description": "This contract executes a message call to the address of the transaction sender. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_contracts/0x211b1fe2227b53c1013b6fcc2caa4b8b68d75680.sol", "function": "transferFrom(address,address,uint256)", "lineno": 277, "title": "Message call to external contract", "type": "Warning"}, {"address": 5133, "code": ".\n    ///\n    /// @param _from holder address to take from.\n    /// @param ", "debug": "", "description": "A possible transaction order independence vulnerability exists in function transferFrom(address,address,uint256). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_contracts/0x211b1fe2227b53c1013b6fcc2caa4b8b68d75680.sol", "function": "transferFrom(address,address,uint256)", "lineno": 277, "title": "Transaction order dependence", "type": "Warning"}, {"address": 5557, "code": "@return success.\n    function tra", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_contracts/0x211b1fe2227b53c1013b6fcc2caa4b8b68d75680.sol", "function": "decimals()", "lineno": 216, "title": "Message call to external contract", "type": "Informational"}, {"address": 5878, "code": "ation contract.\n    function _getAsset() int", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_contracts/0x211b1fe2227b53c1013b6fcc2caa4b8b68d75680.sol", "function": "purgeUpgrade()", "lineno": 181, "title": "Message call to external contract", "type": "Informational"}, {"address": 6896, "code": "at is allowed to spend.\n    /// @return ho", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_contracts/0x211b1fe2227b53c1013b6fcc2caa4b8b68d75680.sol", "function": "balanceOf(address)", "lineno": 201, "title": "Message call to external contract", "type": "Informational"}], "success": true}