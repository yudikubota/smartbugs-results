{
  "contract": "0xaa8722fb1c9eec9b6c32a90dbe9aa4c9eff19f55",
  "tool": "mythril",
  "start": 1563686708.6987817,
  "end": 1563687402.8729055,
  "duration": 694.1741237640381,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 324,
        "code": "st)/10**18 >= minAmount);\n\n        if(ord",
        "debug": "The exception is triggered under the following conditions:\n\ntimestamp: 0x0\nstorage_15: 0x0\nstorage_11: 0x0\ncalldatasize_OrganicumOrders: 0x3\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/36/0xaa8722fb1c9eec9b6c32a90dbe9aa4c9eff19f55.sol",
        "function": "fallback",
        "lineno": 80,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 361,
        "code": "der].balance == 0 && orders[msg.sender].tokens == 0",
        "debug": "The exception is triggered under the following conditions:\n\ntimestamp: 0x0\nstorage_5: 0x1\nstorage_9: 0x1\ncallvalue: 0x0\nstorage_15: 0x1\nstorage_11: 0x0\ncalldatasize_OrganicumOrders: 0x3\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/36/0xaa8722fb1c9eec9b6c32a90dbe9aa4c9eff19f55.sol",
        "function": "fallback",
        "lineno": 82,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 523,
        "code": ";\n\n\ncontract Organ",
        "debug": "storage_1: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ntimestamp: 0x0\nstorage_5: 0x0\nstorage_9: 0x1\ncallvalue: 0x0\nstorage_15: 0x1\nstorage_11: 0x0\ncalldatasize_OrganicumOrders: 0x3\nstorage_1 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\nstorage_0 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\n",
        "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/36/0xaa8722fb1c9eec9b6c32a90dbe9aa4c9eff19f55.sol",
        "function": "fallback",
        "lineno": 1,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 713,
        "code": "ns;\n\n        supplyTokens += countToken",
        "debug": "callvalue: 0xe6089257c80ac0cbe60d5926ff262844c7005edbab82a162281118017d351c97\nstorage_9: 0x0\nstorage_0 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x83ffb3569638cea3622d597040d78d7ab7ae5c8a2d8bbb012cad3fb961bad806\ntimestamp: 0x0\nstorage_12: 0x1\nstorage_5: 0x0\nstorage_15: 0x1\nstorage_11: 0x0\ncalldatasize_OrganicumOrders: 0x3\n",
        "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/36/0xaa8722fb1c9eec9b6c32a90dbe9aa4c9eff19f55.sol",
        "function": "fallback",
        "lineno": 89,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 840,
        "code": " assert(now >= startDate && ",
        "debug": "storage_7: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncallvalue: 0x57f25cd000000000000000000000000000000000000000000000000000000000\nstorage_9: 0x0\ntimestamp: 0x0\nstorage_12: 0x1\nstorage_5: 0x0\nstorage_15: 0x1\nstorage_11: 0x0\ncalldatasize_OrganicumOrders: 0x3\nstorage_1 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\nstorage_0 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\n",
        "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/36/0xaa8722fb1c9eec9b6c32a90dbe9aa4c9eff19f55.sol",
        "function": "fallback",
        "lineno": 98,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2193,
        "code": "\n    }\n\n    function change",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_10: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_OrganicumOrders_0: 0x299cdc9d00000000000000000000000000000000000000000000000000000000\ncalldatasize_OrganicumOrders: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/36/0xaa8722fb1c9eec9b6c32a90dbe9aa4c9eff19f55.sol",
        "function": "changeEtherCost(uint256)",
        "lineno": 41,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2205,
        "code": "00;\n    }\n\n    funct",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_10: 0x0\ncaller: 0x0\ncalldata_OrganicumOrders_0: 0x299cdc9d00000000000000000000000000000000000000000000000000000000\ncalldatasize_OrganicumOrders: 0x4\ncalldata_OrganicumOrders_4: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/36/0xaa8722fb1c9eec9b6c32a90dbe9aa4c9eff19f55.sol",
        "function": "changeEtherCost(uint256)",
        "lineno": 54,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2210,
        "code": " returns(uin",
        "debug": "calldata_OrganicumOrders_4: 0x52314e170a3ebfb341428f8fdefe14a52051eb8f76bbabb2a61ef2196a3d70b\nstorage_10: 0x0\ncaller: 0x0\ncalldata_OrganicumOrders_0: 0x299cdc9d00000000000000000000000000000000000000000000000000000000\ncalldatasize_OrganicumOrders: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `changeEtherCost(uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/36/0xaa8722fb1c9eec9b6c32a90dbe9aa4c9eff19f55.sol",
        "function": "changeEtherCost(uint256)",
        "lineno": 57,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2233,
        "code": "public holders;\n\n    uin",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_OrganicumOrders_4: 0x0\nstorage_1: 0x0\ncalldata_OrganicumOrders_0: 0x2a11ced000000000000000000000000000000000000000000000000000000000\ncalldatasize_OrganicumOrders: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/36/0xaa8722fb1c9eec9b6c32a90dbe9aa4c9eff19f55.sol",
        "function": "_function_0x2a11ced0",
        "lineno": 11,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2372,
        "code": "n * etherCost)/10**18 >= s",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xff00\ncalldata_OrganicumOrders_0: 0x632a9a5200000000000000000000000000000000000000000000000000000000\ncalldatasize_OrganicumOrders: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/36/0xaa8722fb1c9eec9b6c32a90dbe9aa4c9eff19f55.sol",
        "function": "vote()",
        "lineno": 127,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2403,
        "code": "      assert(orders[msg.sender].tokens > 0);\n\n        vo",
        "debug": "The exception is triggered under the following conditions:\n\ntimestamp: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_15: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_18: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncalldata_OrganicumOrders_0: 0x632a9a5200000000000000000000000000000000000000000000000000000000\ncalldatasize_OrganicumOrders: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/36/0xaa8722fb1c9eec9b6c32a90dbe9aa4c9eff19f55.sol",
        "function": "vote()",
        "lineno": 128,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2442,
        "code": "der] = true;\n        sumVote += orders[msg.sender].toke",
        "debug": "The exception is triggered under the following conditions:\n\ntimestamp: 0x0\nstorage_15: 0x0\nstorage_6: 0x1\nstorage_9: 0x1\nstorage_7: 0x0\nstorage_18: 0x1\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncalldata_OrganicumOrders_0: 0x632a9a5200000000000000000000000000000000000000000000000000000000\ncalldatasize_OrganicumOrders: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/36/0xaa8722fb1c9eec9b6c32a90dbe9aa4c9eff19f55.sol",
        "function": "vote()",
        "lineno": 130,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2519,
        "code": "    function refund(address holder)\n ",
        "debug": "The exception is triggered under the following conditions:\n\ntimestamp: 0x0\nstorage_15: 0x0\nstorage_6: 0x0\nstorage_9: 0x1\nstorage_7: 0x0\nstorage_18: 0x1\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncalldata_OrganicumOrders_0: 0x632a9a5200000000000000000000000000000000000000000000000000000000\ncalldatasize_OrganicumOrders: 0x4\nstorage_1 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/36/0xaa8722fb1c9eec9b6c32a90dbe9aa4c9eff19f55.sol",
        "function": "vote()",
        "lineno": 134,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2682,
        "code": "\n\n        uint256 etherToSend = 0;\n ",
        "debug": "storage_17: 0xb2c81e3be60b809eebca250ae5f3958de8241f3c0942692d3cecd1fd00743211\nstorage_1 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x93931c13e507cbbcbf74d9eee4fb920eeaef84aa5110428da2eddb017d5ebcdd\ntimestamp: 0x0\nstorage_15: 0x0\nstorage_6: 0x0\nstorage_9: 0x1\nstorage_7: 0x0\nstorage_18: 0x1\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncalldata_OrganicumOrders_0: 0x632a9a5200000000000000000000000000000000000000000000000000000000\ncalldatasize_OrganicumOrders: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `vote()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/36/0xaa8722fb1c9eec9b6c32a90dbe9aa4c9eff19f55.sol",
        "function": "vote()",
        "lineno": 136,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2775,
        "code": "ount);\n\n        if(orders[to].balance == ",
        "debug": "The exception is triggered under the following conditions:\n\ntimestamp: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_15: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_11: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_OrganicumOrders_0: 0x967dd0ae00000000000000000000000000000000000000000000000000000000\ncalldatasize_OrganicumOrders: 0x4\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/36/0xaa8722fb1c9eec9b6c32a90dbe9aa4c9eff19f55.sol",
        "function": "orderFor(address)",
        "lineno": 99,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2812,
        "code": "[to].tokens == 0)\n        {\n            holders.pus",
        "debug": "The exception is triggered under the following conditions:\n\ntimestamp: 0x0\nstorage_5: 0x1\nstorage_9: 0x1\ncallvalue: 0x0\nstorage_15: 0x1\nstorage_11: 0x0\ncalldata_OrganicumOrders_0: 0x967dd0ae00000000000000000000000000000000000000000000000000000000\ncalldatasize_OrganicumOrders: 0x4\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/36/0xaa8722fb1c9eec9b6c32a90dbe9aa4c9eff19f55.sol",
        "function": "orderFor(address)",
        "lineno": 101,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2974,
        "code": ";\n\n\ncontract Organ",
        "debug": "storage_1: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ntimestamp: 0x0\nstorage_5: 0x0\nstorage_9: 0x1\ncallvalue: 0x0\nstorage_15: 0x1\nstorage_11: 0x0\ncalldata_OrganicumOrders_0: 0x967dd0ae00000000000000000000000000000000000000000000000000000000\ncalldatasize_OrganicumOrders: 0x4\nstorage_1 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_OrganicumOrders_4: 0x0\nstorage_0 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_OrganicumOrders_4: 0x0\n",
        "description": "A possible integer overflow exists in the function `orderFor(address)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/36/0xaa8722fb1c9eec9b6c32a90dbe9aa4c9eff19f55.sol",
        "function": "orderFor(address)",
        "lineno": 1,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 3153,
        "code": "r) * etherCost) / getPri",
        "debug": "",
        "description": "In the function `orderFor(address)` the following predictable state variables are used to determine Ether recipient:\n- block.timestamp\n- block.timestamp\n",
        "filename": "/unique_chucks/36/0xaa8722fb1c9eec9b6c32a90dbe9aa4c9eff19f55.sol",
        "function": "orderFor(address)",
        "lineno": 110,
        "title": "Dependence on predictable environment variable",
        "type": "Warning"
      },
      {
        "address": 3522,
        "code": "\n    }\n\n    function change",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_10: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_OrganicumOrders_0: 0xa6f9dae100000000000000000000000000000000000000000000000000000000\ncalldatasize_OrganicumOrders: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/36/0xaa8722fb1c9eec9b6c32a90dbe9aa4c9eff19f55.sol",
        "function": "changeOwner(address)",
        "lineno": 41,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3579,
        "code": "sert(new_owner != address(this));",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_OrganicumOrders_4: 0x0\nstorage_10: 0x0\ncaller: 0x0\ncalldata_OrganicumOrders_0: 0xa6f9dae100000000000000000000000000000000000000000000000000000000\ncalldatasize_OrganicumOrders: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/36/0xaa8722fb1c9eec9b6c32a90dbe9aa4c9eff19f55.sol",
        "function": "changeOwner(address)",
        "lineno": 47,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}