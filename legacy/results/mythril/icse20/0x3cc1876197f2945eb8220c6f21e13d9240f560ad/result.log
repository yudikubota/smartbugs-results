{"error": null, "issues": [{"address": 905, "code": "name) public ownerOnly returns(bool success) \n\t{\n\n\t\tname = _name;\n\t\tNameChange(name);\n\n\t\treturn true;\n\t}\n\n\n\tfunction changeSymbol(string _s", "debug": "calldata_Nigger_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_Nigger_0: 0x5353a2d800000000000000000000000000000000000000000000000000000000\ncalldatasize_Nigger: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `changeName(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/33/0x3cc1876197f2945eb8220c6f21e13d9240f560ad.sol", "function": "changeName(string)", "lineno": 29, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1496, "code": "public ownerOnly returns(bool success) \n\t{\n\n\t\tsymbol = _symbol;\n\t\tSymbolChange(symbol);\n\n\t\treturn true;\n\t}\n\n\n    function balanceOf(address _owner) pub", "debug": "calldata_Nigger_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_Nigger_0: 0xa3895fff00000000000000000000000000000000000000000000000000000000\ncalldatasize_Nigger: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `changeSymbol(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/33/0x3cc1876197f2945eb8220c6f21e13d9240f560ad.sol", "function": "changeSymbol(string)", "lineno": 39, "title": "Integer Overflow ", "type": "Warning"}, {"address": 3160, "code": "address _spender, uint2", "debug": "calldata_Nigger_32 + 36: 0xebbae714a809e8cc525d6fe8e1b7310d27378317efb3bbe9ef28102400c035a3\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_Nigger_32_+_4: 0xe4fa8cbdf5eb8eaf38858005ccb87cf1a0b03be40d483a140ec832345c8310b9\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_Nigger_4: 0xebbae714a809e8cc525d6fe8e1b7310d27378317efb3bbe9ef28102400c035a3\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xebbae714a809e8cc525d6fe8e1b7310d27378317efb3bbe9ef28102400c035a3\ncalldata_Nigger_32 + 4: 0x40000000000000000\ncalldata_Nigger_4: 0x4000000000000000000000000000000\ncalldata_Nigger_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_Nigger: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `transferFrom(address,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/33/0x3cc1876197f2945eb8220c6f21e13d9240f560ad.sol", "function": "transferFrom(address,address,uint256)", "lineno": 127, "title": "Integer Overflow ", "type": "Warning"}, {"address": 3476, "code": "TransferFrom(address ", "debug": "calldata_Nigger_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_5: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_Nigger_0: 0x42966c6800000000000000000000000000000000000000000000000000000000\ncalldatasize_Nigger: 0x4\ncallvalue: 0x0\n", "description": "A possible integer underflow exists in the function `burn(uint256)`.\nThe subtraction may result in a value < 0.", "filename": "/unique_chucks/33/0x3cc1876197f2945eb8220c6f21e13d9240f560ad.sol", "function": "burn(uint256)", "lineno": 93, "title": "Integer Underflow", "type": "Warning"}, {"address": 5076, "code": " true;\n\t}\n\n\n   function", "debug": "calldata_Nigger_32 + 4: 0xb135d1e4a0020a903239033aa9b45a69384c906b52a71e0575829626809581fd\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_Nigger_4: 0xa7e6e147bc0ca40011bf9bbaadf7593cb8cc90b17cb7d73775f0d8eb1435e9c1\ncaller: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xb135d1e4a0020a903239033aa9b45a69384c906b52a71e0575829626809581fd\ncalldata_Nigger_4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_Nigger_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncalldatasize_Nigger: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `transfer(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/33/0x3cc1876197f2945eb8220c6f21e13d9240f560ad.sol", "function": "transfer(address,uint256)", "lineno": 75, "title": "Integer Overflow ", "type": "Warning"}, {"address": 5262, "code": "tract Nigger\n{\n\n\n\taddress \towner;\n\n\n    string \t\tpublic standard = 'Token 0.1';\n\tstring \t\tpublic name = \"Nigger\"; \n\tstring \t\tpublic symbol = \"NGR\";\n\tuint8 \t\tpublic decimals = 18; \n\tuint256 \tpublic totalSupply = 40695277 * 1e18;\n\t\n\n\tmapping (address => uint256) balances;\t\n\tmapping (address => mapping (address => uint256)) allowed;\n\n\n\tmodifier ownerOnly() \n\t{\n\t\trequire(msg.sender == owner);\n\t\t_;\n\t}\t\t\n\n\n\tfunction changeName(string _name) public ownerOnly returns(bool success) \n\t{\n\n\t\tname = _name;\n\t\tNameChange(name);\n\n\t\treturn true;\n\t}\n\n\n\tfunction changeSymbol(string _symbol) public ownerOnly returns(bool success) \n\t{\n\n\t\tsymbol = _symbol;\n\t\tSymbolChange(symbol);\n\n\t\treturn true;\n\t}\n\n\n    function balanceOf(address _owner) public constant returns(uint256 tokens) \n\t{\n\n\t\trequire(_owner != 0x0);\n\t\treturn balances[_owner];\n\t}\n\n\n\tfunction balanceOfReadable(address _owner) public constant returns(uint256 tokens) \n\t{\n\n\t\trequire(_owner != 0x0);\n\t\treturn balances[_owner] / 1e18;\n\t}\n\t\n\n    function transfer(address _to, uint256 _value) public returns(bool success)\n\t{ \n\n\t\trequire(_to != 0x0 && _value > 0 && balances[msg.sender] >= _value && _to != msg.sender);\n\n\n\t\tbalances[msg.sender] -= _value;\n\t\tbalances[_to] += _value;\n\t\tTransfer(msg.sender, _to, _value);\n\n\t\treturn true;\n\t}\n\n\n   function burn(uint256 _value) public returns(bool success)\n\t{\n\n\t\trequire(balances[msg.sender] >= _value && _value > 0);\n\n\n\t\tbalances[msg.sender] -= _value;\n\t\ttotalSupply -= _value;\n\t\tBurn(msg.sender, _value);\n\n\t\treturn true;\n\t}\n\n\n\tfunction canTransferFrom(address _owner, address _spender) public constant returns(uint256 tokens) \n\t{\n\n\t\trequire(_owner != 0x0 && _spender != 0x0);\n\t\t\n\n\t\tif (_owner == _spender)\n\t\t{\n\t\t\treturn balances[_owner];\n\t\t}\n\t\telse \n\t\t{\n\t\t\treturn allowed[_owner][_spender];\n\t\t}\n\t}\n\n\t\n\tfunction transferFrom(address _from, address _to, uint256 _value) public returns(bool success) \n\t{\n\n        require(_value > 0 && _from != 0x0 && _to != 0x0 && _to != _from &&\n        \t\tallowed[_from][msg.sender] >= _value && \n        \t\tbalances[_from] >= _value);\n                \n\n        balances[_from] -= _value;\n        allowed[_from][msg.sender] -= _value;\n        balances[_to] += _value;\t\n        Transfer(_from, _to, _value);\n\n        return true;\n    }\n\n    \n    function approve(address _spender, uint256 _value) public returns(bool success)  \n    {\n\n        require(_spender != 0x0 && _spender != msg.sender);\n\n\n        allowed[msg.sender][_spender] = _value;\n        Approval(msg.sender, _spender, _value);\n\n        return true;\n    }\n\n\n    function Nigger() public\n\t{\n\t\towner = msg.sender;\n\t\tbalances[owner] = totalSupply;\n\t\tTokenDeployed(totalSupply);\n\t}\n\n\n\t// ====================================================================================\n\t//\n    // List of all events\n\n    event NameChange(string _name);\n    event SymbolChange(string _symbol);\n\tevent Transfer(address indexed _from, address indexed _to, uint256 _value);\n\tevent Approval(address indexed _owner, address indexed _spender, uint256 _value);\n\tevent Burn(address indexed _from, uint256 _value);\n\tevent TokenDeployed(uint256 _totalSupply);\n\n}", "debug": "calldata_Nigger_4 + calldata_Nigger_4: 0x8000000000000000000000000000000000000000000000000000000000000000\nstorage_0: 0x0\ncaller: 0x0\ncalldata_Nigger_0: 0xa3895fff00000000000000000000000000000000000000000000000000000000\ncalldatasize_Nigger: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `changeSymbol(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/33/0x3cc1876197f2945eb8220c6f21e13d9240f560ad.sol", "function": "changeSymbol(string)", "lineno": 4, "title": "Integer Overflow ", "type": "Warning"}, {"address": 5276, "code": "tract Nigger\n{\n\n\n\taddress \towner;\n\n\n    string \t\tpublic standard = 'Token 0.1';\n\tstring \t\tpublic name = \"Nigger\"; \n\tstring \t\tpublic symbol = \"NGR\";\n\tuint8 \t\tpublic decimals = 18; \n\tuint256 \tpublic totalSupply = 40695277 * 1e18;\n\t\n\n\tmapping (address => uint256) balances;\t\n\tmapping (address => mapping (address => uint256)) allowed;\n\n\n\tmodifier ownerOnly() \n\t{\n\t\trequire(msg.sender == owner);\n\t\t_;\n\t}\t\t\n\n\n\tfunction changeName(string _name) public ownerOnly returns(bool success) \n\t{\n\n\t\tname = _name;\n\t\tNameChange(name);\n\n\t\treturn true;\n\t}\n\n\n\tfunction changeSymbol(string _symbol) public ownerOnly returns(bool success) \n\t{\n\n\t\tsymbol = _symbol;\n\t\tSymbolChange(symbol);\n\n\t\treturn true;\n\t}\n\n\n    function balanceOf(address _owner) public constant returns(uint256 tokens) \n\t{\n\n\t\trequire(_owner != 0x0);\n\t\treturn balances[_owner];\n\t}\n\n\n\tfunction balanceOfReadable(address _owner) public constant returns(uint256 tokens) \n\t{\n\n\t\trequire(_owner != 0x0);\n\t\treturn balances[_owner] / 1e18;\n\t}\n\t\n\n    function transfer(address _to, uint256 _value) public returns(bool success)\n\t{ \n\n\t\trequire(_to != 0x0 && _value > 0 && balances[msg.sender] >= _value && _to != msg.sender);\n\n\n\t\tbalances[msg.sender] -= _value;\n\t\tbalances[_to] += _value;\n\t\tTransfer(msg.sender, _to, _value);\n\n\t\treturn true;\n\t}\n\n\n   function burn(uint256 _value) public returns(bool success)\n\t{\n\n\t\trequire(balances[msg.sender] >= _value && _value > 0);\n\n\n\t\tbalances[msg.sender] -= _value;\n\t\ttotalSupply -= _value;\n\t\tBurn(msg.sender, _value);\n\n\t\treturn true;\n\t}\n\n\n\tfunction canTransferFrom(address _owner, address _spender) public constant returns(uint256 tokens) \n\t{\n\n\t\trequire(_owner != 0x0 && _spender != 0x0);\n\t\t\n\n\t\tif (_owner == _spender)\n\t\t{\n\t\t\treturn balances[_owner];\n\t\t}\n\t\telse \n\t\t{\n\t\t\treturn allowed[_owner][_spender];\n\t\t}\n\t}\n\n\t\n\tfunction transferFrom(address _from, address _to, uint256 _value) public returns(bool success) \n\t{\n\n        require(_value > 0 && _from != 0x0 && _to != 0x0 && _to != _from &&\n        \t\tallowed[_from][msg.sender] >= _value && \n        \t\tbalances[_from] >= _value);\n                \n\n        balances[_from] -= _value;\n        allowed[_from][msg.sender] -= _value;\n        balances[_to] += _value;\t\n        Transfer(_from, _to, _value);\n\n        return true;\n    }\n\n    \n    function approve(address _spender, uint256 _value) public returns(bool success)  \n    {\n\n        require(_spender != 0x0 && _spender != msg.sender);\n\n\n        allowed[msg.sender][_spender] = _value;\n        Approval(msg.sender, _spender, _value);\n\n        return true;\n    }\n\n\n    function Nigger() public\n\t{\n\t\towner = msg.sender;\n\t\tbalances[owner] = totalSupply;\n\t\tTokenDeployed(totalSupply);\n\t}\n\n\n\t// ====================================================================================\n\t//\n    // List of all events\n\n    event NameChange(string _name);\n    event SymbolChange(string _symbol);\n\tevent Transfer(address indexed _from, address indexed _to, uint256 _value);\n\tevent Approval(address indexed _owner, address indexed _spender, uint256 _value);\n\tevent Burn(address indexed _from, uint256 _value);\n\tevent TokenDeployed(uint256 _totalSupply);\n\n}", "debug": "calldata_Nigger_4 + calldata_Nigger_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\nstorage_0: 0x0\ncaller: 0x0\ncalldata_Nigger_0: 0xa3895fff00000000000000000000000000000000000000000000000000000000\ncalldatasize_Nigger: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `changeSymbol(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/33/0x3cc1876197f2945eb8220c6f21e13d9240f560ad.sol", "function": "changeSymbol(string)", "lineno": 4, "title": "Integer Overflow ", "type": "Warning"}], "success": true}