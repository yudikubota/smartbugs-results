{
  "contract": "0x4fa9340d2947047efdcdfe972134d05b0860ae4d",
  "tool": "mythril",
  "start": 1563598844.1074674,
  "end": 1563599055.5764022,
  "duration": 211.4689347743988,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 1256,
        "code": "ddress,uint256,address,bytes)\"))), msg.sender, _value, this, _extraData));\n        return true;\n    }\n\n}",
        "debug": "calldata_ZeroHooStandardToken_32 + 36: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_ZeroHooStandardToken_0: 0xcae9ca5100000000000000000000000000000000000000000000000000000000\ncalldatasize_ZeroHooStandardToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `approveAndCall(address,uint256,bytes)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/23/0x4fa9340d2947047efdcdfe972134d05b0860ae4d.sol",
        "function": "approveAndCall(address,uint256,bytes)",
        "lineno": 120,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 4304,
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/23/0x4fa9340d2947047efdcdfe972134d05b0860ae4d.sol",
        "function": "approveAndCall(address,uint256,bytes)",
        "lineno": 124,
        "title": "Message call to external contract",
        "type": "Warning"
      }
    ],
    "success": true
  }
}