{
  "contract": "0x5cca9de0ff49a45124880ebce6391e73418a48fd",
  "tool": "mythril",
  "start": 1563700191.3692822,
  "end": 1563700228.5641594,
  "duration": 37.19487714767456,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 776,
        "code": " destroy(address[] tokens) instead\n    function destroy() public onlyContractOwner {\n        revert();\n    }\n\n    /// Deposits some amount of tokens ",
        "debug": "calldata_ProfiteroleWallet_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_ProfiteroleWallet_0: 0xc6786e5a00000000000000000000000000000000000000000000000000000000\ncalldatasize_ProfiteroleWallet: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `destroy(address[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/37/0x5cca9de0ff49a45124880ebce6391e73418a48fd.sol",
        "function": "destroy(address[])",
        "lineno": 171,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 965,
        "code": "=0;i<tokens.length;i++) {\n            address token = tokens[i];\n            uint balance = ERC20Interface(token).balanceOf(this);\n            if(balance != 0)\n                ERC20Interface(token).transfer(_to,balance);\n        }\n        return OK;\n    }\n\n    function checkOnlyContractOwner() internal constant returns(uint) {\n        if (contractOwner == msg.sender) {",
        "debug": "calldata_ProfiteroleWallet_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_ProfiteroleWallet_0: 0xd8f9659b00000000000000000000000000000000000000000000000000000000\ncalldatasize_ProfiteroleWallet: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `withdrawnTokens(address[],address)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/37/0x5cca9de0ff49a45124880ebce6391e73418a48fd.sol",
        "function": "withdrawnTokens(address[],address)",
        "lineno": 110,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2467,
        "code": "wallet's account using ERC20 tokens\n    ///\n    /// @dev ",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/37/0x5cca9de0ff49a45124880ebce6391e73418a48fd.sol",
        "function": "deposit(address,address,uint256)",
        "lineno": 192,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 3004,
        "code": "fer(_to,balance);\n        }\n        r",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/37/0x5cca9de0ff49a45124880ebce6391e73418a48fd.sol",
        "function": "withdrawnTokens(address[],address)",
        "lineno": 114,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 3004,
        "code": "fer(_to,balance);\n        }\n        r",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3238\n",
        "filename": "/unique_chucks/37/0x5cca9de0ff49a45124880ebce6391e73418a48fd.sol",
        "function": "withdrawnTokens(address[],address)",
        "lineno": 114,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 3238,
        "code": "ner() internal constant returns(uint) {\n   ",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/37/0x5cca9de0ff49a45124880ebce6391e73418a48fd.sol",
        "function": "withdrawnTokens(address[],address)",
        "lineno": 119,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 3583,
        "code": "okens\n    ///\n    /// @dev Allowed only for r",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/37/0x5cca9de0ff49a45124880ebce6391e73418a48fd.sol",
        "function": "withdraw(address,address,uint256)",
        "lineno": 208,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 3930,
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/37/0x5cca9de0ff49a45124880ebce6391e73418a48fd.sol",
        "function": "approve(address,address,uint256)",
        "lineno": 227,
        "title": "Message call to external contract",
        "type": "Warning"
      }
    ],
    "success": true
  }
}