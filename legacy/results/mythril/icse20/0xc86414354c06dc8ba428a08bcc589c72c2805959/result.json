{
  "contract": "0xc86414354c06dc8ba428a08bcc589c72c2805959",
  "tool": "mythril",
  "start": 1563595593.506557,
  "end": 1563595861.3760607,
  "duration": 267.869503736496,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 1254,
        "code": "_value)) \n\t\t{\n\t\t\tspender.receiveApproval(msg.sender, _value, this, _extraData);\n\t\t\treturn true;\n\t\t}\n\t}\t\n\t\n\t// Function to check the amount of tokens that an owner allowed to a spender\n\tfunction allowance(address _owner, address _spender) constant returns (uint256 remaining) \n\t{\n\t\treturn allowa",
        "debug": "calldata_tokenRecipient_32 + 36: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_tokenRecipient_0: 0xcae9ca5100000000000000000000000000000000000000000000000000000000\ncalldatasize_tokenRecipient: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `approveAndCall(address,uint256,bytes)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/22/0xc86414354c06dc8ba428a08bcc589c72c2805959.sol",
        "function": "approveAndCall(address,uint256,bytes)",
        "lineno": 188,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 4460,
        "code": "dress _owner, address _spender) constant returns (uint256 rem",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/22/0xc86414354c06dc8ba428a08bcc589c72c2805959.sol",
        "function": "approveAndCall(address,uint256,bytes)",
        "lineno": 196,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 4810,
        "code": "    function minus(uint2",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_tokenRecipient_4: 0xbd5dfeabad0efffffffffeffffffffffd599ffefbfe6f24271e80e64322c0700\ncalldata_tokenRecipient_32 + 4: 0x6218000d800000000000000000000000039800002005500633e06f771baff7fc\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x6218000d800000000000000000000000039800002005500633e06f771baff7fc\ncalldata_tokenRecipient_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncalldatasize_tokenRecipient: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/22/0xc86414354c06dc8ba428a08bcc589c72c2805959.sol",
        "function": "transfer(address,uint256)",
        "lineno": 37,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}