{
  "contract": "0x74a492720ab2cf59261b14bc89e78f8147a96f61",
  "tool": "mythril",
  "start": 1563537867.096481,
  "end": 1563538268.3086045,
  "duration": 401.21212339401245,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 288,
        "code": "      weiRefunded = we",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_VotesPlatformTokenPreSale_0: 0x6fdde0700000000000000000000000000000000000000000000000000000000\ncalldatasize_VotesPlatformTokenPreSale: 0x4\nstorage_6: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/11/0x74a492720ab2cf59261b14bc89e78f8147a96f61.sol",
        "function": "fallback",
        "lineno": 353,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 1852,
        "code": "rdCap);\n        }\n  ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/11/0x74a492720ab2cf59261b14bc89e78f8147a96f61.sol",
        "function": "fallback",
        "lineno": 394,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 1852,
        "code": "rdCap);\n        }\n  ",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2213\nCall at address: 2213\n",
        "filename": "/unique_chucks/11/0x74a492720ab2cf59261b14bc89e78f8147a96f61.sol",
        "function": "fallback",
        "lineno": 394,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 2213,
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/11/0x74a492720ab2cf59261b14bc89e78f8147a96f61.sol",
        "function": "fallback",
        "lineno": 397,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 2310,
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/11/0x74a492720ab2cf59261b14bc89e78f8147a96f61.sol",
        "function": "fallback",
        "lineno": 397,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 2956,
        "code": "< softCap && weiRaised.add(msg.",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3460\nCall at address: 3268\n",
        "filename": "/unique_chucks/11/0x74a492720ab2cf59261b14bc89e78f8147a96f61.sol",
        "function": "withdraw()",
        "lineno": 374,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 3268,
        "code": "pReached = true;\n    ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/11/0x74a492720ab2cf59261b14bc89e78f8147a96f61.sol",
        "function": "withdraw()",
        "lineno": 375,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 3268,
        "code": "pReached = true;\n    ",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3460\n",
        "filename": "/unique_chucks/11/0x74a492720ab2cf59261b14bc89e78f8147a96f61.sol",
        "function": "withdraw()",
        "lineno": 375,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 3460,
        "code": "oftCap) {\n            softCapReached = true;\n     ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/11/0x74a492720ab2cf59261b14bc89e78f8147a96f61.sol",
        "function": "withdraw()",
        "lineno": 374,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 3507,
        "code": "CapReached(softCap);\n   ",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/11/0x74a492720ab2cf59261b14bc89e78f8147a96f61.sol",
        "function": "withdraw()",
        "lineno": 376,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 3707,
        "code": "raw() onlyOwner {\n        r",
        "debug": "",
        "description": "In the function `refund()` the following predictable state variables are used to determine Ether recipient:\n- block.timestamp\n",
        "filename": "/unique_chucks/11/0x74a492720ab2cf59261b14bc89e78f8147a96f61.sol",
        "function": "refund()",
        "lineno": 362,
        "title": "Dependence on predictable environment variable",
        "type": "Warning"
      },
      {
        "address": 3707,
        "code": "raw() onlyOwner {\n        r",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 4024\n",
        "filename": "/unique_chucks/11/0x74a492720ab2cf59261b14bc89e78f8147a96f61.sol",
        "function": "refund()",
        "lineno": 362,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 4024,
        "code": "iciary, token.balanceOf(this));\n        ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/11/0x74a492720ab2cf59261b14bc89e78f8147a96f61.sol",
        "function": "refund()",
        "lineno": 365,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 4544,
        "code": "shed == false);\n\n    ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/11/0x74a492720ab2cf59261b14bc89e78f8147a96f61.sol",
        "function": "withdrawTokens()",
        "lineno": 370,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 4544,
        "code": "shed == false);\n\n    ",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 4736\n",
        "filename": "/unique_chucks/11/0x74a492720ab2cf59261b14bc89e78f8147a96f61.sol",
        "function": "withdrawTokens()",
        "lineno": 370,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 4736,
        "code": "        assert(crowdsaleFinished == false);\n\n     ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/11/0x74a492720ab2cf59261b14bc89e78f8147a96f61.sol",
        "function": "withdrawTokens()",
        "lineno": 370,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 5104,
        "code": " c;\n  }\n\n  fun",
        "debug": "The exception is triggered under the following conditions:\n\ntimestamp: 0x0\ncallvalue: 0xafafedffffffbffffffffbffffffffff80b216102e690000062902923fffff5e\nstorage_9: 0x903fc20000004000000000000500001e76c8e020b01279e175f3184168510058\nstorage_6: 0x9ffffffffffffffffffffffffffffffffffff3fffffffffffffffffdb33ff000\nstorage_14: 0x0\nstorage_13: 0x0\nstorage_12: 0x0\ncalldatasize_VotesPlatformTokenPreSale: 0x3\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/11/0x74a492720ab2cf59261b14bc89e78f8147a96f61.sol",
        "function": "fallback",
        "lineno": 28,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}