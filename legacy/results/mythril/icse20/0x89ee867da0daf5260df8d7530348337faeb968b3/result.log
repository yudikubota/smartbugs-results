{"error": null, "issues": [{"address": 5038, "code": " b);\n", "debug": "calldata_owned_32 + 4: 0xc290137095b13347e55005a6dc184559e0489f1233480050d0fb4bba17d34179\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_owned_4: 0x9c9efb7ae5acd378025256a3945f5859076e809243093d9ecae2636c9fd28979\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xc290137095b13347e55005a6dc184559e0489f1233480050d0fb4bba17d34179\ncalldata_owned_4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_owned_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncalldatasize_owned: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `transfer(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/15/0x89ee867da0daf5260df8d7530348337faeb968b3.sol", "function": "transfer(address,uint256)", "lineno": 38, "title": "Integer Overflow ", "type": "Warning"}, {"address": 5063, "code": "urn c;\n    }\n}\n\n\ncontrac", "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xbd5dfeabad0efffffffffeffffffffffd599ffefbfe6f24271e80e64322c0700\ncalldata_owned_4: 0x6218000d800000000000000000000000039800002005500633e06f771baff7fc\nstorage_49447583277831049919367225834250252452388266381872102257329440518579731298015: 0x6218000d800000000000000000000000039800002005500633e06f771baff7fc\ncaller: 0x0\nstorage_1: 0x0\ncalldata_owned_0: 0x315a095d00000000000000000000000000000000000000000000000000000000\ncalldatasize_owned: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/15/0x89ee867da0daf5260df8d7530348337faeb968b3.sol", "function": "withdrawTokens(uint256)", "lineno": 39, "title": "Exception state", "type": "Informational"}], "success": true}