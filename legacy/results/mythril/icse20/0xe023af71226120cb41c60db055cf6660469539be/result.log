{"error": null, "issues": [{"address": 268, "code": "C20Interface _tokenAddr, address[] dests, uint256[] values) public returns (uint256) {\n        uint256 i = 0;\n        while (i < dests.length) {\n            _tokenAddr.transferFrom(msg.sender, dests[i], values[i]);\n            i += 1;\n        }\n        return(i);\n    }\n\n    function withdraw() pu", "debug": "calldata_MassERC20Sender_32 + 4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_MassERC20Sender_0: 0xad8733ca00000000000000000000000000000000000000000000000000000000\ncalldatasize_MassERC20Sender: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `_function_0xad8733ca`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/14/0xe023af71226120cb41c60db055cf6660469539be.sol", "function": "_function_0xad8733ca", "lineno": 22, "title": "Integer Overflow ", "type": "Warning"}, {"address": 763, "code": "i += 1;\n ", "debug": "The exception is triggered under the following conditions:\n\ncalldata_MassERC20Sender_4 + calldata_MassERC20Sender_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_MassERC20Sender_0: 0xad8733ca00000000000000000000000000000000000000000000000000000000\ncalldatasize_MassERC20Sender: 0x4\nmem_128 +\n32 +\n32*\ncalldata_MassERC20Sender_4 + calldata_MassERC20Sender_32 + 4: 0x0\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/14/0xe023af71226120cb41c60db055cf6660469539be.sol", "function": "_function_0xad8733ca", "lineno": 26, "title": "Exception state", "type": "Informational"}, {"address": 961, "code": "msg.sender, dests[i], values[i]);\n            i += 1;\n  ", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/14/0xe023af71226120cb41c60db055cf6660469539be.sol", "function": "_function_0xad8733ca", "lineno": 25, "title": "Message call to external contract", "type": "Warning"}, {"address": 961, "code": "msg.sender, dests[i], values[i]);\n            i += 1;\n  ", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 961\n", "filename": "/unique_chucks/14/0xe023af71226120cb41c60db055cf6660469539be.sol", "function": "_function_0xad8733ca", "lineno": 25, "title": "Multiple Calls", "type": "Information"}], "success": true}