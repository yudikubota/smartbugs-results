{
  "contract": "0x7b34be3ad5ed1b760bedb9657f9647eca14687a9",
  "tool": "mythril",
  "start": 1563332850.6715932,
  "end": 1563332928.9527712,
  "duration": 78.28117799758911,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 796,
        "code": "ion transfer similar to ERC20 transfer with no _data .\n        // Added due to backwards compatibility reasons .\n        uint codeLength;\n\n        assembly {\n            // Retrieve the size of the code on target address, this needs assembly .\n            codeLength := extcodesize(_to)\n        }\n\n        mapBalances[msg.sender] = safeSub(mapBalances[msg.sender], _value);\n        mapBalances[_to] = safeAdd(mapBalances[_to], _value);\n        \n        if (codeLength > 0) {\n            ERC223Receiver receiver = ERC223Receiver(_to);\n            receiver.tokenFallback(msg.sender, _value, _data);\n        }\n        emit Transfer(msg.sender, _to, _value, _data);\n        return true;\n    }\n    \n    \n    function transfer(address _to, uint _value) public returns (bool) {\n        uint codeLength;\n        bytes mem",
        "debug": "calldata_StandardToken_32 + 36: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_StandardToken_0: 0xbe45fd6200000000000000000000000000000000000000000000000000000000\ncalldatasize_StandardToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `transfer(address,uint256,bytes)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x7b34be3ad5ed1b760bedb9657f9647eca14687a9.sol",
        "function": "transfer(address,uint256,bytes)",
        "lineno": 108,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2893,
        "code": "\n    \n    \n\n    function transferFrom(address _fr",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_contracts/0x7b34be3ad5ed1b760bedb9657f9647eca14687a9.sol",
        "function": "transfer(address,uint256)",
        "lineno": 147,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 3714,
        "code": "   return true;\n    }\n    \n    \n    function tran",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_contracts/0x7b34be3ad5ed1b760bedb9657f9647eca14687a9.sol",
        "function": "transfer(address,uint256,bytes)",
        "lineno": 125,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 4116,
        "code": "function safeA",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncalldata_StandardToken_32 + 4: 0x1\ncalldata_StandardToken_0: 0xbe45fd6200000000000000000000000000000000000000000000000000000000\ncalldatasize_StandardToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0x7b34be3ad5ed1b760bedb9657f9647eca14687a9.sol",
        "function": "transfer(address,uint256,bytes)",
        "lineno": 54,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 4134,
        "code": "\n    ",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_StandardToken_4: 0x9c9efb7ae5acd378025256a3945f5859076e809243093d9ecae2636c9fd28979\ncalldata_StandardToken_32 + 4: 0xc290137095b13347e55005a6dc184559e0489f1233480050d0fb4bba17d34179\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xc290137095b13347e55005a6dc184559e0489f1233480050d0fb4bba17d34179\ncalldata_StandardToken_0: 0xbe45fd6200000000000000000000000000000000000000000000000000000000\ncalldatasize_StandardToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `transfer(address,uint256,bytes)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x7b34be3ad5ed1b760bedb9657f9647eca14687a9.sol",
        "function": "transfer(address,uint256,bytes)",
        "lineno": 57,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 4159,
        "code": "tion max64(uint64 a,",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_StandardToken_4: 0xbd5dfeabad0efffffffffeffffffffffd599ffefbfe6f24271e80e64322c0700\ncalldata_StandardToken_32 + 4: 0x6218000d800000000000000000000000039800002005500633e06f771baff7fc\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x6218000d800000000000000000000000039800002005500633e06f771baff7fc\ncalldata_StandardToken_0: 0xbe45fd6200000000000000000000000000000000000000000000000000000000\ncalldatasize_StandardToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0x7b34be3ad5ed1b760bedb9657f9647eca14687a9.sol",
        "function": "transfer(address,uint256,bytes)",
        "lineno": 60,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}