{"error": null, "issues": [{"address": 1177, "code": "s have the same number of entries. */\n        require(_toAddresses.length == _amounts.length);\n\n        for (uint8 i = 0; i < _toAddresses.length; i++) {\n            transferFrom(_from, _toAddresses[i], _amounts[i]);\n        }\n    }\n\t\n}\n\t\n /**\n * @title Burnable Token\n * @dev Token that can be irreversibly burned (destroyed).\n */\ncontract BurnableToken is BasicToken {\n\n  event Burn(address indexed burner, uint256 value);\n \n   /**\n   * @dev Burns a specific amount of tokens.\n   * @par", "debug": "calldata_WFCCToken_32 + 4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_WFCCToken_0: 0xa7ff237300000000000000000000000000000000000000000000000000000000\ncalldatasize_WFCCToken: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `multiSendFrom(address,address[],uint256[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x48b1ed289752b82e60cc6760dda97d41a7db3b63.sol", "function": "multiSendFrom(address,address[],uint256[])", "lineno": 251, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1447, "code": "s have the same number of entries. */\n        require(_toAddresses.length == _amounts.length);\n\n        for (uint8 i = 0; i < _toAddresses.length; i++) {\n            transfer(_toAddresses[i], _amounts[i]);\n        }\n    }\n\n    /**\n    * @dev Transfer the specified amounts of tokens to the specified addresses from authorized balance of sender.\n    * @dev Be aware that there is no check for duplicate recipients.\n    *\n    * @param _from The address of the ", "debug": "calldata_WFCCToken_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_WFCCToken_0: 0xbb4c9f0b00000000000000000000000000000000000000000000000000000000\ncalldatasize_WFCCToken: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `multiSend(address[],uint256[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x48b1ed289752b82e60cc6760dda97d41a7db3b63.sol", "function": "multiSend(address[],uint256[])", "lineno": 232, "title": "Integer Overflow ", "type": "Warning"}, {"address": 5008, "code": "\n    * @param _toAddresses Receiver addresses.\n ", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_contracts/0x48b1ed289752b82e60cc6760dda97d41a7db3b63.sol", "function": "transferAnyERC20Token(address,uint256)", "lineno": 225, "title": "Message call to external contract", "type": "Warning"}, {"address": 5561, "code": "  }\n\n  /**\n  *", "debug": "The exception is triggered under the following conditions:\n\ncalldata_WFCCToken_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_2: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_0: 0x0\ncaller: 0x0\ncalldata_WFCCToken_0: 0x42966c6800000000000000000000000000000000000000000000000000000000\ncalldatasize_WFCCToken: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_contracts/0x48b1ed289752b82e60cc6760dda97d41a7db3b63.sol", "function": "burn(uint256)", "lineno": 37, "title": "Exception state", "type": "Informational"}, {"address": 5579, "code": " }\n}\n", "debug": "calldata_WFCCToken_32 + 36: 0xfe51000008ce80008001c1d33616877ffffffffffffff7ffffe10000398d50ac\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_WFCCToken_32_+_4: 0xc050fffff320c00020003d81af848540000000000000040000110001bd062022\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xfe51000008ce80008001c1d33616877ffffffffffffff7ffffe10000398d50ac\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_WFCCToken_4: 0xfe51000008ce80008001c1d33616877ffffffffffffff7ffffe10000398d50ac\ncalldata_WFCCToken_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_WFCCToken_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_WFCCToken: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `transferFrom(address,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x48b1ed289752b82e60cc6760dda97d41a7db3b63.sol", "function": "transferFrom(address,address,uint256)", "lineno": 46, "title": "Integer Overflow ", "type": "Warning"}, {"address": 5592, "code": " @title Ownabl", "debug": "The exception is triggered under the following conditions:\n\ncalldata_WFCCToken_32 + 4: 0x6218000d800000000000000000000000039800002005500633e06f771baff7fc\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_WFCCToken_4: 0xbd5dfeabad0efffffffffeffffffffffd599ffefbfe6f24271e80e64322c0700\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x6218000d800000000000000000000000039800002005500633e06f771baff7fc\ncalldata_WFCCToken_4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_WFCCToken_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncalldatasize_WFCCToken: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_contracts/0x48b1ed289752b82e60cc6760dda97d41a7db3b63.sol", "function": "transfer(address,uint256)", "lineno": 50, "title": "Exception state", "type": "Informational"}], "success": true}