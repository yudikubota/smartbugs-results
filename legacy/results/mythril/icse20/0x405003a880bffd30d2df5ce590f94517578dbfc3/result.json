{
  "contract": "0x405003a880bffd30d2df5ce590f94517578dbfc3",
  "tool": "mythril",
  "start": 1563295008.9115791,
  "end": 1563295065.5015135,
  "duration": 56.58993434906006,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 357,
        "code": "(address[] receivers, uint[] balances) public {\n    require(msg.sender == owner);\n    for(uint i = 0; i < receivers.length; i++) {\n      token.transfer(receivers[i], balances[i]);\n    }\n  } \n  \n  function retrieveCu",
        "debug": "calldata_SimpleDistributor_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_SimpleDistributor_0: 0xa037873000000000000000000000000000000000000000000000000000000000\ncalldatasize_SimpleDistributor: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `_function_0xa0378730`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x405003a880bffd30d2df5ce590f94517578dbfc3.sol",
        "function": "_function_0xa0378730",
        "lineno": 22,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 941,
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_contracts/0x405003a880bffd30d2df5ce590f94517578dbfc3.sol",
        "function": "retrieveTokens(address,address)",
        "lineno": 39,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 941,
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1133\n",
        "filename": "/unique_contracts/0x405003a880bffd30d2df5ce590f94517578dbfc3.sol",
        "function": "retrieveTokens(address,address)",
        "lineno": 39,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 1133,
        "code": "balanceOf(this));\n  }\n\n}",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_contracts/0x405003a880bffd30d2df5ce590f94517578dbfc3.sol",
        "function": "retrieveTokens(address,address)",
        "lineno": 36,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 1402,
        "code": "\n  \n  funct",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_SimpleDistributor_4 + calldata_SimpleDistributor_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_0: 0x0\ncaller: 0x0\ncalldata_SimpleDistributor_0: 0xa037873000000000000000000000000000000000000000000000000000000000\ncalldatasize_SimpleDistributor: 0x4\nmem_128 +\n32 +\n32*\ncalldata_SimpleDistributor_4 + calldata_SimpleDistributor_4: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0x405003a880bffd30d2df5ce590f94517578dbfc3.sol",
        "function": "_function_0xa0378730",
        "lineno": 27,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 1549,
        "code": "[i], balances[i]);\n    }\n  } \n  \n  functi",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_contracts/0x405003a880bffd30d2df5ce590f94517578dbfc3.sol",
        "function": "_function_0xa0378730",
        "lineno": 25,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 1549,
        "code": "[i], balances[i]);\n    }\n  } \n  \n  functi",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1549\n",
        "filename": "/unique_contracts/0x405003a880bffd30d2df5ce590f94517578dbfc3.sol",
        "function": "_function_0xa0378730",
        "lineno": 25,
        "title": "Multiple Calls",
        "type": "Information"
      }
    ],
    "success": true
  }
}