{"error": null, "issues": [{"address": 12887, "code": "int64", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x2d8d5e4b7a40099805c1608a1d5020005ad7cbeb7de89b949ffd689b7edbafb3\ncallvalue: 0xf8eacb887d8016979539dcf000136012a2902bcb78d6d2df9001488a4093ac23\nblock_number: 0xdfcebfff9ff7eefee1efff8bcef6457456be6d4cef9bc6f5ffff7daa16afbf7f\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\nstorage_5: 0xdfcebfff9ff7eefee1efff8bcef6457456be6d4cef9bc6f5ffff7daa16afbf7f\nstorage_4: 0xdfcebfff9ff7eefee1efff8bcef6457456be6d4cef9bc6f5ffff7daa16afbf7f\nstorage_3: 0xffffffffffffffffffffffffffffffffffffffff00\nstorage_20: 0x0\ncalldatasize_TokenController: 0x3\nstorage_17: 0x0\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/1/0x744d70fdbe2ba4cf95131626614a1763df805b9e.sol", "function": "fallback", "lineno": 117, "title": "Integer Overflow ", "type": "Warning"}, {"address": 12900, "code": " return a >= b", "debug": "The exception is triggered under the following conditions:\n\nblock_number: 0xfffffffffffffffffffffffffffffffffeffffffffffffffffffffffefffffff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncallvalue: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\nstorage_5: 0xfffffffffffffffffffffffffffffffffeffffffffffffffffffffffefffffff\nstorage_4: 0xfffffffffffffffffffffffffffffffffeffffffffffffffffffffffefffffff\nstorage_3: 0xffffffffffffffffffffffffffffffffffffffff00\nstorage_20: 0x0\ncalldatasize_TokenController: 0x3\nstorage_17: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/1/0x744d70fdbe2ba4cf95131626614a1763df805b9e.sol", "function": "fallback", "lineno": 118, "title": "Exception state", "type": "Informational"}], "success": true}