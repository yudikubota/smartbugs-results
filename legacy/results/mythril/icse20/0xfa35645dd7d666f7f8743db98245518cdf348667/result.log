{"error": null, "issues": [{"address": 278, "code": "rentPot + SafeMath.div(msg.value,2);\n ", "debug": "storage_13: 0xf3ea62cf40dda969f23d7befcff400054ced4d77eabd0731d88048af13e43fd9\ncallvalue: 0xa793701e99a219ba046280f53febcab230229f081642a600db289559c2cc6042\ncalldatasize_TribalWarfare: 0x3\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/6/0xfa35645dd7d666f7f8743db98245518cdf348667.sol", "function": "fallback", "lineno": 235, "title": "Integer Overflow ", "type": "Warning"}, {"address": 299, "code": " + SafeMath.div(msg.value,2);\n   pa", "debug": "storage_14: 0xf3ea62cf40dda969f23d7befcff400054ced4d77eabd0731d88048af13e43fd9\ncallvalue: 0xa793701e99a219ba046280f53febcab230229f081642a600db289559c2cc6042\ncalldatasize_TribalWarfare: 0x3\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/6/0xfa35645dd7d666f7f8743db98245518cdf348667.sol", "function": "fallback", "lineno": 236, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1767, "code": " @param _tokenId The ", "debug": "The exception is triggered under the following conditions:\n\ncalldata_TribalWarfare_4: 0x6\ncalldata_TribalWarfare_0: 0x10fe7dc700000000000000000000000000000000000000000000000000000000\ncalldatasize_TribalWarfare: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/6/0xfa35645dd7d666f7f8743db98245518cdf348667.sol", "function": "getTribalMask(uint256)", "lineno": 216, "title": "Exception state", "type": "Informational"}, {"address": 2598, "code": " @dev not", "debug": "", "description": "Function purchase(uint256,address) retrieves the transaction origin (tx.origin) using the ORIGIN opcode. Use msg.sender instead.\nSee also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin", "filename": "/unique_chucks/6/0xfa35645dd7d666f7f8743db98245518cdf348667.sol", "function": "purchase(uint256,address)", "lineno": 44, "title": "Use of tx.origin", "type": "Warning"}, {"address": 2719, "code": " not sending to self\n", "debug": "The exception is triggered under the following conditions:\n\ntimestamp: 0x0\ncalldata_TribalWarfare_4: 0x6\nstorage_16: 0x1\ngasprice: 0x174876e7fe\nstorage_12: 0x0\ncaller: 0x0\norigin: 0x0\ncalldata_TribalWarfare_0: 0xae77c23700000000000000000000000000000000000000000000000000000000\ncalldatasize_TribalWarfare: 0x4\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/6/0xfa35645dd7d666f7f8743db98245518cdf348667.sol", "function": "purchase(uint256,address)", "lineno": 279, "title": "Exception state", "type": "Informational"}, {"address": 4017, "code": "n ownership\n  functio", "debug": "The exception is triggered under the following conditions:\n\nstorage_16: 0x0\ncalldata_TribalWarfare_4: 0x6\ntimestamp: 0x1\ncalldata_TribalWarfare_0: 0xb9186d7d00000000000000000000000000000000000000000000000000000000\ncalldatasize_TribalWarfare: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/6/0xfa35645dd7d666f7f8743db98245518cdf348667.sol", "function": "priceOf(uint256)", "lineno": 336, "title": "Exception state", "type": "Informational"}, {"address": 4047, "code": " _tokenId) private vi", "debug": "The exception is triggered under the following conditions:\n\nstorage_16: 0x0\ncalldata_TribalWarfare_4: 0x6\ntimestamp: 0x0\ncalldata_TribalWarfare_0: 0xb9186d7d00000000000000000000000000000000000000000000000000000000\ncalldatasize_TribalWarfare: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/6/0xfa35645dd7d666f7f8743db98245518cdf348667.sol", "function": "priceOf(uint256)", "lineno": 337, "title": "Exception state", "type": "Informational"}, {"address": 4078, "code": "templeOfEthaddress);\n    paused=t", "debug": "The exception is triggered under the following conditions:\n\ncalldata_TribalWarfare_4: 0x6\ncalldata_TribalWarfare_0: 0xba444c9300000000000000000000000000000000000000000000000000000000\ncalldatasize_TribalWarfare: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/6/0xfa35645dd7d666f7f8743db98245518cdf348667.sol", "function": "_function_0xba444c93", "lineno": 134, "title": "Exception state", "type": "Informational"}, {"address": 4374, "code": "ime);\n }\n\n function newRou", "debug": "timestamp: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_6: 0x57f25cd000000000000000000000000000000000000000000000000000000000\nstorage_9: 0x0\ncaller: 0x0\ncalldata_TribalWarfare_0: 0xbe9a655500000000000000000000000000000000000000000000000000000000\ncalldatasize_TribalWarfare: 0x4\n", "description": "A possible integer overflow exists in the function `start()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/6/0xfa35645dd7d666f7f8743db98245518cdf348667.sol", "function": "start()", "lineno": 241, "title": "Integer Overflow ", "type": "Warning"}, {"address": 4598, "code": "rrentPrice=tribalMasks[1].basePrice;\n   tribalMa", "debug": "", "description": "In the function `purchase(uint256,address)` the following predictable state variables are used to determine Ether recipient:\n- block.timestamp\n", "filename": "/unique_chucks/6/0xfa35645dd7d666f7f8743db98245518cdf348667.sol", "function": "purchase(uint256,address)", "lineno": 253, "title": "Dependence on predictable environment variable", "type": "Warning"}, {"address": 4598, "code": "rrentPrice=tribalMasks[1].basePrice;\n   tribalMa", "debug": "", "description": "A possible transaction order independence vulnerability exists in function purchase(uint256,address). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/6/0xfa35645dd7d666f7f8743db98245518cdf348667.sol", "function": "purchase(uint256,address)", "lineno": 253, "title": "Transaction order dependence", "type": "Warning"}], "success": true}