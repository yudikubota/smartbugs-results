{
  "contract": "0x3c5753b9de8c49101155a9b31116b965a5d82574",
  "tool": "mythril",
  "start": 1563645724.6589968,
  "end": 1563645828.9354465,
  "duration": 104.27644968032837,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 421,
        "code": "t Contribution(msg.sender, am",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 644\n",
        "filename": "/unique_chucks/29/0x3c5753b9de8c49101155a9b31116b965a5d82574.sol",
        "function": "fallback",
        "lineno": 90,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 644,
        "code": "}\n\n    // CONTRIBUTE FUNCTION\n    /",
        "debug": "",
        "description": "This contract executes a message call to an address found at storage slot 5. This storage slot can be written to by calling the function `setup(address,uint256)`. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/29/0x3c5753b9de8c49101155a9b31116b965a5d82574.sol",
        "function": "fallback",
        "lineno": 91,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 644,
        "code": "}\n\n    // CONTRIBUTE FUNCTION\n    /",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function fallback. The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/29/0x3c5753b9de8c49101155a9b31116b965a5d82574.sol",
        "function": "fallback",
        "lineno": 91,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 2311,
        "debug": "",
        "description": "This contract executes a message call to an address found at storage slot 5. This storage slot can be written to by calling the function `setup(address,uint256)`. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/29/0x3c5753b9de8c49101155a9b31116b965a5d82574.sol",
        "function": "changeTransferStats(bool)",
        "lineno": 127,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 2311,
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function changeTransferStats(bool). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/29/0x3c5753b9de8c49101155a9b31116b965a5d82574.sol",
        "function": "changeTransferStats(bool)",
        "lineno": 127,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 2564,
        "code": "msg.sender, amount);\n    }\n\n ",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2787\n",
        "filename": "/unique_chucks/29/0x3c5753b9de8c49101155a9b31116b965a5d82574.sol",
        "function": "contribute()",
        "lineno": 105,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 2787,
        "code": "e the ETH/XAIT rate\n    function up",
        "debug": "",
        "description": "This contract executes a message call to an address found at storage slot 5. This storage slot can be written to by calling the function `setup(address,uint256)`. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/29/0x3c5753b9de8c49101155a9b31116b965a5d82574.sol",
        "function": "contribute()",
        "lineno": 108,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 2787,
        "code": "e the ETH/XAIT rate\n    function up",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function contribute(). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/29/0x3c5753b9de8c49101155a9b31116b965a5d82574.sol",
        "function": "contribute()",
        "lineno": 108,
        "title": "Transaction order dependence",
        "type": "Warning"
      }
    ],
    "success": true
  }
}