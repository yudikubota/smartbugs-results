{
  "contract": "0x8866d52303e372c2a2936d8ea09afd87bcbd8cf2",
  "tool": "mythril",
  "start": 1563481011.901599,
  "end": 1563481029.7670083,
  "duration": 17.86540937423706,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 2818,
        "code": "ourceTokens.transferFrom(msg.sende",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/6/0x8866d52303e372c2a2936d8ea09afd87bcbd8cf2.sol",
        "function": "convert10MTI()",
        "lineno": 200,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 2818,
        "code": "ourceTokens.transferFrom(msg.sende",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3426\nCall at address: 3426\nCall at address: 3120\n",
        "filename": "/unique_chucks/6/0x8866d52303e372c2a2936d8ea09afd87bcbd8cf2.sol",
        "function": "convert10MTI()",
        "lineno": 200,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 3120,
        "code": "    // transferFrom(manager, msg.sender,",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/6/0x8866d52303e372c2a2936d8ea09afd87bcbd8cf2.sol",
        "function": "convert10MTI()",
        "lineno": 201,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 3120,
        "code": "    // transferFrom(manager, msg.sender,",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3426\nCall at address: 3426\n",
        "filename": "/unique_chucks/6/0x8866d52303e372c2a2936d8ea09afd87bcbd8cf2.sol",
        "function": "convert10MTI()",
        "lineno": 201,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 3426,
        "code": "lined\n    balances[manager] = balances[manager].sub(tokens",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/6/0x8866d52303e372c2a2936d8ea09afd87bcbd8cf2.sol",
        "function": "convert10MTI()",
        "lineno": 202,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 4501,
        "code": "  }\n\n",
        "debug": "calldata_TrustPoolToken_32 + 4: 0xc290137095b13347e55005a6dc184559e0489f1233480050d0fb4bba17d34179\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TrustPoolToken_4: 0x9c9efb7ae5acd378025256a3945f5859076e809243093d9ecae2636c9fd28979\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xc290137095b13347e55005a6dc184559e0489f1233480050d0fb4bba17d34179\ncalldata_TrustPoolToken_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncalldatasize_TrustPoolToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `transfer(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/6/0x8866d52303e372c2a2936d8ea09afd87bcbd8cf2.sol",
        "function": "transfer(address,uint256)",
        "lineno": 51,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 4514,
        "code": "asic token\n Ba",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_TrustPoolToken_32 + 4: 0x6218000d800000000000000000000000039800002005500633e06f771baff7fc\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TrustPoolToken_4: 0xbd5dfeabad0efffffffffeffffffffffd599ffefbfe6f24271e80e64322c0700\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x6218000d800000000000000000000000039800002005500633e06f771baff7fc\ncalldata_TrustPoolToken_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncalldatasize_TrustPoolToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/6/0x8866d52303e372c2a2936d8ea09afd87bcbd8cf2.sol",
        "function": "transfer(address,uint256)",
        "lineno": 56,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 4538,
        "code": "\n    function ",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncalldata_TrustPoolToken_32 + 4: 0x1\ncalldata_TrustPoolToken_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncalldatasize_TrustPoolToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/6/0x8866d52303e372c2a2936d8ea09afd87bcbd8cf2.sol",
        "function": "transfer(address,uint256)",
        "lineno": 46,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}