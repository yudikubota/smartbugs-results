{
  "contract": "0x70e9d86cd9d84429a008f868e781780ee423e823",
  "tool": "mythril",
  "start": 1563591346.212655,
  "end": 1563591962.6080651,
  "duration": 616.3954100608826,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 212,
        "code": "     uint256 i = 0;\n        require(dests.length > 0 && (dests.length == values.length || values.length == 1));\n        \n        \n        if (values.length > 1)\n        {\n            while (i < dests.length) {\n                dests[i].transfer(values[i]);\n                i += 1;\n            }\n        }\n        else    \n        {\n            while (i < dests.length) {\n                dests[i].transfer(values[0]);\n                i += 1;\n            }\n        }\n        eMultiTransferETH(dests, values);\n    }\n}",
        "debug": "calldata_ERC20Interface_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_ERC20Interface_0: 0x142b353d00000000000000000000000000000000000000000000000000000000\ncalldatasize_ERC20Interface: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `MultiTransferETH(address[],uint256[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/21/0x70e9d86cd9d84429a008f868e781780ee423e823.sol",
        "function": "MultiTransferETH(address[],uint256[])",
        "lineno": 93,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 413,
        "code": "6[] values) public onlyExecutor\n    {\n        uint256 i = 0;\n        ERC20Interface T = ERC20Interface(_tokenAddr);\n        \n        require(dests.length > 0 && (dests.length == values.length || values.length == 1));\n        \n        if (values.length > 1)\n        {\n            while (i < dests.length) {\n                T.transfer(dests[i], values[i]);\n                i += 1;\n            }\n        }\n        else    \n        {\n            while (i < dests.length) {\n                T.transfer(dests[i], values[0]);\n                i += 1;\n            }\n        }\n        eMultiTransfer(_tokenAddr, dests, values);\n    }\n    \n    function MultiTransferETH(address[] dests, uint256[] values) public onlyExecut",
        "debug": "calldata_ERC20Interface_32 + 4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_ERC20Interface_0: 0x241a230500000000000000000000000000000000000000000000000000000000\ncalldatasize_ERC20Interface: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `MultiTransfer(address,address[],uint256[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/21/0x70e9d86cd9d84429a008f868e781780ee423e823.sol",
        "function": "MultiTransfer(address,address[],uint256[])",
        "lineno": 67,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2219,
        "code": "   }\n        else    \n        {",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/21/0x70e9d86cd9d84429a008f868e781780ee423e823.sol",
        "function": "MultiTransfer(address,address[],uint256[])",
        "lineno": 80,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 2219,
        "code": "   }\n        else    \n        {",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2219\n",
        "filename": "/unique_chucks/21/0x70e9d86cd9d84429a008f868e781780ee423e823.sol",
        "function": "MultiTransfer(address,address[],uint256[])",
        "lineno": 80,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 2515,
        "code": "      eMultiTransfer(_tokenAddr",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/21/0x70e9d86cd9d84429a008f868e781780ee423e823.sol",
        "function": "MultiTransfer(address,address[],uint256[])",
        "lineno": 88,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 2515,
        "code": "      eMultiTransfer(_tokenAddr",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2515\n",
        "filename": "/unique_chucks/21/0x70e9d86cd9d84429a008f868e781780ee423e823.sol",
        "function": "MultiTransfer(address,address[],uint256[])",
        "lineno": 88,
        "title": "Multiple Calls",
        "type": "Information"
      }
    ],
    "success": true
  }
}