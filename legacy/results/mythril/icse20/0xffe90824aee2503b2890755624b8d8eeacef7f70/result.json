{
  "contract": "0xffe90824aee2503b2890755624b8d8eeacef7f70",
  "tool": "mythril",
  "start": 1563704222.0835314,
  "end": 1563704297.671585,
  "duration": 75.5880537033081,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 1661,
        "code": ";\n    return tr",
        "debug": "storage_1: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_2: 0x0\ncaller: 0x0\ncalldata_InvestorsStorage_0: 0xfd0ae1000000000000000000000000000000000000000000000000000000000\ncalldatasize_InvestorsStorage: 0x4\nstorage_0 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_InvestorsStorage_4: 0x0\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `insert(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/39/0xffe90824aee2503b2890755624b8d8eeacef7f70.sol",
        "function": "insert(address,uint256)",
        "lineno": 85,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1764,
        "code": "ddr) public view",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_1: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_2: 0x0\ncaller: 0x0\ncalldata_InvestorsStorage_0: 0xfd0ae1000000000000000000000000000000000000000000000000000000000\ncalldatasize_InvestorsStorage: 0x4\nstorage_0 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_InvestorsStorage_4: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/39/0xffe90824aee2503b2890755624b8d8eeacef7f70.sol",
        "function": "insert(address,uint256)",
        "lineno": 89,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2209,
        "code": "Owner returns (bool) {\n    if (s.",
        "debug": "calldata_InvestorsStorage_32 + 4: 0x57f25cd000000000000000000000000000000000000000000000000000000000\nstorage_3 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_InvestorsStorage_4: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_0 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_InvestorsStorage_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_2: 0x0\ncaller: 0x0\ncalldata_InvestorsStorage_0: 0x1130281800000000000000000000000000000000000000000000000000000000\ncalldatasize_InvestorsStorage: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `addRefBonus(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/39/0xffe90824aee2503b2890755624b8d8eeacef7f70.sol",
        "function": "addRefBonus(address,uint256)",
        "lineno": 119,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2614,
        "code": "() public",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_InvestorsStorage_4: 0x0\nstorage_1: 0x0\ncalldata_InvestorsStorage_0: 0x460d674b00000000000000000000000000000000000000000000000000000000\ncalldatasize_InvestorsStorage: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/39/0xffe90824aee2503b2890755624b8d8eeacef7f70.sol",
        "function": "keyFromIndex(uint256)",
        "lineno": 145,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3801,
        "code": "Owner returns (bool) {\n    ",
        "debug": "calldata_InvestorsStorage_32 + 4: 0x57f25cd000000000000000000000000000000000000000000000000000000000\nstorage_1 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_InvestorsStorage_4: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_0 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_InvestorsStorage_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_2: 0x0\ncaller: 0x0\ncalldata_InvestorsStorage_0: 0xca0b187800000000000000000000000000000000000000000000000000000000\ncalldatasize_InvestorsStorage: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `addValue(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/39/0xffe90824aee2503b2890755624b8d8eeacef7f70.sol",
        "function": "addValue(address,uint256)",
        "lineno": 125,
        "title": "Integer Overflow ",
        "type": "Warning"
      }
    ],
    "success": true
  }
}