{
  "contract": "0xff6b9da978fee89859ba0ff240ef4b545448e289",
  "tool": "mythril",
  "start": 1563524102.955039,
  "end": 1563524412.7811723,
  "duration": 309.8261332511902,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 3889,
        "code": "g.sender;\n        balances[bur",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/9/0xff6b9da978fee89859ba0ff240ef4b545448e289.sol",
        "function": "withdrawAltcoinTokens(address)",
        "lineno": 228,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 3889,
        "code": "g.sender;\n        balances[bur",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 4147\n",
        "filename": "/unique_chucks/9/0xff6b9da978fee89859ba0ff240ef4b545448e289.sol",
        "function": "withdrawAltcoinTokens(address)",
        "lineno": 228,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 4147,
        "code": "rner].sub(_value);\n        to",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/9/0xff6b9da978fee89859ba0ff240ef4b545448e289.sol",
        "function": "withdrawAltcoinTokens(address)",
        "lineno": 229,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 4234,
        "code": "        require(_to != address(0));",
        "debug": "The exception is triggered under the following conditions:\n\ncalldatasize_TwoOneTwo: 0x60\ncalldata_TwoOneTwo_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/9/0xff6b9da978fee89859ba0ff240ef4b545448e289.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 174,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 6699,
        "code": "        require(_to != address(0));",
        "debug": "The exception is triggered under the following conditions:\n\ncalldatasize_TwoOneTwo: 0x4\ncalldata_TwoOneTwo_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/9/0xff6b9da978fee89859ba0ff240ef4b545448e289.sol",
        "function": "transfer(address,uint256)",
        "lineno": 174,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 7433,
        "code": "ce);\n    }\n    \n",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/9/0xff6b9da978fee89859ba0ff240ef4b545448e289.sol",
        "function": "getTokenBalance(address,address)",
        "lineno": 216,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 7913,
        "code": "\n    ",
        "debug": "calldatasize_TwoOneTwo: 0x64\ncalldata_TwoOneTwo_32 + 36: 0x9351db6e0b21734731ae9cfc13143e8338c6dcf4a783a60c06e0d1d708004801\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TwoOneTwo_32_+_4: 0xa8511371907d295662825497115ba082b6a492f6b7f433cff7fbddd4ebff6ff5\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x9351db6e0b21734731ae9cfc13143e8338c6dcf4a783a60c06e0d1d708004801\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TwoOneTwo_4: 0x9351db6e0b21734731ae9cfc13143e8338c6dcf4a783a60c06e0d1d708004801\ncalldata_TwoOneTwo_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_TwoOneTwo_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `transferFrom(address,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/9/0xff6b9da978fee89859ba0ff240ef4b545448e289.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 31,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 7926,
        "code": "c;\n    }\n}\n\nco",
        "debug": "The exception is triggered under the following conditions:\n\ncalldatasize_TwoOneTwo: 0x20000000000000000000000000000000070\ncalldata_TwoOneTwo_32 + 36: 0x45d32d9b26ac7cd15b9c95c0768e7c43bf6f9b6f4a039d4dcc39eeb901390535\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TwoOneTwo_32_+_4: 0xeed94dba0409e2901e98bca0e8207863a06e1b0e522bc7310401ec8848abbd31\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x45d32d9b26ac7cd15b9c95c0768e7c43bf6f9b6f4a039d4dcc39eeb901390535\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TwoOneTwo_4: 0x45d32d9b26ac7cd15b9c95c0768e7c43bf6f9b6f4a039d4dcc39eeb901390535\ncalldata_TwoOneTwo_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_TwoOneTwo_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/9/0xff6b9da978fee89859ba0ff240ef4b545448e289.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 32,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 7949,
        "code": "turn a - b;\n  ",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_TwoOneTwo_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_5: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TwoOneTwo_32_+_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_1: 0x0\ncaller: 0x0\ncalldata_TwoOneTwo_0: 0x8a56f3ee00000000000000000000000000000000000000000000000000000000\ncalldatasize_TwoOneTwo: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/9/0xff6b9da978fee89859ba0ff240ef4b545448e289.sol",
        "function": "burnFrom(uint256,address)",
        "lineno": 27,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}