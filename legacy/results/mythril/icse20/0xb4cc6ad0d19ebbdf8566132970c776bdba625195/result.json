{
  "contract": "0xb4cc6ad0d19ebbdf8566132970c776bdba625195",
  "tool": "mythril",
  "start": 1563808632.3485627,
  "end": 1563808680.497564,
  "duration": 48.149001359939575,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 797,
        "code": "ion of an executed purchase. Observe state and use revert statements to undo rollback when valid conditions are not met.\n   * @param _beneficiary Address performing the token purchase\n   * ",
        "debug": "calldata_TimedCappedMintedCrowdsale_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_TimedCappedMintedCrowdsale_0: 0x8c10671c00000000000000000000000000000000000000000000000000000000\ncalldatasize_TimedCappedMintedCrowdsale: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `addManyToWhitelist(address[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/32/0xb4cc6ad0d19ebbdf8566132970c776bdba625195.sol",
        "function": "addManyToWhitelist(address[])",
        "lineno": 467,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 3103,
        "code": "* @title ERC20",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_4: 0xc63a21246c99b000ea0030728005ea6909080a424a47ca48059be3c0ff803205\ncallvalue: 0xd2bd697b67b8b7eebcef8ebaf405ca6a0b728a06c347eda3d5dbebfeffbdb977\nstorage_6: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xff00\ntimestamp: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldatasize_TimedCappedMintedCrowdsale: 0x3\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/32/0xb4cc6ad0d19ebbdf8566132970c776bdba625195.sol",
        "function": "fallback",
        "lineno": 51,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}