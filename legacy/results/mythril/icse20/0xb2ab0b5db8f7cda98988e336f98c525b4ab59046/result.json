{
  "contract": "0xb2ab0b5db8f7cda98988e336f98c525b4ab59046",
  "tool": "mythril",
  "start": 1563754829.821377,
  "end": 1563755084.8494859,
  "duration": 255.02810883522034,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 678,
        "code": ") public {\n        uint hash = uint(keccak256(bytes(reason)));\n        if (!ZEROxBTCLovers[hash]){\n            // congratulations we found new love for 0xBTC!\n            // reward: an 0xBTC love token \n            ZEROxBTCLovers[hash] = true; \n            balanceOf[msg.sender] += (10 ** 18);\n            for (uint i = 0; i < 100; i++) {\n                emit Transfer(0xB6eD7644C69416d67B522e20bC294A9a9B405B31, msg.sender, 10**18); // <3 \n            }\n            emit New0xBTCLove(msg.sender, reason);\n                \n            uint beforeSupply = totalSupply;\n            \n            totalSupply += (10 ** 18); // Can actually overflow this because im bad at solidity (lel hackers lel)\n        \n            assert(totalSupply > beforeSupply);\n        }\n    }\n\n    function transfer(address _to, uint256 _value",
        "debug": "calldata_ZEROxBTCLove_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_ZEROxBTCLove_0: 0x64dc68b800000000000000000000000000000000000000000000000000000000\ncalldatasize_ZEROxBTCLove: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `ILove0xBTC(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/42/0xb2ab0b5db8f7cda98988e336f98c525b4ab59046.sol",
        "function": "ILove0xBTC(string)",
        "lineno": 34,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1463,
        "code": "\n        _;\n    }\n    \n  ",
        "debug": "The exception is triggered under the following conditions:\n\ncaller: 0x0\ncalldata_ZEROxBTCLove_0: 0x95ea7b300000000000000000000000000000000000000000000000000000000\ncalldatasize_ZEROxBTCLove: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/42/0xb2ab0b5db8f7cda98988e336f98c525b4ab59046.sol",
        "function": "approve(address,uint256)",
        "lineno": 27,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 1896,
        "code": "\n        _;\n    }\n    \n  ",
        "debug": "The exception is triggered under the following conditions:\n\ncaller: 0x0\ncalldata_ZEROxBTCLove_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_ZEROxBTCLove: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/42/0xb2ab0b5db8f7cda98988e336f98c525b4ab59046.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 27,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2938,
        "code": "          for (uint i = 0; i < 100;",
        "debug": "calldata_ZEROxBTCLove_4 + calldata_ZEROxBTCLove_4: 0xa0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffff0ffffe3c0c0000\nstorage_keccac_UDiv(KECCAC_mem_128_+\n32_+\n32*\nConcat(0,\n_______Extract(255,\n_______________5,\n_______________31_+\n_______________calldata_ZEROxBTCLove_4_+_calldata_ZEROxBTCLove_4))),\n_____1): 0x0\ncalldata_ZEROxBTCLove_0: 0x64dc68b800000000000000000000000000000000000000000000000000000000\ncalldatasize_ZEROxBTCLove: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `ILove0xBTC(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/42/0xb2ab0b5db8f7cda98988e336f98c525b4ab59046.sol",
        "function": "ILove0xBTC(string)",
        "lineno": 41,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 3576,
        "code": "\n        _;\n    }\n    \n  ",
        "debug": "The exception is triggered under the following conditions:\n\ncaller: 0x0\ncalldata_ZEROxBTCLove_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncalldatasize_ZEROxBTCLove: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/42/0xb2ab0b5db8f7cda98988e336f98c525b4ab59046.sol",
        "function": "transfer(address,uint256)",
        "lineno": 27,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}