{
  "contract": "0x444b5b08a72ee164e5d574b4a24eb5c12c1d35fe",
  "tool": "mythril",
  "start": 1563726650.1068053,
  "end": 1563726955.1823177,
  "duration": 305.0755124092102,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 4459,
        "code": "cashbackbalance);\n\t\t\t\t\tPayToke",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/38/0x444b5b08a72ee164e5d574b4a24eb5c12c1d35fe.sol",
        "function": "Holdplatform_Withdraw(uint256)",
        "lineno": 507,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 4459,
        "code": "cashbackbalance);\n\t\t\t\t\tPayToke",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 4694\n",
        "filename": "/unique_chucks/38/0x444b5b08a72ee164e5d574b4a24eb5c12c1d35fe.sol",
        "function": "Holdplatform_Withdraw(uint256)",
        "lineno": 507,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 4694,
        "code": "ss, amount);\n\t\t\t\t\ts.amountbalance\t",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/38/0x444b5b08a72ee164e5d574b4a24eb5c12c1d35fe.sol",
        "function": "Holdplatform_Withdraw(uint256)",
        "lineno": 508,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 6084,
        "code": "      =\n    ==================",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/38/0x444b5b08a72ee164e5d574b4a24eb5c12c1d35fe.sol",
        "function": "WithdrawAffiliate(address,address)",
        "lineno": 431,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 7397,
        "code": " ID\t\t\t\n\tmapping(address => address[]) \t\tpublic a",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_ldoh_32 + 4: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\ncalldata_ldoh_4: 0x0\ncalldata_ldoh_0: 0x4b698aff00000000000000000000000000000000000000000000000000000000\ncalldatasize_ldoh: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/38/0x444b5b08a72ee164e5d574b4a24eb5c12c1d35fe.sol",
        "function": "_function_0x4b698aff",
        "lineno": 83,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 12909,
        "code": "D\t\t\t\t\t\n\tmapping(address => string) \t\t\tpublic C",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_ldoh_32 + 4: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\ncalldata_ldoh_4: 0x0\ncalldata_ldoh_0: 0x7028b6a300000000000000000000000000000000000000000000000000000000\ncalldatasize_ldoh: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/38/0x444b5b08a72ee164e5d574b4a24eb5c12c1d35fe.sol",
        "function": "_function_0x7028b6a3",
        "lineno": 84,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 19369,
        "code": "eturn",
        "debug": "storage_5 +\nkeccac_storage_81222191986226809103279119994707868322855741819905904417953092666699096963112: 0x0\nstorage_7 +\nkeccac_storage_81222191986226809103279119994707868322855741819905904417953092666699096963112: 0x232300b48a12d7ec4808184e0229707003000064115ab848524acdbc10e16775\nstorage_6 +\nkeccac_storage_81222191986226809103279119994707868322855741819905904417953092666699096963112: 0xe2bb8124024cf91268e4035fd2655165bbefff7add5affa7656847001cfc3741\nstorage_2 +\nkeccac_storage_81222191986226809103279119994707868322855741819905904417953092666699096963112: 0x0\ntimestamp: 0x1\nstorage_0 +\nkeccac_storage_81222191986226809103279119994707868322855741819905904417953092666699096963112: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_4 +\nkeccac_storage_81222191986226809103279119994707868322855741819905904417953092666699096963112: 0xffffffffffffffffffffffffffffffffffffffff00\nstorage_3 +\nkeccac_storage_81222191986226809103279119994707868322855741819905904417953092666699096963112: 0x0\nstorage_81222191986226809103279119994707868322855741819905904417953092666699096963112: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_81222191986226809103279119994707868322855741819905904417953092666699096963116: 0xffffffffffffffffffffffffffffffffffffffff00\ncaller: 0x0\nstorage_81222191986226809103279119994707868322855741819905904417953092666699096963115: 0x0\nstorage_1: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncalldatasize_ldoh: 0x3\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/38/0x444b5b08a72ee164e5d574b4a24eb5c12c1d35fe.sol",
        "function": "fallback",
        "lineno": 564,
        "title": "Integer Overflow ",
        "type": "Warning"
      }
    ],
    "success": true
  }
}