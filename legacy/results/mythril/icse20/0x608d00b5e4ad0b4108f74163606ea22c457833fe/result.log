{"error": null, "issues": [{"address": 948, "code": "=0); //country unowned\n  ", "debug": "The exception is triggered under the following conditions:\n\ncalldata_Risk_4: 0xb2\ncalldata_Risk_0: 0xb1dcc8800000000000000000000000000000000000000000000000000000000\ncalldatasize_Risk: 0x4\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/12/0x608d00b5e4ad0b4108f74163606ea22c457833fe.sol", "function": "buyCountry(uint8)", "lineno": 27, "title": "Exception state", "type": "Informational"}, {"address": 1013, "code": "tryID]==0); //country unowned\n      ", "debug": "The exception is triggered under the following conditions:\n\nstorage_Concat(0, Extract(7, 0, calldata_Risk_4)) + 2: 0xffffffffffffffffffffffffffffffffffffffff00\ncalldata_Risk_4: 0xb1\ncalldata_Risk_0: 0xb1dcc8800000000000000000000000000000000000000000000000000000000\ncalldatasize_Risk: 0x4\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/12/0x608d00b5e4ad0b4108f74163606ea22c457833fe.sol", "function": "buyCountry(uint8)", "lineno": 27, "title": "Exception state", "type": "Informational"}, {"address": 1031, "code": "ey); //0.01 ether\n        \n   ", "debug": "The exception is triggered under the following conditions:\n\ncallvalue: 0xffffffffffffffffffffffffffffffffffffffffffffffffffdc790d903effff\nstorage_Concat(0, Extract(7, 0, calldata_Risk_4)) + 2: 0x0\ncalldata_Risk_4: 0xb1\ncalldata_Risk_0: 0xb1dcc8800000000000000000000000000000000000000000000000000000000\ncalldatasize_Risk: 0x4\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/12/0x608d00b5e4ad0b4108f74163606ea22c457833fe.sol", "function": "buyCountry(uint8)", "lineno": 28, "title": "Exception state", "type": "Informational"}, {"address": 1041, "code": "   playerCountries[msg", "debug": "storage_181: 0xffffffffffffffffffffffffffffffffffffffffffffffffffde3ec788000000\nstorage_Concat(0, Extract(7, 0, calldata_Risk_4)) + 2: 0x0\ncalldata_Risk_4: 0xb1\ncalldata_Risk_0: 0xb1dcc8800000000000000000000000000000000000000000000000000000000\ncalldatasize_Risk: 0x4\ncallvalue: 0x2386f26fc10000\n", "description": "A possible integer overflow exists in the function `buyCountry(uint8)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/12/0x608d00b5e4ad0b4108f74163606ea22c457833fe.sol", "function": "buyCountry(uint8)", "lineno": 31, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1119, "code": ";\n\ncontract Risk\n{", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_Concat(0, Extract(7, 0, calldata_Risk_4)) + 2: 0x0\ncalldata_Risk_4: 0xb1\ncalldata_Risk_0: 0xb1dcc8800000000000000000000000000000000000000000000000000000000\ncalldatasize_Risk: 0x4\ncallvalue: 0x2386f26fc10000\n", "description": "A possible integer overflow exists in the function `buyCountry(uint8)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/12/0x608d00b5e4ad0b4108f74163606ea22c457833fe.sol", "function": "buyCountry(uint8)", "lineno": 1, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1131, "code": "sh(countryID);\n        ownerofCountry[count", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_Concat(0, Extract(7, 0, calldata_Risk_4)) + 2: 0x0\ncalldata_Risk_4: 0xb1\ncalldata_Risk_0: 0xb1dcc8800000000000000000000000000000000000000000000000000000000\ncalldatasize_Risk: 0x4\ncallvalue: 0x2386f26fc10000\n", "description": "A possible integer underflow exists in the function `buyCountry(uint8)`.\nThe subtraction may result in a value < 0.", "filename": "/unique_chucks/12/0x608d00b5e4ad0b4108f74163606ea22c457833fe.sol", "function": "buyCountry(uint8)", "lineno": 31, "title": "Integer Underflow", "type": "Warning"}, {"address": 1168, "code": "sh(countryID);\n        ownerofCountry[count", "debug": "256_EXP_Concat(0,\n       Extract(4,\n               0,\n               storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller)): 0x2140f110c002c4886470ccc00b9b2d6d95001010208126a0883c050408b56210\nstorage_Concat(0, Extract(7, 0, calldata_Risk_4)) + 2: 0x0\ncalldata_Risk_4: 0xb1\ncalldata_Risk_0: 0xb1dcc8800000000000000000000000000000000000000000000000000000000\ncalldatasize_Risk: 0x4\ncallvalue: 0x2386f26fc10000\n", "description": "A possible integer overflow exists in the function `buyCountry(uint8)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/12/0x608d00b5e4ad0b4108f74163606ea22c457833fe.sol", "function": "buyCountry(uint8)", "lineno": 31, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1176, "code": "sh(countryID);\n        ownerofCountry[count", "debug": "256_EXP_Concat(0,\n       Extract(4,\n               0,\n               storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller)): 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_Concat(0, Extract(7, 0, calldata_Risk_4)) + 2: 0x0\ncalldata_Risk_4: 0x9c\ncalldata_Risk_0: 0xb1dcc8800000000000000000000000000000000000000000000000000000000\ncalldatasize_Risk: 0x4\ncallvalue: 0x2386f26fc10000\n", "description": "A possible integer overflow exists in the function `buyCountry(uint8)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/12/0x608d00b5e4ad0b4108f74163606ea22c457833fe.sol", "function": "buyCountry(uint8)", "lineno": 31, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1273, "code": ";\n\ncontract Risk\n{", "debug": "storage_180: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_Concat(0, Extract(7, 0, calldata_Risk_4)) + 2: 0x0\ncalldata_Risk_4: 0xb1\ncalldata_Risk_0: 0xb1dcc8800000000000000000000000000000000000000000000000000000000\ncalldatasize_Risk: 0x4\ncallvalue: 0x2386f26fc10000\n", "description": "A possible integer overflow exists in the function `buyCountry(uint8)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/12/0x608d00b5e4ad0b4108f74163606ea22c457833fe.sol", "function": "buyCountry(uint8)", "lineno": 1, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1581, "code": " }\n    function getTotalB", "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_Risk_0: 0x2139c2aa00000000000000000000000000000000000000000000000000000000\ncalldatasize_Risk: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/12/0x608d00b5e4ad0b4108f74163606ea22c457833fe.sol", "function": "_function_0x2139c2aa", "lineno": 174, "title": "Exception state", "type": "Informational"}, {"address": 1870, "code": "!=0); //player owns county\n        assert(own", "debug": "The exception is triggered under the following conditions:\n\ncalldata_Risk_0: 0x7bba061300000000000000000000000000000000000000000000000000000000\ncalldatasize_Risk: 0x4\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/12/0x608d00b5e4ad0b4108f74163606ea22c457833fe.sol", "function": "attackCountry(uint8)", "lineno": 42, "title": "Exception state", "type": "Informational"}, {"address": 1912, "code": "country owned\n        ass", "debug": "The exception is triggered under the following conditions:\n\ncalldata_Risk_4: 0xb2\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_Risk_0: 0x7bba061300000000000000000000000000000000000000000000000000000000\ncalldatasize_Risk: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/12/0x608d00b5e4ad0b4108f74163606ea22c457833fe.sol", "function": "attackCountry(uint8)", "lineno": 43, "title": "Exception state", "type": "Informational"}, {"address": 1978, "code": "0)); //country owned\n        assert(msg.sende", "debug": "The exception is triggered under the following conditions:\n\nstorage_Concat(0, Extract(7, 0, calldata_Risk_4)) + 2: 0x0\ncalldata_Risk_4: 0xb1\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_Risk_0: 0x7bba061300000000000000000000000000000000000000000000000000000000\ncalldatasize_Risk: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/12/0x608d00b5e4ad0b4108f74163606ea22c457833fe.sol", "function": "attackCountry(uint8)", "lineno": 43, "title": "Exception state", "type": "Informational"}, {"address": 2085, "code": "]); //not attacking its own country\n        \n", "debug": "The exception is triggered under the following conditions:\n\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\nstorage_Concat(0, Extract(7, 0, calldata_Risk_4)) + 2: 0xffffffffffffffffffffffffffffffffffffffff00\ncalldata_Risk_4: 0xb1\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_Risk_0: 0x7bba061300000000000000000000000000000000000000000000000000000000\ncalldatasize_Risk: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/12/0x608d00b5e4ad0b4108f74163606ea22c457833fe.sol", "function": "attackCountry(uint8)", "lineno": 44, "title": "Exception state", "type": "Informational"}, {"address": 5534, "code": "inner;\n            for (i=0;i<17", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 5652\n", "filename": "/unique_chucks/12/0x608d00b5e4ad0b4108f74163606ea22c457833fe.sol", "function": "isGameEnd()", "lineno": 155, "title": "Multiple Calls", "type": "Information"}, {"address": 5534, "code": "inner;\n            for (i=0;i<17", "debug": "", "description": "A possible transaction order independence vulnerability exists in function isGameEnd(). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/12/0x608d00b5e4ad0b4108f74163606ea22c457833fe.sol", "function": "isGameEnd()", "lineno": 155, "title": "Transaction order dependence", "type": "Warning"}, {"address": 5652, "code": "     playerCountries[ownerofC", "debug": "", "description": "A possible transaction order independence vulnerability exists in function isGameEnd(). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/12/0x608d00b5e4ad0b4108f74163606ea22c457833fe.sol", "function": "isGameEnd()", "lineno": 158, "title": "Transaction order dependence", "type": "Warning"}, {"address": 6205, "code": "(uint256)\n    {\n       ", "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_Risk_4: 0x0\ncalldata_Risk_32 + 4: 0x0\ncalldata_Risk_0: 0xb340a97200000000000000000000000000000000000000000000000000000000\ncalldatasize_Risk: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/12/0x608d00b5e4ad0b4108f74163606ea22c457833fe.sol", "function": "getaddr(address,uint8)", "lineno": 187, "title": "Exception state", "type": "Informational"}], "success": true}