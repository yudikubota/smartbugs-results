{
  "contract": "0x8cdf119c16f9dd376511faa643c03f3d3209afd6",
  "tool": "mythril",
  "start": 1563692169.088326,
  "end": 1563692186.5209742,
  "duration": 17.432648181915283,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 2901,
        "code": "equire(allowed[_fro",
        "debug": "calldata_StandardToken_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_1: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_StandardToken_0: 0x42966c6800000000000000000000000000000000000000000000000000000000\ncalldatasize_StandardToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer underflow exists in the function `burn(uint256)`.\nThe subtraction may result in a value < 0.",
        "filename": "/unique_chucks/36/0x8cdf119c16f9dd376511faa643c03f3d3209afd6.sol",
        "function": "burn(uint256)",
        "lineno": 248,
        "title": "Integer Underflow",
        "type": "Warning"
      },
      {
        "address": 3603,
        "code": "Token is StandardTo",
        "debug": "calldata_StandardToken_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_1: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_StandardToken_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_StandardToken_0: 0x79cc679000000000000000000000000000000000000000000000000000000000\ncalldatasize_StandardToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer underflow exists in the function `burnFrom(address,uint256)`.\nThe subtraction may result in a value < 0.",
        "filename": "/unique_chucks/36/0x8cdf119c16f9dd376511faa643c03f3d3209afd6.sol",
        "function": "burnFrom(address,uint256)",
        "lineno": 260,
        "title": "Integer Underflow",
        "type": "Warning"
      },
      {
        "address": 3818,
        "code": "\n  /**\n   * check if given address",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xd1fffffffffc0fffffffbfffd006aaaaaaaffffffffffffffffffffffffffffe\ncalldata_StandardToken_32 + 4: 0x7f7ffffffffe07ffffffdffff004000000000000000000000000000000000000\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_StandardToken_4: 0x7f7ffffffffe07ffffffdffff004000000000000000000000000000000000000\ncalldata_StandardToken_0: 0x79cc679000000000000000000000000000000000000000000000000000000000\ncalldatasize_StandardToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer underflow exists in the function `burnFrom(address,uint256)`.\nThe subtraction may result in a value < 0.",
        "filename": "/unique_chucks/36/0x8cdf119c16f9dd376511faa643c03f3d3209afd6.sol",
        "function": "burnFrom(address,uint256)",
        "lineno": 263,
        "title": "Integer Underflow",
        "type": "Warning"
      },
      {
        "address": 5398,
        "code": "urn a - b;\n  }",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncalldata_StandardToken_32 + 4: 0x1\ncalldata_StandardToken_4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_StandardToken_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncalldatasize_StandardToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/36/0x8cdf119c16f9dd376511faa643c03f3d3209afd6.sol",
        "function": "transfer(address,uint256)",
        "lineno": 25,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 5416,
        "code": "   re",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_StandardToken_32_+_4: 0xc050fffff320c00020003d81af848540000000000000040000110001bd062022\ncalldata_StandardToken_32 + 36: 0xfe51000008ce80008001c1d33616877ffffffffffffff7ffffe10000398d50ac\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_StandardToken_4: 0xfe51000008ce80008001c1d33616877ffffffffffffff7ffffe10000398d50ac\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xfe51000008ce80008001c1d33616877ffffffffffffff7ffffe10000398d50ac\ncalldata_StandardToken_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_StandardToken_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_StandardToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `transferFrom(address,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/36/0x8cdf119c16f9dd376511faa643c03f3d3209afd6.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 31,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 5429,
        "code": "\n  }\n}\n\n/**\n *",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_StandardToken_4: 0xbd5dfeabad0efffffffffeffffffffffd599ffefbfe6f24271e80e64322c0700\ncalldata_StandardToken_32 + 4: 0x6218000d800000000000000000000000039800002005500633e06f771baff7fc\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x6218000d800000000000000000000000039800002005500633e06f771baff7fc\ncalldata_StandardToken_4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_StandardToken_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncalldatasize_StandardToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/36/0x8cdf119c16f9dd376511faa643c03f3d3209afd6.sol",
        "function": "transfer(address,uint256)",
        "lineno": 31,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}