{
  "contract": "0x61ab321758fe7a302026b8831d1532c7c9cebe21",
  "tool": "mythril",
  "start": 1563640128.4484682,
  "end": 1563640271.7894843,
  "duration": 143.34101605415344,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 776,
        "code": "k * minBlockPurchase);\n    return weiValue / weiPe",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x1\ncallvalue: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_3: 0x1\nstorage_2: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nblock_number: 0x2\ncalldata_Registry_0: 0x2e1a7d0d00000000000000000000000000000000000000000000000000000000\ncalldatasize_Registry: 0x4\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/27/0x61ab321758fe7a302026b8831d1532c7c9cebe21.sol",
        "function": "fallback",
        "lineno": 30,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 789,
        "code": " function setWeiPerBlo",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x1\nblock_number: 0x2\ncalldata_Registry_0: 0x2e1a7d0d00000000000000000000000000000000000000000000000000000000\ncalldatasize_Registry: 0x4\nstorage_2: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/27/0x61ab321758fe7a302026b8831d1532c7c9cebe21.sol",
        "function": "fallback",
        "lineno": 34,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}