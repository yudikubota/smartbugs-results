{
  "contract": "0x6a0a97e47d15aad1d132a1ac79a480e3f2079063",
  "tool": "mythril",
  "start": 1563625810.6912613,
  "end": 1563626260.860765,
  "duration": 450.16950368881226,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 567,
        "code": "       return;\n      }\n\n      ERC20 token = ERC20(_token);\n      uint",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/24/0x6a0a97e47d15aad1d132a1ac79a480e3f2079063.sol",
        "function": "fallback",
        "lineno": 596,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 567,
        "code": "       return;\n      }\n\n      ERC20 token = ERC20(_token);\n      uint",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function fallback. The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/24/0x6a0a97e47d15aad1d132a1ac79a480e3f2079063.sol",
        "function": "fallback",
        "lineno": 596,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 1502,
        "code": "neDecimalUnits,\n            _cloneTokenSymbol,\n            _transfersEnabled\n            );\n\n        cloneToken.changeController(msg.sender);\n\n        // An event to make the token easy to find on the blockchain\n        NewCloneToken(address(cloneToken), _snapshotBlock);\n        return address(cloneToken);\n    }\n\n////////////////\n// Generate and destroy tokens\n////////////////\n\n    /// @notice Generates `_amount` tokens that are assigned to `_owner`\n    /// @param _owner The address that will be assigned the new tokens\n    /// @param _amount The quantity of tokens generated\n    /// @return True if the tokens are generated correctly\n    function generateTokens(address _owner, uint _amount\n    ) onlyController returns (bool) {\n        uint curTotalSupply = getVa",
        "debug": "calldata_WCT_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_WCT_0: 0x6638c08700000000000000000000000000000000000000000000000000000000\ncalldatasize_WCT: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `createCloneToken(string,uint8,string,uint256,bool)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/24/0x6a0a97e47d15aad1d132a1ac79a480e3f2079063.sol",
        "function": "createCloneToken(string,uint8,string,uint256,bool)",
        "lineno": 448,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 3793,
        "code": "r The address of the account that owns the token\n    /// @param _spe",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/24/0x6a0a97e47d15aad1d132a1ac79a480e3f2079063.sol",
        "function": "approve(address,uint256)",
        "lineno": 330,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 3793,
        "code": "r The address of the account that owns the token\n    /// @param _spe",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function approve(address,uint256). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/24/0x6a0a97e47d15aad1d132a1ac79a480e3f2079063.sol",
        "function": "approve(address,uint256)",
        "lineno": 330,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 3989,
        "code": " the tokens\n    /// @return Amount of r",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/24/0x6a0a97e47d15aad1d132a1ac79a480e3f2079063.sol",
        "function": "approve(address,uint256)",
        "lineno": 331,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 5215,
        "code": "ecific `_blockNumber`.\n    /// @param _blockNumber The block number whe",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/24/0x6a0a97e47d15aad1d132a1ac79a480e3f2079063.sol",
        "function": "balanceOf(address)",
        "lineno": 398,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 5986,
        "code": "//////////\n// Generate and destroy tokens\n////////////////\n\n    /// @notice Generates `_amount` tokens that are assigned to `_owner`\n    /// @param _owner The address that will be assigned the new tokens\n    /// @param ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/24/0x6a0a97e47d15aad1d132a1ac79a480e3f2079063.sol",
        "function": "createCloneToken(string,uint8,string,uint256,bool)",
        "lineno": 460,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 5986,
        "code": "//////////\n// Generate and destroy tokens\n////////////////\n\n    /// @notice Generates `_amount` tokens that are assigned to `_owner`\n    /// @param _owner The address that will be assigned the new tokens\n    /// @param ",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 6202\n",
        "filename": "/unique_chucks/24/0x6a0a97e47d15aad1d132a1ac79a480e3f2079063.sol",
        "function": "createCloneToken(string,uint8,string,uint256,bool)",
        "lineno": 460,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 6202,
        "code": "uantity of tokens generated\n    /// @re",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/24/0x6a0a97e47d15aad1d132a1ac79a480e3f2079063.sol",
        "function": "createCloneToken(string,uint8,string,uint256,bool)",
        "lineno": 466,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 7183,
        "code": "the initial distribution being\n    ///  this token at `_snapshotB",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/24/0x6a0a97e47d15aad1d132a1ac79a480e3f2079063.sol",
        "function": "totalSupply()",
        "lineno": 426,
        "title": "Message call to external contract",
        "type": "Informational"
      }
    ],
    "success": true
  }
}