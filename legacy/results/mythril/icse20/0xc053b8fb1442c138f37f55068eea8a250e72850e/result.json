{
  "contract": "0xc053b8fb1442c138f37f55068eea8a250e72850e",
  "tool": "mythril",
  "start": 1563746057.2716951,
  "end": 1563746284.3712633,
  "duration": 227.09956812858582,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 1101,
        "code": "nder] = tokens;\n        emit Approval(msg.sender, spender, tokens);\n        ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, this, data);\n        return true;\n    }\n    // ------------------------------------------------------------------------\n    // Don't accept ETH\n    // ----------------------",
        "debug": "calldata_MetamToken_32 + 36: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_MetamToken_0: 0xcae9ca5100000000000000000000000000000000000000000000000000000000\ncalldatasize_MetamToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `approveAndCall(address,uint256,bytes)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/41/0xc053b8fb1442c138f37f55068eea8a250e72850e.sol",
        "function": "approveAndCall(address,uint256,bytes)",
        "lineno": 131,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1858,
        "code": "lances[to] = balances[t",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_MetamToken_4: 0x0\ncalldata_MetamToken_32 + 36: 0x1\ncalldata_MetamToken_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_MetamToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer underflow exists in the function `transferFrom(address,address,uint256)`.\nThe subtraction may result in a value < 0.",
        "filename": "/unique_chucks/41/0xc053b8fb1442c138f37f55068eea8a250e72850e.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 110,
        "title": "Integer Underflow",
        "type": "Warning"
      },
      {
        "address": 2052,
        "code": ", to, tokens);\n        return true",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncalldata_MetamToken_32 + 36: 0x1\ncalldata_MetamToken_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_MetamToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer underflow exists in the function `transferFrom(address,address,uint256)`.\nThe subtraction may result in a value < 0.",
        "filename": "/unique_chucks/41/0xc053b8fb1442c138f37f55068eea8a250e72850e.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 111,
        "title": "Integer Underflow",
        "type": "Warning"
      },
      {
        "address": 2246,
        "code": "---------------------",
        "debug": "calldata_MetamToken_32 + 36: 0x57f25cd000000000000000000000000000000000000000000000000000000000\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_MetamToken_32_+_4: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncalldata_MetamToken_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_MetamToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `transferFrom(address,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/41/0xc053b8fb1442c138f37f55068eea8a250e72850e.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 116,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2749,
        "code": ";\n        emit Transfer(msg.s",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncalldata_MetamToken_32 + 4: 0x1\ncalldata_MetamToken_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncalldatasize_MetamToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer underflow exists in the function `transfer(address,uint256)`.\nThe subtraction may result in a value < 0.",
        "filename": "/unique_chucks/41/0xc053b8fb1442c138f37f55068eea8a250e72850e.sol",
        "function": "transfer(address,uint256)",
        "lineno": 77,
        "title": "Integer Underflow",
        "type": "Warning"
      },
      {
        "address": 2882,
        "code": "  return true;\n    }\n",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_MetamToken_4: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncalldata_MetamToken_32 + 4: 0x57f25cd000000000000000000000000000000000000000000000000000000000\ncalldata_MetamToken_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncalldatasize_MetamToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `transfer(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/41/0xc053b8fb1442c138f37f55068eea8a250e72850e.sol",
        "function": "transfer(address,uint256)",
        "lineno": 79,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 3619,
        "code": "-------------------------------------------------------\n    // Don't accept ETH",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/41/0xc053b8fb1442c138f37f55068eea8a250e72850e.sol",
        "function": "approveAndCall(address,uint256,bytes)",
        "lineno": 136,
        "title": "Message call to external contract",
        "type": "Warning"
      }
    ],
    "success": true
  }
}