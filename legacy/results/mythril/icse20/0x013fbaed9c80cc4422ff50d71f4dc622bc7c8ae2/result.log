{"error": null, "issues": [{"address": 176, "code": "er);\n        re", "debug": "The exception is triggered under the following conditions:\n\nstorage_3: 0x0\ncalldata_SPARCToken_0: 0x902b25500000000000000000000000000000000000000000000000000000000\ncalldatasize_SPARCToken: 0x4\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/10/0x013fbaed9c80cc4422ff50d71f4dc622bc7c8ae2.sol", "function": "fallback", "lineno": 54, "title": "Exception state", "type": "Informational"}, {"address": 191, "code": "alue != 0);\n        require(et", "debug": "The exception is triggered under the following conditions:\n\nstorage_1: 0x0\nstorage_0: 0x0\nstorage_3: 0xff00\ncalldata_SPARCToken_0: 0x902b35d00000000000000000000000000000000000000000000000000000000\ncalldatasize_SPARCToken: 0x4\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/10/0x013fbaed9c80cc4422ff50d71f4dc622bc7c8ae2.sol", "function": "fallback", "lineno": 55, "title": "Exception state", "type": "Informational"}, {"address": 238, "code": "n(SPARCAddress).create(ms", "debug": "callvalue: 0x4ebc1f56dd5b5e0000000000000000000000000000000000400001febdc03401\nstorage_0: 0xf111101874cc0c7dfffffffffffffffffffffffffffffffefffff181ff539efb\nstorage_1: 0xf00c1e7015bc1781ffffffffffffffffffffffffffffffff7ffff6203dc245fa\nstorage_3: 0xff00\ncalldata_SPARCToken_0: 0x25d00000000000000000000000000000000000000000000000000000000\ncalldatasize_SPARCToken: 0x4\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/10/0x013fbaed9c80cc4422ff50d71f4dc622bc7c8ae2.sol", "function": "fallback", "lineno": 60, "title": "Integer Overflow ", "type": "Warning"}, {"address": 449, "code": "00)){\n            throw;\n        }\n    }\n}\n\n/// SPARCToken int", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/10/0x013fbaed9c80cc4422ff50d71f4dc622bc7c8ae2.sol", "function": "fallback", "lineno": 60, "title": "Message call to external contract", "type": "Informational"}, {"address": 449, "code": "00)){\n            throw;\n        }\n    }\n}\n\n/// SPARCToken int", "debug": "", "description": "A possible transaction order independence vulnerability exists in function fallback. The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/10/0x013fbaed9c80cc4422ff50d71f4dc622bc7c8ae2.sol", "function": "fallback", "lineno": 60, "title": "Transaction order dependence", "type": "Warning"}, {"address": 1486, "code": "e)){\n            throw;\n      ", "debug": "", "description": "A possible transaction order independence vulnerability exists in function withdrawEther(uint256). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/10/0x013fbaed9c80cc4422ff50d71f4dc622bc7c8ae2.sol", "function": "withdrawEther(uint256)", "lineno": 29, "title": "Transaction order dependence", "type": "Warning"}], "success": true}