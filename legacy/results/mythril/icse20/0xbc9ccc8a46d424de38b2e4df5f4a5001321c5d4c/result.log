{"error": null, "issues": [{"address": 879, "code": "----------------------------\n        function checkHGame(uint _hGame) constant returns(uint _arbTok, uint _lowWords)\n        {\n                _arbTok = ArbTokFromHGame(_hGame);\n                _lowWords = _hGame & 0xffffffffffff;\n\n        }\n\n        //------------------------------------------------------\n        // get operation gas amounts\n        //------------------------------------------------------\n        functio", "debug": "The exception is triggered under the following conditions:\n\nstorage_15 + keccac_calldata_iE4RowEscrow_4: 0x8000\ncalldata_iE4RowEscrow_0: 0x47e1d55000000000000000000000000000000000000000000000000000000000\ncalldatasize_iE4RowEscrow: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/3/0xbc9ccc8a46d424de38b2e4df5f4a5001321c5d4c.sol", "function": "getGameInfo(uint256)", "lineno": 588, "title": "Exception state", "type": "Informational"}, {"address": 1267, "code": "mapping (address => arbiter)  arbiters;\n        mapping (uint =>", "debug": "The exception is triggered under the following conditions:\n\nstorage_18: 0x8000\ncalldata_iE4RowEscrow_0: 0x5f437e4800000000000000000000000000000000000000000000000000000000\ncalldatasize_iE4RowEscrow: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/3/0xbc9ccc8a46d424de38b2e4df5f4a5001321c5d4c.sol", "function": "_function_0x5f437e48", "lineno": 81, "title": "Exception state", "type": "Informational"}, {"address": 3331, "code": " _arbToken);\n", "debug": "storage_2: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_iE4RowEscrow_32 + 4: 0x400\ncalldata_iE4RowEscrow_4: 0x0\nstorage_8 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\nstorage_8 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\nUDiv(storage_keccac_calldata_iE4RowEscrow_32_+_4_&_65535,\n_____256): 0x0\nstorage_keccac_calldata_iE4RowEscrow_32_+_4_&_65535: 0xffffffffffffffffffffffffffffffffffffffff00\ncalldata_iE4RowEscrow_0: 0x3015ea300000000000000000000000000000000000000000000000000000000\ncalldatasize_iE4RowEscrow: 0x4\nstorage_10: 0x0\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `registerArbiter(uint256,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/3/0xbc9ccc8a46d424de38b2e4df5f4a5001321c5d4c.sol", "function": "registerArbiter(uint256,uint256)", "lineno": 274, "title": "Integer Overflow ", "type": "Warning"}, {"address": 3488, "code": "----------------------------------\n        // s", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/3/0xbc9ccc8a46d424de38b2e4df5f4a5001321c5d4c.sol", "function": "registerArbiter(uint256,uint256)", "lineno": 278, "title": "Message call to external contract", "type": "Informational"}, {"address": 3786, "code": ");\n                        return;\n             ", "debug": "The exception is triggered under the following conditions:\n\nstorage_18: 0x8000\nstorage_0: 0x0\ncaller: 0x0\ncalldata_iE4RowEscrow_0: 0x13bd53e600000000000000000000000000000000000000000000000000000000\ncalldatasize_iE4RowEscrow: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/3/0xbc9ccc8a46d424de38b2e4df5f4a5001321c5d4c.sol", "function": "_function_0x13bd53e6", "lineno": 106, "title": "Exception state", "type": "Informational"}, {"address": 3931, "code": " futher settings done ", "debug": "The exception is triggered under the following conditions:\n\nstorage_18: 0x0\ncalldata_iE4RowEscrow_4: 0x80\nstorage_0: 0x0\ncaller: 0x0\ncalldata_iE4RowEscrow_0: 0x13bd53e600000000000000000000000000000000000000000000000000000000\ncalldatasize_iE4RowEscrow: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/3/0xbc9ccc8a46d424de38b2e4df5f4a5001321c5d4c.sol", "function": "_function_0x13bd53e6", "lineno": 113, "title": "Exception state", "type": "Informational"}, {"address": 4550, "code": " else\n                                re", "debug": "The exception is triggered under the following conditions:\n\nstorage_18: 0x8000\nstorage_keccac_UDiv(calldata_iE4RowEscrow_4,_281474976710656)_&_65535: 0x0\ncalldata_iE4RowEscrow_0: 0x4f28af6a00000000000000000000000000000000000000000000000000000000\ncalldatasize_iE4RowEscrow: 0x4\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/3/0xbc9ccc8a46d424de38b2e4df5f4a5001321c5d4c.sol", "function": "handleBet(uint256)", "lineno": 465, "title": "Exception state", "type": "Informational"}, {"address": 6867, "code": "e == SettingStateValue.lockedRelease)\n          ", "debug": "The exception is triggered under the following conditions:\n\nstorage_18: 0x8000\nstorage_0: 0x0\ncaller: 0x0\ncalldata_iE4RowEscrow_0: 0x7612115d00000000000000000000000000000000000000000000000000000000\ncalldatasize_iE4RowEscrow: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/3/0xbc9ccc8a46d424de38b2e4df5f4a5001321c5d4c.sol", "function": "setTokenPartner(address)", "lineno": 689, "title": "Exception state", "type": "Informational"}], "success": true}