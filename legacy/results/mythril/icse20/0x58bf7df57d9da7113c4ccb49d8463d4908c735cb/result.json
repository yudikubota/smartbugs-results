{
  "contract": "0x58bf7df57d9da7113c4ccb49d8463d4908c735cb",
  "tool": "mythril",
  "start": 1563501192.071237,
  "end": 1563501223.9103563,
  "duration": 31.83911919593811,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 2283,
        "code": ";\n    \n        balances[from] -=",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_SPARCToken_4: 0x0\ncalldata_SPARCToken_32 + 36: 0x1\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xff00\ncalldata_SPARCToken_0: 0xa5a00c100000000000000000000000000000000000000000000000000000000\ncalldatasize_SPARCToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/5/0x58bf7df57d9da7113c4ccb49d8463d4908c735cb.sol",
        "function": "recovery(address,address,uint256)",
        "lineno": 62,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2295,
        "code": "      balances[to]",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xff00\ncalldata_SPARCToken_0: 0xa5a00c100000000000000000000000000000000000000000000000000000000\ncalldatasize_SPARCToken: 0x4\ncalldata_SPARCToken_32 + 36: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/5/0x58bf7df57d9da7113c4ccb49d8463d4908c735cb.sol",
        "function": "recovery(address,address,uint256)",
        "lineno": 65,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2443,
        "code": "      Transfer(this, t",
        "debug": "calldata_SPARCToken_32 + 36: 0xb135d1e4a0020a903239033aa9b45a69384c906b52a71e0575829626809581fd\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_SPARCToken_32_+_4: 0xa7e6e147bc0ca40011bf9bbaadf7593cb8cc90b17cb7d73775f0d8eb1435e9c1\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_SPARCToken_4: 0xb135d1e4a0020a903239033aa9b45a69384c906b52a71e0575829626809581fd\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xff00\ncalldata_SPARCToken_0: 0xa5a00c100000000000000000000000000000000000000000000000000000000\ncalldatasize_SPARCToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `recovery(address,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/5/0x58bf7df57d9da7113c4ccb49d8463d4908c735cb.sol",
        "function": "recovery(address,address,uint256)",
        "lineno": 67,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2887,
        "code": "pply += amount;\n     ",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_SPARCToken_4: 0xb2c81e3be60b809eebca250ae5f3958de8241f3c0942692d3cecd1fd00743211\ncalldata_SPARCToken_32 + 4: 0x93931c13e507cbbcbf74d9eee4fb920eeaef84aa5110428da2eddb017d5ebcdd\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xff00\ncalldata_SPARCToken_0: 0xecaea7300000000000000000000000000000000000000000000000000000000\ncalldatasize_SPARCToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `create(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/5/0x58bf7df57d9da7113c4ccb49d8463d4908c735cb.sol",
        "function": "create(address,uint256)",
        "lineno": 104,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2911,
        "code": "     return true;\n   ",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_SPARCToken_4: 0x9d500a7ecf733f61b1fffdcc58d17f07fe7cd2db127c4a64556f47b07d83e3d6\nstorage_0: 0xd83d3ba5426a491677c0e2162248c76213f9e5cc218099feea983766c741df38\ncalldata_SPARCToken_32 + 4: 0x5f3ff3b26931b6e66e01c245b76e81709a03594bda1b4c4b1561b764e65c4138\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xff00\ncalldata_SPARCToken_0: 0xecaea7300000000000000000000000000000000000000000000000000000000\ncalldatasize_SPARCToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `create(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/5/0x58bf7df57d9da7113c4ccb49d8463d4908c735cb.sol",
        "function": "create(address,uint256)",
        "lineno": 108,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 3671,
        "code": "  \n        balances[f",
        "debug": "calldata_SPARCToken_32 + 36: 0xe3cbd9e311caade5000000a62e80461a67896e096a9aec8000fd5e1d99e13955\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_SPARCToken_32_+_4: 0x898611e9acc88da399be7aaa4e46c7135a8a4bc4225610b5018d521b5c18c528\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_SPARCToken_4: 0xe3cbd9e311caade5000000a62e80461a67896e096a9aec8000fd5e1d99e13955\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xe3cbd9e311caade5000000a62e80461a67896e096a9aec8000fd5e1d99e13955\nstorage_1: 0x0\ncalldata_SPARCToken_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_SPARCToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `transferFrom(address,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/5/0x58bf7df57d9da7113c4ccb49d8463d4908c735cb.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 85,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 4947,
        "code": "fer(address to, uint2",
        "debug": "calldata_SPARCToken_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_0: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_SPARCToken_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xff00\ncalldata_SPARCToken_0: 0xa24835d100000000000000000000000000000000000000000000000000000000\ncalldatasize_SPARCToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer underflow exists in the function `destroy(address,uint256)`.\nThe subtraction may result in a value < 0.",
        "filename": "/unique_chucks/5/0x58bf7df57d9da7113c4ccb49d8463d4908c735cb.sol",
        "function": "destroy(address,uint256)",
        "lineno": 124,
        "title": "Integer Underflow",
        "type": "Warning"
      }
    ],
    "success": true
  }
}