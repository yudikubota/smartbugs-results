{"success": false, "error": "Solc experienced a fatal error (code 1).\n\n/unique_chucks/28/0xc1caec30b787711108957660a3f9306a5d967f66.sol:14:3: Error: Functions are not allowed to have the same name as the contract. If you intend this to be a constructor, use \"constructor(...) { ... }\" to define it.\n  function BranchWallet (address _owner, bool _isRightBranch) {\r\n  ^ (Relevant source part starts here and spans across multiple lines).\n/unique_chucks/28/0xc1caec30b787711108957660a3f9306a5d967f66.sol:14:3: Error: No visibility specified. Did you intend to add \"public\"?\n  function BranchWallet (address _owner, bool _isRightBranch) {\r\n  ^ (Relevant source part starts here and spans across multiple lines).\n/unique_chucks/28/0xc1caec30b787711108957660a3f9306a5d967f66.sol:20:3: Error: No visibility specified. Did you intend to add \"external\"?\n  function () {\r\n  ^ (Relevant source part starts here and spans across multiple lines).\n/unique_chucks/28/0xc1caec30b787711108957660a3f9306a5d967f66.sol:21:25: Error: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n    if (!isRightBranch) throw;\r\n                        ^---^\n/unique_chucks/28/0xc1caec30b787711108957660a3f9306a5d967f66.sol:29:3: Error: No visibility specified. Did you intend to add \"public\"?\n  function send (address _to, uint _value) {\r\n  ^ (Relevant source part starts here and spans across multiple lines).\n/unique_chucks/28/0xc1caec30b787711108957660a3f9306a5d967f66.sol:30:25: Error: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n    if (!isRightBranch) throw;\r\n                        ^---^\n/unique_chucks/28/0xc1caec30b787711108957660a3f9306a5d967f66.sol:31:30: Error: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n    if (msg.sender != owner) throw;\r\n                             ^---^\n/unique_chucks/28/0xc1caec30b787711108957660a3f9306a5d967f66.sol:32:29: Error: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n    if (!_to.send (_value)) throw;\r\n                            ^---^\n/unique_chucks/28/0xc1caec30b787711108957660a3f9306a5d967f66.sol:40:3: Error: No visibility specified. Did you intend to add \"public\"?\n  function execute (address _to, uint _value, bytes _data) {\r\n  ^ (Relevant source part starts here and spans across multiple lines).\n/unique_chucks/28/0xc1caec30b787711108957660a3f9306a5d967f66.sol:41:25: Error: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n    if (!isRightBranch) throw;\r\n                        ^---^\n/unique_chucks/28/0xc1caec30b787711108957660a3f9306a5d967f66.sol:42:30: Error: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n    if (msg.sender != owner) throw;\r\n                             ^---^\n/unique_chucks/28/0xc1caec30b787711108957660a3f9306a5d967f66.sol:43:42: Error: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n    if (!_to.call.value (_value)(_data)) throw;\r\n                                         ^---^\n/unique_chucks/28/0xc1caec30b787711108957660a3f9306a5d967f66.sol:2:1: Warning: Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.5.8;\"\ncontract BranchWallet {\r\n^ (Relevant source part starts here and spans across multiple lines).\n/unique_chucks/28/0xc1caec30b787711108957660a3f9306a5d967f66.sol:14:3: Warning: This declaration shadows an existing declaration.\n  function BranchWallet (address _owner, bool _isRightBranch) {\r\n  ^ (Relevant source part starts here and spans across multiple lines).\n/unique_chucks/28/0xc1caec30b787711108957660a3f9306a5d967f66.sol:2:1: The shadowed declaration is here:\ncontract BranchWallet {\r\n^ (Relevant source part starts here and spans across multiple lines).\n/unique_chucks/28/0xc1caec30b787711108957660a3f9306a5d967f66.sol:40:47: Error: Data location must be \"memory\" for parameter in function, but none was given.\n  function execute (address _to, uint _value, bytes _data) {\r\n                                              ^---------^\n", "issues": []}