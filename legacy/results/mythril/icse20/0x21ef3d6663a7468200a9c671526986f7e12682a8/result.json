{
  "contract": "0x21ef3d6663a7468200a9c671526986f7e12682a8",
  "tool": "mythril",
  "start": 1563626930.8025928,
  "end": 1563627630.8464134,
  "duration": 700.0438206195831,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 628,
        "code": "          require(msg",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_12 +\n62514009886607029107290561805838585334079798074568712924583230797734656856475 +\n14*calldata_realestate_4: 0x20\ncalldata_realestate_4: 0x0\nstorage_10 +\n62514009886607029107290561805838585334079798074568712924583230797734656856475 +\n14*calldata_realestate_4: 0xfc00\nstorage_4: 0x1\ncalldata_realestate_0: 0x3988f8400000000000000000000000000000000000000000000000000000000\ncalldatasize_realestate: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/26/0x21ef3d6663a7468200a9c671526986f7e12682a8.sol",
        "function": "_function_0x03988f84",
        "lineno": 147,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 1046,
        "code": "l].objectType,\n            deal\n            );\n    }\n    \n     function getDealDataByNumber(uint _dealNumber)  constant public returns \n     (string comment, \n    uint fee, \n    uint atClosed) {\n       \n         uint deal = dealNumbers[_dealNumber];\n        \n        return (\n            deals[deal].comment,\n            deals[deal].fee,\n            deals[deal].atClosed\n            );\n    }\n\n    mapping (uint=>uint) public dealNumbers;\n    \n   function addDeal(address buyer, address seller, address signer, uint sum, uint fee, uint object",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_realestate_4: 0x0\nstorage_10 +\n62514009886607029107290561805838585334079798074568712924583230797734656856475 +\n14*calldata_realestate_4: 0xfc00\nstorage_4: 0x1\nstorage_2: 0x0\ncaller: 0x0\ncalldata_realestate_0: 0xaba73d700000000000000000000000000000000000000000000000000000000\ncalldatasize_realestate: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/26/0x21ef3d6663a7468200a9c671526986f7e12682a8.sol",
        "function": "getDealById(uint256)",
        "lineno": 243,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2957,
        "code": "          require(msg",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_realestate_4: 0x0\nstorage_4: 0x0\ncalldata_realestate_0: 0x3988f8400000000000000000000000000000000000000000000000000000000\ncalldatasize_realestate: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/26/0x21ef3d6663a7468200a9c671526986f7e12682a8.sol",
        "function": "_function_0x03988f84",
        "lineno": 147,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3431,
        "code": "& deals[dea",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_calldata_realestate_4: 0x0\nstorage_4: 0x0\ncalldata_realestate_0: 0x6a5f08700000000000000000000000000000000000000000000000000000000\ncalldatasize_realestate: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/26/0x21ef3d6663a7468200a9c671526986f7e12682a8.sol",
        "function": "signSeller(uint256)",
        "lineno": 366,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3852,
        "code": "        dea",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_realestate_4: 0x0\nstorage_4: 0x0\nstorage_2: 0x0\ncaller: 0x0\ncalldata_realestate_0: 0xaba73d700000000000000000000000000000000000000000000000000000000\ncalldatasize_realestate: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/26/0x21ef3d6663a7468200a9c671526986f7e12682a8.sol",
        "function": "getDealById(uint256)",
        "lineno": 256,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 4285,
        "code": " {\n        ",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_calldata_realestate_4: 0x0\nstorage_4: 0x0\ncalldata_realestate_0: 0x31ea1a3900000000000000000000000000000000000000000000000000000000\ncalldatasize_realestate: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/26/0x21ef3d6663a7468200a9c671526986f7e12682a8.sol",
        "function": "cancelDeal(uint256)",
        "lineno": 171,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 4527,
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_calldata_realestate_4: 0x0\nstorage_10 +\n62514009886607029107290561805838585334079798074568712924583230797734656856475 +\n14*storage_keccac_calldata_realestate_4: 0xfc00\nstorage_9 +\n62514009886607029107290561805838585334079798074568712924583230797734656856475 +\n14*storage_keccac_calldata_realestate_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_2 +\n62514009886607029107290561805838585334079798074568712924583230797734656856475 +\n14*storage_keccac_calldata_realestate_4: 0x0\ncaller: 0x0\nstorage_4: 0x1\ncalldata_realestate_0: 0x31ea1a3900000000000000000000000000000000000000000000000000000000\ncalldatasize_realestate: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/26/0x21ef3d6663a7468200a9c671526986f7e12682a8.sol",
        "function": "cancelDeal(uint256)",
        "lineno": 464,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 4685,
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function cancelDeal(uint256). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/26/0x21ef3d6663a7468200a9c671526986f7e12682a8.sol",
        "function": "cancelDeal(uint256)",
        "lineno": 464,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 4990,
        "code": "tus = statuses",
        "debug": "storage_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_realestate_32 + 68: 0x0\ncalldata_realestate_32 + 100: 0x0\nstorage_2: 0x0\ncaller: 0x0\ncalldata_realestate_0: 0x4327acda00000000000000000000000000000000000000000000000000000000\ncalldatasize_realestate: 0x4\ncalldata_realestate_32 + 228: 0x0\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `addDeal(address,address,address,uint256,uint256,uint256,uint256,string,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/26/0x21ef3d6663a7468200a9c671526986f7e12682a8.sol",
        "function": "addDeal(address,address,address,uint256,uint256,uint256,uint256,string,uint256)",
        "lineno": 306,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 5012,
        "code": "\n      //deals[",
        "debug": "storage_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_5: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_realestate_32 + 68: 0x0\ncalldata_realestate_32 + 100: 0x0\nstorage_2: 0x0\ncaller: 0x0\ncalldata_realestate_0: 0x4327acda00000000000000000000000000000000000000000000000000000000\ncalldatasize_realestate: 0x4\ncalldata_realestate_32 + 228: 0x0\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `addDeal(address,address,address,uint256,uint256,uint256,uint256,string,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/26/0x21ef3d6663a7468200a9c671526986f7e12682a8.sol",
        "function": "addDeal(address,address,address,uint256,uint256,uint256,uint256,string,uint256)",
        "lineno": 306,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 5038,
        "code": ".signAgency = 0",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_5: 0xd63fffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_realestate_32 + 228: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_2: 0x0\ncaller: 0x0\ncalldata_realestate_0: 0x4327acda00000000000000000000000000000000000000000000000000000000\ncalldatasize_realestate: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/26/0x21ef3d6663a7468200a9c671526986f7e12682a8.sol",
        "function": "addDeal(address,address,address,uint256,uint256,uint256,uint256,string,uint256)",
        "lineno": 307,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 6209,
        "code": "mul(feePerc",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_calldata_realestate_4: 0x0\nstorage_4: 0x0\ncalldata_realestate_0: 0x4b3c45db00000000000000000000000000000000000000000000000000000000\ncalldatasize_realestate: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/26/0x21ef3d6663a7468200a9c671526986f7e12682a8.sol",
        "function": "getDealDataByNumber(uint256)",
        "lineno": 272,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 6541,
        "code": " and sender",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_calldata_realestate_4: 0x0\nstorage_4: 0x0\ncalldata_realestate_0: 0x5030c32500000000000000000000000000000000000000000000000000000000\ncalldatasize_realestate: 0x4\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/26/0x21ef3d6663a7468200a9c671526986f7e12682a8.sol",
        "function": "signBuyer(uint256)",
        "lineno": 346,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 7789,
        "code": "  deals[dea",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_calldata_realestate_4: 0x0\nstorage_4: 0x0\ncalldata_realestate_0: 0xa6f7257a00000000000000000000000000000000000000000000000000000000\ncalldatasize_realestate: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/26/0x21ef3d6663a7468200a9c671526986f7e12682a8.sol",
        "function": "getSigns(uint256)",
        "lineno": 212,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 7956,
        "code": "    if(deal",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_calldata_realestate_4: 0x0\nstorage_4: 0x0\ncalldata_realestate_0: 0xa99da6af00000000000000000000000000000000000000000000000000000000\ncalldatasize_realestate: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/26/0x21ef3d6663a7468200a9c671526986f7e12682a8.sol",
        "function": "finishDeal(uint256)",
        "lineno": 425,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 10180,
        "code": "nder == deals[deal].bu",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_realestate_4: 0x0\nstorage_5: 0x0\ncalldata_realestate_0: 0xcb75b99700000000000000000000000000000000000000000000000000000000\ncalldatasize_realestate: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/26/0x21ef3d6663a7468200a9c671526986f7e12682a8.sol",
        "function": "_function_0xcb75b997",
        "lineno": 147,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 11244,
        "code": "\n  \n}\n\ncontrac",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_realestate_32 + 68: 0x1\ncalldata_realestate_32 + 100: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_2: 0x0\ncaller: 0x0\ncalldata_realestate_0: 0x4327acda00000000000000000000000000000000000000000000000000000000\ncalldatasize_realestate: 0x4\ncalldata_realestate_32 + 228: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/26/0x21ef3d6663a7468200a9c671526986f7e12682a8.sol",
        "function": "addDeal(address,address,address,uint256,uint256,uint256,uint256,string,uint256)",
        "lineno": 33,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}