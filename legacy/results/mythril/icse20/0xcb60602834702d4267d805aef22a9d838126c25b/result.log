{"error": null, "issues": [{"address": 1728, "code": "getDiaryLength() p", "debug": "storage_0: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xff00\ncalldata_PresageFlower_0: 0xd768729d00000000000000000000000000000000000000000000000000000000\ncalldatasize_PresageFlower: 0x4\ncallvalue: 0x0\n", "description": "A possible integer underflow exists in the function `getRecentDiary()`.\nThe subtraction may result in a value < 0.", "filename": "/unique_chucks/20/0xcb60602834702d4267d805aef22a9d838126c25b.sol", "function": "getRecentDiary()", "lineno": 49, "title": "Integer Underflow", "type": "Warning"}, {"address": 1898, "code": ";\n\ncontract Presag", "debug": "storage_0: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xff00\ncalldata_PresageFlower_0: 0xe399499300000000000000000000000000000000000000000000000000000000\ncalldatasize_PresageFlower: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `addDiary(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/20/0xcb60602834702d4267d805aef22a9d838126c25b.sol", "function": "addDiary(string)", "lineno": 1, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2021, "code": "dy, now));\n    }\n    \n    function getDiar", "debug": "mem_160 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_PresageFlower_4 + calldata_PresageFlower_4)) +\n32: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xff00\ncalldata_PresageFlower_0: 0xe399499300000000000000000000000000000000000000000000000000000000\ncalldatasize_PresageFlower: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `addDiary(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/20/0xcb60602834702d4267d805aef22a9d838126c25b.sol", "function": "addDiary(string)", "lineno": 34, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2334, "code": "ntract PresageFlower {\n    \n    // Unerasable diary\n    struct Diary {\n        address author;\n        string body;\n        uint256 time;\n    }\n    \n    Diary[] diaries;\n    mapping(address => bool) authors;\n    \n    constructor() public {\n        authors[msg.sender] = true;\n    }\n    \n    modifier onlyAuthor() {\n        require(authors[msg.sender] == true);\n        _;\n    }\n    \n    function addAuthor(address _newAuthor) public onlyAuthor {\n        authors[_newAuthor] = true;\n    }\n    \n    function removeAuthor(address _otherAuthor) public onlyAuthor {\n        require(msg.sender != _otherAuthor);\n        authors[_otherAuthor] = false;\n    }\n    \n    function addDiary(string body) public onlyAuthor {\n        diaries.push(Diary(msg.sender, body, now));\n    }\n    \n    function getDiary(uint256 idx) public view onlyAuthor returns(address, string, uint256) {\n        if(diaries.length > idx) {\n            return (diaries[idx].author, diaries[idx].body, diaries[idx].time);\n        } else {\n            return (0x0, \"No Entry.\", 0);\n        }\n    }\n    \n    function getRecentDiary() public view onlyAuthor returns(address, string, uint256) {\n        return getDiary(diaries.length - 1);\n    }\n    \n    function getDiaryLength() public view onlyAuthor returns(uint256) {\n        return diaries.length;\n    }\n}", "debug": "storage_1 +\n18569430475105882587588266137607568536673111973893317399460219858819262702947 +\n3*storage_0: 0xbac1c3147749165dd7d1977fffffffffffffffffffffffffffffffffffffffc5\nkeccac_1_+\n18569430475105882587588266137607568536673111973893317399460219858819262702947_+\n3*storage_0: 0xff13e6a7459ae5a4c49c419171c3f89100a371508000000000129200000219e2\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xff00\ncalldata_PresageFlower_0: 0xe399499300000000000000000000000000000000000000000000000000000000\ncalldatasize_PresageFlower: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `addDiary(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/20/0xcb60602834702d4267d805aef22a9d838126c25b.sol", "function": "addDiary(string)", "lineno": 3, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2363, "code": "ntract PresageFlower {\n    \n    // Unerasable diary\n    struct Diary {\n        address author;\n        string body;\n        uint256 time;\n    }\n    \n    Diary[] diaries;\n    mapping(address => bool) authors;\n    \n    constructor() public {\n        authors[msg.sender] = true;\n    }\n    \n    modifier onlyAuthor() {\n        require(authors[msg.sender] == true);\n        _;\n    }\n    \n    function addAuthor(address _newAuthor) public onlyAuthor {\n        authors[_newAuthor] = true;\n    }\n    \n    function removeAuthor(address _otherAuthor) public onlyAuthor {\n        require(msg.sender != _otherAuthor);\n        authors[_otherAuthor] = false;\n    }\n    \n    function addDiary(string body) public onlyAuthor {\n        diaries.push(Diary(msg.sender, body, now));\n    }\n    \n    function getDiary(uint256 idx) public view onlyAuthor returns(address, string, uint256) {\n        if(diaries.length > idx) {\n            return (diaries[idx].author, diaries[idx].body, diaries[idx].time);\n        } else {\n            return (0x0, \"No Entry.\", 0);\n        }\n    }\n    \n    function getRecentDiary() public view onlyAuthor returns(address, string, uint256) {\n        return getDiary(diaries.length - 1);\n    }\n    \n    function getDiaryLength() public view onlyAuthor returns(uint256) {\n        return diaries.length;\n    }\n}", "debug": "mem_mem_160 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_PresageFlower_4 + calldata_PresageFlower_4)) +\n32: 0x8000000000000000000000000000000000000000000000000000000000000000\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xff00\ncalldata_PresageFlower_0: 0xe399499300000000000000000000000000000000000000000000000000000000\ncalldatasize_PresageFlower: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `addDiary(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/20/0xcb60602834702d4267d805aef22a9d838126c25b.sol", "function": "addDiary(string)", "lineno": 3, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2377, "code": "ntract PresageFlower {\n    \n    // Unerasable diary\n    struct Diary {\n        address author;\n        string body;\n        uint256 time;\n    }\n    \n    Diary[] diaries;\n    mapping(address => bool) authors;\n    \n    constructor() public {\n        authors[msg.sender] = true;\n    }\n    \n    modifier onlyAuthor() {\n        require(authors[msg.sender] == true);\n        _;\n    }\n    \n    function addAuthor(address _newAuthor) public onlyAuthor {\n        authors[_newAuthor] = true;\n    }\n    \n    function removeAuthor(address _otherAuthor) public onlyAuthor {\n        require(msg.sender != _otherAuthor);\n        authors[_otherAuthor] = false;\n    }\n    \n    function addDiary(string body) public onlyAuthor {\n        diaries.push(Diary(msg.sender, body, now));\n    }\n    \n    function getDiary(uint256 idx) public view onlyAuthor returns(address, string, uint256) {\n        if(diaries.length > idx) {\n            return (diaries[idx].author, diaries[idx].body, diaries[idx].time);\n        } else {\n            return (0x0, \"No Entry.\", 0);\n        }\n    }\n    \n    function getRecentDiary() public view onlyAuthor returns(address, string, uint256) {\n        return getDiary(diaries.length - 1);\n    }\n    \n    function getDiaryLength() public view onlyAuthor returns(uint256) {\n        return diaries.length;\n    }\n}", "debug": "mem_160 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_PresageFlower_4 + calldata_PresageFlower_4)) +\n32: 0xc48c04261444f7ce9c1a66f6c355debe3fffffffffffffffffffffffffffffed\nmem_mem_160 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_PresageFlower_4 + calldata_PresageFlower_4)) +\n32: 0xe9ed542651000003d76906f7c018193fbfffffffffffffffffffffffffffffcb\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xff00\ncalldata_PresageFlower_0: 0xe399499300000000000000000000000000000000000000000000000000000000\ncalldatasize_PresageFlower: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `addDiary(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/20/0xcb60602834702d4267d805aef22a9d838126c25b.sol", "function": "addDiary(string)", "lineno": 3, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2394, "code": "ntract PresageFlower {\n    \n    // Unerasable diary\n    struct Diary {\n        address author;\n        string body;\n        uint256 time;\n    }\n    \n    Diary[] diaries;\n    mapping(address => bool) authors;\n    \n    constructor() public {\n        authors[msg.sender] = true;\n    }\n    \n    modifier onlyAuthor() {\n        require(authors[msg.sender] == true);\n        _;\n    }\n    \n    function addAuthor(address _newAuthor) public onlyAuthor {\n        authors[_newAuthor] = true;\n    }\n    \n    function removeAuthor(address _otherAuthor) public onlyAuthor {\n        require(msg.sender != _otherAuthor);\n        authors[_otherAuthor] = false;\n    }\n    \n    function addDiary(string body) public onlyAuthor {\n        diaries.push(Diary(msg.sender, body, now));\n    }\n    \n    function getDiary(uint256 idx) public view onlyAuthor returns(address, string, uint256) {\n        if(diaries.length > idx) {\n            return (diaries[idx].author, diaries[idx].body, diaries[idx].time);\n        } else {\n            return (0x0, \"No Entry.\", 0);\n        }\n    }\n    \n    function getRecentDiary() public view onlyAuthor returns(address, string, uint256) {\n        return getDiary(diaries.length - 1);\n    }\n    \n    function getDiaryLength() public view onlyAuthor returns(uint256) {\n        return diaries.length;\n    }\n}", "debug": "mem_160 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_PresageFlower_4 + calldata_PresageFlower_4)) +\n32: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa0\nmem_mem_160 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_PresageFlower_4 + calldata_PresageFlower_4)) +\n32: 0x25\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xff00\ncalldata_PresageFlower_0: 0xe399499300000000000000000000000000000000000000000000000000000000\ncalldatasize_PresageFlower: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `addDiary(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/20/0xcb60602834702d4267d805aef22a9d838126c25b.sol", "function": "addDiary(string)", "lineno": 3, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2399, "code": "ntract PresageFlower {\n    \n    // Unerasable diary\n    struct Diary {\n        address author;\n        string body;\n        uint256 time;\n    }\n    \n    Diary[] diaries;\n    mapping(address => bool) authors;\n    \n    constructor() public {\n        authors[msg.sender] = true;\n    }\n    \n    modifier onlyAuthor() {\n        require(authors[msg.sender] == true);\n        _;\n    }\n    \n    function addAuthor(address _newAuthor) public onlyAuthor {\n        authors[_newAuthor] = true;\n    }\n    \n    function removeAuthor(address _otherAuthor) public onlyAuthor {\n        require(msg.sender != _otherAuthor);\n        authors[_otherAuthor] = false;\n    }\n    \n    function addDiary(string body) public onlyAuthor {\n        diaries.push(Diary(msg.sender, body, now));\n    }\n    \n    function getDiary(uint256 idx) public view onlyAuthor returns(address, string, uint256) {\n        if(diaries.length > idx) {\n            return (diaries[idx].author, diaries[idx].body, diaries[idx].time);\n        } else {\n            return (0x0, \"No Entry.\", 0);\n        }\n    }\n    \n    function getRecentDiary() public view onlyAuthor returns(address, string, uint256) {\n        return getDiary(diaries.length - 1);\n    }\n    \n    function getDiaryLength() public view onlyAuthor returns(uint256) {\n        return diaries.length;\n    }\n}", "debug": "mem_160 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_PresageFlower_4 + calldata_PresageFlower_4)) +\n32: 0x9ffbffffffffd99db48e28ffffffffffffffffffffffffffffffffffffffffe8\nmem_mem_160 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_PresageFlower_4 + calldata_PresageFlower_4)) +\n32: 0x2021fda91bfffffffffffffffffffffffffffffffffffffffff8\nkeccac_1_+\n18569430475105882587588266137607568536673111973893317399460219858819262702947_+\n3*storage_0: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xff00\ncalldata_PresageFlower_0: 0xe399499300000000000000000000000000000000000000000000000000000000\ncalldatasize_PresageFlower: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `addDiary(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/20/0xcb60602834702d4267d805aef22a9d838126c25b.sol", "function": "addDiary(string)", "lineno": 3, "title": "Integer Overflow ", "type": "Warning"}], "success": true}