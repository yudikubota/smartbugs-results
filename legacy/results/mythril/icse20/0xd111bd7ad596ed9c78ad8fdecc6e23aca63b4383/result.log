{"error": null, "issues": [{"address": 1315, "code": "       {\n            throw;\n        }\n ", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/23/0xd111bd7ad596ed9c78ad8fdecc6e23aca63b4383.sol", "function": "fallback", "lineno": 48, "title": "Message call to external contract", "type": "Informational"}, {"address": 1315, "code": "       {\n            throw;\n        }\n ", "debug": "", "description": "A possible transaction order independence vulnerability exists in function fallback. The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/23/0xd111bd7ad596ed9c78ad8fdecc6e23aca63b4383.sol", "function": "fallback", "lineno": 48, "title": "Transaction order dependence", "type": "Warning"}, {"address": 1482, "code": "\n\ncontract Abstrac", "debug": "storage_1: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ntimestamp: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_3: 0x0\ncalldata_ZENOSEarlyPurchase_0: 0x11300000000000000000000000000000000000000000000000000000000\ncalldatasize_ZENOSEarlyPurchase: 0x4\nstorage_2: 0x0\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/23/0xd111bd7ad596ed9c78ad8fdecc6e23aca63b4383.sol", "function": "fallback", "lineno": 1, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1485, "code": "OSCrowdsale {\n    funct", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/23/0xd111bd7ad596ed9c78ad8fdecc6e23aca63b4383.sol", "function": "fallback", "lineno": 3, "title": "State change after external call", "type": "Warning"}, {"address": 1588, "code": "arly purchase term\n    function closeEarlyPurchase()\n        exter", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/23/0xd111bd7ad596ed9c78ad8fdecc6e23aca63b4383.sol", "function": "fallback", "lineno": 121, "title": "State change after external call", "type": "Warning"}, {"address": 1599, "code": "arly purchase term\n    function closeEarlyPurchase()\n        exter", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/23/0xd111bd7ad596ed9c78ad8fdecc6e23aca63b4383.sol", "function": "fallback", "lineno": 121, "title": "State change after external call", "type": "Warning"}, {"address": 1609, "code": "arly purchase term\n    function closeEarlyPurchase()\n        exter", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/23/0xd111bd7ad596ed9c78ad8fdecc6e23aca63b4383.sol", "function": "fallback", "lineno": 121, "title": "State change after external call", "type": "Warning"}, {"address": 1637, "code": "public earlyPurchases;\n    uint publi", "debug": "The exception is triggered under the following conditions:\n\ncalldata_ZENOSEarlyPurchase_4: 0x0\nstorage_1: 0x0\ncalldata_ZENOSEarlyPurchase_0: 0x2288fad600000000000000000000000000000000000000000000000000000000\ncalldatasize_ZENOSEarlyPurchase: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/23/0xd111bd7ad596ed9c78ad8fdecc6e23aca63b4383.sol", "function": "_function_0x2288fad6", "lineno": 17, "title": "Exception state", "type": "Informational"}, {"address": 1890, "code": "      owner = newOwner;\n    ", "debug": "", "description": "A possible transaction order independence vulnerability exists in function withdraw(uint256). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/23/0xd111bd7ad596ed9c78ad8fdecc6e23aca63b4383.sol", "function": "withdraw(uint256)", "lineno": 149, "title": "Transaction order dependence", "type": "Warning"}], "success": true}