{"error": null, "issues": [{"address": 677, "code": "[_spender] = _value;\n      emit Approval(msg.sender, _spender, _value);\n\n      //call the receiveApproval function on the contract you want to be notified. This crafts the function signature manually so one doesn't have to include a contract in here just for this.\n      //receiveApproval(address _from, uint256 _value, address _tokenContract, bytes _extraData)\n      //it is assumed that when does this that the call *should* succeed, otherwise one would use vanilla approve instead.\n      if(!_spender.call(bytes4(bytes32(keccak256(\"receiveApproval(address,uint256,address,bytes)\"))), msg.sender, _value, this, _extraData)) { revert(); }\n      return true;\n  }\n\n}\n\ncontract DCVToken is StandardToken, Ownable {\n    string constant public name = \"Decentraverse Token\";\n    string constant public symbol ", "debug": "calldata_StandardToken_32 + 36: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_StandardToken_0: 0xcae9ca5100000000000000000000000000000000000000000000000000000000\ncalldatasize_StandardToken: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `approveAndCall(address,uint256,bytes)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/15/0xbedb53541d35afc4559cb5697ce1579acd843a1b.sol", "function": "approveAndCall(address,uint256,bytes)", "lineno": 135, "title": "Integer Overflow ", "type": "Warning"}, {"address": 3355, "code": "); }\n      return true;\n  }\n\n}\n\ncontract DCVToken is StandardToken, Ownable {\n    string constant public name = \"Decentraverse To", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/15/0xbedb53541d35afc4559cb5697ce1579acd843a1b.sol", "function": "approveAndCall(address,uint256,bytes)", "lineno": 141, "title": "Message call to external contract", "type": "Warning"}, {"address": 3547, "code": "\n    ", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_StandardToken_4: 0x9c9efb7ae5acd378025256a3945f5859076e809243093d9ecae2636c9fd28979\ncalldata_StandardToken_32 + 4: 0xc290137095b13347e55005a6dc184559e0489f1233480050d0fb4bba17d34179\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xc290137095b13347e55005a6dc184559e0489f1233480050d0fb4bba17d34179\ncalldata_StandardToken_4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_StandardToken_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncalldatasize_StandardToken: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `transfer(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/15/0xbedb53541d35afc4559cb5697ce1579acd843a1b.sol", "function": "transfer(address,uint256)", "lineno": 28, "title": "Integer Overflow ", "type": "Warning"}, {"address": 3560, "code": "c;\n  }\n}\n\ncont", "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_StandardToken_4: 0xbd5dfeabad0efffffffffeffffffffffd599ffefbfe6f24271e80e64322c0700\ncalldata_StandardToken_32 + 4: 0x6218000d800000000000000000000000039800002005500633e06f771baff7fc\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x6218000d800000000000000000000000039800002005500633e06f771baff7fc\ncalldata_StandardToken_4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_StandardToken_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncalldatasize_StandardToken: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/15/0xbedb53541d35afc4559cb5697ce1579acd843a1b.sol", "function": "transfer(address,uint256)", "lineno": 29, "title": "Exception state", "type": "Informational"}], "success": true}