{
  "contract": "0x89ba53cd0455f5b9e9b8f16bbdb6242c26bef83e",
  "tool": "mythril",
  "start": 1563482100.7364373,
  "end": 1563482120.3762617,
  "duration": 19.639824390411377,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 979,
        "code": "ner);\n    }\n\n ",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/4/0x89ba53cd0455f5b9e9b8f16bbdb6242c26bef83e.sol",
        "function": "setOwner(address)",
        "lineno": 45,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 2016,
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/4/0x89ba53cd0455f5b9e9b8f16bbdb6242c26bef83e.sol",
        "function": "_function_0x5a686699",
        "lineno": 295,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 3197,
        "code": "thing/lib/ds-math/src/math.sol\n//",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/4/0x89ba53cd0455f5b9e9b8f16bbdb6242c26bef83e.sol",
        "function": "void()",
        "lineno": 74,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 3197,
        "code": "thing/lib/ds-math/src/math.sol\n//",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2016\n",
        "filename": "/unique_chucks/4/0x89ba53cd0455f5b9e9b8f16bbdb6242c26bef83e.sol",
        "function": "_function_0x5a686699",
        "lineno": 74,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 3197,
        "code": "thing/lib/ds-math/src/math.sol\n//",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function void(). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/4/0x89ba53cd0455f5b9e9b8f16bbdb6242c26bef83e.sol",
        "function": "void()",
        "lineno": 74,
        "title": "Transaction order dependence",
        "type": "Warning"
      }
    ],
    "success": true
  }
}