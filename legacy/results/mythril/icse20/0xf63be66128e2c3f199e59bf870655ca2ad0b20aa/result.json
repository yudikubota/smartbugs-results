{
  "contract": "0xf63be66128e2c3f199e59bf870655ca2ad0b20aa",
  "tool": "mythril",
  "start": 1563355262.2237296,
  "end": 1563355317.2502756,
  "duration": 55.026546001434326,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 1187,
        "code": "th; i++) doAirdrop(_addresses[i], _amount[i]);\n    }\n\n    function adminClaimAirdropMultiple(address[] _addresses, uint _amount) public onlyOwner {        \n        for (uint i = 0; i < _addresses.length; i++) doAirdr",
        "debug": "calldata_TranslatixToken_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_TranslatixToken_0: 0x44d8ab2600000000000000000000000000000000000000000000000000000000\ncalldatasize_TranslatixToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `_function_0x44d8ab26`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0xf63be66128e2c3f199e59bf870655ca2ad0b20aa.sol",
        "function": "_function_0x44d8ab26",
        "lineno": 164,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1433,
        "code": "esses[i], _amount);\n    }\n\n    function updateTokensPerEth(uint _tokensPerEth) public onlyOwner {        \n        tokensPerEth = _tokensPerEth;\n        emit TokensPerEthUpdated(_tokensPerEth);\n",
        "debug": "calldata_TranslatixToken_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_TranslatixToken_0: 0x67220fd700000000000000000000000000000000000000000000000000000000\ncalldatasize_TranslatixToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `adminClaimAirdropMultiple(address[],uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0xf63be66128e2c3f199e59bf870655ca2ad0b20aa.sol",
        "function": "adminClaimAirdropMultiple(address[],uint256)",
        "lineno": 168,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 3734,
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_contracts/0xf63be66128e2c3f199e59bf870655ca2ad0b20aa.sol",
        "function": "withdrawAltcoinTokens(address)",
        "lineno": 285,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 3734,
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3992\n",
        "filename": "/unique_contracts/0xf63be66128e2c3f199e59bf870655ca2ad0b20aa.sol",
        "function": "withdrawAltcoinTokens(address)",
        "lineno": 285,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 3992,
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_contracts/0xf63be66128e2c3f199e59bf870655ca2ad0b20aa.sol",
        "function": "withdrawAltcoinTokens(address)",
        "lineno": 285,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 4079,
        "code": " require(_amount <= balances[msg.se",
        "debug": "The exception is triggered under the following conditions:\n\ncalldatasize_TranslatixToken: 0x60\ncalldata_TranslatixToken_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0xf63be66128e2c3f199e59bf870655ca2ad0b20aa.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 219,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 5897,
        "code": "ength; i++",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_TranslatixToken_4 + calldata_TranslatixToken_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_1: 0x0\ncaller: 0x0\ncalldata_TranslatixToken_0: 0x44d8ab2600000000000000000000000000000000000000000000000000000000\ncalldatasize_TranslatixToken: 0x4\nmem_128 +\n32 +\n32*calldata_TranslatixToken_4 + calldata_TranslatixToken_4: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0xf63be66128e2c3f199e59bf870655ca2ad0b20aa.sol",
        "function": "_function_0x44d8ab26",
        "lineno": 168,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 8559,
        "code": "     ",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TranslatixToken_4: 0xb2c81e3be60b809eebca250ae5f3958de8241f3c0942692d3cecd1fd00743211\ncalldata_TranslatixToken_32 + 4: 0x93931c13e507cbbcbf74d9eee4fb920eeaef84aa5110428da2eddb017d5ebcdd\nstorage_7: 0x0\nstorage_4: 0x1\nstorage_1: 0x0\ncaller: 0x0\ncalldata_TranslatixToken_0: 0x4a63464d00000000000000000000000000000000000000000000000000000000\ncalldatasize_TranslatixToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `adminClaimAirdrop(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0xf63be66128e2c3f199e59bf870655ca2ad0b20aa.sol",
        "function": "adminClaimAirdrop(address,uint256)",
        "lineno": 36,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 8572,
        "code": "    }\n}\n\ncontr",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TranslatixToken_4: 0xc63a21246c99b000ea0030728005ea6909080a424a47ca48059be3c0ff803205\ncalldata_TranslatixToken_32 + 4: 0xd2bd697b67b8b7eebcef8ebaf405ca6a0b728a06c347eda3d5dbebfeffbdb977\nstorage_7: 0x0\nstorage_4: 0x1\nstorage_1: 0x0\ncaller: 0x0\ncalldata_TranslatixToken_0: 0x4a63464d00000000000000000000000000000000000000000000000000000000\ncalldatasize_TranslatixToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0xf63be66128e2c3f199e59bf870655ca2ad0b20aa.sol",
        "function": "adminClaimAirdrop(address,uint256)",
        "lineno": 37,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 8595,
        "code": "eturn a - b;\n ",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_TranslatixToken_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_1: 0x0\ncaller: 0x0\ncalldata_TranslatixToken_0: 0x42966c6800000000000000000000000000000000000000000000000000000000\ncalldatasize_TranslatixToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0xf63be66128e2c3f199e59bf870655ca2ad0b20aa.sol",
        "function": "burn(uint256)",
        "lineno": 27,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}