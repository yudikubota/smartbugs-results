Processing contract: /unique_chucks/14/0x9a0720c0926d9d436bd69fc9a51ddb7698193623.sol:CertificationRegistry
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/14/0x9a0720c0926d9d436bd69fc9a51ddb7698193623.sol:IndividualCertification
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/14/0x9a0720c0926d9d436bd69fc9a51ddb7698193623.sol:OrganizationalCertification
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for LockedEther in contract 'CertificationRegistry':
    |  */
    |
  > |contract CertificationRegistry {
    |
    |    /** @dev Dictionary of all Certificate Contracts issued by the Organization.
  at /unique_chucks/14/0x9a0720c0926d9d436bd69fc9a51ddb7698193623.sol(130)

[31mViolation[0m for RepeatedCall in contract 'CertificationRegistry':
    |
    |        IndividualCertification individualCert = IndividualCertification(CertificateAddresses[toCertificateKey(_CertID, _organizationID)]);
  > |        require(keccak256(abi.encodePacked(_b0, _b1)) != keccak256(abi.encodePacked(individualCert.b0(), individualCert.b1())),
    |        "Duplicated hash-value exception!");
    |        _;
  at /unique_chucks/14/0x9a0720c0926d9d436bd69fc9a51ddb7698193623.sol(449)

[33mWarning[0m for UnrestrictedWrite in contract 'CertificationRegistry':
    |            _issuingBody);
    |
  > |        RosenCertificateAddresses[certKey] = address(orgCert);
    |        emit CertificationSet(address(orgCert));
    |    }
  at /unique_chucks/14/0x9a0720c0926d9d436bd69fc9a51ddb7698193623.sol(210)

[33mWarning[0m for UnrestrictedWrite in contract 'CertificationRegistry':
    |
    |        IndividualCertification individualCert = new IndividualCertification(b0, b1);
  > |        CertificateAddresses[toCertificateKey(_CertID, _organizationID)] = address(individualCert);
    |        emit IndividualCertificationSet(address(individualCert));
    |    }
  at /unique_chucks/14/0x9a0720c0926d9d436bd69fc9a51ddb7698193623.sol(225)

[33mWarning[0m for UnrestrictedWrite in contract 'CertificationRegistry':
    |
    |        emit CertificationDeleted(RosenCertificateAddresses[certKey]);
  > |        delete RosenCertificateAddresses[certKey];
    |    }
    |    /**
  at /unique_chucks/14/0x9a0720c0926d9d436bd69fc9a51ddb7698193623.sol(254)

[33mWarning[0m for UnrestrictedWrite in contract 'CertificationRegistry':
    |        IndividualCertification(CertificateAddresses[certKey]).deleteCertificate();
    |        emit CertificationDeleted(CertificateAddresses[certKey]);
  > |        delete CertificateAddresses[certKey];
    |
    |    }
  at /unique_chucks/14/0x9a0720c0926d9d436bd69fc9a51ddb7698193623.sol(272)

[33mWarning[0m for UnrestrictedWrite in contract 'CertificationRegistry':
    |        onlyGlobalAdmin
    |    {
  > |        CertAdmins[toCertAdminKey(_CertAdmin, _organizationID)] = true;
    |        emit CertAdminAdded(_CertAdmin);
    |    }
  at /unique_chucks/14/0x9a0720c0926d9d436bd69fc9a51ddb7698193623.sol(286)

[33mWarning[0m for UnrestrictedWrite in contract 'CertificationRegistry':
    |    onlyGlobalAdmin
    |    {
  > |        delete CertAdmins[toCertAdminKey(_CertAdmin, _organizationID)];
    |        emit CertAdminDeleted(_CertAdmin);
    |    }
  at /unique_chucks/14/0x9a0720c0926d9d436bd69fc9a51ddb7698193623.sol(301)

[33mWarning[0m for UnrestrictedWrite in contract 'IndividualCertification':
    |    {
    |        require(msg.sender == registryAddress);
  > |        b0 = _b0;
    |        b1 = _b1;
    |    }
  at /unique_chucks/14/0x9a0720c0926d9d436bd69fc9a51ddb7698193623.sol(27)

[33mWarning[0m for UnrestrictedWrite in contract 'IndividualCertification':
    |        require(msg.sender == registryAddress);
    |        b0 = _b0;
  > |        b1 = _b1;
    |    }
    |
  at /unique_chucks/14/0x9a0720c0926d9d436bd69fc9a51ddb7698193623.sol(28)