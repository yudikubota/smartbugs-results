Processing contract: /unique_chucks/37/0x68f1f41f735801ed82501a7fe171b7fec5a1a27c.sol:ERC20
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/37/0x68f1f41f735801ed82501a7fe171b7fec5a1a27c.sol:ERC20Detailed
Processing contract: /unique_chucks/37/0x68f1f41f735801ed82501a7fe171b7fec5a1a27c.sol:IERC20
Processing contract: /unique_chucks/37/0x68f1f41f735801ed82501a7fe171b7fec5a1a27c.sol:IVersioned
Processing contract: /unique_chucks/37/0x68f1f41f735801ed82501a7fe171b7fec5a1a27c.sol:Ownable
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/37/0x68f1f41f735801ed82501a7fe171b7fec5a1a27c.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/37/0x68f1f41f735801ed82501a7fe171b7fec5a1a27c.sol:Versioned
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/37/0x68f1f41f735801ed82501a7fe171b7fec5a1a27c.sol:vRC20
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for LockedEther in contract 'Ownable':
    |}
    |
  > |contract Ownable {
    |
    |    /**
  at /unique_chucks/37/0x68f1f41f735801ed82501a7fe171b7fec5a1a27c.sol(105)

[31mViolation[0m for UnrestrictedWrite in contract 'Ownable':
    |    function transferOwnershipFrom(address payable pendingOwner_) public {
    |        require(allowance(msg.sender));
  > |        _pendingOwner = pendingOwner_;
    |        emit PendingTransfer(_owner, _pendingOwner);
    |    }
  at /unique_chucks/37/0x68f1f41f735801ed82501a7fe171b7fec5a1a27c.sol(217)

[33mWarning[0m for UnrestrictedWrite in contract 'Ownable':
    |pragma solidity ^0.5.2;
  > |// produced by the Solididy File Flattener (c) David Appleton 2018
    |// contact : dave@akomba.com
    |// released under Apache 2.0 licence
  at /unique_chucks/37/0x68f1f41f735801ed82501a7fe171b7fec5a1a27c.sol(2)

[33mWarning[0m for UnrestrictedWrite in contract 'Ownable':
    |    */
    |    function transferOwnership(address payable pendingOwner_) onlyOwner public {
  > |        _pendingOwner = pendingOwner_;
    |        emit PendingTransfer(_owner, _pendingOwner);
    |    }
  at /unique_chucks/37/0x68f1f41f735801ed82501a7fe171b7fec5a1a27c.sol(206)

[33mWarning[0m for UnrestrictedWrite in contract 'Ownable':
    |    */
    |    function claimOwnership() onlyPendingOwner public {
  > |        _owner = _pendingOwner;
    |        _owners.push(_owner);
    |        _pendingOwner = address(0);
  at /unique_chucks/37/0x68f1f41f735801ed82501a7fe171b7fec5a1a27c.sol(225)

[33mWarning[0m for UnrestrictedWrite in contract 'Ownable':
    |    function claimOwnership() onlyPendingOwner public {
    |        _owner = _pendingOwner;
  > |        _owners.push(_owner);
    |        _pendingOwner = address(0);
    |        emit OwnershipTransferred(_owner, _pendingOwner);
  at /unique_chucks/37/0x68f1f41f735801ed82501a7fe171b7fec5a1a27c.sol(226)

[33mWarning[0m for UnrestrictedWrite in contract 'Ownable':
    |        _owner = _pendingOwner;
    |        _owners.push(_owner);
  > |        _pendingOwner = address(0);
    |        emit OwnershipTransferred(_owner, _pendingOwner);
    |    }
  at /unique_chucks/37/0x68f1f41f735801ed82501a7fe171b7fec5a1a27c.sol(227)

[31mViolation[0m for LockedEther in contract 'Versioned':
    |}
    |
  > |contract Versioned is IVersioned {
    |
    |    string[] public data;
  at /unique_chucks/37/0x68f1f41f735801ed82501a7fe171b7fec5a1a27c.sol(468)

[31mViolation[0m for UnrestrictedWrite in contract 'Versioned':
    |pragma solidity ^0.5.2;
  > |// produced by the Solididy File Flattener (c) David Appleton 2018
    |// contact : dave@akomba.com
    |// released under Apache 2.0 licence
  at /unique_chucks/37/0x68f1f41f735801ed82501a7fe171b7fec5a1a27c.sol(2)

[31mViolation[0m for UnrestrictedWrite in contract 'Versioned':
    |}
    |
  > |contract Versioned is IVersioned {
    |
    |    string[] public data;
  at /unique_chucks/37/0x68f1f41f735801ed82501a7fe171b7fec5a1a27c.sol(468)

[31mViolation[0m for LockedEther in contract 'vRC20':
    |}
    |
  > |contract vRC20 is ERC20, ERC20Detailed, Versioned, Ownable {
    |
    |    constructor (
  at /unique_chucks/37/0x68f1f41f735801ed82501a7fe171b7fec5a1a27c.sol(508)

[31mViolation[0m for UnrestrictedWrite in contract 'vRC20':
    |    function transferOwnershipFrom(address payable pendingOwner_) public {
    |        require(allowance(msg.sender));
  > |        _pendingOwner = pendingOwner_;
    |        emit PendingTransfer(_owner, _pendingOwner);
    |    }
  at /unique_chucks/37/0x68f1f41f735801ed82501a7fe171b7fec5a1a27c.sol(217)

[31mViolation[0m for UnrestrictedWrite in contract 'vRC20':
    |}
    |
  > |contract vRC20 is ERC20, ERC20Detailed, Versioned, Ownable {
    |
    |    constructor (
  at /unique_chucks/37/0x68f1f41f735801ed82501a7fe171b7fec5a1a27c.sol(508)

[33mWarning[0m for UnrestrictedWrite in contract 'vRC20':
    |pragma solidity ^0.5.2;
  > |// produced by the Solididy File Flattener (c) David Appleton 2018
    |// contact : dave@akomba.com
    |// released under Apache 2.0 licence
  at /unique_chucks/37/0x68f1f41f735801ed82501a7fe171b7fec5a1a27c.sol(2)

[33mWarning[0m for UnrestrictedWrite in contract 'vRC20':
    |    */
    |    function transferOwnership(address payable pendingOwner_) onlyOwner public {
  > |        _pendingOwner = pendingOwner_;
    |        emit PendingTransfer(_owner, _pendingOwner);
    |    }
  at /unique_chucks/37/0x68f1f41f735801ed82501a7fe171b7fec5a1a27c.sol(206)

[33mWarning[0m for UnrestrictedWrite in contract 'vRC20':
    |    */
    |    function claimOwnership() onlyPendingOwner public {
  > |        _owner = _pendingOwner;
    |        _owners.push(_owner);
    |        _pendingOwner = address(0);
  at /unique_chucks/37/0x68f1f41f735801ed82501a7fe171b7fec5a1a27c.sol(225)

[33mWarning[0m for UnrestrictedWrite in contract 'vRC20':
    |    function claimOwnership() onlyPendingOwner public {
    |        _owner = _pendingOwner;
  > |        _owners.push(_owner);
    |        _pendingOwner = address(0);
    |        emit OwnershipTransferred(_owner, _pendingOwner);
  at /unique_chucks/37/0x68f1f41f735801ed82501a7fe171b7fec5a1a27c.sol(226)

[33mWarning[0m for UnrestrictedWrite in contract 'vRC20':
    |        _owner = _pendingOwner;
    |        _owners.push(_owner);
  > |        _pendingOwner = address(0);
    |        emit OwnershipTransferred(_owner, _pendingOwner);
    |    }
  at /unique_chucks/37/0x68f1f41f735801ed82501a7fe171b7fec5a1a27c.sol(227)

[33mWarning[0m for UnrestrictedWrite in contract 'vRC20':
    |}
    |
  > |contract vRC20 is ERC20, ERC20Detailed, Versioned, Ownable {
    |
    |    constructor (
  at /unique_chucks/37/0x68f1f41f735801ed82501a7fe171b7fec5a1a27c.sol(508)