Processing contract: /unique_chucks/19/0x8e93e3ab70652872da836dd9bb1abb3c2c688418.sol:FiatContract
Processing contract: /unique_chucks/19/0x8e93e3ab70652872da836dd9bb1abb3c2c688418.sol:Ownable
Processing contract: /unique_chucks/19/0x8e93e3ab70652872da836dd9bb1abb3c2c688418.sol:RealToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/19/0x8e93e3ab70652872da836dd9bb1abb3c2c688418.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/19/0x8e93e3ab70652872da836dd9bb1abb3c2c688418.sol:SimpleToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for DAOConstantGas in contract 'RealToken':
    |  function() external payable {
    |    uint256 tokens = calcTokens(msg.value);
  > |    ethOwner.transfer(msg.value);
    |    emit GetEth(msg.sender, msg.value);
    |    _mint(msg.sender, tokens);
  at /unique_chucks/19/0x8e93e3ab70652872da836dd9bb1abb3c2c688418.sol(246)

[33mWarning[0m for TODAmount in contract 'RealToken':
    |  function() external payable {
    |    uint256 tokens = calcTokens(msg.value);
  > |    ethOwner.transfer(msg.value);
    |    emit GetEth(msg.sender, msg.value);
    |    _mint(msg.sender, tokens);
  at /unique_chucks/19/0x8e93e3ab70652872da836dd9bb1abb3c2c688418.sol(246)

[31mViolation[0m for TODReceiver in contract 'RealToken':
    |  function() external payable {
    |    uint256 tokens = calcTokens(msg.value);
  > |    ethOwner.transfer(msg.value);
    |    emit GetEth(msg.sender, msg.value);
    |    _mint(msg.sender, tokens);
  at /unique_chucks/19/0x8e93e3ab70652872da836dd9bb1abb3c2c688418.sol(246)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'RealToken':
    |  function() external payable {
    |    uint256 tokens = calcTokens(msg.value);
  > |    ethOwner.transfer(msg.value);
    |    emit GetEth(msg.sender, msg.value);
    |    _mint(msg.sender, tokens);
  at /unique_chucks/19/0x8e93e3ab70652872da836dd9bb1abb3c2c688418.sol(246)

[33mWarning[0m for UnrestrictedWrite in contract 'RealToken':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipTransferred(_owner, address(0));
  > |        _owner = address(0);
    |    }
    |
  at /unique_chucks/19/0x8e93e3ab70652872da836dd9bb1abb3c2c688418.sol(49)

[33mWarning[0m for UnrestrictedWrite in contract 'RealToken':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_chucks/19/0x8e93e3ab70652872da836dd9bb1abb3c2c688418.sol(67)

[33mWarning[0m for UnrestrictedWrite in contract 'RealToken':
    |        require(account != address(0));
    |
  > |        _totalSupply = _totalSupply.add(value);
    |        _balances[account] = _balances[account].add(value);
    |        emit Transfer(address(0), account, value);
  at /unique_chucks/19/0x8e93e3ab70652872da836dd9bb1abb3c2c688418.sol(197)

[33mWarning[0m for UnrestrictedWrite in contract 'RealToken':
    |  function setEthOwner(address newOwner) public onlyOwner {
    |    require(newOwner != address(0));
  > |    ethOwner = address(uint160(newOwner));
    |  }
    |
  at /unique_chucks/19/0x8e93e3ab70652872da836dd9bb1abb3c2c688418.sol(229)

[33mWarning[0m for UnrestrictedWrite in contract 'RealToken':
    |
    |  function setFactor(uint256 newFactor) public onlyOwner {
  > |    factor = newFactor;
    |  }
    |  
  at /unique_chucks/19/0x8e93e3ab70652872da836dd9bb1abb3c2c688418.sol(233)

[31mViolation[0m for UnrestrictedWrite in contract 'SimpleToken':
    |
    |        _balances[from] = _balances[from].sub(value);
  > |        _balances[to] = _balances[to].add(value);
    |        emit Transfer(from, to, value);
    |    }
  at /unique_chucks/19/0x8e93e3ab70652872da836dd9bb1abb3c2c688418.sol(183)

[33mWarning[0m for UnrestrictedWrite in contract 'SimpleToken':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipTransferred(_owner, address(0));
  > |        _owner = address(0);
    |    }
    |
  at /unique_chucks/19/0x8e93e3ab70652872da836dd9bb1abb3c2c688418.sol(49)

[33mWarning[0m for UnrestrictedWrite in contract 'SimpleToken':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_chucks/19/0x8e93e3ab70652872da836dd9bb1abb3c2c688418.sol(67)