Processing contract: /unique_chucks/14/0xd86ce1b1c1bbdbf6f4bfeb108e2fd8389501f654.sol:BlockchainCutiesERC1155Interface
Processing contract: /unique_chucks/14/0xd86ce1b1c1bbdbf6f4bfeb108e2fd8389501f654.sol:CutieGeneratorInterface
Processing contract: /unique_chucks/14/0xd86ce1b1c1bbdbf6f4bfeb108e2fd8389501f654.sol:ERC20
Processing contract: /unique_chucks/14/0xd86ce1b1c1bbdbf6f4bfeb108e2fd8389501f654.sol:IERC1155TokenReceiver
Processing contract: /unique_chucks/14/0xd86ce1b1c1bbdbf6f4bfeb108e2fd8389501f654.sol:Operators
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/14/0xd86ce1b1c1bbdbf6f4bfeb108e2fd8389501f654.sol:Pausable
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/14/0xd86ce1b1c1bbdbf6f4bfeb108e2fd8389501f654.sol:Sale
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for MissingInputValidation in contract 'Operators':
    |    }
    |
  > |    function isOwner(address _addr) public view returns (bool) {
    |        return ownerAddress[_addr];
    |    }
  at /unique_chucks/14/0xd86ce1b1c1bbdbf6f4bfeb108e2fd8389501f654.sol(72)

[31mViolation[0m for MissingInputValidation in contract 'Operators':
    |    }
    |
  > |    function removeOwner(address _oldOwner) external onlyOwner {
    |        delete(ownerAddress[_oldOwner]);
    |    }
  at /unique_chucks/14/0xd86ce1b1c1bbdbf6f4bfeb108e2fd8389501f654.sol(82)

[31mViolation[0m for MissingInputValidation in contract 'Operators':
    |    }
    |
  > |    function isOperator(address _addr) public view returns (bool) {
    |        return operatorAddress[_addr] || ownerAddress[_addr];
    |    }
  at /unique_chucks/14/0xd86ce1b1c1bbdbf6f4bfeb108e2fd8389501f654.sol(91)

[31mViolation[0m for MissingInputValidation in contract 'Operators':
    |    }
    |
  > |    function removeOperator(address _oldOperator) external onlyOwner {
    |        delete(operatorAddress[_oldOperator]);
    |    }
  at /unique_chucks/14/0xd86ce1b1c1bbdbf6f4bfeb108e2fd8389501f654.sol(101)

[31mViolation[0m for UnrestrictedWrite in contract 'Operators':
    |        require(_newOwner != address(0));
    |
  > |        ownerAddress[_newOwner] = true;
    |    }
    |
  at /unique_chucks/14/0xd86ce1b1c1bbdbf6f4bfeb108e2fd8389501f654.sol(79)

[31mViolation[0m for UnrestrictedWrite in contract 'Operators':
    |
    |    function removeOwner(address _oldOwner) external onlyOwner {
  > |        delete(ownerAddress[_oldOwner]);
    |    }
    |
  at /unique_chucks/14/0xd86ce1b1c1bbdbf6f4bfeb108e2fd8389501f654.sol(83)

[31mViolation[0m for UnrestrictedWrite in contract 'Operators':
    |        require(_newOperator != address(0));
    |
  > |        operatorAddress[_newOperator] = true;
    |    }
    |
  at /unique_chucks/14/0xd86ce1b1c1bbdbf6f4bfeb108e2fd8389501f654.sol(98)

[31mViolation[0m for UnrestrictedWrite in contract 'Operators':
    |
    |    function removeOperator(address _oldOperator) external onlyOwner {
  > |        delete(operatorAddress[_oldOperator]);
    |    }
    |}
  at /unique_chucks/14/0xd86ce1b1c1bbdbf6f4bfeb108e2fd8389501f654.sol(102)

[31mViolation[0m for UnrestrictedWrite in contract 'Pausable':
    |        require(_newOwner != address(0));
    |
  > |        ownerAddress[_newOwner] = true;
    |    }
    |
  at /unique_chucks/14/0xd86ce1b1c1bbdbf6f4bfeb108e2fd8389501f654.sol(79)

[31mViolation[0m for UnrestrictedWrite in contract 'Pausable':
    |
    |    function removeOwner(address _oldOwner) external onlyOwner {
  > |        delete(ownerAddress[_oldOwner]);
    |    }
    |
  at /unique_chucks/14/0xd86ce1b1c1bbdbf6f4bfeb108e2fd8389501f654.sol(83)

[31mViolation[0m for UnrestrictedWrite in contract 'Pausable':
    |        require(_newOperator != address(0));
    |
  > |        operatorAddress[_newOperator] = true;
    |    }
    |
  at /unique_chucks/14/0xd86ce1b1c1bbdbf6f4bfeb108e2fd8389501f654.sol(98)

[31mViolation[0m for UnrestrictedWrite in contract 'Pausable':
    |
    |    function removeOperator(address _oldOperator) external onlyOwner {
  > |        delete(operatorAddress[_oldOperator]);
    |    }
    |}
  at /unique_chucks/14/0xd86ce1b1c1bbdbf6f4bfeb108e2fd8389501f654.sol(102)

[31mViolation[0m for UnrestrictedWrite in contract 'Pausable':
    |     */
    |    function pause() onlyOwner whenNotPaused public {
  > |        paused = true;
    |        emit Pause();
    |    }
  at /unique_chucks/14/0xd86ce1b1c1bbdbf6f4bfeb108e2fd8389501f654.sol(139)

[31mViolation[0m for UnrestrictedWrite in contract 'Pausable':
    |     */
    |    function unpause() onlyOwner whenPaused public {
  > |        paused = false;
    |        emit Unpause();
    |    }
  at /unique_chucks/14/0xd86ce1b1c1bbdbf6f4bfeb108e2fd8389501f654.sol(147)

[31mViolation[0m for RepeatedCall in contract 'Sale':
    |    function mintToken1155(address purchaser, RewardToken1155 storage reward) internal
    |    {
  > |        token1155.mintFungibleSingle(reward.tokenId, purchaser, reward.count);
    |    }
    |
  at /unique_chucks/14/0xd86ce1b1c1bbdbf6f4bfeb108e2fd8389501f654.sol(483)

[31mViolation[0m for RepeatedCall in contract 'Sale':
    |    function mintNFT(address purchaser, uint128 nftKind) internal
    |    {
  > |        token1155.mintNonFungibleSingleShort(nftKind, purchaser);
    |    }
    |
  at /unique_chucks/14/0xd86ce1b1c1bbdbf6f4bfeb108e2fd8389501f654.sol(488)

[31mViolation[0m for RepeatedCall in contract 'Sale':
    |    {
    |        uint tokenId = (uint256(reward.nftKind) << 128) | (1 << 255) | reward.tokenIndex;
  > |        token1155.safeTransferFrom(address(this), purchaser, tokenId, 1, "");
    |    }
    |
  at /unique_chucks/14/0xd86ce1b1c1bbdbf6f4bfeb108e2fd8389501f654.sol(494)

[31mViolation[0m for RepeatedCall in contract 'Sale':
    |    function mintCutie(address purchaser, RewardCutie storage reward) internal
    |    {
  > |        cutieGenerator.generateSingle(reward.genome, reward.generation, purchaser);
    |    }
    |
  at /unique_chucks/14/0xd86ce1b1c1bbdbf6f4bfeb108e2fd8389501f654.sol(499)

[31mViolation[0m for TODAmount in contract 'Sale':
    |        }
    |
  > |        msg.sender.transfer(total);
    |    }
    |
  at /unique_chucks/14/0xd86ce1b1c1bbdbf6f4bfeb108e2fd8389501f654.sol(521)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'Sale':
    |        }
    |
  > |        msg.sender.transfer(total);
    |    }
    |
  at /unique_chucks/14/0xd86ce1b1c1bbdbf6f4bfeb108e2fd8389501f654.sol(521)

[31mViolation[0m for UnrestrictedWrite in contract 'Sale':
    |pragma solidity ^0.5.0;
    |
  > |pragma solidity ^0.5.0;
    |
    |interface BlockchainCutiesERC1155Interface
  at /unique_chucks/14/0xd86ce1b1c1bbdbf6f4bfeb108e2fd8389501f654.sol(3)

[31mViolation[0m for UnrestrictedWrite in contract 'Sale':
    |        require(_newOwner != address(0));
    |
  > |        ownerAddress[_newOwner] = true;
    |    }
    |
  at /unique_chucks/14/0xd86ce1b1c1bbdbf6f4bfeb108e2fd8389501f654.sol(79)

[31mViolation[0m for UnrestrictedWrite in contract 'Sale':
    |
    |    function removeOwner(address _oldOwner) external onlyOwner {
  > |        delete(ownerAddress[_oldOwner]);
    |    }
    |
  at /unique_chucks/14/0xd86ce1b1c1bbdbf6f4bfeb108e2fd8389501f654.sol(83)

[31mViolation[0m for UnrestrictedWrite in contract 'Sale':
    |        require(_newOperator != address(0));
    |
  > |        operatorAddress[_newOperator] = true;
    |    }
    |
  at /unique_chucks/14/0xd86ce1b1c1bbdbf6f4bfeb108e2fd8389501f654.sol(98)

[31mViolation[0m for UnrestrictedWrite in contract 'Sale':
    |
    |    function removeOperator(address _oldOperator) external onlyOwner {
  > |        delete(operatorAddress[_oldOperator]);
    |    }
    |}
  at /unique_chucks/14/0xd86ce1b1c1bbdbf6f4bfeb108e2fd8389501f654.sol(102)

[31mViolation[0m for UnrestrictedWrite in contract 'Sale':
    |     */
    |    function pause() onlyOwner whenNotPaused public {
  > |        paused = true;
    |        emit Pause();
    |    }
  at /unique_chucks/14/0xd86ce1b1c1bbdbf6f4bfeb108e2fd8389501f654.sol(139)

[31mViolation[0m for UnrestrictedWrite in contract 'Sale':
    |     */
    |    function unpause() onlyOwner whenPaused public {
  > |        paused = false;
    |        emit Unpause();
    |    }
  at /unique_chucks/14/0xd86ce1b1c1bbdbf6f4bfeb108e2fd8389501f654.sol(147)

[31mViolation[0m for UnrestrictedWrite in contract 'Sale':
    |/// @title BlockchainCuties Presale
    |/// @author https://BlockChainArchitect.io
  > |contract Sale is Pausable, IERC1155TokenReceiver
    |{
    |    struct RewardToken1155
  at /unique_chucks/14/0xd86ce1b1c1bbdbf6f4bfeb108e2fd8389501f654.sol(218)

[31mViolation[0m for UnrestrictedWrite in contract 'Sale':
    |    function setToken1155(BlockchainCutiesERC1155Interface _token1155) onlyOwner external
    |    {
  > |        token1155 = _token1155;
    |    }
    |
  at /unique_chucks/14/0xd86ce1b1c1bbdbf6f4bfeb108e2fd8389501f654.sol(266)

[31mViolation[0m for UnrestrictedWrite in contract 'Sale':
    |    function setCutieGenerator(CutieGeneratorInterface _cutieGenerator) onlyOwner external
    |    {
  > |        cutieGenerator = _cutieGenerator;
    |    }
    |
  at /unique_chucks/14/0xd86ce1b1c1bbdbf6f4bfeb108e2fd8389501f654.sol(271)

[31mViolation[0m for UnrestrictedWrite in contract 'Sale':
    |    {
    |        Lot storage lot = lots[lotId];
  > |        lot.price = price;
    |        lot.leftCount = count;
    |        lot.expireTime = expireTime;
  at /unique_chucks/14/0xd86ce1b1c1bbdbf6f4bfeb108e2fd8389501f654.sol(277)

[31mViolation[0m for UnrestrictedWrite in contract 'Sale':
    |        Lot storage lot = lots[lotId];
    |        lot.price = price;
  > |        lot.leftCount = count;
    |        lot.expireTime = expireTime;
    |        lot.priceMul = priceMul;
  at /unique_chucks/14/0xd86ce1b1c1bbdbf6f4bfeb108e2fd8389501f654.sol(278)

[31mViolation[0m for UnrestrictedWrite in contract 'Sale':
    |        lot.price = price;
    |        lot.leftCount = count;
  > |        lot.expireTime = expireTime;
    |        lot.priceMul = priceMul;
    |        lot.priceAdd = priceAdd;
  at /unique_chucks/14/0xd86ce1b1c1bbdbf6f4bfeb108e2fd8389501f654.sol(279)

[31mViolation[0m for UnrestrictedWrite in contract 'Sale':
    |        lot.leftCount = count;
    |        lot.expireTime = expireTime;
  > |        lot.priceMul = priceMul;
    |        lot.priceAdd = priceAdd;
    |        lot.lotKind = lotKind;
  at /unique_chucks/14/0xd86ce1b1c1bbdbf6f4bfeb108e2fd8389501f654.sol(280)

[31mViolation[0m for UnrestrictedWrite in contract 'Sale':
    |        lot.expireTime = expireTime;
    |        lot.priceMul = priceMul;
  > |        lot.priceAdd = priceAdd;
    |        lot.lotKind = lotKind;
    |        emit LotChange(lotId);
  at /unique_chucks/14/0xd86ce1b1c1bbdbf6f4bfeb108e2fd8389501f654.sol(281)

[31mViolation[0m for UnrestrictedWrite in contract 'Sale':
    |        lot.priceMul = priceMul;
    |        lot.priceAdd = priceAdd;
  > |        lot.lotKind = lotKind;
    |        emit LotChange(lotId);
    |    }
  at /unique_chucks/14/0xd86ce1b1c1bbdbf6f4bfeb108e2fd8389501f654.sol(282)

[31mViolation[0m for UnrestrictedWrite in contract 'Sale':
    |    {
    |        Lot storage lot = lots[lotId];
  > |        lot.leftCount = count;
    |        emit LotChange(lotId);
    |    }
  at /unique_chucks/14/0xd86ce1b1c1bbdbf6f4bfeb108e2fd8389501f654.sol(289)

[31mViolation[0m for UnrestrictedWrite in contract 'Sale':
    |    {
    |        Lot storage lot = lots[lotId];
  > |        lot.expireTime = expireTime;
    |        emit LotChange(lotId);
    |    }
  at /unique_chucks/14/0xd86ce1b1c1bbdbf6f4bfeb108e2fd8389501f654.sol(296)

[31mViolation[0m for UnrestrictedWrite in contract 'Sale':
    |    function setPrice(uint32 lotId, uint128 price) external onlyOperator
    |    {
  > |        lots[lotId].price = price;
    |        emit LotChange(lotId);
    |    }
  at /unique_chucks/14/0xd86ce1b1c1bbdbf6f4bfeb108e2fd8389501f654.sol(302)

[31mViolation[0m for UnrestrictedWrite in contract 'Sale':
    |    function deleteLot(uint32 lotId) external onlyOperator
    |    {
  > |        delete lots[lotId];
    |        emit LotChange(lotId);
    |    }
  at /unique_chucks/14/0xd86ce1b1c1bbdbf6f4bfeb108e2fd8389501f654.sol(308)

[31mViolation[0m for UnrestrictedWrite in contract 'Sale':
    |    function addRewardToken1155(uint32 lotId, uint tokenId, uint count) external onlyOperator
    |    {
  > |        lots[lotId].rewardsToken1155.push(RewardToken1155(tokenId, count));
    |        emit LotChange(lotId);
    |    }
  at /unique_chucks/14/0xd86ce1b1c1bbdbf6f4bfeb108e2fd8389501f654.sol(314)

[31mViolation[0m for UnrestrictedWrite in contract 'Sale':
    |    {
    |        delete lots[lotId].rewardsToken1155;
  > |        lots[lotId].rewardsToken1155.push(RewardToken1155(tokenId, count));
    |        emit LotChange(lotId);
    |    }
  at /unique_chucks/14/0xd86ce1b1c1bbdbf6f4bfeb108e2fd8389501f654.sol(321)

[31mViolation[0m for UnrestrictedWrite in contract 'Sale':
    |    {
    |        delete lots[lotId].rewardsNftFixed;
  > |        lots[lotId].rewardsNftFixed.push(RewardNFT(nftType, tokenIndex));
    |        emit LotChange(lotId);
    |    }
  at /unique_chucks/14/0xd86ce1b1c1bbdbf6f4bfeb108e2fd8389501f654.sol(328)

[31mViolation[0m for UnrestrictedWrite in contract 'Sale':
    |    function addRewardNftFixed(uint32 lotId, uint128 nftType, uint128 tokenIndex) external onlyOperator
    |    {
  > |        lots[lotId].rewardsNftFixed.push(RewardNFT(nftType, tokenIndex));
    |        emit LotChange(lotId);
    |    }
  at /unique_chucks/14/0xd86ce1b1c1bbdbf6f4bfeb108e2fd8389501f654.sol(334)

[31mViolation[0m for UnrestrictedWrite in contract 'Sale':
    |        for (uint i = 0; i < tokenIndex.length; i++)
    |        {
  > |            lots[lotId].rewardsNftFixed.push(RewardNFT(nftType, tokenIndex[i]));
    |        }
    |        emit LotChange(lotId);
  at /unique_chucks/14/0xd86ce1b1c1bbdbf6f4bfeb108e2fd8389501f654.sol(342)

[31mViolation[0m for UnrestrictedWrite in contract 'Sale':
    |    function addRewardNftMint(uint32 lotId, uint128 nftType) external onlyOperator
    |    {
  > |        lots[lotId].rewardsNftMint.push(nftType);
    |        emit LotChange(lotId);
    |    }
  at /unique_chucks/14/0xd86ce1b1c1bbdbf6f4bfeb108e2fd8389501f654.sol(349)

[31mViolation[0m for UnrestrictedWrite in contract 'Sale':
    |    {
    |        delete lots[lotId].rewardsNftMint;
  > |        lots[lotId].rewardsNftMint.push(nftType);
    |        emit LotChange(lotId);
    |    }
  at /unique_chucks/14/0xd86ce1b1c1bbdbf6f4bfeb108e2fd8389501f654.sol(356)

[31mViolation[0m for UnrestrictedWrite in contract 'Sale':
    |    function addRewardCutie(uint32 lotId, uint genome, uint16 generation) external onlyOperator
    |    {
  > |        lots[lotId].rewardsCutie.push(RewardCutie(genome, generation));
    |        emit LotChange(lotId);
    |    }
  at /unique_chucks/14/0xd86ce1b1c1bbdbf6f4bfeb108e2fd8389501f654.sol(362)

[31mViolation[0m for UnrestrictedWrite in contract 'Sale':
    |    {
    |        delete lots[lotId].rewardsCutie;
  > |        lots[lotId].rewardsCutie.push(RewardCutie(genome, generation));
    |        emit LotChange(lotId);
    |    }
  at /unique_chucks/14/0xd86ce1b1c1bbdbf6f4bfeb108e2fd8389501f654.sol(369)

[31mViolation[0m for UnrestrictedWrite in contract 'Sale':
    |        emit Bid(msg.sender, lotId, valueForEvent, tokenForEvent);
    |
  > |        p.leftCount--;
    |        p.price += uint128(uint256(p.price)*p.priceMul / 1000000);
    |        p.price += p.priceAdd;
  at /unique_chucks/14/0xd86ce1b1c1bbdbf6f4bfeb108e2fd8389501f654.sol(458)

[31mViolation[0m for UnrestrictedWrite in contract 'Sale':
    |
    |        p.leftCount--;
  > |        p.price += uint128(uint256(p.price)*p.priceMul / 1000000);
    |        p.price += p.priceAdd;
    |        uint i;
  at /unique_chucks/14/0xd86ce1b1c1bbdbf6f4bfeb108e2fd8389501f654.sol(459)

[31mViolation[0m for UnrestrictedWrite in contract 'Sale':
    |        p.leftCount--;
    |        p.price += uint128(uint256(p.price)*p.priceMul / 1000000);
  > |        p.price += p.priceAdd;
    |        uint i;
    |        for (i = 0; i < p.rewardsToken1155.length; i++)
  at /unique_chucks/14/0xd86ce1b1c1bbdbf6f4bfeb108e2fd8389501f654.sol(460)

[31mViolation[0m for UnrestrictedWrite in contract 'Sale':
    |
    |    function setSigner(address _newSigner) public onlyOwner {
  > |        signerAddress = _newSigner;
    |    }
    |
  at /unique_chucks/14/0xd86ce1b1c1bbdbf6f4bfeb108e2fd8389501f654.sol(549)