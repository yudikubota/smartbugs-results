Processing contract: /unique_chucks/9/0xbee22939e4a55a6645faa90c363e022be8df30f6.sol:BlockMiracleToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/9/0xbee22939e4a55a6645faa90c363e022be8df30f6.sol:ERC20
Processing contract: /unique_chucks/9/0xbee22939e4a55a6645faa90c363e022be8df30f6.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for LockedEther in contract 'BlockMiracleToken':
    |}
    |
  > |contract BlockMiracleToken is ERC20 {
    |    string public name = "BlockMiracleToken";
    |    string public symbol = "BMT";
  at /unique_chucks/9/0xbee22939e4a55a6645faa90c363e022be8df30f6.sol(12)

[33mWarning[0m for UnrestrictedWrite in contract 'BlockMiracleToken':
    |        require (balanceOf[msg.sender] >= _value);
    |        balanceOf[msg.sender] = balanceOf[msg.sender].sub(_value);
  > |        balanceOf[_to] = balanceOf[_to].add(_value);
    |        emit Transfer(msg.sender, _to, _value);
    |        return true;
  at /unique_chucks/9/0xbee22939e4a55a6645faa90c363e022be8df30f6.sol(31)

[33mWarning[0m for UnrestrictedWrite in contract 'BlockMiracleToken':
    |        require (_to != address(0x0) && _value > 0);
    |        require (balanceOf[_from] >= _value && _value <= allowance[_from][msg.sender]);
  > |        balanceOf[_from] = balanceOf[_from].sub(_value);
    |        balanceOf[_to] = balanceOf[_to].add(_value);
    |        allowance[_from][msg.sender] = allowance[_from][msg.sender].sub(_value);
  at /unique_chucks/9/0xbee22939e4a55a6645faa90c363e022be8df30f6.sol(46)

[33mWarning[0m for UnrestrictedWrite in contract 'BlockMiracleToken':
    |        require (balanceOf[_from] >= _value && _value <= allowance[_from][msg.sender]);
    |        balanceOf[_from] = balanceOf[_from].sub(_value);
  > |        balanceOf[_to] = balanceOf[_to].add(_value);
    |        allowance[_from][msg.sender] = allowance[_from][msg.sender].sub(_value);
    |        emit Transfer(_from, _to, _value);
  at /unique_chucks/9/0xbee22939e4a55a6645faa90c363e022be8df30f6.sol(47)