Processing contract: /unique_chucks/1/0x7090a6e22c838469c9e67851d6489ba9c933a43f.sol:StandardToken
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/1/0x7090a6e22c838469c9e67851d6489ba9c933a43f.sol:Token
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/1/0x7090a6e22c838469c9e67851d6489ba9c933a43f.sol:ZuckBucks
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for MissingInputValidation in contract 'StandardToken':
    |
    |
  > |    function transfer(address _to, uint256 _value) public returns (bool success) {
    |        //Default assumes totalSupply can't be over max (2^256 - 1).
    |        //If your token leaves out totalSupply and can issue more tokens as time goes on, you need to check if it doesn't wrap.
  at /unique_chucks/1/0x7090a6e22c838469c9e67851d6489ba9c933a43f.sol(43)

[31mViolation[0m for MissingInputValidation in contract 'StandardToken':
    |    }
    |
  > |    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {
    |        //same as above. Replace this line with the following if you want to protect against wrapping uints.
    |        //if (balances[_from] >= _value && allowed[_from][msg.sender] >= _value && balances[_to] + _value > balances[_to]) {
  at /unique_chucks/1/0x7090a6e22c838469c9e67851d6489ba9c933a43f.sol(56)

[31mViolation[0m for MissingInputValidation in contract 'StandardToken':
    |    }
    |
  > |    function balanceOf(address _owner) view public returns (uint256 balance) {
    |        return balances[_owner];
    |    }
  at /unique_chucks/1/0x7090a6e22c838469c9e67851d6489ba9c933a43f.sol(68)

[31mViolation[0m for MissingInputValidation in contract 'StandardToken':
    |    }
    |
  > |    function approve(address _spender, uint256 _value) public returns (bool success) {
    |        allowed[msg.sender][_spender] = _value;
    |        emit Approval(msg.sender, _spender, _value);
  at /unique_chucks/1/0x7090a6e22c838469c9e67851d6489ba9c933a43f.sol(72)

[31mViolation[0m for MissingInputValidation in contract 'StandardToken':
    |    }
    |
  > |    function allowance(address _owner, address _spender) view public returns (uint256 remaining) {
    |      return allowed[_owner][_spender];
    |    }
  at /unique_chucks/1/0x7090a6e22c838469c9e67851d6489ba9c933a43f.sol(78)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |        if (balances[msg.sender] >= _value && _value > 0) {
    |            balances[msg.sender] -= _value;
  > |            balances[_to] += _value;
    |            emit Transfer(msg.sender, _to, _value);
    |            return true;
  at /unique_chucks/1/0x7090a6e22c838469c9e67851d6489ba9c933a43f.sol(50)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |        //if (balances[_from] >= _value && allowed[_from][msg.sender] >= _value && balances[_to] + _value > balances[_to]) {
    |        if (balances[_from] >= _value && allowed[_from][msg.sender] >= _value && _value > 0) {
  > |            balances[_to] += _value;
    |            balances[_from] -= _value;
    |            allowed[_from][msg.sender] -= _value;
  at /unique_chucks/1/0x7090a6e22c838469c9e67851d6489ba9c933a43f.sol(60)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |        if (balances[_from] >= _value && allowed[_from][msg.sender] >= _value && _value > 0) {
    |            balances[_to] += _value;
  > |            balances[_from] -= _value;
    |            allowed[_from][msg.sender] -= _value;
    |            emit Transfer(_from, _to, _value);
  at /unique_chucks/1/0x7090a6e22c838469c9e67851d6489ba9c933a43f.sol(61)

[33mWarning[0m for TODAmount in contract 'ZuckBucks':
    |        
    |        // revert();
  > |        owner.transfer(eth_val);
    |    }
    |
  at /unique_chucks/1/0x7090a6e22c838469c9e67851d6489ba9c933a43f.sol(126)

[33mWarning[0m for TODReceiver in contract 'ZuckBucks':
    |        
    |        // revert();
  > |        owner.transfer(eth_val);
    |    }
    |
  at /unique_chucks/1/0x7090a6e22c838469c9e67851d6489ba9c933a43f.sol(126)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'ZuckBucks':
    |        
    |        // revert();
  > |        owner.transfer(eth_val);
    |    }
    |
  at /unique_chucks/1/0x7090a6e22c838469c9e67851d6489ba9c933a43f.sol(126)

[31mViolation[0m for UnrestrictedWrite in contract 'ZuckBucks':
    |        uint256 giveaway_value;
    |
  > |        giveaway_count++;
    |
    |        giveaway_value = (((starting_giveaway / giveaway_count) + (starting_giveaway / (giveaway_count + 2))) * (10**18 + eth_val)) / 10**18;
  at /unique_chucks/1/0x7090a6e22c838469c9e67851d6489ba9c933a43f.sol(114)

[31mViolation[0m for UnrestrictedWrite in contract 'ZuckBucks':
    |
    |        giveaway_value = (((starting_giveaway / giveaway_count) + (starting_giveaway / (giveaway_count + 2))) * (10**18 + eth_val)) / 10**18;
  > |        next_giveaway = (starting_giveaway / (giveaway_count + 1)) + (starting_giveaway / (giveaway_count + 3));
    |
    |
  at /unique_chucks/1/0x7090a6e22c838469c9e67851d6489ba9c933a43f.sol(117)

[31mViolation[0m for UnrestrictedWrite in contract 'ZuckBucks':
    |
    |        balances[msg.sender] += giveaway_value;
  > |        balances[owner] -= giveaway_value;
    |        circulatingSupply += giveaway_value;
    |        emit Transfer(owner, msg.sender, giveaway_value);
  at /unique_chucks/1/0x7090a6e22c838469c9e67851d6489ba9c933a43f.sol(121)

[31mViolation[0m for UnrestrictedWrite in contract 'ZuckBucks':
    |        balances[msg.sender] += giveaway_value;
    |        balances[owner] -= giveaway_value;
  > |        circulatingSupply += giveaway_value;
    |        emit Transfer(owner, msg.sender, giveaway_value);
    |        
  at /unique_chucks/1/0x7090a6e22c838469c9e67851d6489ba9c933a43f.sol(122)

[33mWarning[0m for UnrestrictedWrite in contract 'ZuckBucks':
    |        if (balances[msg.sender] >= _value && _value > 0) {
    |            balances[msg.sender] -= _value;
  > |            balances[_to] += _value;
    |            emit Transfer(msg.sender, _to, _value);
    |            return true;
  at /unique_chucks/1/0x7090a6e22c838469c9e67851d6489ba9c933a43f.sol(50)

[33mWarning[0m for UnrestrictedWrite in contract 'ZuckBucks':
    |        //if (balances[_from] >= _value && allowed[_from][msg.sender] >= _value && balances[_to] + _value > balances[_to]) {
    |        if (balances[_from] >= _value && allowed[_from][msg.sender] >= _value && _value > 0) {
  > |            balances[_to] += _value;
    |            balances[_from] -= _value;
    |            allowed[_from][msg.sender] -= _value;
  at /unique_chucks/1/0x7090a6e22c838469c9e67851d6489ba9c933a43f.sol(60)

[33mWarning[0m for UnrestrictedWrite in contract 'ZuckBucks':
    |        if (balances[_from] >= _value && allowed[_from][msg.sender] >= _value && _value > 0) {
    |            balances[_to] += _value;
  > |            balances[_from] -= _value;
    |            allowed[_from][msg.sender] -= _value;
    |            emit Transfer(_from, _to, _value);
  at /unique_chucks/1/0x7090a6e22c838469c9e67851d6489ba9c933a43f.sol(61)