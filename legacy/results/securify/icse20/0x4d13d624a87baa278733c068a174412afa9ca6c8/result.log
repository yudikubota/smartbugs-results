Processing contract: /unique_chucks/3/0x4d13d624a87baa278733c068a174412afa9ca6c8.sol:ContractReceiver
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/3/0x4d13d624a87baa278733c068a174412afa9ca6c8.sol:IERC20
Processing contract: /unique_chucks/3/0x4d13d624a87baa278733c068a174412afa9ca6c8.sol:IERC223
Processing contract: /unique_chucks/3/0x4d13d624a87baa278733c068a174412afa9ca6c8.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/3/0x4d13d624a87baa278733c068a174412afa9ca6c8.sol:StandardToken
Processing contract: /unique_chucks/3/0x4d13d624a87baa278733c068a174412afa9ca6c8.sol:XBase
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for LockedEther in contract 'XBase':
    |}
    |
  > |contract XBase is StandardToken {
    |    string public constant name = "Eterbase Coin";
    |    string public constant symbol = "XBASE";
  at /unique_chucks/3/0x4d13d624a87baa278733c068a174412afa9ca6c8.sol(208)

[33mWarning[0m for UnrestrictedWrite in contract 'XBase':
    |        require(_value <= balances[_from]);
    |        require(_value <= allowed[_from][msg.sender]);
  > |        balances[_from] = balances[_from].sub(_value);
    |        balances[_to] = balances[_to].add(_value);
    |        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
  at /unique_chucks/3/0x4d13d624a87baa278733c068a174412afa9ca6c8.sol(119)

[33mWarning[0m for UnrestrictedWrite in contract 'XBase':
    |        require(_value <= allowed[_from][msg.sender]);
    |        balances[_from] = balances[_from].sub(_value);
  > |        balances[_to] = balances[_to].add(_value);
    |        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
    |        emit Transfer(_from, _to, _value);
  at /unique_chucks/3/0x4d13d624a87baa278733c068a174412afa9ca6c8.sol(120)

[33mWarning[0m for UnrestrictedWrite in contract 'XBase':
    |        require(balances[msg.sender] >= _value);
    |        balances[msg.sender] = balances[msg.sender].sub(_value);
  > |        balances[_to] = balances[_to].add(_value);
    |        emit Transfer(msg.sender, _to, _value);
    |        emit Transfer(msg.sender, _to, _value, _data);
  at /unique_chucks/3/0x4d13d624a87baa278733c068a174412afa9ca6c8.sol(189)

[33mWarning[0m for UnrestrictedWrite in contract 'XBase':
    |        require(balances[msg.sender] >= _value);
    |        balances[msg.sender] = balances[msg.sender].sub(_value);
  > |        balances[_to] = balances[_to].add(_value);
    |        ContractReceiver receiver = ContractReceiver(_to);
    |        receiver.tokenFallback(msg.sender, _value, _data);
  at /unique_chucks/3/0x4d13d624a87baa278733c068a174412afa9ca6c8.sol(199)