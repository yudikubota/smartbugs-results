Processing contract: /unique_contracts/0xe82f9867db8c29e37b939f0f404543d15ef70eff.sol:Coin
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0xe82f9867db8c29e37b939f0f404543d15ef70eff.sol:ERC20Lib
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0xe82f9867db8c29e37b939f0f404543d15ef70eff.sol:I_coin
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0xe82f9867db8c29e37b939f0f404543d15ef70eff.sol:I_minter
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0xe82f9867db8c29e37b939f0f404543d15ef70eff.sol:RiskCoin
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0xe82f9867db8c29e37b939f0f404543d15ef70eff.sol:StandardToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0xe82f9867db8c29e37b939f0f404543d15ef70eff.sol:StatiCoin
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0xe82f9867db8c29e37b939f0f404543d15ef70eff.sol:mortal
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0xe82f9867db8c29e37b939f0f404543d15ef70eff.sol:owned
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for LockedEther in contract 'ERC20Lib':
    |}
    |
  > |library ERC20Lib {
    |//Inspired by https://blog.aragon.one/library-driven-development-in-solidity-2bebcaf88736
    |  struct TokenStorage {
  at /unique_contracts/0xe82f9867db8c29e37b939f0f404543d15ef70eff.sol(24)

[33mWarning[0m for UnrestrictedWrite in contract 'ERC20Lib':
    |	
    |	function init(TokenStorage storage self, uint _initial_supply) {
  > |		self.totalSupply = _initial_supply;
    |		self.balances[msg.sender] = _initial_supply;
    |	}
  at /unique_contracts/0xe82f9867db8c29e37b939f0f404543d15ef70eff.sol(87)

[31mViolation[0m for LockedEther in contract 'I_minter':
    |
    |/** @title I_minter. */
  > |contract I_minter { 
    |    event EventCreateStatic(address indexed _from, uint128 _value, uint _transactionID, uint _Price); 
    |    event EventRedeemStatic(address indexed _from, uint128 _value, uint _transactionID, uint _Price); 
  at /unique_contracts/0xe82f9867db8c29e37b939f0f404543d15ef70eff.sol(447)

[33mWarning[0m for TODAmount in contract 'RiskCoin':
    |		/** @dev direct any ETH sent to this RiskCoin address to the minter.NewRisk function
    |		*/
  > |        mint.NewRiskAdr.value(msg.value)(msg.sender);
    |    }  
    |}
  at /unique_contracts/0xe82f9867db8c29e37b939f0f404543d15ef70eff.sol(371)

[31mViolation[0m for TODReceiver in contract 'RiskCoin':
    |		/** @dev direct any ETH sent to this RiskCoin address to the minter.NewRisk function
    |		*/
  > |        mint.NewRiskAdr.value(msg.value)(msg.sender);
    |    }  
    |}
  at /unique_contracts/0xe82f9867db8c29e37b939f0f404543d15ef70eff.sol(371)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'RiskCoin':
    |		/** @dev direct any ETH sent to this RiskCoin address to the minter.NewRisk function
    |		*/
  > |        mint.NewRiskAdr.value(msg.value)(msg.sender);
    |    }  
    |}
  at /unique_contracts/0xe82f9867db8c29e37b939f0f404543d15ef70eff.sol(371)

[33mWarning[0m for TODAmount in contract 'StatiCoin':
    |		/** @dev direct any ETH sent to this StatiCoin address to the minter.NewStatic function
    |        */
  > |        mint.NewStaticAdr.value(msg.value)(msg.sender);
    |    }  
    |}
  at /unique_contracts/0xe82f9867db8c29e37b939f0f404543d15ef70eff.sol(383)

[31mViolation[0m for TODReceiver in contract 'StatiCoin':
    |		/** @dev direct any ETH sent to this StatiCoin address to the minter.NewStatic function
    |        */
  > |        mint.NewStaticAdr.value(msg.value)(msg.sender);
    |    }  
    |}
  at /unique_contracts/0xe82f9867db8c29e37b939f0f404543d15ef70eff.sol(383)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'StatiCoin':
    |		/** @dev direct any ETH sent to this StatiCoin address to the minter.NewStatic function
    |        */
  > |        mint.NewStaticAdr.value(msg.value)(msg.sender);
    |    }  
    |}
  at /unique_contracts/0xe82f9867db8c29e37b939f0f404543d15ef70eff.sol(383)

[31mViolation[0m for MissingInputValidation in contract 'mortal':
    |    owner = msg.sender;
    |  }
  > |  function changeOwner(address newOwner) onlyOwner {
    |    owner = newOwner;
    |  }
  at /unique_contracts/0xe82f9867db8c29e37b939f0f404543d15ef70eff.sol(9)

[31mViolation[0m for MissingInputValidation in contract 'owned':
    |    owner = msg.sender;
    |  }
  > |  function changeOwner(address newOwner) onlyOwner {
    |    owner = newOwner;
    |  }
  at /unique_contracts/0xe82f9867db8c29e37b939f0f404543d15ef70eff.sol(9)