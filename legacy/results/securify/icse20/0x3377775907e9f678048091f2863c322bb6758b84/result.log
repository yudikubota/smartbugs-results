Processing contract: /unique_contracts/0x3377775907e9f678048091f2863c322bb6758b84.sol:ContractTokenERC20
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0x3377775907e9f678048091f2863c322bb6758b84.sol:GLBToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0x3377775907e9f678048091f2863c322bb6758b84.sol:tokenRecipient
[31mViolation[0m for LockedEther in contract 'ContractTokenERC20':
    |interface tokenRecipient { function receiveApproval(address _from, uint256 _value, address _token, bytes calldata _extraData) external; }
    |
  > |contract ContractTokenERC20 {
    |    // Public variables of the token
    |    string public name;
  at /unique_contracts/0x3377775907e9f678048091f2863c322bb6758b84.sol(7)

[31mViolation[0m for UnrestrictedWrite in contract 'ContractTokenERC20':
    |        balanceOf[_from] -= _value;
    |        // Add the same to the recipient
  > |        balanceOf[_to] += _value;
    |        emit Transfer(_from, _to, _value);
    |        // Asserts are used to use static analysis to find bugs in your code. They should never fail
  at /unique_contracts/0x3377775907e9f678048091f2863c322bb6758b84.sol(59)

[31mViolation[0m for LockedEther in contract 'GLBToken':
    |/******************************************/
    |
  > |contract GLBToken is ContractTokenERC20 {
    |
    |    mapping (address => bool) public frozenAccount;
  at /unique_contracts/0x3377775907e9f678048091f2863c322bb6758b84.sol(87)

[31mViolation[0m for UnrestrictedWrite in contract 'GLBToken':
    |        require(!frozenAccount[_to]);                           // Check if recipient is frozen
    |        balanceOf[_from] -= _value;                             // Subtract from the sender
  > |        balanceOf[_to] += _value;                               // Add the same to the recipient
    |        emit Transfer(_from, _to, _value);
    |    }
  at /unique_contracts/0x3377775907e9f678048091f2863c322bb6758b84.sol(109)