Processing contract: /unique_chucks/29/0x1891e8301397defc0562f35ff9a9b281dec09a5e.sol:CPRToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/29/0x1891e8301397defc0562f35ff9a9b281dec09a5e.sol:ERC223Interface
Processing contract: /unique_chucks/29/0x1891e8301397defc0562f35ff9a9b281dec09a5e.sol:ERC223ReceivingContract
Processing contract: /unique_chucks/29/0x1891e8301397defc0562f35ff9a9b281dec09a5e.sol:IERC20
Processing contract: /unique_chucks/29/0x1891e8301397defc0562f35ff9a9b281dec09a5e.sol:Ownable
Processing contract: /unique_chucks/29/0x1891e8301397defc0562f35ff9a9b281dec09a5e.sol:Pausable
Processing contract: /unique_chucks/29/0x1891e8301397defc0562f35ff9a9b281dec09a5e.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for LockedEther in contract 'CPRToken':
    |}
    |
  > |contract CPRToken is IERC20, ERC223Interface, Ownable, Pausable {
    |    using SafeMath for uint;
    |    mapping(address => uint) balances;
  at /unique_chucks/29/0x1891e8301397defc0562f35ff9a9b281dec09a5e.sol(148)

[31mViolation[0m for UnrestrictedWrite in contract 'CPRToken':
    |        require(_to != address(0));
    |        require(balances[_to] + _value > balances[_to]);
  > |        balances[_from] = balances[_from].sub(_value);
    |        _allowed[_from][msg.sender] = _allowed[_from][msg.sender].sub(_value);
    |        balances[_to] = balances[_to].add(_value);
  at /unique_chucks/29/0x1891e8301397defc0562f35ff9a9b281dec09a5e.sol(205)

[31mViolation[0m for UnrestrictedWrite in contract 'CPRToken':
    |        balances[_from] = balances[_from].sub(_value);
    |        _allowed[_from][msg.sender] = _allowed[_from][msg.sender].sub(_value);
  > |        balances[_to] = balances[_to].add(_value);
    |        uint codeLength;
    |        bytes memory empty;
  at /unique_chucks/29/0x1891e8301397defc0562f35ff9a9b281dec09a5e.sol(207)

[31mViolation[0m for UnrestrictedWrite in contract 'CPRToken':
    |        require(balances[_to] + _value > balances[_to]);
    |        balances[msg.sender] -= _value;
  > |        balances[_to] += _value;
    |        emit Transfer(msg.sender, _to, _value);
    |        emit Transfer(msg.sender, _to, _value, _data);
  at /unique_chucks/29/0x1891e8301397defc0562f35ff9a9b281dec09a5e.sol(233)

[31mViolation[0m for UnrestrictedWrite in contract 'CPRToken':
    |        require(balances[_to] + _value > balances[_to]);
    |        balances[msg.sender] -= _value;
  > |        balances[_to] += _value;
    |        ERC223ReceivingContract receiver = ERC223ReceivingContract(_to);
    |        receiver.tokenFallback(msg.sender, _value, _data);
  at /unique_chucks/29/0x1891e8301397defc0562f35ff9a9b281dec09a5e.sol(243)

[33mWarning[0m for UnrestrictedWrite in contract 'CPRToken':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipTransferred(_owner, address(0));
  > |        _owner = address(0);
    |    }
    |    function transferOwnership(address newOwner) public onlyOwner {
  at /unique_chucks/29/0x1891e8301397defc0562f35ff9a9b281dec09a5e.sol(85)

[33mWarning[0m for UnrestrictedWrite in contract 'CPRToken':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_chucks/29/0x1891e8301397defc0562f35ff9a9b281dec09a5e.sol(93)

[33mWarning[0m for UnrestrictedWrite in contract 'CPRToken':
    |    }
    |    function pause() public onlyOwner whenNotPaused {
  > |        _paused = true;
    |        emit Paused(msg.sender);
    |    }
  at /unique_chucks/29/0x1891e8301397defc0562f35ff9a9b281dec09a5e.sol(116)

[33mWarning[0m for UnrestrictedWrite in contract 'CPRToken':
    |    }
    |    function unpause() public onlyOwner whenPaused {
  > |        _paused = false;
    |        emit Unpaused(msg.sender);
    |    }
  at /unique_chucks/29/0x1891e8301397defc0562f35ff9a9b281dec09a5e.sol(120)