Processing contract: /unique_contracts/0x0f44ef14948994d9cae6a745bd46bf3122e60ac1.sol:Ownable
Processing contract: /unique_contracts/0x0f44ef14948994d9cae6a745bd46bf3122e60ac1.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0x0f44ef14948994d9cae6a745bd46bf3122e60ac1.sol:x2
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for DAOConstantGas in contract 'x2':
    |        emit OnDepositReceived(msg.sender, msg.value);
    |
  > |        owner.transfer(msg.value.mul(10).div(100));
    |
    |        if (address(this).balance >= deposits[currentPaymentIndex].payout && deposits[currentPaymentIndex].paymentTime == 0) {
  at /unique_contracts/0x0f44ef14948994d9cae6a745bd46bf3122e60ac1.sol(175)

[31mViolation[0m for DAOConstantGas in contract 'x2':
    |        if (address(this).balance >= deposits[currentPaymentIndex].payout && deposits[currentPaymentIndex].paymentTime == 0) {
    |            deposits[currentPaymentIndex].paymentTime = now;
  > |            deposits[currentPaymentIndex].depositor.send(deposits[currentPaymentIndex].payout);
    |            emit OnPaymentSent(deposits[currentPaymentIndex].depositor, deposits[currentPaymentIndex].payout);
    |            currentPaymentIndex += 1;
  at /unique_contracts/0x0f44ef14948994d9cae6a745bd46bf3122e60ac1.sol(179)

[33mWarning[0m for TODAmount in contract 'x2':
    |        if (address(this).balance >= deposits[currentPaymentIndex].payout && deposits[currentPaymentIndex].paymentTime == 0) {
    |            deposits[currentPaymentIndex].paymentTime = now;
  > |            deposits[currentPaymentIndex].depositor.send(deposits[currentPaymentIndex].payout);
    |            emit OnPaymentSent(deposits[currentPaymentIndex].depositor, deposits[currentPaymentIndex].payout);
    |            currentPaymentIndex += 1;
  at /unique_contracts/0x0f44ef14948994d9cae6a745bd46bf3122e60ac1.sol(179)

[31mViolation[0m for TODReceiver in contract 'x2':
    |        emit OnDepositReceived(msg.sender, msg.value);
    |
  > |        owner.transfer(msg.value.mul(10).div(100));
    |
    |        if (address(this).balance >= deposits[currentPaymentIndex].payout && deposits[currentPaymentIndex].paymentTime == 0) {
  at /unique_contracts/0x0f44ef14948994d9cae6a745bd46bf3122e60ac1.sol(175)

[33mWarning[0m for TODReceiver in contract 'x2':
    |        if (address(this).balance >= deposits[currentPaymentIndex].payout && deposits[currentPaymentIndex].paymentTime == 0) {
    |            deposits[currentPaymentIndex].paymentTime = now;
  > |            deposits[currentPaymentIndex].depositor.send(deposits[currentPaymentIndex].payout);
    |            emit OnPaymentSent(deposits[currentPaymentIndex].depositor, deposits[currentPaymentIndex].payout);
    |            currentPaymentIndex += 1;
  at /unique_contracts/0x0f44ef14948994d9cae6a745bd46bf3122e60ac1.sol(179)

[31mViolation[0m for UnhandledException in contract 'x2':
    |        if (address(this).balance >= deposits[currentPaymentIndex].payout && deposits[currentPaymentIndex].paymentTime == 0) {
    |            deposits[currentPaymentIndex].paymentTime = now;
  > |            deposits[currentPaymentIndex].depositor.send(deposits[currentPaymentIndex].payout);
    |            emit OnPaymentSent(deposits[currentPaymentIndex].depositor, deposits[currentPaymentIndex].payout);
    |            currentPaymentIndex += 1;
  at /unique_contracts/0x0f44ef14948994d9cae6a745bd46bf3122e60ac1.sol(179)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'x2':
    |        emit OnDepositReceived(msg.sender, msg.value);
    |
  > |        owner.transfer(msg.value.mul(10).div(100));
    |
    |        if (address(this).balance >= deposits[currentPaymentIndex].payout && deposits[currentPaymentIndex].paymentTime == 0) {
  at /unique_contracts/0x0f44ef14948994d9cae6a745bd46bf3122e60ac1.sol(175)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'x2':
    |        if (address(this).balance >= deposits[currentPaymentIndex].payout && deposits[currentPaymentIndex].paymentTime == 0) {
    |            deposits[currentPaymentIndex].paymentTime = now;
  > |            deposits[currentPaymentIndex].depositor.send(deposits[currentPaymentIndex].payout);
    |            emit OnPaymentSent(deposits[currentPaymentIndex].depositor, deposits[currentPaymentIndex].payout);
    |            currentPaymentIndex += 1;
  at /unique_contracts/0x0f44ef14948994d9cae6a745bd46bf3122e60ac1.sol(179)

[31mViolation[0m for UnrestrictedWrite in contract 'x2':
    |
    |/**
  > | * @title SafeMath
    | * @dev Math operations with safety checks that revert on error
    | */
  at /unique_contracts/0x0f44ef14948994d9cae6a745bd46bf3122e60ac1.sol(5)

[31mViolation[0m for UnrestrictedWrite in contract 'x2':
    |
    |        Deposit memory newDeposit = Deposit(msg.sender, msg.value, msg.value.mul(percent).div(100), now, 0);
  > |        deposits.push(newDeposit);
    |
    |        if (depositors[msg.sender].length == 0) depositorsCount += 1;
  at /unique_contracts/0x0f44ef14948994d9cae6a745bd46bf3122e60ac1.sol(165)

[31mViolation[0m for UnrestrictedWrite in contract 'x2':
    |        depositors[msg.sender].push(deposits.length - 1);
    |
  > |        amountRaised = amountRaised.add(msg.value);
    |
    |        emit OnDepositReceived(msg.sender, msg.value);
  at /unique_contracts/0x0f44ef14948994d9cae6a745bd46bf3122e60ac1.sol(171)

[33mWarning[0m for UnrestrictedWrite in contract 'x2':
    |        deposits.push(newDeposit);
    |
  > |        if (depositors[msg.sender].length == 0) depositorsCount += 1;
    |
    |        depositors[msg.sender].push(deposits.length - 1);
  at /unique_contracts/0x0f44ef14948994d9cae6a745bd46bf3122e60ac1.sol(167)

[33mWarning[0m for UnrestrictedWrite in contract 'x2':
    |
    |        if (address(this).balance >= deposits[currentPaymentIndex].payout && deposits[currentPaymentIndex].paymentTime == 0) {
  > |            deposits[currentPaymentIndex].paymentTime = now;
    |            deposits[currentPaymentIndex].depositor.send(deposits[currentPaymentIndex].payout);
    |            emit OnPaymentSent(deposits[currentPaymentIndex].depositor, deposits[currentPaymentIndex].payout);
  at /unique_contracts/0x0f44ef14948994d9cae6a745bd46bf3122e60ac1.sol(178)

[33mWarning[0m for UnrestrictedWrite in contract 'x2':
    |            deposits[currentPaymentIndex].depositor.send(deposits[currentPaymentIndex].payout);
    |            emit OnPaymentSent(deposits[currentPaymentIndex].depositor, deposits[currentPaymentIndex].payout);
  > |            currentPaymentIndex += 1;
    |        }
    |    }
  at /unique_contracts/0x0f44ef14948994d9cae6a745bd46bf3122e60ac1.sol(181)

[33mWarning[0m for UnrestrictedWrite in contract 'x2':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(owner, newOwner);
  > |        owner = newOwner;
    |    }
    |}
  at /unique_contracts/0x0f44ef14948994d9cae6a745bd46bf3122e60ac1.sol(119)