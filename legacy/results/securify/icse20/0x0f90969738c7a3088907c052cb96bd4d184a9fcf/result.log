/unique_chucks/9/0x0f90969738c7a3088907c052cb96bd4d184a9fcf.sol:166:5: Error: Functions are not allowed to have the same name as the contract. If you intend this to be a constructor, use "constructor(...) { ... }" to define it.
    function Ownable() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x0f90969738c7a3088907c052cb96bd4d184a9fcf.sol:370:5: Error: Functions are not allowed to have the same name as the contract. If you intend this to be a constructor, use "constructor(...) { ... }" to define it.
    function SimpleToken() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x0f90969738c7a3088907c052cb96bd4d184a9fcf.sol:6:1: Warning: Source file does not specify required compiler version! Consider adding "pragma solidity ^0.5.8;"
contract ERC20Basic {
^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x0f90969738c7a3088907c052cb96bd4d184a9fcf.sol:166:5: Warning: This declaration shadows an existing declaration.
    function Ownable() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x0f90969738c7a3088907c052cb96bd4d184a9fcf.sol:158:1: The shadowed declaration is here:
contract Ownable {
^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x0f90969738c7a3088907c052cb96bd4d184a9fcf.sol:370:5: Warning: This declaration shadows an existing declaration.
    function SimpleToken() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x0f90969738c7a3088907c052cb96bd4d184a9fcf.sol:359:1: The shadowed declaration is here:
contract SimpleToken is StandardToken {
^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x0f90969738c7a3088907c052cb96bd4d184a9fcf.sol:54:9: Error: Event invocations have to be prefixed by "emit".
        Transfer(msg.sender, _to, _value);
        ^-------------------------------^
/unique_chucks/9/0x0f90969738c7a3088907c052cb96bd4d184a9fcf.sol:88:9: Error: Event invocations have to be prefixed by "emit".
        Transfer(_from, _to, _value);
        ^--------------------------^
/unique_chucks/9/0x0f90969738c7a3088907c052cb96bd4d184a9fcf.sol:103:9: Error: Event invocations have to be prefixed by "emit".
        Approval(msg.sender, _spender, _value);
        ^------------------------------------^
/unique_chucks/9/0x0f90969738c7a3088907c052cb96bd4d184a9fcf.sol:127:9: Error: Event invocations have to be prefixed by "emit".
        Approval(msg.sender, _spender, allowed[msg.sender][_spender]);
        ^-----------------------------------------------------------^
/unique_chucks/9/0x0f90969738c7a3088907c052cb96bd4d184a9fcf.sol:148:9: Error: Event invocations have to be prefixed by "emit".
        Approval(msg.sender, _spender, allowed[msg.sender][_spender]);
        ^-----------------------------------------------------------^
/unique_chucks/9/0x0f90969738c7a3088907c052cb96bd4d184a9fcf.sol:182:9: Error: Event invocations have to be prefixed by "emit".
        OwnershipTransferred(owner, newOwner);
        ^-----------------------------------^
/unique_chucks/9/0x0f90969738c7a3088907c052cb96bd4d184a9fcf.sol:215:9: Error: Event invocations have to be prefixed by "emit".
        Pause();
        ^-----^
/unique_chucks/9/0x0f90969738c7a3088907c052cb96bd4d184a9fcf.sol:222:9: Error: Event invocations have to be prefixed by "emit".
        Unpause();
        ^-------^
/unique_chucks/9/0x0f90969738c7a3088907c052cb96bd4d184a9fcf.sol:275:9: Error: Event invocations have to be prefixed by "emit".
        Mint(_to, _amount);
        ^----------------^
/unique_chucks/9/0x0f90969738c7a3088907c052cb96bd4d184a9fcf.sol:276:9: Error: Event invocations have to be prefixed by "emit".
        Transfer(address(0), _to, _amount);
        ^--------------------------------^
/unique_chucks/9/0x0f90969738c7a3088907c052cb96bd4d184a9fcf.sol:284:9: Error: Event invocations have to be prefixed by "emit".
        MintFinished();
        ^------------^
/unique_chucks/9/0x0f90969738c7a3088907c052cb96bd4d184a9fcf.sol:373:9: Error: Event invocations have to be prefixed by "emit".
        Transfer(0x0, msg.sender, INITIAL_SUPPLY);
        ^---------------------------------------^
/unique_chucks/9/0x0f90969738c7a3088907c052cb96bd4d184a9fcf.sol:373:18: Error: Invalid type for argument in function call. Invalid implicit conversion from int_const 0 to address requested.
        Transfer(0x0, msg.sender, INITIAL_SUPPLY);
                 ^-^
/unique_chucks/9/0x0f90969738c7a3088907c052cb96bd4d184a9fcf.sol:394:23: Error: Wrong argument count for function call: 3 arguments given but expected 1. This function requires a single bytes argument. Use abi.encodePacked(...) to obtain the pre-0.5.0 behaviour or abi.encode(...) to use ABI encoding.
        bytes32 sha = keccak256("bioLock", msg.sender, rightNow);
                      ^----------------------------------------^
/unique_chucks/9/0x0f90969738c7a3088907c052cb96bd4d184a9fcf.sol:397:9: Error: Event invocations have to be prefixed by "emit".
        BiometricLocked(msg.sender, sha);
        ^------------------------------^
/unique_chucks/9/0x0f90969738c7a3088907c052cb96bd4d184a9fcf.sol:405:30: Error: Wrong argument count for function call: 3 arguments given but expected 1. This function requires a single bytes argument. Use abi.encodePacked(...) to obtain the pre-0.5.0 behaviour or abi.encode(...) to use ABI encoding.
        bytes32 bioLockSha = keccak256("bioLock", msg.sender, biometricNow[sha]);
                             ^-------------------------------------------------^
/unique_chucks/9/0x0f90969738c7a3088907c052cb96bd4d184a9fcf.sol:409:9: Error: Event invocations have to be prefixed by "emit".
        BiometricUnlocked(msg.sender);
        ^---------------------------^
/unique_chucks/9/0x0f90969738c7a3088907c052cb96bd4d184a9fcf.sol:462:27: Error: Wrong argument count for function call: 5 arguments given but expected 1. This function requires a single bytes argument. Use abi.encodePacked(...) to obtain the pre-0.5.0 behaviour or abi.encode(...) to use ABI encoding.
            bytes32 sha = keccak256("transfer", msg.sender, _to, _value, rightNow);
                          ^------------------------------------------------------^
/unique_chucks/9/0x0f90969738c7a3088907c052cb96bd4d184a9fcf.sol:467:13: Error: Event invocations have to be prefixed by "emit".
            BiometricTransferRequest(msg.sender, _to, _value, sha);
            ^----------------------------------------------------^
/unique_chucks/9/0x0f90969738c7a3088907c052cb96bd4d184a9fcf.sol:483:27: Error: Wrong argument count for function call: 5 arguments given but expected 1. This function requires a single bytes argument. Use abi.encodePacked(...) to obtain the pre-0.5.0 behaviour or abi.encode(...) to use ABI encoding.
            bytes32 sha = keccak256("transferFrom", _from, _to, _value, rightNow);
                          ^-----------------------------------------------------^
/unique_chucks/9/0x0f90969738c7a3088907c052cb96bd4d184a9fcf.sol:489:13: Error: Event invocations have to be prefixed by "emit".
            BiometricTransferRequest(_from, _to, _value, sha);
            ^-----------------------------------------------^
/unique_chucks/9/0x0f90969738c7a3088907c052cb96bd4d184a9fcf.sol:500:27: Error: Wrong argument count for function call: 5 arguments given but expected 1. This function requires a single bytes argument. Use abi.encodePacked(...) to obtain the pre-0.5.0 behaviour or abi.encode(...) to use ABI encoding.
            bytes32 sha = keccak256("approve", msg.sender, _spender, _value, rightNow);
                          ^----------------------------------------------------------^
/unique_chucks/9/0x0f90969738c7a3088907c052cb96bd4d184a9fcf.sol:505:13: Error: Event invocations have to be prefixed by "emit".
            BiometricApprovalRequest(msg.sender, _spender, _value, sha);
            ^---------------------------------------------------------^
/unique_chucks/9/0x0f90969738c7a3088907c052cb96bd4d184a9fcf.sol:517:27: Error: Wrong argument count for function call: 5 arguments given but expected 1. This function requires a single bytes argument. Use abi.encodePacked(...) to obtain the pre-0.5.0 behaviour or abi.encode(...) to use ABI encoding.
            bytes32 sha = keccak256("increaseApproval", msg.sender, _spender, newValue, rightNow);
                          ^---------------------------------------------------------------------^
/unique_chucks/9/0x0f90969738c7a3088907c052cb96bd4d184a9fcf.sol:522:13: Error: Event invocations have to be prefixed by "emit".
            BiometricApprovalRequest(msg.sender, _spender, newValue, sha);
            ^-----------------------------------------------------------^
/unique_chucks/9/0x0f90969738c7a3088907c052cb96bd4d184a9fcf.sol:541:27: Error: Wrong argument count for function call: 5 arguments given but expected 1. This function requires a single bytes argument. Use abi.encodePacked(...) to obtain the pre-0.5.0 behaviour or abi.encode(...) to use ABI encoding.
            bytes32 sha = keccak256("decreaseApproval", msg.sender, _spender, newValue, rightNow);
                          ^---------------------------------------------------------------------^
/unique_chucks/9/0x0f90969738c7a3088907c052cb96bd4d184a9fcf.sol:546:13: Error: Event invocations have to be prefixed by "emit".
            BiometricApprovalRequest(msg.sender, _spender, newValue, sha);
            ^-----------------------------------------------------------^
/unique_chucks/9/0x0f90969738c7a3088907c052cb96bd4d184a9fcf.sol:559:35: Error: Wrong argument count for function call: 5 arguments given but expected 1. This function requires a single bytes argument. Use abi.encodePacked(...) to obtain the pre-0.5.0 behaviour or abi.encode(...) to use ABI encoding.
        bytes32 transferFromSha = keccak256("transferFrom", biometricFrom[sha], biometricTo[sha], biometricAmount[sha], biometricNow[sha]);
                                  ^------------------------------------------------------------------------------------------------------^
/unique_chucks/9/0x0f90969738c7a3088907c052cb96bd4d184a9fcf.sol:560:31: Error: Wrong argument count for function call: 5 arguments given but expected 1. This function requires a single bytes argument. Use abi.encodePacked(...) to obtain the pre-0.5.0 behaviour or abi.encode(...) to use ABI encoding.
        bytes32 transferSha = keccak256("transfer", biometricFrom[sha], biometricTo[sha], biometricAmount[sha], biometricNow[sha]);
                              ^--------------------------------------------------------------------------------------------------^
/unique_chucks/9/0x0f90969738c7a3088907c052cb96bd4d184a9fcf.sol:574:13: Error: Event invocations have to be prefixed by "emit".
            Transfer(_from, _to, _value);
            ^--------------------------^
/unique_chucks/9/0x0f90969738c7a3088907c052cb96bd4d184a9fcf.sol:597:30: Error: Wrong argument count for function call: 5 arguments given but expected 1. This function requires a single bytes argument. Use abi.encodePacked(...) to obtain the pre-0.5.0 behaviour or abi.encode(...) to use ABI encoding.
        bytes32 approveSha = keccak256("approve", biometricFrom[sha], biometricTo[sha], biometricAmount[sha], biometricNow[sha]);
                             ^-------------------------------------------------------------------------------------------------^
/unique_chucks/9/0x0f90969738c7a3088907c052cb96bd4d184a9fcf.sol:598:39: Error: Wrong argument count for function call: 5 arguments given but expected 1. This function requires a single bytes argument. Use abi.encodePacked(...) to obtain the pre-0.5.0 behaviour or abi.encode(...) to use ABI encoding.
        bytes32 increaseApprovalSha = keccak256("increaseApproval", biometricFrom[sha], biometricTo[sha], biometricAmount[sha], biometricNow[sha]);
                                      ^----------------------------------------------------------------------------------------------------------^
/unique_chucks/9/0x0f90969738c7a3088907c052cb96bd4d184a9fcf.sol:599:39: Error: Wrong argument count for function call: 5 arguments given but expected 1. This function requires a single bytes argument. Use abi.encodePacked(...) to obtain the pre-0.5.0 behaviour or abi.encode(...) to use ABI encoding.
        bytes32 decreaseApprovalSha = keccak256("decreaseApproval", biometricFrom[sha], biometricTo[sha], biometricAmount[sha], biometricNow[sha]);
                                      ^----------------------------------------------------------------------------------------------------------^
/unique_chucks/9/0x0f90969738c7a3088907c052cb96bd4d184a9fcf.sol:694:55: Error: Using "years" as a unit denomination is deprecated.
        presaleHolderUnlockDate[_beneficiary] = now + 1 years;
                                                      ^-----^
Exception in thread "main" java.lang.RuntimeException
	at ch.securify.CompilationHelpers.compileContracts(CompilationHelpers.java:115)
	at ch.securify.Main.processSolidityFile(Main.java:98)
	at ch.securify.Main.main(Main.java:254)