Processing contract: /unique_chucks/41/0xd0a87c106c3cb3be6662f0bc02d3e86f2bc7c170.sol:Abilitable
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/41/0xd0a87c106c3cb3be6662f0bc02d3e86f2bc7c170.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/41/0xd0a87c106c3cb3be6662f0bc02d3e86f2bc7c170.sol:XcertMutable
Processing contract: /unique_chucks/41/0xd0a87c106c3cb3be6662f0bc02d3e86f2bc7c170.sol:XcertUpdateProxy
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for MissingInputValidation in contract 'Abilitable':
    |   * @dev Maps address to ability ids.
    |   */
  > |  mapping(address => uint256) public addressToAbility;
    |
    |  /**
  at /unique_chucks/41/0xd0a87c106c3cb3be6662f0bc02d3e86f2bc7c170.sol(176)

[31mViolation[0m for MissingInputValidation in contract 'Abilitable':
    |   * @param _abilities Number representing bitfield of abilities we are granting.
    |   */
  > |  function grantAbilities(
    |    address _target,
    |    uint256 _abilities
  at /unique_chucks/41/0xd0a87c106c3cb3be6662f0bc02d3e86f2bc7c170.sol(229)

[31mViolation[0m for MissingInputValidation in contract 'Abilitable':
    |   * @param _abilities Number representing bitfield of abilities we are checking.
    |   */
  > |  function isAble(
    |    address _target,
    |    uint256 _abilities
  at /unique_chucks/41/0xd0a87c106c3cb3be6662f0bc02d3e86f2bc7c170.sol(268)

[33mWarning[0m for MissingInputValidation in contract 'Abilitable':
    |   * ability by mistake.
    |   */
  > |  function revokeAbilities(
    |    address _target,
    |    uint256 _abilities,
  at /unique_chucks/41/0xd0a87c106c3cb3be6662f0bc02d3e86f2bc7c170.sol(247)

[31mViolation[0m for UnrestrictedWrite in contract 'Abilitable':
    |    hasAbilities(SUPER_ABILITY)
    |  {
  > |    addressToAbility[_target] |= _abilities;
    |    emit GrantAbilities(_target, _abilities);
    |  }
  at /unique_chucks/41/0xd0a87c106c3cb3be6662f0bc02d3e86f2bc7c170.sol(236)

[31mViolation[0m for UnrestrictedWrite in contract 'Abilitable':
    |      require((_abilities & 1) == 0, CANNOT_REVOKE_OWN_SUPER_ABILITY);
    |    }
  > |    addressToAbility[_target] &= ~_abilities;
    |    emit RevokeAbilities(_target, _abilities);
    |  }
  at /unique_chucks/41/0xd0a87c106c3cb3be6662f0bc02d3e86f2bc7c170.sol(259)

[31mViolation[0m for MissingInputValidation in contract 'XcertUpdateProxy':
    |   * @dev Maps address to ability ids.
    |   */
  > |  mapping(address => uint256) public addressToAbility;
    |
    |  /**
  at /unique_chucks/41/0xd0a87c106c3cb3be6662f0bc02d3e86f2bc7c170.sol(176)

[31mViolation[0m for MissingInputValidation in contract 'XcertUpdateProxy':
    |   * @param _abilities Number representing bitfield of abilities we are granting.
    |   */
  > |  function grantAbilities(
    |    address _target,
    |    uint256 _abilities
  at /unique_chucks/41/0xd0a87c106c3cb3be6662f0bc02d3e86f2bc7c170.sol(229)

[31mViolation[0m for MissingInputValidation in contract 'XcertUpdateProxy':
    |   * @param _abilities Number representing bitfield of abilities we are checking.
    |   */
  > |  function isAble(
    |    address _target,
    |    uint256 _abilities
  at /unique_chucks/41/0xd0a87c106c3cb3be6662f0bc02d3e86f2bc7c170.sol(268)

[31mViolation[0m for MissingInputValidation in contract 'XcertUpdateProxy':
    |   * @param _imprint Cryptographic asset imprint.
    |   */
  > |  function update(
    |    address _xcert,
    |    uint256 _id,
  at /unique_chucks/41/0xd0a87c106c3cb3be6662f0bc02d3e86f2bc7c170.sol(304)

[33mWarning[0m for MissingInputValidation in contract 'XcertUpdateProxy':
    |   * ability by mistake.
    |   */
  > |  function revokeAbilities(
    |    address _target,
    |    uint256 _abilities,
  at /unique_chucks/41/0xd0a87c106c3cb3be6662f0bc02d3e86f2bc7c170.sol(247)

[31mViolation[0m for UnrestrictedWrite in contract 'XcertUpdateProxy':
    |    hasAbilities(SUPER_ABILITY)
    |  {
  > |    addressToAbility[_target] |= _abilities;
    |    emit GrantAbilities(_target, _abilities);
    |  }
  at /unique_chucks/41/0xd0a87c106c3cb3be6662f0bc02d3e86f2bc7c170.sol(236)

[31mViolation[0m for UnrestrictedWrite in contract 'XcertUpdateProxy':
    |      require((_abilities & 1) == 0, CANNOT_REVOKE_OWN_SUPER_ABILITY);
    |    }
  > |    addressToAbility[_target] &= ~_abilities;
    |    emit RevokeAbilities(_target, _abilities);
    |  }
  at /unique_chucks/41/0xd0a87c106c3cb3be6662f0bc02d3e86f2bc7c170.sol(259)