Processing contract: /unique_chucks/25/0xecdbcdc7bae3500be24e171fc2bceb4f6b3430bb.sol:Address
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/25/0xecdbcdc7bae3500be24e171fc2bceb4f6b3430bb.sol:Auction4Reputation
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/25/0xecdbcdc7bae3500be24e171fc2bceb4f6b3430bb.sol:Avatar
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/25/0xecdbcdc7bae3500be24e171fc2bceb4f6b3430bb.sol:ControllerInterface
Processing contract: /unique_chucks/25/0xecdbcdc7bae3500be24e171fc2bceb4f6b3430bb.sol:DAOToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/25/0xecdbcdc7bae3500be24e171fc2bceb4f6b3430bb.sol:DxGenAuction4Rep
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/25/0xecdbcdc7bae3500be24e171fc2bceb4f6b3430bb.sol:ERC20
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/25/0xecdbcdc7bae3500be24e171fc2bceb4f6b3430bb.sol:ERC20Burnable
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/25/0xecdbcdc7bae3500be24e171fc2bceb4f6b3430bb.sol:GlobalConstraintInterface
Processing contract: /unique_chucks/25/0xecdbcdc7bae3500be24e171fc2bceb4f6b3430bb.sol:IERC20
Processing contract: /unique_chucks/25/0xecdbcdc7bae3500be24e171fc2bceb4f6b3430bb.sol:Ownable
Processing contract: /unique_chucks/25/0xecdbcdc7bae3500be24e171fc2bceb4f6b3430bb.sol:Reputation
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/25/0xecdbcdc7bae3500be24e171fc2bceb4f6b3430bb.sol:SafeERC20
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/25/0xecdbcdc7bae3500be24e171fc2bceb4f6b3430bb.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for LockedEther in contract 'Auction4Reputation':
    |
    |
  > |contract Auction4Reputation is Ownable {
    |    using SafeMath for uint256;
    |    using SafeERC20 for address;
  at /unique_chucks/25/0xecdbcdc7bae3500be24e171fc2bceb4f6b3430bb.sol(1022)

[31mViolation[0m for UnrestrictedWrite in contract 'Auction4Reputation':
    |        uint256 bid = auction.bids[_beneficiary];
    |        require(bid > 0, "bidding amount should be > 0");
  > |        auction.bids[_beneficiary] = 0;
    |        uint256 repRelation = bid.mul(auctionReputationReward);
    |        reputation = repRelation.div(auction.totalBid);
  at /unique_chucks/25/0xecdbcdc7bae3500be24e171fc2bceb4f6b3430bb.sol(1108)

[33mWarning[0m for UnrestrictedWrite in contract 'Auction4Reputation':
    |        auctionId = (now - auctionsStartTime) / auctionPeriod;
    |        Auction storage auction = auctions[auctionId];
  > |        auction.totalBid = auction.totalBid.add(_amount);
    |        auction.bids[msg.sender] = auction.bids[msg.sender].add(_amount);
    |        emit Bid(msg.sender, auctionId, _amount);
  at /unique_chucks/25/0xecdbcdc7bae3500be24e171fc2bceb4f6b3430bb.sol(1134)

[33mWarning[0m for UnrestrictedWrite in contract 'Auction4Reputation':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipTransferred(_owner, address(0));
  > |        _owner = address(0);
    |    }
    |
  at /unique_chucks/25/0xecdbcdc7bae3500be24e171fc2bceb4f6b3430bb.sol(55)

[33mWarning[0m for UnrestrictedWrite in contract 'Auction4Reputation':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_chucks/25/0xecdbcdc7bae3500be24e171fc2bceb4f6b3430bb.sol(73)

[33mWarning[0m for UnrestrictedWrite in contract 'Auction4Reputation':
    |        //_auctionPeriod should be greater than block interval
    |        require(_auctionPeriod > 15, "auctionPeriod should be > 15");
  > |        auctionPeriod = _auctionPeriod;
    |        auctionsEndTime = _auctionsStartTime + _auctionPeriod.mul(_numberOfAuctions);
    |        require(_redeemEnableTime >= auctionsEndTime, "_redeemEnableTime >= auctionsEndTime");
  at /unique_chucks/25/0xecdbcdc7bae3500be24e171fc2bceb4f6b3430bb.sol(1083)

[33mWarning[0m for UnrestrictedWrite in contract 'Auction4Reputation':
    |        require(_auctionPeriod > 15, "auctionPeriod should be > 15");
    |        auctionPeriod = _auctionPeriod;
  > |        auctionsEndTime = _auctionsStartTime + _auctionPeriod.mul(_numberOfAuctions);
    |        require(_redeemEnableTime >= auctionsEndTime, "_redeemEnableTime >= auctionsEndTime");
    |        token = _token;
  at /unique_chucks/25/0xecdbcdc7bae3500be24e171fc2bceb4f6b3430bb.sol(1084)

[33mWarning[0m for UnrestrictedWrite in contract 'Auction4Reputation':
    |        auctionsEndTime = _auctionsStartTime + _auctionPeriod.mul(_numberOfAuctions);
    |        require(_redeemEnableTime >= auctionsEndTime, "_redeemEnableTime >= auctionsEndTime");
  > |        token = _token;
    |        avatar = _avatar;
    |        auctionsStartTime = _auctionsStartTime;
  at /unique_chucks/25/0xecdbcdc7bae3500be24e171fc2bceb4f6b3430bb.sol(1086)

[33mWarning[0m for UnrestrictedWrite in contract 'Auction4Reputation':
    |        require(_redeemEnableTime >= auctionsEndTime, "_redeemEnableTime >= auctionsEndTime");
    |        token = _token;
  > |        avatar = _avatar;
    |        auctionsStartTime = _auctionsStartTime;
    |        numberOfAuctions = _numberOfAuctions;
  at /unique_chucks/25/0xecdbcdc7bae3500be24e171fc2bceb4f6b3430bb.sol(1087)

[33mWarning[0m for UnrestrictedWrite in contract 'Auction4Reputation':
    |        token = _token;
    |        avatar = _avatar;
  > |        auctionsStartTime = _auctionsStartTime;
    |        numberOfAuctions = _numberOfAuctions;
    |        wallet = _wallet;
  at /unique_chucks/25/0xecdbcdc7bae3500be24e171fc2bceb4f6b3430bb.sol(1088)

[33mWarning[0m for UnrestrictedWrite in contract 'Auction4Reputation':
    |        avatar = _avatar;
    |        auctionsStartTime = _auctionsStartTime;
  > |        numberOfAuctions = _numberOfAuctions;
    |        wallet = _wallet;
    |        auctionReputationReward = _auctionReputationReward;
  at /unique_chucks/25/0xecdbcdc7bae3500be24e171fc2bceb4f6b3430bb.sol(1089)

[33mWarning[0m for UnrestrictedWrite in contract 'Auction4Reputation':
    |        auctionsStartTime = _auctionsStartTime;
    |        numberOfAuctions = _numberOfAuctions;
  > |        wallet = _wallet;
    |        auctionReputationReward = _auctionReputationReward;
    |        reputationRewardLeft = _auctionReputationReward.mul(_numberOfAuctions);
  at /unique_chucks/25/0xecdbcdc7bae3500be24e171fc2bceb4f6b3430bb.sol(1090)

[33mWarning[0m for UnrestrictedWrite in contract 'Auction4Reputation':
    |        numberOfAuctions = _numberOfAuctions;
    |        wallet = _wallet;
  > |        auctionReputationReward = _auctionReputationReward;
    |        reputationRewardLeft = _auctionReputationReward.mul(_numberOfAuctions);
    |        redeemEnableTime = _redeemEnableTime;
  at /unique_chucks/25/0xecdbcdc7bae3500be24e171fc2bceb4f6b3430bb.sol(1091)

[33mWarning[0m for UnrestrictedWrite in contract 'Auction4Reputation':
    |        wallet = _wallet;
    |        auctionReputationReward = _auctionReputationReward;
  > |        reputationRewardLeft = _auctionReputationReward.mul(_numberOfAuctions);
    |        redeemEnableTime = _redeemEnableTime;
    |    }
  at /unique_chucks/25/0xecdbcdc7bae3500be24e171fc2bceb4f6b3430bb.sol(1092)

[33mWarning[0m for UnrestrictedWrite in contract 'Auction4Reputation':
    |        auctionReputationReward = _auctionReputationReward;
    |        reputationRewardLeft = _auctionReputationReward.mul(_numberOfAuctions);
  > |        redeemEnableTime = _redeemEnableTime;
    |    }
    |
  at /unique_chucks/25/0xecdbcdc7bae3500be24e171fc2bceb4f6b3430bb.sol(1093)

[33mWarning[0m for UnrestrictedWrite in contract 'Auction4Reputation':
    |        reputation = repRelation.div(auction.totalBid);
    |        // check that the reputation is sum zero
  > |        reputationRewardLeft = reputationRewardLeft.sub(reputation);
    |        require(
    |        ControllerInterface(avatar.owner())
  at /unique_chucks/25/0xecdbcdc7bae3500be24e171fc2bceb4f6b3430bb.sol(1112)

[33mWarning[0m for UnhandledException in contract 'Avatar':
    |    returns(bool success, bytes memory returnValue) {
    |      // solhint-disable-next-line avoid-low-level-calls
  > |        (success, returnValue) = _contract.call(_data);
    |        emit GenericCall(_contract, _data, success);
    |    }
  at /unique_chucks/25/0xecdbcdc7bae3500be24e171fc2bceb4f6b3430bb.sol(737)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'Avatar':
    |    */
    |    function sendEther(uint256 _amountInWei, address payable _to) public onlyOwner returns(bool) {
  > |        _to.transfer(_amountInWei);
    |        emit SendEther(_amountInWei, _to);
    |        return true;
  at /unique_chucks/25/0xecdbcdc7bae3500be24e171fc2bceb4f6b3430bb.sol(748)

[33mWarning[0m for UnrestrictedWrite in contract 'Avatar':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipTransferred(_owner, address(0));
  > |        _owner = address(0);
    |    }
    |
  at /unique_chucks/25/0xecdbcdc7bae3500be24e171fc2bceb4f6b3430bb.sol(55)

[33mWarning[0m for UnrestrictedWrite in contract 'Avatar':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_chucks/25/0xecdbcdc7bae3500be24e171fc2bceb4f6b3430bb.sol(73)

[31mViolation[0m for LockedEther in contract 'DAOToken':
    | */
    |
  > |contract DAOToken is ERC20, ERC20Burnable, Ownable {
    |
    |    string public name;
  at /unique_chucks/25/0xecdbcdc7bae3500be24e171fc2bceb4f6b3430bb.sol(557)

[31mViolation[0m for LockedEther in contract 'DxGenAuction4Rep':
    | * @title Scheme for conducting ERC20 Tokens auctions for reputation
    | */
  > |contract DxGenAuction4Rep is Auction4Reputation {
    |    constructor() public {}
    |}
  at /unique_chucks/25/0xecdbcdc7bae3500be24e171fc2bceb4f6b3430bb.sol(1167)

[31mViolation[0m for UnrestrictedWrite in contract 'DxGenAuction4Rep':
    |        uint256 bid = auction.bids[_beneficiary];
    |        require(bid > 0, "bidding amount should be > 0");
  > |        auction.bids[_beneficiary] = 0;
    |        uint256 repRelation = bid.mul(auctionReputationReward);
    |        reputation = repRelation.div(auction.totalBid);
  at /unique_chucks/25/0xecdbcdc7bae3500be24e171fc2bceb4f6b3430bb.sol(1108)

[33mWarning[0m for UnrestrictedWrite in contract 'DxGenAuction4Rep':
    |        auctionId = (now - auctionsStartTime) / auctionPeriod;
    |        Auction storage auction = auctions[auctionId];
  > |        auction.totalBid = auction.totalBid.add(_amount);
    |        auction.bids[msg.sender] = auction.bids[msg.sender].add(_amount);
    |        emit Bid(msg.sender, auctionId, _amount);
  at /unique_chucks/25/0xecdbcdc7bae3500be24e171fc2bceb4f6b3430bb.sol(1134)

[33mWarning[0m for UnrestrictedWrite in contract 'DxGenAuction4Rep':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipTransferred(_owner, address(0));
  > |        _owner = address(0);
    |    }
    |
  at /unique_chucks/25/0xecdbcdc7bae3500be24e171fc2bceb4f6b3430bb.sol(55)

[33mWarning[0m for UnrestrictedWrite in contract 'DxGenAuction4Rep':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_chucks/25/0xecdbcdc7bae3500be24e171fc2bceb4f6b3430bb.sol(73)

[33mWarning[0m for UnrestrictedWrite in contract 'DxGenAuction4Rep':
    |        //_auctionPeriod should be greater than block interval
    |        require(_auctionPeriod > 15, "auctionPeriod should be > 15");
  > |        auctionPeriod = _auctionPeriod;
    |        auctionsEndTime = _auctionsStartTime + _auctionPeriod.mul(_numberOfAuctions);
    |        require(_redeemEnableTime >= auctionsEndTime, "_redeemEnableTime >= auctionsEndTime");
  at /unique_chucks/25/0xecdbcdc7bae3500be24e171fc2bceb4f6b3430bb.sol(1083)

[33mWarning[0m for UnrestrictedWrite in contract 'DxGenAuction4Rep':
    |        require(_auctionPeriod > 15, "auctionPeriod should be > 15");
    |        auctionPeriod = _auctionPeriod;
  > |        auctionsEndTime = _auctionsStartTime + _auctionPeriod.mul(_numberOfAuctions);
    |        require(_redeemEnableTime >= auctionsEndTime, "_redeemEnableTime >= auctionsEndTime");
    |        token = _token;
  at /unique_chucks/25/0xecdbcdc7bae3500be24e171fc2bceb4f6b3430bb.sol(1084)

[33mWarning[0m for UnrestrictedWrite in contract 'DxGenAuction4Rep':
    |        auctionsEndTime = _auctionsStartTime + _auctionPeriod.mul(_numberOfAuctions);
    |        require(_redeemEnableTime >= auctionsEndTime, "_redeemEnableTime >= auctionsEndTime");
  > |        token = _token;
    |        avatar = _avatar;
    |        auctionsStartTime = _auctionsStartTime;
  at /unique_chucks/25/0xecdbcdc7bae3500be24e171fc2bceb4f6b3430bb.sol(1086)

[33mWarning[0m for UnrestrictedWrite in contract 'DxGenAuction4Rep':
    |        require(_redeemEnableTime >= auctionsEndTime, "_redeemEnableTime >= auctionsEndTime");
    |        token = _token;
  > |        avatar = _avatar;
    |        auctionsStartTime = _auctionsStartTime;
    |        numberOfAuctions = _numberOfAuctions;
  at /unique_chucks/25/0xecdbcdc7bae3500be24e171fc2bceb4f6b3430bb.sol(1087)

[33mWarning[0m for UnrestrictedWrite in contract 'DxGenAuction4Rep':
    |        token = _token;
    |        avatar = _avatar;
  > |        auctionsStartTime = _auctionsStartTime;
    |        numberOfAuctions = _numberOfAuctions;
    |        wallet = _wallet;
  at /unique_chucks/25/0xecdbcdc7bae3500be24e171fc2bceb4f6b3430bb.sol(1088)

[33mWarning[0m for UnrestrictedWrite in contract 'DxGenAuction4Rep':
    |        avatar = _avatar;
    |        auctionsStartTime = _auctionsStartTime;
  > |        numberOfAuctions = _numberOfAuctions;
    |        wallet = _wallet;
    |        auctionReputationReward = _auctionReputationReward;
  at /unique_chucks/25/0xecdbcdc7bae3500be24e171fc2bceb4f6b3430bb.sol(1089)

[33mWarning[0m for UnrestrictedWrite in contract 'DxGenAuction4Rep':
    |        auctionsStartTime = _auctionsStartTime;
    |        numberOfAuctions = _numberOfAuctions;
  > |        wallet = _wallet;
    |        auctionReputationReward = _auctionReputationReward;
    |        reputationRewardLeft = _auctionReputationReward.mul(_numberOfAuctions);
  at /unique_chucks/25/0xecdbcdc7bae3500be24e171fc2bceb4f6b3430bb.sol(1090)

[33mWarning[0m for UnrestrictedWrite in contract 'DxGenAuction4Rep':
    |        numberOfAuctions = _numberOfAuctions;
    |        wallet = _wallet;
  > |        auctionReputationReward = _auctionReputationReward;
    |        reputationRewardLeft = _auctionReputationReward.mul(_numberOfAuctions);
    |        redeemEnableTime = _redeemEnableTime;
  at /unique_chucks/25/0xecdbcdc7bae3500be24e171fc2bceb4f6b3430bb.sol(1091)

[33mWarning[0m for UnrestrictedWrite in contract 'DxGenAuction4Rep':
    |        wallet = _wallet;
    |        auctionReputationReward = _auctionReputationReward;
  > |        reputationRewardLeft = _auctionReputationReward.mul(_numberOfAuctions);
    |        redeemEnableTime = _redeemEnableTime;
    |    }
  at /unique_chucks/25/0xecdbcdc7bae3500be24e171fc2bceb4f6b3430bb.sol(1092)

[33mWarning[0m for UnrestrictedWrite in contract 'DxGenAuction4Rep':
    |        auctionReputationReward = _auctionReputationReward;
    |        reputationRewardLeft = _auctionReputationReward.mul(_numberOfAuctions);
  > |        redeemEnableTime = _redeemEnableTime;
    |    }
    |
  at /unique_chucks/25/0xecdbcdc7bae3500be24e171fc2bceb4f6b3430bb.sol(1093)

[33mWarning[0m for UnrestrictedWrite in contract 'DxGenAuction4Rep':
    |        reputation = repRelation.div(auction.totalBid);
    |        // check that the reputation is sum zero
  > |        reputationRewardLeft = reputationRewardLeft.sub(reputation);
    |        require(
    |        ControllerInterface(avatar.owner())
  at /unique_chucks/25/0xecdbcdc7bae3500be24e171fc2bceb4f6b3430bb.sol(1112)

[33mWarning[0m for UnrestrictedWrite in contract 'ERC20Burnable':
    |        require(account != address(0));
    |
  > |        _totalSupply = _totalSupply.sub(value);
    |        _balances[account] = _balances[account].sub(value);
    |        emit Transfer(account, address(0), value);
  at /unique_chucks/25/0xecdbcdc7bae3500be24e171fc2bceb4f6b3430bb.sol(505)

[31mViolation[0m for UnrestrictedWrite in contract 'Reputation':
    | */
    |
  > |contract Reputation is Ownable {
    |
    |    uint8 public decimals = 18;             //Number of decimals of the smallest unit
  at /unique_chucks/25/0xecdbcdc7bae3500be24e171fc2bceb4f6b3430bb.sol(88)

[33mWarning[0m for UnrestrictedWrite in contract 'Reputation':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipTransferred(_owner, address(0));
  > |        _owner = address(0);
    |    }
    |
  at /unique_chucks/25/0xecdbcdc7bae3500be24e171fc2bceb4f6b3430bb.sol(55)

[33mWarning[0m for UnrestrictedWrite in contract 'Reputation':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_chucks/25/0xecdbcdc7bae3500be24e171fc2bceb4f6b3430bb.sol(73)

[33mWarning[0m for UnrestrictedWrite in contract 'Reputation':
    | */
    |
  > |contract Reputation is Ownable {
    |
    |    uint8 public decimals = 18;             //Number of decimals of the smallest unit
  at /unique_chucks/25/0xecdbcdc7bae3500be24e171fc2bceb4f6b3430bb.sol(88)

[33mWarning[0m for UnrestrictedWrite in contract 'Reputation':
    |        if ((checkpoints.length == 0) || (checkpoints[checkpoints.length - 1].fromBlock < block.number)) {
    |            Checkpoint storage newCheckPoint = checkpoints[checkpoints.length++];
  > |            newCheckPoint.fromBlock = uint128(block.number);
    |            newCheckPoint.value = uint128(_value);
    |        } else {
  at /unique_chucks/25/0xecdbcdc7bae3500be24e171fc2bceb4f6b3430bb.sol(241)

[33mWarning[0m for UnrestrictedWrite in contract 'Reputation':
    |            Checkpoint storage newCheckPoint = checkpoints[checkpoints.length++];
    |            newCheckPoint.fromBlock = uint128(block.number);
  > |            newCheckPoint.value = uint128(_value);
    |        } else {
    |            Checkpoint storage oldCheckPoint = checkpoints[checkpoints.length-1];
  at /unique_chucks/25/0xecdbcdc7bae3500be24e171fc2bceb4f6b3430bb.sol(242)

[33mWarning[0m for UnrestrictedWrite in contract 'Reputation':
    |        } else {
    |            Checkpoint storage oldCheckPoint = checkpoints[checkpoints.length-1];
  > |            oldCheckPoint.value = uint128(_value);
    |        }
    |    }
  at /unique_chucks/25/0xecdbcdc7bae3500be24e171fc2bceb4f6b3430bb.sol(245)