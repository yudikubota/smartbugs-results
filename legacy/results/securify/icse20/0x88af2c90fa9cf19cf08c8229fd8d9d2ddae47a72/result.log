Processing contract: /unique_chucks/36/0x88af2c90fa9cf19cf08c8229fd8d9d2ddae47a72.sol:ERC20
Processing contract: /unique_chucks/36/0x88af2c90fa9cf19cf08c8229fd8d9d2ddae47a72.sol:ERC223
Processing contract: /unique_chucks/36/0x88af2c90fa9cf19cf08c8229fd8d9d2ddae47a72.sol:ERC223ReceivingContract
Processing contract: /unique_chucks/36/0x88af2c90fa9cf19cf08c8229fd8d9d2ddae47a72.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/36/0x88af2c90fa9cf19cf08c8229fd8d9d2ddae47a72.sol:VRC
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for LockedEther in contract 'VRC':
    |}
    |
  > |contract VRC is ERC20, ERC223 {
    |  using SafeMath for uint;
    |     
  at /unique_chucks/36/0x88af2c90fa9cf19cf08c8229fd8d9d2ddae47a72.sol(51)

[33mWarning[0m for UnrestrictedWrite in contract 'VRC':
    |     require(_value <= balances[msg.sender]);
    |     balances[msg.sender] = SafeMath.sub(balances[msg.sender], _value);
  > |     balances[_to] = SafeMath.add(balances[_to], _value);
    |     emit Transfer(msg.sender, _to, _value);
    |     return true;
  at /unique_chucks/36/0x88af2c90fa9cf19cf08c8229fd8d9d2ddae47a72.sol(102)

[33mWarning[0m for UnrestrictedWrite in contract 'VRC':
    |     require(_value <= allowed[_from][msg.sender]);
    |
  > |    balances[_from] = SafeMath.sub(balances[_from], _value);
    |     balances[_to] = SafeMath.add(balances[_to], _value);
    |     allowed[_from][msg.sender] = SafeMath.sub(allowed[_from][msg.sender], _value);
  at /unique_chucks/36/0x88af2c90fa9cf19cf08c8229fd8d9d2ddae47a72.sol(116)

[33mWarning[0m for UnrestrictedWrite in contract 'VRC':
    |
    |    balances[_from] = SafeMath.sub(balances[_from], _value);
  > |     balances[_to] = SafeMath.add(balances[_to], _value);
    |     allowed[_from][msg.sender] = SafeMath.sub(allowed[_from][msg.sender], _value);
    |     emit Transfer(_from, _to, _value);
  at /unique_chucks/36/0x88af2c90fa9cf19cf08c8229fd8d9d2ddae47a72.sol(117)

[33mWarning[0m for UnrestrictedWrite in contract 'VRC':
    |    }
    |        balances[msg.sender] = balances[msg.sender].sub(_value);
  > |        balances[_to] = balances[_to].add(_value);
    |        emit Transfer(msg.sender, _to, _value, _data);
    |    }
  at /unique_chucks/36/0x88af2c90fa9cf19cf08c8229fd8d9d2ddae47a72.sol(157)