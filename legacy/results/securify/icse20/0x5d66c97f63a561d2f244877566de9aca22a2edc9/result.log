Processing contract: /unique_contracts/0x5d66c97f63a561d2f244877566de9aca22a2edc9.sol:BaseERC20Token
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0x5d66c97f63a561d2f244877566de9aca22a2edc9.sol:ERC20
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0x5d66c97f63a561d2f244877566de9aca22a2edc9.sol:ERC20Burnable
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0x5d66c97f63a561d2f244877566de9aca22a2edc9.sol:ERC20Capped
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0x5d66c97f63a561d2f244877566de9aca22a2edc9.sol:ERC20Detailed
Processing contract: /unique_contracts/0x5d66c97f63a561d2f244877566de9aca22a2edc9.sol:ERC20Mintable
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0x5d66c97f63a561d2f244877566de9aca22a2edc9.sol:ERC20Token
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0x5d66c97f63a561d2f244877566de9aca22a2edc9.sol:IERC20
Processing contract: /unique_contracts/0x5d66c97f63a561d2f244877566de9aca22a2edc9.sol:MinterRole
Processing contract: /unique_contracts/0x5d66c97f63a561d2f244877566de9aca22a2edc9.sol:OperatorRole
Processing contract: /unique_contracts/0x5d66c97f63a561d2f244877566de9aca22a2edc9.sol:Ownable
Processing contract: /unique_contracts/0x5d66c97f63a561d2f244877566de9aca22a2edc9.sol:Roles
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0x5d66c97f63a561d2f244877566de9aca22a2edc9.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0x5d66c97f63a561d2f244877566de9aca22a2edc9.sol:TokenRecover
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for LockedEther in contract 'BaseERC20Token':
    | * @dev Implementation of the BaseERC20Token
    | */
  > |contract BaseERC20Token is ERC20Detailed, ERC20Capped, ERC20Burnable, OperatorRole, TokenRecover {
    |
    |    event MintFinished();
  at /unique_contracts/0x5d66c97f63a561d2f244877566de9aca22a2edc9.sol(774)

[31mViolation[0m for LockedEther in contract 'ERC20Token':
    | * @dev Implementation of a BaseERC20Token
    | */
  > |contract ERC20Token is BaseERC20Token {
    |
    |    string public builtOn = "https://vittominacori.github.io/erc20-generator";
  at /unique_contracts/0x5d66c97f63a561d2f244877566de9aca22a2edc9.sol(911)

[31mViolation[0m for MissingInputValidation in contract 'TokenRecover':
    |     * @param tokenAmount Number of tokens to be sent
    |     */
  > |    function recoverERC20(address tokenAddress, uint256 tokenAmount) public onlyOwner {
    |        IERC20(tokenAddress).transfer(owner(), tokenAmount);
    |    }
  at /unique_contracts/0x5d66c97f63a561d2f244877566de9aca22a2edc9.sol(720)

[31mViolation[0m for UnrestrictedWrite in contract 'TokenRecover':
    |        require(newOwner != address(0), "Ownable: new owner is the zero address");
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_contracts/0x5d66c97f63a561d2f244877566de9aca22a2edc9.sol(702)

[33mWarning[0m for UnrestrictedWrite in contract 'TokenRecover':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipTransferred(_owner, address(0));
  > |        _owner = address(0);
    |    }
    |
  at /unique_contracts/0x5d66c97f63a561d2f244877566de9aca22a2edc9.sol(685)

[33mWarning[0m for UnrestrictedWrite in contract 'TokenRecover':
    |        require(newOwner != address(0), "Ownable: new owner is the zero address");
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_contracts/0x5d66c97f63a561d2f244877566de9aca22a2edc9.sol(702)