Processing contract: /unique_chucks/39/0xffcc30dad3570b97a3d24cca0333cac4cef5dbaf.sol:DSMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/39/0xffcc30dad3570b97a3d24cca0333cac4cef5dbaf.sol:PepInterface
Processing contract: /unique_chucks/39/0xffcc30dad3570b97a3d24cca0333cac4cef5dbaf.sol:TokenInterface
Processing contract: /unique_chucks/39/0xffcc30dad3570b97a3d24cca0333cac4cef5dbaf.sol:TubInterface
Processing contract: /unique_chucks/39/0xffcc30dad3570b97a3d24cca0333cac4cef5dbaf.sol:UniswapExchange
Processing contract: /unique_chucks/39/0xffcc30dad3570b97a3d24cca0333cac4cef5dbaf.sol:WipeProxy
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for RepeatedCall in contract 'WipeProxy':
    |        UniswapExchange daiEx = UniswapExchange(getUniswapDAIExchange());
    |        UniswapExchange mkrEx = UniswapExchange(getUniswapMKRExchange());
  > |        TokenInterface dai = tub.sai();
    |        TokenInterface mkr = tub.gov();
    |
  at /unique_chucks/39/0xffcc30dad3570b97a3d24cca0333cac4cef5dbaf.sol(90)

[31mViolation[0m for RepeatedCall in contract 'WipeProxy':
    |        UniswapExchange mkrEx = UniswapExchange(getUniswapMKRExchange());
    |        TokenInterface dai = tub.sai();
  > |        TokenInterface mkr = tub.gov();
    |
    |        bytes32 cup = bytes32(cdpNum);
  at /unique_chucks/39/0xffcc30dad3570b97a3d24cca0333cac4cef5dbaf.sol(91)

[31mViolation[0m for RepeatedCall in contract 'WipeProxy':
    |        uint mkrFee = wdiv(rmul(_wad, rdiv(tub.rap(cup), tub.tab(cup))), uint(val));
    |
  > |        uint daiAmt = daiEx.getTokenToEthOutputPrice(mkrEx.getEthToTokenOutputPrice(mkrFee));
    |        daiAmt = add(_wad, daiAmt);
    |        require(dai.transferFrom(msg.sender, address(this), daiAmt), "not-approved-yet");
  at /unique_chucks/39/0xffcc30dad3570b97a3d24cca0333cac4cef5dbaf.sol(104)

[31mViolation[0m for RepeatedCall in contract 'WipeProxy':
    |
    |    function setAllowance(TokenInterface token_, address spender_) private {
  > |        if (token_.allowance(address(this), spender_) != uint(-1)) {
    |            token_.approve(spender_, uint(-1));
    |        }
  at /unique_chucks/39/0xffcc30dad3570b97a3d24cca0333cac4cef5dbaf.sol(122)

[31mViolation[0m for RepeatedCall in contract 'WipeProxy':
    |    function setAllowance(TokenInterface token_, address spender_) private {
    |        if (token_.allowance(address(this), spender_) != uint(-1)) {
  > |            token_.approve(spender_, uint(-1));
    |        }
    |    }
  at /unique_chucks/39/0xffcc30dad3570b97a3d24cca0333cac4cef5dbaf.sol(123)