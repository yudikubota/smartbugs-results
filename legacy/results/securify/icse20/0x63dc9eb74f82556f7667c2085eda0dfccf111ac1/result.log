Processing contract: /unique_chucks/22/0x63dc9eb74f82556f7667c2085eda0dfccf111ac1.sol:Ownable
Processing contract: /unique_chucks/22/0x63dc9eb74f82556f7667c2085eda0dfccf111ac1.sol:PureRisk
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/22/0x63dc9eb74f82556f7667c2085eda0dfccf111ac1.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for DAOConstantGas in contract 'PureRisk':
    |
    |        if(bytesToAddress(msg.data) != address(0x00)){
  > |            bytesToAddress(msg.data).transfer(msg.value.mul(percentDev.div(2)).div(100));
    |            owner.transfer(msg.value.mul(percentDev.div(2)).div(100));
    |        } else {
  at /unique_chucks/22/0x63dc9eb74f82556f7667c2085eda0dfccf111ac1.sol(179)

[31mViolation[0m for DAOConstantGas in contract 'PureRisk':
    |        if(bytesToAddress(msg.data) != address(0x00)){
    |            bytesToAddress(msg.data).transfer(msg.value.mul(percentDev.div(2)).div(100));
  > |            owner.transfer(msg.value.mul(percentDev.div(2)).div(100));
    |        } else {
    |            owner.transfer(msg.value.mul(percentDev).div(100));
  at /unique_chucks/22/0x63dc9eb74f82556f7667c2085eda0dfccf111ac1.sol(180)

[31mViolation[0m for DAOConstantGas in contract 'PureRisk':
    |        if (address(this).balance >= deposits[currentPaymentIndex].payout && deposits[currentPaymentIndex].paymentTime == 0) {
    |            deposits[currentPaymentIndex].paymentTime = now;
  > |            deposits[currentPaymentIndex].depositor.transfer(deposits[currentPaymentIndex].payout);
    |            emit OnPaymentSent(deposits[currentPaymentIndex].depositor, now, currentPaymentIndex);
    |            currentPaymentIndex += 1;
  at /unique_chucks/22/0x63dc9eb74f82556f7667c2085eda0dfccf111ac1.sol(187)

[33mWarning[0m for DAOConstantGas in contract 'PureRisk':
    |            owner.transfer(msg.value.mul(percentDev.div(2)).div(100));
    |        } else {
  > |            owner.transfer(msg.value.mul(percentDev).div(100));
    |        }
    |
  at /unique_chucks/22/0x63dc9eb74f82556f7667c2085eda0dfccf111ac1.sol(182)

[31mViolation[0m for RepeatedCall in contract 'PureRisk':
    |
    |        if(bytesToAddress(msg.data) != address(0x00)){
  > |            bytesToAddress(msg.data).transfer(msg.value.mul(percentDev.div(2)).div(100));
    |            owner.transfer(msg.value.mul(percentDev.div(2)).div(100));
    |        } else {
  at /unique_chucks/22/0x63dc9eb74f82556f7667c2085eda0dfccf111ac1.sol(179)

[31mViolation[0m for RepeatedCall in contract 'PureRisk':
    |        if(bytesToAddress(msg.data) != address(0x00)){
    |            bytesToAddress(msg.data).transfer(msg.value.mul(percentDev.div(2)).div(100));
  > |            owner.transfer(msg.value.mul(percentDev.div(2)).div(100));
    |        } else {
    |            owner.transfer(msg.value.mul(percentDev).div(100));
  at /unique_chucks/22/0x63dc9eb74f82556f7667c2085eda0dfccf111ac1.sol(180)

[31mViolation[0m for RepeatedCall in contract 'PureRisk':
    |            owner.transfer(msg.value.mul(percentDev.div(2)).div(100));
    |        } else {
  > |            owner.transfer(msg.value.mul(percentDev).div(100));
    |        }
    |
  at /unique_chucks/22/0x63dc9eb74f82556f7667c2085eda0dfccf111ac1.sol(182)

[31mViolation[0m for RepeatedCall in contract 'PureRisk':
    |        if (address(this).balance >= deposits[currentPaymentIndex].payout && deposits[currentPaymentIndex].paymentTime == 0) {
    |            deposits[currentPaymentIndex].paymentTime = now;
  > |            deposits[currentPaymentIndex].depositor.transfer(deposits[currentPaymentIndex].payout);
    |            emit OnPaymentSent(deposits[currentPaymentIndex].depositor, now, currentPaymentIndex);
    |            currentPaymentIndex += 1;
  at /unique_chucks/22/0x63dc9eb74f82556f7667c2085eda0dfccf111ac1.sol(187)

[33mWarning[0m for TODAmount in contract 'PureRisk':
    |        if (address(this).balance >= deposits[currentPaymentIndex].payout && deposits[currentPaymentIndex].paymentTime == 0) {
    |            deposits[currentPaymentIndex].paymentTime = now;
  > |            deposits[currentPaymentIndex].depositor.transfer(deposits[currentPaymentIndex].payout);
    |            emit OnPaymentSent(deposits[currentPaymentIndex].depositor, now, currentPaymentIndex);
    |            currentPaymentIndex += 1;
  at /unique_chucks/22/0x63dc9eb74f82556f7667c2085eda0dfccf111ac1.sol(187)

[33mWarning[0m for TODAmount in contract 'PureRisk':
    |
    |        if(bytesToAddress(msg.data) != address(0x00)){
  > |            bytesToAddress(msg.data).transfer(msg.value.mul(percentDev.div(2)).div(100));
    |            owner.transfer(msg.value.mul(percentDev.div(2)).div(100));
    |        } else {
  at /unique_chucks/22/0x63dc9eb74f82556f7667c2085eda0dfccf111ac1.sol(179)

[33mWarning[0m for TODAmount in contract 'PureRisk':
    |        if(bytesToAddress(msg.data) != address(0x00)){
    |            bytesToAddress(msg.data).transfer(msg.value.mul(percentDev.div(2)).div(100));
  > |            owner.transfer(msg.value.mul(percentDev.div(2)).div(100));
    |        } else {
    |            owner.transfer(msg.value.mul(percentDev).div(100));
  at /unique_chucks/22/0x63dc9eb74f82556f7667c2085eda0dfccf111ac1.sol(180)

[33mWarning[0m for TODAmount in contract 'PureRisk':
    |            owner.transfer(msg.value.mul(percentDev.div(2)).div(100));
    |        } else {
  > |            owner.transfer(msg.value.mul(percentDev).div(100));
    |        }
    |
  at /unique_chucks/22/0x63dc9eb74f82556f7667c2085eda0dfccf111ac1.sol(182)

[33mWarning[0m for TODReceiver in contract 'PureRisk':
    |        if (address(this).balance >= deposits[currentPaymentIndex].payout && deposits[currentPaymentIndex].paymentTime == 0) {
    |            deposits[currentPaymentIndex].paymentTime = now;
  > |            deposits[currentPaymentIndex].depositor.transfer(deposits[currentPaymentIndex].payout);
    |            emit OnPaymentSent(deposits[currentPaymentIndex].depositor, now, currentPaymentIndex);
    |            currentPaymentIndex += 1;
  at /unique_chucks/22/0x63dc9eb74f82556f7667c2085eda0dfccf111ac1.sol(187)

[33mWarning[0m for TODReceiver in contract 'PureRisk':
    |
    |        if(bytesToAddress(msg.data) != address(0x00)){
  > |            bytesToAddress(msg.data).transfer(msg.value.mul(percentDev.div(2)).div(100));
    |            owner.transfer(msg.value.mul(percentDev.div(2)).div(100));
    |        } else {
  at /unique_chucks/22/0x63dc9eb74f82556f7667c2085eda0dfccf111ac1.sol(179)

[33mWarning[0m for TODReceiver in contract 'PureRisk':
    |        if(bytesToAddress(msg.data) != address(0x00)){
    |            bytesToAddress(msg.data).transfer(msg.value.mul(percentDev.div(2)).div(100));
  > |            owner.transfer(msg.value.mul(percentDev.div(2)).div(100));
    |        } else {
    |            owner.transfer(msg.value.mul(percentDev).div(100));
  at /unique_chucks/22/0x63dc9eb74f82556f7667c2085eda0dfccf111ac1.sol(180)

[33mWarning[0m for TODReceiver in contract 'PureRisk':
    |            owner.transfer(msg.value.mul(percentDev.div(2)).div(100));
    |        } else {
  > |            owner.transfer(msg.value.mul(percentDev).div(100));
    |        }
    |
  at /unique_chucks/22/0x63dc9eb74f82556f7667c2085eda0dfccf111ac1.sol(182)

[33mWarning[0m for UnrestrictedWrite in contract 'PureRisk':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(owner, newOwner);
  > |        owner = newOwner;
    |    }
    |}
  at /unique_chucks/22/0x63dc9eb74f82556f7667c2085eda0dfccf111ac1.sol(119)