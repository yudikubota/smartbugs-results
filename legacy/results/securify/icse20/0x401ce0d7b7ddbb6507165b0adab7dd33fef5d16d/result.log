Processing contract: /unique_contracts/0x401ce0d7b7ddbb6507165b0adab7dd33fef5d16d.sol:ERC20
Processing contract: /unique_contracts/0x401ce0d7b7ddbb6507165b0adab7dd33fef5d16d.sol:MultiSign
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0x401ce0d7b7ddbb6507165b0adab7dd33fef5d16d.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[33mWarning[0m for UnrestrictedWrite in contract 'MultiSign':
    |    function proposal (address _to, address _tokenContractAddress, uint256 _amount) public returns (uint256 id) {
    |        require(msg.sender == Foundation || msg.sender == Exchange);
  > |        ProposalID = ProposalID.add(1);
    |        Proposals[ProposalID] = Proposal(ProposalID, _to, false, _tokenContractAddress, _amount, 0, 0);
    |        return id;
  at /unique_contracts/0x401ce0d7b7ddbb6507165b0adab7dd33fef5d16d.sol(65)

[33mWarning[0m for UnrestrictedWrite in contract 'MultiSign':
    |        require(msg.sender == Foundation || msg.sender == Exchange);
    |        ProposalID = ProposalID.add(1);
  > |        Proposals[ProposalID] = Proposal(ProposalID, _to, false, _tokenContractAddress, _amount, 0, 0);
    |        return id;
    |    }
  at /unique_contracts/0x401ce0d7b7ddbb6507165b0adab7dd33fef5d16d.sol(66)