Processing contract: /unique_contracts/0xff78f0cb8e93cafad39377d774e0ede1b48ee903.sol:ERC20
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0xff78f0cb8e93cafad39377d774e0ede1b48ee903.sol:ERC20Base
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0xff78f0cb8e93cafad39377d774e0ede1b48ee903.sol:Freezed
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0xff78f0cb8e93cafad39377d774e0ede1b48ee903.sol:MCVToken
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0xff78f0cb8e93cafad39377d774e0ede1b48ee903.sol:Owned
Processing contract: /unique_contracts/0xff78f0cb8e93cafad39377d774e0ede1b48ee903.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for LockedEther in contract 'ERC20':
    |
    |
  > |contract ERC20 is ERC20Base {
    |    string public name;
    |    string public symbol;
  at /unique_contracts/0xff78f0cb8e93cafad39377d774e0ede1b48ee903.sol(285)

[31mViolation[0m for MissingInputValidation in contract 'ERC20':
    |    */
    |
  > |    function balanceOf(address owner) public view returns(uint) {
    |        return _balanceOf[owner];
    |    }
  at /unique_contracts/0xff78f0cb8e93cafad39377d774e0ede1b48ee903.sol(219)

[31mViolation[0m for MissingInputValidation in contract 'ERC20':
    |    */
    |    
  > |    function allowance(address owner, address spender) public view returns(uint) {
    |        return _allowed[owner][spender];
    |    }
  at /unique_contracts/0xff78f0cb8e93cafad39377d774e0ede1b48ee903.sol(324)

[31mViolation[0m for MissingInputValidation in contract 'ERC20':
    |    */
    |
  > |    function transferFrom(address from, address to, uint256 value) public {
    |        _checkRequireERC20(to, value, true, _allowed[from][msg.sender]);
    |
  at /unique_contracts/0xff78f0cb8e93cafad39377d774e0ede1b48ee903.sol(354)

[31mViolation[0m for MissingInputValidation in contract 'ERC20':
    |    */
    |
  > |    function decreaseAllowance(address spender, uint256 value) public {
    |        _checkRequireERC20(spender, value, true, _allowed[msg.sender][spender]);
    |
  at /unique_contracts/0xff78f0cb8e93cafad39377d774e0ede1b48ee903.sol(389)

[33mWarning[0m for MissingInputValidation in contract 'ERC20':
    |    */
    |
  > |    function transfer(address to, uint256 value) public {
    |        _transfer(msg.sender, to, value);
    |    }
  at /unique_contracts/0xff78f0cb8e93cafad39377d774e0ede1b48ee903.sol(313)

[33mWarning[0m for MissingInputValidation in contract 'ERC20':
    |    */
    |
  > |    function approve(address spender, uint256 value) public {
    |        _checkRequireERC20(spender, value, true, _balanceOf[msg.sender]);
    |
  at /unique_contracts/0xff78f0cb8e93cafad39377d774e0ede1b48ee903.sol(339)

[33mWarning[0m for MissingInputValidation in contract 'ERC20':
    |    */
    |
  > |    function increaseAllowance(address spender, uint256 value)  public {
    |        _checkRequireERC20(spender, value, false, 0);
    |        require(_balanceOf[msg.sender] >= (_allowed[msg.sender][spender] + value), "Out of value");
  at /unique_contracts/0xff78f0cb8e93cafad39377d774e0ede1b48ee903.sol(370)

[31mViolation[0m for UnrestrictedWrite in contract 'ERC20':
    |        // _balanceOf[from] -= value;
    |        // _balanceOf[to] += value;
  > |        _balanceOf[from] = SafeMath.sub(_balanceOf[from], value);
    |        _balanceOf[to] = SafeMath.add(_balanceOf[to], value);
    |        emit Transfer(from, to, value);
  at /unique_contracts/0xff78f0cb8e93cafad39377d774e0ede1b48ee903.sol(237)

[31mViolation[0m for UnrestrictedWrite in contract 'ERC20':
    |        // _balanceOf[to] += value;
    |        _balanceOf[from] = SafeMath.sub(_balanceOf[from], value);
  > |        _balanceOf[to] = SafeMath.add(_balanceOf[to], value);
    |        emit Transfer(from, to, value);
    |    }
  at /unique_contracts/0xff78f0cb8e93cafad39377d774e0ede1b48ee903.sol(238)

[33mWarning[0m for UnrestrictedWrite in contract 'ERC20':
    |        // _balanceOf[from] -= value;
    |        // _balanceOf[to] += value;
  > |        _balanceOf[from] = SafeMath.sub(_balanceOf[from], value);
    |        _balanceOf[to] = SafeMath.add(_balanceOf[to], value);
    |        emit Transfer(from, to, value);
  at /unique_contracts/0xff78f0cb8e93cafad39377d774e0ede1b48ee903.sol(237)

[33mWarning[0m for UnrestrictedWrite in contract 'ERC20':
    |        // _balanceOf[to] += value;
    |        _balanceOf[from] = SafeMath.sub(_balanceOf[from], value);
  > |        _balanceOf[to] = SafeMath.add(_balanceOf[to], value);
    |        emit Transfer(from, to, value);
    |    }
  at /unique_contracts/0xff78f0cb8e93cafad39377d774e0ede1b48ee903.sol(238)

[31mViolation[0m for MissingInputValidation in contract 'ERC20Base':
    |    */
    |
  > |    function balanceOf(address owner) public view returns(uint) {
    |        return _balanceOf[owner];
    |    }
  at /unique_contracts/0xff78f0cb8e93cafad39377d774e0ede1b48ee903.sol(219)

[31mViolation[0m for LockedEther in contract 'MCVToken':
    |
    |
  > |contract MCVToken is ERC20, Owned, Freezed {
    |    
    |    constructor(string memory _name, string memory _symbol, uint8 _decimals, uint256 _total, address _fOwner, bool _freeze) 
  at /unique_contracts/0xff78f0cb8e93cafad39377d774e0ede1b48ee903.sol(398)

[31mViolation[0m for MissingInputValidation in contract 'MCVToken':
    |    */
    |
  > |    function balanceOf(address owner) public view returns(uint) {
    |        return _balanceOf[owner];
    |    }
  at /unique_contracts/0xff78f0cb8e93cafad39377d774e0ede1b48ee903.sol(219)

[31mViolation[0m for MissingInputValidation in contract 'MCVToken':
    |    */
    |    
  > |    function allowance(address owner, address spender) public view returns(uint) {
    |        return _allowed[owner][spender];
    |    }
  at /unique_contracts/0xff78f0cb8e93cafad39377d774e0ede1b48ee903.sol(324)

[31mViolation[0m for MissingInputValidation in contract 'MCVToken':
    |    */
    |
  > |    function decreaseAllowance(address spender, uint256 value) public {
    |        _checkRequireERC20(spender, value, true, _allowed[msg.sender][spender]);
    |
  at /unique_contracts/0xff78f0cb8e93cafad39377d774e0ede1b48ee903.sol(389)

[31mViolation[0m for MissingInputValidation in contract 'MCVToken':
    |
    |
  > |    function transferFrom(address from, address to, uint256 value) public onlyUnfreeze {
    |        super.transferFrom(from, to, value);
    |    }
  at /unique_contracts/0xff78f0cb8e93cafad39377d774e0ede1b48ee903.sol(434)

[33mWarning[0m for MissingInputValidation in contract 'MCVToken':
    |    */
    |
  > |    function approve(address spender, uint256 value) public {
    |        _checkRequireERC20(spender, value, true, _balanceOf[msg.sender]);
    |
  at /unique_contracts/0xff78f0cb8e93cafad39377d774e0ede1b48ee903.sol(339)

[33mWarning[0m for MissingInputValidation in contract 'MCVToken':
    |    */
    |
  > |    function increaseAllowance(address spender, uint256 value)  public {
    |        _checkRequireERC20(spender, value, false, 0);
    |        require(_balanceOf[msg.sender] >= (_allowed[msg.sender][spender] + value), "Out of value");
  at /unique_contracts/0xff78f0cb8e93cafad39377d774e0ede1b48ee903.sol(370)

[33mWarning[0m for MissingInputValidation in contract 'MCVToken':
    |    */
    |
  > |    function burn(uint256 value) public {
    |        _burn(msg.sender, value);
    |    }
  at /unique_contracts/0xff78f0cb8e93cafad39377d774e0ede1b48ee903.sol(424)

[33mWarning[0m for MissingInputValidation in contract 'MCVToken':
    |    }
    |
  > |    function transfer(address to, uint256 value) public onlyUnfreeze {
    |        super.transfer(to, value);
    |    }
  at /unique_contracts/0xff78f0cb8e93cafad39377d774e0ede1b48ee903.sol(428)

[31mViolation[0m for UnrestrictedWrite in contract 'MCVToken':
    |	function _freezeTransfers () internal {
    |		if (!frozen) {
  > |			frozen = true;
    |			emit Freeze();
    |		}
  at /unique_contracts/0xff78f0cb8e93cafad39377d774e0ede1b48ee903.sol(170)

[31mViolation[0m for UnrestrictedWrite in contract 'MCVToken':
    |	function _unfreezeTransfers () internal {
    |		if (frozen) {
  > |			frozen = false;
    |			emit Unfreeze();
    |		}
  at /unique_contracts/0xff78f0cb8e93cafad39377d774e0ede1b48ee903.sol(177)

[31mViolation[0m for UnrestrictedWrite in contract 'MCVToken':
    |        // _balanceOf[from] -= value;
    |        // _balanceOf[to] += value;
  > |        _balanceOf[from] = SafeMath.sub(_balanceOf[from], value);
    |        _balanceOf[to] = SafeMath.add(_balanceOf[to], value);
    |        emit Transfer(from, to, value);
  at /unique_contracts/0xff78f0cb8e93cafad39377d774e0ede1b48ee903.sol(237)

[31mViolation[0m for UnrestrictedWrite in contract 'MCVToken':
    |        // _balanceOf[to] += value;
    |        _balanceOf[from] = SafeMath.sub(_balanceOf[from], value);
  > |        _balanceOf[to] = SafeMath.add(_balanceOf[to], value);
    |        emit Transfer(from, to, value);
    |    }
  at /unique_contracts/0xff78f0cb8e93cafad39377d774e0ede1b48ee903.sol(238)

[31mViolation[0m for UnrestrictedWrite in contract 'MCVToken':
    |        _checkRequireERC20(account, value, true, _balanceOf[account]);
    |
  > |        _totalSupply = SafeMath.sub(_totalSupply, value);
    |        _balanceOf[account] = SafeMath.sub(_balanceOf[account], value);
    |        emit Transfer(account, address(0), value);
  at /unique_contracts/0xff78f0cb8e93cafad39377d774e0ede1b48ee903.sol(268)

[31mViolation[0m for UnrestrictedWrite in contract 'MCVToken':
    |
    |        _totalSupply = SafeMath.sub(_totalSupply, value);
  > |        _balanceOf[account] = SafeMath.sub(_balanceOf[account], value);
    |        emit Transfer(account, address(0), value);
    |    }
  at /unique_contracts/0xff78f0cb8e93cafad39377d774e0ede1b48ee903.sol(269)

[31mViolation[0m for UnrestrictedWrite in contract 'MCVToken':
    |        _checkRequireERC20(to, value, true, _allowed[from][msg.sender]);
    |
  > |        _allowed[from][msg.sender] = SafeMath.sub(_allowed[from][msg.sender], value);
    |        _transfer(from, to, value);
    |    }
  at /unique_contracts/0xff78f0cb8e93cafad39377d774e0ede1b48ee903.sol(357)

[33mWarning[0m for UnrestrictedWrite in contract 'MCVToken':
    |        // _balanceOf[from] -= value;
    |        // _balanceOf[to] += value;
  > |        _balanceOf[from] = SafeMath.sub(_balanceOf[from], value);
    |        _balanceOf[to] = SafeMath.add(_balanceOf[to], value);
    |        emit Transfer(from, to, value);
  at /unique_contracts/0xff78f0cb8e93cafad39377d774e0ede1b48ee903.sol(237)

[33mWarning[0m for UnrestrictedWrite in contract 'MCVToken':
    |        // _balanceOf[to] += value;
    |        _balanceOf[from] = SafeMath.sub(_balanceOf[from], value);
  > |        _balanceOf[to] = SafeMath.add(_balanceOf[to], value);
    |        emit Transfer(from, to, value);
    |    }
  at /unique_contracts/0xff78f0cb8e93cafad39377d774e0ede1b48ee903.sol(238)

[33mWarning[0m for UnrestrictedWrite in contract 'MCVToken':
    |        _checkRequireERC20(account, value, true, _balanceOf[account]);
    |
  > |        _totalSupply = SafeMath.sub(_totalSupply, value);
    |        _balanceOf[account] = SafeMath.sub(_balanceOf[account], value);
    |        emit Transfer(account, address(0), value);
  at /unique_contracts/0xff78f0cb8e93cafad39377d774e0ede1b48ee903.sol(268)

[33mWarning[0m for UnrestrictedWrite in contract 'MCVToken':
    |    function renounceOwner() public onlyOwner {
    |        emit TransferredOwner(_owner, address(0));
  > |        _owner = address(0);
    |    }
    |
  at /unique_contracts/0xff78f0cb8e93cafad39377d774e0ede1b48ee903.sol(124)

[33mWarning[0m for UnrestrictedWrite in contract 'MCVToken':
    |    function transferOwner(address newOwner) public onlyOwner {
    |        require(newOwner != address(0), "Empty address");
  > |        _newOwner = newOwner;
    |    }
    |
  at /unique_contracts/0xff78f0cb8e93cafad39377d774e0ede1b48ee903.sol(133)

[33mWarning[0m for UnrestrictedWrite in contract 'MCVToken':
    |
    |    function cancelOwner() public onlyOwner {
  > |        _newOwner = address(0);
    |    }
    |
  at /unique_contracts/0xff78f0cb8e93cafad39377d774e0ede1b48ee903.sol(138)

[33mWarning[0m for UnrestrictedWrite in contract 'MCVToken':
    |        require(msg.sender == _newOwner, "Access is denied");
    |        emit TransferredOwner(_owner, _newOwner);
  > |        _owner = _newOwner;
    |    }
    |}
  at /unique_contracts/0xff78f0cb8e93cafad39377d774e0ede1b48ee903.sol(144)

[33mWarning[0m for UnrestrictedWrite in contract 'MCVToken':
    |	function _freezeTransfers () internal {
    |		if (!frozen) {
  > |			frozen = true;
    |			emit Freeze();
    |		}
  at /unique_contracts/0xff78f0cb8e93cafad39377d774e0ede1b48ee903.sol(170)

[33mWarning[0m for UnrestrictedWrite in contract 'MCVToken':
    |	function _unfreezeTransfers () internal {
    |		if (frozen) {
  > |			frozen = false;
    |			emit Unfreeze();
    |		}
  at /unique_contracts/0xff78f0cb8e93cafad39377d774e0ede1b48ee903.sol(177)