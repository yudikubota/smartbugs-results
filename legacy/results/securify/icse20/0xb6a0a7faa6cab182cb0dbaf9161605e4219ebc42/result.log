Processing contract: /unique_chucks/42/0xb6a0a7faa6cab182cb0dbaf9161605e4219ebc42.sol:IERC20
Processing contract: /unique_chucks/42/0xb6a0a7faa6cab182cb0dbaf9161605e4219ebc42.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/42/0xb6a0a7faa6cab182cb0dbaf9161605e4219ebc42.sol:VCNToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for LockedEther in contract 'VCNToken':
    |
    |
  > |contract VCNToken is IERC20 {
    |
    |    using SafeMath for uint256;
  at /unique_chucks/42/0xb6a0a7faa6cab182cb0dbaf9161605e4219ebc42.sol(85)

[31mViolation[0m for UnrestrictedWrite in contract 'VCNToken':
    |            if(amount > _timeLocks[owner][minIdx].blockAmount){
    |                uint256 remain = amount - _timeLocks[owner][minIdx].blockAmount;
  > |                _timeLocks[owner][minIdx].blockAmount = 0;
    |                releaseLock(owner, remain);
    |            }else{
  at /unique_chucks/42/0xb6a0a7faa6cab182cb0dbaf9161605e4219ebc42.sol(161)

[31mViolation[0m for UnrestrictedWrite in contract 'VCNToken':
    |                releaseLock(owner, remain);
    |            }else{
  > |                _timeLocks[owner][minIdx].blockAmount -= amount;
    |            }
    |            
  at /unique_chucks/42/0xb6a0a7faa6cab182cb0dbaf9161605e4219ebc42.sol(164)

[33mWarning[0m for UnrestrictedWrite in contract 'VCNToken':
    |pragma solidity ^0.5.0;
    |
  > |library SafeMath {
    |    /**
    |     * @dev Multiplies two unsigned integers, reverts on overflow.
  at /unique_chucks/42/0xb6a0a7faa6cab182cb0dbaf9161605e4219ebc42.sol(3)

[33mWarning[0m for UnrestrictedWrite in contract 'VCNToken':
    |        //timeLockTemp.blockTime = block.timestamp + 60 * lockMonth;
    |        timeLockTemp.blockAmount = amount;
  > |        _timeLocks[addr].push(timeLockTemp);
    |        
    |        return true;
  at /unique_chucks/42/0xb6a0a7faa6cab182cb0dbaf9161605e4219ebc42.sol(126)

[33mWarning[0m for UnrestrictedWrite in contract 'VCNToken':
    |        require(available >= value, "not enough token");
    |        
  > |        _balances[from] = _balances[from].sub(value);
    |        _balances[to] = _balances[to].add(value);
    |        emit Transfer(from, to, value);
  at /unique_chucks/42/0xb6a0a7faa6cab182cb0dbaf9161605e4219ebc42.sol(248)

[33mWarning[0m for UnrestrictedWrite in contract 'VCNToken':
    |        
    |        _balances[from] = _balances[from].sub(value);
  > |        _balances[to] = _balances[to].add(value);
    |        emit Transfer(from, to, value);
    |    }
  at /unique_chucks/42/0xb6a0a7faa6cab182cb0dbaf9161605e4219ebc42.sol(249)