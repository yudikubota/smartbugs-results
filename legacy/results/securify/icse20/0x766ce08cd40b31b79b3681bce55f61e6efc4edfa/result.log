Processing contract: /unique_chucks/18/0x766ce08cd40b31b79b3681bce55f61e6efc4edfa.sol:AllowanceSheet
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/18/0x766ce08cd40b31b79b3681bce55f61e6efc4edfa.sol:BalanceSheet
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/18/0x766ce08cd40b31b79b3681bce55f61e6efc4edfa.sol:BurnableTokenWithBounds
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/18/0x766ce08cd40b31b79b3681bce55f61e6efc4edfa.sol:Claimable
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/18/0x766ce08cd40b31b79b3681bce55f61e6efc4edfa.sol:CompliantDepositTokenWithHook
Processing contract: /unique_chucks/18/0x766ce08cd40b31b79b3681bce55f61e6efc4edfa.sol:ERC20
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/18/0x766ce08cd40b31b79b3681bce55f61e6efc4edfa.sol:HasOwner
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/18/0x766ce08cd40b31b79b3681bce55f61e6efc4edfa.sol:IERC20
Processing contract: /unique_chucks/18/0x766ce08cd40b31b79b3681bce55f61e6efc4edfa.sol:ModularBasicToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/18/0x766ce08cd40b31b79b3681bce55f61e6efc4edfa.sol:ModularBurnableToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/18/0x766ce08cd40b31b79b3681bce55f61e6efc4edfa.sol:ModularStandardToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/18/0x766ce08cd40b31b79b3681bce55f61e6efc4edfa.sol:Ownable
Processing contract: /unique_chucks/18/0x766ce08cd40b31b79b3681bce55f61e6efc4edfa.sol:OwnedUpgradeabilityProxy
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/18/0x766ce08cd40b31b79b3681bce55f61e6efc4edfa.sol:ProxyStorage
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/18/0x766ce08cd40b31b79b3681bce55f61e6efc4edfa.sol:ReclaimerToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/18/0x766ce08cd40b31b79b3681bce55f61e6efc4edfa.sol:Registry
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/18/0x766ce08cd40b31b79b3681bce55f61e6efc4edfa.sol:RegistryClone
Processing contract: /unique_chucks/18/0x766ce08cd40b31b79b3681bce55f61e6efc4edfa.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/18/0x766ce08cd40b31b79b3681bce55f61e6efc4edfa.sol:TokenController
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/18/0x766ce08cd40b31b79b3681bce55f61e6efc4edfa.sol:TrueCoinReceiver
[33mWarning[0m for UnrestrictedWrite in contract 'AllowanceSheet':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipTransferred(_owner, address(0));
  > |        _owner = address(0);
    |    }
    |
  at /unique_chucks/18/0x766ce08cd40b31b79b3681bce55f61e6efc4edfa.sol(513)

[33mWarning[0m for UnrestrictedWrite in contract 'AllowanceSheet':
    |
    |  function transferOwnership(address newOwner) public onlyOwner {
  > |    pendingOwner = newOwner;
    |  }
    |
  at /unique_chucks/18/0x766ce08cd40b31b79b3681bce55f61e6efc4edfa.sol(549)

[33mWarning[0m for UnrestrictedWrite in contract 'AllowanceSheet':
    |
    |    function addAllowance(address _tokenHolder, address _spender, uint256 _value) public onlyOwner {
  > |        allowanceOf[_tokenHolder][_spender] = allowanceOf[_tokenHolder][_spender].add(_value);
    |    }
    |
  at /unique_chucks/18/0x766ce08cd40b31b79b3681bce55f61e6efc4edfa.sol(597)

[33mWarning[0m for UnrestrictedWrite in contract 'AllowanceSheet':
    |
    |    function subAllowance(address _tokenHolder, address _spender, uint256 _value) public onlyOwner {
  > |        allowanceOf[_tokenHolder][_spender] = allowanceOf[_tokenHolder][_spender].sub(_value);
    |    }
    |
  at /unique_chucks/18/0x766ce08cd40b31b79b3681bce55f61e6efc4edfa.sol(601)

[33mWarning[0m for UnrestrictedWrite in contract 'AllowanceSheet':
    |
    |    function setAllowance(address _tokenHolder, address _spender, uint256 _value) public onlyOwner {
  > |        allowanceOf[_tokenHolder][_spender] = _value;
    |    }
    |}
  at /unique_chucks/18/0x766ce08cd40b31b79b3681bce55f61e6efc4edfa.sol(605)

[33mWarning[0m for UnrestrictedWrite in contract 'BalanceSheet':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipTransferred(_owner, address(0));
  > |        _owner = address(0);
    |    }
    |
  at /unique_chucks/18/0x766ce08cd40b31b79b3681bce55f61e6efc4edfa.sol(513)

[33mWarning[0m for UnrestrictedWrite in contract 'BalanceSheet':
    |
    |  function transferOwnership(address newOwner) public onlyOwner {
  > |    pendingOwner = newOwner;
    |  }
    |
  at /unique_chucks/18/0x766ce08cd40b31b79b3681bce55f61e6efc4edfa.sol(549)

[33mWarning[0m for UnrestrictedWrite in contract 'BalanceSheet':
    |
    |    function addBalance(address _addr, uint256 _value) public onlyOwner {
  > |        balanceOf[_addr] = balanceOf[_addr].add(_value);
    |    }
    |
  at /unique_chucks/18/0x766ce08cd40b31b79b3681bce55f61e6efc4edfa.sol(572)

[33mWarning[0m for UnrestrictedWrite in contract 'BalanceSheet':
    |
    |    function subBalance(address _addr, uint256 _value) public onlyOwner {
  > |        balanceOf[_addr] = balanceOf[_addr].sub(_value);
    |    }
    |
  at /unique_chucks/18/0x766ce08cd40b31b79b3681bce55f61e6efc4edfa.sol(576)

[33mWarning[0m for UnrestrictedWrite in contract 'BalanceSheet':
    |
    |    function setBalance(address _addr, uint256 _value) public onlyOwner {
  > |        balanceOf[_addr] = _value;
    |    }
    |}
  at /unique_chucks/18/0x766ce08cd40b31b79b3681bce55f61e6efc4edfa.sol(580)

[33mWarning[0m for UnrestrictedWrite in contract 'BurnableTokenWithBounds':
    |    */
    |    function transferOwnership(address newOwner) public onlyOwner {
  > |        pendingOwner = newOwner;
    |    }
    |
  at /unique_chucks/18/0x766ce08cd40b31b79b3681bce55f61e6efc4edfa.sol(719)

[33mWarning[0m for UnrestrictedWrite in contract 'BurnableTokenWithBounds':
    |    function claimOwnership() public onlyPendingOwner {
    |        emit OwnershipTransferred(owner, pendingOwner);
  > |        owner = pendingOwner;
    |        pendingOwner = address(0);
    |    }
  at /unique_chucks/18/0x766ce08cd40b31b79b3681bce55f61e6efc4edfa.sol(727)

[33mWarning[0m for UnrestrictedWrite in contract 'BurnableTokenWithBounds':
    |        emit OwnershipTransferred(owner, pendingOwner);
    |        owner = pendingOwner;
  > |        pendingOwner = address(0);
    |    }
    |}
  at /unique_chucks/18/0x766ce08cd40b31b79b3681bce55f61e6efc4edfa.sol(728)

[33mWarning[0m for UnrestrictedWrite in contract 'BurnableTokenWithBounds':
    |        // sender's balance is greater than the totalSupply, which *should* be an assertion failure
    |        _subBalance(_from, _value);
  > |        totalSupply_ = totalSupply_.sub(_value);
    |        emit Burn(_from, _value);
    |        emit Transfer(_from, address(0), _value);
  at /unique_chucks/18/0x766ce08cd40b31b79b3681bce55f61e6efc4edfa.sol(946)

[33mWarning[0m for UnrestrictedWrite in contract 'BurnableTokenWithBounds':
    |    function setBurnBounds(uint256 _min, uint256 _max) external onlyOwner {
    |        require(_min <= _max, "min > max");
  > |        burnMin = _min;
    |        burnMax = _max;
    |        emit SetBurnBounds(_min, _max);
  at /unique_chucks/18/0x766ce08cd40b31b79b3681bce55f61e6efc4edfa.sol(980)

[33mWarning[0m for UnrestrictedWrite in contract 'BurnableTokenWithBounds':
    |        require(_min <= _max, "min > max");
    |        burnMin = _min;
  > |        burnMax = _max;
    |        emit SetBurnBounds(_min, _max);
    |    }
  at /unique_chucks/18/0x766ce08cd40b31b79b3681bce55f61e6efc4edfa.sol(981)

[31mViolation[0m for MissingInputValidation in contract 'Claimable':
    |  }
    |
  > |  function transferOwnership(address newOwner) public onlyOwner {
    |    pendingOwner = newOwner;
    |  }
  at /unique_chucks/18/0x766ce08cd40b31b79b3681bce55f61e6efc4edfa.sol(548)

[31mViolation[0m for UnrestrictedWrite in contract 'Claimable':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_chucks/18/0x766ce08cd40b31b79b3681bce55f61e6efc4edfa.sol(531)

[33mWarning[0m for UnrestrictedWrite in contract 'Claimable':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipTransferred(_owner, address(0));
  > |        _owner = address(0);
    |    }
    |
  at /unique_chucks/18/0x766ce08cd40b31b79b3681bce55f61e6efc4edfa.sol(513)

[33mWarning[0m for UnrestrictedWrite in contract 'Claimable':
    |
    |  function transferOwnership(address newOwner) public onlyOwner {
  > |    pendingOwner = newOwner;
    |  }
    |
  at /unique_chucks/18/0x766ce08cd40b31b79b3681bce55f61e6efc4edfa.sol(549)

[33mWarning[0m for UnrestrictedWrite in contract 'HasOwner':
    |    */
    |    function transferOwnership(address newOwner) public onlyOwner {
  > |        pendingOwner = newOwner;
    |    }
    |
  at /unique_chucks/18/0x766ce08cd40b31b79b3681bce55f61e6efc4edfa.sol(719)

[33mWarning[0m for UnrestrictedWrite in contract 'HasOwner':
    |    function claimOwnership() public onlyPendingOwner {
    |        emit OwnershipTransferred(owner, pendingOwner);
  > |        owner = pendingOwner;
    |        pendingOwner = address(0);
    |    }
  at /unique_chucks/18/0x766ce08cd40b31b79b3681bce55f61e6efc4edfa.sol(727)

[33mWarning[0m for UnrestrictedWrite in contract 'HasOwner':
    |        emit OwnershipTransferred(owner, pendingOwner);
    |        owner = pendingOwner;
  > |        pendingOwner = address(0);
    |    }
    |}
  at /unique_chucks/18/0x766ce08cd40b31b79b3681bce55f61e6efc4edfa.sol(728)

[33mWarning[0m for UnrestrictedWrite in contract 'ModularBasicToken':
    |    */
    |    function transferOwnership(address newOwner) public onlyOwner {
  > |        pendingOwner = newOwner;
    |    }
    |
  at /unique_chucks/18/0x766ce08cd40b31b79b3681bce55f61e6efc4edfa.sol(719)

[33mWarning[0m for UnrestrictedWrite in contract 'ModularBasicToken':
    |    function claimOwnership() public onlyPendingOwner {
    |        emit OwnershipTransferred(owner, pendingOwner);
  > |        owner = pendingOwner;
    |        pendingOwner = address(0);
    |    }
  at /unique_chucks/18/0x766ce08cd40b31b79b3681bce55f61e6efc4edfa.sol(727)

[33mWarning[0m for UnrestrictedWrite in contract 'ModularBasicToken':
    |        emit OwnershipTransferred(owner, pendingOwner);
    |        owner = pendingOwner;
  > |        pendingOwner = address(0);
    |    }
    |}
  at /unique_chucks/18/0x766ce08cd40b31b79b3681bce55f61e6efc4edfa.sol(728)

[31mViolation[0m for UnrestrictedWrite in contract 'ModularBurnableToken':
    |        // sender's balance is greater than the totalSupply, which *should* be an assertion failure
    |        _subBalance(_from, _value);
  > |        totalSupply_ = totalSupply_.sub(_value);
    |        emit Burn(_from, _value);
    |        emit Transfer(_from, address(0), _value);
  at /unique_chucks/18/0x766ce08cd40b31b79b3681bce55f61e6efc4edfa.sol(946)

[33mWarning[0m for UnrestrictedWrite in contract 'ModularBurnableToken':
    |    */
    |    function transferOwnership(address newOwner) public onlyOwner {
  > |        pendingOwner = newOwner;
    |    }
    |
  at /unique_chucks/18/0x766ce08cd40b31b79b3681bce55f61e6efc4edfa.sol(719)

[33mWarning[0m for UnrestrictedWrite in contract 'ModularBurnableToken':
    |    function claimOwnership() public onlyPendingOwner {
    |        emit OwnershipTransferred(owner, pendingOwner);
  > |        owner = pendingOwner;
    |        pendingOwner = address(0);
    |    }
  at /unique_chucks/18/0x766ce08cd40b31b79b3681bce55f61e6efc4edfa.sol(727)

[33mWarning[0m for UnrestrictedWrite in contract 'ModularBurnableToken':
    |        emit OwnershipTransferred(owner, pendingOwner);
    |        owner = pendingOwner;
  > |        pendingOwner = address(0);
    |    }
    |}
  at /unique_chucks/18/0x766ce08cd40b31b79b3681bce55f61e6efc4edfa.sol(728)

[33mWarning[0m for UnrestrictedWrite in contract 'ModularStandardToken':
    |    */
    |    function transferOwnership(address newOwner) public onlyOwner {
  > |        pendingOwner = newOwner;
    |    }
    |
  at /unique_chucks/18/0x766ce08cd40b31b79b3681bce55f61e6efc4edfa.sol(719)

[33mWarning[0m for UnrestrictedWrite in contract 'ModularStandardToken':
    |    function claimOwnership() public onlyPendingOwner {
    |        emit OwnershipTransferred(owner, pendingOwner);
  > |        owner = pendingOwner;
    |        pendingOwner = address(0);
    |    }
  at /unique_chucks/18/0x766ce08cd40b31b79b3681bce55f61e6efc4edfa.sol(727)

[33mWarning[0m for UnrestrictedWrite in contract 'ModularStandardToken':
    |        emit OwnershipTransferred(owner, pendingOwner);
    |        owner = pendingOwner;
  > |        pendingOwner = address(0);
    |    }
    |}
  at /unique_chucks/18/0x766ce08cd40b31b79b3681bce55f61e6efc4edfa.sol(728)

[31mViolation[0m for UnrestrictedWrite in contract 'OwnedUpgradeabilityProxy':
    |        bytes32 position = proxyOwnerPosition;
    |        assembly {
  > |            sstore(position, newProxyOwner)
    |        }
    |    }
  at /unique_chucks/18/0x766ce08cd40b31b79b3681bce55f61e6efc4edfa.sol(1328)

[31mViolation[0m for UnrestrictedWrite in contract 'OwnedUpgradeabilityProxy':
    |        bytes32 position = pendingProxyOwnerPosition;
    |        assembly {
  > |            sstore(position, newPendingProxyOwner)
    |        }
    |    }
  at /unique_chucks/18/0x766ce08cd40b31b79b3681bce55f61e6efc4edfa.sol(1338)

[33mWarning[0m for UnrestrictedWrite in contract 'OwnedUpgradeabilityProxy':
    |        bytes32 position = proxyOwnerPosition;
    |        assembly {
  > |            sstore(position, newProxyOwner)
    |        }
    |    }
  at /unique_chucks/18/0x766ce08cd40b31b79b3681bce55f61e6efc4edfa.sol(1328)

[33mWarning[0m for UnrestrictedWrite in contract 'OwnedUpgradeabilityProxy':
    |        bytes32 position = pendingProxyOwnerPosition;
    |        assembly {
  > |            sstore(position, newPendingProxyOwner)
    |        }
    |    }
  at /unique_chucks/18/0x766ce08cd40b31b79b3681bce55f61e6efc4edfa.sol(1338)

[33mWarning[0m for UnrestrictedWrite in contract 'OwnedUpgradeabilityProxy':
    |        require(currentImplementation != implementation);
    |        assembly {
  > |          sstore(position, implementation)
    |        }
    |        emit Upgraded(implementation);
  at /unique_chucks/18/0x766ce08cd40b31b79b3681bce55f61e6efc4edfa.sol(1374)

[31mViolation[0m for TODAmount in contract 'ReclaimerToken':
    |    */
    |    function reclaimEther(address payable _to) external onlyOwner {
  > |        _to.transfer(address(this).balance);
    |    }
    |
  at /unique_chucks/18/0x766ce08cd40b31b79b3681bce55f61e6efc4edfa.sol(750)

[33mWarning[0m for UnrestrictedWrite in contract 'ReclaimerToken':
    |    */
    |    function transferOwnership(address newOwner) public onlyOwner {
  > |        pendingOwner = newOwner;
    |    }
    |
  at /unique_chucks/18/0x766ce08cd40b31b79b3681bce55f61e6efc4edfa.sol(719)

[33mWarning[0m for UnrestrictedWrite in contract 'ReclaimerToken':
    |    function claimOwnership() public onlyPendingOwner {
    |        emit OwnershipTransferred(owner, pendingOwner);
  > |        owner = pendingOwner;
    |        pendingOwner = address(0);
    |    }
  at /unique_chucks/18/0x766ce08cd40b31b79b3681bce55f61e6efc4edfa.sol(727)

[33mWarning[0m for UnrestrictedWrite in contract 'ReclaimerToken':
    |        emit OwnershipTransferred(owner, pendingOwner);
    |        owner = pendingOwner;
  > |        pendingOwner = address(0);
    |    }
    |}
  at /unique_chucks/18/0x766ce08cd40b31b79b3681bce55f61e6efc4edfa.sol(728)

[31mViolation[0m for RepeatedCall in contract 'Registry':
    |        uint256 index = targets.length;
    |        while (index --> 0) {
  > |            targets[index].syncAttributeValue(_who, _attribute, _value);
    |        }
    |    }
  at /unique_chucks/18/0x766ce08cd40b31b79b3681bce55f61e6efc4edfa.sol(348)

[31mViolation[0m for RepeatedCall in contract 'Registry':
    |        uint256 index = targets.length;
    |        while (index --> 0) {
  > |            targets[index].syncAttributeValue(_who, _attribute, _value);
    |        }
    |    }
  at /unique_chucks/18/0x766ce08cd40b31b79b3681bce55f61e6efc4edfa.sol(376)

[31mViolation[0m for RepeatedCall in contract 'Registry':
    |            for (uint256 i = _addresses.length; i --> 0; ) {
    |                address who = _addresses[i];
  > |                target.syncAttributeValue(who, _attribute, attributes[who][_attribute].value);
    |            }
    |        }
  at /unique_chucks/18/0x766ce08cd40b31b79b3681bce55f61e6efc4edfa.sol(411)

[31mViolation[0m for TODAmount in contract 'Registry':
    |
    |    function reclaimEther(address payable _to) external onlyOwner {
  > |        _to.transfer(address(this).balance);
    |    }
    |
  at /unique_chucks/18/0x766ce08cd40b31b79b3681bce55f61e6efc4edfa.sol(417)

[31mViolation[0m for UnrestrictedWrite in contract 'Registry':
    |}
    |
  > |contract Registry {
    |    struct AttributeData {
    |        uint256 value;
  at /unique_chucks/18/0x766ce08cd40b31b79b3681bce55f61e6efc4edfa.sol(296)

[33mWarning[0m for UnrestrictedWrite in contract 'Registry':
  > |// File: openzeppelin-solidity/contracts/math/SafeMath.sol
    |
    |pragma solidity ^0.5.2;
  at /unique_chucks/18/0x766ce08cd40b31b79b3681bce55f61e6efc4edfa.sol(1)

[33mWarning[0m for UnrestrictedWrite in contract 'Registry':
    |}
    |
  > |contract Registry {
    |    struct AttributeData {
    |        uint256 value;
  at /unique_chucks/18/0x766ce08cd40b31b79b3681bce55f61e6efc4edfa.sol(296)

[33mWarning[0m for UnrestrictedWrite in contract 'Registry':
    |
    |    function subscribe(bytes32 _attribute, RegistryClone _syncer) external onlyOwner {
  > |        subscribers[_attribute].push(_syncer);
    |        emit StartSubscription(_attribute, _syncer);
    |    }
  at /unique_chucks/18/0x766ce08cd40b31b79b3681bce55f61e6efc4edfa.sol(353)

[33mWarning[0m for UnrestrictedWrite in contract 'Registry':
    |        require(_index < length);
    |        emit StopSubscription(_attribute, subscribers[_attribute][_index]);
  > |        subscribers[_attribute][_index] = subscribers[_attribute][length - 1];
    |        subscribers[_attribute].length = length - 1;
    |    }
  at /unique_chucks/18/0x766ce08cd40b31b79b3681bce55f61e6efc4edfa.sol(361)

[33mWarning[0m for UnrestrictedWrite in contract 'Registry':
    |    */
    |    function transferOwnership(address newOwner) public onlyOwner {
  > |        pendingOwner = newOwner;
    |    }
    |
  at /unique_chucks/18/0x766ce08cd40b31b79b3681bce55f61e6efc4edfa.sol(446)

[33mWarning[0m for UnrestrictedWrite in contract 'Registry':
    |    function claimOwnership() public onlyPendingOwner {
    |        emit OwnershipTransferred(owner, pendingOwner);
  > |        owner = pendingOwner;
    |        pendingOwner = address(0);
    |    }
  at /unique_chucks/18/0x766ce08cd40b31b79b3681bce55f61e6efc4edfa.sol(454)

[33mWarning[0m for UnrestrictedWrite in contract 'Registry':
    |        emit OwnershipTransferred(owner, pendingOwner);
    |        owner = pendingOwner;
  > |        pendingOwner = address(0);
    |    }
    |}
  at /unique_chucks/18/0x766ce08cd40b31b79b3681bce55f61e6efc4edfa.sol(455)

[31mViolation[0m for TODAmount in contract 'TokenController':
    |    */
    |    function reclaimEther(address payable _to) external onlyOwner {
  > |        _to.transfer(address(this).balance);
    |    }
    |
  at /unique_chucks/18/0x766ce08cd40b31b79b3681bce55f61e6efc4edfa.sol(2005)

[33mWarning[0m for UnrestrictedWrite in contract 'TokenController':
    |    function initialize() external {
    |        require(!initialized, "already initialized");
  > |        owner = msg.sender;
    |        initialized = true;
    |    }
  at /unique_chucks/18/0x766ce08cd40b31b79b3681bce55f61e6efc4edfa.sol(1562)

[33mWarning[0m for UnrestrictedWrite in contract 'TokenController':
    |        require(!initialized, "already initialized");
    |        owner = msg.sender;
  > |        initialized = true;
    |    }
    |
  at /unique_chucks/18/0x766ce08cd40b31b79b3681bce55f61e6efc4edfa.sol(1563)

[33mWarning[0m for UnrestrictedWrite in contract 'TokenController':
    |    */
    |    function pauseMints() external onlyMintPauserOrOwner {
  > |        mintPaused = true;
    |        emit AllMintsPaused(true);
    |    }
  at /unique_chucks/18/0x766ce08cd40b31b79b3681bce55f61e6efc4edfa.sol(1849)

[33mWarning[0m for UnrestrictedWrite in contract 'TokenController':
    |    */
    |    function pauseMint(uint _opIndex) external onlyMintPauserOrOwner {
  > |        mintOperations[_opIndex].paused = true;
    |        emit MintPaused(_opIndex, true);
    |    }
  at /unique_chucks/18/0x766ce08cd40b31b79b3681bce55f61e6efc4edfa.sol(1866)