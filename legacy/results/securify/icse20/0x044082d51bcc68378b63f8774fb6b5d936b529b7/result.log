Processing contract: /unique_chucks/31/0x044082d51bcc68378b63f8774fb6b5d936b529b7.sol:BDRContract
Processing contract: /unique_chucks/31/0x044082d51bcc68378b63f8774fb6b5d936b529b7.sol:BurnableToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/31/0x044082d51bcc68378b63f8774fb6b5d936b529b7.sol:IOAEX
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/31/0x044082d51bcc68378b63f8774fb6b5d936b529b7.sol:Ownable
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/31/0x044082d51bcc68378b63f8774fb6b5d936b529b7.sol:Pausable
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/31/0x044082d51bcc68378b63f8774fb6b5d936b529b7.sol:PausableToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/31/0x044082d51bcc68378b63f8774fb6b5d936b529b7.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/31/0x044082d51bcc68378b63f8774fb6b5d936b529b7.sol:StandardToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/31/0x044082d51bcc68378b63f8774fb6b5d936b529b7.sol:Token
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for LockedEther in contract 'IOAEX':
    | * @title IOAEX ENTITY TOKEN
    | */
  > |contract IOAEX is Token {
    |    // The address of BDR contract
    |    BDRContract public BDRInstance;
  at /unique_chucks/31/0x044082d51bcc68378b63f8774fb6b5d936b529b7.sol(358)

[33mWarning[0m for UnrestrictedWrite in contract 'IOAEX':
    | * @title IOAEX ENTITY TOKEN
    | */
  > |contract IOAEX is Token {
    |    // The address of BDR contract
    |    BDRContract public BDRInstance;
  at /unique_chucks/31/0x044082d51bcc68378b63f8774fb6b5d936b529b7.sol(358)

[33mWarning[0m for UnrestrictedWrite in contract 'IOAEX':
    |        if (releasedAmount[addr] == totalLockAmount[addr]) {
    |            delete allocations[addr];
  > |            totalLockAmount[addr] = 0;
    |        }
    |        emit ReleaseToken(addr, amount, now);
  at /unique_chucks/31/0x044082d51bcc68378b63f8774fb6b5d936b529b7.sol(448)

[31mViolation[0m for UnrestrictedWrite in contract 'Ownable':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(owner, newOwner);
  > |        owner = newOwner;
    |    }
    |}
  at /unique_chucks/31/0x044082d51bcc68378b63f8774fb6b5d936b529b7.sol(87)

[33mWarning[0m for UnrestrictedWrite in contract 'Ownable':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(owner, newOwner);
  > |        owner = newOwner;
    |    }
    |}
  at /unique_chucks/31/0x044082d51bcc68378b63f8774fb6b5d936b529b7.sol(87)

[31mViolation[0m for UnrestrictedWrite in contract 'Pausable':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(owner, newOwner);
  > |        owner = newOwner;
    |    }
    |}
  at /unique_chucks/31/0x044082d51bcc68378b63f8774fb6b5d936b529b7.sol(87)

[33mWarning[0m for UnrestrictedWrite in contract 'Pausable':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(owner, newOwner);
  > |        owner = newOwner;
    |    }
    |}
  at /unique_chucks/31/0x044082d51bcc68378b63f8774fb6b5d936b529b7.sol(87)

[33mWarning[0m for UnrestrictedWrite in contract 'Pausable':
    |     */
    |    function pause() public onlyOwner whenNotPaused {
  > |        paused = true;
    |        emit Pause();
    |    }
  at /unique_chucks/31/0x044082d51bcc68378b63f8774fb6b5d936b529b7.sol(118)

[33mWarning[0m for UnrestrictedWrite in contract 'Pausable':
    |     */
    |    function unpause() public onlyOwner whenPaused {
  > |        paused = false;
    |        emit Unpause();
    |    }
  at /unique_chucks/31/0x044082d51bcc68378b63f8774fb6b5d936b529b7.sol(126)

[33mWarning[0m for UnrestrictedWrite in contract 'PausableToken':
    |
    |        balances[msg.sender] = balances[msg.sender].sub(_value);
  > |        balances[_to] = balances[_to].add(_value);
    |        emit Transfer(msg.sender, _to, _value);
    |        return true;
  at /unique_chucks/31/0x044082d51bcc68378b63f8774fb6b5d936b529b7.sol(174)

[33mWarning[0m for UnrestrictedWrite in contract 'PausableToken':
    |        require(_value <= allowed[_from][msg.sender]);
    |
  > |        balances[_from] = balances[_from].sub(_value);
    |        balances[_to] = balances[_to].add(_value);
    |        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
  at /unique_chucks/31/0x044082d51bcc68378b63f8774fb6b5d936b529b7.sol(205)

[33mWarning[0m for UnrestrictedWrite in contract 'PausableToken':
    |
    |        balances[_from] = balances[_from].sub(_value);
  > |        balances[_to] = balances[_to].add(_value);
    |        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
    |        emit Transfer(_from, _to, _value);
  at /unique_chucks/31/0x044082d51bcc68378b63f8774fb6b5d936b529b7.sol(206)

[33mWarning[0m for UnrestrictedWrite in contract 'PausableToken':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(owner, newOwner);
  > |        owner = newOwner;
    |    }
    |}
  at /unique_chucks/31/0x044082d51bcc68378b63f8774fb6b5d936b529b7.sol(87)

[33mWarning[0m for UnrestrictedWrite in contract 'PausableToken':
    |     */
    |    function pause() public onlyOwner whenNotPaused {
  > |        paused = true;
    |        emit Pause();
    |    }
  at /unique_chucks/31/0x044082d51bcc68378b63f8774fb6b5d936b529b7.sol(118)

[33mWarning[0m for UnrestrictedWrite in contract 'PausableToken':
    |     */
    |    function unpause() public onlyOwner whenPaused {
  > |        paused = false;
    |        emit Unpause();
    |    }
  at /unique_chucks/31/0x044082d51bcc68378b63f8774fb6b5d936b529b7.sol(126)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |
    |        balances[msg.sender] = balances[msg.sender].sub(_value);
  > |        balances[_to] = balances[_to].add(_value);
    |        emit Transfer(msg.sender, _to, _value);
    |        return true;
  at /unique_chucks/31/0x044082d51bcc68378b63f8774fb6b5d936b529b7.sol(174)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |        require(_value <= allowed[_from][msg.sender]);
    |
  > |        balances[_from] = balances[_from].sub(_value);
    |        balances[_to] = balances[_to].add(_value);
    |        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
  at /unique_chucks/31/0x044082d51bcc68378b63f8774fb6b5d936b529b7.sol(205)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |
    |        balances[_from] = balances[_from].sub(_value);
  > |        balances[_to] = balances[_to].add(_value);
    |        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
    |        emit Transfer(_from, _to, _value);
  at /unique_chucks/31/0x044082d51bcc68378b63f8774fb6b5d936b529b7.sol(206)

[31mViolation[0m for LockedEther in contract 'Token':
    | * @dev Standard template for ERC20 Token
    | */
  > |contract Token is PausableToken, BurnableToken {
    |    string public name; 
    |    string public symbol; 
  at /unique_chucks/31/0x044082d51bcc68378b63f8774fb6b5d936b529b7.sol(323)

[33mWarning[0m for UnrestrictedWrite in contract 'Token':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(owner, newOwner);
  > |        owner = newOwner;
    |    }
    |}
  at /unique_chucks/31/0x044082d51bcc68378b63f8774fb6b5d936b529b7.sol(87)

[33mWarning[0m for UnrestrictedWrite in contract 'Token':
    |     */
    |    function pause() public onlyOwner whenNotPaused {
  > |        paused = true;
    |        emit Pause();
    |    }
  at /unique_chucks/31/0x044082d51bcc68378b63f8774fb6b5d936b529b7.sol(118)

[33mWarning[0m for UnrestrictedWrite in contract 'Token':
    |     */
    |    function unpause() public onlyOwner whenPaused {
  > |        paused = false;
    |        emit Unpause();
    |    }
  at /unique_chucks/31/0x044082d51bcc68378b63f8774fb6b5d936b529b7.sol(126)