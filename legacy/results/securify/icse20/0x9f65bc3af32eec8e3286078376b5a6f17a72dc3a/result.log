Processing contract: /unique_chucks/30/0x9f65bc3af32eec8e3286078376b5a6f17a72dc3a.sol:ERC20
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/30/0x9f65bc3af32eec8e3286078376b5a6f17a72dc3a.sol:MultiSender
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for MissingInputValidation in contract 'MultiSender':
    |     * to let MultiSender be able to transfer your tokens.
    |     */
  > |    function multiSend(address _tokenAddr, address[] memory _to, uint256[] memory _value) public returns (bool _success) {
    |        assert(_to.length == _value.length);
    |        assert(_to.length <= 150);
  at /unique_chucks/30/0x9f65bc3af32eec8e3286078376b5a6f17a72dc3a.sol(29)

[31mViolation[0m for RepeatedCall in contract 'MultiSender':
    |        ERC20 _token = ERC20(_tokenAddr);
    |        for (uint8 i = 0; i < _to.length; i++) {
  > |            assert((_token.transferFrom(msg.sender, _to[i], _value[i])) == true);
    |        }
    |        return true;
  at /unique_chucks/30/0x9f65bc3af32eec8e3286078376b5a6f17a72dc3a.sol(34)