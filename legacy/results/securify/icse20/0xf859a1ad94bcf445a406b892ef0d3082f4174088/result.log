Processing contract: /unique_chucks/9/0xf859a1ad94bcf445a406b892ef0d3082f4174088.sol:CEther
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
java.io.IOException: Timeout for /tmp/binaries_souffle2797059679086379998/mustExplicit -j 2 -F /tmp/souffle-e832389a-f71d-41b4-b1e7-2ef064bc8814 -D /tmp/souffle-e832389a-f71d-41b4-b1e7-2ef064bc8814_OUT
	at ch.securify.analysis.AbstractDataflow.runCommand(AbstractDataflow.java:277)
	at ch.securify.analysis.AbstractDataflow.initDataflow(AbstractDataflow.java:169)
	at ch.securify.analysis.MustExplicitDataflow.<init>(MustExplicitDataflow.java:33)
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:33)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error in Securify
java.lang.RuntimeException
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:37)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error, skipping: /unique_chucks/9/0xf859a1ad94bcf445a406b892ef0d3082f4174088.sol:CEther
Processing contract: /unique_chucks/9/0xf859a1ad94bcf445a406b892ef0d3082f4174088.sol:CToken
Processing contract: /unique_chucks/9/0xf859a1ad94bcf445a406b892ef0d3082f4174088.sol:CarefulMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/9/0xf859a1ad94bcf445a406b892ef0d3082f4174088.sol:ComptrollerErrorReporter
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/9/0xf859a1ad94bcf445a406b892ef0d3082f4174088.sol:ComptrollerInterface
Processing contract: /unique_chucks/9/0xf859a1ad94bcf445a406b892ef0d3082f4174088.sol:EIP20Interface
Processing contract: /unique_chucks/9/0xf859a1ad94bcf445a406b892ef0d3082f4174088.sol:EIP20NonStandardInterface
Processing contract: /unique_chucks/9/0xf859a1ad94bcf445a406b892ef0d3082f4174088.sol:Exponential
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/9/0xf859a1ad94bcf445a406b892ef0d3082f4174088.sol:InterestRateModel
Processing contract: /unique_chucks/9/0xf859a1ad94bcf445a406b892ef0d3082f4174088.sol:Maximillion
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/9/0xf859a1ad94bcf445a406b892ef0d3082f4174088.sol:ReentrancyGuard
Processing contract: /unique_chucks/9/0xf859a1ad94bcf445a406b892ef0d3082f4174088.sol:TokenErrorReporter
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for MissingInputValidation in contract 'Maximillion':
    |     * @return The initial borrows before the repay
    |     */
  > |    function repayBehalf(address borrower) public payable {
    |        return repayBehalfExplicit(borrower, cEther);
    |    }
  at /unique_chucks/9/0xf859a1ad94bcf445a406b892ef0d3082f4174088.sol(2570)

[31mViolation[0m for MissingInputValidation in contract 'Maximillion':
    |     * @return The initial borrows before the repay
    |     */
  > |    function repayBehalfExplicit(address borrower, CEther cEther_) public payable {
    |        uint received = msg.value;
    |        uint borrows = cEther_.borrowBalanceCurrent(borrower);
  at /unique_chucks/9/0xf859a1ad94bcf445a406b892ef0d3082f4174088.sol(2581)

[33mWarning[0m for TODAmount in contract 'Maximillion':
    |        uint borrows = cEther_.borrowBalanceCurrent(borrower);
    |        if (received > borrows) {
  > |            cEther_.repayBorrowBehalf.value(borrows)(borrower);
    |            msg.sender.transfer(received - borrows);
    |        } else {
  at /unique_chucks/9/0xf859a1ad94bcf445a406b892ef0d3082f4174088.sol(2585)

[33mWarning[0m for TODAmount in contract 'Maximillion':
    |        if (received > borrows) {
    |            cEther_.repayBorrowBehalf.value(borrows)(borrower);
  > |            msg.sender.transfer(received - borrows);
    |        } else {
    |            cEther_.repayBorrowBehalf.value(received)(borrower);
  at /unique_chucks/9/0xf859a1ad94bcf445a406b892ef0d3082f4174088.sol(2586)

[33mWarning[0m for TODAmount in contract 'Maximillion':
    |            msg.sender.transfer(received - borrows);
    |        } else {
  > |            cEther_.repayBorrowBehalf.value(received)(borrower);
    |        }
    |    }
  at /unique_chucks/9/0xf859a1ad94bcf445a406b892ef0d3082f4174088.sol(2588)

[33mWarning[0m for TODReceiver in contract 'Maximillion':
    |        uint borrows = cEther_.borrowBalanceCurrent(borrower);
    |        if (received > borrows) {
  > |            cEther_.repayBorrowBehalf.value(borrows)(borrower);
    |            msg.sender.transfer(received - borrows);
    |        } else {
  at /unique_chucks/9/0xf859a1ad94bcf445a406b892ef0d3082f4174088.sol(2585)

[33mWarning[0m for TODReceiver in contract 'Maximillion':
    |            msg.sender.transfer(received - borrows);
    |        } else {
  > |            cEther_.repayBorrowBehalf.value(received)(borrower);
    |        }
    |    }
  at /unique_chucks/9/0xf859a1ad94bcf445a406b892ef0d3082f4174088.sol(2588)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'Maximillion':
    |        uint borrows = cEther_.borrowBalanceCurrent(borrower);
    |        if (received > borrows) {
  > |            cEther_.repayBorrowBehalf.value(borrows)(borrower);
    |            msg.sender.transfer(received - borrows);
    |        } else {
  at /unique_chucks/9/0xf859a1ad94bcf445a406b892ef0d3082f4174088.sol(2585)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'Maximillion':
    |        uint borrows = cEther_.borrowBalanceCurrent(borrower);
    |        if (received > borrows) {
  > |            cEther_.repayBorrowBehalf.value(borrows)(borrower);
    |            msg.sender.transfer(received - borrows);
    |        } else {
  at /unique_chucks/9/0xf859a1ad94bcf445a406b892ef0d3082f4174088.sol(2585)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'Maximillion':
    |        if (received > borrows) {
    |            cEther_.repayBorrowBehalf.value(borrows)(borrower);
  > |            msg.sender.transfer(received - borrows);
    |        } else {
    |            cEther_.repayBorrowBehalf.value(received)(borrower);
  at /unique_chucks/9/0xf859a1ad94bcf445a406b892ef0d3082f4174088.sol(2586)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'Maximillion':
    |            msg.sender.transfer(received - borrows);
    |        } else {
  > |            cEther_.repayBorrowBehalf.value(received)(borrower);
    |        }
    |    }
  at /unique_chucks/9/0xf859a1ad94bcf445a406b892ef0d3082f4174088.sol(2588)