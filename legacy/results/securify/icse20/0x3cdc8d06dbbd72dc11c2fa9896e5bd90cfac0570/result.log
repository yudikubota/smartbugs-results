Processing contract: /unique_chucks/17/0x3cdc8d06dbbd72dc11c2fa9896e5bd90cfac0570.sol:ERC20
Processing contract: /unique_chucks/17/0x3cdc8d06dbbd72dc11c2fa9896e5bd90cfac0570.sol:Lockable
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/17/0x3cdc8d06dbbd72dc11c2fa9896e5bd90cfac0570.sol:SPONBToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/17/0x3cdc8d06dbbd72dc11c2fa9896e5bd90cfac0570.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for MissingInputValidation in contract 'Lockable':
    |     * @dev They can transfer even if tokenTranser flag is false.
    |     */
  > |    mapping(address => bool) public unlockAddress;
    |
    |    /**
  at /unique_chucks/17/0x3cdc8d06dbbd72dc11c2fa9896e5bd90cfac0570.sol(75)

[31mViolation[0m for MissingInputValidation in contract 'Lockable':
    |     * @dev They cannot transfer even if tokenTransfer flag is true.
    |     */
  > |    mapping(address => bool) public lockAddress;
    |
    |    event Locked(address lockAddress, bool status);
  at /unique_chucks/17/0x3cdc8d06dbbd72dc11c2fa9896e5bd90cfac0570.sol(80)

[31mViolation[0m for MissingInputValidation in contract 'Lockable':
    |     * @dev add or remove in lockAddress(blacklist)
    |     */
  > |    function setLockAddress(address target, bool status)
    |    external
    |    isOwner
  at /unique_chucks/17/0x3cdc8d06dbbd72dc11c2fa9896e5bd90cfac0570.sol(119)

[31mViolation[0m for MissingInputValidation in contract 'Lockable':
    |     * @dev add or remove in unlockAddress(whitelist)
    |     */
  > |    function setUnlockAddress(address target, bool status)
    |    external
    |    isOwner
  at /unique_chucks/17/0x3cdc8d06dbbd72dc11c2fa9896e5bd90cfac0570.sol(131)

[33mWarning[0m for UnrestrictedWrite in contract 'Lockable':
    |    {
    |        require(owner != target);
  > |        lockAddress[target] = status;
    |        emit Locked(target, status);
    |    }
  at /unique_chucks/17/0x3cdc8d06dbbd72dc11c2fa9896e5bd90cfac0570.sol(124)

[33mWarning[0m for UnrestrictedWrite in contract 'Lockable':
    |    isOwner
    |    {
  > |        unlockAddress[target] = status;
    |        emit Unlocked(target, status);
    |    }
  at /unique_chucks/17/0x3cdc8d06dbbd72dc11c2fa9896e5bd90cfac0570.sol(135)

[31mViolation[0m for LockedEther in contract 'SPONBToken':
    | * This source code is audited by external auditors.
    | */
  > |contract SPONBToken is ERC20, Lockable {
    |
    |    string public constant name = "SPONB";
  at /unique_chucks/17/0x3cdc8d06dbbd72dc11c2fa9896e5bd90cfac0570.sol(145)