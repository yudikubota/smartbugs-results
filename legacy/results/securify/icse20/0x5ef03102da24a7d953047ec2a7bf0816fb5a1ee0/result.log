Processing contract: /unique_chucks/37/0x5ef03102da24a7d953047ec2a7bf0816fb5a1ee0.sol:CertificateController
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/37/0x5ef03102da24a7d953047ec2a7bf0816fb5a1ee0.sol:CertificateControllerMock
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/37/0x5ef03102da24a7d953047ec2a7bf0816fb5a1ee0.sol:ERC1400
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
java.io.IOException: Timeout for /tmp/binaries_souffle6772560536904583800/mustExplicit -j 2 -F /tmp/souffle-6817ebc0-5126-4497-aa76-69c8af66d2eb -D /tmp/souffle-6817ebc0-5126-4497-aa76-69c8af66d2eb_OUT
	at ch.securify.analysis.AbstractDataflow.runCommand(AbstractDataflow.java:277)
	at ch.securify.analysis.AbstractDataflow.initDataflow(AbstractDataflow.java:169)
	at ch.securify.analysis.MustExplicitDataflow.<init>(MustExplicitDataflow.java:33)
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:33)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error in Securify
java.lang.RuntimeException
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:37)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error, skipping: /unique_chucks/37/0x5ef03102da24a7d953047ec2a7bf0816fb5a1ee0.sol:ERC1400
Processing contract: /unique_chucks/37/0x5ef03102da24a7d953047ec2a7bf0816fb5a1ee0.sol:ERC1410
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/37/0x5ef03102da24a7d953047ec2a7bf0816fb5a1ee0.sol:ERC777
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/37/0x5ef03102da24a7d953047ec2a7bf0816fb5a1ee0.sol:ERC820Client
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/37/0x5ef03102da24a7d953047ec2a7bf0816fb5a1ee0.sol:ERC820Registry
Processing contract: /unique_chucks/37/0x5ef03102da24a7d953047ec2a7bf0816fb5a1ee0.sol:IERC1400
Processing contract: /unique_chucks/37/0x5ef03102da24a7d953047ec2a7bf0816fb5a1ee0.sol:IERC1410
Processing contract: /unique_chucks/37/0x5ef03102da24a7d953047ec2a7bf0816fb5a1ee0.sol:IERC777
Processing contract: /unique_chucks/37/0x5ef03102da24a7d953047ec2a7bf0816fb5a1ee0.sol:IERC777TokensRecipient
Processing contract: /unique_chucks/37/0x5ef03102da24a7d953047ec2a7bf0816fb5a1ee0.sol:IERC777TokensSender
Processing contract: /unique_chucks/37/0x5ef03102da24a7d953047ec2a7bf0816fb5a1ee0.sol:MinterRole
Processing contract: /unique_chucks/37/0x5ef03102da24a7d953047ec2a7bf0816fb5a1ee0.sol:Ownable
Processing contract: /unique_chucks/37/0x5ef03102da24a7d953047ec2a7bf0816fb5a1ee0.sol:ReentrancyGuard
Processing contract: /unique_chucks/37/0x5ef03102da24a7d953047ec2a7bf0816fb5a1ee0.sol:Roles
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/37/0x5ef03102da24a7d953047ec2a7bf0816fb5a1ee0.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for MissingInputValidation in contract 'CertificateController':
    |   * @return uint256 Number of transaction already sent to this contract.
    |   */
  > |  function checkCount(address sender) external view returns (uint256) {
    |    return _checkCount[sender];
    |  }
  at /unique_chucks/37/0x5ef03102da24a7d953047ec2a7bf0816fb5a1ee0.sol(281)

[31mViolation[0m for MissingInputValidation in contract 'CertificateController':
    |   * @return bool 'true' if operator is authorized as certificate signer, 'false' if not.
    |   */
  > |  function certificateSigners(address operator) external view returns (bool) {
    |    return _certificateSigners[operator];
    |  }
  at /unique_chucks/37/0x5ef03102da24a7d953047ec2a7bf0816fb5a1ee0.sol(290)

[31mViolation[0m for MissingInputValidation in contract 'CertificateControllerMock':
    |   * @return uint256 Number of transaction already sent to this contract.
    |   */
  > |  function checkCount(address sender) external view returns (uint256) {
    |    return _checkCount[sender];
    |  }
  at /unique_chucks/37/0x5ef03102da24a7d953047ec2a7bf0816fb5a1ee0.sol(281)

[31mViolation[0m for MissingInputValidation in contract 'CertificateControllerMock':
    |   * @return bool 'true' if operator is authorized as certificate signer, 'false' if not.
    |   */
  > |  function certificateSigners(address operator) external view returns (bool) {
    |    return _certificateSigners[operator];
    |  }
  at /unique_chucks/37/0x5ef03102da24a7d953047ec2a7bf0816fb5a1ee0.sol(290)

[31mViolation[0m for LockedEther in contract 'ERC1410':
    | * @dev ERC1410 logic
    | */
  > |contract ERC1410 is IERC1410, ERC777{
    |
    |  /******************** Mappings to find partition ******************************/
  at /unique_chucks/37/0x5ef03102da24a7d953047ec2a7bf0816fb5a1ee0.sol(984)

[31mViolation[0m for RepeatedCall in contract 'ERC1410':
    |
    |    if (senderImplementation != address(0)) {
  > |      IERC777TokensSender(senderImplementation).tokensToTransfer(partition, operator, from, to, value, data, operatorData);
    |    }
    |  }
  at /unique_chucks/37/0x5ef03102da24a7d953047ec2a7bf0816fb5a1ee0.sol(897)

[31mViolation[0m for RepeatedCall in contract 'ERC1410':
    |
    |    if (recipientImplementation != address(0)) {
  > |      IERC777TokensRecipient(recipientImplementation).tokensReceived(partition, operator, from, to, value, data, operatorData);
    |    } else if (preventLocking) {
    |      require(_isRegularAddress(to), "A6: Transfer Blocked - Receiver not eligible");
  at /unique_chucks/37/0x5ef03102da24a7d953047ec2a7bf0816fb5a1ee0.sol(933)

[33mWarning[0m for UnrestrictedWrite in contract 'ERC1410':
    |
    |/**
  > | * @title SafeMath
    | * @dev Unsigned math operations with safety checks that revert on error
    | */
  at /unique_chucks/37/0x5ef03102da24a7d953047ec2a7bf0816fb5a1ee0.sol(4)

[33mWarning[0m for UnrestrictedWrite in contract 'ERC1410':
    | * @dev ERC1410 logic
    | */
  > |contract ERC1410 is IERC1410, ERC777{
    |
    |  /******************** Mappings to find partition ******************************/
  at /unique_chucks/37/0x5ef03102da24a7d953047ec2a7bf0816fb5a1ee0.sol(984)

[33mWarning[0m for UnrestrictedWrite in contract 'ERC1410':
    |      for (uint i = 0; i < _partitionsOf[from].length; i++) {
    |        if(_partitionsOf[from][i] == partition) {
  > |          _partitionsOf[from][i] = _partitionsOf[from][_partitionsOf[from].length - 1];
    |          delete _partitionsOf[from][_partitionsOf[from].length - 1];
    |          _partitionsOf[from].length--;
  at /unique_chucks/37/0x5ef03102da24a7d953047ec2a7bf0816fb5a1ee0.sol(1264)

[33mWarning[0m for UnrestrictedWrite in contract 'ERC1410':
    |        if(_partitionsOf[from][i] == partition) {
    |          _partitionsOf[from][i] = _partitionsOf[from][_partitionsOf[from].length - 1];
  > |          delete _partitionsOf[from][_partitionsOf[from].length - 1];
    |          _partitionsOf[from].length--;
    |          break;
  at /unique_chucks/37/0x5ef03102da24a7d953047ec2a7bf0816fb5a1ee0.sol(1265)

[33mWarning[0m for UnrestrictedWrite in contract 'ERC1410':
    |      for (uint i = 0; i < _totalPartitions.length; i++) {
    |        if(_totalPartitions[i] == partition) {
  > |          _totalPartitions[i] = _totalPartitions[_totalPartitions.length - 1];
    |          delete _totalPartitions[_totalPartitions.length - 1];
    |          _totalPartitions.length--;
  at /unique_chucks/37/0x5ef03102da24a7d953047ec2a7bf0816fb5a1ee0.sol(1276)

[33mWarning[0m for UnrestrictedWrite in contract 'ERC1410':
    |        if(_totalPartitions[i] == partition) {
    |          _totalPartitions[i] = _totalPartitions[_totalPartitions.length - 1];
  > |          delete _totalPartitions[_totalPartitions.length - 1];
    |          _totalPartitions.length--;
    |          break;
  at /unique_chucks/37/0x5ef03102da24a7d953047ec2a7bf0816fb5a1ee0.sol(1277)

[33mWarning[0m for UnrestrictedWrite in contract 'ERC1410':
    |    if(value != 0) {
    |      if(_balanceOfByPartition[to][partition] == 0) {
  > |        _partitionsOf[to].push(partition);
    |      }
    |      _balanceOfByPartition[to][partition] = _balanceOfByPartition[to][partition].add(value);
  at /unique_chucks/37/0x5ef03102da24a7d953047ec2a7bf0816fb5a1ee0.sol(1295)

[31mViolation[0m for LockedEther in contract 'ERC777':
    | * @dev ERC777 logic
    | */
  > |contract ERC777 is IERC777, Ownable, ERC820Client, CertificateController, ReentrancyGuard {
    |  using SafeMath for uint256;
    |
  at /unique_chucks/37/0x5ef03102da24a7d953047ec2a7bf0816fb5a1ee0.sol(549)

[31mViolation[0m for RepeatedCall in contract 'ERC777':
    |
    |    if (senderImplementation != address(0)) {
  > |      IERC777TokensSender(senderImplementation).tokensToTransfer(partition, operator, from, to, value, data, operatorData);
    |    }
    |  }
  at /unique_chucks/37/0x5ef03102da24a7d953047ec2a7bf0816fb5a1ee0.sol(897)

[33mWarning[0m for RepeatedCall in contract 'ERC777':
    |
    |    if (recipientImplementation != address(0)) {
  > |      IERC777TokensRecipient(recipientImplementation).tokensReceived(partition, operator, from, to, value, data, operatorData);
    |    } else if (preventLocking) {
    |      require(_isRegularAddress(to), "A6: Transfer Blocked - Receiver not eligible");
  at /unique_chucks/37/0x5ef03102da24a7d953047ec2a7bf0816fb5a1ee0.sol(933)

[33mWarning[0m for UnrestrictedWrite in contract 'ERC777':
    |    _callSender(partition, operator, from, to, value, data, operatorData);
    |
  > |    _balances[from] = _balances[from].sub(value);
    |    _balances[to] = _balances[to].add(value);
    |
  at /unique_chucks/37/0x5ef03102da24a7d953047ec2a7bf0816fb5a1ee0.sol(836)

[33mWarning[0m for UnrestrictedWrite in contract 'ERC777':
    |
    |    _balances[from] = _balances[from].sub(value);
  > |    _balances[to] = _balances[to].add(value);
    |
    |    _callRecipient(partition, operator, from, to, value, data, operatorData, preventLocking);
  at /unique_chucks/37/0x5ef03102da24a7d953047ec2a7bf0816fb5a1ee0.sol(837)

[33mWarning[0m for UnrestrictedWrite in contract 'ERC777':
    |    _callSender(partition, operator, from, address(0), value, data, operatorData);
    |
  > |    _balances[from] = _balances[from].sub(value);
    |    _totalSupply = _totalSupply.sub(value);
    |
  at /unique_chucks/37/0x5ef03102da24a7d953047ec2a7bf0816fb5a1ee0.sol(864)

[33mWarning[0m for UnrestrictedWrite in contract 'ERC777':
    |
    |    _balances[from] = _balances[from].sub(value);
  > |    _totalSupply = _totalSupply.sub(value);
    |
    |    emit Redeemed(operator, from, value, data, operatorData);
  at /unique_chucks/37/0x5ef03102da24a7d953047ec2a7bf0816fb5a1ee0.sol(865)