Processing contract: /unique_chucks/31/0x2cf588136b15e47b555331d2f5258063ae6d01ed.sol:ERC20Interface
Processing contract: /unique_chucks/31/0x2cf588136b15e47b555331d2f5258063ae6d01ed.sol:IdeaFeXToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/31/0x2cf588136b15e47b555331d2f5258063ae6d01ed.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[33mWarning[0m for TODAmount in contract 'IdeaFeXToken':
    |
    |    function () external payable {
  > |        communityFund.transfer(msg.value);
    |    }
    |}
  at /unique_chucks/31/0x2cf588136b15e47b555331d2f5258063ae6d01ed.sol(203)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'IdeaFeXToken':
    |
    |    function () external payable {
  > |        communityFund.transfer(msg.value);
    |    }
    |}
  at /unique_chucks/31/0x2cf588136b15e47b555331d2f5258063ae6d01ed.sol(203)

[33mWarning[0m for UnrestrictedWrite in contract 'IdeaFeXToken':
    |        require(account != address(0), "ERC20: burn from the zero address");
    |
  > |        _totalSupply = _totalSupply.sub(value);
    |        _balances[account] = _balances[account].sub(value);
    |        emit Transfer(account, address(0), value);
  at /unique_chucks/31/0x2cf588136b15e47b555331d2f5258063ae6d01ed.sol(194)