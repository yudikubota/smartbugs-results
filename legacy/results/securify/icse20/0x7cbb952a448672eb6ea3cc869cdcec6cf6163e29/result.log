Processing contract: /unique_chucks/7/0x7cbb952a448672eb6ea3cc869cdcec6cf6163e29.sol:House
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/7/0x7cbb952a448672eb6ea3cc869cdcec6cf6163e29.sol:HouseContract
Processing contract: /unique_chucks/7/0x7cbb952a448672eb6ea3cc869cdcec6cf6163e29.sol:OracleContract
Processing contract: /unique_chucks/7/0x7cbb952a448672eb6ea3cc869cdcec6cf6163e29.sol:Owned
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/7/0x7cbb952a448672eb6ea3cc869cdcec6cf6163e29.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for RepeatedCall in contract 'House':
    |            (bets[betId].isOutcomeSet) = OracleContract(bets[betId].oracleAddress).getEventOutcomeIsSet(bets[betId].eventId,bets[betId].outputId); 
    |            if (bets[betId].isOutcomeSet) {
  > |                (bets[betId].outcome) = OracleContract(bets[betId].oracleAddress).getEventOutcome(bets[betId].eventId,bets[betId].outputId); 
    |            }
    |        }     
  at /unique_chucks/7/0x7cbb952a448672eb6ea3cc869cdcec6cf6163e29.sol(302)

[31mViolation[0m for RepeatedCall in contract 'House':
    |            }   
    |            if (!housePaid[betId] && oracleEdgeAmountForBet[betId] > 0) {
  > |                address oracleOwner = HouseContract(bets[betId].oracleAddress).owner();
    |                balance[oracleOwner] += oracleEdgeAmountForBet[betId];
    |                oracleTotalFees[bets[betId].oracleAddress] += oracleEdgeAmountForBet[betId];
  at /unique_chucks/7/0x7cbb952a448672eb6ea3cc869cdcec6cf6163e29.sol(533)

[33mWarning[0m for RepeatedCall in contract 'House':
    |        }     
    |        if (!bets[betId].isCancelled) {
  > |        (bets[betId].closeDateTime, bets[betId].freezeDateTime, bets[betId].isCancelled) = OracleContract(bets[betId].oracleAddress).getEventForHousePlaceBet(bets[betId].eventId);      
    |        }  
    |        if (!bets[betId].isOutcomeSet && bets[betId].freezeDateTime <= now) {
  at /unique_chucks/7/0x7cbb952a448672eb6ea3cc869cdcec6cf6163e29.sol(306)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'House':
    |        require(balance[msg.sender]>=amount,"Insufficient balance");
    |        balance[msg.sender] = sub(balance[msg.sender],amount);
  > |        msg.sender.transfer(amount);
    |        emit transfer(msg.sender,amount,false);
    |    }
  at /unique_chucks/7/0x7cbb952a448672eb6ea3cc869cdcec6cf6163e29.sol(609)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'House':
    |        require(balance[msg.sender]>=amount,"Insufficient balance");
    |        balance[msg.sender] = sub(balance[msg.sender],amount);
  > |        destinationAddress.transfer(amount);
    |        emit transfer(msg.sender,amount,false);
    |    }
  at /unique_chucks/7/0x7cbb952a448672eb6ea3cc869cdcec6cf6163e29.sol(617)

[33mWarning[0m for UnrestrictedWrite in contract 'House':
    | * Kryptium House Smart Contract.
    | */
  > |contract House is SafeMath, Owned {
    |
    |    //enum Category { football, basket }
  at /unique_chucks/7/0x7cbb952a448672eb6ea3cc869cdcec6cf6163e29.sol(99)

[33mWarning[0m for UnrestrictedWrite in contract 'House':
    |        require(balance[msg.sender]>=wager,"Not enough balance");
    |        require(!houseData.newBetsPaused,"Bets are paused right now");
  > |        betNextId += 1;
    |        bets[betNextId].id = betNextId;
    |        bets[betNextId].oracleAddress = houseData.oracleAddress;
  at /unique_chucks/7/0x7cbb952a448672eb6ea3cc869cdcec6cf6163e29.sol(321)

[33mWarning[0m for UnrestrictedWrite in contract 'House':
    |        require(!houseData.newBetsPaused,"Bets are paused right now");
    |        betNextId += 1;
  > |        bets[betNextId].id = betNextId;
    |        bets[betNextId].oracleAddress = houseData.oracleAddress;
    |        bets[betNextId].outputId = outputId;
  at /unique_chucks/7/0x7cbb952a448672eb6ea3cc869cdcec6cf6163e29.sol(322)

[33mWarning[0m for UnrestrictedWrite in contract 'House':
    |        betNextId += 1;
    |        bets[betNextId].id = betNextId;
  > |        bets[betNextId].oracleAddress = houseData.oracleAddress;
    |        bets[betNextId].outputId = outputId;
    |        bets[betNextId].eventId = eventId;
  at /unique_chucks/7/0x7cbb952a448672eb6ea3cc869cdcec6cf6163e29.sol(323)

[33mWarning[0m for UnrestrictedWrite in contract 'House':
    |        bets[betNextId].id = betNextId;
    |        bets[betNextId].oracleAddress = houseData.oracleAddress;
  > |        bets[betNextId].outputId = outputId;
    |        bets[betNextId].eventId = eventId;
    |        bets[betNextId].betType = betType;
  at /unique_chucks/7/0x7cbb952a448672eb6ea3cc869cdcec6cf6163e29.sol(324)

[33mWarning[0m for UnrestrictedWrite in contract 'House':
    |        bets[betNextId].oracleAddress = houseData.oracleAddress;
    |        bets[betNextId].outputId = outputId;
  > |        bets[betNextId].eventId = eventId;
    |        bets[betNextId].betType = betType;
    |        bets[betNextId].createdBy = msg.sender;
  at /unique_chucks/7/0x7cbb952a448672eb6ea3cc869cdcec6cf6163e29.sol(325)

[33mWarning[0m for UnrestrictedWrite in contract 'House':
    |        bets[betNextId].outputId = outputId;
    |        bets[betNextId].eventId = eventId;
  > |        bets[betNextId].betType = betType;
    |        bets[betNextId].createdBy = msg.sender;
    |        updateBetDataFromOracle(betNextId);
  at /unique_chucks/7/0x7cbb952a448672eb6ea3cc869cdcec6cf6163e29.sol(326)

[33mWarning[0m for UnrestrictedWrite in contract 'House':
    |        bets[betNextId].eventId = eventId;
    |        bets[betNextId].betType = betType;
  > |        bets[betNextId].createdBy = msg.sender;
    |        updateBetDataFromOracle(betNextId);
    |        require(!bets[betNextId].isCancelled,"Event has been cancelled");
  at /unique_chucks/7/0x7cbb952a448672eb6ea3cc869cdcec6cf6163e29.sol(327)

[33mWarning[0m for UnrestrictedWrite in contract 'House':
    |    function startNewBets(string memory shortMessage) onlyOwner public {
    |        houseData.shortMessage = shortMessage;
  > |        houseData.newBetsPaused = false;
    |        emit HousePropertiesUpdated();
    |    }
  at /unique_chucks/7/0x7cbb952a448672eb6ea3cc869cdcec6cf6163e29.sol(573)

[33mWarning[0m for UnrestrictedWrite in contract 'House':
    |    function stopNewBets(string memory shortMessage) onlyOwner public {
    |        houseData.shortMessage = shortMessage;
  > |        houseData.newBetsPaused = true;
    |        emit HousePropertiesUpdated();
    |    }
  at /unique_chucks/7/0x7cbb952a448672eb6ea3cc869cdcec6cf6163e29.sol(579)

[33mWarning[0m for UnrestrictedWrite in contract 'Owned':
    |    function transferOwnership(address newOwner) onlyOwner public {
    |        require(newOwner != address(0x0));
  > |        owner = newOwner;
    |    }
    |}
  at /unique_chucks/7/0x7cbb952a448672eb6ea3cc869cdcec6cf6163e29.sol(71)