Processing contract: /unique_chucks/9/0x881a0bdf9514c116f4576f4fba263bf5397fca83.sol:Address
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/9/0x881a0bdf9514c116f4576f4fba263bf5397fca83.sol:BetokenFund
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
java.io.IOException: Timeout for /tmp/binaries_souffle8368611320010149539/mustExplicit -j 2 -F /tmp/souffle-05861848-c0a4-4474-9685-33499fa4c467 -D /tmp/souffle-05861848-c0a4-4474-9685-33499fa4c467_OUT
	at ch.securify.analysis.AbstractDataflow.runCommand(AbstractDataflow.java:277)
	at ch.securify.analysis.AbstractDataflow.initDataflow(AbstractDataflow.java:169)
	at ch.securify.analysis.MustExplicitDataflow.<init>(MustExplicitDataflow.java:33)
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:33)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error in Securify
java.lang.RuntimeException
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:37)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error, skipping: /unique_chucks/9/0x881a0bdf9514c116f4576f4fba263bf5397fca83.sol:BetokenFund
Processing contract: /unique_chucks/9/0x881a0bdf9514c116f4576f4fba263bf5397fca83.sol:BetokenProxyInterface
Processing contract: /unique_chucks/9/0x881a0bdf9514c116f4576f4fba263bf5397fca83.sol:BetokenStorage
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/9/0x881a0bdf9514c116f4576f4fba263bf5397fca83.sol:CERC20
Processing contract: /unique_chucks/9/0x881a0bdf9514c116f4576f4fba263bf5397fca83.sol:CompoundOrder
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/9/0x881a0bdf9514c116f4576f4fba263bf5397fca83.sol:CompoundOrderFactory
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/9/0x881a0bdf9514c116f4576f4fba263bf5397fca83.sol:CompoundOrderStorage
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/9/0x881a0bdf9514c116f4576f4fba263bf5397fca83.sol:Comptroller
Processing contract: /unique_chucks/9/0x881a0bdf9514c116f4576f4fba263bf5397fca83.sol:ERC20Detailed
Processing contract: /unique_chucks/9/0x881a0bdf9514c116f4576f4fba263bf5397fca83.sol:IERC20
Processing contract: /unique_chucks/9/0x881a0bdf9514c116f4576f4fba263bf5397fca83.sol:IMiniMeToken
Processing contract: /unique_chucks/9/0x881a0bdf9514c116f4576f4fba263bf5397fca83.sol:KyberNetwork
Processing contract: /unique_chucks/9/0x881a0bdf9514c116f4576f4fba263bf5397fca83.sol:Ownable
Processing contract: /unique_chucks/9/0x881a0bdf9514c116f4576f4fba263bf5397fca83.sol:PriceOracle
Processing contract: /unique_chucks/9/0x881a0bdf9514c116f4576f4fba263bf5397fca83.sol:ReentrancyGuard
Processing contract: /unique_chucks/9/0x881a0bdf9514c116f4576f4fba263bf5397fca83.sol:SafeERC20
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/9/0x881a0bdf9514c116f4576f4fba263bf5397fca83.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/9/0x881a0bdf9514c116f4576f4fba263bf5397fca83.sol:TokenController
Processing contract: /unique_chucks/9/0x881a0bdf9514c116f4576f4fba263bf5397fca83.sol:Utils
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for RepeatedCall in contract 'BetokenStorage':
    |      return 0;
    |    }
  > |    return cToken.totalSupplyAt(managePhaseEndBlock[cycleNumber.sub(CYCLES_TILL_MATURITY)]).sub(proposersVotingWeight);
    |  }
    |
  at /unique_chucks/9/0x881a0bdf9514c116f4576f4fba263bf5397fca83.sol(879)

[31mViolation[0m for RepeatedCall in contract 'BetokenStorage':
    |  function kairoPrice() public view returns (uint256 _kairoPrice) {
    |    if (cToken.totalSupply() == 0) { return MIN_KRO_PRICE; }
  > |    uint256 controlPerKairo = totalFundsInDAI.mul(10 ** 18).div(cToken.totalSupply());
    |    if (controlPerKairo < MIN_KRO_PRICE) {
    |      // keep price above minimum price
  at /unique_chucks/9/0x881a0bdf9514c116f4576f4fba263bf5397fca83.sol(889)

[33mWarning[0m for UnrestrictedWrite in contract 'BetokenStorage':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipTransferred(_owner, address(0));
  > |        _owner = address(0);
    |    }
    |
  at /unique_chucks/9/0x881a0bdf9514c116f4576f4fba263bf5397fca83.sol(162)

[33mWarning[0m for UnrestrictedWrite in contract 'BetokenStorage':
    |        require(newOwner != address(0), "Ownable: new owner is the zero address");
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_chucks/9/0x881a0bdf9514c116f4576f4fba263bf5397fca83.sol(179)

[33mWarning[0m for UnrestrictedWrite in contract 'CompoundOrder':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipTransferred(_owner, address(0));
  > |        _owner = address(0);
    |    }
    |
  at /unique_chucks/9/0x881a0bdf9514c116f4576f4fba263bf5397fca83.sol(162)

[33mWarning[0m for UnrestrictedWrite in contract 'CompoundOrder':
    |        require(newOwner != address(0), "Ownable: new owner is the zero address");
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_chucks/9/0x881a0bdf9514c116f4576f4fba263bf5397fca83.sol(179)

[33mWarning[0m for UnrestrictedWrite in contract 'CompoundOrderStorage':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipTransferred(_owner, address(0));
  > |        _owner = address(0);
    |    }
    |
  at /unique_chucks/9/0x881a0bdf9514c116f4576f4fba263bf5397fca83.sol(162)

[33mWarning[0m for UnrestrictedWrite in contract 'CompoundOrderStorage':
    |        require(newOwner != address(0), "Ownable: new owner is the zero address");
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_chucks/9/0x881a0bdf9514c116f4576f4fba263bf5397fca83.sol(179)

[31mViolation[0m for LockedEther in contract 'Utils':
    | * @author Zefram Lou (Zebang Liu)
    | */
  > |contract Utils {
    |  using SafeMath for uint256;
    |  using SafeERC20 for ERC20Detailed;
  at /unique_chucks/9/0x881a0bdf9514c116f4576f4fba263bf5397fca83.sol(494)