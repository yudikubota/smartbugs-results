Processing contract: /unique_chucks/12/0x67d838e04cd073273a76f8b59c14b67aba8a6b62.sol:ERC20
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/12/0x67d838e04cd073273a76f8b59c14b67aba8a6b62.sol:ERC20Detailed
Processing contract: /unique_chucks/12/0x67d838e04cd073273a76f8b59c14b67aba8a6b62.sol:IERC20
Processing contract: /unique_chucks/12/0x67d838e04cd073273a76f8b59c14b67aba8a6b62.sol:Ownable
Processing contract: /unique_chucks/12/0x67d838e04cd073273a76f8b59c14b67aba8a6b62.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/12/0x67d838e04cd073273a76f8b59c14b67aba8a6b62.sol:Token
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[33mWarning[0m for UnrestrictedWrite in contract 'ERC20':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipTransferred(_owner, address(0));
  > |        _owner = address(0);
    |    }
    |
  at /unique_chucks/12/0x67d838e04cd073273a76f8b59c14b67aba8a6b62.sol(123)

[33mWarning[0m for UnrestrictedWrite in contract 'ERC20':
    |     */
    |    function transferOwnership(address newOwner) public onlyOwner {
  > |        _newOwner = newOwner;
    |    }
    |    
  at /unique_chucks/12/0x67d838e04cd073273a76f8b59c14b67aba8a6b62.sol(131)

[33mWarning[0m for UnrestrictedWrite in contract 'ERC20':
    |        require(newOwner != address(0) && _newOwner == newOwner);
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_chucks/12/0x67d838e04cd073273a76f8b59c14b67aba8a6b62.sol(146)

[31mViolation[0m for LockedEther in contract 'Token':
    | * `ERC20` functions.
    | */
  > |contract Token is ERC20, ERC20Detailed {
    |    
    |    uint8 public constant DECIMALS = 18;
  at /unique_chucks/12/0x67d838e04cd073273a76f8b59c14b67aba8a6b62.sol(366)