Processing contract: /unique_chucks/37/0x6242ce3fc133420b9323a82f451b5a9caa736803.sol:ApproveAndCallFallBack
Processing contract: /unique_chucks/37/0x6242ce3fc133420b9323a82f451b5a9caa736803.sol:ERC20Interface
Processing contract: /unique_chucks/37/0x6242ce3fc133420b9323a82f451b5a9caa736803.sol:LibertyEcoToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/37/0x6242ce3fc133420b9323a82f451b5a9caa736803.sol:Owned
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/37/0x6242ce3fc133420b9323a82f451b5a9caa736803.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for DAOConstantGas in contract 'LibertyEcoToken':
    |            
    |            //Transfer ether to fundsWallet
  > |            fundsWallet.transfer(msg.value);
    |            
    |            deductToken(amount);
  at /unique_chucks/37/0x6242ce3fc133420b9323a82f451b5a9caa736803.sol(245)

[33mWarning[0m for TODAmount in contract 'LibertyEcoToken':
    |            
    |            //Transfer ether to fundsWallet
  > |            fundsWallet.transfer(msg.value);
    |            
    |            deductToken(amount);
  at /unique_chucks/37/0x6242ce3fc133420b9323a82f451b5a9caa736803.sol(245)

[33mWarning[0m for TODReceiver in contract 'LibertyEcoToken':
    |            
    |            //Transfer ether to fundsWallet
  > |            fundsWallet.transfer(msg.value);
    |            
    |            deductToken(amount);
  at /unique_chucks/37/0x6242ce3fc133420b9323a82f451b5a9caa736803.sol(245)

[31mViolation[0m for UnrestrictedWrite in contract 'LibertyEcoToken':
    |    function () external payable {
    |        if(balances[owner] >= reserveCap) {
  > |            EtherInWei = EtherInWei + msg.value;
    |            uint256 amount = msg.value * tokensPerEth;
    |            
  at /unique_chucks/37/0x6242ce3fc133420b9323a82f451b5a9caa736803.sol(234)

[33mWarning[0m for UnrestrictedWrite in contract 'LibertyEcoToken':
    |
    |    function transferOwnership(address _newOwner) public onlyOwner {
  > |        newOwner = _newOwner;
    |    }
    |    
  at /unique_chucks/37/0x6242ce3fc133420b9323a82f451b5a9caa736803.sol(95)

[33mWarning[0m for UnrestrictedWrite in contract 'LibertyEcoToken':
    |        require(msg.sender == newOwner);
    |        emit OwnershipTransferred(owner, newOwner);
  > |        owner = newOwner;
    |        newOwner = address(0);
    |    }
  at /unique_chucks/37/0x6242ce3fc133420b9323a82f451b5a9caa736803.sol(101)

[33mWarning[0m for UnrestrictedWrite in contract 'LibertyEcoToken':
    |        emit OwnershipTransferred(owner, newOwner);
    |        owner = newOwner;
  > |        newOwner = address(0);
    |    }
    |}
  at /unique_chucks/37/0x6242ce3fc133420b9323a82f451b5a9caa736803.sol(102)

[33mWarning[0m for UnrestrictedWrite in contract 'LibertyEcoToken':
    |    function transfer(address to, uint256 tokens) public returns (bool success) {
    |        balances[msg.sender] = balances[msg.sender].sub(tokens);
  > |        balances[to] = balances[to].add(tokens);
    |        emit Transfer(msg.sender, to, tokens);
    |        return true;
  at /unique_chucks/37/0x6242ce3fc133420b9323a82f451b5a9caa736803.sol(169)

[33mWarning[0m for UnrestrictedWrite in contract 'LibertyEcoToken':
    |    function transferFrom(address from, address to, uint256 tokens) public returns (bool success) {
    |        
  > |        balances[from] = balances[from].sub(tokens);
    |        allowed[from][msg.sender] = allowed[from][msg.sender].sub(tokens);
    |        balances[to] = balances[to].add(tokens);
  at /unique_chucks/37/0x6242ce3fc133420b9323a82f451b5a9caa736803.sol(202)

[33mWarning[0m for UnrestrictedWrite in contract 'LibertyEcoToken':
    |        balances[from] = balances[from].sub(tokens);
    |        allowed[from][msg.sender] = allowed[from][msg.sender].sub(tokens);
  > |        balances[to] = balances[to].add(tokens);
    |        emit Transfer(from, to, tokens);
    |        return true;
  at /unique_chucks/37/0x6242ce3fc133420b9323a82f451b5a9caa736803.sol(204)

[33mWarning[0m for UnrestrictedWrite in contract 'LibertyEcoToken':
    |            require(balances[fundsWallet] >= amount);
    |            
  > |            balances[fundsWallet] = balances[fundsWallet].sub(amount);
    |            balances[msg.sender] = balances[msg.sender].add(amount);
    |            
  at /unique_chucks/37/0x6242ce3fc133420b9323a82f451b5a9caa736803.sol(239)

[33mWarning[0m for UnrestrictedWrite in contract 'LibertyEcoToken':
    |    // -- Mini function to deduct remaining tokens to sell and add in amount of tokens sold
    |    function deductToken(uint256 amt) private {
  > |        tokensRemain = tokensRemain.sub(amt);
    |        tokensSold = tokensSold.add(amt);
    |    }
  at /unique_chucks/37/0x6242ce3fc133420b9323a82f451b5a9caa736803.sol(264)

[33mWarning[0m for UnrestrictedWrite in contract 'LibertyEcoToken':
    |    function deductToken(uint256 amt) private {
    |        tokensRemain = tokensRemain.sub(amt);
  > |        tokensSold = tokensSold.add(amt);
    |    }
    |    
  at /unique_chucks/37/0x6242ce3fc133420b9323a82f451b5a9caa736803.sol(265)

[33mWarning[0m for UnrestrictedWrite in contract 'LibertyEcoToken':
    |    
    |    function setReserveCap(uint256 tokenAmount) public onlyOwner {
  > |        reserveCap = tokenAmount * 10**uint(decimals);
    |        tokensRemain = balances[owner].sub(reserveCap);
    |    }
  at /unique_chucks/37/0x6242ce3fc133420b9323a82f451b5a9caa736803.sol(271)

[33mWarning[0m for UnrestrictedWrite in contract 'LibertyEcoToken':
    |    function setReserveCap(uint256 tokenAmount) public onlyOwner {
    |        reserveCap = tokenAmount * 10**uint(decimals);
  > |        tokensRemain = balances[owner].sub(reserveCap);
    |    }
    |    
  at /unique_chucks/37/0x6242ce3fc133420b9323a82f451b5a9caa736803.sol(272)

[33mWarning[0m for UnrestrictedWrite in contract 'LibertyEcoToken':
    |    
    |    function setReserveCapPercentage (uint percentage) public onlyOwner {
  > |        reserveCap = calcSupplyPercentage(percentage);
    |        tokensRemain = balances[owner].sub(reserveCap);
    |    }
  at /unique_chucks/37/0x6242ce3fc133420b9323a82f451b5a9caa736803.sol(278)

[33mWarning[0m for UnrestrictedWrite in contract 'LibertyEcoToken':
    |    function setReserveCapPercentage (uint percentage) public onlyOwner {
    |        reserveCap = calcSupplyPercentage(percentage);
  > |        tokensRemain = balances[owner].sub(reserveCap);
    |    }
    |    
  at /unique_chucks/37/0x6242ce3fc133420b9323a82f451b5a9caa736803.sol(279)

[33mWarning[0m for UnrestrictedWrite in contract 'LibertyEcoToken':
    |        uint256 tokenToDistribute = tokens * 10**uint(decimals);
    |        
  > |        balances[owner] = balances[owner].sub(tokenToDistribute);
    |        balances[dist_address] = balances[dist_address].add(tokenToDistribute);
    |        
  at /unique_chucks/37/0x6242ce3fc133420b9323a82f451b5a9caa736803.sol(296)

[33mWarning[0m for UnrestrictedWrite in contract 'LibertyEcoToken':
    |        
    |        balances[owner] = balances[owner].sub(tokenToDistribute);
  > |        balances[dist_address] = balances[dist_address].add(tokenToDistribute);
    |        
    |        emit Transfer(owner, dist_address, tokenToDistribute);
  at /unique_chucks/37/0x6242ce3fc133420b9323a82f451b5a9caa736803.sol(297)

[33mWarning[0m for UnrestrictedWrite in contract 'LibertyEcoToken':
    |        emit Transfer(owner, dist_address, tokenToDistribute);
    |        
  > |        tokensRemain = tokensRemain.sub(tokenToDistribute);
    |        tokensDistributed = tokensDistributed.add(tokenToDistribute);
    |        
  at /unique_chucks/37/0x6242ce3fc133420b9323a82f451b5a9caa736803.sol(301)

[33mWarning[0m for UnrestrictedWrite in contract 'LibertyEcoToken':
    |        
    |        tokensRemain = tokensRemain.sub(tokenToDistribute);
  > |        tokensDistributed = tokensDistributed.add(tokenToDistribute);
    |        
    |        return true;
  at /unique_chucks/37/0x6242ce3fc133420b9323a82f451b5a9caa736803.sol(302)

[33mWarning[0m for UnrestrictedWrite in contract 'LibertyEcoToken':
    |        
    |        require(balances[owner] >= tokenAmount);
  > |        reserveCap = reserveCap.sub(tokenAmount);
    |        tokensRemain = tokensRemain.add(tokenAmount);
    |    }
  at /unique_chucks/37/0x6242ce3fc133420b9323a82f451b5a9caa736803.sol(313)

[33mWarning[0m for UnrestrictedWrite in contract 'LibertyEcoToken':
    |        require(balances[owner] >= tokenAmount);
    |        reserveCap = reserveCap.sub(tokenAmount);
  > |        tokensRemain = tokensRemain.add(tokenAmount);
    |    }
    |}
  at /unique_chucks/37/0x6242ce3fc133420b9323a82f451b5a9caa736803.sol(314)

[31mViolation[0m for MissingInputValidation in contract 'Owned':
    |    }
    |
  > |    function transferOwnership(address _newOwner) public onlyOwner {
    |        newOwner = _newOwner;
    |    }
  at /unique_chucks/37/0x6242ce3fc133420b9323a82f451b5a9caa736803.sol(94)

[33mWarning[0m for UnrestrictedWrite in contract 'Owned':
    |
    |    function transferOwnership(address _newOwner) public onlyOwner {
  > |        newOwner = _newOwner;
    |    }
    |    
  at /unique_chucks/37/0x6242ce3fc133420b9323a82f451b5a9caa736803.sol(95)

[33mWarning[0m for UnrestrictedWrite in contract 'Owned':
    |        require(msg.sender == newOwner);
    |        emit OwnershipTransferred(owner, newOwner);
  > |        owner = newOwner;
    |        newOwner = address(0);
    |    }
  at /unique_chucks/37/0x6242ce3fc133420b9323a82f451b5a9caa736803.sol(101)

[33mWarning[0m for UnrestrictedWrite in contract 'Owned':
    |        emit OwnershipTransferred(owner, newOwner);
    |        owner = newOwner;
  > |        newOwner = address(0);
    |    }
    |}
  at /unique_chucks/37/0x6242ce3fc133420b9323a82f451b5a9caa736803.sol(102)