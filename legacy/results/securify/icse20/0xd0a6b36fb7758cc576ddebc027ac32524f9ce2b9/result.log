Processing contract: /unique_chucks/35/0xd0a6b36fb7758cc576ddebc027ac32524f9ce2b9.sol:NonRandomFiveDemo
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/35/0xd0a6b36fb7758cc576ddebc027ac32524f9ce2b9.sol:TargetInterface
[31mViolation[0m for RepeatedCall in contract 'NonRandomFiveDemo':
    |        
    |        if (!_keepBalance) {
  > |            owner.transfer(address(this).balance);
    |        }
    |    }
  at /unique_chucks/35/0xd0a6b36fb7758cc576ddebc027ac32524f9ce2b9.sol(42)

[31mViolation[0m for TODAmount in contract 'NonRandomFiveDemo':
    |        if (expectedPrize > targetBalanceAfterBet) {
    |            uint256 throwIn = expectedPrize - targetBalanceAfterBet;
  > |            targetAddress.transfer(throwIn);
    |        }
    |
  at /unique_chucks/35/0xd0a6b36fb7758cc576ddebc027ac32524f9ce2b9.sol(32)

[31mViolation[0m for TODAmount in contract 'NonRandomFiveDemo':
    |        
    |        if (!_keepBalance) {
  > |            owner.transfer(address(this).balance);
    |        }
    |    }
  at /unique_chucks/35/0xd0a6b36fb7758cc576ddebc027ac32524f9ce2b9.sol(42)

[31mViolation[0m for TODAmount in contract 'NonRandomFiveDemo':
    |
    |    function withdraw() public onlyOwner {
  > |        owner.transfer(address(this).balance);
    |    }    
    |    
  at /unique_chucks/35/0xd0a6b36fb7758cc576ddebc027ac32524f9ce2b9.sol(47)

[33mWarning[0m for TODAmount in contract 'NonRandomFiveDemo':
    |        string memory betString = ticketString(_nonce);
    |        TargetInterface target = TargetInterface(targetAddress);
  > |        target.sendTXTpsTX.value(betValue)(betString, "");
    |        
    |        require(address(this).balance > ourBalanceInitial);
  at /unique_chucks/35/0xd0a6b36fb7758cc576ddebc027ac32524f9ce2b9.sol(37)

[33mWarning[0m for TODReceiver in contract 'NonRandomFiveDemo':
    |        string memory betString = ticketString(_nonce);
    |        TargetInterface target = TargetInterface(targetAddress);
  > |        target.sendTXTpsTX.value(betValue)(betString, "");
    |        
    |        require(address(this).balance > ourBalanceInitial);
  at /unique_chucks/35/0xd0a6b36fb7758cc576ddebc027ac32524f9ce2b9.sol(37)

[33mWarning[0m for TODReceiver in contract 'NonRandomFiveDemo':
    |        
    |        if (!_keepBalance) {
  > |            owner.transfer(address(this).balance);
    |        }
    |    }
  at /unique_chucks/35/0xd0a6b36fb7758cc576ddebc027ac32524f9ce2b9.sol(42)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'NonRandomFiveDemo':
    |        string memory betString = ticketString(_nonce);
    |        TargetInterface target = TargetInterface(targetAddress);
  > |        target.sendTXTpsTX.value(betValue)(betString, "");
    |        
    |        require(address(this).balance > ourBalanceInitial);
  at /unique_chucks/35/0xd0a6b36fb7758cc576ddebc027ac32524f9ce2b9.sol(37)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'NonRandomFiveDemo':
    |        
    |        if (!_keepBalance) {
  > |            owner.transfer(address(this).balance);
    |        }
    |    }
  at /unique_chucks/35/0xd0a6b36fb7758cc576ddebc027ac32524f9ce2b9.sol(42)