Processing contract: /unique_chucks/22/0x92802ab3d5b3c3f18a9e9a738b36bb9daadb40af.sol:BetWinner
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/22/0x92802ab3d5b3c3f18a9e9a738b36bb9daadb40af.sol:Victim
[31mViolation[0m for DAO in contract 'BetWinner':
    |			uint[] memory betContent = new uint[](1);
    |			betContent[0] = betInfo;
  > |			victim.doBet.value(weiVal)(playid, betMoney, betContent,1);
    |			
    |			uint post = address(this).balance;
  at /unique_chucks/22/0x92802ab3d5b3c3f18a9e9a738b36bb9daadb40af.sol(55)

[31mViolation[0m for MissingInputValidation in contract 'BetWinner':
    |	// w3.eth.getStorageAt("0x77F54E6a0ED49e8Ce5155468FeAEC29368B10465",7)
    |	//
  > |	function setNonce(uint nonce) external onlyOwner {
    |		randonce = nonce;
    |	}
  at /unique_chucks/22/0x92802ab3d5b3c3f18a9e9a738b36bb9daadb40af.sol(27)

[33mWarning[0m for MissingInputValidation in contract 'BetWinner':
    |	}
    |	
  > |	function  doBet(uint weiValOverride) payable external onlyOwner {
    |	    uint weiVal = weiValOverride;
    |	    if (weiVal == 0) {
  at /unique_chucks/22/0x92802ab3d5b3c3f18a9e9a738b36bb9daadb40af.sol(35)

[33mWarning[0m for MissingInputValidation in contract 'BetWinner':
    |	}
    |	
  > |    function getBet(uint randonce) public view onlyOwner returns (uint betInfo, uint randonceNew)  {
    |		uint[4] memory codes = [uint(0),0,0,0];//Winning numbers
    |
  at /unique_chucks/22/0x92802ab3d5b3c3f18a9e9a738b36bb9daadb40af.sol(64)

[31mViolation[0m for TODAmount in contract 'BetWinner':
    |	
    |	function withdraw() external onlyOwner{
  > |		owner.transfer((address(this).balance));
    |	}
    |
  at /unique_chucks/22/0x92802ab3d5b3c3f18a9e9a738b36bb9daadb40af.sol(103)

[33mWarning[0m for TODAmount in contract 'BetWinner':
    |			uint[] memory betContent = new uint[](1);
    |			betContent[0] = betInfo;
  > |			victim.doBet.value(weiVal)(playid, betMoney, betContent,1);
    |			
    |			uint post = address(this).balance;
  at /unique_chucks/22/0x92802ab3d5b3c3f18a9e9a738b36bb9daadb40af.sol(55)

[33mWarning[0m for TODReceiver in contract 'BetWinner':
    |			uint[] memory betContent = new uint[](1);
    |			betContent[0] = betInfo;
  > |			victim.doBet.value(weiVal)(playid, betMoney, betContent,1);
    |			
    |			uint post = address(this).balance;
  at /unique_chucks/22/0x92802ab3d5b3c3f18a9e9a738b36bb9daadb40af.sol(55)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'BetWinner':
    |			uint[] memory betContent = new uint[](1);
    |			betContent[0] = betInfo;
  > |			victim.doBet.value(weiVal)(playid, betMoney, betContent,1);
    |			
    |			uint post = address(this).balance;
  at /unique_chucks/22/0x92802ab3d5b3c3f18a9e9a738b36bb9daadb40af.sol(55)

[31mViolation[0m for UnrestrictedWrite in contract 'BetWinner':
    |			uint post = address(this).balance;
    |			require(before < post, "Sanity check");
  > |    	    randonce = randonceNew;
    |		}
    |
  at /unique_chucks/22/0x92802ab3d5b3c3f18a9e9a738b36bb9daadb40af.sol(59)

[33mWarning[0m for UnrestrictedWrite in contract 'BetWinner':
    |	//
    |	function setNonce(uint nonce) external onlyOwner {
  > |		randonce = nonce;
    |	}
    |	
  at /unique_chucks/22/0x92802ab3d5b3c3f18a9e9a738b36bb9daadb40af.sol(28)