Processing contract: /unique_chucks/2/0x5f236f062f16a9b19819c535127398df9a01d762.sol:IPUXtoken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/2/0x5f236f062f16a9b19819c535127398df9a01d762.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/2/0x5f236f062f16a9b19819c535127398df9a01d762.sol:TokenERC20
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/2/0x5f236f062f16a9b19819c535127398df9a01d762.sol:owned
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for TODAmount in contract 'IPUXtoken':
    |        //Just in rare case, owner wants to transfer Ether from contract to owner address
    |        function manualWithdrawEther()onlyOwner public{
  > |            address(owner).transfer(address(this).balance);
    |        }
    |        
  at /unique_chucks/2/0x5f236f062f16a9b19819c535127398df9a01d762.sol(323)

[31mViolation[0m for TODReceiver in contract 'IPUXtoken':
    |        //Just in rare case, owner wants to transfer Ether from contract to owner address
    |        function manualWithdrawEther()onlyOwner public{
  > |            address(owner).transfer(address(this).balance);
    |        }
    |        
  at /unique_chucks/2/0x5f236f062f16a9b19819c535127398df9a01d762.sol(323)

[31mViolation[0m for LockedEther in contract 'TokenERC20':
    |//***************************************************************//
    |    
  > |    contract TokenERC20 {
    |        // Public variables of the token
    |        using SafeMath for uint256;
  at /unique_chucks/2/0x5f236f062f16a9b19819c535127398df9a01d762.sol(108)

[31mViolation[0m for MissingInputValidation in contract 'owned':
    |        }
    |    
  > |        function transferOwnership(address payable newOwner) onlyOwner public {
    |            owner = newOwner;
    |        }
  at /unique_chucks/2/0x5f236f062f16a9b19819c535127398df9a01d762.sol(97)

[33mWarning[0m for UnrestrictedWrite in contract 'owned':
    |    
    |        function transferOwnership(address payable newOwner) onlyOwner public {
  > |            owner = newOwner;
    |        }
    |    }
  at /unique_chucks/2/0x5f236f062f16a9b19819c535127398df9a01d762.sol(98)