Processing contract: /unique_chucks/19/0xaeb12b5ab62a49c14e72fb3ad2c0e809a9b446b3.sol:PirateLottery
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/19/0xaeb12b5ab62a49c14e72fb3ad2c0e809a9b446b3.sol:iPlpPointsRedeemer
[33mWarning[0m for DAO in contract 'PirateLottery':
    |      uint _amount = tokenHoldoverBalance;
    |      tokenHoldoverBalance = 0;
  > |      (bool paySuccess, ) = address(plpToken).call.value(_amount)("");
    |      if (!paySuccess)
    |        revert();
  at /unique_chucks/19/0xaeb12b5ab62a49c14e72fb3ad2c0e809a9b446b3.sol(322)

[31mViolation[0m for TODAmount in contract 'PirateLottery':
    |      uint _amount = tokenHoldoverBalance;
    |      tokenHoldoverBalance = 0;
  > |      (bool paySuccess, ) = address(plpToken).call.value(_amount)("");
    |      if (!paySuccess)
    |        revert();
  at /unique_chucks/19/0xaeb12b5ab62a49c14e72fb3ad2c0e809a9b446b3.sol(322)

[33mWarning[0m for TODAmount in contract 'PirateLottery':
    |    uint256 _amount = balances[msg.sender];
    |    balances[msg.sender] = 0;
  > |    msg.sender.transfer(_amount);
    |  }
    |
  at /unique_chucks/19/0xaeb12b5ab62a49c14e72fb3ad2c0e809a9b446b3.sol(388)

[31mViolation[0m for TODReceiver in contract 'PirateLottery':
    |      uint _amount = tokenHoldoverBalance;
    |      tokenHoldoverBalance = 0;
  > |      (bool paySuccess, ) = address(plpToken).call.value(_amount)("");
    |      if (!paySuccess)
    |        revert();
  at /unique_chucks/19/0xaeb12b5ab62a49c14e72fb3ad2c0e809a9b446b3.sol(322)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'PirateLottery':
    |      uint _amount = tokenHoldoverBalance;
    |      tokenHoldoverBalance = 0;
  > |      (bool paySuccess, ) = address(plpToken).call.value(_amount)("");
    |      if (!paySuccess)
    |        revert();
  at /unique_chucks/19/0xaeb12b5ab62a49c14e72fb3ad2c0e809a9b446b3.sol(322)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'PirateLottery':
    |    uint256 _amount = balances[msg.sender];
    |    balances[msg.sender] = 0;
  > |    msg.sender.transfer(_amount);
    |  }
    |
  at /unique_chucks/19/0xaeb12b5ab62a49c14e72fb3ad2c0e809a9b446b3.sol(388)

[31mViolation[0m for UnrestrictedWrite in contract 'PirateLottery':
    |    require(msg.value == _currentRound.ticketPrice, "incorrect ticket price");
    |    if (_currentRound.ticketCount == 0)
  > |      _currentRound.begDate = now;
    |    _currentRound.ticketCount++;
    |    _currentRound.prize += msg.value;
  at /unique_chucks/19/0xaeb12b5ab62a49c14e72fb3ad2c0e809a9b446b3.sol(179)

[31mViolation[0m for UnrestrictedWrite in contract 'PirateLottery':
    |    if (_currentRound.ticketCount == 0)
    |      _currentRound.begDate = now;
  > |    _currentRound.ticketCount++;
    |    _currentRound.prize += msg.value;
    |    plpPoints[msg.sender]++;
  at /unique_chucks/19/0xaeb12b5ab62a49c14e72fb3ad2c0e809a9b446b3.sol(180)

[31mViolation[0m for UnrestrictedWrite in contract 'PirateLottery':
    |      _currentRound.begDate = now;
    |    _currentRound.ticketCount++;
  > |    _currentRound.prize += msg.value;
    |    plpPoints[msg.sender]++;
    |    uint256 _ticket = _currentRound.ticketCount;
  at /unique_chucks/19/0xaeb12b5ab62a49c14e72fb3ad2c0e809a9b446b3.sol(181)

[31mViolation[0m for UnrestrictedWrite in contract 'PirateLottery':
    |    _currentRound.playerTickets[msg.sender][_playerTicketCount] = _ticket;
    |    _currentRound.playerTicketCounts[msg.sender]++;
  > |    _currentRound.playersHash = keccak256(abi.encodePacked(_currentRound.playersHash, msg.sender));
    |    uint256 _currentDuration = now - _currentRound.begDate;
    |    if (_currentRound.ticketCount == _currentRound.maxTickets || _currentDuration > LONG_DURATION) {
  at /unique_chucks/19/0xaeb12b5ab62a49c14e72fb3ad2c0e809a9b446b3.sol(188)

[31mViolation[0m for UnrestrictedWrite in contract 'PirateLottery':
    |    require(_previousRound.ticketOwners[_ticket] == _recovered, "claim is not valid");
    |    uint256 _tokenCut = _ownerCutPct * _previousRound.prize / 100;
  > |    tokenHoldoverBalance += _tokenCut;
    |    uint256 _payout = _previousRound.prize - _tokenCut;
    |    balances[msg.sender] += _payout;
  at /unique_chucks/19/0xaeb12b5ab62a49c14e72fb3ad2c0e809a9b446b3.sol(311)

[33mWarning[0m for UnrestrictedWrite in contract 'PirateLottery':
    |    plpPoints[msg.sender]++;
    |    uint256 _ticket = _currentRound.ticketCount;
  > |    _currentRound.ticketOwners[_ticket] = msg.sender;
    |    uint256 _playerTicketCount = _currentRound.playerTicketCounts[msg.sender];
    |    _currentRound.playerTickets[msg.sender][_playerTicketCount] = _ticket;
  at /unique_chucks/19/0xaeb12b5ab62a49c14e72fb3ad2c0e809a9b446b3.sol(184)

[33mWarning[0m for UnrestrictedWrite in contract 'PirateLottery':
    |    uint256 _currentDuration = now - _currentRound.begDate;
    |    if (_currentRound.ticketCount == _currentRound.maxTickets || _currentDuration > LONG_DURATION) {
  > |      _currentRound.playersHash = keccak256(abi.encodePacked(_currentRound.playersHash, block.coinbase));
    |      _currentRound.isOpen = false;
    |      _currentRound.endDate = now;
  at /unique_chucks/19/0xaeb12b5ab62a49c14e72fb3ad2c0e809a9b446b3.sol(191)

[33mWarning[0m for UnrestrictedWrite in contract 'PirateLottery':
    |    if (_currentRound.ticketCount == _currentRound.maxTickets || _currentDuration > LONG_DURATION) {
    |      _currentRound.playersHash = keccak256(abi.encodePacked(_currentRound.playersHash, block.coinbase));
  > |      _currentRound.isOpen = false;
    |      _currentRound.endDate = now;
    |    }
  at /unique_chucks/19/0xaeb12b5ab62a49c14e72fb3ad2c0e809a9b446b3.sol(192)

[33mWarning[0m for UnrestrictedWrite in contract 'PirateLottery':
    |      _currentRound.playersHash = keccak256(abi.encodePacked(_currentRound.playersHash, block.coinbase));
    |      _currentRound.isOpen = false;
  > |      _currentRound.endDate = now;
    |    }
    |  }
  at /unique_chucks/19/0xaeb12b5ab62a49c14e72fb3ad2c0e809a9b446b3.sol(193)

[33mWarning[0m for UnrestrictedWrite in contract 'PirateLottery':
    |    balances[msg.sender] += _payout;
    |    bytes32 _winningHash = keccak256(abi.encodePacked(_currentRound.playersHash, _sigV, _sigR, _sigS));
  > |    _currentRound.winner = uint256(_winningHash) % _currentRound.ticketCount + 1;
    |    emit PayoutEvent(roundCount - 1, msg.sender, _previousRound.prize, _payout);
    |    emit WinnerEvent(roundCount, _currentRound.winner, _currentRound.prize);
  at /unique_chucks/19/0xaeb12b5ab62a49c14e72fb3ad2c0e809a9b446b3.sol(315)

[33mWarning[0m for UnrestrictedWrite in contract 'PirateLottery':
    |    if (tokenHoldoverBalance > TOKEN_HOLDOVER_THRESHOLD) {
    |      uint _amount = tokenHoldoverBalance;
  > |      tokenHoldoverBalance = 0;
    |      (bool paySuccess, ) = address(plpToken).call.value(_amount)("");
    |      if (!paySuccess)
  at /unique_chucks/19/0xaeb12b5ab62a49c14e72fb3ad2c0e809a9b446b3.sol(321)

[33mWarning[0m for UnrestrictedWrite in contract 'PirateLottery':
    |  //
    |  function newRound() internal {
  > |    ++roundCount;
    |    Round storage _nextRound = rounds[roundCount];
    |    Round storage _currentRound = rounds[roundCount - 1];
  at /unique_chucks/19/0xaeb12b5ab62a49c14e72fb3ad2c0e809a9b446b3.sol(335)

[33mWarning[0m for UnrestrictedWrite in contract 'PirateLottery':
    |    if (_currentDuration < SHORT_DURATION) {
    |      if (_currentRound.ticketPrice < max_ticket_price && _currentRound.maxTickets > MIN_TICKETS * 10) {
  > |         _nextRound.ticketPrice = max_ticket_price;
    |         _nextRound.maxTickets = _currentRound.maxTickets;
    |       } else {
  at /unique_chucks/19/0xaeb12b5ab62a49c14e72fb3ad2c0e809a9b446b3.sol(342)

[33mWarning[0m for UnrestrictedWrite in contract 'PirateLottery':
    |      if (_currentRound.ticketPrice < max_ticket_price && _currentRound.maxTickets > MIN_TICKETS * 10) {
    |         _nextRound.ticketPrice = max_ticket_price;
  > |         _nextRound.maxTickets = _currentRound.maxTickets;
    |       } else {
    |         _nextRound.ticketPrice = _currentRound.ticketPrice;
  at /unique_chucks/19/0xaeb12b5ab62a49c14e72fb3ad2c0e809a9b446b3.sol(343)

[33mWarning[0m for UnrestrictedWrite in contract 'PirateLottery':
    |         _nextRound.maxTickets = _currentRound.maxTickets;
    |       } else {
  > |         _nextRound.ticketPrice = _currentRound.ticketPrice;
    |         _nextRound.maxTickets = 2 * _currentRound.maxTickets;
    |         if (_nextRound.maxTickets > MAX_TICKETS)
  at /unique_chucks/19/0xaeb12b5ab62a49c14e72fb3ad2c0e809a9b446b3.sol(345)

[33mWarning[0m for UnrestrictedWrite in contract 'PirateLottery':
    |       } else {
    |         _nextRound.ticketPrice = _currentRound.ticketPrice;
  > |         _nextRound.maxTickets = 2 * _currentRound.maxTickets;
    |         if (_nextRound.maxTickets > MAX_TICKETS)
    |           _nextRound.maxTickets = MAX_TICKETS;
  at /unique_chucks/19/0xaeb12b5ab62a49c14e72fb3ad2c0e809a9b446b3.sol(346)

[33mWarning[0m for UnrestrictedWrite in contract 'PirateLottery':
    |         _nextRound.maxTickets = 2 * _currentRound.maxTickets;
    |         if (_nextRound.maxTickets > MAX_TICKETS)
  > |           _nextRound.maxTickets = MAX_TICKETS;
    |       }
    |    } else if (_currentDuration > LONG_DURATION) {
  at /unique_chucks/19/0xaeb12b5ab62a49c14e72fb3ad2c0e809a9b446b3.sol(348)

[33mWarning[0m for UnrestrictedWrite in contract 'PirateLottery':
    |    } else if (_currentDuration > LONG_DURATION) {
    |       if (_currentRound.ticketPrice > min_ticket_price) {
  > |         _nextRound.ticketPrice = min_ticket_price;
    |         _nextRound.maxTickets = _currentRound.maxTickets;
    |       } else {
  at /unique_chucks/19/0xaeb12b5ab62a49c14e72fb3ad2c0e809a9b446b3.sol(352)

[33mWarning[0m for UnrestrictedWrite in contract 'PirateLottery':
    |       if (_currentRound.ticketPrice > min_ticket_price) {
    |         _nextRound.ticketPrice = min_ticket_price;
  > |         _nextRound.maxTickets = _currentRound.maxTickets;
    |       } else {
    |         _nextRound.ticketPrice = min_ticket_price;
  at /unique_chucks/19/0xaeb12b5ab62a49c14e72fb3ad2c0e809a9b446b3.sol(353)

[33mWarning[0m for UnrestrictedWrite in contract 'PirateLottery':
    |         _nextRound.maxTickets = _currentRound.maxTickets;
    |       } else {
  > |         _nextRound.ticketPrice = min_ticket_price;
    |         _nextRound.maxTickets = _currentRound.maxTickets / 2;
    |         if (_nextRound.maxTickets < MIN_TICKETS)
  at /unique_chucks/19/0xaeb12b5ab62a49c14e72fb3ad2c0e809a9b446b3.sol(355)

[33mWarning[0m for UnrestrictedWrite in contract 'PirateLottery':
    |       } else {
    |         _nextRound.ticketPrice = min_ticket_price;
  > |         _nextRound.maxTickets = _currentRound.maxTickets / 2;
    |         if (_nextRound.maxTickets < MIN_TICKETS)
    |           _nextRound.maxTickets = MIN_TICKETS;
  at /unique_chucks/19/0xaeb12b5ab62a49c14e72fb3ad2c0e809a9b446b3.sol(356)

[33mWarning[0m for UnrestrictedWrite in contract 'PirateLottery':
    |         _nextRound.maxTickets = _currentRound.maxTickets / 2;
    |         if (_nextRound.maxTickets < MIN_TICKETS)
  > |           _nextRound.maxTickets = MIN_TICKETS;
    |       }
    |    } else {
  at /unique_chucks/19/0xaeb12b5ab62a49c14e72fb3ad2c0e809a9b446b3.sol(358)

[33mWarning[0m for UnrestrictedWrite in contract 'PirateLottery':
    |       }
    |    } else {
  > |      _nextRound.maxTickets = _currentRound.maxTickets;
    |      _nextRound.ticketPrice = (min_ticket_price + max_ticket_price) / 2;
    |    }
  at /unique_chucks/19/0xaeb12b5ab62a49c14e72fb3ad2c0e809a9b446b3.sol(361)

[33mWarning[0m for UnrestrictedWrite in contract 'PirateLottery':
    |    } else {
    |      _nextRound.maxTickets = _currentRound.maxTickets;
  > |      _nextRound.ticketPrice = (min_ticket_price + max_ticket_price) / 2;
    |    }
    |    //_nextRound.ticketCount = 0;
  at /unique_chucks/19/0xaeb12b5ab62a49c14e72fb3ad2c0e809a9b446b3.sol(362)

[33mWarning[0m for UnrestrictedWrite in contract 'PirateLottery':
    |    //_nextRound.endDate = 0;
    |    //_nextRound.begDate = 0;
  > |    _nextRound.isOpen = true;
    |  }
    |
  at /unique_chucks/19/0xaeb12b5ab62a49c14e72fb3ad2c0e809a9b446b3.sol(367)

[33mWarning[0m for UnrestrictedWrite in contract 'PirateLottery':
    |  //for debug only...
    |  function setToken(address _plpToken) public unlockedOnly ownerOnly {
  > |    plpToken = iPlpPointsRedeemer(_plpToken);
    |  }
    |  function lock() public ownerOnly {
  at /unique_chucks/19/0xaeb12b5ab62a49c14e72fb3ad2c0e809a9b446b3.sol(164)

[33mWarning[0m for UnrestrictedWrite in contract 'PirateLottery':
    |  }
    |  function lock() public ownerOnly {
  > |    isLocked = true;
    |  }
    |
  at /unique_chucks/19/0xaeb12b5ab62a49c14e72fb3ad2c0e809a9b446b3.sol(167)