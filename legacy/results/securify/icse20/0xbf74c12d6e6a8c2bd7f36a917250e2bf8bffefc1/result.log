Processing contract: /unique_chucks/11/0xbf74c12d6e6a8c2bd7f36a917250e2bf8bffefc1.sol:GnosisMath
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/11/0xbf74c12d6e6a8c2bd7f36a917250e2bf8bffefc1.sol:GnosisStandardToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/11/0xbf74c12d6e6a8c2bd7f36a917250e2bf8bffefc1.sol:OWLAirdrop
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/11/0xbf74c12d6e6a8c2bd7f36a917250e2bf8bffefc1.sol:Proxied
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/11/0xbf74c12d6e6a8c2bd7f36a917250e2bf8bffefc1.sol:Proxy
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/11/0xbf74c12d6e6a8c2bd7f36a917250e2bf8bffefc1.sol:StandardTokenData
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/11/0xbf74c12d6e6a8c2bd7f36a917250e2bf8bffefc1.sol:Token
Processing contract: /unique_chucks/11/0xbf74c12d6e6a8c2bd7f36a917250e2bf8bffefc1.sol:TokenGNO
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/11/0xbf74c12d6e6a8c2bd7f36a917250e2bf8bffefc1.sol:TokenOWL
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for LockedEther in contract 'GnosisMath':
    |/// @author Alan Lu - <alan.lu@gnosis.pm>
    |/// @author Stefan George - <stefan@gnosis.pm>
  > |library GnosisMath {
    |    /*
    |     *  Constants
  at /unique_chucks/11/0xbf74c12d6e6a8c2bd7f36a917250e2bf8bffefc1.sol(33)

[33mWarning[0m for UnrestrictedWrite in contract 'GnosisStandardToken':
    |
    |        balances[msg.sender] -= value;
  > |        balances[to] += value;
    |        emit Transfer(msg.sender, to, value);
    |        return true;
  at /unique_chucks/11/0xbf74c12d6e6a8c2bd7f36a917250e2bf8bffefc1.sol(369)

[33mWarning[0m for UnrestrictedWrite in contract 'GnosisStandardToken':
    |            return false;
    |        }
  > |        balances[from] -= value;
    |        allowances[from][msg.sender] -= value;
    |        balances[to] += value;
  at /unique_chucks/11/0xbf74c12d6e6a8c2bd7f36a917250e2bf8bffefc1.sol(385)

[33mWarning[0m for UnrestrictedWrite in contract 'GnosisStandardToken':
    |        balances[from] -= value;
    |        allowances[from][msg.sender] -= value;
  > |        balances[to] += value;
    |        emit Transfer(from, to, value);
    |        return true;
  at /unique_chucks/11/0xbf74c12d6e6a8c2bd7f36a917250e2bf8bffefc1.sol(387)

[31mViolation[0m for LockedEther in contract 'TokenGNO':
    |
    |
  > |contract TokenGNO is GnosisStandardToken {
    |    string public constant symbol = "GNO";
    |    string public constant name = "Gnosis";
  at /unique_chucks/11/0xbf74c12d6e6a8c2bd7f36a917250e2bf8bffefc1.sol(429)

[33mWarning[0m for UnrestrictedWrite in contract 'TokenGNO':
    |
    |        balances[msg.sender] -= value;
  > |        balances[to] += value;
    |        emit Transfer(msg.sender, to, value);
    |        return true;
  at /unique_chucks/11/0xbf74c12d6e6a8c2bd7f36a917250e2bf8bffefc1.sol(369)

[33mWarning[0m for UnrestrictedWrite in contract 'TokenGNO':
    |            return false;
    |        }
  > |        balances[from] -= value;
    |        allowances[from][msg.sender] -= value;
    |        balances[to] += value;
  at /unique_chucks/11/0xbf74c12d6e6a8c2bd7f36a917250e2bf8bffefc1.sol(385)

[33mWarning[0m for UnrestrictedWrite in contract 'TokenGNO':
    |        balances[from] -= value;
    |        allowances[from][msg.sender] -= value;
  > |        balances[to] += value;
    |        emit Transfer(from, to, value);
    |        return true;
  at /unique_chucks/11/0xbf74c12d6e6a8c2bd7f36a917250e2bf8bffefc1.sol(387)

[31mViolation[0m for LockedEther in contract 'TokenOWL':
    |
    |
  > |contract TokenOWL is Proxied, GnosisStandardToken {
    |    using GnosisMath for *;
    |
  at /unique_chucks/11/0xbf74c12d6e6a8c2bd7f36a917250e2bf8bffefc1.sol(447)

[33mWarning[0m for UnrestrictedWrite in contract 'TokenOWL':
    |
    |        balances[msg.sender] -= value;
  > |        balances[to] += value;
    |        emit Transfer(msg.sender, to, value);
    |        return true;
  at /unique_chucks/11/0xbf74c12d6e6a8c2bd7f36a917250e2bf8bffefc1.sol(369)

[33mWarning[0m for UnrestrictedWrite in contract 'TokenOWL':
    |            return false;
    |        }
  > |        balances[from] -= value;
    |        allowances[from][msg.sender] -= value;
    |        balances[to] += value;
  at /unique_chucks/11/0xbf74c12d6e6a8c2bd7f36a917250e2bf8bffefc1.sol(385)

[33mWarning[0m for UnrestrictedWrite in contract 'TokenOWL':
    |        balances[from] -= value;
    |        allowances[from][msg.sender] -= value;
  > |        balances[to] += value;
    |        emit Transfer(from, to, value);
    |        return true;
  at /unique_chucks/11/0xbf74c12d6e6a8c2bd7f36a917250e2bf8bffefc1.sol(387)

[33mWarning[0m for UnrestrictedWrite in contract 'TokenOWL':
    |    function burnOWL(address user, uint amount) public {
    |        allowances[user][msg.sender] = allowances[user][msg.sender].sub(amount);
  > |        balances[user] = balances[user].sub(amount);
    |        totalTokens = totalTokens.sub(amount);
    |        emit Burnt(msg.sender, user, amount);
  at /unique_chucks/11/0xbf74c12d6e6a8c2bd7f36a917250e2bf8bffefc1.sol(527)

[33mWarning[0m for UnrestrictedWrite in contract 'TokenOWL':
    |        allowances[user][msg.sender] = allowances[user][msg.sender].sub(amount);
    |        balances[user] = balances[user].sub(amount);
  > |        totalTokens = totalTokens.sub(amount);
    |        emit Burnt(msg.sender, user, amount);
    |        emit Transfer(user, address(0), amount);
  at /unique_chucks/11/0xbf74c12d6e6a8c2bd7f36a917250e2bf8bffefc1.sol(528)

[33mWarning[0m for UnrestrictedWrite in contract 'TokenOWL':
    |
    |        // Update masterCopyCountdown
  > |        masterCopyCountdown.masterCopy = _masterCopy;
    |        masterCopyCountdown.timeWhenAvailable = now + 30 days;
    |    }
  at /unique_chucks/11/0xbf74c12d6e6a8c2bd7f36a917250e2bf8bffefc1.sol(478)

[33mWarning[0m for UnrestrictedWrite in contract 'TokenOWL':
    |        // Update masterCopyCountdown
    |        masterCopyCountdown.masterCopy = _masterCopy;
  > |        masterCopyCountdown.timeWhenAvailable = now + 30 days;
    |    }
    |
  at /unique_chucks/11/0xbf74c12d6e6a8c2bd7f36a917250e2bf8bffefc1.sol(479)

[33mWarning[0m for UnrestrictedWrite in contract 'TokenOWL':
    |
    |        // Update masterCopy
  > |        masterCopy = masterCopyCountdown.masterCopy;
    |    }
    |
  at /unique_chucks/11/0xbf74c12d6e6a8c2bd7f36a917250e2bf8bffefc1.sol(491)

[33mWarning[0m for UnrestrictedWrite in contract 'TokenOWL':
    |    /// @param newMinter The new address authorized to mint this token
    |    function setMinter(address newMinter) public onlyCreator {
  > |        minter = newMinter;
    |    }
    |
  at /unique_chucks/11/0xbf74c12d6e6a8c2bd7f36a917250e2bf8bffefc1.sol(501)

[33mWarning[0m for UnrestrictedWrite in contract 'TokenOWL':
    |    /// @param newOwner The new address, which should become the owner
    |    function setNewOwner(address newOwner) public onlyCreator {
  > |        creator = newOwner;
    |    }
    |
  at /unique_chucks/11/0xbf74c12d6e6a8c2bd7f36a917250e2bf8bffefc1.sol(507)