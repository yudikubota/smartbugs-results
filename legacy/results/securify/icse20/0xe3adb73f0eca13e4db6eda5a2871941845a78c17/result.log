Processing contract: /unique_contracts/0xe3adb73f0eca13e4db6eda5a2871941845a78c17.sol:ERC20
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0xe3adb73f0eca13e4db6eda5a2871941845a78c17.sol:ERC20Detailed
Processing contract: /unique_contracts/0xe3adb73f0eca13e4db6eda5a2871941845a78c17.sol:IERC20
Processing contract: /unique_contracts/0xe3adb73f0eca13e4db6eda5a2871941845a78c17.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0xe3adb73f0eca13e4db6eda5a2871941845a78c17.sol:XRCToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for LockedEther in contract 'XRCToken':
    | * @title XRCToken
    | */
  > |contract XRCToken is ERC20, ERC20Detailed {
    |    uint8 public constant DECIMALS = 8;
    |    uint256 public constant INITIAL_SUPPLY = 150 * (10**6) * (10 ** uint256(DECIMALS));
  at /unique_contracts/0xe3adb73f0eca13e4db6eda5a2871941845a78c17.sol(340)