Processing contract: /unique_chucks/21/0x8286ef4168a0cfde1c022cfd059d721d6410d317.sol:IERC20
Processing contract: /unique_chucks/21/0x8286ef4168a0cfde1c022cfd059d721d6410d317.sol:TokenDistribution
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for MissingInputValidation in contract 'TokenDistribution':
    |    }
    |
  > |    function distributedTokensFor(address account) public {
    |        Investor storage inv = _investors[account];
    |        uint256 unlocked = computeUnlockedAmount(inv);
  at /unique_chucks/21/0x8286ef4168a0cfde1c022cfd059d721d6410d317.sol(116)

[31mViolation[0m for MissingInputValidation in contract 'TokenDistribution':
    |    }
    |
  > |    function amountOfTokensToUnlock(address account) external view returns (uint256) {
    |        Investor storage inv = _investors[account];
    |        uint256 unlocked = computeUnlockedAmount(inv);
  at /unique_chucks/21/0x8286ef4168a0cfde1c022cfd059d721d6410d317.sol(132)

[33mWarning[0m for TODAmount in contract 'TokenDistribution':
    |            uint256 delta = unlocked - inv.released;
    |            inv.released = unlocked;
  > |            token.transfer(account, delta);
    |        }
    |    }
  at /unique_chucks/21/0x8286ef4168a0cfde1c022cfd059d721d6410d317.sol(122)

[33mWarning[0m for TODReceiver in contract 'TokenDistribution':
    |            uint256 delta = unlocked - inv.released;
    |            inv.released = unlocked;
  > |            token.transfer(account, delta);
    |        }
    |    }
  at /unique_chucks/21/0x8286ef4168a0cfde1c022cfd059d721d6410d317.sol(122)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'TokenDistribution':
    |            uint256 delta = unlocked - inv.released;
    |            inv.released = unlocked;
  > |            token.transfer(account, delta);
    |        }
    |    }
  at /unique_chucks/21/0x8286ef4168a0cfde1c022cfd059d721d6410d317.sol(122)

[31mViolation[0m for UnrestrictedWrite in contract 'TokenDistribution':
    |        if (unlocked > inv.released) {
    |            uint256 delta = unlocked - inv.released;
  > |            inv.released = unlocked;
    |            token.transfer(account, delta);
    |        }
  at /unique_chucks/21/0x8286ef4168a0cfde1c022cfd059d721d6410d317.sol(121)