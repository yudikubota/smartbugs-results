Processing contract: /unique_chucks/8/0x1f4f33c3a163b9ad84613c1c61337cbfd7c8839f.sol:BombTokenPolish
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/8/0x1f4f33c3a163b9ad84613c1c61337cbfd7c8839f.sol:ERC20Detailed
Processing contract: /unique_chucks/8/0x1f4f33c3a163b9ad84613c1c61337cbfd7c8839f.sol:IERC20
Processing contract: /unique_chucks/8/0x1f4f33c3a163b9ad84613c1c61337cbfd7c8839f.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for LockedEther in contract 'BombTokenPolish':
    |}
    |
  > |contract BombTokenPolish is ERC20Detailed {
    |
    |  using SafeMath for uint256;
  at /unique_chucks/8/0x1f4f33c3a163b9ad84613c1c61337cbfd7c8839f.sol(73)

[33mWarning[0m for UnrestrictedWrite in contract 'BombTokenPolish':
    |
    |    _balances[msg.sender] = _balances[msg.sender].sub(value);
  > |    _balances[to] = _balances[to].add(tokensToTransfer);
    |
    |    _totalSupply = _totalSupply.sub(tokensToBurn);
  at /unique_chucks/8/0x1f4f33c3a163b9ad84613c1c61337cbfd7c8839f.sol(115)

[33mWarning[0m for UnrestrictedWrite in contract 'BombTokenPolish':
    |    _balances[to] = _balances[to].add(tokensToTransfer);
    |
  > |    _totalSupply = _totalSupply.sub(tokensToBurn);
    |
    |    emit Transfer(msg.sender, to, tokensToTransfer);
  at /unique_chucks/8/0x1f4f33c3a163b9ad84613c1c61337cbfd7c8839f.sol(117)

[33mWarning[0m for UnrestrictedWrite in contract 'BombTokenPolish':
    |    require(to != address(0));
    |
  > |    _balances[from] = _balances[from].sub(value);
    |
    |    uint256 tokensToBurn = findOnePercent(value);
  at /unique_chucks/8/0x1f4f33c3a163b9ad84613c1c61337cbfd7c8839f.sol(136)

[33mWarning[0m for UnrestrictedWrite in contract 'BombTokenPolish':
    |    uint256 tokensToTransfer = value.sub(tokensToBurn);
    |
  > |    _balances[to] = _balances[to].add(tokensToTransfer);
    |    _totalSupply = _totalSupply.sub(tokensToBurn);
    |
  at /unique_chucks/8/0x1f4f33c3a163b9ad84613c1c61337cbfd7c8839f.sol(141)

[33mWarning[0m for UnrestrictedWrite in contract 'BombTokenPolish':
    |
    |    _balances[to] = _balances[to].add(tokensToTransfer);
  > |    _totalSupply = _totalSupply.sub(tokensToBurn);
    |
    |    _allowed[from][msg.sender] = _allowed[from][msg.sender].sub(value);
  at /unique_chucks/8/0x1f4f33c3a163b9ad84613c1c61337cbfd7c8839f.sol(142)

[33mWarning[0m for UnrestrictedWrite in contract 'BombTokenPolish':
    |    require(amount != 0);
    |    require(amount <= _balances[account]);
  > |    _totalSupply = _totalSupply.sub(amount);
    |    _balances[account] = _balances[account].sub(amount);
    |    emit Transfer(account, address(0), amount);
  at /unique_chucks/8/0x1f4f33c3a163b9ad84613c1c61337cbfd7c8839f.sol(174)

[33mWarning[0m for UnrestrictedWrite in contract 'BombTokenPolish':
    |    require(amount <= _balances[account]);
    |    _totalSupply = _totalSupply.sub(amount);
  > |    _balances[account] = _balances[account].sub(amount);
    |    emit Transfer(account, address(0), amount);
    |  }
  at /unique_chucks/8/0x1f4f33c3a163b9ad84613c1c61337cbfd7c8839f.sol(175)