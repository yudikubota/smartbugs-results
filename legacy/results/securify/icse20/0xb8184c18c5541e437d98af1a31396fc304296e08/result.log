Processing contract: /unique_chucks/32/0xb8184c18c5541e437d98af1a31396fc304296e08.sol:AZTEC
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/32/0xb8184c18c5541e437d98af1a31396fc304296e08.sol:AZTECERC20Bridge
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/32/0xb8184c18c5541e437d98af1a31396fc304296e08.sol:AZTECInterface
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/32/0xb8184c18c5541e437d98af1a31396fc304296e08.sol:ERC20Interface
[31mViolation[0m for LockedEther in contract 'AZTEC':
    | * and the AZTEC token standard, stay tuned for updates!
    | **/
  > |contract AZTEC {
    |    /**
    |     * @dev AZTEC will take any transaction sent to it and attempt to validate a zero knowledge proof.
  at /unique_chucks/32/0xb8184c18c5541e437d98af1a31396fc304296e08.sol(18)

[33mWarning[0m for MissingInputValidation in contract 'AZTEC':
    |             * @param n number of notes
    |             **/
  > |            function hashCommitments(notes, n) {
    |                for { let i := 0 } lt(i, n) { i := add(i, 0x01) } {
    |                    let index := add(add(notes, mul(i, 0xc0)), 0x60)
  at /unique_chucks/32/0xb8184c18c5541e437d98af1a31396fc304296e08.sol(357)

[31mViolation[0m for UnrestrictedWrite in contract 'AZTECERC20Bridge':
    |        require(owner != address(0), "signature invalid");
    |        require(noteRegistry[noteHash] == owner, "expected input note to exist in registry");
  > |        noteRegistry[noteHash] = 0;
    |    }
    |
  at /unique_chucks/32/0xb8184c18c5541e437d98af1a31396fc304296e08.sol(463)

[31mViolation[0m for UnrestrictedWrite in contract 'AZTECERC20Bridge':
    |        require(owner != address(0), "owner must be valid Ethereum address");
    |        require(noteRegistry[noteHash] == 0, "expected output note to not exist in registry");
  > |        noteRegistry[noteHash] = owner;
    |    }
    |
  at /unique_chucks/32/0xb8184c18c5541e437d98af1a31396fc304296e08.sol(484)

[31mViolation[0m for LockedEther in contract 'AZTECInterface':
    |pragma solidity ^0.4.24;
    |
  > |library AZTECInterface {
    |    function validateJoinSplit(bytes32[6][], uint, uint, bytes32[4]) external pure returns (bool) {}
    |}
  at /unique_chucks/32/0xb8184c18c5541e437d98af1a31396fc304296e08.sol(3)