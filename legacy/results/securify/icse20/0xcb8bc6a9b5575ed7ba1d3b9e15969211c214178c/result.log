Processing contract: /unique_chucks/41/0xcb8bc6a9b5575ed7ba1d3b9e15969211c214178c.sol:BasicToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/41/0xcb8bc6a9b5575ed7ba1d3b9e15969211c214178c.sol:ERC20
Processing contract: /unique_chucks/41/0xcb8bc6a9b5575ed7ba1d3b9e15969211c214178c.sol:ERC20Basic
Processing contract: /unique_chucks/41/0xcb8bc6a9b5575ed7ba1d3b9e15969211c214178c.sol:FaucetToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/41/0xcb8bc6a9b5575ed7ba1d3b9e15969211c214178c.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/41/0xcb8bc6a9b5575ed7ba1d3b9e15969211c214178c.sol:StandardToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[33mWarning[0m for UnrestrictedWrite in contract 'BasicToken':
    |
    |        balances[msg.sender] = balances[msg.sender].sub(_value);
  > |        balances[_to] = balances[_to].add(_value);
    |        emit Transfer(msg.sender, _to, _value);
    |        return true;
  at /unique_chucks/41/0xcb8bc6a9b5575ed7ba1d3b9e15969211c214178c.sol(78)

[31mViolation[0m for LockedEther in contract 'FaucetToken':
    |
    |}
  > |contract FaucetToken is StandardToken {
    |    string public name;
    |    string public symbol;
  at /unique_chucks/41/0xcb8bc6a9b5575ed7ba1d3b9e15969211c214178c.sol(211)

[31mViolation[0m for UnrestrictedWrite in contract 'FaucetToken':
    |      */
    |    function allocateTo(address _owner, uint256 value) public {
  > |        balances[_owner] += value;
    |        totalSupply_ += value;
    |        emit Transfer(address(this), _owner, value);
  at /unique_chucks/41/0xcb8bc6a9b5575ed7ba1d3b9e15969211c214178c.sol(228)

[31mViolation[0m for UnrestrictedWrite in contract 'FaucetToken':
    |    function allocateTo(address _owner, uint256 value) public {
    |        balances[_owner] += value;
  > |        totalSupply_ += value;
    |        emit Transfer(address(this), _owner, value);
    |    }
  at /unique_chucks/41/0xcb8bc6a9b5575ed7ba1d3b9e15969211c214178c.sol(229)

[33mWarning[0m for UnrestrictedWrite in contract 'FaucetToken':
    |
    |        balances[msg.sender] = balances[msg.sender].sub(_value);
  > |        balances[_to] = balances[_to].add(_value);
    |        emit Transfer(msg.sender, _to, _value);
    |        return true;
  at /unique_chucks/41/0xcb8bc6a9b5575ed7ba1d3b9e15969211c214178c.sol(78)

[33mWarning[0m for UnrestrictedWrite in contract 'FaucetToken':
    |        require(_value <= allowed[_from][msg.sender]);
    |
  > |        balances[_from] = balances[_from].sub(_value);
    |        balances[_to] = balances[_to].add(_value);
    |        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
  at /unique_chucks/41/0xcb8bc6a9b5575ed7ba1d3b9e15969211c214178c.sol(123)

[33mWarning[0m for UnrestrictedWrite in contract 'FaucetToken':
    |
    |        balances[_from] = balances[_from].sub(_value);
  > |        balances[_to] = balances[_to].add(_value);
    |        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
    |        emit Transfer(_from, _to, _value);
  at /unique_chucks/41/0xcb8bc6a9b5575ed7ba1d3b9e15969211c214178c.sol(124)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |
    |        balances[msg.sender] = balances[msg.sender].sub(_value);
  > |        balances[_to] = balances[_to].add(_value);
    |        emit Transfer(msg.sender, _to, _value);
    |        return true;
  at /unique_chucks/41/0xcb8bc6a9b5575ed7ba1d3b9e15969211c214178c.sol(78)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |        require(_value <= allowed[_from][msg.sender]);
    |
  > |        balances[_from] = balances[_from].sub(_value);
    |        balances[_to] = balances[_to].add(_value);
    |        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
  at /unique_chucks/41/0xcb8bc6a9b5575ed7ba1d3b9e15969211c214178c.sol(123)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |
    |        balances[_from] = balances[_from].sub(_value);
  > |        balances[_to] = balances[_to].add(_value);
    |        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
    |        emit Transfer(_from, _to, _value);
  at /unique_chucks/41/0xcb8bc6a9b5575ed7ba1d3b9e15969211c214178c.sol(124)