Processing contract: /unique_chucks/2/0xc690f7c7fcffa6a82b79fab7508c466fefdfc8c5.sol:ERC20
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/2/0xc690f7c7fcffa6a82b79fab7508c466fefdfc8c5.sol:IERC20
Processing contract: /unique_chucks/2/0xc690f7c7fcffa6a82b79fab7508c466fefdfc8c5.sol:LympoToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/2/0xc690f7c7fcffa6a82b79fab7508c466fefdfc8c5.sol:Ownable
Processing contract: /unique_chucks/2/0xc690f7c7fcffa6a82b79fab7508c466fefdfc8c5.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for LockedEther in contract 'LympoToken':
    | *  @author Roman Holovay
    | */
  > |contract LympoToken is ERC20, Ownable {
    |    using SafeMath for uint;
    |    
  at /unique_chucks/2/0xc690f7c7fcffa6a82b79fab7508c466fefdfc8c5.sol(297)

[33mWarning[0m for UnrestrictedWrite in contract 'LympoToken':
    |    function claimTeamReserve() public onlyOwner {
    |        require (now > LOCK_RELEASE_DATE_2_YEARS && !reserveClaimed);
  > |        reserveClaimed = true;
    |        _transfer(address(this), owner(), TEAM_RESERVE);
    |    }
  at /unique_chucks/2/0xc690f7c7fcffa6a82b79fab7508c466fefdfc8c5.sol(348)

[33mWarning[0m for UnrestrictedWrite in contract 'LympoToken':
    |        require (msg.sender == ecosystemAddr && !ecosystemPart1Claimed);
    |        require (now > LOCK_RELEASE_DATE_1_YEAR);
  > |        ecosystemPart1Claimed = true;
    |        _transfer(address(this), ecosystemAddr, ECO_LOCK_13);
    |    }
  at /unique_chucks/2/0xc690f7c7fcffa6a82b79fab7508c466fefdfc8c5.sol(359)

[33mWarning[0m for UnrestrictedWrite in contract 'LympoToken':
    |        require (msg.sender == ecosystemAddr && !ecosystemPart2Claimed);
    |        require (now > LOCK_RELEASE_DATE_2_YEARS);
  > |        ecosystemPart2Claimed = true;
    |        _transfer(address(this), ecosystemAddr, ECO_LOCK_13);
    |    }
  at /unique_chucks/2/0xc690f7c7fcffa6a82b79fab7508c466fefdfc8c5.sol(370)