Processing contract: /unique_chucks/41/0xccb98c6e99378a7eb4b47f57d3a19bed7187cd95.sol:Ownable
Processing contract: /unique_chucks/41/0xccb98c6e99378a7eb4b47f57d3a19bed7187cd95.sol:Pausable
Processing contract: /unique_chucks/41/0xccb98c6e99378a7eb4b47f57d3a19bed7187cd95.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/41/0xccb98c6e99378a7eb4b47f57d3a19bed7187cd95.sol:TokenERC20
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/41/0xccb98c6e99378a7eb4b47f57d3a19bed7187cd95.sol:VotaToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/41/0xccb98c6e99378a7eb4b47f57d3a19bed7187cd95.sol:tokenRecipient
[31mViolation[0m for LockedEther in contract 'TokenERC20':
    |
    |
  > |contract TokenERC20{
    |    using SafeMath for uint256;
    |
  at /unique_chucks/41/0xccb98c6e99378a7eb4b47f57d3a19bed7187cd95.sol(142)

[33mWarning[0m for UnrestrictedWrite in contract 'TokenERC20':
    |    function burn(uint256 _value) public returns (bool success) {
    |        balanceOf[msg.sender] = balanceOf[msg.sender].sub(_value);             
  > |        totalSupply = totalSupply.sub(_value);                                 
    |        emit Burn(msg.sender, _value);
    |        return true;
  at /unique_chucks/41/0xccb98c6e99378a7eb4b47f57d3a19bed7187cd95.sol(212)

[33mWarning[0m for UnrestrictedWrite in contract 'TokenERC20':
    |        balanceOf[_from] = balanceOf[_from].sub(_value);                                        
    |        allowance[_from][msg.sender] = allowance[_from][msg.sender].sub(_value);                
  > |        totalSupply = totalSupply.sub(_value);                                                  
    |        emit Burn(_from, _value);
    |        return true;
  at /unique_chucks/41/0xccb98c6e99378a7eb4b47f57d3a19bed7187cd95.sol(221)

[31mViolation[0m for LockedEther in contract 'VotaToken':
    |
    |
  > |contract VotaToken is TokenERC20, Ownable,Pausable{
    |
    |    mapping (address => bool) public frozenAccount;
  at /unique_chucks/41/0xccb98c6e99378a7eb4b47f57d3a19bed7187cd95.sol(229)

[31mViolation[0m for UnrestrictedWrite in contract 'VotaToken':
    |
    |
  > |contract VotaToken is TokenERC20, Ownable,Pausable{
    |
    |    mapping (address => bool) public frozenAccount;
  at /unique_chucks/41/0xccb98c6e99378a7eb4b47f57d3a19bed7187cd95.sol(229)

[33mWarning[0m for UnrestrictedWrite in contract 'VotaToken':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipTransferred(_owner, address(0));
  > |        _owner = address(0);
    |    }
    |
  at /unique_chucks/41/0xccb98c6e99378a7eb4b47f57d3a19bed7187cd95.sol(83)

[33mWarning[0m for UnrestrictedWrite in contract 'VotaToken':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_chucks/41/0xccb98c6e99378a7eb4b47f57d3a19bed7187cd95.sol(95)

[33mWarning[0m for UnrestrictedWrite in contract 'VotaToken':
    |    
    |    function pause() public onlyOwner whenNotPaused {
  > |        _paused = true;
    |        emit Paused(msg.sender);
    |    }
  at /unique_chucks/41/0xccb98c6e99378a7eb4b47f57d3a19bed7187cd95.sol(130)

[33mWarning[0m for UnrestrictedWrite in contract 'VotaToken':
    |    
    |    function unpause() public onlyOwner whenPaused {
  > |        _paused = false;
    |        emit Unpaused(msg.sender);
    |    }
  at /unique_chucks/41/0xccb98c6e99378a7eb4b47f57d3a19bed7187cd95.sol(136)

[33mWarning[0m for UnrestrictedWrite in contract 'VotaToken':
    |    function burn(uint256 _value) public returns (bool success) {
    |        balanceOf[msg.sender] = balanceOf[msg.sender].sub(_value);             
  > |        totalSupply = totalSupply.sub(_value);                                 
    |        emit Burn(msg.sender, _value);
    |        return true;
  at /unique_chucks/41/0xccb98c6e99378a7eb4b47f57d3a19bed7187cd95.sol(212)

[33mWarning[0m for UnrestrictedWrite in contract 'VotaToken':
    |        balanceOf[_from] = balanceOf[_from].sub(_value);                                        
    |        allowance[_from][msg.sender] = allowance[_from][msg.sender].sub(_value);                
  > |        totalSupply = totalSupply.sub(_value);                                                  
    |        emit Burn(_from, _value);
    |        return true;
  at /unique_chucks/41/0xccb98c6e99378a7eb4b47f57d3a19bed7187cd95.sol(221)

[33mWarning[0m for UnrestrictedWrite in contract 'VotaToken':
    |
    |
  > |contract VotaToken is TokenERC20, Ownable,Pausable{
    |
    |    mapping (address => bool) public frozenAccount;
  at /unique_chucks/41/0xccb98c6e99378a7eb4b47f57d3a19bed7187cd95.sol(229)

[33mWarning[0m for UnrestrictedWrite in contract 'VotaToken':
    |
    |    function freezeAccount(address account, bool freeze) onlyOwner public {
  > |        frozenAccount[account] = freeze;
    |        emit FrozenFunds(account, freeze);
    |    }
  at /unique_chucks/41/0xccb98c6e99378a7eb4b47f57d3a19bed7187cd95.sol(239)