Processing contract: /unique_contracts/0x3feeca6f6d6c498cd72fa1c83fdf6fccecabbdcf.sol:ERC20
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0x3feeca6f6d6c498cd72fa1c83fdf6fccecabbdcf.sol:Famecoin
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0x3feeca6f6d6c498cd72fa1c83fdf6fccecabbdcf.sol:IERC20
Processing contract: /unique_contracts/0x3feeca6f6d6c498cd72fa1c83fdf6fccecabbdcf.sol:Ownable
Processing contract: /unique_contracts/0x3feeca6f6d6c498cd72fa1c83fdf6fccecabbdcf.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for LockedEther in contract 'Famecoin':
    |//import 'https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-solidity/master/contracts/ownership/Ownable.sol';
    |
  > |contract Famecoin is ERC20, Ownable {
    |    
    |  string public name;
  at /unique_contracts/0x3feeca6f6d6c498cd72fa1c83fdf6fccecabbdcf.sol(365)

[33mWarning[0m for UnrestrictedWrite in contract 'Famecoin':
    |        require(account != address(0));
    |
  > |        _totalSupply = _totalSupply.sub(value);
    |        _balances[account] = _balances[account].sub(value);
    |        emit Transfer(account, address(0), value);
  at /unique_contracts/0x3feeca6f6d6c498cd72fa1c83fdf6fccecabbdcf.sol(251)

[33mWarning[0m for UnrestrictedWrite in contract 'Famecoin':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipTransferred(_owner, address(0));
  > |        _owner = address(0);
    |    }
    |
  at /unique_contracts/0x3feeca6f6d6c498cd72fa1c83fdf6fccecabbdcf.sol(336)

[33mWarning[0m for UnrestrictedWrite in contract 'Famecoin':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_contracts/0x3feeca6f6d6c498cd72fa1c83fdf6fccecabbdcf.sol(354)