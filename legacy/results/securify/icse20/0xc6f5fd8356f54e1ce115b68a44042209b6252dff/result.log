Processing contract: /unique_chucks/41/0xc6f5fd8356f54e1ce115b68a44042209b6252dff.sol:Membership
Processing contract: /unique_chucks/41/0xc6f5fd8356f54e1ce115b68a44042209b6252dff.sol:Owned
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/41/0xc6f5fd8356f54e1ce115b68a44042209b6252dff.sol:Token
Processing contract: /unique_chucks/41/0xc6f5fd8356f54e1ce115b68a44042209b6252dff.sol:Votes
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for MissingInputValidation in contract 'Owned':
    |  address payable public owner_;
    |  constructor() public { owner_ = msg.sender; }
  > |  function changeOwner( address payable newOwner ) isOwner public {
    |    owner_ = newOwner;
    |  }
  at /unique_chucks/41/0xc6f5fd8356f54e1ce115b68a44042209b6252dff.sol(15)

[33mWarning[0m for UnrestrictedWrite in contract 'Owned':
    |  constructor() public { owner_ = msg.sender; }
    |  function changeOwner( address payable newOwner ) isOwner public {
  > |    owner_ = newOwner;
    |  }
    |
  at /unique_chucks/41/0xc6f5fd8356f54e1ce115b68a44042209b6252dff.sol(16)

[31mViolation[0m for RepeatedCall in contract 'Votes':
    |
    |    if (treasury_ != address(0)) {
  > |      token_.transfer( treasury_, tokenFee_ - tokenFee_/dao_ );
    |    }
    |
  at /unique_chucks/41/0xc6f5fd8356f54e1ce115b68a44042209b6252dff.sol(80)

[31mViolation[0m for RepeatedCall in contract 'Votes':
    |
    |  function vote_int( uint _blocknum, string memory _hash ) internal {
  > |    require( membership_.isMember(msg.sender) );
    |
    |    emit Vote( msg.sender, _blocknum, _hash );
  at /unique_chucks/41/0xc6f5fd8356f54e1ce115b68a44042209b6252dff.sol(87)

[31mViolation[0m for TODAmount in contract 'Votes':
    |
    |    if (treasury_ != address(0))
  > |      treasury_.transfer( msg.value - msg.value / dao_ );
    |
    |    vote_int( _blocknum, _hash );
  at /unique_chucks/41/0xc6f5fd8356f54e1ce115b68a44042209b6252dff.sol(71)

[31mViolation[0m for TODReceiver in contract 'Votes':
    |
    |    if (treasury_ != address(0))
  > |      treasury_.transfer( msg.value - msg.value / dao_ );
    |
    |    vote_int( _blocknum, _hash );
  at /unique_chucks/41/0xc6f5fd8356f54e1ce115b68a44042209b6252dff.sol(71)

[31mViolation[0m for TODReceiver in contract 'Votes':
    |
    |  function withdraw( uint amt ) isOwner public {
  > |    owner_.transfer( amt );
    |  }
    |
  at /unique_chucks/41/0xc6f5fd8356f54e1ce115b68a44042209b6252dff.sol(93)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'Votes':
    |
    |    if (treasury_ != address(0))
  > |      treasury_.transfer( msg.value - msg.value / dao_ );
    |
    |    vote_int( _blocknum, _hash );
  at /unique_chucks/41/0xc6f5fd8356f54e1ce115b68a44042209b6252dff.sol(71)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'Votes':
    |
    |  function withdraw( uint amt ) isOwner public {
  > |    owner_.transfer( amt );
    |  }
    |
  at /unique_chucks/41/0xc6f5fd8356f54e1ce115b68a44042209b6252dff.sol(93)

[33mWarning[0m for UnrestrictedWrite in contract 'Votes':
    |  constructor() public { owner_ = msg.sender; }
    |  function changeOwner( address payable newOwner ) isOwner public {
  > |    owner_ = newOwner;
    |  }
    |
  at /unique_chucks/41/0xc6f5fd8356f54e1ce115b68a44042209b6252dff.sol(16)

[33mWarning[0m for UnrestrictedWrite in contract 'Votes':
    |
    |  function setMembership( address _contract ) isOwner public {
  > |    membership_ = Membership( _contract );
    |  }
    |
  at /unique_chucks/41/0xc6f5fd8356f54e1ce115b68a44042209b6252dff.sol(44)

[33mWarning[0m for UnrestrictedWrite in contract 'Votes':
    |
    |  function setTreasury( address payable _treasury ) isOwner public {
  > |    treasury_ = _treasury;
    |  }
    |
  at /unique_chucks/41/0xc6f5fd8356f54e1ce115b68a44042209b6252dff.sol(48)

[33mWarning[0m for UnrestrictedWrite in contract 'Votes':
    |
    |  function setToken( address _token ) isOwner public {
  > |    token_ = Token(_token);
    |  }
    |
  at /unique_chucks/41/0xc6f5fd8356f54e1ce115b68a44042209b6252dff.sol(52)

[33mWarning[0m for UnrestrictedWrite in contract 'Votes':
    |
    |  function setFee( uint _newfee ) isOwner public {
  > |    fee_ = _newfee;
    |  }
    |
  at /unique_chucks/41/0xc6f5fd8356f54e1ce115b68a44042209b6252dff.sol(56)

[33mWarning[0m for UnrestrictedWrite in contract 'Votes':
    |
    |  function setTokenFee( uint256 _fee ) isOwner public {
  > |    tokenFee_ = _fee;
    |  }
    |
  at /unique_chucks/41/0xc6f5fd8356f54e1ce115b68a44042209b6252dff.sol(60)

[33mWarning[0m for UnrestrictedWrite in contract 'Votes':
    |
    |  function setDao( uint _dao ) isOwner public {
  > |    dao_ = _dao;
    |  }
    |
  at /unique_chucks/41/0xc6f5fd8356f54e1ce115b68a44042209b6252dff.sol(64)