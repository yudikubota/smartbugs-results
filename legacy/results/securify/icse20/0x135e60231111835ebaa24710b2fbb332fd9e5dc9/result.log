Processing contract: /unique_chucks/34/0x135e60231111835ebaa24710b2fbb332fd9e5dc9.sol:PirateLotteryProfitToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/34/0x135e60231111835ebaa24710b2fbb332fd9e5dc9.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/34/0x135e60231111835ebaa24710b2fbb332fd9e5dc9.sol:iDividendToken
Processing contract: /unique_chucks/34/0x135e60231111835ebaa24710b2fbb332fd9e5dc9.sol:iERC20Token
Processing contract: /unique_chucks/34/0x135e60231111835ebaa24710b2fbb332fd9e5dc9.sol:iPlpPointsRedeemer
[33mWarning[0m for TODAmount in contract 'PirateLotteryProfitToken':
    |    tokenHolders[msg.sender].currentPoints = safeSub(tokenHolders[msg.sender].currentPoints, _pointsUsed);
    |    holdoverBalance = safeSub(holdoverBalance, _amount);
  > |    msg.sender.transfer(_amount);
    |  }
    |
  at /unique_chucks/34/0x135e60231111835ebaa24710b2fbb332fd9e5dc9.sol(375)

[33mWarning[0m for UnrestrictedWrite in contract 'PirateLotteryProfitToken':
    |
    |  function setTrust(address _trustedAddr, bool _trust) public ownerOnly unlockedOnly {
  > |    trusted[_trustedAddr] = _trust;
    |  }
    |
  at /unique_chucks/34/0x135e60231111835ebaa24710b2fbb332fd9e5dc9.sol(233)

[33mWarning[0m for UnrestrictedWrite in contract 'PirateLotteryProfitToken':
    |
    |  function lock() public ownerOnly {
  > |    isLocked = true;
    |  }
    |
  at /unique_chucks/34/0x135e60231111835ebaa24710b2fbb332fd9e5dc9.sol(237)