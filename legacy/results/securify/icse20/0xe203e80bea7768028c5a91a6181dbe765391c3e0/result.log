Processing contract: /unique_chucks/13/0xe203e80bea7768028c5a91a6181dbe765391c3e0.sol:AT2CSStorage
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/13/0xe203e80bea7768028c5a91a6181dbe765391c3e0.sol:Addr2AddrArrStorage
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/13/0xe203e80bea7768028c5a91a6181dbe765391c3e0.sol:Addr2AddrStorage
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/13/0xe203e80bea7768028c5a91a6181dbe765391c3e0.sol:Addr2BoolStorage
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/13/0xe203e80bea7768028c5a91a6181dbe765391c3e0.sol:Addr2UintStorage
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/13/0xe203e80bea7768028c5a91a6181dbe765391c3e0.sol:AddrStorage
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/13/0xe203e80bea7768028c5a91a6181dbe765391c3e0.sol:AssetTokenAdministratorRole
Processing contract: /unique_chucks/13/0xe203e80bea7768028c5a91a6181dbe765391c3e0.sol:At2CsConnectorRole
Processing contract: /unique_chucks/13/0xe203e80bea7768028c5a91a6181dbe765391c3e0.sol:BytesStorage
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/13/0xe203e80bea7768028c5a91a6181dbe765391c3e0.sol:CRWDController
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/13/0xe203e80bea7768028c5a91a6181dbe765391c3e0.sol:ControllerL
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
java.io.IOException: Timeout for /tmp/binaries_souffle8403136259086851517/mustExplicit -j 2 -F /tmp/souffle-2975d370-eb63-4690-bc27-3137ef79933a -D /tmp/souffle-2975d370-eb63-4690-bc27-3137ef79933a_OUT
	at ch.securify.analysis.AbstractDataflow.runCommand(AbstractDataflow.java:277)
	at ch.securify.analysis.AbstractDataflow.initDataflow(AbstractDataflow.java:169)
	at ch.securify.analysis.MustExplicitDataflow.<init>(MustExplicitDataflow.java:33)
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:33)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error in Securify
java.lang.RuntimeException
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:37)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error, skipping: /unique_chucks/13/0xe203e80bea7768028c5a91a6181dbe765391c3e0.sol:ControllerL
Processing contract: /unique_chucks/13/0xe203e80bea7768028c5a91a6181dbe765391c3e0.sol:DSMathL
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/13/0xe203e80bea7768028c5a91a6181dbe765391c3e0.sol:ERC20
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/13/0xe203e80bea7768028c5a91a6181dbe765391c3e0.sol:ERC20Detailed
Processing contract: /unique_chucks/13/0xe203e80bea7768028c5a91a6181dbe765391c3e0.sol:ERC20Mintable
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/13/0xe203e80bea7768028c5a91a6181dbe765391c3e0.sol:FeeTable
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/13/0xe203e80bea7768028c5a91a6181dbe765391c3e0.sol:IBasicAssetToken
Processing contract: /unique_chucks/13/0xe203e80bea7768028c5a91a6181dbe765391c3e0.sol:ICRWDController
Processing contract: /unique_chucks/13/0xe203e80bea7768028c5a91a6181dbe765391c3e0.sol:IERC20
Processing contract: /unique_chucks/13/0xe203e80bea7768028c5a91a6181dbe765391c3e0.sol:IExchangeRateOracle
Processing contract: /unique_chucks/13/0xe203e80bea7768028c5a91a6181dbe765391c3e0.sol:IWhitelistAutoExtendExpirationCallback
Processing contract: /unique_chucks/13/0xe203e80bea7768028c5a91a6181dbe765391c3e0.sol:IWhitelistAutoExtendExpirationExecutor
Processing contract: /unique_chucks/13/0xe203e80bea7768028c5a91a6181dbe765391c3e0.sol:LibraryHolder
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/13/0xe203e80bea7768028c5a91a6181dbe765391c3e0.sol:MainInfoProvider
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/13/0xe203e80bea7768028c5a91a6181dbe765391c3e0.sol:ManageAssetToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/13/0xe203e80bea7768028c5a91a6181dbe765391c3e0.sol:ManageCrowdsale
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/13/0xe203e80bea7768028c5a91a6181dbe765391c3e0.sol:ManageFee
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/13/0xe203e80bea7768028c5a91a6181dbe765391c3e0.sol:ManagePlatform
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/13/0xe203e80bea7768028c5a91a6181dbe765391c3e0.sol:ManageWhitelist
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/13/0xe203e80bea7768028c5a91a6181dbe765391c3e0.sol:ManagerHolder
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/13/0xe203e80bea7768028c5a91a6181dbe765391c3e0.sol:MinterRole
Processing contract: /unique_chucks/13/0xe203e80bea7768028c5a91a6181dbe765391c3e0.sol:PermissionHolder
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/13/0xe203e80bea7768028c5a91a6181dbe765391c3e0.sol:Roles
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/13/0xe203e80bea7768028c5a91a6181dbe765391c3e0.sol:RootPlatformAdministratorRole
Processing contract: /unique_chucks/13/0xe203e80bea7768028c5a91a6181dbe765391c3e0.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/13/0xe203e80bea7768028c5a91a6181dbe765391c3e0.sol:StandardFeeTable
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/13/0xe203e80bea7768028c5a91a6181dbe765391c3e0.sol:StorageAdministratorRole
Processing contract: /unique_chucks/13/0xe203e80bea7768028c5a91a6181dbe765391c3e0.sol:StorageHolder
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/13/0xe203e80bea7768028c5a91a6181dbe765391c3e0.sol:UintStorage
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/13/0xe203e80bea7768028c5a91a6181dbe765391c3e0.sol:Whitelist
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/13/0xe203e80bea7768028c5a91a6181dbe765391c3e0.sol:WhitelistControlRole
Processing contract: /unique_chucks/13/0xe203e80bea7768028c5a91a6181dbe765391c3e0.sol:YourOwnable
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for LockedEther in contract 'AT2CSStorage':
    |
    |/** @title AT2CSStorage AssetToken to Crowdsale storage (that is upgradeable). */
  > |contract AT2CSStorage is StorageAdministratorRole {
    |
    |///////////////////
  at /unique_chucks/13/0xe203e80bea7768028c5a91a6181dbe765391c3e0.sol(2153)

[31mViolation[0m for LockedEther in contract 'Addr2AddrArrStorage':
    |
    |/** @title Addr2AddrArrStorage address to address array mapping storage. */
  > |contract Addr2AddrArrStorage is StorageAdministratorRole
    |{
    |
  at /unique_chucks/13/0xe203e80bea7768028c5a91a6181dbe765391c3e0.sol(2037)

[33mWarning[0m for UnrestrictedWrite in contract 'CRWDController':
    |    /// @param _whitelistAddress the whitelist address.
    |    function setWhitelistContract(address _whitelistAddress) public onlyRootPlatformAdministrator {
  > |        controllerData.whitelist = _whitelistAddress;
    |
    |        emit WhitelistSet(msg.sender, _whitelistAddress);
  at /unique_chucks/13/0xe203e80bea7768028c5a91a6181dbe765391c3e0.sol(2889)

[33mWarning[0m for UnrestrictedWrite in contract 'CRWDController':
    |    /// @param _isBlockNewActive true if no new AssetTokens or Crowdsales can be added to controller.
    |    function setBlockNewState(bool _isBlockNewActive) public onlyRootPlatformAdministrator {
  > |        controllerData.blockNew = _isBlockNewActive;
    |    }
    |
  at /unique_chucks/13/0xe203e80bea7768028c5a91a6181dbe765391c3e0.sol(2903)

[33mWarning[0m for UnrestrictedWrite in contract 'CRWDController':
    |    /// @param _whitelistEnabled global flag whitelist check enabled.
    |    function configure(bool _feesEnabled, bool _whitelistEnabled) public onlyRootPlatformAdministrator {
  > |        controllerData.feesEnabled = _feesEnabled;
    |        controllerData.whitelistEnabled = _whitelistEnabled;
    |
  at /unique_chucks/13/0xe203e80bea7768028c5a91a6181dbe765391c3e0.sol(3248)

[33mWarning[0m for UnrestrictedWrite in contract 'CRWDController':
    |    function configure(bool _feesEnabled, bool _whitelistEnabled) public onlyRootPlatformAdministrator {
    |        controllerData.feesEnabled = _feesEnabled;
  > |        controllerData.whitelistEnabled = _whitelistEnabled;
    |
    |        emit GlobalConfigurationChanged(_feesEnabled, _whitelistEnabled);
  at /unique_chucks/13/0xe203e80bea7768028c5a91a6181dbe765391c3e0.sol(3249)

[31mViolation[0m for LockedEther in contract 'DSMathL':
    |// along with this program.  If not, see <http://www.gnu.org/licenses/>.
    |
  > |library DSMathL {
    |    function ds_add(uint x, uint y) public pure returns (uint z) {
    |        require((z = x + y) >= x, "ds-math-add-overflow");
  at /unique_chucks/13/0xe203e80bea7768028c5a91a6181dbe765391c3e0.sol(648)

[33mWarning[0m for UnrestrictedWrite in contract 'FeeTable':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipTransferred(_owner, address(0));
  > |        _owner = address(0);
    |    }
    |
  at /unique_chucks/13/0xe203e80bea7768028c5a91a6181dbe765391c3e0.sol(764)

[33mWarning[0m for UnrestrictedWrite in contract 'FeeTable':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_chucks/13/0xe203e80bea7768028c5a91a6181dbe765391c3e0.sol(782)

[33mWarning[0m for UnrestrictedWrite in contract 'FeeTable':
    |    /// @param _defaultFee default fee value. Unit is WAD so fee 1 means value=1e18.
    |    function setDefaultFee(uint256 _defaultFee) public onlyOwner {
  > |        defaultFee = _defaultFee;
    |    }
    |
  at /unique_chucks/13/0xe203e80bea7768028c5a91a6181dbe765391c3e0.sol(833)

[33mWarning[0m for UnrestrictedWrite in contract 'FeeTable':
    |    /// @param _feeValue fee value. Unit is WAD so fee 1 means value=1e18.
    |    function setFee(bytes32 _feeName, uint256 _feeValue) public onlyOwner {
  > |        feeFor[_feeName] = _feeValue;
    |    }
    |
  at /unique_chucks/13/0xe203e80bea7768028c5a91a6181dbe765391c3e0.sol(840)

[33mWarning[0m for UnrestrictedWrite in contract 'FeeTable':
    |    /// @param _feeDisabled true if fee should be disabled.
    |    function setFeeMode(bytes32 _feeName, bool _feeDisabled) public onlyOwner {
  > |        isFeeDisabled[_feeName] = _feeDisabled;
    |    }
    |
  at /unique_chucks/13/0xe203e80bea7768028c5a91a6181dbe765391c3e0.sol(847)

[33mWarning[0m for UnrestrictedWrite in contract 'FeeTable':
    |    /// @param _feeValue fee value. Unit is WAD so fee 1 means value=1e18.
    |    function setSpecialFee(bytes32 _feeName, address _regardingAssetToken, uint256 _feeValue) public onlyOwner {
  > |        specialFeeFor[_feeName][_regardingAssetToken] = _feeValue;
    |    }
    |
  at /unique_chucks/13/0xe203e80bea7768028c5a91a6181dbe765391c3e0.sol(924)

[33mWarning[0m for UnrestrictedWrite in contract 'FeeTable':
    |    /// @param _feeEnabled true to enable fee.
    |    function setSpecialFeeMode(bytes32 _feeName, address _regardingAssetToken, bool _feeEnabled) public onlyOwner {
  > |        isSpecialFeeEnabled[_feeName][_regardingAssetToken] = _feeEnabled;
    |    }
    |
  at /unique_chucks/13/0xe203e80bea7768028c5a91a6181dbe765391c3e0.sol(932)

[33mWarning[0m for UnrestrictedWrite in contract 'MainInfoProvider':
    |    /// @param _whitelistAddress the whitelist address.
    |    function setWhitelistContract(address _whitelistAddress) public onlyRootPlatformAdministrator {
  > |        controllerData.whitelist = _whitelistAddress;
    |
    |        emit WhitelistSet(msg.sender, _whitelistAddress);
  at /unique_chucks/13/0xe203e80bea7768028c5a91a6181dbe765391c3e0.sol(2889)

[33mWarning[0m for UnrestrictedWrite in contract 'MainInfoProvider':
    |    /// @param _isBlockNewActive true if no new AssetTokens or Crowdsales can be added to controller.
    |    function setBlockNewState(bool _isBlockNewActive) public onlyRootPlatformAdministrator {
  > |        controllerData.blockNew = _isBlockNewActive;
    |    }
    |
  at /unique_chucks/13/0xe203e80bea7768028c5a91a6181dbe765391c3e0.sol(2903)

[33mWarning[0m for UnrestrictedWrite in contract 'ManageFee':
    |    /// @param _whitelistAddress the whitelist address.
    |    function setWhitelistContract(address _whitelistAddress) public onlyRootPlatformAdministrator {
  > |        controllerData.whitelist = _whitelistAddress;
    |
    |        emit WhitelistSet(msg.sender, _whitelistAddress);
  at /unique_chucks/13/0xe203e80bea7768028c5a91a6181dbe765391c3e0.sol(2889)

[33mWarning[0m for UnrestrictedWrite in contract 'ManageFee':
    |    /// @param _isBlockNewActive true if no new AssetTokens or Crowdsales can be added to controller.
    |    function setBlockNewState(bool _isBlockNewActive) public onlyRootPlatformAdministrator {
  > |        controllerData.blockNew = _isBlockNewActive;
    |    }
    |
  at /unique_chucks/13/0xe203e80bea7768028c5a91a6181dbe765391c3e0.sol(2903)

[33mWarning[0m for UnrestrictedWrite in contract 'ManagePlatform':
    |    /// @param _whitelistAddress the whitelist address.
    |    function setWhitelistContract(address _whitelistAddress) public onlyRootPlatformAdministrator {
  > |        controllerData.whitelist = _whitelistAddress;
    |
    |        emit WhitelistSet(msg.sender, _whitelistAddress);
  at /unique_chucks/13/0xe203e80bea7768028c5a91a6181dbe765391c3e0.sol(2889)

[33mWarning[0m for UnrestrictedWrite in contract 'ManagePlatform':
    |    /// @param _isBlockNewActive true if no new AssetTokens or Crowdsales can be added to controller.
    |    function setBlockNewState(bool _isBlockNewActive) public onlyRootPlatformAdministrator {
  > |        controllerData.blockNew = _isBlockNewActive;
    |    }
    |
  at /unique_chucks/13/0xe203e80bea7768028c5a91a6181dbe765391c3e0.sol(2903)

[33mWarning[0m for UnrestrictedWrite in contract 'ManageWhitelist':
    |    /// @param _whitelistAddress the whitelist address.
    |    function setWhitelistContract(address _whitelistAddress) public onlyRootPlatformAdministrator {
  > |        controllerData.whitelist = _whitelistAddress;
    |
    |        emit WhitelistSet(msg.sender, _whitelistAddress);
  at /unique_chucks/13/0xe203e80bea7768028c5a91a6181dbe765391c3e0.sol(2889)

[33mWarning[0m for UnrestrictedWrite in contract 'ManageWhitelist':
    |    /// @param _isBlockNewActive true if no new AssetTokens or Crowdsales can be added to controller.
    |    function setBlockNewState(bool _isBlockNewActive) public onlyRootPlatformAdministrator {
  > |        controllerData.blockNew = _isBlockNewActive;
    |    }
    |
  at /unique_chucks/13/0xe203e80bea7768028c5a91a6181dbe765391c3e0.sol(2903)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardFeeTable':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipTransferred(_owner, address(0));
  > |        _owner = address(0);
    |    }
    |
  at /unique_chucks/13/0xe203e80bea7768028c5a91a6181dbe765391c3e0.sol(764)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardFeeTable':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_chucks/13/0xe203e80bea7768028c5a91a6181dbe765391c3e0.sol(782)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardFeeTable':
    |    /// @param _defaultFee default fee value. Unit is WAD so fee 1 means value=1e18.
    |    function setDefaultFee(uint256 _defaultFee) public onlyOwner {
  > |        defaultFee = _defaultFee;
    |    }
    |
  at /unique_chucks/13/0xe203e80bea7768028c5a91a6181dbe765391c3e0.sol(833)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardFeeTable':
    |    /// @param _feeValue fee value. Unit is WAD so fee 1 means value=1e18.
    |    function setFee(bytes32 _feeName, uint256 _feeValue) public onlyOwner {
  > |        feeFor[_feeName] = _feeValue;
    |    }
    |
  at /unique_chucks/13/0xe203e80bea7768028c5a91a6181dbe765391c3e0.sol(840)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardFeeTable':
    |    /// @param _feeDisabled true if fee should be disabled.
    |    function setFeeMode(bytes32 _feeName, bool _feeDisabled) public onlyOwner {
  > |        isFeeDisabled[_feeName] = _feeDisabled;
    |    }
    |
  at /unique_chucks/13/0xe203e80bea7768028c5a91a6181dbe765391c3e0.sol(847)

[31mViolation[0m for LockedEther in contract 'StorageHolder':
    |
    |/** @title StorageHolder holds the fine-grained generic storage functions. */
  > |contract StorageHolder is 
    |    UintStorage,
    |    BytesStorage,
  at /unique_chucks/13/0xe203e80bea7768028c5a91a6181dbe765391c3e0.sol(2092)

[33mWarning[0m for UnrestrictedWrite in contract 'StorageHolder':
    |    {
    |        if(_name != "") {
  > |            uintStorage[_name] = _value;
    |        }
    |    }
  at /unique_chucks/13/0xe203e80bea7768028c5a91a6181dbe765391c3e0.sol(1373)

[33mWarning[0m for UnrestrictedWrite in contract 'StorageHolder':
    |    {
    |        if(_name != "") {
  > |            addrStorage[_name] = _value;
    |        }
    |    }
  at /unique_chucks/13/0xe203e80bea7768028c5a91a6181dbe765391c3e0.sol(1535)

[33mWarning[0m for UnrestrictedWrite in contract 'StorageHolder':
    |    {
    |        if(_name != "") {
  > |            bytesStorage[_name] = _value;
    |        }
    |    }
  at /unique_chucks/13/0xe203e80bea7768028c5a91a6181dbe765391c3e0.sol(1963)

[31mViolation[0m for RepeatedCall in contract 'Whitelist':
    |
    |            //IMPORTANT: reentrance hook. make sure calling contract is safe
  > |            IWhitelistAutoExtendExpirationExecutor(autoExtendExpirationContract).recheckIdentity(_wallet, investorKey, issuer);
    |        }
    |
  at /unique_chucks/13/0xe203e80bea7768028c5a91a6181dbe765391c3e0.sol(1119)

[31mViolation[0m for UnrestrictedWrite in contract 'YourOwnable':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_chucks/13/0xe203e80bea7768028c5a91a6181dbe765391c3e0.sol(782)

[33mWarning[0m for UnrestrictedWrite in contract 'YourOwnable':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipTransferred(_owner, address(0));
  > |        _owner = address(0);
    |    }
    |
  at /unique_chucks/13/0xe203e80bea7768028c5a91a6181dbe765391c3e0.sol(764)

[33mWarning[0m for UnrestrictedWrite in contract 'YourOwnable':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_chucks/13/0xe203e80bea7768028c5a91a6181dbe765391c3e0.sol(782)