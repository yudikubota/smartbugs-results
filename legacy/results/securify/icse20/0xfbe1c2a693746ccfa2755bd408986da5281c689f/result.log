Processing contract: /unique_chucks/10/0xfbe1c2a693746ccfa2755bd408986da5281c689f.sol:DigitalAssetCoin
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/10/0xfbe1c2a693746ccfa2755bd408986da5281c689f.sol:DigitalAssetToken
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/10/0xfbe1c2a693746ccfa2755bd408986da5281c689f.sol:SafeMath
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/10/0xfbe1c2a693746ccfa2755bd408986da5281c689f.sol:StandardToken
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/10/0xfbe1c2a693746ccfa2755bd408986da5281c689f.sol:Token
[31mViolation[0m for LockedEther in contract 'DigitalAssetCoin':
    |}
    |  
  > |contract DigitalAssetCoin is StandardToken {
    |    string public constant standard = 'DigitalAssetCoin 1.0';
    |    string public constant symbol = "DAC";
  at /unique_chucks/10/0xfbe1c2a693746ccfa2755bd408986da5281c689f.sol(136)

[33mWarning[0m for UnrestrictedWrite in contract 'DigitalAssetCoin':
    |      if (balances[msg.sender] >= _value && _value > 0) {
    |        balances[msg.sender] -= _value;
  > |        balances[_to] += _value;
    |        Transfer(msg.sender, _to, _value);
    |        return true;
  at /unique_chucks/10/0xfbe1c2a693746ccfa2755bd408986da5281c689f.sol(58)

[33mWarning[0m for UnrestrictedWrite in contract 'DigitalAssetCoin':
    |    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {
    |      if (balances[_from] >= _value && allowed[_from][msg.sender] >= _value && _value > 0) {
  > |        balances[_to] += _value;
    |        balances[_from] -= _value;
    |        allowed[_from][msg.sender] -= _value;
  at /unique_chucks/10/0xfbe1c2a693746ccfa2755bd408986da5281c689f.sol(68)

[33mWarning[0m for UnrestrictedWrite in contract 'DigitalAssetCoin':
    |      if (balances[_from] >= _value && allowed[_from][msg.sender] >= _value && _value > 0) {
    |        balances[_to] += _value;
  > |        balances[_from] -= _value;
    |        allowed[_from][msg.sender] -= _value;
    |        Transfer(_from, _to, _value);
  at /unique_chucks/10/0xfbe1c2a693746ccfa2755bd408986da5281c689f.sol(69)

[33mWarning[0m for UnrestrictedWrite in contract 'DigitalAssetCoin':
    |}
    |  
  > |contract DigitalAssetCoin is StandardToken {
    |    string public constant standard = 'DigitalAssetCoin 1.0';
    |    string public constant symbol = "DAC";
  at /unique_chucks/10/0xfbe1c2a693746ccfa2755bd408986da5281c689f.sol(136)

[33mWarning[0m for UnrestrictedWrite in contract 'DigitalAssetCoin':
    |    
    |    function insetAssetToken(address assetToken) internal {
  > |        totalAssetTokens = totalAssetTokens + 1;
    |        addressDict[assetToken] = totalAssetTokens;
    |        addressList.length += 1;
  at /unique_chucks/10/0xfbe1c2a693746ccfa2755bd408986da5281c689f.sol(218)

[33mWarning[0m for UnrestrictedWrite in contract 'DigitalAssetCoin':
    |    function insetAssetToken(address assetToken) internal {
    |        totalAssetTokens = totalAssetTokens + 1;
  > |        addressDict[assetToken] = totalAssetTokens;
    |        addressList.length += 1;
    |        addressList[totalAssetTokens] = assetToken;
  at /unique_chucks/10/0xfbe1c2a693746ccfa2755bd408986da5281c689f.sol(219)

[33mWarning[0m for UnrestrictedWrite in contract 'DigitalAssetCoin':
    |        addressDict[assetToken] = totalAssetTokens;
    |        addressList.length += 1;
  > |        addressList[totalAssetTokens] = assetToken;
    |        NewDigitalAsset(msg.sender, assetToken);
    |        //Transfer(msg.sender, assetToken, 777);
  at /unique_chucks/10/0xfbe1c2a693746ccfa2755bd408986da5281c689f.sol(221)

[33mWarning[0m for UnrestrictedWrite in contract 'DigitalAssetCoin':
    |        if (balances[_from] >= _value && _value > 0) {
    |            balances[_from] -= _value;
  > |            transmutedBalances[this] += _value;
    |            TransmutedTransfer(_from, this, _value, tokenAddress, tokenName, tokenSymbol);
    |            return true;
  at /unique_chucks/10/0xfbe1c2a693746ccfa2755bd408986da5281c689f.sol(243)

[31mViolation[0m for LockedEther in contract 'DigitalAssetToken':
    |}
    |  
  > |contract DigitalAssetToken is StandardToken() 
    |{
    |    string public constant standard = 'DigitalAssetToken 1.0';
  at /unique_chucks/10/0xfbe1c2a693746ccfa2755bd408986da5281c689f.sol(100)

[31mViolation[0m for MissingInputValidation in contract 'DigitalAssetToken':
    |contract StandardToken is Token {
    |
  > |    function transfer(address _to, uint256 _value) returns (bool success) {
    |      if (balances[msg.sender] >= _value && _value > 0) {
    |        balances[msg.sender] -= _value;
  at /unique_chucks/10/0xfbe1c2a693746ccfa2755bd408986da5281c689f.sol(55)

[31mViolation[0m for MissingInputValidation in contract 'DigitalAssetToken':
    |    }
    |
  > |    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {
    |      if (balances[_from] >= _value && allowed[_from][msg.sender] >= _value && _value > 0) {
    |        balances[_to] += _value;
  at /unique_chucks/10/0xfbe1c2a693746ccfa2755bd408986da5281c689f.sol(66)

[31mViolation[0m for MissingInputValidation in contract 'DigitalAssetToken':
    |    }
    |
  > |    function balanceOf(address _owner) constant returns (uint256 balance) {
    |        return balances[_owner];
    |    }
  at /unique_chucks/10/0xfbe1c2a693746ccfa2755bd408986da5281c689f.sol(78)

[31mViolation[0m for MissingInputValidation in contract 'DigitalAssetToken':
    |    }
    |
  > |    function approve(address _spender, uint256 _value) returns (bool success) {
    |        allowed[msg.sender][_spender] = _value;
    |        Approval(msg.sender, _spender, _value);
  at /unique_chucks/10/0xfbe1c2a693746ccfa2755bd408986da5281c689f.sol(82)

[31mViolation[0m for MissingInputValidation in contract 'DigitalAssetToken':
    |    }
    |
  > |    function allowance(address _owner, address _spender) constant returns (uint256 remaining) {
    |      return allowed[_owner][_spender];
    |    }
  at /unique_chucks/10/0xfbe1c2a693746ccfa2755bd408986da5281c689f.sol(88)

[33mWarning[0m for UnrestrictedWrite in contract 'DigitalAssetToken':
    |      if (balances[msg.sender] >= _value && _value > 0) {
    |        balances[msg.sender] -= _value;
  > |        balances[_to] += _value;
    |        Transfer(msg.sender, _to, _value);
    |        return true;
  at /unique_chucks/10/0xfbe1c2a693746ccfa2755bd408986da5281c689f.sol(58)

[33mWarning[0m for UnrestrictedWrite in contract 'DigitalAssetToken':
    |    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {
    |      if (balances[_from] >= _value && allowed[_from][msg.sender] >= _value && _value > 0) {
  > |        balances[_to] += _value;
    |        balances[_from] -= _value;
    |        allowed[_from][msg.sender] -= _value;
  at /unique_chucks/10/0xfbe1c2a693746ccfa2755bd408986da5281c689f.sol(68)

[33mWarning[0m for UnrestrictedWrite in contract 'DigitalAssetToken':
    |      if (balances[_from] >= _value && allowed[_from][msg.sender] >= _value && _value > 0) {
    |        balances[_to] += _value;
  > |        balances[_from] -= _value;
    |        allowed[_from][msg.sender] -= _value;
    |        Transfer(_from, _to, _value);
  at /unique_chucks/10/0xfbe1c2a693746ccfa2755bd408986da5281c689f.sol(69)

[31mViolation[0m for MissingInputValidation in contract 'StandardToken':
    |contract StandardToken is Token {
    |
  > |    function transfer(address _to, uint256 _value) returns (bool success) {
    |      if (balances[msg.sender] >= _value && _value > 0) {
    |        balances[msg.sender] -= _value;
  at /unique_chucks/10/0xfbe1c2a693746ccfa2755bd408986da5281c689f.sol(55)

[31mViolation[0m for MissingInputValidation in contract 'StandardToken':
    |    }
    |
  > |    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {
    |      if (balances[_from] >= _value && allowed[_from][msg.sender] >= _value && _value > 0) {
    |        balances[_to] += _value;
  at /unique_chucks/10/0xfbe1c2a693746ccfa2755bd408986da5281c689f.sol(66)

[31mViolation[0m for MissingInputValidation in contract 'StandardToken':
    |    }
    |
  > |    function balanceOf(address _owner) constant returns (uint256 balance) {
    |        return balances[_owner];
    |    }
  at /unique_chucks/10/0xfbe1c2a693746ccfa2755bd408986da5281c689f.sol(78)

[31mViolation[0m for MissingInputValidation in contract 'StandardToken':
    |    }
    |
  > |    function approve(address _spender, uint256 _value) returns (bool success) {
    |        allowed[msg.sender][_spender] = _value;
    |        Approval(msg.sender, _spender, _value);
  at /unique_chucks/10/0xfbe1c2a693746ccfa2755bd408986da5281c689f.sol(82)

[31mViolation[0m for MissingInputValidation in contract 'StandardToken':
    |    }
    |
  > |    function allowance(address _owner, address _spender) constant returns (uint256 remaining) {
    |      return allowed[_owner][_spender];
    |    }
  at /unique_chucks/10/0xfbe1c2a693746ccfa2755bd408986da5281c689f.sol(88)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |      if (balances[msg.sender] >= _value && _value > 0) {
    |        balances[msg.sender] -= _value;
  > |        balances[_to] += _value;
    |        Transfer(msg.sender, _to, _value);
    |        return true;
  at /unique_chucks/10/0xfbe1c2a693746ccfa2755bd408986da5281c689f.sol(58)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {
    |      if (balances[_from] >= _value && allowed[_from][msg.sender] >= _value && _value > 0) {
  > |        balances[_to] += _value;
    |        balances[_from] -= _value;
    |        allowed[_from][msg.sender] -= _value;
  at /unique_chucks/10/0xfbe1c2a693746ccfa2755bd408986da5281c689f.sol(68)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |      if (balances[_from] >= _value && allowed[_from][msg.sender] >= _value && _value > 0) {
    |        balances[_to] += _value;
  > |        balances[_from] -= _value;
    |        allowed[_from][msg.sender] -= _value;
    |        Transfer(_from, _to, _value);
  at /unique_chucks/10/0xfbe1c2a693746ccfa2755bd408986da5281c689f.sol(69)