Processing contract: /unique_chucks/13/0x2781246fe707bb15cee3e5ea354e2154a2877b16.sol:ELToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/13/0x2781246fe707bb15cee3e5ea354e2154a2877b16.sol:ERC20
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/13/0x2781246fe707bb15cee3e5ea354e2154a2877b16.sol:ERC20Burnable
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/13/0x2781246fe707bb15cee3e5ea354e2154a2877b16.sol:ERC20Detailed
Processing contract: /unique_chucks/13/0x2781246fe707bb15cee3e5ea354e2154a2877b16.sol:ERC20Mintable
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/13/0x2781246fe707bb15cee3e5ea354e2154a2877b16.sol:ERC20Pausable
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/13/0x2781246fe707bb15cee3e5ea354e2154a2877b16.sol:IERC20
Processing contract: /unique_chucks/13/0x2781246fe707bb15cee3e5ea354e2154a2877b16.sol:Migrations
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/13/0x2781246fe707bb15cee3e5ea354e2154a2877b16.sol:MinterRole
Processing contract: /unique_chucks/13/0x2781246fe707bb15cee3e5ea354e2154a2877b16.sol:Ownable
Processing contract: /unique_chucks/13/0x2781246fe707bb15cee3e5ea354e2154a2877b16.sol:Pausable
Processing contract: /unique_chucks/13/0x2781246fe707bb15cee3e5ea354e2154a2877b16.sol:PauserRole
Processing contract: /unique_chucks/13/0x2781246fe707bb15cee3e5ea354e2154a2877b16.sol:Roles
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/13/0x2781246fe707bb15cee3e5ea354e2154a2877b16.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for LockedEther in contract 'ELToken':
    |}
    |
  > |contract ELToken is ERC20Detailed, ERC20Burnable, ERC20Mintable, ERC20Pausable, Ownable {
    |  constructor(string memory name, string memory symbol, uint8 decimals, uint256 totalSupply) ERC20Detailed(name, symbol, decimals) public {
    |    _mint(owner(), totalSupply * 10 ** uint(decimals));
  at /unique_chucks/13/0x2781246fe707bb15cee3e5ea354e2154a2877b16.sol(412)

[33mWarning[0m for UnrestrictedWrite in contract 'ELToken':
    |        require(account != address(0));
    |
  > |        _totalSupply = _totalSupply.add(value);
    |        _balances[account] = _balances[account].add(value);
    |        emit Transfer(address(0), account, value);
  at /unique_chucks/13/0x2781246fe707bb15cee3e5ea354e2154a2877b16.sol(193)

[33mWarning[0m for UnrestrictedWrite in contract 'ELToken':
    |        require(account != address(0));
    |
  > |        _totalSupply = _totalSupply.sub(value);
    |        _balances[account] = _balances[account].sub(value);
    |        emit Transfer(account, address(0), value);
  at /unique_chucks/13/0x2781246fe707bb15cee3e5ea354e2154a2877b16.sol(201)

[33mWarning[0m for UnrestrictedWrite in contract 'ELToken':
    |
    |    function pause() public onlyPauser whenNotPaused {
  > |        _paused = true;
    |        emit Paused(msg.sender);
    |    }
  at /unique_chucks/13/0x2781246fe707bb15cee3e5ea354e2154a2877b16.sol(295)

[33mWarning[0m for UnrestrictedWrite in contract 'ELToken':
    |
    |    function unpause() public onlyPauser whenPaused {
  > |        _paused = false;
    |        emit Unpaused(msg.sender);
    |    }
  at /unique_chucks/13/0x2781246fe707bb15cee3e5ea354e2154a2877b16.sol(300)

[33mWarning[0m for UnrestrictedWrite in contract 'ELToken':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipTransferred(_owner, address(0));
  > |        _owner = address(0);
    |    }
    |
  at /unique_chucks/13/0x2781246fe707bb15cee3e5ea354e2154a2877b16.sol(376)

[33mWarning[0m for UnrestrictedWrite in contract 'ELToken':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_chucks/13/0x2781246fe707bb15cee3e5ea354e2154a2877b16.sol(386)

[33mWarning[0m for UnrestrictedWrite in contract 'ERC20Burnable':
    |        require(account != address(0));
    |
  > |        _totalSupply = _totalSupply.sub(value);
    |        _balances[account] = _balances[account].sub(value);
    |        emit Transfer(account, address(0), value);
  at /unique_chucks/13/0x2781246fe707bb15cee3e5ea354e2154a2877b16.sol(201)

[33mWarning[0m for UnrestrictedWrite in contract 'ERC20Pausable':
    |
    |    function pause() public onlyPauser whenNotPaused {
  > |        _paused = true;
    |        emit Paused(msg.sender);
    |    }
  at /unique_chucks/13/0x2781246fe707bb15cee3e5ea354e2154a2877b16.sol(295)

[33mWarning[0m for UnrestrictedWrite in contract 'ERC20Pausable':
    |
    |    function unpause() public onlyPauser whenPaused {
  > |        _paused = false;
    |        emit Unpaused(msg.sender);
    |    }
  at /unique_chucks/13/0x2781246fe707bb15cee3e5ea354e2154a2877b16.sol(300)

[31mViolation[0m for MissingInputValidation in contract 'Migrations':
    |  }
    |
  > |  function setCompleted(uint completed) public restricted {
    |    last_completed_migration = completed;
    |  }
  at /unique_chucks/13/0x2781246fe707bb15cee3e5ea354e2154a2877b16.sol(402)