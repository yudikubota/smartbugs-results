Processing contract: /unique_chucks/18/0x908d81a4961c4a40b38c91f16d216c6307a89954.sol:MerkleProof
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/18/0x908d81a4961c4a40b38c91f16d216c6307a89954.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/18/0x908d81a4961c4a40b38c91f16d216c6307a89954.sol:V12Voting
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for LockedEther in contract 'V12Voting':
    | * And then, each VGT holder whose included in the Merkle Tree can vote via `vote` method.
    | */
  > |contract V12Voting {
    |    using SafeMath for uint256;
    |
  at /unique_chucks/18/0x908d81a4961c4a40b38c91f16d216c6307a89954.sol(123)

[33mWarning[0m for UnrestrictedWrite in contract 'V12Voting':
    |
    |        votes[msg.sender] = hashOfVote;
  > |        votingResult[hashOfVote] = votingResult[hashOfVote].add(_amount);
    |
    |        emit NewVote(msg.sender, _vote, _amount);
  at /unique_chucks/18/0x908d81a4961c4a40b38c91f16d216c6307a89954.sol(188)