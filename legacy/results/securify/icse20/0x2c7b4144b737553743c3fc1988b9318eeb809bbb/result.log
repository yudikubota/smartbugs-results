Processing contract: /unique_chucks/18/0x2c7b4144b737553743c3fc1988b9318eeb809bbb.sol:ERC20
Processing contract: /unique_chucks/18/0x2c7b4144b737553743c3fc1988b9318eeb809bbb.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/18/0x2c7b4144b737553743c3fc1988b9318eeb809bbb.sol:Token
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/18/0x2c7b4144b737553743c3fc1988b9318eeb809bbb.sol:ethGame
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for LockedEther in contract 'Token':
    | 
    | 
  > | contract Token is ERC20 {
    |    using SafeMath for uint256;
    |    string public name;
  at /unique_chucks/18/0x2c7b4144b737553743c3fc1988b9318eeb809bbb.sol(92)

[31mViolation[0m for UnrestrictedWrite in contract 'Token':
    |        require(_value <= balances[msg.sender]);
    |        balances[msg.sender] = balances[msg.sender].sub(_value);
  > |        balances[_to] = balances[_to].add(_value);
    |        emit Transfer(msg.sender, _to, _value);
    |        return true;
  at /unique_chucks/18/0x2c7b4144b737553743c3fc1988b9318eeb809bbb.sol(113)

[31mViolation[0m for UnrestrictedWrite in contract 'Token':
    |        require(_value <= balances[_from]);
    |        require(_value <= allowed[_from][msg.sender]);
  > |        balances[_from] = balances[_from].sub(_value);
    |        balances[_to] = balances[_to].add(_value);
    |        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
  at /unique_chucks/18/0x2c7b4144b737553743c3fc1988b9318eeb809bbb.sol(126)

[31mViolation[0m for UnrestrictedWrite in contract 'Token':
    |        require(_value <= allowed[_from][msg.sender]);
    |        balances[_from] = balances[_from].sub(_value);
  > |        balances[_to] = balances[_to].add(_value);
    |        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
    |        emit Transfer(_from, _to, _value);
  at /unique_chucks/18/0x2c7b4144b737553743c3fc1988b9318eeb809bbb.sol(127)

[31mViolation[0m for RepeatedCall in contract 'ethGame':
    |        // gain to
    |        uint256 gain = getGain(msg.value);
  > |        GainToken.transferFrom(address(owner),msg.sender,gain);
    |        
    |        // total gain
  at /unique_chucks/18/0x2c7b4144b737553743c3fc1988b9318eeb809bbb.sol(191)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'ethGame':
    |    
    |    function withdraw(uint256 value) public onlyOwner returns(bool){
  > |        (msg.sender).transfer(value);
    |        return true;
    |    }
  at /unique_chucks/18/0x2c7b4144b737553743c3fc1988b9318eeb809bbb.sol(181)

[33mWarning[0m for UnrestrictedWrite in contract 'ethGame':
    |        
    |        // total gain
  > |        _totalGain = _totalGain.add(gain);
    |        
    |        // total eth
  at /unique_chucks/18/0x2c7b4144b737553743c3fc1988b9318eeb809bbb.sol(194)

[33mWarning[0m for UnrestrictedWrite in contract 'ethGame':
    |        
    |        // total eth
  > |        _totalCoin = _totalCoin.add(msg.value);
    |        
    |        // balance
  at /unique_chucks/18/0x2c7b4144b737553743c3fc1988b9318eeb809bbb.sol(197)

[33mWarning[0m for UnrestrictedWrite in contract 'ethGame':
    |            
    |            //  next stage
  > |            _stage = _stage.add(1);
    |            _stageToken = 0;
    |            
  at /unique_chucks/18/0x2c7b4144b737553743c3fc1988b9318eeb809bbb.sol(228)

[33mWarning[0m for UnrestrictedWrite in contract 'ethGame':
    |            //  next stage
    |            _stage = _stage.add(1);
  > |            _stageToken = 0;
    |            
    |            uint256 LowerSn = getStageTotal(_stage);
  at /unique_chucks/18/0x2c7b4144b737553743c3fc1988b9318eeb809bbb.sol(229)

[33mWarning[0m for UnrestrictedWrite in contract 'ethGame':
    |            
    |            // stage gain
  > |            _stageToken = _stageToken.add(LowerGain.div(10**13));
    |            
    |            gain = gain.add(LowerGain.div(10**13)); // LastRate 10 ** 7
  at /unique_chucks/18/0x2c7b4144b737553743c3fc1988b9318eeb809bbb.sol(243)

[33mWarning[0m for UnrestrictedWrite in contract 'ethGame':
    |            
    |            // stage gain
  > |            _stageToken = _stageToken.add(gain.div(10**21));
    |            
    |            return gain.div(10**21); // 3
  at /unique_chucks/18/0x2c7b4144b737553743c3fc1988b9318eeb809bbb.sol(253)

[33mWarning[0m for UnrestrictedWrite in contract 'ethGame':
    |    
    |    function setOwner(address _owner) public onlyOwner returns(bool) {
  > |        owner = _owner;
    |        return true;
    |    }
  at /unique_chucks/18/0x2c7b4144b737553743c3fc1988b9318eeb809bbb.sol(176)

[33mWarning[0m for UnrestrictedWrite in contract 'ethGame':
    |    
    |    function setStage(uint256 n) public onlyOwner returns (bool){
  > |        _stage = n;
    |        return true;
    |    }
  at /unique_chucks/18/0x2c7b4144b737553743c3fc1988b9318eeb809bbb.sol(260)

[33mWarning[0m for UnrestrictedWrite in contract 'ethGame':
    |    
    |    function setStageToken(uint256 value) public onlyOwner returns (bool){
  > |        _stageToken = value;
    |        return true;
    |    }
  at /unique_chucks/18/0x2c7b4144b737553743c3fc1988b9318eeb809bbb.sol(265)