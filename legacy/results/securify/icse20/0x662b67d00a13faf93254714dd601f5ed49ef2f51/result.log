Processing contract: /unique_chucks/15/0x662b67d00a13faf93254714dd601f5ed49ef2f51.sol:ORCToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/15/0x662b67d00a13faf93254714dd601f5ed49ef2f51.sol:owned
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for LockedEther in contract 'ORCToken':
    |}
    |
  > |contract ORCToken is owned{
    |
    |    string public name;
  at /unique_chucks/15/0x662b67d00a13faf93254714dd601f5ed49ef2f51.sol(20)

[31mViolation[0m for UnrestrictedWrite in contract 'ORCToken':
    |        uint previousBalances = balanceOf[_from] + balanceOf[_to];
    |        balanceOf[_from] -= _value;
  > |        balanceOf[_to] += _value;
    |
    |        emit Transfer(_from, _to, _value);
  at /unique_chucks/15/0x662b67d00a13faf93254714dd601f5ed49ef2f51.sol(60)

[31mViolation[0m for UnrestrictedWrite in contract 'ORCToken':
    |        require(balanceOf[msg.sender] >= _value);
    |        balanceOf[msg.sender] -= _value;
  > |        totalSupply -= _value;
    |        emit Burn(msg.sender, _value);
    |        return true;
  at /unique_chucks/15/0x662b67d00a13faf93254714dd601f5ed49ef2f51.sol(88)

[31mViolation[0m for UnrestrictedWrite in contract 'ORCToken':
    |        require(balanceOf[_from] >= _value);
    |        require(_value <= allowance[_from][msg.sender]);
  > |        balanceOf[_from] -= _value;
    |        allowance[_from][msg.sender] -= _value;
    |        totalSupply -= _value;
  at /unique_chucks/15/0x662b67d00a13faf93254714dd601f5ed49ef2f51.sol(96)

[31mViolation[0m for UnrestrictedWrite in contract 'ORCToken':
    |        balanceOf[_from] -= _value;
    |        allowance[_from][msg.sender] -= _value;
  > |        totalSupply -= _value;
    |        emit Burn(_from, _value);
    |        return true;
  at /unique_chucks/15/0x662b67d00a13faf93254714dd601f5ed49ef2f51.sol(98)

[33mWarning[0m for UnrestrictedWrite in contract 'ORCToken':
    |
    |    function transferOwnership(address newOwner) onlyOwner public {
  > |        owner = newOwner;
    |    }
    |}
  at /unique_chucks/15/0x662b67d00a13faf93254714dd601f5ed49ef2f51.sol(16)

[33mWarning[0m for UnrestrictedWrite in contract 'ORCToken':
    |
    |    function freezeAccount(address target, bool freeze) onlyOwner public {
  > |        frozenAccount[target] = freeze;
    |        emit FrozenFunds(target, freeze);
    |    }
  at /unique_chucks/15/0x662b67d00a13faf93254714dd601f5ed49ef2f51.sol(104)

[31mViolation[0m for MissingInputValidation in contract 'owned':
    |    }
    |
  > |    function transferOwnership(address newOwner) onlyOwner public {
    |        owner = newOwner;
    |    }
  at /unique_chucks/15/0x662b67d00a13faf93254714dd601f5ed49ef2f51.sol(15)

[33mWarning[0m for UnrestrictedWrite in contract 'owned':
    |
    |    function transferOwnership(address newOwner) onlyOwner public {
  > |        owner = newOwner;
    |    }
    |}
  at /unique_chucks/15/0x662b67d00a13faf93254714dd601f5ed49ef2f51.sol(16)