Processing contract: /unique_chucks/20/0x83d60e7aed59c6829fb251229061a55f35432c4d.sol:ERC20
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/20/0x83d60e7aed59c6829fb251229061a55f35432c4d.sol:ERC20Capped
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/20/0x83d60e7aed59c6829fb251229061a55f35432c4d.sol:ERC20Detailed
Processing contract: /unique_chucks/20/0x83d60e7aed59c6829fb251229061a55f35432c4d.sol:ERC20Mintable
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/20/0x83d60e7aed59c6829fb251229061a55f35432c4d.sol:ERC20Pausable
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/20/0x83d60e7aed59c6829fb251229061a55f35432c4d.sol:ERC20Redeem
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/20/0x83d60e7aed59c6829fb251229061a55f35432c4d.sol:IERC20
Processing contract: /unique_chucks/20/0x83d60e7aed59c6829fb251229061a55f35432c4d.sol:InfinitoToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/20/0x83d60e7aed59c6829fb251229061a55f35432c4d.sol:MinterRole
Processing contract: /unique_chucks/20/0x83d60e7aed59c6829fb251229061a55f35432c4d.sol:Ownable
Processing contract: /unique_chucks/20/0x83d60e7aed59c6829fb251229061a55f35432c4d.sol:Pausable
Processing contract: /unique_chucks/20/0x83d60e7aed59c6829fb251229061a55f35432c4d.sol:PauserRole
Processing contract: /unique_chucks/20/0x83d60e7aed59c6829fb251229061a55f35432c4d.sol:Roles
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/20/0x83d60e7aed59c6829fb251229061a55f35432c4d.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[33mWarning[0m for UnrestrictedWrite in contract 'ERC20Pausable':
    |     */
    |    function pause() public onlyPauser whenNotPaused {
  > |        _paused = true;
    |        emit Paused(msg.sender);
    |    }
  at /unique_chucks/20/0x83d60e7aed59c6829fb251229061a55f35432c4d.sol(783)

[33mWarning[0m for UnrestrictedWrite in contract 'ERC20Pausable':
    |     */
    |    function unpause() public onlyPauser whenPaused {
  > |        _paused = false;
    |        emit Unpaused(msg.sender);
    |    }
  at /unique_chucks/20/0x83d60e7aed59c6829fb251229061a55f35432c4d.sol(791)

[31mViolation[0m for RepeatedCall in contract 'ERC20Redeem':
    |        require(balance > 0);
    |        _burn(msg.sender, balance);
  > |        _newToken.mint(msg.sender, balance);
    |        return true;
    |    }
  at /unique_chucks/20/0x83d60e7aed59c6829fb251229061a55f35432c4d.sol(876)

[31mViolation[0m for RepeatedCall in contract 'ERC20Redeem':
    |      require(balance > 0, "balance: empty");
    |      _burn(account, balance);
  > |      _newToken.mint(account, balance);
    |    }
    |
  at /unique_chucks/20/0x83d60e7aed59c6829fb251229061a55f35432c4d.sol(896)

[33mWarning[0m for UnrestrictedWrite in contract 'ERC20Redeem':
    |        require(newOwner != address(0), "Ownable: new owner is the zero address");
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_chucks/20/0x83d60e7aed59c6829fb251229061a55f35432c4d.sol(142)

[33mWarning[0m for UnrestrictedWrite in contract 'ERC20Redeem':
    |     */
    |    function pause() public onlyPauser whenNotPaused {
  > |        _paused = true;
    |        emit Paused(msg.sender);
    |    }
  at /unique_chucks/20/0x83d60e7aed59c6829fb251229061a55f35432c4d.sol(783)

[33mWarning[0m for UnrestrictedWrite in contract 'ERC20Redeem':
    |     */
    |    function unpause() public onlyPauser whenPaused {
  > |        _paused = false;
    |        emit Unpaused(msg.sender);
    |    }
  at /unique_chucks/20/0x83d60e7aed59c6829fb251229061a55f35432c4d.sol(791)

[33mWarning[0m for UnrestrictedWrite in contract 'ERC20Redeem':
    |        require(address(newToken_) != address(0));
    |        require(newToken_.isMinter(address(this)));
  > |        _newToken= newToken_;
    |        return true;
    |    }
  at /unique_chucks/20/0x83d60e7aed59c6829fb251229061a55f35432c4d.sol(863)

[33mWarning[0m for UnrestrictedWrite in contract 'ERC20Redeem':
    |    function setMigration(bool isMigration_) public onlyOwner{
    |      require(address(_newToken) != address(0), "Have migrated");
  > |      _isMigration = isMigration_;
    |    }
    |}
  at /unique_chucks/20/0x83d60e7aed59c6829fb251229061a55f35432c4d.sol(904)

[31mViolation[0m for LockedEther in contract 'InfinitoToken':
    |
    |
  > |contract InfinitoToken is ERC20Redeem, ERC20Detailed, ERC20Capped{
    |    constructor (
    |        string memory name,
  at /unique_chucks/20/0x83d60e7aed59c6829fb251229061a55f35432c4d.sol(955)

[31mViolation[0m for RepeatedCall in contract 'InfinitoToken':
    |        require(balance > 0);
    |        _burn(msg.sender, balance);
  > |        _newToken.mint(msg.sender, balance);
    |        return true;
    |    }
  at /unique_chucks/20/0x83d60e7aed59c6829fb251229061a55f35432c4d.sol(876)

[31mViolation[0m for RepeatedCall in contract 'InfinitoToken':
    |      require(balance > 0, "balance: empty");
    |      _burn(account, balance);
  > |      _newToken.mint(account, balance);
    |    }
    |
  at /unique_chucks/20/0x83d60e7aed59c6829fb251229061a55f35432c4d.sol(896)

[33mWarning[0m for UnrestrictedWrite in contract 'InfinitoToken':
    |
    |
  > |contract InfinitoToken is ERC20Redeem, ERC20Detailed, ERC20Capped{
    |    constructor (
    |        string memory name,
  at /unique_chucks/20/0x83d60e7aed59c6829fb251229061a55f35432c4d.sol(955)