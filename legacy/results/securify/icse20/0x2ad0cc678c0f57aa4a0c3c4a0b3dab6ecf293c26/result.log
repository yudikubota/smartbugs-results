Processing contract: /unique_chucks/15/0x2ad0cc678c0f57aa4a0c3c4a0b3dab6ecf293c26.sol:IERC20
Processing contract: /unique_chucks/15/0x2ad0cc678c0f57aa4a0c3c4a0b3dab6ecf293c26.sol:PurchaseContract
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/15/0x2ad0cc678c0f57aa4a0c3c4a0b3dab6ecf293c26.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for LockedEther in contract 'PurchaseContract':
    |}
    |
  > |contract PurchaseContract {
    |    
    |  using SafeMath for uint256;
  at /unique_chucks/15/0x2ad0cc678c0f57aa4a0c3c4a0b3dab6ecf293c26.sol(82)

[31mViolation[0m for RepeatedCall in contract 'PurchaseContract':
    |    _product.model = _model;
    |
  > |    token.transferFrom(_product.buyer, _product.retailer, _product.price.mul(90).div(100));
    |    token.transferFrom(_product.buyer, _product.model, _product.price.mul(6).div(100));
    |    
  at /unique_chucks/15/0x2ad0cc678c0f57aa4a0c3c4a0b3dab6ecf293c26.sol(206)

[31mViolation[0m for RepeatedCall in contract 'PurchaseContract':
    |
    |    token.transferFrom(_product.buyer, _product.retailer, _product.price.mul(90).div(100));
  > |    token.transferFrom(_product.buyer, _product.model, _product.price.mul(6).div(100));
    |    
    |    _product.purchased = true;
  at /unique_chucks/15/0x2ad0cc678c0f57aa4a0c3c4a0b3dab6ecf293c26.sol(207)

[31mViolation[0m for UnrestrictedWrite in contract 'PurchaseContract':
    |
    |/**
  > | * @title SafeMath
    | * @dev Math operations with safety checks that throw on error
    | */
  at /unique_chucks/15/0x2ad0cc678c0f57aa4a0c3c4a0b3dab6ecf293c26.sol(4)

[31mViolation[0m for UnrestrictedWrite in contract 'PurchaseContract':
    |    require(_price > 0);
    |
  > |    products.push(Product(_productId, _price, address(0), msg.sender, address(0), false));
    |    unPurchasedProductsCount = unPurchasedProductsCount.add(1);
    |  }
  at /unique_chucks/15/0x2ad0cc678c0f57aa4a0c3c4a0b3dab6ecf293c26.sol(112)

[31mViolation[0m for UnrestrictedWrite in contract 'PurchaseContract':
    |    require(_product.price <= token.balanceOf(msg.sender));
    |    _product.buyer = msg.sender;
  > |     products[index] = _product;
    |  }
    |
  at /unique_chucks/15/0x2ad0cc678c0f57aa4a0c3c4a0b3dab6ecf293c26.sol(134)