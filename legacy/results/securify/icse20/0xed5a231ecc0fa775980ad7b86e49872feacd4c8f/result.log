Processing contract: /unique_chucks/11/0xed5a231ecc0fa775980ad7b86e49872feacd4c8f.sol:IERC20
Processing contract: /unique_chucks/11/0xed5a231ecc0fa775980ad7b86e49872feacd4c8f.sol:LuckyBucks
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/11/0xed5a231ecc0fa775980ad7b86e49872feacd4c8f.sol:Manageable
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/11/0xed5a231ecc0fa775980ad7b86e49872feacd4c8f.sol:Ownable
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/11/0xed5a231ecc0fa775980ad7b86e49872feacd4c8f.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for LockedEther in contract 'LuckyBucks':
    |
    |
  > |contract LuckyBucks is IERC20, Manageable {
    |    using SafeMath for uint256;
    |
  at /unique_chucks/11/0xed5a231ecc0fa775980ad7b86e49872feacd4c8f.sol(93)

[33mWarning[0m for UnrestrictedWrite in contract 'LuckyBucks':
    |     */
    |    function transferOwnership(address newOwner) onlyOwner public {
  > |        pendingOwner = newOwner;
    |    }
    |
  at /unique_chucks/11/0xed5a231ecc0fa775980ad7b86e49872feacd4c8f.sol(35)

[33mWarning[0m for UnrestrictedWrite in contract 'LuckyBucks':
    |    function claimOwnership() onlyPendingOwner public {
    |        emit OwnershipTransferred(owner, pendingOwner);
  > |        owner = pendingOwner;
    |        pendingOwner = address(0);
    |    }
  at /unique_chucks/11/0xed5a231ecc0fa775980ad7b86e49872feacd4c8f.sol(43)

[33mWarning[0m for UnrestrictedWrite in contract 'LuckyBucks':
    |        emit OwnershipTransferred(owner, pendingOwner);
    |        owner = pendingOwner;
  > |        pendingOwner = address(0);
    |    }
    |}
  at /unique_chucks/11/0xed5a231ecc0fa775980ad7b86e49872feacd4c8f.sol(44)

[33mWarning[0m for UnrestrictedWrite in contract 'LuckyBucks':
    |        if (!listOfManagers[_manager]) {
    |            require(_manager != address(0), "");
  > |            listOfManagers[_manager] = true;
    |            success = true;
    |        }
  at /unique_chucks/11/0xed5a231ecc0fa775980ad7b86e49872feacd4c8f.sol(60)

[33mWarning[0m for UnrestrictedWrite in contract 'LuckyBucks':
    |    function removeManager(address _manager) public onlyOwner returns (bool success) {
    |        if (listOfManagers[_manager]) {
  > |            listOfManagers[_manager] = false;
    |            success = true;
    |        }
  at /unique_chucks/11/0xed5a231ecc0fa775980ad7b86e49872feacd4c8f.sol(67)

[31mViolation[0m for MissingInputValidation in contract 'Manageable':
    |     * @param newOwner The address to transfer ownership to.
    |     */
  > |    function transferOwnership(address newOwner) onlyOwner public {
    |        pendingOwner = newOwner;
    |    }
  at /unique_chucks/11/0xed5a231ecc0fa775980ad7b86e49872feacd4c8f.sol(34)

[31mViolation[0m for MissingInputValidation in contract 'Manageable':
    |
    |contract Manageable is Ownable {
  > |    mapping(address => bool) public listOfManagers;
    |
    |    modifier onlyManager() {
  at /unique_chucks/11/0xed5a231ecc0fa775980ad7b86e49872feacd4c8f.sol(50)

[31mViolation[0m for MissingInputValidation in contract 'Manageable':
    |    }
    |
  > |    function getInfo(address _manager) public view returns (bool) {
    |        return listOfManagers[_manager];
    |    }
  at /unique_chucks/11/0xed5a231ecc0fa775980ad7b86e49872feacd4c8f.sol(72)

[33mWarning[0m for MissingInputValidation in contract 'Manageable':
    |    }
    |
  > |    function addManager(address _manager) public onlyOwner returns (bool success) {
    |        if (!listOfManagers[_manager]) {
    |            require(_manager != address(0), "");
  at /unique_chucks/11/0xed5a231ecc0fa775980ad7b86e49872feacd4c8f.sol(57)

[33mWarning[0m for MissingInputValidation in contract 'Manageable':
    |    }
    |
  > |    function removeManager(address _manager) public onlyOwner returns (bool success) {
    |        if (listOfManagers[_manager]) {
    |            listOfManagers[_manager] = false;
  at /unique_chucks/11/0xed5a231ecc0fa775980ad7b86e49872feacd4c8f.sol(65)

[33mWarning[0m for UnrestrictedWrite in contract 'Manageable':
    |     */
    |    function transferOwnership(address newOwner) onlyOwner public {
  > |        pendingOwner = newOwner;
    |    }
    |
  at /unique_chucks/11/0xed5a231ecc0fa775980ad7b86e49872feacd4c8f.sol(35)

[33mWarning[0m for UnrestrictedWrite in contract 'Manageable':
    |    function claimOwnership() onlyPendingOwner public {
    |        emit OwnershipTransferred(owner, pendingOwner);
  > |        owner = pendingOwner;
    |        pendingOwner = address(0);
    |    }
  at /unique_chucks/11/0xed5a231ecc0fa775980ad7b86e49872feacd4c8f.sol(43)

[33mWarning[0m for UnrestrictedWrite in contract 'Manageable':
    |        emit OwnershipTransferred(owner, pendingOwner);
    |        owner = pendingOwner;
  > |        pendingOwner = address(0);
    |    }
    |}
  at /unique_chucks/11/0xed5a231ecc0fa775980ad7b86e49872feacd4c8f.sol(44)

[33mWarning[0m for UnrestrictedWrite in contract 'Manageable':
    |        if (!listOfManagers[_manager]) {
    |            require(_manager != address(0), "");
  > |            listOfManagers[_manager] = true;
    |            success = true;
    |        }
  at /unique_chucks/11/0xed5a231ecc0fa775980ad7b86e49872feacd4c8f.sol(60)

[33mWarning[0m for UnrestrictedWrite in contract 'Manageable':
    |    function removeManager(address _manager) public onlyOwner returns (bool success) {
    |        if (listOfManagers[_manager]) {
  > |            listOfManagers[_manager] = false;
    |            success = true;
    |        }
  at /unique_chucks/11/0xed5a231ecc0fa775980ad7b86e49872feacd4c8f.sol(67)

[31mViolation[0m for MissingInputValidation in contract 'Ownable':
    |     * @param newOwner The address to transfer ownership to.
    |     */
  > |    function transferOwnership(address newOwner) onlyOwner public {
    |        pendingOwner = newOwner;
    |    }
  at /unique_chucks/11/0xed5a231ecc0fa775980ad7b86e49872feacd4c8f.sol(34)

[33mWarning[0m for UnrestrictedWrite in contract 'Ownable':
    |     */
    |    function transferOwnership(address newOwner) onlyOwner public {
  > |        pendingOwner = newOwner;
    |    }
    |
  at /unique_chucks/11/0xed5a231ecc0fa775980ad7b86e49872feacd4c8f.sol(35)

[33mWarning[0m for UnrestrictedWrite in contract 'Ownable':
    |    function claimOwnership() onlyPendingOwner public {
    |        emit OwnershipTransferred(owner, pendingOwner);
  > |        owner = pendingOwner;
    |        pendingOwner = address(0);
    |    }
  at /unique_chucks/11/0xed5a231ecc0fa775980ad7b86e49872feacd4c8f.sol(43)

[33mWarning[0m for UnrestrictedWrite in contract 'Ownable':
    |        emit OwnershipTransferred(owner, pendingOwner);
    |        owner = pendingOwner;
  > |        pendingOwner = address(0);
    |    }
    |}
  at /unique_chucks/11/0xed5a231ecc0fa775980ad7b86e49872feacd4c8f.sol(44)