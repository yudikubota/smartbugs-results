Processing contract: /unique_contracts/0x0a61617e61cdf8cd1bad0d3edfe6e7cb586fe0de.sol:ArbiterRole
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0x0a61617e61cdf8cd1bad0d3edfe6e7cb586fe0de.sol:ArbitersPool
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0x0a61617e61cdf8cd1bad0d3edfe6e7cb586fe0de.sol:BackEndRole
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0x0a61617e61cdf8cd1bad0d3edfe6e7cb586fe0de.sol:Cluster
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0x0a61617e61cdf8cd1bad0d3edfe6e7cb586fe0de.sol:ClusterRole
Processing contract: /unique_contracts/0x0a61617e61cdf8cd1bad0d3edfe6e7cb586fe0de.sol:Crowdsale
Processing contract: /unique_contracts/0x0a61617e61cdf8cd1bad0d3edfe6e7cb586fe0de.sol:CrowdsaleDeployer
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0x0a61617e61cdf8cd1bad0d3edfe6e7cb586fe0de.sol:IArbitersPool
Processing contract: /unique_contracts/0x0a61617e61cdf8cd1bad0d3edfe6e7cb586fe0de.sol:ICluster
Processing contract: /unique_contracts/0x0a61617e61cdf8cd1bad0d3edfe6e7cb586fe0de.sol:IERC20
Processing contract: /unique_contracts/0x0a61617e61cdf8cd1bad0d3edfe6e7cb586fe0de.sol:IRICO
Processing contract: /unique_contracts/0x0a61617e61cdf8cd1bad0d3edfe6e7cb586fe0de.sol:OperatorRole
Processing contract: /unique_contracts/0x0a61617e61cdf8cd1bad0d3edfe6e7cb586fe0de.sol:Ownable
Processing contract: /unique_contracts/0x0a61617e61cdf8cd1bad0d3edfe6e7cb586fe0de.sol:ReentrancyGuard
Processing contract: /unique_contracts/0x0a61617e61cdf8cd1bad0d3edfe6e7cb586fe0de.sol:ResponsibleCrowdsale
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
java.io.IOException: Timeout for /tmp/binaries_souffle2360844790831504582/mustExplicit -j 1 -F /tmp/souffle-0a0233fa-b2bd-41d3-a891-c3d492b4450a -D /tmp/souffle-0a0233fa-b2bd-41d3-a891-c3d492b4450a_OUT
	at ch.securify.analysis.AbstractDataflow.runCommand(AbstractDataflow.java:277)
	at ch.securify.analysis.AbstractDataflow.initDataflow(AbstractDataflow.java:169)
	at ch.securify.analysis.MustExplicitDataflow.<init>(MustExplicitDataflow.java:33)
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:33)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error in Securify
java.lang.RuntimeException
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:37)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error, skipping: /unique_contracts/0x0a61617e61cdf8cd1bad0d3edfe6e7cb586fe0de.sol:ResponsibleCrowdsale
Processing contract: /unique_contracts/0x0a61617e61cdf8cd1bad0d3edfe6e7cb586fe0de.sol:Roles
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0x0a61617e61cdf8cd1bad0d3edfe6e7cb586fe0de.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0x0a61617e61cdf8cd1bad0d3edfe6e7cb586fe0de.sol:TimedCrowdsale
[33mWarning[0m for UnrestrictedWrite in contract 'ArbiterRole':
    |        require(!has(role, account));
    |
  > |        role.bearer[account] = true;
    |    }
    |
  at /unique_contracts/0x0a61617e61cdf8cd1bad0d3edfe6e7cb586fe0de.sol(1059)

[33mWarning[0m for UnrestrictedWrite in contract 'ArbiterRole':
    |        require(has(role, account));
    |
  > |        role.bearer[account] = false;
    |    }
    |
  at /unique_contracts/0x0a61617e61cdf8cd1bad0d3edfe6e7cb586fe0de.sol(1069)

[33mWarning[0m for UnrestrictedWrite in contract 'ArbiterRole':
    |    function addArbiter(address arbiter) public onlyCluster {
    |        _addArbiter(arbiter);
  > |        _arbitersAmount++;
    |    }
    |
  at /unique_contracts/0x0a61617e61cdf8cd1bad0d3edfe6e7cb586fe0de.sol(1105)

[33mWarning[0m for UnrestrictedWrite in contract 'ArbiterRole':
    |    function removeArbiter(address arbiter) public onlyCluster {
    |        _removeArbiter(arbiter);
  > |        _arbitersAmount--;
    |    }
    |
  at /unique_contracts/0x0a61617e61cdf8cd1bad0d3edfe6e7cb586fe0de.sol(1110)

[31mViolation[0m for LockedEther in contract 'ArbitersPool':
    |// File: contracts/ArbitersPool.sol
    |
  > |contract ArbitersPool is ArbiterRole {
    |    uint256 private _disputsAmount;
    |    uint256 private constant _necessaryVoices = 3;
  at /unique_contracts/0x0a61617e61cdf8cd1bad0d3edfe6e7cb586fe0de.sol(1148)

[31mViolation[0m for UnrestrictedWrite in contract 'ArbitersPool':
    |pragma solidity 0.5.0;
    |
  > |// ---------------------------------------------------------------------------
    |// RICO
    |// ---------------------------------------------------------------------------
  at /unique_contracts/0x0a61617e61cdf8cd1bad0d3edfe6e7cb586fe0de.sol(3)

[31mViolation[0m for UnrestrictedWrite in contract 'ArbitersPool':
    |// File: contracts/ArbitersPool.sol
    |
  > |contract ArbitersPool is ArbiterRole {
    |    uint256 private _disputsAmount;
    |    uint256 private constant _necessaryVoices = 3;
  at /unique_contracts/0x0a61617e61cdf8cd1bad0d3edfe6e7cb586fe0de.sol(1148)

[31mViolation[0m for UnrestrictedWrite in contract 'ArbitersPool':
    |        _disputsAmount++;
    |
  > |        _disputesById[thisDisputeId] = dispute;
    |        _disputesByMilestone[milestoneHash].push(thisDisputeId);
    |
  at /unique_contracts/0x0a61617e61cdf8cd1bad0d3edfe6e7cb586fe0de.sol(1197)

[33mWarning[0m for UnrestrictedWrite in contract 'ArbitersPool':
    |
    |        _disputesById[thisDisputeId] = dispute;
  > |        _disputesByMilestone[milestoneHash].push(thisDisputeId);
    |
    |        emit NewDisputeCreated(thisDisputeId, crowdsale, milestoneHash, investor);
  at /unique_contracts/0x0a61617e61cdf8cd1bad0d3edfe6e7cb586fe0de.sol(1198)

[33mWarning[0m for UnrestrictedWrite in contract 'ArbitersPool':
    |    function addArbiter(address arbiter) public onlyCluster {
    |        _addArbiter(arbiter);
  > |        _arbitersAmount++;
    |    }
    |
  at /unique_contracts/0x0a61617e61cdf8cd1bad0d3edfe6e7cb586fe0de.sol(1105)

[33mWarning[0m for UnrestrictedWrite in contract 'ArbitersPool':
    |    function removeArbiter(address arbiter) public onlyCluster {
    |        _removeArbiter(arbiter);
  > |        _arbitersAmount--;
    |    }
    |
  at /unique_contracts/0x0a61617e61cdf8cd1bad0d3edfe6e7cb586fe0de.sol(1110)

[33mWarning[0m for UnrestrictedWrite in contract 'ArbitersPool':
    |// File: contracts/ArbitersPool.sol
    |
  > |contract ArbitersPool is ArbiterRole {
    |    uint256 private _disputsAmount;
    |    uint256 private constant _necessaryVoices = 3;
  at /unique_contracts/0x0a61617e61cdf8cd1bad0d3edfe6e7cb586fe0de.sol(1148)

[33mWarning[0m for UnrestrictedWrite in contract 'ArbitersPool':
    |
    |        uint256 thisDisputeId = _disputsAmount;
  > |        _disputsAmount++;
    |
    |        _disputesById[thisDisputeId] = dispute;
  at /unique_contracts/0x0a61617e61cdf8cd1bad0d3edfe6e7cb586fe0de.sol(1195)

[33mWarning[0m for UnrestrictedWrite in contract 'ArbitersPool':
    |        _disputsAmount++;
    |
  > |        _disputesById[thisDisputeId] = dispute;
    |        _disputesByMilestone[milestoneHash].push(thisDisputeId);
    |
  at /unique_contracts/0x0a61617e61cdf8cd1bad0d3edfe6e7cb586fe0de.sol(1197)

[33mWarning[0m for UnrestrictedWrite in contract 'BackEndRole':
    |        require(!has(role, account));
    |
  > |        role.bearer[account] = true;
    |    }
    |
  at /unique_contracts/0x0a61617e61cdf8cd1bad0d3edfe6e7cb586fe0de.sol(1059)

[33mWarning[0m for UnrestrictedWrite in contract 'BackEndRole':
    |        require(has(role, account));
    |
  > |        role.bearer[account] = false;
    |    }
    |
  at /unique_contracts/0x0a61617e61cdf8cd1bad0d3edfe6e7cb586fe0de.sol(1069)

[33mWarning[0m for UnrestrictedWrite in contract 'BackEndRole':
    |        require(newOwner != address(0), "_transferOwnership: the address of new operator is not valid.");
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_contracts/0x0a61617e61cdf8cd1bad0d3edfe6e7cb586fe0de.sol(1409)

[31mViolation[0m for TODAmount in contract 'Cluster':
    |
    |    function withdrawEth() external onlyOwner {
  > |        owner().transfer(address(this).balance);
    |    }
    |
  at /unique_contracts/0x0a61617e61cdf8cd1bad0d3edfe6e7cb586fe0de.sol(1495)

[31mViolation[0m for TODReceiver in contract 'Cluster':
    |
    |    function withdrawEth() external onlyOwner {
  > |        owner().transfer(address(this).balance);
    |    }
    |
  at /unique_contracts/0x0a61617e61cdf8cd1bad0d3edfe6e7cb586fe0de.sol(1495)

[33mWarning[0m for UnrestrictedWrite in contract 'Cluster':
    |pragma solidity 0.5.0;
    |
  > |// ---------------------------------------------------------------------------
    |// RICO
    |// ---------------------------------------------------------------------------
  at /unique_contracts/0x0a61617e61cdf8cd1bad0d3edfe6e7cb586fe0de.sol(3)

[33mWarning[0m for UnrestrictedWrite in contract 'Cluster':
    |        require(newOwner != address(0), "_transferOwnership: the address of new operator is not valid.");
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_contracts/0x0a61617e61cdf8cd1bad0d3edfe6e7cb586fe0de.sol(1409)

[33mWarning[0m for UnrestrictedWrite in contract 'Cluster':
    |
    |        // Updating the state
  > |        _crowdsales.push(crowdsale);
    |        _operatorsContracts[operator].push(crowdsale);
    |
  at /unique_contracts/0x0a61617e61cdf8cd1bad0d3edfe6e7cb586fe0de.sol(1541)

[33mWarning[0m for UnrestrictedWrite in contract 'Cluster':
    |        // Updating the state
    |        _crowdsales.push(crowdsale);
  > |        _operatorsContracts[operator].push(crowdsale);
    |
    |        emit CrowdsaleCreated(
  at /unique_contracts/0x0a61617e61cdf8cd1bad0d3edfe6e7cb586fe0de.sol(1542)

[31mViolation[0m for LockedEther in contract 'CrowdsaleDeployer':
    |// File: contracts/deployers/CrowdsaleDeployer.sol
    |
  > |library CrowdsaleDeployer {
    |    function addCrowdsale(
    |        uint256 rate,
  at /unique_contracts/0x0a61617e61cdf8cd1bad0d3edfe6e7cb586fe0de.sol(1025)

[31mViolation[0m for MissingInputValidation in contract 'CrowdsaleDeployer':
    |
    |library CrowdsaleDeployer {
  > |    function addCrowdsale(
    |        uint256 rate,
    |        address token,
  at /unique_contracts/0x0a61617e61cdf8cd1bad0d3edfe6e7cb586fe0de.sol(1026)