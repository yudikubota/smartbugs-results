Processing contract: /unique_chucks/37/0x7ce662974fbb9b590c60dbf99f078120405ff0b9.sol:bulkSender
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/37/0x7ce662974fbb9b590c60dbf99f078120405ff0b9.sol:erc20
[31mViolation[0m for MissingInputValidation in contract 'bulkSender':
    |    }
    |    
  > |    function authoriseUser(address user) public onlyAuthorised {
    |        authorised[user] = true;
    |    }
  at /unique_chucks/37/0x7ce662974fbb9b590c60dbf99f078120405ff0b9.sol(27)

[33mWarning[0m for MissingInputValidation in contract 'bulkSender':
    |    }
    |
  > |    function sendTokens(erc20 token, address[] calldata _recipients, uint256[] calldata _values) external onlyAuthorised {
    |        require(_recipients.length == _values.length,"number of recipients <> number of values");
    |        for (uint i = 0; i < _values.length; i++) {
  at /unique_chucks/37/0x7ce662974fbb9b590c60dbf99f078120405ff0b9.sol(31)

[31mViolation[0m for RepeatedCall in contract 'bulkSender':
    |        require(_recipients.length == _values.length,"number of recipients <> number of values");
    |        for (uint i = 0; i < _values.length; i++) {
  > |            if (token.transferFrom(msg.sender,_recipients[i],_values[i])) {
    |                emit TokensSent(token,_recipients[i], _values[i]);
    |            } else {
  at /unique_chucks/37/0x7ce662974fbb9b590c60dbf99f078120405ff0b9.sol(34)

[31mViolation[0m for UnrestrictedWrite in contract 'bulkSender':
    |    
    |    function authoriseUser(address user) public onlyAuthorised {
  > |        authorised[user] = true;
    |    }
    |
  at /unique_chucks/37/0x7ce662974fbb9b590c60dbf99f078120405ff0b9.sol(28)