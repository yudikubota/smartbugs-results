Processing contract: /unique_chucks/26/0xba680d7436bbbf5655f7eed4641bec306d555cff.sol:Address
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/26/0xba680d7436bbbf5655f7eed4641bec306d555cff.sol:ISecure
Processing contract: /unique_chucks/26/0xba680d7436bbbf5655f7eed4641bec306d555cff.sol:Ownable
Processing contract: /unique_chucks/26/0xba680d7436bbbf5655f7eed4641bec306d555cff.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/26/0xba680d7436bbbf5655f7eed4641bec306d555cff.sol:SmartLotteryGame
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/26/0xba680d7436bbbf5655f7eed4641bec306d555cff.sol:Wallet
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for LockedEther in contract 'SafeMath':
    | * @dev Unsigned math operations with safety checks that revert on error
    | */
  > |library SafeMath {
    |    function mul(uint256 a, uint256 b) external pure returns (uint256) {
    |        if (a == 0) {
  at /unique_chucks/26/0xba680d7436bbbf5655f7eed4641bec306d555cff.sol(31)

[31mViolation[0m for RepeatedCall in contract 'SmartLotteryGame':
    |    function _raiseFunds() internal returns (uint256) {
    |        _fund = _fund.add(wallet_0.finishDay());
  > |        _fund = _fund.add(wallet_1.finishDay());
    |        return _fund.add(wallet_2.finishDay());
    |    }
  at /unique_chucks/26/0xba680d7436bbbf5655f7eed4641bec306d555cff.sol(288)

[31mViolation[0m for RepeatedCall in contract 'SmartLotteryGame':
    |        _fund = _fund.add(wallet_0.finishDay());
    |        _fund = _fund.add(wallet_1.finishDay());
  > |        return _fund.add(wallet_2.finishDay());
    |    }
    |
  at /unique_chucks/26/0xba680d7436bbbf5655f7eed4641bec306d555cff.sol(289)

[31mViolation[0m for RepeatedCall in contract 'SmartLotteryGame':
    |        uint8 winner;
    |        for(uint8 i=0; i<3; i++) {
  > |            if(wallets[i].totalPlayers() > 0) {
    |                _particWallets.push(i);
    |            }
  at /unique_chucks/26/0xba680d7436bbbf5655f7eed4641bec306d555cff.sol(295)

[31mViolation[0m for RepeatedCall in contract 'SmartLotteryGame':
    |
    |        for (uint8 i = 1; i <= _tp; i++) {
  > |            (p.wallet, p.balance) = wallets[_winner].bets(i);
    |            percents = (p.balance)
    |            .mul(10000)
  at /unique_chucks/26/0xba680d7436bbbf5655f7eed4641bec306d555cff.sol(323)

[31mViolation[0m for RepeatedCall in contract 'SmartLotteryGame':
    |            percents = (p.balance)
    |            .mul(10000)
  > |            .div(wallets[_winner].totalBets());
    |            onDeposit = _totalBetsWithoutCommission
    |            .mul(percents)
  at /unique_chucks/26/0xba680d7436bbbf5655f7eed4641bec306d555cff.sol(326)

[31mViolation[0m for RepeatedCall in contract 'SmartLotteryGame':
    |    function _closeWallets() internal returns (bool) {
    |        wallets[0].closeContract();
  > |        wallets[1].closeContract();
    |        return wallets[2].closeContract();
    |    }
  at /unique_chucks/26/0xba680d7436bbbf5655f7eed4641bec306d555cff.sol(369)

[31mViolation[0m for RepeatedCall in contract 'SmartLotteryGame':
    |        wallets[0].closeContract();
    |        wallets[1].closeContract();
  > |        return wallets[2].closeContract();
    |    }
    |
  at /unique_chucks/26/0xba680d7436bbbf5655f7eed4641bec306d555cff.sol(370)

[31mViolation[0m for RepeatedCall in contract 'SmartLotteryGame':
    |    function _totalPlayers() internal view returns(uint) {
    |        return wallets[0].totalPlayers()
  > |        .add(wallets[1].totalPlayers())
    |        .add(wallets[2].totalPlayers());
    |    }
  at /unique_chucks/26/0xba680d7436bbbf5655f7eed4641bec306d555cff.sol(388)

[31mViolation[0m for RepeatedCall in contract 'SmartLotteryGame':
    |        return wallets[0].totalPlayers()
    |        .add(wallets[1].totalPlayers())
  > |        .add(wallets[2].totalPlayers());
    |    }
    |
  at /unique_chucks/26/0xba680d7436bbbf5655f7eed4641bec306d555cff.sol(389)

[33mWarning[0m for TODAmount in contract 'SmartLotteryGame':
    |        uint256 payment = _deposits[msg.sender];
    |        _deposits[msg.sender] = 0;
  > |        msg.sender.transfer(payment);
    |        emit Withdrawn(msg.sender, payment);
    |    }
  at /unique_chucks/26/0xba680d7436bbbf5655f7eed4641bec306d555cff.sol(448)

[31mViolation[0m for UnrestrictedWrite in contract 'SmartLotteryGame':
    |pragma solidity ^0.5.7;
    |/**
  > |    INSTRUCTION:
    |    Send more then or equal to [minPayment] or 0.01 ETH to one of Wallet Contract address
    |    [wallet_0, wallet_1, wallet_2], after round end send to This contract 0 ETH
  at /unique_chucks/26/0xba680d7436bbbf5655f7eed4641bec306d555cff.sol(3)

[31mViolation[0m for UnrestrictedWrite in contract 'SmartLotteryGame':
    |}
    |
  > |contract SmartLotteryGame is Ownable {
    |    using SafeMath for *;
    |
  at /unique_chucks/26/0xba680d7436bbbf5655f7eed4641bec306d555cff.sol(214)

[31mViolation[0m for UnrestrictedWrite in contract 'SmartLotteryGame':
    |
    |    function _deposit(address payee, uint256 amount) internal {
  > |        _deposits[payee] = _deposits[payee].add(amount);
    |        emit Deposited(payee, amount);
    |    }
  at /unique_chucks/26/0xba680d7436bbbf5655f7eed4641bec306d555cff.sol(282)

[31mViolation[0m for UnrestrictedWrite in contract 'SmartLotteryGame':
    |        for(uint8 i=0; i<3; i++) {
    |            if(wallets[i].totalPlayers() > 0) {
  > |                _particWallets.push(i);
    |            }
    |        }
  at /unique_chucks/26/0xba680d7436bbbf5655f7eed4641bec306d555cff.sol(296)

[31mViolation[0m for UnrestrictedWrite in contract 'SmartLotteryGame':
    |            ));
    |
  > |        _winner = _particWallets[winner];
    |    }
    |
  at /unique_chucks/26/0xba680d7436bbbf5655f7eed4641bec306d555cff.sol(308)

[31mViolation[0m for UnrestrictedWrite in contract 'SmartLotteryGame':
    |        bet memory p;
    |
  > |        _tp = wallets[_winner].totalPlayers();
    |        uint256 accommulDeposit = 0;
    |        uint256 percents = 0;
  at /unique_chucks/26/0xba680d7436bbbf5655f7eed4641bec306d555cff.sol(314)

[31mViolation[0m for UnrestrictedWrite in contract 'SmartLotteryGame':
    |        uint256 onDeposit = 0;
    |
  > |        _commission = _fund.mul(15).div(100);
    |        _totalBetsWithoutCommission = _fund.sub(_commission);
    |
  at /unique_chucks/26/0xba680d7436bbbf5655f7eed4641bec306d555cff.sol(319)

[31mViolation[0m for UnrestrictedWrite in contract 'SmartLotteryGame':
    |
    |        _commission = _fund.mul(15).div(100);
  > |        _totalBetsWithoutCommission = _fund.sub(_commission);
    |
    |        for (uint8 i = 1; i <= _tp; i++) {
  at /unique_chucks/26/0xba680d7436bbbf5655f7eed4641bec306d555cff.sol(320)

[31mViolation[0m for UnrestrictedWrite in contract 'SmartLotteryGame':
    |
    |    function _cleanState() internal {
  > |        _fund = 0;
    |        _particWallets = new uint8[](0);
    |    }
  at /unique_chucks/26/0xba680d7436bbbf5655f7eed4641bec306d555cff.sol(337)

[31mViolation[0m for UnrestrictedWrite in contract 'SmartLotteryGame':
    |
    |    function _log(address winner, uint256 fund) internal {
  > |        gamesLog[games].winner = winner;
    |        gamesLog[games].time = now;
    |        gamesLog[games].w0 = address(wallet_0);
  at /unique_chucks/26/0xba680d7436bbbf5655f7eed4641bec306d555cff.sol(342)

[31mViolation[0m for UnrestrictedWrite in contract 'SmartLotteryGame':
    |    function _log(address winner, uint256 fund) internal {
    |        gamesLog[games].winner = winner;
  > |        gamesLog[games].time = now;
    |        gamesLog[games].w0 = address(wallet_0);
    |        gamesLog[games].w1 = address(wallet_1);
  at /unique_chucks/26/0xba680d7436bbbf5655f7eed4641bec306d555cff.sol(343)

[31mViolation[0m for UnrestrictedWrite in contract 'SmartLotteryGame':
    |        gamesLog[games].winner = winner;
    |        gamesLog[games].time = now;
  > |        gamesLog[games].w0 = address(wallet_0);
    |        gamesLog[games].w1 = address(wallet_1);
    |        gamesLog[games].w2 = address(wallet_2);
  at /unique_chucks/26/0xba680d7436bbbf5655f7eed4641bec306d555cff.sol(344)

[31mViolation[0m for UnrestrictedWrite in contract 'SmartLotteryGame':
    |        gamesLog[games].time = now;
    |        gamesLog[games].w0 = address(wallet_0);
  > |        gamesLog[games].w1 = address(wallet_1);
    |        gamesLog[games].w2 = address(wallet_2);
    |        emit WinnerWallet(winner, fund);
  at /unique_chucks/26/0xba680d7436bbbf5655f7eed4641bec306d555cff.sol(345)

[31mViolation[0m for UnrestrictedWrite in contract 'SmartLotteryGame':
    |        gamesLog[games].w0 = address(wallet_0);
    |        gamesLog[games].w1 = address(wallet_1);
  > |        gamesLog[games].w2 = address(wallet_2);
    |        emit WinnerWallet(winner, fund);
    |    }
  at /unique_chucks/26/0xba680d7436bbbf5655f7eed4641bec306d555cff.sol(346)

[31mViolation[0m for UnrestrictedWrite in contract 'SmartLotteryGame':
    |
    |    function _issueWallets() internal returns (bool) {
  > |        wallets[0] = wallet_0 = new Wallet(games, minPayment);
    |        wallets[1] = wallet_1 = new Wallet(games, minPayment);
    |        wallets[2] = wallet_2 = new Wallet(games, minPayment);
  at /unique_chucks/26/0xba680d7436bbbf5655f7eed4641bec306d555cff.sol(374)

[31mViolation[0m for UnrestrictedWrite in contract 'SmartLotteryGame':
    |    function _issueWallets() internal returns (bool) {
    |        wallets[0] = wallet_0 = new Wallet(games, minPayment);
  > |        wallets[1] = wallet_1 = new Wallet(games, minPayment);
    |        wallets[2] = wallet_2 = new Wallet(games, minPayment);
    |        return true;
  at /unique_chucks/26/0xba680d7436bbbf5655f7eed4641bec306d555cff.sol(375)

[31mViolation[0m for UnrestrictedWrite in contract 'SmartLotteryGame':
    |        wallets[0] = wallet_0 = new Wallet(games, minPayment);
    |        wallets[1] = wallet_1 = new Wallet(games, minPayment);
  > |        wallets[2] = wallet_2 = new Wallet(games, minPayment);
    |        return true;
    |    }
  at /unique_chucks/26/0xba680d7436bbbf5655f7eed4641bec306d555cff.sol(376)

[31mViolation[0m for UnrestrictedWrite in contract 'SmartLotteryGame':
    |                _cleanState();
    |                // update round
  > |                finishTime = now.add(roundDuration);
    |                // set next game
    |                games = games.add(1);
  at /unique_chucks/26/0xba680d7436bbbf5655f7eed4641bec306d555cff.sol(427)

[31mViolation[0m for UnrestrictedWrite in contract 'SmartLotteryGame':
    |                finishTime = now.add(roundDuration);
    |                // set next game
  > |                games = games.add(1);
    |                // issue new wallets
    |                return _switchWallets();
  at /unique_chucks/26/0xba680d7436bbbf5655f7eed4641bec306d555cff.sol(429)

[33mWarning[0m for UnrestrictedWrite in contract 'SmartLotteryGame':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipTransferred(_owner, address(0));
  > |        _owner = address(0);
    |    }
    |
  at /unique_chucks/26/0xba680d7436bbbf5655f7eed4641bec306d555cff.sol(107)

[33mWarning[0m for UnrestrictedWrite in contract 'SmartLotteryGame':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_chucks/26/0xba680d7436bbbf5655f7eed4641bec306d555cff.sol(117)

[33mWarning[0m for UnrestrictedWrite in contract 'SmartLotteryGame':
    |
    |    function _raiseFunds() internal returns (uint256) {
  > |        _fund = _fund.add(wallet_0.finishDay());
    |        _fund = _fund.add(wallet_1.finishDay());
    |        return _fund.add(wallet_2.finishDay());
  at /unique_chucks/26/0xba680d7436bbbf5655f7eed4641bec306d555cff.sol(287)

[33mWarning[0m for UnrestrictedWrite in contract 'SmartLotteryGame':
    |    function _raiseFunds() internal returns (uint256) {
    |        _fund = _fund.add(wallet_0.finishDay());
  > |        _fund = _fund.add(wallet_1.finishDay());
    |        return _fund.add(wallet_2.finishDay());
    |    }
  at /unique_chucks/26/0xba680d7436bbbf5655f7eed4641bec306d555cff.sol(288)

[33mWarning[0m for UnrestrictedWrite in contract 'SmartLotteryGame':
    |    isReady
    |    {
  > |        _nonceId = _nonceId.add(1);
    |        _tp = _totalPlayers();
    |
  at /unique_chucks/26/0xba680d7436bbbf5655f7eed4641bec306d555cff.sol(405)

[33mWarning[0m for UnrestrictedWrite in contract 'SmartLotteryGame':
    |    {
    |        _nonceId = _nonceId.add(1);
  > |        _tp = _totalPlayers();
    |
    |        if (now >= finishTime && 1 == _tp) {
  at /unique_chucks/26/0xba680d7436bbbf5655f7eed4641bec306d555cff.sol(406)

[33mWarning[0m for UnrestrictedWrite in contract 'SmartLotteryGame':
    |
    |        if (now >= finishTime && 1 == _tp) {
  > |            finishTime = now.add(roundDuration);
    |            return;
    |        }
  at /unique_chucks/26/0xba680d7436bbbf5655f7eed4641bec306d555cff.sol(409)

[33mWarning[0m for UnrestrictedWrite in contract 'SmartLotteryGame':
    |        if (now >= finishTime || _tp >= _maxPlayers) {
    |            // send all funds to this wallet
  > |            _fund = _raiseFunds();
    |            // if it has participators
    |            if(_fund > 0) {
  at /unique_chucks/26/0xba680d7436bbbf5655f7eed4641bec306d555cff.sol(415)

[33mWarning[0m for UnrestrictedWrite in contract 'SmartLotteryGame':
    |
    |    function setMinPayment(uint256 _value) public onlyOwner {
  > |        minPayment = _value;
    |    }
    |
  at /unique_chucks/26/0xba680d7436bbbf5655f7eed4641bec306d555cff.sol(437)

[33mWarning[0m for UnrestrictedWrite in contract 'SmartLotteryGame':
    |
    |    function setSecure(address _address) public onlyOwner returns (bool) {
  > |        secure = _address;
    |        return true;
    |    }
  at /unique_chucks/26/0xba680d7436bbbf5655f7eed4641bec306d555cff.sol(441)

[31mViolation[0m for TODAmount in contract 'Wallet':
    |        uint256 balance = address(this).balance;
    |        if (balance >= minPaymnent) {
  > |            slg.getFunds.value(balance)();
    |            return balance;
    |        } else {
  at /unique_chucks/26/0xba680d7436bbbf5655f7eed4641bec306d555cff.sol(182)

[33mWarning[0m for UnrestrictedWrite in contract 'Wallet':
    |
    |    function closeContract() external onlyCreator returns(bool) {
  > |        return closedOut = true;
    |    }
    |
  at /unique_chucks/26/0xba680d7436bbbf5655f7eed4641bec306d555cff.sol(190)

[33mWarning[0m for UnrestrictedWrite in contract 'Wallet':
    |    internal
    |    returns(bool) {
  > |        bets[_id].wallet = _player;
    |        bets[_id].balance = _amount;
    |        return true;
  at /unique_chucks/26/0xba680d7436bbbf5655f7eed4641bec306d555cff.sol(196)

[33mWarning[0m for UnrestrictedWrite in contract 'Wallet':
    |    returns(bool) {
    |        bets[_id].wallet = _player;
  > |        bets[_id].balance = _amount;
    |        return true;
    |    }
  at /unique_chucks/26/0xba680d7436bbbf5655f7eed4641bec306d555cff.sol(197)

[33mWarning[0m for UnrestrictedWrite in contract 'Wallet':
    |    isClosedOut
    |    external {
  > |        _totalRised = _totalRised.add(msg.value);
    |        _players = uint8((_players).add(1));
    |        addPlayer(_players, msg.sender, msg.value);
  at /unique_chucks/26/0xba680d7436bbbf5655f7eed4641bec306d555cff.sol(207)

[33mWarning[0m for UnrestrictedWrite in contract 'Wallet':
    |    external {
    |        _totalRised = _totalRised.add(msg.value);
  > |        _players = uint8((_players).add(1));
    |        addPlayer(_players, msg.sender, msg.value);
    |        slg.participate();
  at /unique_chucks/26/0xba680d7436bbbf5655f7eed4641bec306d555cff.sol(208)