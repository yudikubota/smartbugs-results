Processing contract: /unique_chucks/11/0x68d0657245d7bb542ce8910a49e34d1ad12e792b.sol:ERC20
Processing contract: /unique_chucks/11/0x68d0657245d7bb542ce8910a49e34d1ad12e792b.sol:ERC20Burnable
Processing contract: /unique_chucks/11/0x68d0657245d7bb542ce8910a49e34d1ad12e792b.sol:ERC20Mintable
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/11/0x68d0657245d7bb542ce8910a49e34d1ad12e792b.sol:IERC20
Processing contract: /unique_chucks/11/0x68d0657245d7bb542ce8910a49e34d1ad12e792b.sol:MinterRole
Processing contract: /unique_chucks/11/0x68d0657245d7bb542ce8910a49e34d1ad12e792b.sol:ReentrancyGuard
Processing contract: /unique_chucks/11/0x68d0657245d7bb542ce8910a49e34d1ad12e792b.sol:Reward
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/11/0x68d0657245d7bb542ce8910a49e34d1ad12e792b.sol:Roles
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/11/0x68d0657245d7bb542ce8910a49e34d1ad12e792b.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/11/0x68d0657245d7bb542ce8910a49e34d1ad12e792b.sol:ZOMToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[33mWarning[0m for UnrestrictedWrite in contract 'ERC20Mintable':
    |        require(account != address(0));
    |
  > |        _totalSupply = _totalSupply.add(value);
    |        _balances[account] = _balances[account].add(value);
    |        emit Transfer(address(0), account, value);
  at /unique_chucks/11/0x68d0657245d7bb542ce8910a49e34d1ad12e792b.sol(231)

[31mViolation[0m for RepeatedCall in contract 'Reward':
    |
    |    function _getTokenBalance(address holder) private view returns (uint256) {
  > |        return _token.balanceOf(holder);
    |    }
    |
  at /unique_chucks/11/0x68d0657245d7bb542ce8910a49e34d1ad12e792b.sol(558)

[31mViolation[0m for LockedEther in contract 'ZOMToken':
    | * @title ZOM Token smart contract
    | */
  > |contract ZOMToken is ERC20Mintable, ERC20Burnable {
    |    string private constant _name = "ZOM";
    |    string private constant _symbol = "ZOM";
  at /unique_chucks/11/0x68d0657245d7bb542ce8910a49e34d1ad12e792b.sol(377)

[33mWarning[0m for UnrestrictedWrite in contract 'ZOMToken':
    |        require(account != address(0));
    |
  > |        _totalSupply = _totalSupply.add(value);
    |        _balances[account] = _balances[account].add(value);
    |        emit Transfer(address(0), account, value);
  at /unique_chucks/11/0x68d0657245d7bb542ce8910a49e34d1ad12e792b.sol(231)

[33mWarning[0m for UnrestrictedWrite in contract 'ZOMToken':
    |        require(account != address(0));
    |
  > |        _totalSupply = _totalSupply.sub(value);
    |        _balances[account] = _balances[account].sub(value);
    |        emit Transfer(account, address(0), value);
  at /unique_chucks/11/0x68d0657245d7bb542ce8910a49e34d1ad12e792b.sol(245)