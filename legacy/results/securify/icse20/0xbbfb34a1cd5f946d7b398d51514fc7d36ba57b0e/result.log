Processing contract: /unique_chucks/42/0xbbfb34a1cd5f946d7b398d51514fc7d36ba57b0e.sol:ERC20Transfer
Processing contract: /unique_chucks/42/0xbbfb34a1cd5f946d7b398d51514fc7d36ba57b0e.sol:TransferValue
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[33mWarning[0m for LockedEther in contract 'TransferValue':
    |
    |
  > |contract TransferValue {
    |    modifier notZero (uint256 value) {
    |        require(value != 0, "no value can be zero");
  at /unique_chucks/42/0xbbfb34a1cd5f946d7b398d51514fc7d36ba57b0e.sol(12)

[33mWarning[0m for MissingInputValidation in contract 'TransferValue':
    |    }
    |
  > |    function transferETH (
    |        address payable[] calldata accounts
    |      ) external payable
  at /unique_chucks/42/0xbbfb34a1cd5f946d7b398d51514fc7d36ba57b0e.sol(18)

[33mWarning[0m for MissingInputValidation in contract 'TransferValue':
    |    }
    |
  > |    function transferToken(
    |        address token,
    |        address[] calldata accounts,
  at /unique_chucks/42/0xbbfb34a1cd5f946d7b398d51514fc7d36ba57b0e.sol(40)

[31mViolation[0m for RepeatedCall in contract 'TransferValue':
    |
    |        for (uint i = 0; i < arrayLength; ++i ) {
  > |            tokenContract.transferFrom(msg.sender, accounts[i], amountPerAccount);
    |        }
    |
  at /unique_chucks/42/0xbbfb34a1cd5f946d7b398d51514fc7d36ba57b0e.sol(57)

[33mWarning[0m for TODAmount in contract 'TransferValue':
    |
    |        for (uint i = 0; i < arrayLength; ++i ) {
  > |            accounts[i].transfer(amountPerAccount);
    |        }
    |
  at /unique_chucks/42/0xbbfb34a1cd5f946d7b398d51514fc7d36ba57b0e.sol(34)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'TransferValue':
    |
    |        for (uint i = 0; i < arrayLength; ++i ) {
  > |            accounts[i].transfer(amountPerAccount);
    |        }
    |
  at /unique_chucks/42/0xbbfb34a1cd5f946d7b398d51514fc7d36ba57b0e.sol(34)