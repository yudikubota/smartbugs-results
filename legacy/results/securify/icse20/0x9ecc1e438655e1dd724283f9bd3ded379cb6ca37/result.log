Processing contract: /unique_chucks/9/0x9ecc1e438655e1dd724283f9bd3ded379cb6ca37.sol:ERC20
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/9/0x9ecc1e438655e1dd724283f9bd3ded379cb6ca37.sol:ERC20Burnable
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/9/0x9ecc1e438655e1dd724283f9bd3ded379cb6ca37.sol:ERC20Detailed
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/9/0x9ecc1e438655e1dd724283f9bd3ded379cb6ca37.sol:IERC20
Processing contract: /unique_chucks/9/0x9ecc1e438655e1dd724283f9bd3ded379cb6ca37.sol:Ownable
Processing contract: /unique_chucks/9/0x9ecc1e438655e1dd724283f9bd3ded379cb6ca37.sol:ProofOfTrident
Processing contract: /unique_chucks/9/0x9ecc1e438655e1dd724283f9bd3ded379cb6ca37.sol:Remote
Processing contract: /unique_chucks/9/0x9ecc1e438655e1dd724283f9bd3ded379cb6ca37.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/9/0x9ecc1e438655e1dd724283f9bd3ded379cb6ca37.sol:Vault
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[33mWarning[0m for UnrestrictedWrite in contract 'ERC20Burnable':
    |        require(account != address(0));
    |
  > |        _totalSupply = _totalSupply.sub(value);
    |        _balances[account] = _balances[account].sub(value);
    |        emit Transfer(account, address(0), value);
  at /unique_chucks/9/0x9ecc1e438655e1dd724283f9bd3ded379cb6ca37.sol(258)

[31mViolation[0m for LockedEther in contract 'ERC20Detailed':
    | */
    | 
  > |contract ERC20Detailed is  ERC20 {
    |    string private _name;
    |    string private _symbol;
  at /unique_chucks/9/0x9ecc1e438655e1dd724283f9bd3ded379cb6ca37.sol(285)

[31mViolation[0m for RepeatedCall in contract 'Vault':
    |    */
    |    function _remoteTransferFrom (address from, address to, uint256 value) internal returns (bool) {
  > |        return _remoteToken.transferFrom(from, to, value);
    |    }
    |
  at /unique_chucks/9/0x9ecc1e438655e1dd724283f9bd3ded379cb6ca37.sol(477)

[31mViolation[0m for RepeatedCall in contract 'Vault':
    |        require(amountAllowed >= _stakeMinimum,
    |        "There is a minimum stake amount set.");
  > |        uint256 vaultBalance = _remoteToken.balanceOf(_vaultAddress);
    |        _remoteTransferFrom(msg.sender, _vaultAddress, amountAllowed);
    |
  at /unique_chucks/9/0x9ecc1e438655e1dd724283f9bd3ded379cb6ca37.sol(863)