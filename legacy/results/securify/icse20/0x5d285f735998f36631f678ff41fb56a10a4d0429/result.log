Processing contract: /unique_chucks/2/0x5d285f735998f36631f678ff41fb56a10a4d0429.sol:Address
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/2/0x5d285f735998f36631f678ff41fb56a10a4d0429.sol:BurnRole
Processing contract: /unique_chucks/2/0x5d285f735998f36631f678ff41fb56a10a4d0429.sol:ERC20
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/2/0x5d285f735998f36631f678ff41fb56a10a4d0429.sol:ERC20Burnable
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/2/0x5d285f735998f36631f678ff41fb56a10a4d0429.sol:ERC20Capped
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/2/0x5d285f735998f36631f678ff41fb56a10a4d0429.sol:ERC20Detailed
Processing contract: /unique_chucks/2/0x5d285f735998f36631f678ff41fb56a10a4d0429.sol:ERC20Mintable
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/2/0x5d285f735998f36631f678ff41fb56a10a4d0429.sol:ERC20Pausable
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/2/0x5d285f735998f36631f678ff41fb56a10a4d0429.sol:IERC20
Processing contract: /unique_chucks/2/0x5d285f735998f36631f678ff41fb56a10a4d0429.sol:MinterRole
Processing contract: /unique_chucks/2/0x5d285f735998f36631f678ff41fb56a10a4d0429.sol:MixMarvelToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/2/0x5d285f735998f36631f678ff41fb56a10a4d0429.sol:Ownable
Processing contract: /unique_chucks/2/0x5d285f735998f36631f678ff41fb56a10a4d0429.sol:Pausable
Processing contract: /unique_chucks/2/0x5d285f735998f36631f678ff41fb56a10a4d0429.sol:PauserRole
Processing contract: /unique_chucks/2/0x5d285f735998f36631f678ff41fb56a10a4d0429.sol:Roles
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/2/0x5d285f735998f36631f678ff41fb56a10a4d0429.sol:SafeERC20
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/2/0x5d285f735998f36631f678ff41fb56a10a4d0429.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/2/0x5d285f735998f36631f678ff41fb56a10a4d0429.sol:TokenVesting
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[33mWarning[0m for UnrestrictedWrite in contract 'ERC20Pausable':
    |     */
    |    function pause() public onlyPauser whenNotPaused {
  > |        _paused = true;
    |        emit Paused(msg.sender);
    |    }
  at /unique_chucks/2/0x5d285f735998f36631f678ff41fb56a10a4d0429.sol(556)

[33mWarning[0m for UnrestrictedWrite in contract 'ERC20Pausable':
    |     */
    |    function unpause() public onlyPauser whenPaused {
  > |        _paused = false;
    |        emit Unpaused(msg.sender);
    |    }
  at /unique_chucks/2/0x5d285f735998f36631f678ff41fb56a10a4d0429.sol(564)

[31mViolation[0m for LockedEther in contract 'MixMarvelToken':
    |
    |
  > |contract MixMarvelToken is ERC20, ERC20Detailed, ERC20Pausable, ERC20Capped, ERC20Burnable {
    |    using Address for address;
    |
  at /unique_chucks/2/0x5d285f735998f36631f678ff41fb56a10a4d0429.sol(892)

[31mViolation[0m for LockedEther in contract 'TokenVesting':
    | * owner.
    | */
  > |contract TokenVesting is Ownable {
    |    // The vesting schedule is time-based (i.e. using block timestamps as opposed to e.g. block numbers), and is
    |    // therefore sensitive to timestamp manipulation (which is something miners can do, to a certain degree). Therefore,
  at /unique_chucks/2/0x5d285f735998f36631f678ff41fb56a10a4d0429.sol(728)

[33mWarning[0m for UnrestrictedWrite in contract 'TokenVesting':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipTransferred(_owner, address(0));
  > |        _owner = address(0);
    |    }
    |
  at /unique_chucks/2/0x5d285f735998f36631f678ff41fb56a10a4d0429.sol(335)

[33mWarning[0m for UnrestrictedWrite in contract 'TokenVesting':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_chucks/2/0x5d285f735998f36631f678ff41fb56a10a4d0429.sol(353)

[33mWarning[0m for UnrestrictedWrite in contract 'TokenVesting':
    |        require(unreleased > 0);
    |
  > |        _released[address(token)] = _released[address(token)].add(unreleased);
    |
    |        token.safeTransfer(_beneficiary, unreleased);
  at /unique_chucks/2/0x5d285f735998f36631f678ff41fb56a10a4d0429.sol(835)

[33mWarning[0m for UnrestrictedWrite in contract 'TokenVesting':
    |        uint256 refund = balance.sub(unreleased);
    |
  > |        _revoked[address(token)] = true;
    |
    |        token.safeTransfer(owner(), refund);
  at /unique_chucks/2/0x5d285f735998f36631f678ff41fb56a10a4d0429.sol(856)