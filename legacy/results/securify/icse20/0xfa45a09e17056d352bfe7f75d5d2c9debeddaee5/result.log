Processing contract: /unique_contracts/0xfa45a09e17056d352bfe7f75d5d2c9debeddaee5.sol:BaseLottery
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
java.io.IOException: Timeout for /tmp/binaries_souffle5897404520810698339/mustExplicit -j 1 -F /tmp/souffle-151356cd-3c89-48d1-a389-09c8bab5cf77 -D /tmp/souffle-151356cd-3c89-48d1-a389-09c8bab5cf77_OUT
	at ch.securify.analysis.AbstractDataflow.runCommand(AbstractDataflow.java:277)
	at ch.securify.analysis.AbstractDataflow.initDataflow(AbstractDataflow.java:169)
	at ch.securify.analysis.MustExplicitDataflow.<init>(MustExplicitDataflow.java:33)
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:33)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error in Securify
java.lang.RuntimeException
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:37)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error, skipping: /unique_contracts/0xfa45a09e17056d352bfe7f75d5d2c9debeddaee5.sol:BaseLottery
Processing contract: /unique_contracts/0xfa45a09e17056d352bfe7f75d5d2c9debeddaee5.sol:FiatContract
Processing contract: /unique_contracts/0xfa45a09e17056d352bfe7f75d5d2c9debeddaee5.sol:IChecker
Processing contract: /unique_contracts/0xfa45a09e17056d352bfe7f75d5d2c9debeddaee5.sol:Manageable
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0xfa45a09e17056d352bfe7f75d5d2c9debeddaee5.sol:Ownable
Processing contract: /unique_contracts/0xfa45a09e17056d352bfe7f75d5d2c9debeddaee5.sol:RealToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0xfa45a09e17056d352bfe7f75d5d2c9debeddaee5.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0xfa45a09e17056d352bfe7f75d5d2c9debeddaee5.sol:SimpleToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0xfa45a09e17056d352bfe7f75d5d2c9debeddaee5.sol:SuperJackPot
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
java.io.IOException: Timeout for /tmp/binaries_souffle5897404520810698339/mustExplicit -j 1 -F /tmp/souffle-51c655c3-75d0-4528-9e16-7995b2ae7aaa -D /tmp/souffle-51c655c3-75d0-4528-9e16-7995b2ae7aaa_OUT
	at ch.securify.analysis.AbstractDataflow.runCommand(AbstractDataflow.java:277)
	at ch.securify.analysis.AbstractDataflow.initDataflow(AbstractDataflow.java:169)
	at ch.securify.analysis.MustExplicitDataflow.<init>(MustExplicitDataflow.java:33)
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:33)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error in Securify
java.lang.RuntimeException
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:37)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error, skipping: /unique_contracts/0xfa45a09e17056d352bfe7f75d5d2c9debeddaee5.sol:SuperJackPot
Processing contract: /unique_contracts/0xfa45a09e17056d352bfe7f75d5d2c9debeddaee5.sol:iKYCWhitelist
Processing contract: /unique_contracts/0xfa45a09e17056d352bfe7f75d5d2c9debeddaee5.sol:iRNG
[33mWarning[0m for UnrestrictedWrite in contract 'Manageable':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipTransferred(_owner, address(0));
  > |        _owner = address(0);
    |    }
    |
  at /unique_contracts/0xfa45a09e17056d352bfe7f75d5d2c9debeddaee5.sol(50)

[33mWarning[0m for UnrestrictedWrite in contract 'Manageable':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_contracts/0xfa45a09e17056d352bfe7f75d5d2c9debeddaee5.sol(68)

[33mWarning[0m for UnrestrictedWrite in contract 'Manageable':
    |        if (!listOfManagers[_manager]) {
    |            require(_manager != address(0), "");
  > |            listOfManagers[_manager] = true;
    |            success = true;
    |        }
  at /unique_contracts/0xfa45a09e17056d352bfe7f75d5d2c9debeddaee5.sol(211)

[33mWarning[0m for UnrestrictedWrite in contract 'Manageable':
    |    function removeManager(address _manager) public onlyOwner returns (bool success) {
    |        if (listOfManagers[_manager]) {
  > |            listOfManagers[_manager] = false;
    |            success = true;
    |        }
  at /unique_contracts/0xfa45a09e17056d352bfe7f75d5d2c9debeddaee5.sol(218)

[31mViolation[0m for DAOConstantGas in contract 'RealToken':
    |    
    |    uint256 tokens = msg.value.div(usdv);
  > |    ethBank.transfer(msg.value);
    |    emit GetEth(addrTo, msg.value);
    |    _mint(addrTo, tokens);
  at /unique_contracts/0xfa45a09e17056d352bfe7f75d5d2c9debeddaee5.sol(682)

[33mWarning[0m for TODAmount in contract 'RealToken':
    |    
    |    uint256 tokens = msg.value.div(usdv);
  > |    ethBank.transfer(msg.value);
    |    emit GetEth(addrTo, msg.value);
    |    _mint(addrTo, tokens);
  at /unique_contracts/0xfa45a09e17056d352bfe7f75d5d2c9debeddaee5.sol(682)

[31mViolation[0m for TODReceiver in contract 'RealToken':
    |    
    |    uint256 tokens = msg.value.div(usdv);
  > |    ethBank.transfer(msg.value);
    |    emit GetEth(addrTo, msg.value);
    |    _mint(addrTo, tokens);
  at /unique_contracts/0xfa45a09e17056d352bfe7f75d5d2c9debeddaee5.sol(682)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'RealToken':
    |    
    |    uint256 tokens = msg.value.div(usdv);
  > |    ethBank.transfer(msg.value);
    |    emit GetEth(addrTo, msg.value);
    |    _mint(addrTo, tokens);
  at /unique_contracts/0xfa45a09e17056d352bfe7f75d5d2c9debeddaee5.sol(682)

[31mViolation[0m for UnrestrictedWrite in contract 'RealToken':
    |
    |        _balances[from] = _balances[from].sub(value);
  > |        _balances[to] = _balances[to].add(value);
    |        emit Transfer(from, to, value);
    |    }
  at /unique_contracts/0xfa45a09e17056d352bfe7f75d5d2c9debeddaee5.sol(181)

[31mViolation[0m for UnrestrictedWrite in contract 'RealToken':
    |        require(account != address(0));
    |
  > |        _totalSupply = _totalSupply.add(value);
    |        _balances[account] = _balances[account].add(value);
    |        emit Transfer(address(0), account, value);
  at /unique_contracts/0xfa45a09e17056d352bfe7f75d5d2c9debeddaee5.sol(195)

[31mViolation[0m for UnrestrictedWrite in contract 'RealToken':
    |
    |        _totalSupply = _totalSupply.add(value);
  > |        _balances[account] = _balances[account].add(value);
    |        emit Transfer(address(0), account, value);
    |    }
  at /unique_contracts/0xfa45a09e17056d352bfe7f75d5d2c9debeddaee5.sol(196)

[33mWarning[0m for UnrestrictedWrite in contract 'RealToken':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipTransferred(_owner, address(0));
  > |        _owner = address(0);
    |    }
    |
  at /unique_contracts/0xfa45a09e17056d352bfe7f75d5d2c9debeddaee5.sol(50)

[33mWarning[0m for UnrestrictedWrite in contract 'RealToken':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_contracts/0xfa45a09e17056d352bfe7f75d5d2c9debeddaee5.sol(68)

[33mWarning[0m for UnrestrictedWrite in contract 'RealToken':
    |  function setLotteryBank(address bank) public onlyOwner {
    |    require(bank != address(0));
  > |    ethBank = address(uint160(bank));
    |  }
    |
  at /unique_contracts/0xfa45a09e17056d352bfe7f75d5d2c9debeddaee5.sol(669)

[33mWarning[0m for UnrestrictedWrite in contract 'RealToken':
    |
    |  function setRoundFactor(uint256 newFactor) public onlyOwner {
  > |    factor = newFactor;
    |  }
    |  
  at /unique_contracts/0xfa45a09e17056d352bfe7f75d5d2c9debeddaee5.sol(673)

[31mViolation[0m for UnrestrictedWrite in contract 'SimpleToken':
    |
    |        _balances[from] = _balances[from].sub(value);
  > |        _balances[to] = _balances[to].add(value);
    |        emit Transfer(from, to, value);
    |    }
  at /unique_contracts/0xfa45a09e17056d352bfe7f75d5d2c9debeddaee5.sol(181)

[33mWarning[0m for UnrestrictedWrite in contract 'SimpleToken':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipTransferred(_owner, address(0));
  > |        _owner = address(0);
    |    }
    |
  at /unique_contracts/0xfa45a09e17056d352bfe7f75d5d2c9debeddaee5.sol(50)

[33mWarning[0m for UnrestrictedWrite in contract 'SimpleToken':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_contracts/0xfa45a09e17056d352bfe7f75d5d2c9debeddaee5.sol(68)