Processing contract: /unique_chucks/27/0x3c0dc66381a4e40d9afbfc33f74e503eb8099f27.sol:Syndicate
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for UnrestrictedEtherFlow in contract 'Syndicate':
    |    require(balances[target] >= weiValue);
    |    balances[target] -= weiValue;
  > |    target.transfer(weiValue);
    |  }
    |
  at /unique_chucks/27/0x3c0dc66381a4e40d9afbfc33f74e503eb8099f27.sol(104)

[31mViolation[0m for UnrestrictedWrite in contract 'Syndicate':
    |
    |/**
  > | * The Syndicate contract
    | *
    | * A way for distributed groups of people to work together and come to consensus
  at /unique_chucks/27/0x3c0dc66381a4e40d9afbfc33f74e503eb8099f27.sol(4)

[31mViolation[0m for UnrestrictedWrite in contract 'Syndicate':
    |    // Verify the time is non-zero
    |    require(_time > 0);
  > |    payments.push(Payment({
    |      sender: msg.sender,
    |      receiver: _receiver,
  at /unique_chucks/27/0x3c0dc66381a4e40d9afbfc33f74e503eb8099f27.sol(47)

[31mViolation[0m for UnrestrictedWrite in contract 'Syndicate':
    |  function paymentSettle(uint256 index) public {
    |    uint256 owedWei = paymentWeiOwed(index);
  > |    balances[payments[index].receiver] += owedWei;
    |    payments[index].weiPaid += owedWei;
    |    emit PaymentUpdated(index);
  at /unique_chucks/27/0x3c0dc66381a4e40d9afbfc33f74e503eb8099f27.sol(67)

[31mViolation[0m for UnrestrictedWrite in contract 'Syndicate':
    |    uint256 owedWei = paymentWeiOwed(index);
    |    balances[payments[index].receiver] += owedWei;
  > |    payments[index].weiPaid += owedWei;
    |    emit PaymentUpdated(index);
    |  }
  at /unique_chucks/27/0x3c0dc66381a4e40d9afbfc33f74e503eb8099f27.sol(68)