Processing contract: /unique_chucks/29/0xe41a3f9927044c433d308bc184e3fa8034290d29.sol:MinterRole
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/29/0xe41a3f9927044c433d308bc184e3fa8034290d29.sol:MyMintableToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/29/0xe41a3f9927044c433d308bc184e3fa8034290d29.sol:MyToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/29/0xe41a3f9927044c433d308bc184e3fa8034290d29.sol:Roles
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/29/0xe41a3f9927044c433d308bc184e3fa8034290d29.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for UnrestrictedWrite in contract 'MinterRole':
    |    function _removeMinter(address account) internal {
    |        require(minterAmount > 1);
  > |        minterAmount--;
    |        _minters.remove(account);
    |        emit MinterRemoved(account);
  at /unique_chucks/29/0xe41a3f9927044c433d308bc184e3fa8034290d29.sol(344)

[33mWarning[0m for UnrestrictedWrite in contract 'MinterRole':
    |
    |    function _addMinter(address account) internal {
  > |        minterAmount++;
    |        _minters.add(account);
    |        emit MinterAdded(account);
  at /unique_chucks/29/0xe41a3f9927044c433d308bc184e3fa8034290d29.sol(337)

[31mViolation[0m for LockedEther in contract 'MyMintableToken':
    |
    |
  > |contract MyMintableToken is MyToken, MinterRole {
    |
    |	constructor (string memory name, string memory symbol, uint8 decimals, uint totalSupply) public {
  at /unique_chucks/29/0xe41a3f9927044c433d308bc184e3fa8034290d29.sol(351)

[31mViolation[0m for UnrestrictedWrite in contract 'MyMintableToken':
    |    function _removeMinter(address account) internal {
    |        require(minterAmount > 1);
  > |        minterAmount--;
    |        _minters.remove(account);
    |        emit MinterRemoved(account);
  at /unique_chucks/29/0xe41a3f9927044c433d308bc184e3fa8034290d29.sol(344)

[33mWarning[0m for UnrestrictedWrite in contract 'MyMintableToken':
    |
    |    function _addMinter(address account) internal {
  > |        minterAmount++;
    |        _minters.add(account);
    |        emit MinterAdded(account);
  at /unique_chucks/29/0xe41a3f9927044c433d308bc184e3fa8034290d29.sol(337)

[33mWarning[0m for UnrestrictedWrite in contract 'MyMintableToken':
    |        require(account != address(0), "ERC20: mint to the zero address");
    |
  > |        _totalSupply = _totalSupply.add(amount);
    |        _balances[account] = _balances[account].add(amount);
    |        emit Transfer(address(0), account, amount);
  at /unique_chucks/29/0xe41a3f9927044c433d308bc184e3fa8034290d29.sol(386)

[31mViolation[0m for LockedEther in contract 'MyToken':
    | * Originally based on code by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol
    | */
  > |contract MyToken {
    |  using SafeMath for uint256;
    |
  at /unique_chucks/29/0xe41a3f9927044c433d308bc184e3fa8034290d29.sol(76)