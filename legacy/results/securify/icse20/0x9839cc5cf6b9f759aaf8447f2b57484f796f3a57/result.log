Processing contract: /unique_chucks/36/0x9839cc5cf6b9f759aaf8447f2b57484f796f3a57.sol:BasicToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/36/0x9839cc5cf6b9f759aaf8447f2b57484f796f3a57.sol:ERC20
Processing contract: /unique_chucks/36/0x9839cc5cf6b9f759aaf8447f2b57484f796f3a57.sol:ERC20Basic
Processing contract: /unique_chucks/36/0x9839cc5cf6b9f759aaf8447f2b57484f796f3a57.sol:ERC20Token
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/36/0x9839cc5cf6b9f759aaf8447f2b57484f796f3a57.sol:Ownable
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/36/0x9839cc5cf6b9f759aaf8447f2b57484f796f3a57.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/36/0x9839cc5cf6b9f759aaf8447f2b57484f796f3a57.sol:StandardToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/36/0x9839cc5cf6b9f759aaf8447f2b57484f796f3a57.sol:TokenMaker
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/36/0x9839cc5cf6b9f759aaf8447f2b57484f796f3a57.sol:token
[33mWarning[0m for UnrestrictedWrite in contract 'BasicToken':
    |    // SafeMath.sub will throw if there is not enough balance.
    |    balances[msg.sender] = balances[msg.sender].sub(_value);
  > |    balances[_to] = balances[_to].add(_value);
    |    emit Transfer(msg.sender, _to, _value);
    |    return true;
  at /unique_chucks/36/0x9839cc5cf6b9f759aaf8447f2b57484f796f3a57.sol(65)

[31mViolation[0m for LockedEther in contract 'ERC20Token':
    |
    |
  > |contract ERC20Token is StandardToken {
    |
    |    string public name;
  at /unique_chucks/36/0x9839cc5cf6b9f759aaf8447f2b57484f796f3a57.sol(178)

[33mWarning[0m for UnrestrictedWrite in contract 'ERC20Token':
    |    // SafeMath.sub will throw if there is not enough balance.
    |    balances[msg.sender] = balances[msg.sender].sub(_value);
  > |    balances[_to] = balances[_to].add(_value);
    |    emit Transfer(msg.sender, _to, _value);
    |    return true;
  at /unique_chucks/36/0x9839cc5cf6b9f759aaf8447f2b57484f796f3a57.sol(65)

[33mWarning[0m for UnrestrictedWrite in contract 'ERC20Token':
    |    // require (_value <= _allowance);
    |
  > |    balances[_from] = balances[_from].sub(_value);
    |    balances[_to] = balances[_to].add(_value);
    |    allowed[_from][msg.sender] = _allowance.sub(_value);
  at /unique_chucks/36/0x9839cc5cf6b9f759aaf8447f2b57484f796f3a57.sol(118)

[33mWarning[0m for UnrestrictedWrite in contract 'ERC20Token':
    |
    |    balances[_from] = balances[_from].sub(_value);
  > |    balances[_to] = balances[_to].add(_value);
    |    allowed[_from][msg.sender] = _allowance.sub(_value);
    |    emit Transfer(_from, _to, _value);
  at /unique_chucks/36/0x9839cc5cf6b9f759aaf8447f2b57484f796f3a57.sol(119)

[33mWarning[0m for UnrestrictedWrite in contract 'Ownable':
    |    require(newOwner != address(0));
    |    emit OwnershipTransferred(owner, newOwner);
  > |    owner = newOwner;
    |  }
    |}
  at /unique_chucks/36/0x9839cc5cf6b9f759aaf8447f2b57484f796f3a57.sol(244)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |    // SafeMath.sub will throw if there is not enough balance.
    |    balances[msg.sender] = balances[msg.sender].sub(_value);
  > |    balances[_to] = balances[_to].add(_value);
    |    emit Transfer(msg.sender, _to, _value);
    |    return true;
  at /unique_chucks/36/0x9839cc5cf6b9f759aaf8447f2b57484f796f3a57.sol(65)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |    // require (_value <= _allowance);
    |
  > |    balances[_from] = balances[_from].sub(_value);
    |    balances[_to] = balances[_to].add(_value);
    |    allowed[_from][msg.sender] = _allowance.sub(_value);
  at /unique_chucks/36/0x9839cc5cf6b9f759aaf8447f2b57484f796f3a57.sol(118)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |
    |    balances[_from] = balances[_from].sub(_value);
  > |    balances[_to] = balances[_to].add(_value);
    |    allowed[_from][msg.sender] = _allowance.sub(_value);
    |    emit Transfer(_from, _to, _value);
  at /unique_chucks/36/0x9839cc5cf6b9f759aaf8447f2b57484f796f3a57.sol(119)

[31mViolation[0m for LockedEther in contract 'TokenMaker':
    |}
    |
  > |contract TokenMaker is Ownable {
    |    uint public fee_in_dc_units = 10e18;
    |    address public dc_token_address;
  at /unique_chucks/36/0x9839cc5cf6b9f759aaf8447f2b57484f796f3a57.sol(254)

[33mWarning[0m for UnrestrictedWrite in contract 'TokenMaker':
    |    require(newOwner != address(0));
    |    emit OwnershipTransferred(owner, newOwner);
  > |    owner = newOwner;
    |  }
    |}
  at /unique_chucks/36/0x9839cc5cf6b9f759aaf8447f2b57484f796f3a57.sol(244)

[33mWarning[0m for UnrestrictedWrite in contract 'TokenMaker':
    |
    |    function setFee(uint number_of_dc_uints) public onlyOwner {
  > |        fee_in_dc_units = number_of_dc_uints;
    |    }
    |
  at /unique_chucks/36/0x9839cc5cf6b9f759aaf8447f2b57484f796f3a57.sol(262)

[33mWarning[0m for UnrestrictedWrite in contract 'TokenMaker':
    |
    |    function setDcTokenAddress(address _addr) public onlyOwner {
  > |      dc_token_address = _addr;
    |      dcToken = token(_addr);
    |    }
  at /unique_chucks/36/0x9839cc5cf6b9f759aaf8447f2b57484f796f3a57.sol(266)

[33mWarning[0m for UnrestrictedWrite in contract 'TokenMaker':
    |    function setDcTokenAddress(address _addr) public onlyOwner {
    |      dc_token_address = _addr;
  > |      dcToken = token(_addr);
    |    }
    |
  at /unique_chucks/36/0x9839cc5cf6b9f759aaf8447f2b57484f796f3a57.sol(267)