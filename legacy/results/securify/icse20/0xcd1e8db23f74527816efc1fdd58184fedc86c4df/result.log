Processing contract: /unique_chucks/35/0xcd1e8db23f74527816efc1fdd58184fedc86c4df.sol:KryptoniexDEX
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/35/0xcd1e8db23f74527816efc1fdd58184fedc86c4df.sol:Token
[31mViolation[0m for MissingInputValidation in contract 'KryptoniexDEX':
    |    }
    |
  > |     function withdraw(address payable to,uint256 amount) public payable returns(bool) {
    |        require(admin==msg.sender);
    |        require(address(this).balance > 0);
  at /unique_chucks/35/0xcd1e8db23f74527816efc1fdd58184fedc86c4df.sol(28)

[31mViolation[0m for MissingInputValidation in contract 'KryptoniexDEX':
    |
    |
  > |    function tokenDeposit(address tokenaddr,address fromaddr,uint256 tokenAmount) public returns(bool)
    |    {
    |        require(tokenAmount > 0);
  at /unique_chucks/35/0xcd1e8db23f74527816efc1fdd58184fedc86c4df.sol(36)

[31mViolation[0m for MissingInputValidation in contract 'KryptoniexDEX':
    |  
    |
  > |    function tokenWithdraw(address tokenAddr,address withdrawaddr, uint256 tokenAmount) public returns(bool)
    |    {
    |         require(admin==msg.sender);
  at /unique_chucks/35/0xcd1e8db23f74527816efc1fdd58184fedc86c4df.sol(46)

[31mViolation[0m for MissingInputValidation in contract 'KryptoniexDEX':
    |    }
    |    
  > |     function viewTokenBalance(address tokenAddr,address baladdr)public view returns(uint256){
    |        return Token(tokenAddr).balanceOf(baladdr);
    |    }
  at /unique_chucks/35/0xcd1e8db23f74527816efc1fdd58184fedc86c4df.sol(54)

[31mViolation[0m for MissingInputValidation in contract 'KryptoniexDEX':
    |    }
    |    
  > |    function tokenallowance(address tokenAddr,address owner) public view returns(uint256){
    |        return Token(tokenAddr).allowance(owner,address(this));
    |    }
  at /unique_chucks/35/0xcd1e8db23f74527816efc1fdd58184fedc86c4df.sol(58)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'KryptoniexDEX':
    |        require(admin==msg.sender);
    |        require(address(this).balance > 0);
  > |        to.transfer(amount);
    |        return true;
    |    }
  at /unique_chucks/35/0xcd1e8db23f74527816efc1fdd58184fedc86c4df.sol(31)