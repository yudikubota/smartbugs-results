Processing contract: /unique_chucks/27/0x151d9d5e9c9f5adceebd3597df050ba9dd41d507.sol:ApproveAndCallFallBack
Processing contract: /unique_chucks/27/0x151d9d5e9c9f5adceebd3597df050ba9dd41d507.sol:CoinsNetwork
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/27/0x151d9d5e9c9f5adceebd3597df050ba9dd41d507.sol:ERC20Interface
Processing contract: /unique_chucks/27/0x151d9d5e9c9f5adceebd3597df050ba9dd41d507.sol:Owned
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/27/0x151d9d5e9c9f5adceebd3597df050ba9dd41d507.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for LockedEther in contract 'CoinsNetwork':
    |// fixed supply
    |// ----------------------------------------------------------------------------
  > |contract CoinsNetwork is ERC20Interface, Owned {
    |    using SafeMath for uint;
    |
  at /unique_chucks/27/0x151d9d5e9c9f5adceebd3597df050ba9dd41d507.sol(96)

[31mViolation[0m for UnrestrictedWrite in contract 'CoinsNetwork':
    |        require(_to != address(0));
    |        balances[msg.sender] = balances[msg.sender].sub(_value);
  > |        balances[_to] = balances[_to].add(_value);
    |        emit Transfer(msg.sender, _to, _value);
    |        return true;
  at /unique_chucks/27/0x151d9d5e9c9f5adceebd3597df050ba9dd41d507.sol(174)

[31mViolation[0m for UnrestrictedWrite in contract 'CoinsNetwork':
    |        require(allowed[_from][msg.sender] >= _value);
    |        
  > |        balances[_from] = balances[_from].sub(_value);
    |        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
    |        balances[_to] = balances[_to].add(_value);
  at /unique_chucks/27/0x151d9d5e9c9f5adceebd3597df050ba9dd41d507.sol(210)

[31mViolation[0m for UnrestrictedWrite in contract 'CoinsNetwork':
    |        balances[_from] = balances[_from].sub(_value);
    |        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
  > |        balances[_to] = balances[_to].add(_value);
    |        emit Transfer(_from, _to, _value);
    |        return true;
  at /unique_chucks/27/0x151d9d5e9c9f5adceebd3597df050ba9dd41d507.sol(212)

[33mWarning[0m for UnrestrictedWrite in contract 'CoinsNetwork':
    |
    |    function transferOwnership(address _newOwner) public onlyOwner {
  > |        newOwner = _newOwner;
    |    }
    |    function acceptOwnership() public {
  at /unique_chucks/27/0x151d9d5e9c9f5adceebd3597df050ba9dd41d507.sol(81)

[33mWarning[0m for UnrestrictedWrite in contract 'CoinsNetwork':
    |        require(msg.sender == newOwner);
    |        emit OwnershipTransferred(owner, newOwner);
  > |        owner = newOwner;
    |        newOwner = address(0);
    |    }
  at /unique_chucks/27/0x151d9d5e9c9f5adceebd3597df050ba9dd41d507.sol(86)

[33mWarning[0m for UnrestrictedWrite in contract 'CoinsNetwork':
    |        emit OwnershipTransferred(owner, newOwner);
    |        owner = newOwner;
  > |        newOwner = address(0);
    |    }
    |}
  at /unique_chucks/27/0x151d9d5e9c9f5adceebd3597df050ba9dd41d507.sol(87)

[31mViolation[0m for MissingInputValidation in contract 'Owned':
    |    }
    |
  > |    function transferOwnership(address _newOwner) public onlyOwner {
    |        newOwner = _newOwner;
    |    }
  at /unique_chucks/27/0x151d9d5e9c9f5adceebd3597df050ba9dd41d507.sol(80)

[33mWarning[0m for UnrestrictedWrite in contract 'Owned':
    |
    |    function transferOwnership(address _newOwner) public onlyOwner {
  > |        newOwner = _newOwner;
    |    }
    |    function acceptOwnership() public {
  at /unique_chucks/27/0x151d9d5e9c9f5adceebd3597df050ba9dd41d507.sol(81)

[33mWarning[0m for UnrestrictedWrite in contract 'Owned':
    |        require(msg.sender == newOwner);
    |        emit OwnershipTransferred(owner, newOwner);
  > |        owner = newOwner;
    |        newOwner = address(0);
    |    }
  at /unique_chucks/27/0x151d9d5e9c9f5adceebd3597df050ba9dd41d507.sol(86)

[33mWarning[0m for UnrestrictedWrite in contract 'Owned':
    |        emit OwnershipTransferred(owner, newOwner);
    |        owner = newOwner;
  > |        newOwner = address(0);
    |    }
    |}
  at /unique_chucks/27/0x151d9d5e9c9f5adceebd3597df050ba9dd41d507.sol(87)