Processing contract: /unique_chucks/12/0x6cd13f1ca8758cb7b264cbc7674f2b5fa1f4ef1c.sol:ICampaign
Processing contract: /unique_chucks/12/0x6cd13f1ca8758cb7b264cbc7674f2b5fa1f4ef1c.sol:IERC20
Processing contract: /unique_chucks/12/0x6cd13f1ca8758cb7b264cbc7674f2b5fa1f4ef1c.sol:limited
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/12/0x6cd13f1ca8758cb7b264cbc7674f2b5fa1f4ef1c.sol:oracle
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/12/0x6cd13f1ca8758cb7b264cbc7674f2b5fa1f4ef1c.sol:owned
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for MissingInputValidation in contract 'limited':
    |    }
    |
  > |    function transferOwnership(address payable newOwner) onlyOwner public {
    |        owner = newOwner;
    |    }
  at /unique_chucks/12/0x6cd13f1ca8758cb7b264cbc7674f2b5fa1f4ef1c.sol(15)

[31mViolation[0m for MissingInputValidation in contract 'limited':
    |    }
    |    
  > |    function changeAsk (address a,bool allow) onlyOwner public {
    |        canAsk[a] = allow;
    |    }
  at /unique_chucks/12/0x6cd13f1ca8758cb7b264cbc7674f2b5fa1f4ef1c.sol(28)

[33mWarning[0m for UnrestrictedWrite in contract 'limited':
    |
    |    function transferOwnership(address payable newOwner) onlyOwner public {
  > |        owner = newOwner;
    |    }
    |}
  at /unique_chucks/12/0x6cd13f1ca8758cb7b264cbc7674f2b5fa1f4ef1c.sol(16)

[33mWarning[0m for UnrestrictedWrite in contract 'limited':
    |    
    |    function changeAsk (address a,bool allow) onlyOwner public {
  > |        canAsk[a] = allow;
    |    }
    |    
  at /unique_chucks/12/0x6cd13f1ca8758cb7b264cbc7674f2b5fa1f4ef1c.sol(29)

[31mViolation[0m for TODAmount in contract 'oracle':
    |    
    |    function withdraw() onlyOwner public {
  > |        owner.transfer(address(this).balance);
    |    }
    |    
  at /unique_chucks/12/0x6cd13f1ca8758cb7b264cbc7674f2b5fa1f4ef1c.sol(69)

[31mViolation[0m for TODReceiver in contract 'oracle':
    |    
    |    function withdraw() onlyOwner public {
  > |        owner.transfer(address(this).balance);
    |    }
    |    
  at /unique_chucks/12/0x6cd13f1ca8758cb7b264cbc7674f2b5fa1f4ef1c.sol(69)

[33mWarning[0m for UnrestrictedWrite in contract 'oracle':
    |
    |    function transferOwnership(address payable newOwner) onlyOwner public {
  > |        owner = newOwner;
    |    }
    |}
  at /unique_chucks/12/0x6cd13f1ca8758cb7b264cbc7674f2b5fa1f4ef1c.sol(16)

[33mWarning[0m for UnrestrictedWrite in contract 'oracle':
    |    
    |    function changeAsk (address a,bool allow) onlyOwner public {
  > |        canAsk[a] = allow;
    |    }
    |    
  at /unique_chucks/12/0x6cd13f1ca8758cb7b264cbc7674f2b5fa1f4ef1c.sol(29)

[31mViolation[0m for MissingInputValidation in contract 'owned':
    |    }
    |
  > |    function transferOwnership(address payable newOwner) onlyOwner public {
    |        owner = newOwner;
    |    }
  at /unique_chucks/12/0x6cd13f1ca8758cb7b264cbc7674f2b5fa1f4ef1c.sol(15)

[33mWarning[0m for UnrestrictedWrite in contract 'owned':
    |
    |    function transferOwnership(address payable newOwner) onlyOwner public {
  > |        owner = newOwner;
    |    }
    |}
  at /unique_chucks/12/0x6cd13f1ca8758cb7b264cbc7674f2b5fa1f4ef1c.sol(16)