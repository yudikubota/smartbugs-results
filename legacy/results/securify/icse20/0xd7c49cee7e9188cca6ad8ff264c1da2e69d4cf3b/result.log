Processing contract: /unique_contracts/0xd7c49cee7e9188cca6ad8ff264c1da2e69d4cf3b.sol:IERC20
Processing contract: /unique_contracts/0xd7c49cee7e9188cca6ad8ff264c1da2e69d4cf3b.sol:NXMToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0xd7c49cee7e9188cca6ad8ff264c1da2e69d4cf3b.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for LockedEther in contract 'NXMToken':
    |
    |
  > |contract NXMToken is IERC20 {
    |    using SafeMath for uint256;
    |
  at /unique_contracts/0xd7c49cee7e9188cca6ad8ff264c1da2e69d4cf3b.sol(121)

[33mWarning[0m for UnrestrictedWrite in contract 'NXMToken':
    |    */
    |    function addToWhiteList(address _member) public onlyOperator returns (bool) {
  > |        whiteListed[_member] = true;
    |        emit WhiteListed(_member);
    |        return true;
  at /unique_contracts/0xd7c49cee7e9188cca6ad8ff264c1da2e69d4cf3b.sol(261)

[33mWarning[0m for UnrestrictedWrite in contract 'NXMToken':
    |    */
    |    function removeFromWhiteList(address _member) public onlyOperator returns (bool) {
  > |        whiteListed[_member] = false;
    |        emit BlackListed(_member);
    |        return true;
  at /unique_contracts/0xd7c49cee7e9188cca6ad8ff264c1da2e69d4cf3b.sol(271)

[33mWarning[0m for UnrestrictedWrite in contract 'NXMToken':
    |    */
    |    function changeOperator(address _newOperator) public onlyOperator returns (bool) {
  > |        operator = _newOperator;
    |        return true;
    |    }
  at /unique_contracts/0xd7c49cee7e9188cca6ad8ff264c1da2e69d4cf3b.sol(281)