Processing contract: /unique_chucks/46/0x4820a69ee3d8f1de3fe96b22adab1d9583a6c223.sol:ERC20
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/46/0x4820a69ee3d8f1de3fe96b22adab1d9583a6c223.sol:ERC20Burnable
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/46/0x4820a69ee3d8f1de3fe96b22adab1d9583a6c223.sol:ERC20Detailed
Processing contract: /unique_chucks/46/0x4820a69ee3d8f1de3fe96b22adab1d9583a6c223.sol:ERC20DocumentRegistry
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/46/0x4820a69ee3d8f1de3fe96b22adab1d9583a6c223.sol:ERC20ForcedTransfer
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/46/0x4820a69ee3d8f1de3fe96b22adab1d9583a6c223.sol:ERC20Pausable
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/46/0x4820a69ee3d8f1de3fe96b22adab1d9583a6c223.sol:ERC20Snapshot
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/46/0x4820a69ee3d8f1de3fe96b22adab1d9583a6c223.sol:ERC20Whitelist
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/46/0x4820a69ee3d8f1de3fe96b22adab1d9583a6c223.sol:GlobalWhitelist
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/46/0x4820a69ee3d8f1de3fe96b22adab1d9583a6c223.sol:IERC20
Processing contract: /unique_chucks/46/0x4820a69ee3d8f1de3fe96b22adab1d9583a6c223.sol:IERC20Snapshot
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/46/0x4820a69ee3d8f1de3fe96b22adab1d9583a6c223.sol:Manageable
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/46/0x4820a69ee3d8f1de3fe96b22adab1d9583a6c223.sol:Ownable
Processing contract: /unique_chucks/46/0x4820a69ee3d8f1de3fe96b22adab1d9583a6c223.sol:Pausable
Processing contract: /unique_chucks/46/0x4820a69ee3d8f1de3fe96b22adab1d9583a6c223.sol:PauserRole
Processing contract: /unique_chucks/46/0x4820a69ee3d8f1de3fe96b22adab1d9583a6c223.sol:Roles
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/46/0x4820a69ee3d8f1de3fe96b22adab1d9583a6c223.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/46/0x4820a69ee3d8f1de3fe96b22adab1d9583a6c223.sol:SampleToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/46/0x4820a69ee3d8f1de3fe96b22adab1d9583a6c223.sol:SampleTokenFactory
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/46/0x4820a69ee3d8f1de3fe96b22adab1d9583a6c223.sol:Utils
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[33mWarning[0m for UnrestrictedWrite in contract 'ERC20Burnable':
    |        require(account != address(0));
    |
  > |        _totalSupply = _totalSupply.sub(value);
    |        _balances[account] = _balances[account].sub(value);
    |        emit Transfer(account, address(0), value);
  at /unique_chucks/46/0x4820a69ee3d8f1de3fe96b22adab1d9583a6c223.sol(468)

[31mViolation[0m for LockedEther in contract 'ERC20DocumentRegistry':
    |*/
    |// solhint-disable not-rely-on-time
  > |contract ERC20DocumentRegistry is Ownable {
    |    using SafeMath for uint256;
    |
  at /unique_chucks/46/0x4820a69ee3d8f1de3fe96b22adab1d9583a6c223.sol(1035)

[31mViolation[0m for UnrestrictedWrite in contract 'ERC20DocumentRegistry':
    |*/
    |// solhint-disable not-rely-on-time
  > |contract ERC20DocumentRegistry is Ownable {
    |    using SafeMath for uint256;
    |
  at /unique_chucks/46/0x4820a69ee3d8f1de3fe96b22adab1d9583a6c223.sol(1035)

[33mWarning[0m for UnrestrictedWrite in contract 'ERC20DocumentRegistry':
  > |/* file: openzeppelin-solidity/contracts/ownership/Ownable.sol */
    |pragma solidity ^0.5.0;
    |
  at /unique_chucks/46/0x4820a69ee3d8f1de3fe96b22adab1d9583a6c223.sol(1)

[33mWarning[0m for UnrestrictedWrite in contract 'ERC20DocumentRegistry':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipTransferred(_owner, address(0));
  > |        _owner = address(0);
    |    }
    |
  at /unique_chucks/46/0x4820a69ee3d8f1de3fe96b22adab1d9583a6c223.sol(53)

[33mWarning[0m for UnrestrictedWrite in contract 'ERC20DocumentRegistry':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_chucks/46/0x4820a69ee3d8f1de3fe96b22adab1d9583a6c223.sol(71)

[33mWarning[0m for UnrestrictedWrite in contract 'ERC20DocumentRegistry':
    |*/
    |// solhint-disable not-rely-on-time
  > |contract ERC20DocumentRegistry is Ownable {
    |    using SafeMath for uint256;
    |
  at /unique_chucks/46/0x4820a69ee3d8f1de3fe96b22adab1d9583a6c223.sol(1035)

[33mWarning[0m for UnrestrictedWrite in contract 'ERC20DocumentRegistry':
    |        });
    |
  > |        _documents.push(document);
    |
    |        emit LogDocumentedAdded(documentUri, _documents.length.sub(1));
  at /unique_chucks/46/0x4820a69ee3d8f1de3fe96b22adab1d9583a6c223.sol(1060)

[33mWarning[0m for UnrestrictedWrite in contract 'ERC20Pausable':
    |     */
    |    function pause() public onlyPauser whenNotPaused {
  > |        _paused = true;
    |        emit Paused(msg.sender);
    |    }
  at /unique_chucks/46/0x4820a69ee3d8f1de3fe96b22adab1d9583a6c223.sol(694)

[33mWarning[0m for UnrestrictedWrite in contract 'ERC20Pausable':
    |     */
    |    function unpause() public onlyPauser whenPaused {
  > |        _paused = false;
    |        emit Unpaused(msg.sender);
    |    }
  at /unique_chucks/46/0x4820a69ee3d8f1de3fe96b22adab1d9583a6c223.sol(702)

[31mViolation[0m for RepeatedCall in contract 'ERC20Whitelist':
    |    */
    |    function checkIfWhitelisted(address _account) internal view {
  > |        require(whitelist.isWhitelisted(_account), "not whitelisted");
    |    }
    |}
  at /unique_chucks/46/0x4820a69ee3d8f1de3fe96b22adab1d9583a6c223.sol(1015)

[33mWarning[0m for UnrestrictedWrite in contract 'ERC20Whitelist':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipTransferred(_owner, address(0));
  > |        _owner = address(0);
    |    }
    |
  at /unique_chucks/46/0x4820a69ee3d8f1de3fe96b22adab1d9583a6c223.sol(53)

[33mWarning[0m for UnrestrictedWrite in contract 'ERC20Whitelist':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_chucks/46/0x4820a69ee3d8f1de3fe96b22adab1d9583a6c223.sol(71)

[33mWarning[0m for UnrestrictedWrite in contract 'ERC20Whitelist':
    |    */
    |    function toggleWhitelist() external onlyOwner {
  > |        isWhitelisting ? isWhitelisting = false : isWhitelisting = true;
    |        if (isWhitelisting) {
    |            emit ESTWhitelistingEnabled();
  at /unique_chucks/46/0x4820a69ee3d8f1de3fe96b22adab1d9583a6c223.sol(956)

[33mWarning[0m for UnrestrictedWrite in contract 'GlobalWhitelist':
    |    */
    |    function addAddressToWhitelist(address _address) public onlyManager onlyValidAddress(_address) {
  > |        isWhitelisted[_address] = true;
    |        emit ChangedWhitelisting(_address, true);
    |    }
  at /unique_chucks/46/0x4820a69ee3d8f1de3fe96b22adab1d9583a6c223.sol(228)

[33mWarning[0m for UnrestrictedWrite in contract 'GlobalWhitelist':
    |    */
    |    function removeAddressFromWhitelist(address _address) public onlyManager onlyValidAddress(_address) {
  > |        isWhitelisted[_address] = false;
    |        emit ChangedWhitelisting(_address, false);
    |    }
  at /unique_chucks/46/0x4820a69ee3d8f1de3fe96b22adab1d9583a6c223.sol(247)

[31mViolation[0m for MissingInputValidation in contract 'Manageable':
    |
    |contract Manageable is Ownable, Utils {
  > |    mapping(address => bool) public isManager;     // manager accounts
    |
    |    /** EVENTS **/
  at /unique_chucks/46/0x4820a69ee3d8f1de3fe96b22adab1d9583a6c223.sol(172)

[31mViolation[0m for MissingInputValidation in contract 'Manageable':
    |     * @param _active bool flag that shows if the manager account is active
    |     */
  > |    function setManager(address _manager, bool _active) public onlyOwner onlyValidAddress(_manager) {
    |        isManager[_manager] = _active;
    |        emit ChangedManager(_manager, _active);
  at /unique_chucks/46/0x4820a69ee3d8f1de3fe96b22adab1d9583a6c223.sol(195)

[31mViolation[0m for UnrestrictedWrite in contract 'Manageable':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_chucks/46/0x4820a69ee3d8f1de3fe96b22adab1d9583a6c223.sol(71)

[33mWarning[0m for UnrestrictedWrite in contract 'Manageable':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipTransferred(_owner, address(0));
  > |        _owner = address(0);
    |    }
    |
  at /unique_chucks/46/0x4820a69ee3d8f1de3fe96b22adab1d9583a6c223.sol(53)

[33mWarning[0m for UnrestrictedWrite in contract 'Manageable':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_chucks/46/0x4820a69ee3d8f1de3fe96b22adab1d9583a6c223.sol(71)

[33mWarning[0m for UnrestrictedWrite in contract 'Manageable':
    |     */
    |    function setManager(address _manager, bool _active) public onlyOwner onlyValidAddress(_manager) {
  > |        isManager[_manager] = _active;
    |        emit ChangedManager(_manager, _active);
    |    }
  at /unique_chucks/46/0x4820a69ee3d8f1de3fe96b22adab1d9583a6c223.sol(196)

[31mViolation[0m for LockedEther in contract 'SampleToken':
    |
    |
  > |contract SampleToken is Ownable, ERC20, ERC20Detailed {
    |    /*** FUNCTIONS ***/
    |    /**
  at /unique_chucks/46/0x4820a69ee3d8f1de3fe96b22adab1d9583a6c223.sol(1111)

[33mWarning[0m for UnrestrictedWrite in contract 'SampleToken':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipTransferred(_owner, address(0));
  > |        _owner = address(0);
    |    }
    |
  at /unique_chucks/46/0x4820a69ee3d8f1de3fe96b22adab1d9583a6c223.sol(53)

[33mWarning[0m for UnrestrictedWrite in contract 'SampleToken':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_chucks/46/0x4820a69ee3d8f1de3fe96b22adab1d9583a6c223.sol(71)

[31mViolation[0m for LockedEther in contract 'SampleTokenFactory':
    |/* solhint-disable max-line-length */
    |/* solhint-disable separate-by-one-line-in-contract */
  > |contract SampleTokenFactory is Ownable, Manageable {
    |    address public whitelist;
    |
  at /unique_chucks/46/0x4820a69ee3d8f1de3fe96b22adab1d9583a6c223.sol(1143)

[33mWarning[0m for UnrestrictedWrite in contract 'SampleTokenFactory':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipTransferred(_owner, address(0));
  > |        _owner = address(0);
    |    }
    |
  at /unique_chucks/46/0x4820a69ee3d8f1de3fe96b22adab1d9583a6c223.sol(53)

[33mWarning[0m for UnrestrictedWrite in contract 'SampleTokenFactory':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_chucks/46/0x4820a69ee3d8f1de3fe96b22adab1d9583a6c223.sol(71)

[33mWarning[0m for UnrestrictedWrite in contract 'SampleTokenFactory':
    |     */
    |    function setManager(address _manager, bool _active) public onlyOwner onlyValidAddress(_manager) {
  > |        isManager[_manager] = _active;
    |        emit ChangedManager(_manager, _active);
    |    }
  at /unique_chucks/46/0x4820a69ee3d8f1de3fe96b22adab1d9583a6c223.sol(196)