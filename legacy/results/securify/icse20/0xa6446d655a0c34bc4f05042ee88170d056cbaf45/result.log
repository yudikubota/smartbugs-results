Processing contract: /unique_chucks/2/0xa6446d655a0c34bc4f05042ee88170d056cbaf45.sol:CaspianToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/2/0xa6446d655a0c34bc4f05042ee88170d056cbaf45.sol:CaspianTokenConfig
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/2/0xa6446d655a0c34bc4f05042ee88170d056cbaf45.sol:ERC20Interface
Processing contract: /unique_chucks/2/0xa6446d655a0c34bc4f05042ee88170d056cbaf45.sol:ERC20Token
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/2/0xa6446d655a0c34bc4f05042ee88170d056cbaf45.sol:Finalizable
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/2/0xa6446d655a0c34bc4f05042ee88170d056cbaf45.sol:FinalizableToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/2/0xa6446d655a0c34bc4f05042ee88170d056cbaf45.sol:Math
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/2/0xa6446d655a0c34bc4f05042ee88170d056cbaf45.sol:OpsManaged
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/2/0xa6446d655a0c34bc4f05042ee88170d056cbaf45.sol:Owned
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for LockedEther in contract 'CaspianToken':
    |
    |
  > |contract CaspianToken is FinalizableToken, CaspianTokenConfig {
    |
    |
  at /unique_chucks/2/0xa6446d655a0c34bc4f05042ee88170d056cbaf45.sol(411)

[31mViolation[0m for LockedEther in contract 'CaspianTokenConfig':
    |
    |
  > |contract CaspianTokenConfig {
    |
    |    string  public constant TOKEN_SYMBOL      = "CSP";
  at /unique_chucks/2/0xa6446d655a0c34bc4f05042ee88170d056cbaf45.sol(389)

[31mViolation[0m for LockedEther in contract 'ERC20Token':
    |
    |
  > |contract ERC20Token is ERC20Interface {
    |
    |   using Math for uint256;
  at /unique_chucks/2/0xa6446d655a0c34bc4f05042ee88170d056cbaf45.sol(234)

[31mViolation[0m for UnrestrictedWrite in contract 'ERC20Token':
    |   function transfer(address _to, uint256 _value) public returns (bool success) {
    |      balances[msg.sender] = balances[msg.sender].sub(_value);
  > |      balances[_to] = balances[_to].add(_value);
    |
    |      emit Transfer(msg.sender, _to, _value);
  at /unique_chucks/2/0xa6446d655a0c34bc4f05042ee88170d056cbaf45.sol(293)

[31mViolation[0m for UnrestrictedWrite in contract 'ERC20Token':
    |
    |   function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {
  > |      balances[_from] = balances[_from].sub(_value);
    |      allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
    |      balances[_to] = balances[_to].add(_value);
  at /unique_chucks/2/0xa6446d655a0c34bc4f05042ee88170d056cbaf45.sol(302)

[31mViolation[0m for UnrestrictedWrite in contract 'ERC20Token':
    |      balances[_from] = balances[_from].sub(_value);
    |      allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
  > |      balances[_to] = balances[_to].add(_value);
    |
    |      emit Transfer(_from, _to, _value);
  at /unique_chucks/2/0xa6446d655a0c34bc4f05042ee88170d056cbaf45.sol(304)

[33mWarning[0m for UnrestrictedWrite in contract 'Finalizable':
    |      require(_proposedOwner != owner);
    |
  > |      proposedOwner = _proposedOwner;
    |
    |      emit OwnershipTransferInitiated(proposedOwner);
  at /unique_chucks/2/0xa6446d655a0c34bc4f05042ee88170d056cbaf45.sol(119)

[33mWarning[0m for UnrestrictedWrite in contract 'Finalizable':
    |      require(msg.sender == proposedOwner);
    |
  > |      owner = msg.sender;
    |      proposedOwner = address(0);
    |
  at /unique_chucks/2/0xa6446d655a0c34bc4f05042ee88170d056cbaf45.sol(130)

[33mWarning[0m for UnrestrictedWrite in contract 'Finalizable':
    |
    |      owner = msg.sender;
  > |      proposedOwner = address(0);
    |
    |      emit OwnershipTransferCompleted(owner);
  at /unique_chucks/2/0xa6446d655a0c34bc4f05042ee88170d056cbaf45.sol(131)

[33mWarning[0m for UnrestrictedWrite in contract 'Finalizable':
    |      require(!finalized);
    |
  > |      finalized = true;
    |
    |      emit Finalized();
  at /unique_chucks/2/0xa6446d655a0c34bc4f05042ee88170d056cbaf45.sol(164)

[31mViolation[0m for LockedEther in contract 'FinalizableToken':
    |//    2. Finalization
    |//
  > |contract FinalizableToken is ERC20Token, OpsManaged, Finalizable {
    |
    |   using Math for uint256;
  at /unique_chucks/2/0xa6446d655a0c34bc4f05042ee88170d056cbaf45.sol(335)

[33mWarning[0m for UnrestrictedWrite in contract 'OpsManaged':
    |      require(_proposedOwner != owner);
    |
  > |      proposedOwner = _proposedOwner;
    |
    |      emit OwnershipTransferInitiated(proposedOwner);
  at /unique_chucks/2/0xa6446d655a0c34bc4f05042ee88170d056cbaf45.sol(119)

[33mWarning[0m for UnrestrictedWrite in contract 'OpsManaged':
    |      require(msg.sender == proposedOwner);
    |
  > |      owner = msg.sender;
    |      proposedOwner = address(0);
    |
  at /unique_chucks/2/0xa6446d655a0c34bc4f05042ee88170d056cbaf45.sol(130)

[33mWarning[0m for UnrestrictedWrite in contract 'OpsManaged':
    |
    |      owner = msg.sender;
  > |      proposedOwner = address(0);
    |
    |      emit OwnershipTransferCompleted(owner);
  at /unique_chucks/2/0xa6446d655a0c34bc4f05042ee88170d056cbaf45.sol(131)

[33mWarning[0m for UnrestrictedWrite in contract 'OpsManaged':
    |      require(_newOpsAddress != address(this));
    |
  > |      opsAddress = _newOpsAddress;
    |
    |      emit OpsAddressUpdated(opsAddress);
  at /unique_chucks/2/0xa6446d655a0c34bc4f05042ee88170d056cbaf45.sol(217)

[33mWarning[0m for UnrestrictedWrite in contract 'Owned':
    |      require(_proposedOwner != owner);
    |
  > |      proposedOwner = _proposedOwner;
    |
    |      emit OwnershipTransferInitiated(proposedOwner);
  at /unique_chucks/2/0xa6446d655a0c34bc4f05042ee88170d056cbaf45.sol(119)

[33mWarning[0m for UnrestrictedWrite in contract 'Owned':
    |      require(msg.sender == proposedOwner);
    |
  > |      owner = msg.sender;
    |      proposedOwner = address(0);
    |
  at /unique_chucks/2/0xa6446d655a0c34bc4f05042ee88170d056cbaf45.sol(130)

[33mWarning[0m for UnrestrictedWrite in contract 'Owned':
    |
    |      owner = msg.sender;
  > |      proposedOwner = address(0);
    |
    |      emit OwnershipTransferCompleted(owner);
  at /unique_chucks/2/0xa6446d655a0c34bc4f05042ee88170d056cbaf45.sol(131)