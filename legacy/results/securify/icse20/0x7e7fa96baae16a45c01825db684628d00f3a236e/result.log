Processing contract: /unique_chucks/44/0x7e7fa96baae16a45c01825db684628d00f3a236e.sol:Ownable
Processing contract: /unique_chucks/44/0x7e7fa96baae16a45c01825db684628d00f3a236e.sol:SplitPayment
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[33mWarning[0m for LockedEther in contract 'SplitPayment':
    |    }
    |}
  > |contract SplitPayment is Ownable {
    |    
    |    address payable[] public beneficiaries;
  at /unique_chucks/44/0x7e7fa96baae16a45c01825db684628d00f3a236e.sol(73)

[31mViolation[0m for RepeatedCall in contract 'SplitPayment':
    |        
    |        for (uint256 b = 0; b < len; b++) {
  > |            _beneficiaries[b].transfer(amount);
    |            emit LogPayout(_beneficiaries[b], amount);
    |        }
  at /unique_chucks/44/0x7e7fa96baae16a45c01825db684628d00f3a236e.sol(125)

[33mWarning[0m for TODAmount in contract 'SplitPayment':
    |        
    |        for (uint256 b = 0; b < len; b++) {
  > |            beneficiaries[b].transfer(amount);
    |            emit LogPayout(beneficiaries[b], amount);
    |        }
  at /unique_chucks/44/0x7e7fa96baae16a45c01825db684628d00f3a236e.sol(115)

[33mWarning[0m for TODAmount in contract 'SplitPayment':
    |        
    |        for (uint256 b = 0; b < len; b++) {
  > |            _beneficiaries[b].transfer(amount);
    |            emit LogPayout(_beneficiaries[b], amount);
    |        }
  at /unique_chucks/44/0x7e7fa96baae16a45c01825db684628d00f3a236e.sol(125)

[33mWarning[0m for TODReceiver in contract 'SplitPayment':
    |        
    |        for (uint256 b = 0; b < len; b++) {
  > |            beneficiaries[b].transfer(amount);
    |            emit LogPayout(beneficiaries[b], amount);
    |        }
  at /unique_chucks/44/0x7e7fa96baae16a45c01825db684628d00f3a236e.sol(115)

[33mWarning[0m for TODReceiver in contract 'SplitPayment':
    |        
    |        for (uint256 b = 0; b < len; b++) {
  > |            _beneficiaries[b].transfer(amount);
    |            emit LogPayout(_beneficiaries[b], amount);
    |        }
  at /unique_chucks/44/0x7e7fa96baae16a45c01825db684628d00f3a236e.sol(125)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'SplitPayment':
    |        
    |        for (uint256 b = 0; b < len; b++) {
  > |            beneficiaries[b].transfer(amount);
    |            emit LogPayout(beneficiaries[b], amount);
    |        }
  at /unique_chucks/44/0x7e7fa96baae16a45c01825db684628d00f3a236e.sol(115)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'SplitPayment':
    |        
    |        for (uint256 b = 0; b < len; b++) {
  > |            _beneficiaries[b].transfer(amount);
    |            emit LogPayout(_beneficiaries[b], amount);
    |        }
  at /unique_chucks/44/0x7e7fa96baae16a45c01825db684628d00f3a236e.sol(125)

[31mViolation[0m for UnrestrictedWrite in contract 'SplitPayment':
    |    }
    |}
  > |contract SplitPayment is Ownable {
    |    
    |    address payable[] public beneficiaries;
  at /unique_chucks/44/0x7e7fa96baae16a45c01825db684628d00f3a236e.sol(73)

[33mWarning[0m for UnrestrictedWrite in contract 'SplitPayment':
    |
    |/**
  > | * @title Ownable
    | * @dev The Ownable contract has an owner address, and provides basic authorization control
    | * functions, this simplifies the implementation of "user permissions".
  at /unique_chucks/44/0x7e7fa96baae16a45c01825db684628d00f3a236e.sol(4)

[33mWarning[0m for UnrestrictedWrite in contract 'SplitPayment':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipTransferred(_owner, address(0));
  > |        _owner = address(0);
    |    }
    |
  at /unique_chucks/44/0x7e7fa96baae16a45c01825db684628d00f3a236e.sol(52)

[33mWarning[0m for UnrestrictedWrite in contract 'SplitPayment':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_chucks/44/0x7e7fa96baae16a45c01825db684628d00f3a236e.sol(70)

[33mWarning[0m for UnrestrictedWrite in contract 'SplitPayment':
    |    }
    |}
  > |contract SplitPayment is Ownable {
    |    
    |    address payable[] public beneficiaries;
  at /unique_chucks/44/0x7e7fa96baae16a45c01825db684628d00f3a236e.sol(73)

[33mWarning[0m for UnrestrictedWrite in contract 'SplitPayment':
    |    
    |    function addBeneficiary(address payable _beneficiary) public onlyOwner {
  > |        beneficiaries.push(_beneficiary);
    |        emit AddedBeneficiary(_beneficiary);
    |    }
  at /unique_chucks/44/0x7e7fa96baae16a45c01825db684628d00f3a236e.sol(84)

[33mWarning[0m for UnrestrictedWrite in contract 'SplitPayment':
    |        // unless the to be deleted index is not last -> move last one here
    |        if (indexOfBeneficiary < beneficiaries.length - 1) {
  > |            beneficiaries[indexOfBeneficiary] = beneficiaries[beneficiaries.length - 1];
    |        }
    |
  at /unique_chucks/44/0x7e7fa96baae16a45c01825db684628d00f3a236e.sol(101)