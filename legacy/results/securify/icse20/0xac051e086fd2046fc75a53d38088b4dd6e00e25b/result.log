Processing contract: /unique_chucks/28/0xac051e086fd2046fc75a53d38088b4dd6e00e25b.sol:BasicToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/28/0xac051e086fd2046fc75a53d38088b4dd6e00e25b.sol:ERC20
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/28/0xac051e086fd2046fc75a53d38088b4dd6e00e25b.sol:ERC20Detailed
Processing contract: /unique_chucks/28/0xac051e086fd2046fc75a53d38088b4dd6e00e25b.sol:ERC20TokenMetadata
Processing contract: /unique_chucks/28/0xac051e086fd2046fc75a53d38088b4dd6e00e25b.sol:ERC20WithMetadata
Processing contract: /unique_chucks/28/0xac051e086fd2046fc75a53d38088b4dd6e00e25b.sol:IERC20
Processing contract: /unique_chucks/28/0xac051e086fd2046fc75a53d38088b4dd6e00e25b.sol:Ownable
Processing contract: /unique_chucks/28/0xac051e086fd2046fc75a53d38088b4dd6e00e25b.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/28/0xac051e086fd2046fc75a53d38088b4dd6e00e25b.sol:TokenFactory
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for LockedEther in contract 'BasicToken':
    | * `ERC20` functions.
    | */
  > |contract BasicToken is ERC20, ERC20Detailed, ERC20WithMetadata, Ownable {
    |
    |    event TokenURIChanged(string tokenURI);
  at /unique_chucks/28/0xac051e086fd2046fc75a53d38088b4dd6e00e25b.sol(425)

[31mViolation[0m for UnrestrictedWrite in contract 'BasicToken':
    | * `ERC20` functions.
    | */
  > |contract BasicToken is ERC20, ERC20Detailed, ERC20WithMetadata, Ownable {
    |
    |    event TokenURIChanged(string tokenURI);
  at /unique_chucks/28/0xac051e086fd2046fc75a53d38088b4dd6e00e25b.sol(425)

[33mWarning[0m for UnrestrictedWrite in contract 'BasicToken':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipTransferred(_owner, address(0));
  > |        _owner = address(0);
    |    }
    |
  at /unique_chucks/28/0xac051e086fd2046fc75a53d38088b4dd6e00e25b.sol(370)

[33mWarning[0m for UnrestrictedWrite in contract 'BasicToken':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_chucks/28/0xac051e086fd2046fc75a53d38088b4dd6e00e25b.sol(388)

[33mWarning[0m for UnrestrictedWrite in contract 'BasicToken':
    | * `ERC20` functions.
    | */
  > |contract BasicToken is ERC20, ERC20Detailed, ERC20WithMetadata, Ownable {
    |
    |    event TokenURIChanged(string tokenURI);
  at /unique_chucks/28/0xac051e086fd2046fc75a53d38088b4dd6e00e25b.sol(425)

[31mViolation[0m for MissingInputValidation in contract 'TokenFactory':
    |  event TokenCreated(address indexed token, address indexed issuer);
    |
  > |  function createToken(string memory name, string memory symbol, uint256 initialSupply, string memory tokenURI) public
    |    returns (address basicTokenAddress) {
    |    require(bytes(name).length != 0);
  at /unique_chucks/28/0xac051e086fd2046fc75a53d38088b4dd6e00e25b.sol(450)

[31mViolation[0m for RepeatedCall in contract 'TokenFactory':
    |    BasicToken basicToken = new BasicToken(name, symbol, initialSupply, tokenURI);
    |    basicToken.transfer(msg.sender, initialSupply);
  > |    basicToken.transferOwnership(msg.sender);
    |    basicTokenAddress = address(basicToken);
    |    emit TokenCreated(basicTokenAddress, msg.sender);
  at /unique_chucks/28/0xac051e086fd2046fc75a53d38088b4dd6e00e25b.sol(458)