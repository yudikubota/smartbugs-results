Processing contract: /unique_chucks/27/0xa512d49c8753c476bf5e9c87f6a11dbb71af054c.sol:HarukaTest01
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/27/0xa512d49c8753c476bf5e9c87f6a11dbb71af054c.sol:IERC20
Processing contract: /unique_chucks/27/0xa512d49c8753c476bf5e9c87f6a11dbb71af054c.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for LockedEther in contract 'HarukaTest01':
    |}
    |
  > |contract HarukaTest01 is IERC20 {
    |
    |    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);
  at /unique_chucks/27/0xa512d49c8753c476bf5e9c87f6a11dbb71af054c.sol(89)

[33mWarning[0m for UnrestrictedWrite in contract 'HarukaTest01':
    |    function setReleaseType(address _target, ReleaseType _type) public onlyOwner {
    |        require(_target != address(0));
  > |        _accountType[_target] = _type;
    |    }
    |
  at /unique_chucks/27/0xa512d49c8753c476bf5e9c87f6a11dbb71af054c.sol(332)

[33mWarning[0m for UnrestrictedWrite in contract 'HarukaTest01':
    |    // Only contract owner could call this
    |    function setReferenceTime(uint256 newTime) public onlyOwner {
  > |        reference_time = newTime;
    |    }
    |
  at /unique_chucks/27/0xa512d49c8753c476bf5e9c87f6a11dbb71af054c.sol(338)

[33mWarning[0m for UnrestrictedWrite in contract 'HarukaTest01':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(owner, newOwner);
  > |        owner = newOwner;
    |    }
    |}
  at /unique_chucks/27/0xa512d49c8753c476bf5e9c87f6a11dbb71af054c.sol(346)