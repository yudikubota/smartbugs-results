Processing contract: /unique_chucks/4/0x341ffd5852614e6a9189dc2931cb7ec3f10605b0.sol:CommunityVesting
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/4/0x341ffd5852614e6a9189dc2931cb7ec3f10605b0.sol:EcosystemVesting
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/4/0x341ffd5852614e6a9189dc2931cb7ec3f10605b0.sol:Ownable
Processing contract: /unique_chucks/4/0x341ffd5852614e6a9189dc2931cb7ec3f10605b0.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/4/0x341ffd5852614e6a9189dc2931cb7ec3f10605b0.sol:SeedPrivateAdvisorVesting
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/4/0x341ffd5852614e6a9189dc2931cb7ec3f10605b0.sol:TeamVesting
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/4/0x341ffd5852614e6a9189dc2931cb7ec3f10605b0.sol:TokenInterface
Processing contract: /unique_chucks/4/0x341ffd5852614e6a9189dc2931cb7ec3f10605b0.sol:Vesting
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[33mWarning[0m for UnrestrictedWrite in contract 'CommunityVesting':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipTransferred(_owner, address(0));
  > |        _owner = address(0);
    |    }
    |
  at /unique_chucks/4/0x341ffd5852614e6a9189dc2931cb7ec3f10605b0.sol(49)

[33mWarning[0m for UnrestrictedWrite in contract 'CommunityVesting':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_chucks/4/0x341ffd5852614e6a9189dc2931cb7ec3f10605b0.sol(67)

[33mWarning[0m for UnrestrictedWrite in contract 'CommunityVesting':
    |
    |            tokensToClaim = tokensRemaining;
  > |            delete holdings[beneficiary];
    |
    |        } else {
  at /unique_chucks/4/0x341ffd5852614e6a9189dc2931cb7ec3f10605b0.sol(154)

[33mWarning[0m for UnrestrictedWrite in contract 'CommunityVesting':
    |            tokensToClaim = tokensRemaining.sub(tokensNotToClaim);
    |            tokensRemaining = tokensNotToClaim;
  > |            holdings[beneficiary].tokensRemaining = tokensRemaining;
    |
    |        }
  at /unique_chucks/4/0x341ffd5852614e6a9189dc2931cb7ec3f10605b0.sol(163)

[33mWarning[0m for UnrestrictedWrite in contract 'CommunityVesting':
    |        onlyOwner
    |    {
  > |        totalCommunityTokensCommitted = totalCommunityTokensCommitted.add(_tokens);
    |        require(totalCommunityTokensCommitted <= CommunityCap);
    |
  at /unique_chucks/4/0x341ffd5852614e6a9189dc2931cb7ec3f10605b0.sol(182)

[33mWarning[0m for UnrestrictedWrite in contract 'CommunityVesting':
    |
    |        if (holdings[_beneficiary].tokensCommitted != 0) {
  > |            holdings[_beneficiary].tokensCommitted = holdings[_beneficiary].tokensCommitted.add(_tokens);
    |            holdings[_beneficiary].tokensRemaining = holdings[_beneficiary].tokensRemaining.add(_tokens);
    |
  at /unique_chucks/4/0x341ffd5852614e6a9189dc2931cb7ec3f10605b0.sol(186)

[33mWarning[0m for UnrestrictedWrite in contract 'CommunityVesting':
    |        if (holdings[_beneficiary].tokensCommitted != 0) {
    |            holdings[_beneficiary].tokensCommitted = holdings[_beneficiary].tokensCommitted.add(_tokens);
  > |            holdings[_beneficiary].tokensRemaining = holdings[_beneficiary].tokensRemaining.add(_tokens);
    |
    |            emit CommunityVestingUpdated(
  at /unique_chucks/4/0x341ffd5852614e6a9189dc2931cb7ec3f10605b0.sol(187)

[33mWarning[0m for UnrestrictedWrite in contract 'CommunityVesting':
    |
    |        } else {
  > |            holdings[_beneficiary] = Holding(
    |                _tokens,
    |                _tokens,
  at /unique_chucks/4/0x341ffd5852614e6a9189dc2931cb7ec3f10605b0.sol(196)

[33mWarning[0m for UnrestrictedWrite in contract 'EcosystemVesting':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipTransferred(_owner, address(0));
  > |        _owner = address(0);
    |    }
    |
  at /unique_chucks/4/0x341ffd5852614e6a9189dc2931cb7ec3f10605b0.sol(49)

[33mWarning[0m for UnrestrictedWrite in contract 'EcosystemVesting':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_chucks/4/0x341ffd5852614e6a9189dc2931cb7ec3f10605b0.sol(67)

[33mWarning[0m for UnrestrictedWrite in contract 'EcosystemVesting':
    |
    |            tokensToClaim = tokensRemaining;
  > |            delete holdings[beneficiary];
    |
    |        } else {
  at /unique_chucks/4/0x341ffd5852614e6a9189dc2931cb7ec3f10605b0.sol(242)

[33mWarning[0m for UnrestrictedWrite in contract 'EcosystemVesting':
    |            tokensToClaim = tokensRemaining.sub(tokensNotToClaim);
    |            tokensRemaining = tokensNotToClaim;
  > |            holdings[beneficiary].tokensRemaining = tokensRemaining;
    |
    |        }
  at /unique_chucks/4/0x341ffd5852614e6a9189dc2931cb7ec3f10605b0.sol(251)

[33mWarning[0m for UnrestrictedWrite in contract 'EcosystemVesting':
    |        onlyOwner
    |    {
  > |        totalEcosystemTokensCommitted = totalEcosystemTokensCommitted.add(_tokens);
    |        require(totalEcosystemTokensCommitted <= EcosystemCap);
    |
  at /unique_chucks/4/0x341ffd5852614e6a9189dc2931cb7ec3f10605b0.sol(270)

[33mWarning[0m for UnrestrictedWrite in contract 'EcosystemVesting':
    |
    |        if (holdings[_beneficiary].tokensCommitted != 0) {
  > |            holdings[_beneficiary].tokensCommitted = holdings[_beneficiary].tokensCommitted.add(_tokens);
    |            holdings[_beneficiary].tokensRemaining = holdings[_beneficiary].tokensRemaining.add(_tokens);
    |
  at /unique_chucks/4/0x341ffd5852614e6a9189dc2931cb7ec3f10605b0.sol(274)

[33mWarning[0m for UnrestrictedWrite in contract 'EcosystemVesting':
    |        if (holdings[_beneficiary].tokensCommitted != 0) {
    |            holdings[_beneficiary].tokensCommitted = holdings[_beneficiary].tokensCommitted.add(_tokens);
  > |            holdings[_beneficiary].tokensRemaining = holdings[_beneficiary].tokensRemaining.add(_tokens);
    |
    |            emit EcosystemVestingUpdated(
  at /unique_chucks/4/0x341ffd5852614e6a9189dc2931cb7ec3f10605b0.sol(275)

[33mWarning[0m for UnrestrictedWrite in contract 'EcosystemVesting':
    |
    |        } else {
  > |            holdings[_beneficiary] = Holding(
    |                _tokens,
    |                _tokens,
  at /unique_chucks/4/0x341ffd5852614e6a9189dc2931cb7ec3f10605b0.sol(284)

[33mWarning[0m for UnrestrictedWrite in contract 'SeedPrivateAdvisorVesting':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipTransferred(_owner, address(0));
  > |        _owner = address(0);
    |    }
    |
  at /unique_chucks/4/0x341ffd5852614e6a9189dc2931cb7ec3f10605b0.sol(49)

[33mWarning[0m for UnrestrictedWrite in contract 'SeedPrivateAdvisorVesting':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_chucks/4/0x341ffd5852614e6a9189dc2931cb7ec3f10605b0.sol(67)

[33mWarning[0m for UnrestrictedWrite in contract 'SeedPrivateAdvisorVesting':
    |
    |            tokensToClaim = tokensRemaining;
  > |            delete holdings[beneficiary];
    |
    |        } else {
  at /unique_chucks/4/0x341ffd5852614e6a9189dc2931cb7ec3f10605b0.sol(340)

[33mWarning[0m for UnrestrictedWrite in contract 'SeedPrivateAdvisorVesting':
    |            tokensToClaim = tokensRemaining.sub(tokensNotToClaim);
    |            tokensRemaining = tokensNotToClaim;
  > |            holdings[beneficiary].tokensRemaining = tokensRemaining;
    |
    |        }
  at /unique_chucks/4/0x341ffd5852614e6a9189dc2931cb7ec3f10605b0.sol(349)

[33mWarning[0m for UnrestrictedWrite in contract 'SeedPrivateAdvisorVesting':
    |        if (user == uint8(User.Seed)) {
    |            _user = User.Seed;
  > |            totalSeedTokensCommitted = totalSeedTokensCommitted.add(_tokens);
    |            require(totalSeedTokensCommitted <= SeedCap);
    |        } else if (user == uint8(User.Private)) {
  at /unique_chucks/4/0x341ffd5852614e6a9189dc2931cb7ec3f10605b0.sol(372)

[33mWarning[0m for UnrestrictedWrite in contract 'SeedPrivateAdvisorVesting':
    |        } else if (user == uint8(User.Private)) {
    |            _user = User.Private;
  > |            totalPrivateTokensCommitted = totalPrivateTokensCommitted.add(_tokens);
    |            require(totalPrivateTokensCommitted <= PrivateCap);
    |        } else if (user == uint8(User.Advisor)) {
  at /unique_chucks/4/0x341ffd5852614e6a9189dc2931cb7ec3f10605b0.sol(376)

[33mWarning[0m for UnrestrictedWrite in contract 'SeedPrivateAdvisorVesting':
    |        } else if (user == uint8(User.Advisor)) {
    |            _user = User.Advisor;
  > |            totalAdvisorTokensCommitted = totalAdvisorTokensCommitted.add(_tokens);
    |            require(totalAdvisorTokensCommitted <= AdvisorCap);
    |        } else {
  at /unique_chucks/4/0x341ffd5852614e6a9189dc2931cb7ec3f10605b0.sol(380)

[33mWarning[0m for UnrestrictedWrite in contract 'SeedPrivateAdvisorVesting':
    |
    |        if (holdings[_beneficiary].tokensCommitted != 0) {
  > |            holdings[_beneficiary].tokensCommitted = holdings[_beneficiary].tokensCommitted.add(_tokens);
    |            holdings[_beneficiary].tokensRemaining = holdings[_beneficiary].tokensRemaining.add(_tokens);
    |
  at /unique_chucks/4/0x341ffd5852614e6a9189dc2931cb7ec3f10605b0.sol(387)

[33mWarning[0m for UnrestrictedWrite in contract 'SeedPrivateAdvisorVesting':
    |        if (holdings[_beneficiary].tokensCommitted != 0) {
    |            holdings[_beneficiary].tokensCommitted = holdings[_beneficiary].tokensCommitted.add(_tokens);
  > |            holdings[_beneficiary].tokensRemaining = holdings[_beneficiary].tokensRemaining.add(_tokens);
    |
    |            emit VestingUpdated(
  at /unique_chucks/4/0x341ffd5852614e6a9189dc2931cb7ec3f10605b0.sol(388)

[33mWarning[0m for UnrestrictedWrite in contract 'SeedPrivateAdvisorVesting':
    |
    |        } else {
  > |            holdings[_beneficiary] = Holding(
    |                _tokens,
    |                _tokens,
  at /unique_chucks/4/0x341ffd5852614e6a9189dc2931cb7ec3f10605b0.sol(398)

[33mWarning[0m for UnrestrictedWrite in contract 'TeamVesting':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipTransferred(_owner, address(0));
  > |        _owner = address(0);
    |    }
    |
  at /unique_chucks/4/0x341ffd5852614e6a9189dc2931cb7ec3f10605b0.sol(49)

[33mWarning[0m for UnrestrictedWrite in contract 'TeamVesting':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_chucks/4/0x341ffd5852614e6a9189dc2931cb7ec3f10605b0.sol(67)

[33mWarning[0m for UnrestrictedWrite in contract 'TeamVesting':
    |
    |            tokensToClaim = tokensRemaining;
  > |            delete holdings[beneficiary];
    |
    |        } else {
  at /unique_chucks/4/0x341ffd5852614e6a9189dc2931cb7ec3f10605b0.sol(447)

[33mWarning[0m for UnrestrictedWrite in contract 'TeamVesting':
    |            tokensToClaim = tokensRemaining.sub(tokensNotToClaim);
    |            tokensRemaining = tokensNotToClaim;
  > |            holdings[beneficiary].tokensRemaining = tokensRemaining;
    |
    |        }
  at /unique_chucks/4/0x341ffd5852614e6a9189dc2931cb7ec3f10605b0.sol(457)

[33mWarning[0m for UnrestrictedWrite in contract 'TeamVesting':
    |        onlyOwner
    |    {
  > |        totalTeamTokensCommitted = totalTeamTokensCommitted.add(_tokens);
    |        require(totalTeamTokensCommitted <= TeamCap);
    |
  at /unique_chucks/4/0x341ffd5852614e6a9189dc2931cb7ec3f10605b0.sol(476)

[33mWarning[0m for UnrestrictedWrite in contract 'TeamVesting':
    |
    |        if (holdings[_beneficiary].tokensCommitted != 0) {
  > |            holdings[_beneficiary].tokensCommitted = holdings[_beneficiary].tokensCommitted.add(_tokens);
    |            holdings[_beneficiary].tokensRemaining = holdings[_beneficiary].tokensRemaining.add(_tokens);
    |
  at /unique_chucks/4/0x341ffd5852614e6a9189dc2931cb7ec3f10605b0.sol(480)

[33mWarning[0m for UnrestrictedWrite in contract 'TeamVesting':
    |        if (holdings[_beneficiary].tokensCommitted != 0) {
    |            holdings[_beneficiary].tokensCommitted = holdings[_beneficiary].tokensCommitted.add(_tokens);
  > |            holdings[_beneficiary].tokensRemaining = holdings[_beneficiary].tokensRemaining.add(_tokens);
    |
    |            emit TeamVestingUpdated(
  at /unique_chucks/4/0x341ffd5852614e6a9189dc2931cb7ec3f10605b0.sol(481)

[33mWarning[0m for UnrestrictedWrite in contract 'TeamVesting':
    |
    |        } else {
  > |            holdings[_beneficiary] = Holding(
    |                _tokens,
    |                _tokens,
  at /unique_chucks/4/0x341ffd5852614e6a9189dc2931cb7ec3f10605b0.sol(490)

[33mWarning[0m for UnrestrictedWrite in contract 'Vesting':
    |        }
    |
  > |        totalAllocated = totalAllocated.sub(tokensToClaim);
    |        require(token.transfer(msg.sender, tokensToClaim), "Insufficient balance in vesting contract");
    |        emit TokensReleased(msg.sender, tokensToClaim, userCategory[msg.sender]);
  at /unique_chucks/4/0x341ffd5852614e6a9189dc2931cb7ec3f10605b0.sol(552)

[33mWarning[0m for UnrestrictedWrite in contract 'Vesting':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipTransferred(_owner, address(0));
  > |        _owner = address(0);
    |    }
    |
  at /unique_chucks/4/0x341ffd5852614e6a9189dc2931cb7ec3f10605b0.sol(49)

[33mWarning[0m for UnrestrictedWrite in contract 'Vesting':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_chucks/4/0x341ffd5852614e6a9189dc2931cb7ec3f10605b0.sol(67)

[33mWarning[0m for UnrestrictedWrite in contract 'Vesting':
    |
    |        require( uint8(userCategory[_beneficiary]) == 0 || userCategory[_beneficiary] == user, "cannot change user category" );
  > |        userCategory[_beneficiary] = user;
    |        totalAllocated = totalAllocated.add(_tokens);
    |
  at /unique_chucks/4/0x341ffd5852614e6a9189dc2931cb7ec3f10605b0.sol(570)

[33mWarning[0m for UnrestrictedWrite in contract 'Vesting':
    |        require( uint8(userCategory[_beneficiary]) == 0 || userCategory[_beneficiary] == user, "cannot change user category" );
    |        userCategory[_beneficiary] = user;
  > |        totalAllocated = totalAllocated.add(_tokens);
    |
    |        if (category == 1 || category == 2 || category == 3) {
  at /unique_chucks/4/0x341ffd5852614e6a9189dc2931cb7ec3f10605b0.sol(571)