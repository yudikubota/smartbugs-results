Processing contract: /unique_chucks/46/0x364fa53b2654f7621f301ddaac03486abeee55d9.sol:ContractTokenERC20
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/46/0x364fa53b2654f7621f301ddaac03486abeee55d9.sol:HGHGHGHGHGToken
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/46/0x364fa53b2654f7621f301ddaac03486abeee55d9.sol:tokenRecipient
[31mViolation[0m for LockedEther in contract 'ContractTokenERC20':
    |interface tokenRecipient { function receiveApproval(address _from, uint256 _value, address _token, bytes calldata _extraData) external; }
    |
  > |contract ContractTokenERC20 {
    |    // Public variables of the token
    |    string public name;
  at /unique_chucks/46/0x364fa53b2654f7621f301ddaac03486abeee55d9.sol(7)

[31mViolation[0m for MissingInputValidation in contract 'ContractTokenERC20':
    |
    |    // This creates an array with all balances
  > |    mapping (address => uint256) public balanceOf;
    |
    |    // This generates a public event on the blockchain that will notify clients
  at /unique_chucks/46/0x364fa53b2654f7621f301ddaac03486abeee55d9.sol(16)

[31mViolation[0m for UnrestrictedWrite in contract 'ContractTokenERC20':
    |        uint previousBalances = balanceOf[_from] + balanceOf[_to];
    |        // Subtract from the sender
  > |        balanceOf[_from] -= _value;
    |        // Add the same to the recipient
    |        balanceOf[_to] += _value;
  at /unique_chucks/46/0x364fa53b2654f7621f301ddaac03486abeee55d9.sol(50)

[31mViolation[0m for UnrestrictedWrite in contract 'ContractTokenERC20':
    |        balanceOf[_from] -= _value;
    |        // Add the same to the recipient
  > |        balanceOf[_to] += _value;
    |        emit Transfer(_from, _to, _value);
    |        // Asserts are used to use static analysis to find bugs in your code. They should never fail
  at /unique_chucks/46/0x364fa53b2654f7621f301ddaac03486abeee55d9.sol(52)

[31mViolation[0m for LockedEther in contract 'HGHGHGHGHGToken':
    |/******************************************/
    |
  > |contract HGHGHGHGHGToken is ContractTokenERC20 {
    |
    |
  at /unique_chucks/46/0x364fa53b2654f7621f301ddaac03486abeee55d9.sol(80)

[31mViolation[0m for MissingInputValidation in contract 'HGHGHGHGHGToken':
    |
    |    // This creates an array with all balances
  > |    mapping (address => uint256) public balanceOf;
    |
    |    // This generates a public event on the blockchain that will notify clients
  at /unique_chucks/46/0x364fa53b2654f7621f301ddaac03486abeee55d9.sol(16)

[31mViolation[0m for UnrestrictedWrite in contract 'HGHGHGHGHGToken':
    |        require (balanceOf[_from] >= _value);                   // Check if the sender has enough
    |        require (balanceOf[_to] + _value >= balanceOf[_to]);    // Check for overflows
  > |        balanceOf[_from] -= _value;                             // Subtract from the sender
    |        balanceOf[_to] += _value;                               // Add the same to the recipient
    |        emit Transfer(_from, _to, _value);
  at /unique_chucks/46/0x364fa53b2654f7621f301ddaac03486abeee55d9.sol(96)

[31mViolation[0m for UnrestrictedWrite in contract 'HGHGHGHGHGToken':
    |        require (balanceOf[_to] + _value >= balanceOf[_to]);    // Check for overflows
    |        balanceOf[_from] -= _value;                             // Subtract from the sender
  > |        balanceOf[_to] += _value;                               // Add the same to the recipient
    |        emit Transfer(_from, _to, _value);
    |    }
  at /unique_chucks/46/0x364fa53b2654f7621f301ddaac03486abeee55d9.sol(97)