Processing contract: /unique_chucks/20/0xd67069d5c76028c81cbcba7c8fa0253d6aad3601.sol:IERC20
Processing contract: /unique_chucks/20/0xd67069d5c76028c81cbcba7c8fa0253d6aad3601.sol:IterableMap
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/20/0xd67069d5c76028c81cbcba7c8fa0253d6aad3601.sol:Ownable
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/20/0xd67069d5c76028c81cbcba7c8fa0253d6aad3601.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/20/0xd67069d5c76028c81cbcba7c8fa0253d6aad3601.sol:ZmineVoteBurn
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[33mWarning[0m for UnrestrictedWrite in contract 'Ownable':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(owner, newOwner);
  > |        owner = newOwner;
    |    }
    |}
  at /unique_chucks/20/0xd67069d5c76028c81cbcba7c8fa0253d6aad3601.sol(196)

[31mViolation[0m for RepeatedCall in contract 'ZmineVoteBurn':
    |        uint256 amount = reclaimTokenMap.get(msg.sender);
    |        require(amount > 0);
  > |        require(token.balanceOf(address(this)) >= amount);
    |          
    |        // transfer token back to sender
  at /unique_chucks/20/0xd67069d5c76028c81cbcba7c8fa0253d6aad3601.sol(306)

[31mViolation[0m for RepeatedCall in contract 'ZmineVoteBurn':
    |        require(reclaimTokenMap.size() == 0);
    |        require(token.balanceOf(address(this)) > 0);
  > |        token.transfer(owner, token.balanceOf(address(this)));
    |    }
    |}
  at /unique_chucks/20/0xd67069d5c76028c81cbcba7c8fa0253d6aad3601.sol(388)

[33mWarning[0m for UnrestrictedWrite in contract 'ZmineVoteBurn':
    |}
    |
  > |contract ZmineVoteBurn is Ownable {
    |  
    |    // Use itmap for all functions on the struct
  at /unique_chucks/20/0xd67069d5c76028c81cbcba7c8fa0253d6aad3601.sol(200)

[33mWarning[0m for UnrestrictedWrite in contract 'ZmineVoteBurn':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(owner, newOwner);
  > |        owner = newOwner;
    |    }
    |}
  at /unique_chucks/20/0xd67069d5c76028c81cbcba7c8fa0253d6aad3601.sol(196)