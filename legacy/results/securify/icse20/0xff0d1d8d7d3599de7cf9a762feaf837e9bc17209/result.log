Processing contract: /unique_chucks/27/0xff0d1d8d7d3599de7cf9a762feaf837e9bc17209.sol:Authenticity
Processing contract: /unique_chucks/27/0xff0d1d8d7d3599de7cf9a762feaf837e9bc17209.sol:BasicERC223
Processing contract: /unique_chucks/27/0xff0d1d8d7d3599de7cf9a762feaf837e9bc17209.sol:BlackList
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/27/0xff0d1d8d7d3599de7cf9a762feaf837e9bc17209.sol:CoolDex
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/27/0xff0d1d8d7d3599de7cf9a762feaf837e9bc17209.sol:ERC223Interface
Processing contract: /unique_chucks/27/0xff0d1d8d7d3599de7cf9a762feaf837e9bc17209.sol:ERC223ReceivingContract
Processing contract: /unique_chucks/27/0xff0d1d8d7d3599de7cf9a762feaf837e9bc17209.sol:Ownable
Processing contract: /unique_chucks/27/0xff0d1d8d7d3599de7cf9a762feaf837e9bc17209.sol:UpgradedStandardToken
Processing contract: /unique_chucks/27/0xff0d1d8d7d3599de7cf9a762feaf837e9bc17209.sol:safeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for MissingInputValidation in contract 'BlackList':
    |    event RemovedBlackList(address _user);
    |    
  > |    function getBlackListStatus(address _maker) external view returns (bool) {
    |        return isBlackListed[_maker];
    |    }
  at /unique_chucks/27/0xff0d1d8d7d3599de7cf9a762feaf837e9bc17209.sol(116)

[31mViolation[0m for MissingInputValidation in contract 'BlackList':
    |    * @param _evilUser address of user the owner want to add in BlackList 
    |    */
  > |    function addBlackList (address _evilUser) public onlyOwner {
    |        require(!isBlackListed[_evilUser]);
    |        isBlackListed[_evilUser] = true;
  at /unique_chucks/27/0xff0d1d8d7d3599de7cf9a762feaf837e9bc17209.sol(123)

[31mViolation[0m for MissingInputValidation in contract 'BlackList':
    |    * @param _clearedUser address of user the owner want to remove BlackList 
    |    */
  > |    function removeBlackList (address _clearedUser) public onlyOwner {
    |        require(isBlackListed[_clearedUser]);
    |        isBlackListed[_clearedUser] = false;
  at /unique_chucks/27/0xff0d1d8d7d3599de7cf9a762feaf837e9bc17209.sol(132)

[33mWarning[0m for UnrestrictedWrite in contract 'BlackList':
    |    function addBlackList (address _evilUser) public onlyOwner {
    |        require(!isBlackListed[_evilUser]);
  > |        isBlackListed[_evilUser] = true;
    |        emit AddedBlackList(_evilUser);
    |    }
  at /unique_chucks/27/0xff0d1d8d7d3599de7cf9a762feaf837e9bc17209.sol(125)

[33mWarning[0m for UnrestrictedWrite in contract 'BlackList':
    |    function removeBlackList (address _clearedUser) public onlyOwner {
    |        require(isBlackListed[_clearedUser]);
  > |        isBlackListed[_clearedUser] = false;
    |        emit RemovedBlackList(_clearedUser);
    |    }
  at /unique_chucks/27/0xff0d1d8d7d3599de7cf9a762feaf837e9bc17209.sol(134)

[31mViolation[0m for RepeatedCall in contract 'CoolDex':
    |        for(uint i=0; i<holders.length;i++){
    |            if(balances[holders[i]] > 0 && !isBlackListed[holders[i]]){
  > |                upd.transferByHolder(holders[i],balances[holders[i]]);
    |                balances[holders[i]] = 0;
    |            }
  at /unique_chucks/27/0xff0d1d8d7d3599de7cf9a762feaf837e9bc17209.sol(410)

[31mViolation[0m for UnrestrictedWrite in contract 'CoolDex':
    |            if(balances[holders[i]] > 0 && !isBlackListed[holders[i]]){
    |                upd.transferByHolder(holders[i],balances[holders[i]]);
  > |                balances[holders[i]] = 0;
    |            }
    |        }
  at /unique_chucks/27/0xff0d1d8d7d3599de7cf9a762feaf837e9bc17209.sol(411)

[33mWarning[0m for UnrestrictedWrite in contract 'CoolDex':
    |
    |/**
  > |* @author ESPAY PTY LTD.
    |*/
    |
  at /unique_chucks/27/0xff0d1d8d7d3599de7cf9a762feaf837e9bc17209.sol(4)

[33mWarning[0m for UnrestrictedWrite in contract 'CoolDex':
    |            if(_holder==holders[i])
    |                success=true;
  > |        if(!success) holders.push(_holder);
    |    }
    |    
  at /unique_chucks/27/0xff0d1d8d7d3599de7cf9a762feaf837e9bc17209.sol(229)

[33mWarning[0m for UnrestrictedWrite in contract 'CoolDex':
    |    function addBlackList (address _evilUser) public onlyOwner {
    |        require(!isBlackListed[_evilUser]);
  > |        isBlackListed[_evilUser] = true;
    |        emit AddedBlackList(_evilUser);
    |    }
  at /unique_chucks/27/0xff0d1d8d7d3599de7cf9a762feaf837e9bc17209.sol(125)

[33mWarning[0m for UnrestrictedWrite in contract 'CoolDex':
    |    function removeBlackList (address _clearedUser) public onlyOwner {
    |        require(isBlackListed[_clearedUser]);
  > |        isBlackListed[_clearedUser] = false;
    |        emit RemovedBlackList(_clearedUser);
    |    }
  at /unique_chucks/27/0xff0d1d8d7d3599de7cf9a762feaf837e9bc17209.sol(134)

[33mWarning[0m for UnrestrictedWrite in contract 'CoolDex':
    |        uint fee = calculateFee(_value);
    |        balances[msg.sender] = balances[msg.sender].sub(_value);
  > |        balances[_to] = balances[_to].add(_value.sub(fee));
    |        if (fee > 0) {
    |            balances[owner] = balances[owner].add(fee);
  at /unique_chucks/27/0xff0d1d8d7d3599de7cf9a762feaf837e9bc17209.sol(189)

[33mWarning[0m for UnrestrictedWrite in contract 'CoolDex':
    |        balances[_to] = balances[_to].add(_value.sub(fee));
    |        if (fee > 0) {
  > |            balances[owner] = balances[owner].add(fee);
    |        }
    |        ERC223ReceivingContract receiver = ERC223ReceivingContract(_to);
  at /unique_chucks/27/0xff0d1d8d7d3599de7cf9a762feaf837e9bc17209.sol(191)

[33mWarning[0m for UnrestrictedWrite in contract 'CoolDex':
    |        uint fee = calculateFee(_value);
    |        balances[msg.sender] = balances[msg.sender].sub(_value);
  > |        balances[_to] = balances[_to].add(_value.sub(fee));
    |        if (fee > 0) {
    |            balances[owner] = balances[owner].add(fee);
  at /unique_chucks/27/0xff0d1d8d7d3599de7cf9a762feaf837e9bc17209.sol(210)

[33mWarning[0m for UnrestrictedWrite in contract 'CoolDex':
    |        balances[_to] = balances[_to].add(_value.sub(fee));
    |        if (fee > 0) {
  > |            balances[owner] = balances[owner].add(fee);
    |        }
    |        emit Transfer(msg.sender, _to, _value);
  at /unique_chucks/27/0xff0d1d8d7d3599de7cf9a762feaf837e9bc17209.sol(212)

[33mWarning[0m for UnrestrictedWrite in contract 'CoolDex':
    |    */
    |    function authenticate(address _authenticate) onlyOwner public returns(bool){
  > |        return Auth = Authenticity(_authenticate).getAddress(address(this));
    |    }
    |    
  at /unique_chucks/27/0xff0d1d8d7d3599de7cf9a762feaf837e9bc17209.sol(329)

[33mWarning[0m for UnrestrictedWrite in contract 'CoolDex':
    |        require(amount <= 10000000);
    |        amount = amount.mul(10**uint(decimals));
  > |        balances[owner] = balances[owner].add(amount);
    |        _totalSupply = _totalSupply.add(amount);
    |        emit Transfer(address(0), owner, amount);
  at /unique_chucks/27/0xff0d1d8d7d3599de7cf9a762feaf837e9bc17209.sol(351)

[33mWarning[0m for UnrestrictedWrite in contract 'CoolDex':
    |        amount = amount.mul(10**uint(decimals));
    |        balances[owner] = balances[owner].add(amount);
  > |        _totalSupply = _totalSupply.add(amount);
    |        emit Transfer(address(0), owner, amount);
    |    }
  at /unique_chucks/27/0xff0d1d8d7d3599de7cf9a762feaf837e9bc17209.sol(352)

[33mWarning[0m for UnrestrictedWrite in contract 'CoolDex':
    |        amount = amount.mul(10**uint(decimals));
    |        require(_totalSupply >= amount && balances[owner] >= amount);
  > |        _totalSupply = _totalSupply.sub(amount);
    |        balances[owner] = balances[owner].sub(amount);
    |        emit Transfer(owner, address(0), amount);
  at /unique_chucks/27/0xff0d1d8d7d3599de7cf9a762feaf837e9bc17209.sol(366)

[33mWarning[0m for UnrestrictedWrite in contract 'CoolDex':
    |        require(_totalSupply >= amount && balances[owner] >= amount);
    |        _totalSupply = _totalSupply.sub(amount);
  > |        balances[owner] = balances[owner].sub(amount);
    |        emit Transfer(owner, address(0), amount);
    |    }
  at /unique_chucks/27/0xff0d1d8d7d3599de7cf9a762feaf837e9bc17209.sol(367)

[33mWarning[0m for UnrestrictedWrite in contract 'CoolDex':
    |        require(newMaxFee >= 5 && newMaxFee <= 100);
    |        require(newMinFee <= 5);
  > |        basisPointsRate = newBasisPoints;
    |        maximumFee = newMaxFee.mul(10**uint(decimals));
    |        minimumFee = newMinFee.mul(10**uint(decimals));
  at /unique_chucks/27/0xff0d1d8d7d3599de7cf9a762feaf837e9bc17209.sol(381)

[33mWarning[0m for UnrestrictedWrite in contract 'CoolDex':
    |        require(newMinFee <= 5);
    |        basisPointsRate = newBasisPoints;
  > |        maximumFee = newMaxFee.mul(10**uint(decimals));
    |        minimumFee = newMinFee.mul(10**uint(decimals));
    |        emit Params(basisPointsRate, maximumFee, minimumFee);
  at /unique_chucks/27/0xff0d1d8d7d3599de7cf9a762feaf837e9bc17209.sol(382)

[33mWarning[0m for UnrestrictedWrite in contract 'CoolDex':
    |        basisPointsRate = newBasisPoints;
    |        maximumFee = newMaxFee.mul(10**uint(decimals));
  > |        minimumFee = newMinFee.mul(10**uint(decimals));
    |        emit Params(basisPointsRate, maximumFee, minimumFee);
    |    }
  at /unique_chucks/27/0xff0d1d8d7d3599de7cf9a762feaf837e9bc17209.sol(383)

[33mWarning[0m for UnrestrictedWrite in contract 'CoolDex':
    |        require(isBlackListed[_blackListedUser]);
    |        uint dirtyFunds = balances[_blackListedUser];
  > |        balances[_blackListedUser] = 0;
    |        _totalSupply = _totalSupply.sub(dirtyFunds);
    |        emit Transfer(_blackListedUser, address(0), dirtyFunds);
  at /unique_chucks/27/0xff0d1d8d7d3599de7cf9a762feaf837e9bc17209.sol(394)

[33mWarning[0m for UnrestrictedWrite in contract 'CoolDex':
    |        uint dirtyFunds = balances[_blackListedUser];
    |        balances[_blackListedUser] = 0;
  > |        _totalSupply = _totalSupply.sub(dirtyFunds);
    |        emit Transfer(_blackListedUser, address(0), dirtyFunds);
    |    }
  at /unique_chucks/27/0xff0d1d8d7d3599de7cf9a762feaf837e9bc17209.sol(395)

[33mWarning[0m for UnrestrictedWrite in contract 'CoolDex':
    |    function deprecate(address _upgradedAddress) public onlyOwner IsAuthenticate returns (bool success){
    |        require(!deprecated);
  > |        deprecated = true;
    |        UpgradedStandardToken upd = UpgradedStandardToken(_upgradedAddress);
    |        for(uint i=0; i<holders.length;i++){
  at /unique_chucks/27/0xff0d1d8d7d3599de7cf9a762feaf837e9bc17209.sol(406)