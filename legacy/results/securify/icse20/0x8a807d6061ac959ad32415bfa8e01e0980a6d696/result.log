Processing contract: /unique_chucks/19/0x8a807d6061ac959ad32415bfa8e01e0980a6d696.sol:ERC20
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/19/0x8a807d6061ac959ad32415bfa8e01e0980a6d696.sol:ERC20Detailed
Processing contract: /unique_chucks/19/0x8a807d6061ac959ad32415bfa8e01e0980a6d696.sol:GameWave
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/19/0x8a807d6061ac959ad32415bfa8e01e0980a6d696.sol:IERC20
Processing contract: /unique_chucks/19/0x8a807d6061ac959ad32415bfa8e01e0980a6d696.sol:Ownable
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/19/0x8a807d6061ac959ad32415bfa8e01e0980a6d696.sol:SafeERC20
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/19/0x8a807d6061ac959ad32415bfa8e01e0980a6d696.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for DAOConstantGas in contract 'GameWave':
    |  function startPayments() public {
    |    require(block.timestamp >= paymentsTime + 30 days);
  > |    owner.transfer(totalPaymentAmount.sub(lastTotalPaymentAmount));
    |    totalPaymentAmount = address(this).balance;
    |    paymentsTime = block.timestamp;
  at /unique_chucks/19/0x8a807d6061ac959ad32415bfa8e01e0980a6d696.sol(504)

[33mWarning[0m for TODAmount in contract 'GameWave':
    |    lastWithdrawTime[_holder] = block.timestamp;
    |    lastTotalPaymentAmount = lastTotalPaymentAmount.add(dividends);
  > |    _holder.transfer(dividends);
    |  }
    |
  at /unique_chucks/19/0x8a807d6061ac959ad32415bfa8e01e0980a6d696.sol(494)

[33mWarning[0m for TODAmount in contract 'GameWave':
    |  function startPayments() public {
    |    require(block.timestamp >= paymentsTime + 30 days);
  > |    owner.transfer(totalPaymentAmount.sub(lastTotalPaymentAmount));
    |    totalPaymentAmount = address(this).balance;
    |    paymentsTime = block.timestamp;
  at /unique_chucks/19/0x8a807d6061ac959ad32415bfa8e01e0980a6d696.sol(504)

[33mWarning[0m for TODReceiver in contract 'GameWave':
    |  function startPayments() public {
    |    require(block.timestamp >= paymentsTime + 30 days);
  > |    owner.transfer(totalPaymentAmount.sub(lastTotalPaymentAmount));
    |    totalPaymentAmount = address(this).balance;
    |    paymentsTime = block.timestamp;
  at /unique_chucks/19/0x8a807d6061ac959ad32415bfa8e01e0980a6d696.sol(504)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'GameWave':
    |  function startPayments() public {
    |    require(block.timestamp >= paymentsTime + 30 days);
  > |    owner.transfer(totalPaymentAmount.sub(lastTotalPaymentAmount));
    |    totalPaymentAmount = address(this).balance;
    |    paymentsTime = block.timestamp;
  at /unique_chucks/19/0x8a807d6061ac959ad32415bfa8e01e0980a6d696.sol(504)

[33mWarning[0m for UnrestrictedWrite in contract 'GameWave':
    |  function transferOwnership(address payable newOwner) public onlyOwner {
    |    require(newOwner != address(0));
  > |    owner = newOwner;
    |  }
    |}
  at /unique_chucks/19/0x8a807d6061ac959ad32415bfa8e01e0980a6d696.sol(438)

[33mWarning[0m for UnrestrictedWrite in contract 'GameWave':
    |    require(block.timestamp >= paymentsTime + 30 days);
    |    owner.transfer(totalPaymentAmount.sub(lastTotalPaymentAmount));
  > |    totalPaymentAmount = address(this).balance;
    |    paymentsTime = block.timestamp;
    |    lastTotalPaymentAmount = 0;
  at /unique_chucks/19/0x8a807d6061ac959ad32415bfa8e01e0980a6d696.sol(505)

[33mWarning[0m for UnrestrictedWrite in contract 'GameWave':
    |    owner.transfer(totalPaymentAmount.sub(lastTotalPaymentAmount));
    |    totalPaymentAmount = address(this).balance;
  > |    paymentsTime = block.timestamp;
    |    lastTotalPaymentAmount = 0;
    |  }
  at /unique_chucks/19/0x8a807d6061ac959ad32415bfa8e01e0980a6d696.sol(506)

[33mWarning[0m for UnrestrictedWrite in contract 'GameWave':
    |    totalPaymentAmount = address(this).balance;
    |    paymentsTime = block.timestamp;
  > |    lastTotalPaymentAmount = 0;
    |  }
    |}
  at /unique_chucks/19/0x8a807d6061ac959ad32415bfa8e01e0980a6d696.sol(507)

[33mWarning[0m for UnrestrictedWrite in contract 'Ownable':
    |  function transferOwnership(address payable newOwner) public onlyOwner {
    |    require(newOwner != address(0));
  > |    owner = newOwner;
    |  }
    |}
  at /unique_chucks/19/0x8a807d6061ac959ad32415bfa8e01e0980a6d696.sol(438)