Processing contract: /unique_chucks/9/0x8c152e933e7f20c3cca0ab7cad4d4bf1bc6e00e4.sol:FreezeToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/9/0x8c152e933e7f20c3cca0ab7cad4d4bf1bc6e00e4.sol:Ownable
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/9/0x8c152e933e7f20c3cca0ab7cad4d4bf1bc6e00e4.sol:Pausable
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/9/0x8c152e933e7f20c3cca0ab7cad4d4bf1bc6e00e4.sol:PausableToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/9/0x8c152e933e7f20c3cca0ab7cad4d4bf1bc6e00e4.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/9/0x8c152e933e7f20c3cca0ab7cad4d4bf1bc6e00e4.sol:StandardToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/9/0x8c152e933e7f20c3cca0ab7cad4d4bf1bc6e00e4.sol:_0xLitecoin
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[33mWarning[0m for UnrestrictedWrite in contract 'FreezeToken':
    |
    |        balances[msg.sender] = balances[msg.sender].sub(_value);
  > |        balances[_to] = balances[_to].add(_value);
    |        emit Transfer(msg.sender, _to, _value);
    |        return true;
  at /unique_chucks/9/0x8c152e933e7f20c3cca0ab7cad4d4bf1bc6e00e4.sol(174)

[33mWarning[0m for UnrestrictedWrite in contract 'FreezeToken':
    |        require(_value <= allowed[_from][msg.sender]);
    |
  > |        balances[_from] = balances[_from].sub(_value);
    |        balances[_to] = balances[_to].add(_value);
    |        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
  at /unique_chucks/9/0x8c152e933e7f20c3cca0ab7cad4d4bf1bc6e00e4.sol(205)

[33mWarning[0m for UnrestrictedWrite in contract 'FreezeToken':
    |
    |        balances[_from] = balances[_from].sub(_value);
  > |        balances[_to] = balances[_to].add(_value);
    |        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
    |        emit Transfer(_from, _to, _value);
  at /unique_chucks/9/0x8c152e933e7f20c3cca0ab7cad4d4bf1bc6e00e4.sol(206)

[33mWarning[0m for UnrestrictedWrite in contract 'FreezeToken':
    |        require(_newOwner != address(0));
    |        emit OwnershipTransferred(owner, _newOwner);
  > |        owner = _newOwner;
    |    }
    |}
  at /unique_chucks/9/0x8c152e933e7f20c3cca0ab7cad4d4bf1bc6e00e4.sol(88)

[33mWarning[0m for UnrestrictedWrite in contract 'FreezeToken':
    |     */
    |    function pause() public onlyOwner whenNotPaused {
  > |        paused = true;
    |        emit Pause();
    |    }
  at /unique_chucks/9/0x8c152e933e7f20c3cca0ab7cad4d4bf1bc6e00e4.sol(118)

[33mWarning[0m for UnrestrictedWrite in contract 'FreezeToken':
    |     */
    |    function unpause() public onlyOwner whenPaused {
  > |        paused = false;
    |        emit Unpause();
    |    }
  at /unique_chucks/9/0x8c152e933e7f20c3cca0ab7cad4d4bf1bc6e00e4.sol(126)

[33mWarning[0m for UnrestrictedWrite in contract 'FreezeToken':
    |
    |    function freezeAccount(address target, bool frozen) public onlyOwner {
  > |  	    frozenAccount[target] = frozen;
    |  	    emit FrozenAccount(target, frozen);
    |    }
  at /unique_chucks/9/0x8c152e933e7f20c3cca0ab7cad4d4bf1bc6e00e4.sol(284)

[31mViolation[0m for UnrestrictedWrite in contract 'Ownable':
    |        require(_newOwner != address(0));
    |        emit OwnershipTransferred(owner, _newOwner);
  > |        owner = _newOwner;
    |    }
    |}
  at /unique_chucks/9/0x8c152e933e7f20c3cca0ab7cad4d4bf1bc6e00e4.sol(88)

[33mWarning[0m for UnrestrictedWrite in contract 'Ownable':
    |        require(_newOwner != address(0));
    |        emit OwnershipTransferred(owner, _newOwner);
  > |        owner = _newOwner;
    |    }
    |}
  at /unique_chucks/9/0x8c152e933e7f20c3cca0ab7cad4d4bf1bc6e00e4.sol(88)

[31mViolation[0m for UnrestrictedWrite in contract 'Pausable':
    |        require(_newOwner != address(0));
    |        emit OwnershipTransferred(owner, _newOwner);
  > |        owner = _newOwner;
    |    }
    |}
  at /unique_chucks/9/0x8c152e933e7f20c3cca0ab7cad4d4bf1bc6e00e4.sol(88)

[33mWarning[0m for UnrestrictedWrite in contract 'Pausable':
    |        require(_newOwner != address(0));
    |        emit OwnershipTransferred(owner, _newOwner);
  > |        owner = _newOwner;
    |    }
    |}
  at /unique_chucks/9/0x8c152e933e7f20c3cca0ab7cad4d4bf1bc6e00e4.sol(88)

[33mWarning[0m for UnrestrictedWrite in contract 'Pausable':
    |     */
    |    function pause() public onlyOwner whenNotPaused {
  > |        paused = true;
    |        emit Pause();
    |    }
  at /unique_chucks/9/0x8c152e933e7f20c3cca0ab7cad4d4bf1bc6e00e4.sol(118)

[33mWarning[0m for UnrestrictedWrite in contract 'Pausable':
    |     */
    |    function unpause() public onlyOwner whenPaused {
  > |        paused = false;
    |        emit Unpause();
    |    }
  at /unique_chucks/9/0x8c152e933e7f20c3cca0ab7cad4d4bf1bc6e00e4.sol(126)

[33mWarning[0m for UnrestrictedWrite in contract 'PausableToken':
    |
    |        balances[msg.sender] = balances[msg.sender].sub(_value);
  > |        balances[_to] = balances[_to].add(_value);
    |        emit Transfer(msg.sender, _to, _value);
    |        return true;
  at /unique_chucks/9/0x8c152e933e7f20c3cca0ab7cad4d4bf1bc6e00e4.sol(174)

[33mWarning[0m for UnrestrictedWrite in contract 'PausableToken':
    |        require(_value <= allowed[_from][msg.sender]);
    |
  > |        balances[_from] = balances[_from].sub(_value);
    |        balances[_to] = balances[_to].add(_value);
    |        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
  at /unique_chucks/9/0x8c152e933e7f20c3cca0ab7cad4d4bf1bc6e00e4.sol(205)

[33mWarning[0m for UnrestrictedWrite in contract 'PausableToken':
    |
    |        balances[_from] = balances[_from].sub(_value);
  > |        balances[_to] = balances[_to].add(_value);
    |        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
    |        emit Transfer(_from, _to, _value);
  at /unique_chucks/9/0x8c152e933e7f20c3cca0ab7cad4d4bf1bc6e00e4.sol(206)

[33mWarning[0m for UnrestrictedWrite in contract 'PausableToken':
    |        require(_newOwner != address(0));
    |        emit OwnershipTransferred(owner, _newOwner);
  > |        owner = _newOwner;
    |    }
    |}
  at /unique_chucks/9/0x8c152e933e7f20c3cca0ab7cad4d4bf1bc6e00e4.sol(88)

[33mWarning[0m for UnrestrictedWrite in contract 'PausableToken':
    |     */
    |    function pause() public onlyOwner whenNotPaused {
  > |        paused = true;
    |        emit Pause();
    |    }
  at /unique_chucks/9/0x8c152e933e7f20c3cca0ab7cad4d4bf1bc6e00e4.sol(118)

[33mWarning[0m for UnrestrictedWrite in contract 'PausableToken':
    |     */
    |    function unpause() public onlyOwner whenPaused {
  > |        paused = false;
    |        emit Unpause();
    |    }
  at /unique_chucks/9/0x8c152e933e7f20c3cca0ab7cad4d4bf1bc6e00e4.sol(126)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |
    |        balances[msg.sender] = balances[msg.sender].sub(_value);
  > |        balances[_to] = balances[_to].add(_value);
    |        emit Transfer(msg.sender, _to, _value);
    |        return true;
  at /unique_chucks/9/0x8c152e933e7f20c3cca0ab7cad4d4bf1bc6e00e4.sol(174)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |        require(_value <= allowed[_from][msg.sender]);
    |
  > |        balances[_from] = balances[_from].sub(_value);
    |        balances[_to] = balances[_to].add(_value);
    |        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
  at /unique_chucks/9/0x8c152e933e7f20c3cca0ab7cad4d4bf1bc6e00e4.sol(205)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |
    |        balances[_from] = balances[_from].sub(_value);
  > |        balances[_to] = balances[_to].add(_value);
    |        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
    |        emit Transfer(_from, _to, _value);
  at /unique_chucks/9/0x8c152e933e7f20c3cca0ab7cad4d4bf1bc6e00e4.sol(206)

[31mViolation[0m for LockedEther in contract '_0xLitecoin':
    |}
    |
  > |contract _0xLitecoin is FreezeToken { 
    |    string public constant name = "0xLitecoin";
    |    string public constant symbol = "0xLTC";
  at /unique_chucks/9/0x8c152e933e7f20c3cca0ab7cad4d4bf1bc6e00e4.sol(302)

[33mWarning[0m for UnrestrictedWrite in contract '_0xLitecoin':
    |
    |        balances[msg.sender] = balances[msg.sender].sub(_value);
  > |        balances[_to] = balances[_to].add(_value);
    |        emit Transfer(msg.sender, _to, _value);
    |        return true;
  at /unique_chucks/9/0x8c152e933e7f20c3cca0ab7cad4d4bf1bc6e00e4.sol(174)

[33mWarning[0m for UnrestrictedWrite in contract '_0xLitecoin':
    |        require(_value <= allowed[_from][msg.sender]);
    |
  > |        balances[_from] = balances[_from].sub(_value);
    |        balances[_to] = balances[_to].add(_value);
    |        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
  at /unique_chucks/9/0x8c152e933e7f20c3cca0ab7cad4d4bf1bc6e00e4.sol(205)

[33mWarning[0m for UnrestrictedWrite in contract '_0xLitecoin':
    |
    |        balances[_from] = balances[_from].sub(_value);
  > |        balances[_to] = balances[_to].add(_value);
    |        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
    |        emit Transfer(_from, _to, _value);
  at /unique_chucks/9/0x8c152e933e7f20c3cca0ab7cad4d4bf1bc6e00e4.sol(206)

[33mWarning[0m for UnrestrictedWrite in contract '_0xLitecoin':
    |        require(_newOwner != address(0));
    |        emit OwnershipTransferred(owner, _newOwner);
  > |        owner = _newOwner;
    |    }
    |}
  at /unique_chucks/9/0x8c152e933e7f20c3cca0ab7cad4d4bf1bc6e00e4.sol(88)

[33mWarning[0m for UnrestrictedWrite in contract '_0xLitecoin':
    |     */
    |    function pause() public onlyOwner whenNotPaused {
  > |        paused = true;
    |        emit Pause();
    |    }
  at /unique_chucks/9/0x8c152e933e7f20c3cca0ab7cad4d4bf1bc6e00e4.sol(118)

[33mWarning[0m for UnrestrictedWrite in contract '_0xLitecoin':
    |     */
    |    function unpause() public onlyOwner whenPaused {
  > |        paused = false;
    |        emit Unpause();
    |    }
  at /unique_chucks/9/0x8c152e933e7f20c3cca0ab7cad4d4bf1bc6e00e4.sol(126)

[33mWarning[0m for UnrestrictedWrite in contract '_0xLitecoin':
    |
    |    function freezeAccount(address target, bool frozen) public onlyOwner {
  > |  	    frozenAccount[target] = frozen;
    |  	    emit FrozenAccount(target, frozen);
    |    }
  at /unique_chucks/9/0x8c152e933e7f20c3cca0ab7cad4d4bf1bc6e00e4.sol(284)