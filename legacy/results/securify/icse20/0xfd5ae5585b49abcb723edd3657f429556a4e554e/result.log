Processing contract: /unique_chucks/18/0xfd5ae5585b49abcb723edd3657f429556a4e554e.sol:ERC20Holder
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/18/0xfd5ae5585b49abcb723edd3657f429556a4e554e.sol:IERC20
Processing contract: /unique_chucks/18/0xfd5ae5585b49abcb723edd3657f429556a4e554e.sol:IOracle
Processing contract: /unique_chucks/18/0xfd5ae5585b49abcb723edd3657f429556a4e554e.sol:campaign
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
java.io.IOException: Timeout for /tmp/binaries_souffle7431665536042394813/mustExplicit -j 2 -F /tmp/souffle-3a580208-d5df-4c00-a2c0-71383667a4d8 -D /tmp/souffle-3a580208-d5df-4c00-a2c0-71383667a4d8_OUT
	at ch.securify.analysis.AbstractDataflow.runCommand(AbstractDataflow.java:277)
	at ch.securify.analysis.AbstractDataflow.initDataflow(AbstractDataflow.java:169)
	at ch.securify.analysis.MustExplicitDataflow.<init>(MustExplicitDataflow.java:33)
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:33)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error in Securify
java.lang.RuntimeException
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:37)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error, skipping: /unique_chucks/18/0xfd5ae5585b49abcb723edd3657f429556a4e554e.sol:campaign
Processing contract: /unique_chucks/18/0xfd5ae5585b49abcb723edd3657f429556a4e554e.sol:oracleClient
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/18/0xfd5ae5585b49abcb723edd3657f429556a4e554e.sol:owned
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for TODAmount in contract 'ERC20Holder':
    |    
    |    function withdraw() onlyOwner public {
  > |        owner.transfer(address(this).balance);
    |    }
    |    
  at /unique_chucks/18/0xfd5ae5585b49abcb723edd3657f429556a4e554e.sol(41)

[31mViolation[0m for TODReceiver in contract 'ERC20Holder':
    |    
    |    function withdraw() onlyOwner public {
  > |        owner.transfer(address(this).balance);
    |    }
    |    
  at /unique_chucks/18/0xfd5ae5585b49abcb723edd3657f429556a4e554e.sol(41)

[33mWarning[0m for UnrestrictedWrite in contract 'ERC20Holder':
    |
    |    function transferOwnership(address payable newOwner) onlyOwner public {
  > |        owner = newOwner;
    |    }
    |}
  at /unique_chucks/18/0xfd5ae5585b49abcb723edd3657f429556a4e554e.sol(17)

[33mWarning[0m for UnrestrictedWrite in contract 'ERC20Holder':
    |    mapping (address => bool) acceptedTokens;
    |    function modToken(address token,bool accepted) public onlyOwner {
  > |        acceptedTokens[token] = accepted;
    |    }
    |    
  at /unique_chucks/18/0xfd5ae5585b49abcb723edd3657f429556a4e554e.sol(30)

[31mViolation[0m for TODAmount in contract 'oracleClient':
    |    
    |    function withdraw() onlyOwner public {
  > |        owner.transfer(address(this).balance);
    |    }
    |    
  at /unique_chucks/18/0xfd5ae5585b49abcb723edd3657f429556a4e554e.sol(41)

[31mViolation[0m for TODReceiver in contract 'oracleClient':
    |    
    |    function withdraw() onlyOwner public {
  > |        owner.transfer(address(this).balance);
    |    }
    |    
  at /unique_chucks/18/0xfd5ae5585b49abcb723edd3657f429556a4e554e.sol(41)

[33mWarning[0m for UnrestrictedWrite in contract 'oracleClient':
    |
    |    function transferOwnership(address payable newOwner) onlyOwner public {
  > |        owner = newOwner;
    |    }
    |}
  at /unique_chucks/18/0xfd5ae5585b49abcb723edd3657f429556a4e554e.sol(17)

[33mWarning[0m for UnrestrictedWrite in contract 'oracleClient':
    |    mapping (address => bool) acceptedTokens;
    |    function modToken(address token,bool accepted) public onlyOwner {
  > |        acceptedTokens[token] = accepted;
    |    }
    |    
  at /unique_chucks/18/0xfd5ae5585b49abcb723edd3657f429556a4e554e.sol(30)

[33mWarning[0m for UnrestrictedWrite in contract 'oracleClient':
    |    function setOracle(address a) public  onlyOwner {
    |        
  > |        oracle = a;
    |    }
    |}
  at /unique_chucks/18/0xfd5ae5585b49abcb723edd3657f429556a4e554e.sol(56)

[33mWarning[0m for UnrestrictedWrite in contract 'owned':
    |
    |    function transferOwnership(address payable newOwner) onlyOwner public {
  > |        owner = newOwner;
    |    }
    |}
  at /unique_chucks/18/0xfd5ae5585b49abcb723edd3657f429556a4e554e.sol(17)