Processing contract: /unique_chucks/44/0x83a80250d415f9364d8415f6017acd39ebf288af.sol:IOwnable
Processing contract: /unique_chucks/44/0x83a80250d415f9364d8415f6017acd39ebf288af.sol:ITap
Processing contract: /unique_chucks/44/0x83a80250d415f9364d8415f6017acd39ebf288af.sol:Ownable
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/44/0x83a80250d415f9364d8415f6017acd39ebf288af.sol:Tap
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for MissingInputValidation in contract 'Ownable':
    |    }
    |
  > |    function changeOwner(address _newOwner) public onlyOwner {
    |        newOwner = _newOwner;
    |    }
  at /unique_chucks/44/0x83a80250d415f9364d8415f6017acd39ebf288af.sol(27)

[33mWarning[0m for UnrestrictedWrite in contract 'Ownable':
    |
    |    function changeOwner(address _newOwner) public onlyOwner {
  > |        newOwner = _newOwner;
    |    }
    |
  at /unique_chucks/44/0x83a80250d415f9364d8415f6017acd39ebf288af.sol(28)

[33mWarning[0m for UnrestrictedWrite in contract 'Ownable':
    |        require(msg.sender == newOwner);
    |        emit OwnerChanged(owner, newOwner);
  > |        owner = newOwner;
    |        newOwner = address(0);
    |    }
  at /unique_chucks/44/0x83a80250d415f9364d8415f6017acd39ebf288af.sol(34)

[33mWarning[0m for UnrestrictedWrite in contract 'Ownable':
    |        emit OwnerChanged(owner, newOwner);
    |        owner = newOwner;
  > |        newOwner = address(0);
    |    }
    |}
  at /unique_chucks/44/0x83a80250d415f9364d8415f6017acd39ebf288af.sol(35)

[33mWarning[0m for UnrestrictedWrite in contract 'Tap':
    |
    |    function changeOwner(address _newOwner) public onlyOwner {
  > |        newOwner = _newOwner;
    |    }
    |
  at /unique_chucks/44/0x83a80250d415f9364d8415f6017acd39ebf288af.sol(28)

[33mWarning[0m for UnrestrictedWrite in contract 'Tap':
    |        require(msg.sender == newOwner);
    |        emit OwnerChanged(owner, newOwner);
  > |        owner = newOwner;
    |        newOwner = address(0);
    |    }
  at /unique_chucks/44/0x83a80250d415f9364d8415f6017acd39ebf288af.sol(34)

[33mWarning[0m for UnrestrictedWrite in contract 'Tap':
    |        emit OwnerChanged(owner, newOwner);
    |        owner = newOwner;
  > |        newOwner = address(0);
    |    }
    |}
  at /unique_chucks/44/0x83a80250d415f9364d8415f6017acd39ebf288af.sol(35)

[33mWarning[0m for UnrestrictedWrite in contract 'Tap':
    |    function init(uint _baseEther, uint _startDate) public onlyOwner {
    |        require(baseEther == 0);
  > |        baseEther = _baseEther;
    |        remainsForTap = _baseEther;
    |        nextTapDate = _startDate;
  at /unique_chucks/44/0x83a80250d415f9364d8415f6017acd39ebf288af.sol(58)

[33mWarning[0m for UnrestrictedWrite in contract 'Tap':
    |        require(baseEther == 0);
    |        baseEther = _baseEther;
  > |        remainsForTap = _baseEther;
    |        nextTapDate = _startDate;
    |    }
  at /unique_chucks/44/0x83a80250d415f9364d8415f6017acd39ebf288af.sol(59)

[33mWarning[0m for UnrestrictedWrite in contract 'Tap':
    |        baseEther = _baseEther;
    |        remainsForTap = _baseEther;
  > |        nextTapDate = _startDate;
    |    }
    |
  at /unique_chucks/44/0x83a80250d415f9364d8415f6017acd39ebf288af.sol(60)

[33mWarning[0m for UnrestrictedWrite in contract 'Tap':
    |    function changeNextTap(uint8 _newPercent) public onlyOwner {
    |        require(_newPercent <= 100);
  > |        nextTapPercent = _newPercent;
    |    }
    |
  at /unique_chucks/44/0x83a80250d415f9364d8415f6017acd39ebf288af.sol(65)

[33mWarning[0m for UnrestrictedWrite in contract 'Tap':
    |            if (tapValue > remainsForTap) {
    |                tapValue = remainsForTap;
  > |                nextTapNum = 11;
    |            }
    |        }
  at /unique_chucks/44/0x83a80250d415f9364d8415f6017acd39ebf288af.sol(79)

[33mWarning[0m for UnrestrictedWrite in contract 'Tap':
    |            }
    |        }
  > |        remainsForTap -= tapValue;
    |        nextTapNum += 1;
    |        if (nextTapNum < 12) {
  at /unique_chucks/44/0x83a80250d415f9364d8415f6017acd39ebf288af.sol(82)

[33mWarning[0m for UnrestrictedWrite in contract 'Tap':
    |        }
    |        remainsForTap -= tapValue;
  > |        nextTapNum += 1;
    |        if (nextTapNum < 12) {
    |            nextTapPercent = tapPercents[nextTapNum];
  at /unique_chucks/44/0x83a80250d415f9364d8415f6017acd39ebf288af.sol(83)

[33mWarning[0m for UnrestrictedWrite in contract 'Tap':
    |        nextTapNum += 1;
    |        if (nextTapNum < 12) {
  > |            nextTapPercent = tapPercents[nextTapNum];
    |            nextTapDate += 30 days;
    |        }
  at /unique_chucks/44/0x83a80250d415f9364d8415f6017acd39ebf288af.sol(85)

[33mWarning[0m for UnrestrictedWrite in contract 'Tap':
    |        if (nextTapNum < 12) {
    |            nextTapPercent = tapPercents[nextTapNum];
  > |            nextTapDate += 30 days;
    |        }
    |        return tapValue;
  at /unique_chucks/44/0x83a80250d415f9364d8415f6017acd39ebf288af.sol(86)

[33mWarning[0m for UnrestrictedWrite in contract 'Tap':
    |    function subRemainsForTap(uint _delta) public onlyOwner {
    |        require(_delta <= remainsForTap);
  > |        remainsForTap -= _delta;
    |    }
    |}
  at /unique_chucks/44/0x83a80250d415f9364d8415f6017acd39ebf288af.sol(93)