Processing contract: /unique_chucks/39/0x06afc41a750419657cc87dc98e6239921799e044.sol:CTTToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for LockedEther in contract 'CTTToken':
    |pragma solidity ^0.5.1;
    |
  > |contract CTTToken{
    |
    |    uint256 public totalSupply;
  at /unique_chucks/39/0x06afc41a750419657cc87dc98e6239921799e044.sol(3)

[31mViolation[0m for UnrestrictedWrite in contract 'CTTToken':
    |        require(balances[msg.sender] >= _value);
    |        balances[msg.sender] -= _value;
  > |        balances[_to] += _value;
    |        emit Transfer(msg.sender, _to, _value);
    |        return true;
  at /unique_chucks/39/0x06afc41a750419657cc87dc98e6239921799e044.sol(33)

[31mViolation[0m for UnrestrictedWrite in contract 'CTTToken':
    |        uint256 allowance = allowed[_from][msg.sender];
    |        require(balances[_from] >= _value && allowance >= _value);
  > |        balances[_to] += _value;
    |        balances[_from] -= _value;
    |        allowed[_from][msg.sender] -= _value;
  at /unique_chucks/39/0x06afc41a750419657cc87dc98e6239921799e044.sol(41)

[31mViolation[0m for UnrestrictedWrite in contract 'CTTToken':
    |        require(balances[_from] >= _value && allowance >= _value);
    |        balances[_to] += _value;
  > |        balances[_from] -= _value;
    |        allowed[_from][msg.sender] -= _value;
    |        emit Transfer(_from, _to, _value);
  at /unique_chucks/39/0x06afc41a750419657cc87dc98e6239921799e044.sol(42)