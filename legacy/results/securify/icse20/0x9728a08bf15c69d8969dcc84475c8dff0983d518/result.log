Processing contract: /unique_chucks/36/0x9728a08bf15c69d8969dcc84475c8dff0983d518.sol:ApproveAndCallFallBack
Processing contract: /unique_chucks/36/0x9728a08bf15c69d8969dcc84475c8dff0983d518.sol:ERC20Interface
Processing contract: /unique_chucks/36/0x9728a08bf15c69d8969dcc84475c8dff0983d518.sol:Owned
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/36/0x9728a08bf15c69d8969dcc84475c8dff0983d518.sol:RNBW
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/36/0x9728a08bf15c69d8969dcc84475c8dff0983d518.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for MissingInputValidation in contract 'Owned':
    |    }
    |
  > |    function transferOwnership(address payable newOwner) public onlyOwner {
    |        _newOwner = newOwner;
    |    }
  at /unique_chucks/36/0x9728a08bf15c69d8969dcc84475c8dff0983d518.sol(81)

[33mWarning[0m for UnrestrictedWrite in contract 'Owned':
    |
    |    function transferOwnership(address payable newOwner) public onlyOwner {
  > |        _newOwner = newOwner;
    |    }
    |
  at /unique_chucks/36/0x9728a08bf15c69d8969dcc84475c8dff0983d518.sol(82)

[33mWarning[0m for UnrestrictedWrite in contract 'Owned':
    |        require(msg.sender == _newOwner);
    |        emit OwnershipTransferred(_owner, _newOwner);
  > |        _owner = _newOwner;
    |        _newOwner = address(0);
    |    }
  at /unique_chucks/36/0x9728a08bf15c69d8969dcc84475c8dff0983d518.sol(88)

[33mWarning[0m for UnrestrictedWrite in contract 'Owned':
    |        emit OwnershipTransferred(_owner, _newOwner);
    |        _owner = _newOwner;
  > |        _newOwner = address(0);
    |    }
    |}
  at /unique_chucks/36/0x9728a08bf15c69d8969dcc84475c8dff0983d518.sol(89)

[31mViolation[0m for TODAmount in contract 'RNBW':
    |        _totalSupply = safeAdd(_totalSupply, tokens);
    |        emit Transfer(address(0), msg.sender, tokens);
  > |        _owner.transfer(address(this).balance);
    |    }
    |    
  at /unique_chucks/36/0x9728a08bf15c69d8969dcc84475c8dff0983d518.sol(259)

[31mViolation[0m for TODReceiver in contract 'RNBW':
    |        _totalSupply = safeAdd(_totalSupply, tokens);
    |        emit Transfer(address(0), msg.sender, tokens);
  > |        _owner.transfer(address(this).balance);
    |    }
    |    
  at /unique_chucks/36/0x9728a08bf15c69d8969dcc84475c8dff0983d518.sol(259)

[33mWarning[0m for UnrestrictedWrite in contract 'RNBW':
    |
    |    function transferOwnership(address payable newOwner) public onlyOwner {
  > |        _newOwner = newOwner;
    |    }
    |
  at /unique_chucks/36/0x9728a08bf15c69d8969dcc84475c8dff0983d518.sol(82)

[33mWarning[0m for UnrestrictedWrite in contract 'RNBW':
    |        require(msg.sender == _newOwner);
    |        emit OwnershipTransferred(_owner, _newOwner);
  > |        _owner = _newOwner;
    |        _newOwner = address(0);
    |    }
  at /unique_chucks/36/0x9728a08bf15c69d8969dcc84475c8dff0983d518.sol(88)

[33mWarning[0m for UnrestrictedWrite in contract 'RNBW':
    |        emit OwnershipTransferred(_owner, _newOwner);
    |        _owner = _newOwner;
  > |        _newOwner = address(0);
    |    }
    |}
  at /unique_chucks/36/0x9728a08bf15c69d8969dcc84475c8dff0983d518.sol(89)

[33mWarning[0m for UnrestrictedWrite in contract 'RNBW':
    |        
    |        _balances[msg.sender] = safeSub(_balances[msg.sender], tokens);
  > |        _balances[to] = safeAdd(_balances[to], tokens);
    |        emit Transfer(msg.sender, to, tokens);
    |        return true;
  at /unique_chucks/36/0x9728a08bf15c69d8969dcc84475c8dff0983d518.sol(174)

[33mWarning[0m for UnrestrictedWrite in contract 'RNBW':
    |        require( _freezeState[from] == false && _freezeState[to] == false);
    |        
  > |        _balances[from] = safeSub(_balances[from], tokens);
    |        _allowed[from][msg.sender] = safeSub(_allowed[from][msg.sender], tokens);
    |        _balances[to] = safeAdd(_balances[to], tokens);
  at /unique_chucks/36/0x9728a08bf15c69d8969dcc84475c8dff0983d518.sol(208)

[33mWarning[0m for UnrestrictedWrite in contract 'RNBW':
    |        _balances[from] = safeSub(_balances[from], tokens);
    |        _allowed[from][msg.sender] = safeSub(_allowed[from][msg.sender], tokens);
  > |        _balances[to] = safeAdd(_balances[to], tokens);
    |        emit Transfer(from, to, tokens);
    |        return true;
  at /unique_chucks/36/0x9728a08bf15c69d8969dcc84475c8dff0983d518.sol(210)

[33mWarning[0m for UnrestrictedWrite in contract 'RNBW':
    |        _freezeState[msg.sender] = true;
    |        _balances[msg.sender] = safeAdd(_balances[msg.sender], tokens);
  > |        _totalSupply = safeAdd(_totalSupply, tokens);
    |        emit Transfer(address(0), msg.sender, tokens);
    |        _owner.transfer(address(this).balance);
  at /unique_chucks/36/0x9728a08bf15c69d8969dcc84475c8dff0983d518.sol(257)

[33mWarning[0m for UnrestrictedWrite in contract 'RNBW':
    |        address burner = msg.sender;
    |        _balances[burner] = safeSub(_balances[burner], tokens);
  > |        _totalSupply = safeSub(_totalSupply, tokens);
    |        emit Transfer(burner, address(0), tokens);
    |        return true;
  at /unique_chucks/36/0x9728a08bf15c69d8969dcc84475c8dff0983d518.sol(270)

[33mWarning[0m for UnrestrictedWrite in contract 'RNBW':
    |        address burner = account;
    |        _balances[burner] = safeSub(_balances[burner], tokens);
  > |        _totalSupply = safeSub(_totalSupply, tokens);
    |        emit Transfer(burner, address(0), tokens);
    |        return true;
  at /unique_chucks/36/0x9728a08bf15c69d8969dcc84475c8dff0983d518.sol(279)

[33mWarning[0m for UnrestrictedWrite in contract 'RNBW':
    |    function freeze(address account) public onlyOwner returns (bool success) {
    |        require(account != _owner && account != address(0));
  > |        _freezeState[account] = true;
    |        return true;
    |    }
  at /unique_chucks/36/0x9728a08bf15c69d8969dcc84475c8dff0983d518.sol(286)

[33mWarning[0m for UnrestrictedWrite in contract 'RNBW':
    |    function unfreeze(address account) public onlyOwner returns (bool success) {
    |        require(account != _owner && account != address(0));
  > |        _freezeState[account] = false;
    |        return true;
    |    }
  at /unique_chucks/36/0x9728a08bf15c69d8969dcc84475c8dff0983d518.sol(292)

[33mWarning[0m for UnrestrictedWrite in contract 'RNBW':
    |        require(now >= _startDate && now <= _endDate);
    |        _balances[msg.sender] = safeAdd(_balances[msg.sender], tokens);
  > |        _totalSupply = safeAdd(_totalSupply, tokens);
    |        emit Transfer(address(0), msg.sender, tokens);
    |        return true;
  at /unique_chucks/36/0x9728a08bf15c69d8969dcc84475c8dff0983d518.sol(300)