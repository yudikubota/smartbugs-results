Processing contract: /unique_chucks/12/0xdad59fd8b366a5536c014da9eb81d19ec9953920.sol:ERC20
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/12/0xdad59fd8b366a5536c014da9eb81d19ec9953920.sol:FLINT
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/12/0xdad59fd8b366a5536c014da9eb81d19ec9953920.sol:IERC20
Processing contract: /unique_chucks/12/0xdad59fd8b366a5536c014da9eb81d19ec9953920.sol:MintableToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/12/0xdad59fd8b366a5536c014da9eb81d19ec9953920.sol:Ownable
Processing contract: /unique_chucks/12/0xdad59fd8b366a5536c014da9eb81d19ec9953920.sol:Pausable
Processing contract: /unique_chucks/12/0xdad59fd8b366a5536c014da9eb81d19ec9953920.sol:PauserRole
Processing contract: /unique_chucks/12/0xdad59fd8b366a5536c014da9eb81d19ec9953920.sol:Roles
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/12/0xdad59fd8b366a5536c014da9eb81d19ec9953920.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for LockedEther in contract 'FLINT':
    |}
    |
  > |contract FLINT is MintableToken, Ownable, Pausable {
    |
    |    using SafeMath for uint256;
  at /unique_chucks/12/0xdad59fd8b366a5536c014da9eb81d19ec9953920.sol(667)

[33mWarning[0m for UnrestrictedWrite in contract 'FLINT':
    |        require(account != address(0), "ERC20: mint to the zero address");
    |
  > |        _totalSupply = _totalSupply.add(amount);
    |        _balances[account] = _balances[account].add(amount);
    |        emit Transfer(address(0), account, amount);
  at /unique_chucks/12/0xdad59fd8b366a5536c014da9eb81d19ec9953920.sol(351)

[33mWarning[0m for UnrestrictedWrite in contract 'FLINT':
    |   */
    |  function finishMinting() canMint internal returns (bool) {
  > |    mintingFinished = true;
    |    emit MintFinished();
    |    return true;
  at /unique_chucks/12/0xdad59fd8b366a5536c014da9eb81d19ec9953920.sol(442)

[33mWarning[0m for UnrestrictedWrite in contract 'FLINT':
    |     */
    |    function pause() public onlyPauser whenNotPaused {
  > |        _paused = true;
    |        emit Paused(msg.sender);
    |    }
  at /unique_chucks/12/0xdad59fd8b366a5536c014da9eb81d19ec9953920.sol(580)

[33mWarning[0m for UnrestrictedWrite in contract 'FLINT':
    |     */
    |    function unpause() public onlyPauser whenPaused {
  > |        _paused = false;
    |        emit Unpaused(msg.sender);
    |    }
  at /unique_chucks/12/0xdad59fd8b366a5536c014da9eb81d19ec9953920.sol(588)

[33mWarning[0m for UnrestrictedWrite in contract 'FLINT':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipTransferred(_owner, address(0));
  > |        _owner = address(0);
    |    }
    |
  at /unique_chucks/12/0xdad59fd8b366a5536c014da9eb81d19ec9953920.sol(646)

[33mWarning[0m for UnrestrictedWrite in contract 'FLINT':
    |        require(newOwner != address(0), "Ownable: new owner is the zero address");
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_chucks/12/0xdad59fd8b366a5536c014da9eb81d19ec9953920.sol(663)

[33mWarning[0m for UnrestrictedWrite in contract 'FLINT':
    |
    |    function setDevFund(address _new) public onlyOwner {
  > |        devFund = _new;
    |    }
    |
  at /unique_chucks/12/0xdad59fd8b366a5536c014da9eb81d19ec9953920.sol(719)

[33mWarning[0m for UnrestrictedWrite in contract 'FLINT':
    |
    |    function setSambhav(address _new) public onlyOwner {
  > |        sambhav = _new;
    |    }
    |
  at /unique_chucks/12/0xdad59fd8b366a5536c014da9eb81d19ec9953920.sol(723)

[33mWarning[0m for UnrestrictedWrite in contract 'FLINT':
    |
    |    function setPondsea(address _new) public onlyOwner {
  > |        pondsea = _new;
    |    }
    |
  at /unique_chucks/12/0xdad59fd8b366a5536c014da9eb81d19ec9953920.sol(727)

[33mWarning[0m for UnrestrictedWrite in contract 'FLINT':
    |
    |    function setAustin(address _new) public onlyOwner {
  > |        austin = _new;
    |    }
    |
  at /unique_chucks/12/0xdad59fd8b366a5536c014da9eb81d19ec9953920.sol(731)

[33mWarning[0m for UnrestrictedWrite in contract 'FLINT':
    |
    |    function setArtem(address _new) public onlyOwner {
  > |        artem = _new;
    |    }
    |
  at /unique_chucks/12/0xdad59fd8b366a5536c014da9eb81d19ec9953920.sol(735)

[33mWarning[0m for UnrestrictedWrite in contract 'FLINT':
    |
    |    function setKiran(address _new) public onlyOwner {
  > |        kiran = _new;
    |    }
    |
  at /unique_chucks/12/0xdad59fd8b366a5536c014da9eb81d19ec9953920.sol(739)