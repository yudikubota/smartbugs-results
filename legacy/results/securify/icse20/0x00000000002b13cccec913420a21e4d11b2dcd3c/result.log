Processing contract: /unique_contracts/0x00000000002b13cccec913420a21e4d11b2dcd3c.sol:Metapod
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for LockedEther in contract 'Metapod':
    | * the callers determine the current contract by using EXTCODEHASH.
    | */
  > |contract Metapod {
    |  // fires when a metamorphic contract is deployed.
    |  event Metamorphosed(address metamorphicContract, bytes32 salt);
  at /unique_contracts/0x00000000002b13cccec913420a21e4d11b2dcd3c.sol(45)

[31mViolation[0m for UnhandledException in contract 'Metapod':
    |
    |    // call it to trigger a SELFDESTRUCT that forwards any funds to the vault.
  > |    metamorphicContract.call(""); /* solhint-disable-line avoid-low-level-calls */
    |
    |    // emit an event to signify that the contract was scheduled for deletion.
  at /unique_contracts/0x00000000002b13cccec913420a21e4d11b2dcd3c.sol(211)

[31mViolation[0m for UnhandledException in contract 'Metapod':
    |      // otherwise, just call it which will also send funds to transient.
    |      } else {
  > |        vaultContract.call(""); /* solhint-disable-line avoid-low-level-calls */
    |      }
    |    }
  at /unique_contracts/0x00000000002b13cccec913420a21e4d11b2dcd3c.sol(505)

[33mWarning[0m for UnrestrictedWrite in contract 'Metapod':
    | * the callers determine the current contract by using EXTCODEHASH.
    | */
  > |contract Metapod {
    |  // fires when a metamorphic contract is deployed.
    |  event Metamorphosed(address metamorphicContract, bytes32 salt);
  at /unique_contracts/0x00000000002b13cccec913420a21e4d11b2dcd3c.sol(45)