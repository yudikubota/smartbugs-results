Processing contract: /unique_chucks/32/0xcbfe11b78c2e6cb25c6eda2c6ff46cd4755c8fca.sol:IERC20
Processing contract: /unique_chucks/32/0xcbfe11b78c2e6cb25c6eda2c6ff46cd4755c8fca.sol:MaticTokenVesting
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/32/0xcbfe11b78c2e6cb25c6eda2c6ff46cd4755c8fca.sol:Ownable
Processing contract: /unique_chucks/32/0xcbfe11b78c2e6cb25c6eda2c6ff46cd4755c8fca.sol:SafeERC20
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/32/0xcbfe11b78c2e6cb25c6eda2c6ff46cd4755c8fca.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for UnrestrictedWrite in contract 'MaticTokenVesting':
    |
    |        require(maticToken.balanceOf(address(this)) >= vesting.amount, INSUFFICIENT_BALANCE);
  > |        vesting.released = true;
    |        tokensToVest = tokensToVest.sub(vesting.amount);
    |        maticToken.safeTransfer(vesting.beneficiary, vesting.amount);
  at /unique_chucks/32/0xcbfe11b78c2e6cb25c6eda2c6ff46cd4755c8fca.sol(328)

[33mWarning[0m for UnrestrictedWrite in contract 'MaticTokenVesting':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipTransferred(_owner, address(0));
  > |        _owner = address(0);
    |    }
    |
  at /unique_chucks/32/0xcbfe11b78c2e6cb25c6eda2c6ff46cd4755c8fca.sol(54)

[33mWarning[0m for UnrestrictedWrite in contract 'MaticTokenVesting':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_chucks/32/0xcbfe11b78c2e6cb25c6eda2c6ff46cd4755c8fca.sol(72)

[33mWarning[0m for UnrestrictedWrite in contract 'MaticTokenVesting':
    |        require(vesting.beneficiary != address(0x0), INVALID_VESTING_ID);
    |        require(!vesting.released , VESTING_ALREADY_RELEASED);
  > |        vesting.released = true;
    |        tokensToVest = tokensToVest.sub(vesting.amount);
    |        emit TokenVestingRemoved(_vestingId, vesting.beneficiary, vesting.amount);
  at /unique_chucks/32/0xcbfe11b78c2e6cb25c6eda2c6ff46cd4755c8fca.sol(302)

[33mWarning[0m for UnrestrictedWrite in contract 'MaticTokenVesting':
    |        require(!vesting.released , VESTING_ALREADY_RELEASED);
    |        vesting.released = true;
  > |        tokensToVest = tokensToVest.sub(vesting.amount);
    |        emit TokenVestingRemoved(_vestingId, vesting.beneficiary, vesting.amount);
    |    }
  at /unique_chucks/32/0xcbfe11b78c2e6cb25c6eda2c6ff46cd4755c8fca.sol(303)

[33mWarning[0m for UnrestrictedWrite in contract 'MaticTokenVesting':
    |    function addVesting(address _beneficiary, uint256 _releaseTime, uint256 _amount) public onlyOwner {
    |        require(_beneficiary != address(0x0), INVALID_BENEFICIARY);
  > |        tokensToVest = tokensToVest.add(_amount);
    |        vestingId = vestingId.add(1);
    |        vestings[vestingId] = Vesting({
  at /unique_chucks/32/0xcbfe11b78c2e6cb25c6eda2c6ff46cd4755c8fca.sol(309)

[33mWarning[0m for UnrestrictedWrite in contract 'MaticTokenVesting':
    |        require(_beneficiary != address(0x0), INVALID_BENEFICIARY);
    |        tokensToVest = tokensToVest.add(_amount);
  > |        vestingId = vestingId.add(1);
    |        vestings[vestingId] = Vesting({
    |            beneficiary: _beneficiary,
  at /unique_chucks/32/0xcbfe11b78c2e6cb25c6eda2c6ff46cd4755c8fca.sol(310)

[33mWarning[0m for UnrestrictedWrite in contract 'MaticTokenVesting':
    |        tokensToVest = tokensToVest.add(_amount);
    |        vestingId = vestingId.add(1);
  > |        vestings[vestingId] = Vesting({
    |            beneficiary: _beneficiary,
    |            releaseTime: _releaseTime,
  at /unique_chucks/32/0xcbfe11b78c2e6cb25c6eda2c6ff46cd4755c8fca.sol(311)

[33mWarning[0m for UnrestrictedWrite in contract 'MaticTokenVesting':
    |        require(maticToken.balanceOf(address(this)) >= vesting.amount, INSUFFICIENT_BALANCE);
    |        vesting.released = true;
  > |        tokensToVest = tokensToVest.sub(vesting.amount);
    |        maticToken.safeTransfer(vesting.beneficiary, vesting.amount);
    |        emit TokenVestingReleased(_vestingId, vesting.beneficiary, vesting.amount);
  at /unique_chucks/32/0xcbfe11b78c2e6cb25c6eda2c6ff46cd4755c8fca.sol(329)