Processing contract: /unique_chucks/19/0xa3baa9cd4f5c0f75541e7c78462a6f36ed62049a.sol:OperatorRole
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/19/0xa3baa9cd4f5c0f75541e7c78462a6f36ed62049a.sol:Ownable
Processing contract: /unique_chucks/19/0xa3baa9cd4f5c0f75541e7c78462a6f36ed62049a.sol:Referrers
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/19/0xa3baa9cd4f5c0f75541e7c78462a6f36ed62049a.sol:Roles
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[33mWarning[0m for UnrestrictedWrite in contract 'OperatorRole':
    |        require(!has(role, account));
    |
  > |        role.bearer[account] = true;
    |    }
    |
  at /unique_chucks/19/0xa3baa9cd4f5c0f75541e7c78462a6f36ed62049a.sol(21)

[33mWarning[0m for UnrestrictedWrite in contract 'OperatorRole':
    |        require(has(role, account));
    |
  > |        role.bearer[account] = false;
    |    }
    |
  at /unique_chucks/19/0xa3baa9cd4f5c0f75541e7c78462a6f36ed62049a.sol(31)

[33mWarning[0m for UnrestrictedWrite in contract 'OperatorRole':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipTransferred(_owner, address(0));
  > |        _owner = address(0);
    |    }
    |
  at /unique_chucks/19/0xa3baa9cd4f5c0f75541e7c78462a6f36ed62049a.sol(95)

[33mWarning[0m for UnrestrictedWrite in contract 'OperatorRole':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_chucks/19/0xa3baa9cd4f5c0f75541e7c78462a6f36ed62049a.sol(113)

[31mViolation[0m for LockedEther in contract 'Referrers':
    |// File: contracts/Referrers.sol
    |
  > |contract Referrers is OperatorRole {
    |    using Roles for Roles.Role;
    |
  at /unique_chucks/19/0xa3baa9cd4f5c0f75541e7c78462a6f36ed62049a.sol(154)