Processing contract: /unique_chucks/12/0x8496a4a2678348e55c3ad1c45e53aadba5eb970c.sol:ERC20
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/12/0x8496a4a2678348e55c3ad1c45e53aadba5eb970c.sol:IERC20
Processing contract: /unique_chucks/12/0x8496a4a2678348e55c3ad1c45e53aadba5eb970c.sol:Ownable
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/12/0x8496a4a2678348e55c3ad1c45e53aadba5eb970c.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/12/0x8496a4a2678348e55c3ad1c45e53aadba5eb970c.sol:Spin
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for UnrestrictedWrite in contract 'ERC20':
    |
    |    _balances[msg.sender] = _balances[msg.sender].sub(value);
  > |    _balances[to] = _balances[to].add(value);
    |    emit Transfer(msg.sender, to, value);
    |    return true;
  at /unique_chucks/12/0x8496a4a2678348e55c3ad1c45e53aadba5eb970c.sol(180)

[31mViolation[0m for UnrestrictedWrite in contract 'ERC20':
    |    require(to != address(0));
    |
  > |    _balances[from] = _balances[from].sub(value);
    |    _balances[to] = _balances[to].add(value);
    |    _allowed[from][msg.sender] = _allowed[from][msg.sender].sub(value);
  at /unique_chucks/12/0x8496a4a2678348e55c3ad1c45e53aadba5eb970c.sol(213)

[31mViolation[0m for UnrestrictedWrite in contract 'ERC20':
    |
    |    _balances[from] = _balances[from].sub(value);
  > |    _balances[to] = _balances[to].add(value);
    |    _allowed[from][msg.sender] = _allowed[from][msg.sender].sub(value);
    |    emit Transfer(from, to, value);
  at /unique_chucks/12/0x8496a4a2678348e55c3ad1c45e53aadba5eb970c.sol(214)

[33mWarning[0m for UnrestrictedWrite in contract 'Ownable':
    |  function transferOwnership(address newOwner) public onlyOwner {
    |    if (newOwner != address(0)) {
  > |      owner = newOwner;
    |    }
    |  }
  at /unique_chucks/12/0x8496a4a2678348e55c3ad1c45e53aadba5eb970c.sol(90)

[31mViolation[0m for LockedEther in contract 'Spin':
    |}
    |
  > |contract Spin is ERC20, Ownable {
    |    string public name = "Spin";
    |    uint8 public decimals = 18; 
  at /unique_chucks/12/0x8496a4a2678348e55c3ad1c45e53aadba5eb970c.sol(287)

[33mWarning[0m for UnrestrictedWrite in contract 'Spin':
    |  function transferOwnership(address newOwner) public onlyOwner {
    |    if (newOwner != address(0)) {
  > |      owner = newOwner;
    |    }
    |  }
  at /unique_chucks/12/0x8496a4a2678348e55c3ad1c45e53aadba5eb970c.sol(90)

[33mWarning[0m for UnrestrictedWrite in contract 'Spin':
    |
    |    _balances[msg.sender] = _balances[msg.sender].sub(value);
  > |    _balances[to] = _balances[to].add(value);
    |    emit Transfer(msg.sender, to, value);
    |    return true;
  at /unique_chucks/12/0x8496a4a2678348e55c3ad1c45e53aadba5eb970c.sol(180)

[33mWarning[0m for UnrestrictedWrite in contract 'Spin':
    |    require(to != address(0));
    |
  > |    _balances[from] = _balances[from].sub(value);
    |    _balances[to] = _balances[to].add(value);
    |    _allowed[from][msg.sender] = _allowed[from][msg.sender].sub(value);
  at /unique_chucks/12/0x8496a4a2678348e55c3ad1c45e53aadba5eb970c.sol(213)

[33mWarning[0m for UnrestrictedWrite in contract 'Spin':
    |
    |    _balances[from] = _balances[from].sub(value);
  > |    _balances[to] = _balances[to].add(value);
    |    _allowed[from][msg.sender] = _allowed[from][msg.sender].sub(value);
    |    emit Transfer(from, to, value);
  at /unique_chucks/12/0x8496a4a2678348e55c3ad1c45e53aadba5eb970c.sol(214)

[33mWarning[0m for UnrestrictedWrite in contract 'Spin':
    |  function _mint(address account, uint256 amount) internal {
    |    require(account != address(0));
  > |    _totalSupply = _totalSupply.add(amount);
    |    _balances[account] = _balances[account].add(amount);
    |    emit Transfer(address(0), account, amount);
  at /unique_chucks/12/0x8496a4a2678348e55c3ad1c45e53aadba5eb970c.sol(265)

[33mWarning[0m for UnrestrictedWrite in contract 'Spin':
    |    require(account != address(0));
    |    _totalSupply = _totalSupply.add(amount);
  > |    _balances[account] = _balances[account].add(amount);
    |    emit Transfer(address(0), account, amount);
    |  }
  at /unique_chucks/12/0x8496a4a2678348e55c3ad1c45e53aadba5eb970c.sol(266)

[33mWarning[0m for UnrestrictedWrite in contract 'Spin':
    |    require(amount <= _balances[account]);
    |
  > |    _totalSupply = _totalSupply.sub(amount);
    |    _balances[account] = _balances[account].sub(amount);
    |    emit Transfer(account, address(0), amount);
  at /unique_chucks/12/0x8496a4a2678348e55c3ad1c45e53aadba5eb970c.sol(280)

[33mWarning[0m for UnrestrictedWrite in contract 'Spin':
    |
    |    _totalSupply = _totalSupply.sub(amount);
  > |    _balances[account] = _balances[account].sub(amount);
    |    emit Transfer(account, address(0), amount);
    |  }
  at /unique_chucks/12/0x8496a4a2678348e55c3ad1c45e53aadba5eb970c.sol(281)