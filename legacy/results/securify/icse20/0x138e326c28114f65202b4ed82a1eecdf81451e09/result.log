Processing contract: /unique_chucks/19/0x138e326c28114f65202b4ed82a1eecdf81451e09.sol:ApproveAndCallFallBack
Processing contract: /unique_chucks/19/0x138e326c28114f65202b4ed82a1eecdf81451e09.sol:ERC20Interface
Processing contract: /unique_chucks/19/0x138e326c28114f65202b4ed82a1eecdf81451e09.sol:ExclusivePlatform
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/19/0x138e326c28114f65202b4ed82a1eecdf81451e09.sol:ForeignToken
Processing contract: /unique_chucks/19/0x138e326c28114f65202b4ed82a1eecdf81451e09.sol:Owned
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/19/0x138e326c28114f65202b4ed82a1eecdf81451e09.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for TODAmount in contract 'ExclusivePlatform':
    |    function withdrawFund() onlyOwner public {
    |        uint256 balance = address(this).balance;
  > |        owner.transfer(balance);
    |    }
    |    
  at /unique_chucks/19/0x138e326c28114f65202b4ed82a1eecdf81451e09.sol(254)

[31mViolation[0m for TODReceiver in contract 'ExclusivePlatform':
    |    function withdrawFund() onlyOwner public {
    |        uint256 balance = address(this).balance;
  > |        owner.transfer(balance);
    |    }
    |    
  at /unique_chucks/19/0x138e326c28114f65202b4ed82a1eecdf81451e09.sol(254)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'ExclusivePlatform':
    |        require(_amount <= address(this).balance);
    |        emit TransferEther(address(this), _receiver, _amount);
  > |        _receiver.transfer(_amount);
    |    }
    |    
  at /unique_chucks/19/0x138e326c28114f65202b4ed82a1eecdf81451e09.sol(249)

[31mViolation[0m for UnrestrictedWrite in contract 'ExclusivePlatform':
    |     function whitelistAddresses(address[] memory _addresses) onlyOwner public {
    |        for (uint i = 0; i < _addresses.length; i++) {
  > |            blacklist[_addresses[i]] = false;
    |        }
    |    }
  at /unique_chucks/19/0x138e326c28114f65202b4ed82a1eecdf81451e09.sol(279)

[31mViolation[0m for UnrestrictedWrite in contract 'ExclusivePlatform':
    |    function blacklistAddresses(address[] memory _addresses) onlyOwner public {
    |        for (uint i = 0; i < _addresses.length; i++) {
  > |            blacklist[_addresses[i]] = true;
    |        }
    |    }
  at /unique_chucks/19/0x138e326c28114f65202b4ed82a1eecdf81451e09.sol(285)

[33mWarning[0m for UnrestrictedWrite in contract 'ExclusivePlatform':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(owner, newOwner);
  > |        owner = newOwner;
    |    }
    |
  at /unique_chucks/19/0x138e326c28114f65202b4ed82a1eecdf81451e09.sol(79)

[33mWarning[0m for UnrestrictedWrite in contract 'ExclusivePlatform':
    |    function updateXPLPerEther(uint _XPLPerEther) public onlyOwner {        
    |        emit NewPrice(owner, XPLPerEther, _XPLPerEther);
  > |        XPLPerEther = _XPLPerEther;
    |    }
    |    //toggle airdrop
  at /unique_chucks/19/0x138e326c28114f65202b4ed82a1eecdf81451e09.sol(145)

[33mWarning[0m for UnrestrictedWrite in contract 'ExclusivePlatform':
    |    //toggle airdrop
    |    function switchAirdrop() public onlyOwner {
  > |        airdropIsOn = !(airdropIsOn);
    |    }
    |    //toggle crowdsale
  at /unique_chucks/19/0x138e326c28114f65202b4ed82a1eecdf81451e09.sol(149)

[33mWarning[0m for UnrestrictedWrite in contract 'ExclusivePlatform':
    |    //toggle crowdsale
    |    function switchCrowdsale() public onlyOwner {
  > |        crowdsaleIsOn = !(crowdsaleIsOn);
    |    }
    |    //give bonus for buy of 10 ether and above
  at /unique_chucks/19/0x138e326c28114f65202b4ed82a1eecdf81451e09.sol(153)

[33mWarning[0m for UnrestrictedWrite in contract 'Owned':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(owner, newOwner);
  > |        owner = newOwner;
    |    }
    |
  at /unique_chucks/19/0x138e326c28114f65202b4ed82a1eecdf81451e09.sol(79)