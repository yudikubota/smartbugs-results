Processing contract: /unique_chucks/9/0x598c9a4f069dc076984868873c01e78a905d50e6.sol:ERC20
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/9/0x598c9a4f069dc076984868873c01e78a905d50e6.sol:IERC20
Processing contract: /unique_chucks/9/0x598c9a4f069dc076984868873c01e78a905d50e6.sol:LedgeriumToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/9/0x598c9a4f069dc076984868873c01e78a905d50e6.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for LockedEther in contract 'ERC20':
    | * compliant implementations may not do it.
    | */
  > |contract ERC20 is IERC20 {
    |    using SafeMath for uint256;
    |    mapping (address => uint256) private _balances;
  at /unique_chucks/9/0x598c9a4f069dc076984868873c01e78a905d50e6.sol(103)

[33mWarning[0m for UnrestrictedWrite in contract 'ERC20':
    |        require(account != address(0));
    |
  > |        _totalSupply = _totalSupply.sub(value);
    |        _balances[account] = _balances[account].sub(value);
    |        emit Transfer(account, address(0), value);
  at /unique_chucks/9/0x598c9a4f069dc076984868873c01e78a905d50e6.sol(299)

[31mViolation[0m for LockedEther in contract 'LedgeriumToken':
    | * `ERC20` functions.
    | */
  > |contract LedgeriumToken is ERC20 {
    |    uint256 public constant INITIAL_SUPPLY = 20000000000000000;
    |    /**
  at /unique_chucks/9/0x598c9a4f069dc076984868873c01e78a905d50e6.sol(329)

[33mWarning[0m for UnrestrictedWrite in contract 'LedgeriumToken':
    |        require(account != address(0));
    |
  > |        _totalSupply = _totalSupply.sub(value);
    |        _balances[account] = _balances[account].sub(value);
    |        emit Transfer(account, address(0), value);
  at /unique_chucks/9/0x598c9a4f069dc076984868873c01e78a905d50e6.sol(299)