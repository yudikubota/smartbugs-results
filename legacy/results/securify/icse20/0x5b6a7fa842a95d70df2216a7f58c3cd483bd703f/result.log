Processing contract: /unique_chucks/11/0x5b6a7fa842a95d70df2216a7f58c3cd483bd703f.sol:BasicToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/11/0x5b6a7fa842a95d70df2216a7f58c3cd483bd703f.sol:ERC20
Processing contract: /unique_chucks/11/0x5b6a7fa842a95d70df2216a7f58c3cd483bd703f.sol:ERC20Basic
Processing contract: /unique_chucks/11/0x5b6a7fa842a95d70df2216a7f58c3cd483bd703f.sol:FFToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/11/0x5b6a7fa842a95d70df2216a7f58c3cd483bd703f.sol:Ownable
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/11/0x5b6a7fa842a95d70df2216a7f58c3cd483bd703f.sol:Pausable
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/11/0x5b6a7fa842a95d70df2216a7f58c3cd483bd703f.sol:PausableToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/11/0x5b6a7fa842a95d70df2216a7f58c3cd483bd703f.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/11/0x5b6a7fa842a95d70df2216a7f58c3cd483bd703f.sol:StandardToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[33mWarning[0m for UnrestrictedWrite in contract 'BasicToken':
    |
    |        balances[msg.sender] = balances[msg.sender].sub(_value);
  > |        balances[_to] = balances[_to].add(_value);
    |        emit Transfer(msg.sender, _to, _value);
    |        return true;
  at /unique_chucks/11/0x5b6a7fa842a95d70df2216a7f58c3cd483bd703f.sol(142)

[31mViolation[0m for LockedEther in contract 'FFToken':
    |}
    |
  > |contract FFToken is PausableToken {
    |    string public constant name = "Fifty Five Token"; 
    |    string public constant symbol = "FF";
  at /unique_chucks/11/0x5b6a7fa842a95d70df2216a7f58c3cd483bd703f.sol(315)

[33mWarning[0m for UnrestrictedWrite in contract 'FFToken':
    |
    |        balances[msg.sender] = balances[msg.sender].sub(_value);
  > |        balances[_to] = balances[_to].add(_value);
    |        emit Transfer(msg.sender, _to, _value);
    |        return true;
  at /unique_chucks/11/0x5b6a7fa842a95d70df2216a7f58c3cd483bd703f.sol(142)

[33mWarning[0m for UnrestrictedWrite in contract 'FFToken':
    |        require(_value <= allowed[_from][msg.sender]);
    |
  > |        balances[_from] = balances[_from].sub(_value);
    |        balances[_to] = balances[_to].add(_value);
    |        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
  at /unique_chucks/11/0x5b6a7fa842a95d70df2216a7f58c3cd483bd703f.sol(180)

[33mWarning[0m for UnrestrictedWrite in contract 'FFToken':
    |
    |        balances[_from] = balances[_from].sub(_value);
  > |        balances[_to] = balances[_to].add(_value);
    |        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
    |        emit Transfer(_from, _to, _value);
  at /unique_chucks/11/0x5b6a7fa842a95d70df2216a7f58c3cd483bd703f.sol(181)

[33mWarning[0m for UnrestrictedWrite in contract 'FFToken':
    |        
    |        balances[msg.sender] = balances[msg.sender].sub(_value);
  > |        totalSupply_ = totalSupply_.sub(_value);
    |        emit Burn(msg.sender, _value);
    |        return true;
  at /unique_chucks/11/0x5b6a7fa842a95d70df2216a7f58c3cd483bd703f.sol(344)

[33mWarning[0m for UnrestrictedWrite in contract 'FFToken':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(owner, newOwner);
  > |        owner = newOwner;
    |    }
    |
  at /unique_chucks/11/0x5b6a7fa842a95d70df2216a7f58c3cd483bd703f.sol(40)

[33mWarning[0m for UnrestrictedWrite in contract 'FFToken':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipRenounced(owner);
  > |        owner = address(0);
    |    }
    |}
  at /unique_chucks/11/0x5b6a7fa842a95d70df2216a7f58c3cd483bd703f.sol(48)

[33mWarning[0m for UnrestrictedWrite in contract 'FFToken':
    |    */
    |    function pause() onlyOwner whenNotPaused public {
  > |        paused = true;
    |        emit Pause();
    |    }
  at /unique_chucks/11/0x5b6a7fa842a95d70df2216a7f58c3cd483bd703f.sol(279)

[33mWarning[0m for UnrestrictedWrite in contract 'FFToken':
    |    */
    |    function unpause() onlyOwner whenPaused public {
  > |        paused = false;
    |        emit Unpause();
    |    }
  at /unique_chucks/11/0x5b6a7fa842a95d70df2216a7f58c3cd483bd703f.sol(287)

[33mWarning[0m for UnrestrictedWrite in contract 'Ownable':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(owner, newOwner);
  > |        owner = newOwner;
    |    }
    |
  at /unique_chucks/11/0x5b6a7fa842a95d70df2216a7f58c3cd483bd703f.sol(40)

[33mWarning[0m for UnrestrictedWrite in contract 'Ownable':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipRenounced(owner);
  > |        owner = address(0);
    |    }
    |}
  at /unique_chucks/11/0x5b6a7fa842a95d70df2216a7f58c3cd483bd703f.sol(48)

[33mWarning[0m for UnrestrictedWrite in contract 'Pausable':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(owner, newOwner);
  > |        owner = newOwner;
    |    }
    |
  at /unique_chucks/11/0x5b6a7fa842a95d70df2216a7f58c3cd483bd703f.sol(40)

[33mWarning[0m for UnrestrictedWrite in contract 'Pausable':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipRenounced(owner);
  > |        owner = address(0);
    |    }
    |}
  at /unique_chucks/11/0x5b6a7fa842a95d70df2216a7f58c3cd483bd703f.sol(48)

[33mWarning[0m for UnrestrictedWrite in contract 'Pausable':
    |    */
    |    function pause() onlyOwner whenNotPaused public {
  > |        paused = true;
    |        emit Pause();
    |    }
  at /unique_chucks/11/0x5b6a7fa842a95d70df2216a7f58c3cd483bd703f.sol(279)

[33mWarning[0m for UnrestrictedWrite in contract 'Pausable':
    |    */
    |    function unpause() onlyOwner whenPaused public {
  > |        paused = false;
    |        emit Unpause();
    |    }
  at /unique_chucks/11/0x5b6a7fa842a95d70df2216a7f58c3cd483bd703f.sol(287)

[33mWarning[0m for UnrestrictedWrite in contract 'PausableToken':
    |
    |        balances[msg.sender] = balances[msg.sender].sub(_value);
  > |        balances[_to] = balances[_to].add(_value);
    |        emit Transfer(msg.sender, _to, _value);
    |        return true;
  at /unique_chucks/11/0x5b6a7fa842a95d70df2216a7f58c3cd483bd703f.sol(142)

[33mWarning[0m for UnrestrictedWrite in contract 'PausableToken':
    |        require(_value <= allowed[_from][msg.sender]);
    |
  > |        balances[_from] = balances[_from].sub(_value);
    |        balances[_to] = balances[_to].add(_value);
    |        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
  at /unique_chucks/11/0x5b6a7fa842a95d70df2216a7f58c3cd483bd703f.sol(180)

[33mWarning[0m for UnrestrictedWrite in contract 'PausableToken':
    |
    |        balances[_from] = balances[_from].sub(_value);
  > |        balances[_to] = balances[_to].add(_value);
    |        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
    |        emit Transfer(_from, _to, _value);
  at /unique_chucks/11/0x5b6a7fa842a95d70df2216a7f58c3cd483bd703f.sol(181)

[33mWarning[0m for UnrestrictedWrite in contract 'PausableToken':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(owner, newOwner);
  > |        owner = newOwner;
    |    }
    |
  at /unique_chucks/11/0x5b6a7fa842a95d70df2216a7f58c3cd483bd703f.sol(40)

[33mWarning[0m for UnrestrictedWrite in contract 'PausableToken':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipRenounced(owner);
  > |        owner = address(0);
    |    }
    |}
  at /unique_chucks/11/0x5b6a7fa842a95d70df2216a7f58c3cd483bd703f.sol(48)

[33mWarning[0m for UnrestrictedWrite in contract 'PausableToken':
    |    */
    |    function pause() onlyOwner whenNotPaused public {
  > |        paused = true;
    |        emit Pause();
    |    }
  at /unique_chucks/11/0x5b6a7fa842a95d70df2216a7f58c3cd483bd703f.sol(279)

[33mWarning[0m for UnrestrictedWrite in contract 'PausableToken':
    |    */
    |    function unpause() onlyOwner whenPaused public {
  > |        paused = false;
    |        emit Unpause();
    |    }
  at /unique_chucks/11/0x5b6a7fa842a95d70df2216a7f58c3cd483bd703f.sol(287)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |
    |        balances[msg.sender] = balances[msg.sender].sub(_value);
  > |        balances[_to] = balances[_to].add(_value);
    |        emit Transfer(msg.sender, _to, _value);
    |        return true;
  at /unique_chucks/11/0x5b6a7fa842a95d70df2216a7f58c3cd483bd703f.sol(142)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |        require(_value <= allowed[_from][msg.sender]);
    |
  > |        balances[_from] = balances[_from].sub(_value);
    |        balances[_to] = balances[_to].add(_value);
    |        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
  at /unique_chucks/11/0x5b6a7fa842a95d70df2216a7f58c3cd483bd703f.sol(180)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |
    |        balances[_from] = balances[_from].sub(_value);
  > |        balances[_to] = balances[_to].add(_value);
    |        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
    |        emit Transfer(_from, _to, _value);
  at /unique_chucks/11/0x5b6a7fa842a95d70df2216a7f58c3cd483bd703f.sol(181)