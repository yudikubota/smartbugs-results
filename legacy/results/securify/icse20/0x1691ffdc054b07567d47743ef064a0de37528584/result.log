Processing contract: /unique_chucks/17/0x1691ffdc054b07567d47743ef064a0de37528584.sol:ChainBot2000
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/17/0x1691ffdc054b07567d47743ef064a0de37528584.sol:ERC20Interface
Processing contract: /unique_chucks/17/0x1691ffdc054b07567d47743ef064a0de37528584.sol:Ownable
Processing contract: /unique_chucks/17/0x1691ffdc054b07567d47743ef064a0de37528584.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for UnrestrictedWrite in contract 'ChainBot2000':
    |    function updateBalance(bytes32 _steamid, uint _amount) external {
    |        assert(DAIContract.transferFrom(msg.sender, address(this), _amount));
  > |        deposits[_steamid] = deposits[_steamid].add( _amount);
    |        emit Deposit(msg.sender, _steamid, _amount);
    |	}
  at /unique_chucks/17/0x1691ffdc054b07567d47743ef064a0de37528584.sol(151)

[33mWarning[0m for UnrestrictedWrite in contract 'ChainBot2000':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipTransferred(_owner, address(0));
  > |        _owner = address(0);
    |    }
    |
  at /unique_chucks/17/0x1691ffdc054b07567d47743ef064a0de37528584.sol(47)

[33mWarning[0m for UnrestrictedWrite in contract 'ChainBot2000':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_chucks/17/0x1691ffdc054b07567d47743ef064a0de37528584.sol(65)