Processing contract: /unique_chucks/22/0x1c2f44ac1b7a837edbb3f32b81832f0eed0151ef.sol:ERC20
Processing contract: /unique_chucks/22/0x1c2f44ac1b7a837edbb3f32b81832f0eed0151ef.sol:HenaSale
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
java.io.IOException: Timeout for /tmp/binaries_souffle591100564828452939/mustExplicit -j 2 -F /tmp/souffle-224a1db6-7d6f-4082-b414-7ef9a1cb99f8 -D /tmp/souffle-224a1db6-7d6f-4082-b414-7ef9a1cb99f8_OUT
	at ch.securify.analysis.AbstractDataflow.runCommand(AbstractDataflow.java:277)
	at ch.securify.analysis.AbstractDataflow.initDataflow(AbstractDataflow.java:169)
	at ch.securify.analysis.MustExplicitDataflow.<init>(MustExplicitDataflow.java:33)
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:33)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error in Securify
java.lang.RuntimeException
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:37)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error, skipping: /unique_chucks/22/0x1c2f44ac1b7a837edbb3f32b81832f0eed0151ef.sol:HenaSale
Processing contract: /unique_chucks/22/0x1c2f44ac1b7a837edbb3f32b81832f0eed0151ef.sol:Manager
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/22/0x1c2f44ac1b7a837edbb3f32b81832f0eed0151ef.sol:Ownable
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/22/0x1c2f44ac1b7a837edbb3f32b81832f0eed0151ef.sol:PageViewRecord
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/22/0x1c2f44ac1b7a837edbb3f32b81832f0eed0151ef.sol:Pausable
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/22/0x1c2f44ac1b7a837edbb3f32b81832f0eed0151ef.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/22/0x1c2f44ac1b7a837edbb3f32b81832f0eed0151ef.sol:SaleRecord
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/22/0x1c2f44ac1b7a837edbb3f32b81832f0eed0151ef.sol:Withdrawable
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for LockedEther in contract 'Manager':
    |}
    |
  > |contract Manager is Ownable {
    |    
    |    address[] managers;
  at /unique_chucks/22/0x1c2f44ac1b7a837edbb3f32b81832f0eed0151ef.sol(49)

[31mViolation[0m for UnrestrictedWrite in contract 'Manager':
    |pragma solidity ^0.5.2;
    |
  > |library SafeMath {
    |    //uint256
    |    function mul(uint256 a, uint256 b) internal pure returns (uint256) {
  at /unique_chucks/22/0x1c2f44ac1b7a837edbb3f32b81832f0eed0151ef.sol(3)

[31mViolation[0m for UnrestrictedWrite in contract 'Manager':
    |        require(!exist);
    |        
  > |        managers.push(_to);
    |    }
    |
  at /unique_chucks/22/0x1c2f44ac1b7a837edbb3f32b81832f0eed0151ef.sol(82)

[33mWarning[0m for UnrestrictedWrite in contract 'Manager':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(owner, newOwner);
  > |        owner = newOwner;
    |    }
    |
  at /unique_chucks/22/0x1c2f44ac1b7a837edbb3f32b81832f0eed0151ef.sol(44)

[33mWarning[0m for UnrestrictedWrite in contract 'Ownable':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(owner, newOwner);
  > |        owner = newOwner;
    |    }
    |
  at /unique_chucks/22/0x1c2f44ac1b7a837edbb3f32b81832f0eed0151ef.sol(44)

[31mViolation[0m for LockedEther in contract 'PageViewRecord':
    |}
    |
  > |contract PageViewRecord is SaleRecord, Pausable {
    |    
    |    using SafeMath for uint256;
  at /unique_chucks/22/0x1c2f44ac1b7a837edbb3f32b81832f0eed0151ef.sol(248)

[33mWarning[0m for UnrestrictedWrite in contract 'PageViewRecord':
    |pragma solidity ^0.5.2;
    |
  > |library SafeMath {
    |    //uint256
    |    function mul(uint256 a, uint256 b) internal pure returns (uint256) {
  at /unique_chucks/22/0x1c2f44ac1b7a837edbb3f32b81832f0eed0151ef.sol(3)

[33mWarning[0m for UnrestrictedWrite in contract 'PageViewRecord':
    |        require(!exist);
    |        
  > |        managers.push(_to);
    |    }
    |
  at /unique_chucks/22/0x1c2f44ac1b7a837edbb3f32b81832f0eed0151ef.sol(82)

[33mWarning[0m for UnrestrictedWrite in contract 'PageViewRecord':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(owner, newOwner);
  > |        owner = newOwner;
    |    }
    |
  at /unique_chucks/22/0x1c2f44ac1b7a837edbb3f32b81832f0eed0151ef.sol(44)

[31mViolation[0m for LockedEther in contract 'Pausable':
    |}
    |
  > |contract Pausable is Manager {
    |    event Pause();
    |    event Unpause();
  at /unique_chucks/22/0x1c2f44ac1b7a837edbb3f32b81832f0eed0151ef.sol(87)

[33mWarning[0m for UnrestrictedWrite in contract 'Pausable':
    |pragma solidity ^0.5.2;
    |
  > |library SafeMath {
    |    //uint256
    |    function mul(uint256 a, uint256 b) internal pure returns (uint256) {
  at /unique_chucks/22/0x1c2f44ac1b7a837edbb3f32b81832f0eed0151ef.sol(3)

[33mWarning[0m for UnrestrictedWrite in contract 'Pausable':
    |        require(!exist);
    |        
  > |        managers.push(_to);
    |    }
    |
  at /unique_chucks/22/0x1c2f44ac1b7a837edbb3f32b81832f0eed0151ef.sol(82)

[33mWarning[0m for UnrestrictedWrite in contract 'Pausable':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(owner, newOwner);
  > |        owner = newOwner;
    |    }
    |
  at /unique_chucks/22/0x1c2f44ac1b7a837edbb3f32b81832f0eed0151ef.sol(44)

[31mViolation[0m for LockedEther in contract 'SaleRecord':
    |}
    |
  > |contract SaleRecord {
    |    
    |    using SafeMath for uint256;
  at /unique_chucks/22/0x1c2f44ac1b7a837edbb3f32b81832f0eed0151ef.sol(139)

[31mViolation[0m for LockedEther in contract 'Withdrawable':
    |}
    |
  > |contract Withdrawable is Manager {
    |    event PauseWithdraw();
    |    event UnpauseWithdraw();
  at /unique_chucks/22/0x1c2f44ac1b7a837edbb3f32b81832f0eed0151ef.sol(114)

[33mWarning[0m for UnrestrictedWrite in contract 'Withdrawable':
    |pragma solidity ^0.5.2;
    |
  > |library SafeMath {
    |    //uint256
    |    function mul(uint256 a, uint256 b) internal pure returns (uint256) {
  at /unique_chucks/22/0x1c2f44ac1b7a837edbb3f32b81832f0eed0151ef.sol(3)

[33mWarning[0m for UnrestrictedWrite in contract 'Withdrawable':
    |        require(!exist);
    |        
  > |        managers.push(_to);
    |    }
    |
  at /unique_chucks/22/0x1c2f44ac1b7a837edbb3f32b81832f0eed0151ef.sol(82)

[33mWarning[0m for UnrestrictedWrite in contract 'Withdrawable':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(owner, newOwner);
  > |        owner = newOwner;
    |    }
    |
  at /unique_chucks/22/0x1c2f44ac1b7a837edbb3f32b81832f0eed0151ef.sol(44)