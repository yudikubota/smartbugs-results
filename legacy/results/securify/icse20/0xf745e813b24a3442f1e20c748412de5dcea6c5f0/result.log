Processing contract: /unique_contracts/0xf745e813b24a3442f1e20c748412de5dcea6c5f0.sol:AdminUpgradeabilityProxy
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0xf745e813b24a3442f1e20c748412de5dcea6c5f0.sol:BaseAdminUpgradeabilityProxy
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0xf745e813b24a3442f1e20c748412de5dcea6c5f0.sol:BaseUpgradeabilityProxy
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0xf745e813b24a3442f1e20c748412de5dcea6c5f0.sol:Proxy
Processing contract: /unique_contracts/0xf745e813b24a3442f1e20c748412de5dcea6c5f0.sol:ProxyAdmin
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0xf745e813b24a3442f1e20c748412de5dcea6c5f0.sol:UpgradeabilityProxy
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0xf745e813b24a3442f1e20c748412de5dcea6c5f0.sol:ZOSLibAddress
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0xf745e813b24a3442f1e20c748412de5dcea6c5f0.sol:ZOSLibOwnable
[31mViolation[0m for RepeatedCall in contract 'AdminUpgradeabilityProxy':
    |      // Call the implementation.
    |      // out and outsize are 0 because we don't know the size yet.
  > |      let result := delegatecall(gas, implementation, 0, calldatasize, 0, 0)
    |
    |      // Copy the returned data.
  at /unique_contracts/0xf745e813b24a3442f1e20c748412de5dcea6c5f0.sol(121)

[33mWarning[0m for RepeatedCall in contract 'AdminUpgradeabilityProxy':
    |  function upgradeToAndCall(address newImplementation, bytes calldata data) payable external ifAdmin {
    |    _upgradeTo(newImplementation);
  > |    (bool success,) = newImplementation.delegatecall(data);
    |    require(success);
    |  }
  at /unique_contracts/0xf745e813b24a3442f1e20c748412de5dcea6c5f0.sol(361)

[31mViolation[0m for RepeatedCall in contract 'BaseAdminUpgradeabilityProxy':
    |      // Call the implementation.
    |      // out and outsize are 0 because we don't know the size yet.
  > |      let result := delegatecall(gas, implementation, 0, calldatasize, 0, 0)
    |
    |      // Copy the returned data.
  at /unique_contracts/0xf745e813b24a3442f1e20c748412de5dcea6c5f0.sol(121)

[33mWarning[0m for RepeatedCall in contract 'BaseAdminUpgradeabilityProxy':
    |  function upgradeToAndCall(address newImplementation, bytes calldata data) payable external ifAdmin {
    |    _upgradeTo(newImplementation);
  > |    (bool success,) = newImplementation.delegatecall(data);
    |    require(success);
    |  }
  at /unique_contracts/0xf745e813b24a3442f1e20c748412de5dcea6c5f0.sol(361)

[33mWarning[0m for LockedEther in contract 'ProxyAdmin':
    | * of upgrading it as well as transferring it to another admin.
    | */
  > |contract ProxyAdmin is ZOSLibOwnable {
    |  
    |  /**
  at /unique_contracts/0xf745e813b24a3442f1e20c748412de5dcea6c5f0.sol(433)

[33mWarning[0m for TODAmount in contract 'ProxyAdmin':
    |   */
    |  function upgradeAndCall(AdminUpgradeabilityProxy proxy, address implementation, bytes memory data) payable public onlyOwner {
  > |    proxy.upgradeToAndCall.value(msg.value)(implementation, data);
    |  }
    |}
  at /unique_contracts/0xf745e813b24a3442f1e20c748412de5dcea6c5f0.sol(488)

[33mWarning[0m for TODReceiver in contract 'ProxyAdmin':
    |   */
    |  function upgradeAndCall(AdminUpgradeabilityProxy proxy, address implementation, bytes memory data) payable public onlyOwner {
  > |    proxy.upgradeToAndCall.value(msg.value)(implementation, data);
    |  }
    |}
  at /unique_contracts/0xf745e813b24a3442f1e20c748412de5dcea6c5f0.sol(488)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'ProxyAdmin':
    |   */
    |  function upgradeAndCall(AdminUpgradeabilityProxy proxy, address implementation, bytes memory data) payable public onlyOwner {
  > |    proxy.upgradeToAndCall.value(msg.value)(implementation, data);
    |  }
    |}
  at /unique_contracts/0xf745e813b24a3442f1e20c748412de5dcea6c5f0.sol(488)

[33mWarning[0m for UnrestrictedWrite in contract 'ProxyAdmin':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipTransferred(_owner, address(0));
  > |        _owner = address(0);
    |    }
    |
  at /unique_contracts/0xf745e813b24a3442f1e20c748412de5dcea6c5f0.sol(59)

[33mWarning[0m for UnrestrictedWrite in contract 'ProxyAdmin':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_contracts/0xf745e813b24a3442f1e20c748412de5dcea6c5f0.sol(77)