Processing contract: /unique_chucks/39/0x1222d23b30442b442391d0db8895cefa54128c3c.sol:IERC20
Processing contract: /unique_chucks/39/0x1222d23b30442b442391d0db8895cefa54128c3c.sol:Math
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/39/0x1222d23b30442b442391d0db8895cefa54128c3c.sol:Ownable
Processing contract: /unique_chucks/39/0x1222d23b30442b442391d0db8895cefa54128c3c.sol:SafeERC20
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/39/0x1222d23b30442b442391d0db8895cefa54128c3c.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/39/0x1222d23b30442b442391d0db8895cefa54128c3c.sol:TokenSale
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for RepeatedCall in contract 'TokenSale':
    |
    |    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {
  > |        require(token.transferFrom(from, to, value));
    |    }
    |
  at /unique_chucks/39/0x1222d23b30442b442391d0db8895cefa54128c3c.sol(221)

[33mWarning[0m for UnrestrictedWrite in contract 'TokenSale':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipTransferred(_owner, address(0));
  > |        _owner = address(0);
    |    }
    |
  at /unique_chucks/39/0x1222d23b30442b442391d0db8895cefa54128c3c.sol(150)

[33mWarning[0m for UnrestrictedWrite in contract 'TokenSale':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_chucks/39/0x1222d23b30442b442391d0db8895cefa54128c3c.sol(168)

[33mWarning[0m for UnrestrictedWrite in contract 'TokenSale':
    |    function _setFundCollector(address collector) private {
    |        require(collector != address(0), "fund collector cannot be 0x0");
  > |        fundCollector = collector;
    |        emit FundCollectorSet(msg.sender, collector);
    |    }
  at /unique_chucks/39/0x1222d23b30442b442391d0db8895cefa54128c3c.sol(408)

[33mWarning[0m for UnrestrictedWrite in contract 'TokenSale':
    |    function _setSaleToken(address token) private {
    |        require(token != address(0), "sale token cannot be 0x0");
  > |        saleToken = IERC20(token);
    |        emit SaleTokenSet(msg.sender, token);
    |    }
  at /unique_chucks/39/0x1222d23b30442b442391d0db8895cefa54128c3c.sol(424)

[33mWarning[0m for UnrestrictedWrite in contract 'TokenSale':
    |    function _setTokenWallet(address wallet) private {
    |        require(wallet != address(0), "token wallet cannot be 0x0");
  > |        tokenWallet = wallet;
    |        emit TokenWalletSet(msg.sender, wallet);
    |    }
  at /unique_chucks/39/0x1222d23b30442b442391d0db8895cefa54128c3c.sol(440)

[33mWarning[0m for UnrestrictedWrite in contract 'TokenSale':
    |        require(t1BonusRate >= t2BonusRate, "invalid bonus rate");
    |
  > |        bonusThreshold = threshold;
    |        tierOneBonusTime = t1BonusTime;
    |        tierOneBonusRate = t1BonusRate;
  at /unique_chucks/39/0x1222d23b30442b442391d0db8895cefa54128c3c.sol(487)

[33mWarning[0m for UnrestrictedWrite in contract 'TokenSale':
    |
    |        bonusThreshold = threshold;
  > |        tierOneBonusTime = t1BonusTime;
    |        tierOneBonusRate = t1BonusRate;
    |        tierTwoBonusTime = t2BonusTime;
  at /unique_chucks/39/0x1222d23b30442b442391d0db8895cefa54128c3c.sol(488)

[33mWarning[0m for UnrestrictedWrite in contract 'TokenSale':
    |        bonusThreshold = threshold;
    |        tierOneBonusTime = t1BonusTime;
  > |        tierOneBonusRate = t1BonusRate;
    |        tierTwoBonusTime = t2BonusTime;
    |        tierTwoBonusRate = t2BonusRate;
  at /unique_chucks/39/0x1222d23b30442b442391d0db8895cefa54128c3c.sol(489)

[33mWarning[0m for UnrestrictedWrite in contract 'TokenSale':
    |        tierOneBonusTime = t1BonusTime;
    |        tierOneBonusRate = t1BonusRate;
  > |        tierTwoBonusTime = t2BonusTime;
    |        tierTwoBonusRate = t2BonusRate;
    |
  at /unique_chucks/39/0x1222d23b30442b442391d0db8895cefa54128c3c.sol(490)

[33mWarning[0m for UnrestrictedWrite in contract 'TokenSale':
    |        tierOneBonusRate = t1BonusRate;
    |        tierTwoBonusTime = t2BonusTime;
  > |        tierTwoBonusRate = t2BonusRate;
    |
    |        emit BonusConditionsSet(
  at /unique_chucks/39/0x1222d23b30442b442391d0db8895cefa54128c3c.sol(491)

[33mWarning[0m for UnrestrictedWrite in contract 'TokenSale':
    |     */
    |    function setWhitelist(address user, bool allowed) external onlyOwner {
  > |        whitelist[user] = allowed;
    |        emit WhitelistSet(msg.sender, user, allowed);
    |    }
  at /unique_chucks/39/0x1222d23b30442b442391d0db8895cefa54128c3c.sol(510)

[33mWarning[0m for UnrestrictedWrite in contract 'TokenSale':
    |        onlyOwner
    |    {
  > |        _exTokens[exToken].accepted = accepted;
    |        _exTokens[exToken].rate = rate;
    |        emit ExTokenSet(msg.sender, exToken, accepted, rate);
  at /unique_chucks/39/0x1222d23b30442b442391d0db8895cefa54128c3c.sol(538)

[33mWarning[0m for UnrestrictedWrite in contract 'TokenSale':
    |    {
    |        _exTokens[exToken].accepted = accepted;
  > |        _exTokens[exToken].rate = rate;
    |        emit ExTokenSet(msg.sender, exToken, accepted, rate);
    |    }
  at /unique_chucks/39/0x1222d23b30442b442391d0db8895cefa54128c3c.sol(539)