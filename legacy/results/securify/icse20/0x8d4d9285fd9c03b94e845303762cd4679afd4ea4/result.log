Processing contract: /unique_chucks/28/0x8d4d9285fd9c03b94e845303762cd4679afd4ea4.sol:IERC20
Processing contract: /unique_chucks/28/0x8d4d9285fd9c03b94e845303762cd4679afd4ea4.sol:MineUnlock
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/28/0x8d4d9285fd9c03b94e845303762cd4679afd4ea4.sol:Ownable
Processing contract: /unique_chucks/28/0x8d4d9285fd9c03b94e845303762cd4679afd4ea4.sol:SafeERC20
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/28/0x8d4d9285fd9c03b94e845303762cd4679afd4ea4.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/28/0x8d4d9285fd9c03b94e845303762cd4679afd4ea4.sol:TokenVesting
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[33mWarning[0m for UnrestrictedWrite in contract 'MineUnlock':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipTransferred(_owner, address(0));
  > |        _owner = address(0);
    |    }
    |
  at /unique_chucks/28/0x8d4d9285fd9c03b94e845303762cd4679afd4ea4.sol(176)

[33mWarning[0m for UnrestrictedWrite in contract 'MineUnlock':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_chucks/28/0x8d4d9285fd9c03b94e845303762cd4679afd4ea4.sol(194)

[33mWarning[0m for UnrestrictedWrite in contract 'MineUnlock':
    |        require(unreleased > 0);
    |
  > |        _released[address(token)] = _released[address(token)].add(unreleased);
    |
    |        token.safeTransfer(_beneficiary, unreleased);
  at /unique_chucks/28/0x8d4d9285fd9c03b94e845303762cd4679afd4ea4.sol(313)

[33mWarning[0m for UnrestrictedWrite in contract 'MineUnlock':
    |        uint256 refund = balance.sub(unreleased);
    |
  > |        _revoked[address(token)] = true;
    |
    |        token.safeTransfer(owner(), refund);
  at /unique_chucks/28/0x8d4d9285fd9c03b94e845303762cd4679afd4ea4.sol(334)

[33mWarning[0m for UnrestrictedWrite in contract 'TokenVesting':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipTransferred(_owner, address(0));
  > |        _owner = address(0);
    |    }
    |
  at /unique_chucks/28/0x8d4d9285fd9c03b94e845303762cd4679afd4ea4.sol(176)

[33mWarning[0m for UnrestrictedWrite in contract 'TokenVesting':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_chucks/28/0x8d4d9285fd9c03b94e845303762cd4679afd4ea4.sol(194)

[33mWarning[0m for UnrestrictedWrite in contract 'TokenVesting':
    |        require(unreleased > 0);
    |
  > |        _released[address(token)] = _released[address(token)].add(unreleased);
    |
    |        token.safeTransfer(_beneficiary, unreleased);
  at /unique_chucks/28/0x8d4d9285fd9c03b94e845303762cd4679afd4ea4.sol(313)

[33mWarning[0m for UnrestrictedWrite in contract 'TokenVesting':
    |        uint256 refund = balance.sub(unreleased);
    |
  > |        _revoked[address(token)] = true;
    |
    |        token.safeTransfer(owner(), refund);
  at /unique_chucks/28/0x8d4d9285fd9c03b94e845303762cd4679afd4ea4.sol(334)