Processing contract: /unique_chucks/12/0xaecc4b3aa6cf88091b480c7f26a77c1601212a65.sol:ERC20Basic
Processing contract: /unique_chucks/12/0xaecc4b3aa6cf88091b480c7f26a77c1601212a65.sol:Payout
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for TODAmount in contract 'Payout':
    |        hasClaimed[msg.sender] = true;
    |        require(rewardAmount <= address(this).balance);
  > |        msg.sender.transfer(rewardAmount);
    |    }
    |    
  at /unique_chucks/12/0xaecc4b3aa6cf88091b480c7f26a77c1601212a65.sol(74)

[31mViolation[0m for TODAmount in contract 'Payout':
    |    function extractFund(uint256 _amount) external onlyOwner {
    |        if (_amount == 0) {
  > |            owner.transfer(address(this).balance);
    |        } else {
    |            require(_amount <= address(this).balance);
  at /unique_chucks/12/0xaecc4b3aa6cf88091b480c7f26a77c1601212a65.sol(83)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'Payout':
    |        } else {
    |            require(_amount <= address(this).balance);
  > |            owner.transfer(_amount);
    |        }
    |    }
  at /unique_chucks/12/0xaecc4b3aa6cf88091b480c7f26a77c1601212a65.sol(86)

[33mWarning[0m for UnrestrictedWrite in contract 'Payout':
    |        require(!payoutSetup);
    |        require(msg.sender == payoutPoolAddress);
  > |        payoutPoolAmount = msg.value;
    |        payoutSetup = true;
    |        payoutPaused = true;
  at /unique_chucks/12/0xaecc4b3aa6cf88091b480c7f26a77c1601212a65.sol(49)

[33mWarning[0m for UnrestrictedWrite in contract 'Payout':
    |        require(msg.sender == payoutPoolAddress);
    |        payoutPoolAmount = msg.value;
  > |        payoutSetup = true;
    |        payoutPaused = true;
    |    }
  at /unique_chucks/12/0xaecc4b3aa6cf88091b480c7f26a77c1601212a65.sol(50)

[33mWarning[0m for UnrestrictedWrite in contract 'Payout':
    |        payoutPoolAmount = msg.value;
    |        payoutSetup = true;
  > |        payoutPaused = true;
    |    }
    |    
  at /unique_chucks/12/0xaecc4b3aa6cf88091b480c7f26a77c1601212a65.sol(51)

[33mWarning[0m for UnrestrictedWrite in contract 'Payout':
    |    
    |    function payoutControlSwitch(bool status) external onlyOwner {
  > |        payoutPaused = status;
    |    }
    |    
  at /unique_chucks/12/0xaecc4b3aa6cf88091b480c7f26a77c1601212a65.sol(78)