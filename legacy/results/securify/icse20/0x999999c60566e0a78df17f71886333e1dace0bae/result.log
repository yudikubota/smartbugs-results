Processing contract: /unique_chucks/1/0x999999c60566e0a78df17f71886333e1dace0bae.sol:FckDice
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for TODAmount in contract 'FckDice':
    |        killed = true;
    |        jackpotSize = 0;
  > |        owner1.transfer(address(this).balance);
    |    }
    |
  at /unique_chucks/1/0x999999c60566e0a78df17f71886333e1dace0bae.sol(195)

[31mViolation[0m for TODReceiver in contract 'FckDice':
    |        killed = true;
    |        jackpotSize = 0;
  > |        owner1.transfer(address(this).balance);
    |    }
    |
  at /unique_chucks/1/0x999999c60566e0a78df17f71886333e1dace0bae.sol(195)

[33mWarning[0m for TODReceiver in contract 'FckDice':
    |    // Helper routine to process the payment.
    |    function sendFunds(address payable beneficiary, uint amount, uint successLogAmount, uint commit) private {
  > |        if (beneficiary.send(amount)) {
    |            emit Payment(beneficiary, successLogAmount, commit);
    |        } else {
  at /unique_chucks/1/0x999999c60566e0a78df17f71886333e1dace0bae.sol(470)

[31mViolation[0m for UnrestrictedWrite in contract 'FckDice':
    |
    |        // Move bet into 'processed' state, release funds.
  > |        bet.amount = 0;
    |
    |        uint diceWinAmount;
  at /unique_chucks/1/0x999999c60566e0a78df17f71886333e1dace0bae.sol(436)

[33mWarning[0m for UnrestrictedWrite in contract 'FckDice':
    |        require(o != owner1);
    |        require(o != owner2);
  > |        owner1 = o;
    |    }
    |
  at /unique_chucks/1/0x999999c60566e0a78df17f71886333e1dace0bae.sol(149)

[33mWarning[0m for UnrestrictedWrite in contract 'FckDice':
    |        require(o != owner1);
    |        require(o != owner2);
  > |        owner2 = o;
    |    }
    |
  at /unique_chucks/1/0x999999c60566e0a78df17f71886333e1dace0bae.sol(156)

[33mWarning[0m for UnrestrictedWrite in contract 'FckDice':
    |    // See comment for "secretSigner" variable.
    |    function setSecretSigner(address newSecretSigner) external onlyOwner {
  > |        secretSigner = newSecretSigner;
    |    }
    |
  at /unique_chucks/1/0x999999c60566e0a78df17f71886333e1dace0bae.sol(161)

[33mWarning[0m for UnrestrictedWrite in contract 'FckDice':
    |    // Change the croupier address.
    |    function setCroupier(address newCroupier) external onlyOwner {
  > |        croupier = newCroupier;
    |    }
    |
  at /unique_chucks/1/0x999999c60566e0a78df17f71886333e1dace0bae.sol(166)

[33mWarning[0m for UnrestrictedWrite in contract 'FckDice':
    |    function setMaxProfit(uint128 _maxProfit) public onlyOwner {
    |        require(_maxProfit < MAX_AMOUNT, "maxProfit should be a sane number.");
  > |        maxProfit = _maxProfit;
    |    }
    |
  at /unique_chucks/1/0x999999c60566e0a78df17f71886333e1dace0bae.sol(172)

[33mWarning[0m for UnrestrictedWrite in contract 'FckDice':
    |        require(increaseAmount <= address(this).balance, "Increase amount larger than balance.");
    |        require(jackpotSize + lockedInBets + increaseAmount <= address(this).balance, "Not enough funds.");
  > |        jackpotSize += uint128(increaseAmount);
    |    }
    |
  at /unique_chucks/1/0x999999c60566e0a78df17f71886333e1dace0bae.sol(179)

[33mWarning[0m for UnrestrictedWrite in contract 'FckDice':
    |    function kill() external onlyOwner {
    |        require(lockedInBets == 0, "All bets should be processed (settled or refunded) before self-destruct.");
  > |        killed = true;
    |        jackpotSize = 0;
    |        owner1.transfer(address(this).balance);
  at /unique_chucks/1/0x999999c60566e0a78df17f71886333e1dace0bae.sol(193)

[33mWarning[0m for UnrestrictedWrite in contract 'FckDice':
    |        require(lockedInBets == 0, "All bets should be processed (settled or refunded) before self-destruct.");
    |        killed = true;
  > |        jackpotSize = 0;
    |        owner1.transfer(address(this).balance);
    |    }
  at /unique_chucks/1/0x999999c60566e0a78df17f71886333e1dace0bae.sol(194)