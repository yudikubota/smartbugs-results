Processing contract: /unique_chucks/41/0xc0d0a87b8e18811b863b50494867369588027063.sol:Buffer
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/41/0xc0d0a87b8e18811b863b50494867369588027063.sol:CBOR
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/41/0xc0d0a87b8e18811b863b50494867369588027063.sol:OraclizeAddrResolverI
Processing contract: /unique_chucks/41/0xc0d0a87b8e18811b863b50494867369588027063.sol:OraclizeI
Processing contract: /unique_chucks/41/0xc0d0a87b8e18811b863b50494867369588027063.sol:YoutubeViews
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/41/0xc0d0a87b8e18811b863b50494867369588027063.sol:solcChecker
Processing contract: /unique_chucks/41/0xc0d0a87b8e18811b863b50494867369588027063.sol:usingOraclize
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[33mWarning[0m for LockedEther in contract 'YoutubeViews':
    |*/
    |
  > |contract YoutubeViews is usingOraclize {
    |
    |    string public viewsCount;
  at /unique_chucks/41/0xc0d0a87b8e18811b863b50494867369588027063.sol(1351)

[31mViolation[0m for RepeatedCall in contract 'YoutubeViews':
    |            oraclize_setNetwork(networkID_auto);
    |        }
  > |        if (address(oraclize) != OAR.getAddress()) {
    |            oraclize = OraclizeI(OAR.getAddress());
    |        }
  at /unique_chucks/41/0xc0d0a87b8e18811b863b50494867369588027063.sol(306)

[31mViolation[0m for RepeatedCall in contract 'YoutubeViews':
    |        }
    |        if (address(oraclize) != OAR.getAddress()) {
  > |            oraclize = OraclizeI(OAR.getAddress());
    |        }
    |        _;
  at /unique_chucks/41/0xc0d0a87b8e18811b863b50494867369588027063.sol(307)

[31mViolation[0m for RepeatedCall in contract 'YoutubeViews':
    |
    |    function oraclize_cbAddress() oraclizeAPI internal returns (address _callbackAddress) {
  > |        return oraclize.cbAddress();
    |    }
    |
  at /unique_chucks/41/0xc0d0a87b8e18811b863b50494867369588027063.sol(857)

[33mWarning[0m for RepeatedCall in contract 'YoutubeViews':
    |            oraclize_setNetwork(networkID_auto);
    |        }
  > |        if (address(oraclize) != OAR.getAddress()) {
    |            oraclize = OraclizeI(OAR.getAddress());
    |        }
  at /unique_chucks/41/0xc0d0a87b8e18811b863b50494867369588027063.sol(306)

[33mWarning[0m for RepeatedCall in contract 'YoutubeViews':
    |
    |    function oraclize_query(string memory _datasource, string memory _arg) oraclizeAPI internal returns (bytes32 _id) {
  > |        uint price = oraclize.getPrice(_datasource);
    |        if (price > 1 ether + tx.gasprice * 200000) {
    |            return 0; // Unexpectedly high price
  at /unique_chucks/41/0xc0d0a87b8e18811b863b50494867369588027063.sol(396)

[33mWarning[0m for RepeatedCall in contract 'YoutubeViews':
    |            return 0; // Unexpectedly high price
    |        }
  > |        return oraclize.query.value(price)(0, _datasource, _arg);
    |    }
    |
  at /unique_chucks/41/0xc0d0a87b8e18811b863b50494867369588027063.sol(400)

[33mWarning[0m for TODAmount in contract 'YoutubeViews':
    |            return 0; // Unexpectedly high price
    |        }
  > |        return oraclize.query.value(price)(0, _datasource, _arg);
    |    }
    |
  at /unique_chucks/41/0xc0d0a87b8e18811b863b50494867369588027063.sol(400)

[33mWarning[0m for TODReceiver in contract 'YoutubeViews':
    |            return 0; // Unexpectedly high price
    |        }
  > |        return oraclize.query.value(price)(0, _datasource, _arg);
    |    }
    |
  at /unique_chucks/41/0xc0d0a87b8e18811b863b50494867369588027063.sol(400)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'YoutubeViews':
    |            return 0; // Unexpectedly high price
    |        }
  > |        return oraclize.query.value(price)(0, _datasource, _arg);
    |    }
    |
  at /unique_chucks/41/0xc0d0a87b8e18811b863b50494867369588027063.sol(400)

[31mViolation[0m for UnrestrictedWrite in contract 'YoutubeViews':
    |        }
    |        if (address(oraclize) != OAR.getAddress()) {
  > |            oraclize = OraclizeI(OAR.getAddress());
    |        }
    |        _;
  at /unique_chucks/41/0xc0d0a87b8e18811b863b50494867369588027063.sol(307)

[31mViolation[0m for UnrestrictedWrite in contract 'YoutubeViews':
    |    function oraclize_setNetwork() internal returns (bool _networkSet) {
    |        if (getCodeSize(0x1d3B2638a7cC9f2CB3D298A3DA7a90B67E5506ed) > 0) { //mainnet
  > |            OAR = OraclizeAddrResolverI(0x1d3B2638a7cC9f2CB3D298A3DA7a90B67E5506ed);
    |            oraclize_setNetworkName("eth_mainnet");
    |            return true;
  at /unique_chucks/41/0xc0d0a87b8e18811b863b50494867369588027063.sol(335)

[31mViolation[0m for UnrestrictedWrite in contract 'YoutubeViews':
    |        }
    |        if (getCodeSize(0xc03A2615D5efaf5F49F60B7BB6583eaec212fdf1) > 0) { //ropsten testnet
  > |            OAR = OraclizeAddrResolverI(0xc03A2615D5efaf5F49F60B7BB6583eaec212fdf1);
    |            oraclize_setNetworkName("eth_ropsten3");
    |            return true;
  at /unique_chucks/41/0xc0d0a87b8e18811b863b50494867369588027063.sol(340)

[31mViolation[0m for UnrestrictedWrite in contract 'YoutubeViews':
    |        }
    |        if (getCodeSize(0xB7A07BcF2Ba2f2703b24C0691b5278999C59AC7e) > 0) { //kovan testnet
  > |            OAR = OraclizeAddrResolverI(0xB7A07BcF2Ba2f2703b24C0691b5278999C59AC7e);
    |            oraclize_setNetworkName("eth_kovan");
    |            return true;
  at /unique_chucks/41/0xc0d0a87b8e18811b863b50494867369588027063.sol(345)

[31mViolation[0m for UnrestrictedWrite in contract 'YoutubeViews':
    |        }
    |        if (getCodeSize(0x146500cfd35B22E4A392Fe0aDc06De1a1368Ed48) > 0) { //rinkeby testnet
  > |            OAR = OraclizeAddrResolverI(0x146500cfd35B22E4A392Fe0aDc06De1a1368Ed48);
    |            oraclize_setNetworkName("eth_rinkeby");
    |            return true;
  at /unique_chucks/41/0xc0d0a87b8e18811b863b50494867369588027063.sol(350)

[31mViolation[0m for UnrestrictedWrite in contract 'YoutubeViews':
    |        }
    |        if (getCodeSize(0xa2998EFD205FB9D4B4963aFb70778D6354ad3A41) > 0) { //goerli testnet
  > |            OAR = OraclizeAddrResolverI(0xa2998EFD205FB9D4B4963aFb70778D6354ad3A41);
    |            oraclize_setNetworkName("eth_goerli");
    |            return true;
  at /unique_chucks/41/0xc0d0a87b8e18811b863b50494867369588027063.sol(355)

[31mViolation[0m for UnrestrictedWrite in contract 'YoutubeViews':
    |        }
    |        if (getCodeSize(0x6f485C8BF6fc43eA212E93BBF8ce046C7f1cb475) > 0) { //ethereum-bridge
  > |            OAR = OraclizeAddrResolverI(0x6f485C8BF6fc43eA212E93BBF8ce046C7f1cb475);
    |            return true;
    |        }
  at /unique_chucks/41/0xc0d0a87b8e18811b863b50494867369588027063.sol(360)

[31mViolation[0m for UnrestrictedWrite in contract 'YoutubeViews':
    |        }
    |        if (getCodeSize(0x20e12A1F859B3FeaE5Fb2A0A32C18F5a65555bBF) > 0) { //ether.camp ide
  > |            OAR = OraclizeAddrResolverI(0x20e12A1F859B3FeaE5Fb2A0A32C18F5a65555bBF);
    |            return true;
    |        }
  at /unique_chucks/41/0xc0d0a87b8e18811b863b50494867369588027063.sol(364)

[31mViolation[0m for UnrestrictedWrite in contract 'YoutubeViews':
    |        }
    |        if (getCodeSize(0x51efaF4c8B3C9AfBD5aB9F4bbC82784Ab6ef8fAA) > 0) { //browser-solidity
  > |            OAR = OraclizeAddrResolverI(0x51efaF4c8B3C9AfBD5aB9F4bbC82784Ab6ef8fAA);
    |            return true;
    |        }
  at /unique_chucks/41/0xc0d0a87b8e18811b863b50494867369588027063.sol(368)

[31mViolation[0m for UnrestrictedWrite in contract 'YoutubeViews':
    |    function __callback(bytes32 _myid, string memory _result, bytes memory _proof) public {
    |      _myid; _result; _proof;
  > |      oraclize_randomDS_args[bytes32(0)] = bytes32(0);
    |    }
    |
  at /unique_chucks/41/0xc0d0a87b8e18811b863b50494867369588027063.sol(384)

[31mViolation[0m for UnrestrictedWrite in contract 'YoutubeViews':
    |*/
    |
  > |contract YoutubeViews is usingOraclize {
    |
    |    string public viewsCount;
  at /unique_chucks/41/0xc0d0a87b8e18811b863b50494867369588027063.sol(1351)

[33mWarning[0m for UnrestrictedWrite in contract 'YoutubeViews':
    |*/
    |
  > |contract YoutubeViews is usingOraclize {
    |
    |    string public viewsCount;
  at /unique_chucks/41/0xc0d0a87b8e18811b863b50494867369588027063.sol(1351)

[31mViolation[0m for UnrestrictedWrite in contract 'usingOraclize':
    |    function __callback(bytes32 _myid, string memory _result, bytes memory _proof) public {
    |      _myid; _result; _proof;
  > |      oraclize_randomDS_args[bytes32(0)] = bytes32(0);
    |    }
    |
  at /unique_chucks/41/0xc0d0a87b8e18811b863b50494867369588027063.sol(384)