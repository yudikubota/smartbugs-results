Processing contract: /unique_chucks/21/0xaa44a4443d095a8064104ed680ef5070fa72399c.sol:ERC20
Processing contract: /unique_chucks/21/0xaa44a4443d095a8064104ed680ef5070fa72399c.sol:LTLNN
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/21/0xaa44a4443d095a8064104ed680ef5070fa72399c.sol:Ownable
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/21/0xaa44a4443d095a8064104ed680ef5070fa72399c.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[33mWarning[0m for UnrestrictedWrite in contract 'LTLNN':
    |        require(to != address(0));
    |        _balances[from] = _balances[from].sub(amount);
  > |        _balances[to] = _balances[to].add(amount);
    |        if(saleEndTime > block.timestamp)
    |            _amountForSale = _balances[address(this)];
  at /unique_chucks/21/0xaa44a4443d095a8064104ed680ef5070fa72399c.sol(174)

[33mWarning[0m for UnrestrictedWrite in contract 'LTLNN':
    |        _balances[to] = _balances[to].add(amount);
    |        if(saleEndTime > block.timestamp)
  > |            _amountForSale = _balances[address(this)];
    |    }
    |
  at /unique_chucks/21/0xaa44a4443d095a8064104ed680ef5070fa72399c.sol(176)