Processing contract: /unique_chucks/34/0xffb0df3f1825dcdf2b5f643827f220a7e8ccaf8b.sol:ERC20Interface
Processing contract: /unique_chucks/34/0xffb0df3f1825dcdf2b5f643827f220a7e8ccaf8b.sol:GasToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for UnrestrictedEtherFlow in contract 'GasToken':
    |        _totalSupply -= tokens;
    |        revenue = tokens * tx.gasprice;
  > |        msg.sender.transfer(revenue);
    |        return revenue;
    |    }
  at /unique_chucks/34/0xffb0df3f1825dcdf2b5f643827f220a7e8ccaf8b.sol(76)

[31mViolation[0m for UnrestrictedWrite in contract 'GasToken':
    |        tokens = msg.value / tx.gasprice;
    |        balances[msg.sender] += tokens;
  > |        _totalSupply += tokens;
    |        return tokens;
    |    }
  at /unique_chucks/34/0xffb0df3f1825dcdf2b5f643827f220a7e8ccaf8b.sol(64)

[31mViolation[0m for UnrestrictedWrite in contract 'GasToken':
    |        require(balances[msg.sender] >= tokens);           // Check if the sender has enough
    |        balances[msg.sender] -= tokens;        
  > |        _totalSupply -= tokens;
    |        revenue = tokens * tx.gasprice;
    |        msg.sender.transfer(revenue);
  at /unique_chucks/34/0xffb0df3f1825dcdf2b5f643827f220a7e8ccaf8b.sol(74)

[31mViolation[0m for UnrestrictedWrite in contract 'GasToken':
    |        require(balances[to] + tokens >= balances[to]);  // Check for overflows
    |        balances[msg.sender] -= tokens;                    // Subtract from the sender
  > |        balances[to] += tokens;                           // Add the same to the recipient
    |        emit Transfer(msg.sender, to, tokens);
    |        return true;
  at /unique_chucks/34/0xffb0df3f1825dcdf2b5f643827f220a7e8ccaf8b.sol(89)

[31mViolation[0m for UnrestrictedWrite in contract 'GasToken':
    |        require(balances[msg.sender] >= tokens);
    |        require(allowed[from][msg.sender] >= tokens);
  > |        balances[from] -= tokens;
    |        allowed[from][msg.sender] -= tokens;
    |        balances[to] += tokens;
  at /unique_chucks/34/0xffb0df3f1825dcdf2b5f643827f220a7e8ccaf8b.sol(103)

[31mViolation[0m for UnrestrictedWrite in contract 'GasToken':
    |        balances[from] -= tokens;
    |        allowed[from][msg.sender] -= tokens;
  > |        balances[to] += tokens;
    |        emit Transfer(from, to, tokens);
    |        return true;
  at /unique_chucks/34/0xffb0df3f1825dcdf2b5f643827f220a7e8ccaf8b.sol(105)