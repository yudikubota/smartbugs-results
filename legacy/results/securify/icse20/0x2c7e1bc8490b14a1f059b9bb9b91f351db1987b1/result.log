Processing contract: /unique_contracts/0x2c7e1bc8490b14a1f059b9bb9b91f351db1987b1.sol:KYCWhitelist
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0x2c7e1bc8490b14a1f059b9bb9b91f351db1987b1.sol:Manageable
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0x2c7e1bc8490b14a1f059b9bb9b91f351db1987b1.sol:Ownable
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for UnrestrictedWrite in contract 'KYCWhitelist':
    |        require(_participant != address(0), "");
    |
  > |        whitelist[_participant] = true;
    |        emit AddressIsAdded(_participant);
    |    }
  at /unique_contracts/0x2c7e1bc8490b14a1f059b9bb9b91f351db1987b1.sol(59)

[31mViolation[0m for UnrestrictedWrite in contract 'KYCWhitelist':
    |        require(_participant != address(0), "");
    |
  > |        whitelist[_participant] = false;
    |        emit AddressIsRemoved(_participant);
    |    }
  at /unique_contracts/0x2c7e1bc8490b14a1f059b9bb9b91f351db1987b1.sol(66)

[33mWarning[0m for UnrestrictedWrite in contract 'KYCWhitelist':
    |    function transferOwnership(address newOwner) public onlyOwner {
    |        require(newOwner != address(0), "");
  > |        owner = newOwner;
    |    }
    |
  at /unique_contracts/0x2c7e1bc8490b14a1f059b9bb9b91f351db1987b1.sol(17)

[33mWarning[0m for UnrestrictedWrite in contract 'KYCWhitelist':
    |        if (!listOfManagers[_manager]) {
    |            require(_manager != address(0), "");
  > |            listOfManagers[_manager] = true;
    |            success = true;
    |        }
  at /unique_contracts/0x2c7e1bc8490b14a1f059b9bb9b91f351db1987b1.sol(33)

[33mWarning[0m for UnrestrictedWrite in contract 'KYCWhitelist':
    |    function removeManager(address _manager) public onlyOwner returns (bool success) {
    |        if (listOfManagers[_manager]) {
  > |            listOfManagers[_manager] = false;
    |            success = true;
    |        }
  at /unique_contracts/0x2c7e1bc8490b14a1f059b9bb9b91f351db1987b1.sol(40)

[31mViolation[0m for MissingInputValidation in contract 'Manageable':
    |
    |contract Manageable is Ownable {
  > |    mapping(address => bool) public listOfManagers;
    |
    |    modifier onlyManager() {
  at /unique_contracts/0x2c7e1bc8490b14a1f059b9bb9b91f351db1987b1.sol(23)

[31mViolation[0m for MissingInputValidation in contract 'Manageable':
    |    }
    |
  > |    function getInfo(address _manager) public view returns (bool) {
    |        return listOfManagers[_manager];
    |    }
  at /unique_contracts/0x2c7e1bc8490b14a1f059b9bb9b91f351db1987b1.sol(45)

[33mWarning[0m for MissingInputValidation in contract 'Manageable':
    |    }
    |
  > |    function addManager(address _manager) public onlyOwner returns (bool success) {
    |        if (!listOfManagers[_manager]) {
    |            require(_manager != address(0), "");
  at /unique_contracts/0x2c7e1bc8490b14a1f059b9bb9b91f351db1987b1.sol(30)

[33mWarning[0m for MissingInputValidation in contract 'Manageable':
    |    }
    |
  > |    function removeManager(address _manager) public onlyOwner returns (bool success) {
    |        if (listOfManagers[_manager]) {
    |            listOfManagers[_manager] = false;
  at /unique_contracts/0x2c7e1bc8490b14a1f059b9bb9b91f351db1987b1.sol(38)

[33mWarning[0m for UnrestrictedWrite in contract 'Manageable':
    |    function transferOwnership(address newOwner) public onlyOwner {
    |        require(newOwner != address(0), "");
  > |        owner = newOwner;
    |    }
    |
  at /unique_contracts/0x2c7e1bc8490b14a1f059b9bb9b91f351db1987b1.sol(17)

[33mWarning[0m for UnrestrictedWrite in contract 'Manageable':
    |        if (!listOfManagers[_manager]) {
    |            require(_manager != address(0), "");
  > |            listOfManagers[_manager] = true;
    |            success = true;
    |        }
  at /unique_contracts/0x2c7e1bc8490b14a1f059b9bb9b91f351db1987b1.sol(33)

[33mWarning[0m for UnrestrictedWrite in contract 'Manageable':
    |    function removeManager(address _manager) public onlyOwner returns (bool success) {
    |        if (listOfManagers[_manager]) {
  > |            listOfManagers[_manager] = false;
    |            success = true;
    |        }
  at /unique_contracts/0x2c7e1bc8490b14a1f059b9bb9b91f351db1987b1.sol(40)

[33mWarning[0m for UnrestrictedWrite in contract 'Ownable':
    |    function transferOwnership(address newOwner) public onlyOwner {
    |        require(newOwner != address(0), "");
  > |        owner = newOwner;
    |    }
    |
  at /unique_contracts/0x2c7e1bc8490b14a1f059b9bb9b91f351db1987b1.sol(17)