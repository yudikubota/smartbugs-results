Processing contract: /unique_chucks/23/0x40165bd6d657b63cb6f8f4a3525ac05bbf74bd93.sol:BurnableToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/23/0x40165bd6d657b63cb6f8f4a3525ac05bbf74bd93.sol:Ownable
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/23/0x40165bd6d657b63cb6f8f4a3525ac05bbf74bd93.sol:PairContract
Processing contract: /unique_chucks/23/0x40165bd6d657b63cb6f8f4a3525ac05bbf74bd93.sol:Pausable
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/23/0x40165bd6d657b63cb6f8f4a3525ac05bbf74bd93.sol:PausableToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/23/0x40165bd6d657b63cb6f8f4a3525ac05bbf74bd93.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/23/0x40165bd6d657b63cb6f8f4a3525ac05bbf74bd93.sol:StandardToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/23/0x40165bd6d657b63cb6f8f4a3525ac05bbf74bd93.sol:Token
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/23/0x40165bd6d657b63cb6f8f4a3525ac05bbf74bd93.sol:XMT
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for UnrestrictedWrite in contract 'Ownable':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(owner, newOwner);
  > |        owner = newOwner;
    |    }
    |}
  at /unique_chucks/23/0x40165bd6d657b63cb6f8f4a3525ac05bbf74bd93.sol(100)

[33mWarning[0m for UnrestrictedWrite in contract 'Ownable':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(owner, newOwner);
  > |        owner = newOwner;
    |    }
    |}
  at /unique_chucks/23/0x40165bd6d657b63cb6f8f4a3525ac05bbf74bd93.sol(100)

[31mViolation[0m for UnrestrictedWrite in contract 'Pausable':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(owner, newOwner);
  > |        owner = newOwner;
    |    }
    |}
  at /unique_chucks/23/0x40165bd6d657b63cb6f8f4a3525ac05bbf74bd93.sol(100)

[33mWarning[0m for UnrestrictedWrite in contract 'Pausable':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(owner, newOwner);
  > |        owner = newOwner;
    |    }
    |}
  at /unique_chucks/23/0x40165bd6d657b63cb6f8f4a3525ac05bbf74bd93.sol(100)

[33mWarning[0m for UnrestrictedWrite in contract 'Pausable':
    |     */
    |    function pause() public onlyOwner whenNotPaused {
  > |        paused = true;
    |        emit Pause();
    |    }
  at /unique_chucks/23/0x40165bd6d657b63cb6f8f4a3525ac05bbf74bd93.sol(131)

[33mWarning[0m for UnrestrictedWrite in contract 'Pausable':
    |     */
    |    function unpause() public onlyOwner whenPaused {
  > |        paused = false;
    |        emit Unpause();
    |    }
  at /unique_chucks/23/0x40165bd6d657b63cb6f8f4a3525ac05bbf74bd93.sol(139)

[33mWarning[0m for UnrestrictedWrite in contract 'PausableToken':
    |
    |        balances[msg.sender] = balances[msg.sender].sub(_value);
  > |        balances[_to] = balances[_to].add(_value);
    |        emit Transfer(msg.sender, _to, _value);
    |        return true;
  at /unique_chucks/23/0x40165bd6d657b63cb6f8f4a3525ac05bbf74bd93.sol(187)

[33mWarning[0m for UnrestrictedWrite in contract 'PausableToken':
    |        require(_value <= allowed[_from][msg.sender]);
    |
  > |        balances[_from] = balances[_from].sub(_value);
    |        balances[_to] = balances[_to].add(_value);
    |        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
  at /unique_chucks/23/0x40165bd6d657b63cb6f8f4a3525ac05bbf74bd93.sol(218)

[33mWarning[0m for UnrestrictedWrite in contract 'PausableToken':
    |
    |        balances[_from] = balances[_from].sub(_value);
  > |        balances[_to] = balances[_to].add(_value);
    |        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
    |        emit Transfer(_from, _to, _value);
  at /unique_chucks/23/0x40165bd6d657b63cb6f8f4a3525ac05bbf74bd93.sol(219)

[33mWarning[0m for UnrestrictedWrite in contract 'PausableToken':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(owner, newOwner);
  > |        owner = newOwner;
    |    }
    |}
  at /unique_chucks/23/0x40165bd6d657b63cb6f8f4a3525ac05bbf74bd93.sol(100)

[33mWarning[0m for UnrestrictedWrite in contract 'PausableToken':
    |     */
    |    function pause() public onlyOwner whenNotPaused {
  > |        paused = true;
    |        emit Pause();
    |    }
  at /unique_chucks/23/0x40165bd6d657b63cb6f8f4a3525ac05bbf74bd93.sol(131)

[33mWarning[0m for UnrestrictedWrite in contract 'PausableToken':
    |     */
    |    function unpause() public onlyOwner whenPaused {
  > |        paused = false;
    |        emit Unpause();
    |    }
  at /unique_chucks/23/0x40165bd6d657b63cb6f8f4a3525ac05bbf74bd93.sol(139)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |
    |        balances[msg.sender] = balances[msg.sender].sub(_value);
  > |        balances[_to] = balances[_to].add(_value);
    |        emit Transfer(msg.sender, _to, _value);
    |        return true;
  at /unique_chucks/23/0x40165bd6d657b63cb6f8f4a3525ac05bbf74bd93.sol(187)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |        require(_value <= allowed[_from][msg.sender]);
    |
  > |        balances[_from] = balances[_from].sub(_value);
    |        balances[_to] = balances[_to].add(_value);
    |        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
  at /unique_chucks/23/0x40165bd6d657b63cb6f8f4a3525ac05bbf74bd93.sol(218)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |
    |        balances[_from] = balances[_from].sub(_value);
  > |        balances[_to] = balances[_to].add(_value);
    |        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
    |        emit Transfer(_from, _to, _value);
  at /unique_chucks/23/0x40165bd6d657b63cb6f8f4a3525ac05bbf74bd93.sol(219)

[31mViolation[0m for LockedEther in contract 'Token':
    |}
    |
  > |contract Token is PausableToken, BurnableToken {
    |    string public constant name = "XMT"; // name of Token 
    |    string public constant symbol = "XMT"; // symbol of Token 
  at /unique_chucks/23/0x40165bd6d657b63cb6f8f4a3525ac05bbf74bd93.sol(332)

[33mWarning[0m for UnrestrictedWrite in contract 'Token':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(owner, newOwner);
  > |        owner = newOwner;
    |    }
    |}
  at /unique_chucks/23/0x40165bd6d657b63cb6f8f4a3525ac05bbf74bd93.sol(100)

[33mWarning[0m for UnrestrictedWrite in contract 'Token':
    |     */
    |    function pause() public onlyOwner whenNotPaused {
  > |        paused = true;
    |        emit Pause();
    |    }
  at /unique_chucks/23/0x40165bd6d657b63cb6f8f4a3525ac05bbf74bd93.sol(131)

[33mWarning[0m for UnrestrictedWrite in contract 'Token':
    |     */
    |    function unpause() public onlyOwner whenPaused {
  > |        paused = false;
    |        emit Unpause();
    |    }
  at /unique_chucks/23/0x40165bd6d657b63cb6f8f4a3525ac05bbf74bd93.sol(139)

[31mViolation[0m for LockedEther in contract 'XMT':
    |}
    |
  > |contract XMT is Token {
    |    // The address of Pair contract
    |    PairContract public pairInstance;
  at /unique_chucks/23/0x40165bd6d657b63cb6f8f4a3525ac05bbf74bd93.sol(354)

[33mWarning[0m for UnrestrictedWrite in contract 'XMT':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(owner, newOwner);
  > |        owner = newOwner;
    |    }
    |}
  at /unique_chucks/23/0x40165bd6d657b63cb6f8f4a3525ac05bbf74bd93.sol(100)

[33mWarning[0m for UnrestrictedWrite in contract 'XMT':
    |     */
    |    function pause() public onlyOwner whenNotPaused {
  > |        paused = true;
    |        emit Pause();
    |    }
  at /unique_chucks/23/0x40165bd6d657b63cb6f8f4a3525ac05bbf74bd93.sol(131)

[33mWarning[0m for UnrestrictedWrite in contract 'XMT':
    |     */
    |    function unpause() public onlyOwner whenPaused {
  > |        paused = false;
    |        emit Unpause();
    |    }
  at /unique_chucks/23/0x40165bd6d657b63cb6f8f4a3525ac05bbf74bd93.sol(139)

[33mWarning[0m for UnrestrictedWrite in contract 'XMT':
    |    function setPairContract(address pairAddress) public onlyOwner {
    |        require(pairAddress != address(0));
  > |        pairInstance = PairContract(pairAddress);
    |        emit SetPairContract(pairAddress);
    |    }
  at /unique_chucks/23/0x40165bd6d657b63cb6f8f4a3525ac05bbf74bd93.sol(380)

[33mWarning[0m for UnrestrictedWrite in contract 'XMT':
    |        require(_newRate > 0);
    |        emit RateChanged(rate,_newRate);
  > |        rate = _newRate;
    |     }
    |
  at /unique_chucks/23/0x40165bd6d657b63cb6f8f4a3525ac05bbf74bd93.sol(392)