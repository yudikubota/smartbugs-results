Processing contract: /unique_chucks/43/0x9a9b66b59000e10f4234cd7101bc19aabd1f5c17.sol:Address
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/43/0x9a9b66b59000e10f4234cd7101bc19aabd1f5c17.sol:AllowanceCrowdsale
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/43/0x9a9b66b59000e10f4234cd7101bc19aabd1f5c17.sol:Crowdsale
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/43/0x9a9b66b59000e10f4234cd7101bc19aabd1f5c17.sol:ERC20
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/43/0x9a9b66b59000e10f4234cd7101bc19aabd1f5c17.sol:ERC20Capped
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/43/0x9a9b66b59000e10f4234cd7101bc19aabd1f5c17.sol:ERC20Detailed
Processing contract: /unique_chucks/43/0x9a9b66b59000e10f4234cd7101bc19aabd1f5c17.sol:ERC20Mintable
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/43/0x9a9b66b59000e10f4234cd7101bc19aabd1f5c17.sol:IERC20
Processing contract: /unique_chucks/43/0x9a9b66b59000e10f4234cd7101bc19aabd1f5c17.sol:Math
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/43/0x9a9b66b59000e10f4234cd7101bc19aabd1f5c17.sol:MinterRole
Processing contract: /unique_chucks/43/0x9a9b66b59000e10f4234cd7101bc19aabd1f5c17.sol:ReentrancyGuard
Processing contract: /unique_chucks/43/0x9a9b66b59000e10f4234cd7101bc19aabd1f5c17.sol:Roles
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/43/0x9a9b66b59000e10f4234cd7101bc19aabd1f5c17.sol:SafeERC20
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/43/0x9a9b66b59000e10f4234cd7101bc19aabd1f5c17.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/43/0x9a9b66b59000e10f4234cd7101bc19aabd1f5c17.sol:TokenTimelock
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/43/0x9a9b66b59000e10f4234cd7101bc19aabd1f5c17.sol:ZikToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for RepeatedCall in contract 'AllowanceCrowdsale':
    |     */
    |    function remainingTokens() public view returns (uint256) {
  > |        return Math.min(token().balanceOf(_tokenWallet), token().allowance(_tokenWallet, address(this)));
    |    }
    |
  at /unique_chucks/43/0x9a9b66b59000e10f4234cd7101bc19aabd1f5c17.sol(884)

[33mWarning[0m for TODAmount in contract 'AllowanceCrowdsale':
    |     */
    |    function _forwardFunds() internal {
  > |        _wallet.transfer(msg.value);
    |    }
    |}
  at /unique_chucks/43/0x9a9b66b59000e10f4234cd7101bc19aabd1f5c17.sol(841)

[33mWarning[0m for TODReceiver in contract 'AllowanceCrowdsale':
    |     */
    |    function _forwardFunds() internal {
  > |        _wallet.transfer(msg.value);
    |    }
    |}
  at /unique_chucks/43/0x9a9b66b59000e10f4234cd7101bc19aabd1f5c17.sol(841)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AllowanceCrowdsale':
    |     */
    |    function _forwardFunds() internal {
  > |        _wallet.transfer(msg.value);
    |    }
    |}
  at /unique_chucks/43/0x9a9b66b59000e10f4234cd7101bc19aabd1f5c17.sol(841)

[31mViolation[0m for UnrestrictedWrite in contract 'AllowanceCrowdsale':
    |     */
    |    modifier nonReentrant() {
  > |        _guardCounter += 1;
    |        uint256 localCounter = _guardCounter;
    |        _;
  at /unique_chucks/43/0x9a9b66b59000e10f4234cd7101bc19aabd1f5c17.sol(226)

[33mWarning[0m for TODAmount in contract 'Crowdsale':
    |     */
    |    function _forwardFunds() internal {
  > |        _wallet.transfer(msg.value);
    |    }
    |}
  at /unique_chucks/43/0x9a9b66b59000e10f4234cd7101bc19aabd1f5c17.sol(841)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'Crowdsale':
    |     */
    |    function _forwardFunds() internal {
  > |        _wallet.transfer(msg.value);
    |    }
    |}
  at /unique_chucks/43/0x9a9b66b59000e10f4234cd7101bc19aabd1f5c17.sol(841)

[31mViolation[0m for UnrestrictedWrite in contract 'Crowdsale':
    |     */
    |    modifier nonReentrant() {
  > |        _guardCounter += 1;
    |        uint256 localCounter = _guardCounter;
    |        _;
  at /unique_chucks/43/0x9a9b66b59000e10f4234cd7101bc19aabd1f5c17.sol(226)

[33mWarning[0m for UnrestrictedWrite in contract 'Crowdsale':
    |
    |        // update state
  > |        _weiRaised = _weiRaised.add(weiAmount);
    |
    |        _processPurchase(beneficiary, tokens);
  at /unique_chucks/43/0x9a9b66b59000e10f4234cd7101bc19aabd1f5c17.sol(763)

[31mViolation[0m for LockedEther in contract 'TokenTimelock':
    | * beneficiary to extract the tokens after a given release time
    | */
  > |contract TokenTimelock {
    |    using SafeERC20 for IERC20;
    |
  at /unique_chucks/43/0x9a9b66b59000e10f4234cd7101bc19aabd1f5c17.sol(596)

[31mViolation[0m for LockedEther in contract 'ZikToken':
    |
    |//-------------------------------------------------------------------------------------
  > |contract ZikToken is ERC20Capped, ERC20Detailed {
    |    constructor() public 
    |        ERC20Detailed( "Ziktalk Token", "ZIK", 18 )
  at /unique_chucks/43/0x9a9b66b59000e10f4234cd7101bc19aabd1f5c17.sol(898)