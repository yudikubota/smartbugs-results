Processing contract: /unique_chucks/34/0x0a192c4e4cc9fd5e20c84044a1f77d05de1a5fe3.sol:BNDESRegistry
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/34/0x0a192c4e4cc9fd5e20c84044a1f77d05de1a5fe3.sol:BNDESToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/34/0x0a192c4e4cc9fd5e20c84044a1f77d05de1a5fe3.sol:ERC20
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/34/0x0a192c4e4cc9fd5e20c84044a1f77d05de1a5fe3.sol:ERC20Detailed
Processing contract: /unique_chucks/34/0x0a192c4e4cc9fd5e20c84044a1f77d05de1a5fe3.sol:ERC20Pausable
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/34/0x0a192c4e4cc9fd5e20c84044a1f77d05de1a5fe3.sol:IERC20
Processing contract: /unique_chucks/34/0x0a192c4e4cc9fd5e20c84044a1f77d05de1a5fe3.sol:Ownable
Processing contract: /unique_chucks/34/0x0a192c4e4cc9fd5e20c84044a1f77d05de1a5fe3.sol:Pausable
Processing contract: /unique_chucks/34/0x0a192c4e4cc9fd5e20c84044a1f77d05de1a5fe3.sol:PauserRole
Processing contract: /unique_chucks/34/0x0a192c4e4cc9fd5e20c84044a1f77d05de1a5fe3.sol:Roles
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/34/0x0a192c4e4cc9fd5e20c84044a1f77d05de1a5fe3.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for LockedEther in contract 'BNDESRegistry':
    |
    |
  > |contract BNDESRegistry is Ownable() {
    |
    |    /**
  at /unique_chucks/34/0x0a192c4e4cc9fd5e20c84044a1f77d05de1a5fe3.sol(568)

[33mWarning[0m for UnrestrictedWrite in contract 'BNDESRegistry':
    |
    |
  > |contract BNDESRegistry is Ownable() {
    |
    |    /**
  at /unique_chucks/34/0x0a192c4e4cc9fd5e20c84044a1f77d05de1a5fe3.sol(568)

[33mWarning[0m for UnrestrictedWrite in contract 'BNDESRegistry':
    |        require (isValidHash(idProofHash), "O hash da declaraÃ§Ã£o Ã© invÃ¡lido");
    |
  > |        legalEntitiesInfo[addr] = LegalEntityInfo(cnpj, idFinancialSupportAgreement, salic, idProofHash, BlockchainAccountState.WAITING_VALIDATION);
    |        
    |        // NÃ£o pode haver outro endereÃ§o cadastrado para esse mesmo subcrÃ©dito
  at /unique_chucks/34/0x0a192c4e4cc9fd5e20c84044a1f77d05de1a5fe3.sol(659)

[33mWarning[0m for UnrestrictedWrite in contract 'BNDESRegistry':
    |
    |        // Aponta o novo endereÃ§o para o novo LegalEntityInfo
  > |        legalEntitiesInfo[newAddr] = LegalEntityInfo(cnpj, idFinancialSupportAgreement, salic, idProofHash, BlockchainAccountState.WAITING_VALIDATION);
    |
    |        // Apaga o mapping do endereÃ§o antigo
  at /unique_chucks/34/0x0a192c4e4cc9fd5e20c84044a1f77d05de1a5fe3.sol(709)

[33mWarning[0m for UnrestrictedWrite in contract 'BNDESRegistry':
    |
    |        // Apaga o mapping do endereÃ§o antigo
  > |        legalEntitiesInfo[oldAddr].state = BlockchainAccountState.INVALIDATED_BY_CHANGE;
    |
    |        // Aponta mapping CNPJ e Subcredito para newAddr
  at /unique_chucks/34/0x0a192c4e4cc9fd5e20c84044a1f77d05de1a5fe3.sol(712)

[33mWarning[0m for UnrestrictedWrite in contract 'BNDESRegistry':
    |
    |        // Aponta mapping CNPJ e Subcredito para newAddr
  > |        cnpjFSAddr[cnpj][idFinancialSupportAgreement] = newAddr;
    |
    |        emit AccountChange(oldAddr, newAddr, cnpj, idFinancialSupportAgreement, salic, idProofHash); 
  at /unique_chucks/34/0x0a192c4e4cc9fd5e20c84044a1f77d05de1a5fe3.sol(715)

[33mWarning[0m for UnrestrictedWrite in contract 'BNDESRegistry':
    |        require(keccak256(abi.encodePacked(legalEntitiesInfo[addr].idProofHash)) == keccak256(abi.encodePacked(idProofHash)), "O hash recebido Ã© diferente do esperado");
    |
  > |        legalEntitiesInfo[addr].state = BlockchainAccountState.VALIDATED;
    |
    |        emit AccountValidation(addr, legalEntitiesInfo[addr].cnpj, 
  at /unique_chucks/34/0x0a192c4e4cc9fd5e20c84044a1f77d05de1a5fe3.sol(735)

[31mViolation[0m for LockedEther in contract 'BNDESToken':
    |
    |
  > |contract BNDESToken is ERC20Pausable, ERC20Detailed("BNDESToken", "BND", 2) {
    |
    |    uint private version = 20190517;
  at /unique_chucks/34/0x0a192c4e4cc9fd5e20c84044a1f77d05de1a5fe3.sol(965)

[31mViolation[0m for RepeatedCall in contract 'BNDESToken':
    |            _mint(to, value);
    |
  > |            emit BNDESTokenDisbursement(registry.getCNPJ(to), registry.getIdLegalFinancialAgreement(to), value);
    |
    |        } else { 
  at /unique_chucks/34/0x0a192c4e4cc9fd5e20c84044a1f77d05de1a5fe3.sol(1013)

[31mViolation[0m for RepeatedCall in contract 'BNDESToken':
    |                _burn(from, value);
    |
  > |                emit BNDESTokenRedemption(registry.getCNPJ(from), value);
    |
    |            } else {
  at /unique_chucks/34/0x0a192c4e4cc9fd5e20c84044a1f77d05de1a5fe3.sol(1023)

[31mViolation[0m for RepeatedCall in contract 'BNDESToken':
    |                _transfer(msg.sender, to, value);
    |
  > |                emit BNDESTokenTransfer(registry.getCNPJ(from), registry.getIdLegalFinancialAgreement(from), 
    |                                registry.getCNPJ(to), value);
    |  
  at /unique_chucks/34/0x0a192c4e4cc9fd5e20c84044a1f77d05de1a5fe3.sol(1034)

[31mViolation[0m for RepeatedCall in contract 'BNDESToken':
    |
    |                emit BNDESTokenTransfer(registry.getCNPJ(from), registry.getIdLegalFinancialAgreement(from), 
  > |                                registry.getCNPJ(to), value);
    |  
    |            }
  at /unique_chucks/34/0x0a192c4e4cc9fd5e20c84044a1f77d05de1a5fe3.sol(1035)

[33mWarning[0m for RepeatedCall in contract 'BNDESToken':
    |        public whenNotPaused {
    |        require (registry.isResponsibleForSettlement(msg.sender), "A liquidaÃ§Ã£o sÃ³ nÃ£o pode ser realizada pelo endereÃ§o que submeteu a transaÃ§Ã£o"); 
  > |        require (registry.isValidHash(receiptHash), "O hash do recibo Ã© invÃ¡lido");
    |        emit BNDESTokenRedemptionSettlement(redemptionTransactionHash, receiptHash);
    |    }
  at /unique_chucks/34/0x0a192c4e4cc9fd5e20c84044a1f77d05de1a5fe3.sol(1060)

[33mWarning[0m for UnrestrictedWrite in contract 'ERC20Pausable':
    |     */
    |    function pause() public onlyPauser whenNotPaused {
  > |        _paused = true;
    |        emit Paused(msg.sender);
    |    }
  at /unique_chucks/34/0x0a192c4e4cc9fd5e20c84044a1f77d05de1a5fe3.sol(409)

[33mWarning[0m for UnrestrictedWrite in contract 'ERC20Pausable':
    |     */
    |    function unpause() public onlyPauser whenPaused {
  > |        _paused = false;
    |        emit Unpaused(msg.sender);
    |    }
  at /unique_chucks/34/0x0a192c4e4cc9fd5e20c84044a1f77d05de1a5fe3.sol(417)