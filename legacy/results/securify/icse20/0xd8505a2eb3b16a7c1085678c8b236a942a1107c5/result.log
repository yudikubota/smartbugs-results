Processing contract: /unique_chucks/32/0xd8505a2eb3b16a7c1085678c8b236a942a1107c5.sol:CremanonToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/32/0xd8505a2eb3b16a7c1085678c8b236a942a1107c5.sol:ERC20
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/32/0xd8505a2eb3b16a7c1085678c8b236a942a1107c5.sol:IERC20
Processing contract: /unique_chucks/32/0xd8505a2eb3b16a7c1085678c8b236a942a1107c5.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for LockedEther in contract 'CremanonToken':
    |// File: contracts\CremanonToken.sol
    |
  > |contract CremanonToken is ERC20 {
    |    string public name = ""; // solium-disable-line uppercase
    |    string public symbol = ""; // solium-disable-line uppercase
  at /unique_chucks/32/0xd8505a2eb3b16a7c1085678c8b236a942a1107c5.sol(416)

[33mWarning[0m for UnrestrictedWrite in contract 'CremanonToken':
    |        require(account != address(0), "ERC20: mint to the zero address");
    |
  > |        _totalSupply = _totalSupply.add(amount);
    |        _balances[account] = _balances[account].add(amount);
    |        emit Transfer(address(0), account, amount);
  at /unique_chucks/32/0xd8505a2eb3b16a7c1085678c8b236a942a1107c5.sol(357)

[33mWarning[0m for UnrestrictedWrite in contract 'CremanonToken':
    |        require(account != address(0), "ERC20: burn from the zero address");
    |
  > |        _totalSupply = _totalSupply.sub(value);
    |        _balances[account] = _balances[account].sub(value);
    |        emit Transfer(account, address(0), value);
  at /unique_chucks/32/0xd8505a2eb3b16a7c1085678c8b236a942a1107c5.sol(376)

[33mWarning[0m for UnrestrictedWrite in contract 'CremanonToken':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipRenounced(owner);
  > |        owner = address(0);
    |    }
    |
  at /unique_chucks/32/0xd8505a2eb3b16a7c1085678c8b236a942a1107c5.sol(452)

[33mWarning[0m for UnrestrictedWrite in contract 'CremanonToken':
    |        require(_newOwner != address(0), "Already owner");
    |        emit OwnershipTransferred(owner, _newOwner);
  > |        owner = _newOwner;
    |    }
    |
  at /unique_chucks/32/0xd8505a2eb3b16a7c1085678c8b236a942a1107c5.sol(470)

[33mWarning[0m for UnrestrictedWrite in contract 'CremanonToken':
    |        require(_newCrc != address(0), "Invalid Address");
    |        emit CrcTransferred(crc, _newCrc);
  > |        crc = _newCrc;
    |    }
    |    
  at /unique_chucks/32/0xd8505a2eb3b16a7c1085678c8b236a942a1107c5.sol(484)