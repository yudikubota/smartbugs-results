Processing contract: /unique_chucks/47/0x10da058f72567836248c82ea52e6312707619e10.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/47/0x10da058f72567836248c82ea52e6312707619e10.sol:test5cash
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[33mWarning[0m for UnrestrictedEtherFlow in contract 'test5cash':
    |	function withdrawEther(uint256 amount) public {
    |		if(msg.sender != owner) revert('withdrawEther');
  > |		owner.transfer(amount);
    |	}
    |	
  at /unique_chucks/47/0x10da058f72567836248c82ea52e6312707619e10.sol(132)

[33mWarning[0m for UnrestrictedWrite in contract 'test5cash':
    |        if (balanceOf[_to] + _value < balanceOf[_to]) revert('transfer'); // Check for overflows
    |        balanceOf[msg.sender] = SafeMath.safeSub(balanceOf[msg.sender], _value);                     // Subtract from the sender
  > |        balanceOf[_to] = SafeMath.safeAdd(balanceOf[_to], _value);                            // Add the same to the recipient
    |        emit Transfer(msg.sender, _to, _value);                   // Notify anyone listening that this transfer took place
    |    }
  at /unique_chucks/47/0x10da058f72567836248c82ea52e6312707619e10.sol(75)

[33mWarning[0m for UnrestrictedWrite in contract 'test5cash':
    |        if (balanceOf[_to] + _value < balanceOf[_to]) revert('transferFrom');  // Check for overflows
    |        if (_value > allowance[_from][msg.sender]) revert('transferFrom');     // Check allowance
  > |        balanceOf[_from] = SafeMath.safeSub(balanceOf[_from], _value);                           // Subtract from the sender
    |        balanceOf[_to] = SafeMath.safeAdd(balanceOf[_to], _value);                             // Add the same to the recipient
    |        allowance[_from][msg.sender] = SafeMath.safeSub(allowance[_from][msg.sender], _value);
  at /unique_chucks/47/0x10da058f72567836248c82ea52e6312707619e10.sol(95)

[33mWarning[0m for UnrestrictedWrite in contract 'test5cash':
    |        if (_value > allowance[_from][msg.sender]) revert('transferFrom');     // Check allowance
    |        balanceOf[_from] = SafeMath.safeSub(balanceOf[_from], _value);                           // Subtract from the sender
  > |        balanceOf[_to] = SafeMath.safeAdd(balanceOf[_to], _value);                             // Add the same to the recipient
    |        allowance[_from][msg.sender] = SafeMath.safeSub(allowance[_from][msg.sender], _value);
    |        emit Transfer(_from, _to, _value);
  at /unique_chucks/47/0x10da058f72567836248c82ea52e6312707619e10.sol(96)

[33mWarning[0m for UnrestrictedWrite in contract 'test5cash':
    |		if (_value <= 0) revert('burn'); 
    |        balanceOf[msg.sender] = SafeMath.safeSub(balanceOf[msg.sender], _value);                      // Subtract from the sender
  > |        totalSupply = SafeMath.safeSub(totalSupply,_value);                                // Updates totalSupply
    |        emit Burn(msg.sender, _value);
    |        return true;
  at /unique_chucks/47/0x10da058f72567836248c82ea52e6312707619e10.sol(106)