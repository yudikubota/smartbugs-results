Processing contract: /unique_chucks/30/0x929c0d8bba1e0c2734efc298ffe36fda199d2ac3.sol:DSMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/30/0x929c0d8bba1e0c2734efc298ffe36fda199d2ac3.sol:PepLike
Processing contract: /unique_chucks/30/0x929c0d8bba1e0c2734efc298ffe36fda199d2ac3.sol:TokenLike
Processing contract: /unique_chucks/30/0x929c0d8bba1e0c2734efc298ffe36fda199d2ac3.sol:TubLike
Processing contract: /unique_chucks/30/0x929c0d8bba1e0c2734efc298ffe36fda199d2ac3.sol:UniswapExchangeLike
Processing contract: /unique_chucks/30/0x929c0d8bba1e0c2734efc298ffe36fda199d2ac3.sol:WipeProxy
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for RepeatedCall in contract 'WipeProxy':
    |        uint mkrFee = wdiv(rmul(wad, rdiv(tub.rap(cup), tub.tab(cup))), uint(val));
    |
  > |        uint ethAmt = mkrEx.getEthToTokenOutputPrice(mkrFee);
    |        uint daiAmt = daiEx.getTokenToEthOutputPrice(ethAmt);
    |
  at /unique_chucks/30/0x929c0d8bba1e0c2734efc298ffe36fda199d2ac3.sol(96)

[31mViolation[0m for RepeatedCall in contract 'WipeProxy':
    |
    |        uint ethAmt = mkrEx.getEthToTokenOutputPrice(mkrFee);
  > |        uint daiAmt = daiEx.getTokenToEthOutputPrice(ethAmt);
    |
    |        daiAmt = add(wad, daiAmt);
  at /unique_chucks/30/0x929c0d8bba1e0c2734efc298ffe36fda199d2ac3.sol(97)

[31mViolation[0m for RepeatedCall in contract 'WipeProxy':
    |
    |    function setAllowance(TokenLike token_, address spender_) private {
  > |        if (token_.allowance(address(this), spender_) != uint(-1)) {
    |            token_.approve(spender_, uint(-1));
    |        }
  at /unique_chucks/30/0x929c0d8bba1e0c2734efc298ffe36fda199d2ac3.sol(116)

[31mViolation[0m for RepeatedCall in contract 'WipeProxy':
    |    function setAllowance(TokenLike token_, address spender_) private {
    |        if (token_.allowance(address(this), spender_) != uint(-1)) {
  > |            token_.approve(spender_, uint(-1));
    |        }
    |    }
  at /unique_chucks/30/0x929c0d8bba1e0c2734efc298ffe36fda199d2ac3.sol(117)