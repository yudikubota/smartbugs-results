Processing contract: /unique_chucks/23/0x39805bc2216aeb7fba1b64f0a2561078fe4a1c3f.sol:Address
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/23/0x39805bc2216aeb7fba1b64f0a2561078fe4a1c3f.sol:ERC20
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/23/0x39805bc2216aeb7fba1b64f0a2561078fe4a1c3f.sol:ERC20Burnable
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/23/0x39805bc2216aeb7fba1b64f0a2561078fe4a1c3f.sol:ERC20Detailed
Processing contract: /unique_chucks/23/0x39805bc2216aeb7fba1b64f0a2561078fe4a1c3f.sol:ERC20Mintable
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/23/0x39805bc2216aeb7fba1b64f0a2561078fe4a1c3f.sol:ERC20Pausable
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/23/0x39805bc2216aeb7fba1b64f0a2561078fe4a1c3f.sol:IERC20
Processing contract: /unique_chucks/23/0x39805bc2216aeb7fba1b64f0a2561078fe4a1c3f.sol:MinterRole
Processing contract: /unique_chucks/23/0x39805bc2216aeb7fba1b64f0a2561078fe4a1c3f.sol:Pausable
Processing contract: /unique_chucks/23/0x39805bc2216aeb7fba1b64f0a2561078fe4a1c3f.sol:PauserRole
Processing contract: /unique_chucks/23/0x39805bc2216aeb7fba1b64f0a2561078fe4a1c3f.sol:Roles
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/23/0x39805bc2216aeb7fba1b64f0a2561078fe4a1c3f.sol:SafeERC20
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/23/0x39805bc2216aeb7fba1b64f0a2561078fe4a1c3f.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/23/0x39805bc2216aeb7fba1b64f0a2561078fe4a1c3f.sol:SimpleToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/23/0x39805bc2216aeb7fba1b64f0a2561078fe4a1c3f.sol:TokenTimelock
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[33mWarning[0m for UnrestrictedWrite in contract 'ERC20Pausable':
    |     */
    |    function pause() public onlyPauser whenNotPaused {
  > |        _paused = true;
    |        emit Paused(msg.sender);
    |    }
  at /unique_chucks/23/0x39805bc2216aeb7fba1b64f0a2561078fe4a1c3f.sol(453)

[33mWarning[0m for UnrestrictedWrite in contract 'ERC20Pausable':
    |     */
    |    function unpause() public onlyPauser whenPaused {
  > |        _paused = false;
    |        emit Unpaused(msg.sender);
    |    }
  at /unique_chucks/23/0x39805bc2216aeb7fba1b64f0a2561078fe4a1c3f.sol(461)

[31mViolation[0m for LockedEther in contract 'SimpleToken':
    | * `ERC20` functions.
    | */
  > |contract SimpleToken is ERC20, ERC20Detailed, ERC20Burnable, ERC20Pausable, ERC20Mintable {
    |    uint8 public constant DECIMALS = 18;
    |    uint256 public constant INITIAL_SUPPLY = 100000000000 * (10 ** uint256(DECIMALS));
  at /unique_chucks/23/0x39805bc2216aeb7fba1b64f0a2561078fe4a1c3f.sol(710)

[31mViolation[0m for LockedEther in contract 'TokenTimelock':
    | * beneficiary to extract the tokens after a given release time.
    | */
  > |contract TokenTimelock {
    |    using SafeERC20 for IERC20;
    |
  at /unique_chucks/23/0x39805bc2216aeb7fba1b64f0a2561078fe4a1c3f.sol(649)