Processing contract: /unique_chucks/24/0xdd328892cac10a69d509496f865a9f4b6fe57cc9.sol:BasicToken
Processing contract: /unique_chucks/24/0xdd328892cac10a69d509496f865a9f4b6fe57cc9.sol:Blacklist
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/24/0xdd328892cac10a69d509496f865a9f4b6fe57cc9.sol:Blacklisted
Processing contract: /unique_chucks/24/0xdd328892cac10a69d509496f865a9f4b6fe57cc9.sol:BurnableToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/24/0xdd328892cac10a69d509496f865a9f4b6fe57cc9.sol:ERC20
Processing contract: /unique_chucks/24/0xdd328892cac10a69d509496f865a9f4b6fe57cc9.sol:Hydra
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/24/0xdd328892cac10a69d509496f865a9f4b6fe57cc9.sol:MultiSignatureVault
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/24/0xdd328892cac10a69d509496f865a9f4b6fe57cc9.sol:Multiownable
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/24/0xdd328892cac10a69d509496f865a9f4b6fe57cc9.sol:Pausable
Processing contract: /unique_chucks/24/0xdd328892cac10a69d509496f865a9f4b6fe57cc9.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/24/0xdd328892cac10a69d509496f865a9f4b6fe57cc9.sol:StandardToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[33mWarning[0m for UnrestrictedWrite in contract 'BurnableToken':
    |  function burn(address account, uint256 value) public {
    |    require(account != address(0));
  > |    _totalSupply = _totalSupply.sub(value);
    |    balances[account] = balances[account].sub(value);
    |    emit Transfer(account, address(0), value);
  at /unique_chucks/24/0xdd328892cac10a69d509496f865a9f4b6fe57cc9.sol(376)

[31mViolation[0m for LockedEther in contract 'Hydra':
    |}
    |
  > |contract Hydra is StandardToken, BurnableToken, Blacklisted, Pausable {
    |
    |  string private _name;
  at /unique_chucks/24/0xdd328892cac10a69d509496f865a9f4b6fe57cc9.sol(415)

[33mWarning[0m for UnrestrictedWrite in contract 'Hydra':
    |  }
    |  function add(List storage list, address beneficiary) internal {
  > |    list.registry[beneficiary] = true;
    |  }
    |  function remove(List storage list, address beneficiary) internal {
  at /unique_chucks/24/0xdd328892cac10a69d509496f865a9f4b6fe57cc9.sol(47)

[33mWarning[0m for UnrestrictedWrite in contract 'Hydra':
    |  }
    |  function remove(List storage list, address beneficiary) internal {
  > |    list.registry[beneficiary] = false;
    |  }
    |  function check(List storage list, address beneficiary) view internal returns (bool) {
  at /unique_chucks/24/0xdd328892cac10a69d509496f865a9f4b6fe57cc9.sol(50)

[33mWarning[0m for UnrestrictedWrite in contract 'Hydra':
    |      _;
    |      if (update) {
  > |        insideCallSender = address(0);
    |        insideCallCount = 0;
    |      }
  at /unique_chucks/24/0xdd328892cac10a69d509496f865a9f4b6fe57cc9.sol(128)

[33mWarning[0m for UnrestrictedWrite in contract 'Hydra':
    |      if (update) {
    |        insideCallSender = address(0);
  > |        insideCallCount = 0;
    |      }
    |    }
  at /unique_chucks/24/0xdd328892cac10a69d509496f865a9f4b6fe57cc9.sol(129)

[33mWarning[0m for UnrestrictedWrite in contract 'Hydra':
    |    // Reset owners reverse lookup table
    |    for (uint j = 0; j < owners.length; j++) {
  > |      delete ownersIndices[owners[j]];
    |    }
    |    for (uint i = 0; i < newOwners.length; i++) {
  at /unique_chucks/24/0xdd328892cac10a69d509496f865a9f4b6fe57cc9.sol(213)

[33mWarning[0m for UnrestrictedWrite in contract 'Hydra':
    |      require(newOwners[i] != address(0));
    |      require(ownersIndices[newOwners[i]] == 0);
  > |      ownersIndices[newOwners[i]] = i + 1;
    |    }
    |
  at /unique_chucks/24/0xdd328892cac10a69d509496f865a9f4b6fe57cc9.sol(218)

[33mWarning[0m for UnrestrictedWrite in contract 'Hydra':
    |    emit OwnershipTransferred(owners, howManyOwnersDecide, newOwners, newHowManyOwnersDecide);
    |    owners = newOwners;
  > |    howManyOwnersDecide = newHowManyOwnersDecide;
    |    allOperations.length = 0;
    |    ownersGeneration++;
  at /unique_chucks/24/0xdd328892cac10a69d509496f865a9f4b6fe57cc9.sol(223)

[33mWarning[0m for UnrestrictedWrite in contract 'Hydra':
    |}
    |
  > |contract Hydra is StandardToken, BurnableToken, Blacklisted, Pausable {
    |
    |  string private _name;
  at /unique_chucks/24/0xdd328892cac10a69d509496f865a9f4b6fe57cc9.sol(415)

[31mViolation[0m for DAOConstantGas in contract 'MultiSignatureVault':
    |    require(!lockState);
    |    lockState = true;
  > |    to.transfer(amount);
    |    lockState = false;
    |  }
  at /unique_chucks/24/0xdd328892cac10a69d509496f865a9f4b6fe57cc9.sol(403)

[33mWarning[0m for TODAmount in contract 'MultiSignatureVault':
    |    require(!lockState);
    |    lockState = true;
  > |    to.transfer(amount);
    |    lockState = false;
    |  }
  at /unique_chucks/24/0xdd328892cac10a69d509496f865a9f4b6fe57cc9.sol(403)

[33mWarning[0m for TODReceiver in contract 'MultiSignatureVault':
    |    require(!lockState);
    |    lockState = true;
  > |    to.transfer(amount);
    |    lockState = false;
    |  }
  at /unique_chucks/24/0xdd328892cac10a69d509496f865a9f4b6fe57cc9.sol(403)

[33mWarning[0m for UnrestrictedWrite in contract 'MultiSignatureVault':
    |    // Reset owners reverse lookup table
    |    for (uint j = 0; j < owners.length; j++) {
  > |      delete ownersIndices[owners[j]];
    |    }
    |    for (uint i = 0; i < newOwners.length; i++) {
  at /unique_chucks/24/0xdd328892cac10a69d509496f865a9f4b6fe57cc9.sol(213)

[33mWarning[0m for UnrestrictedWrite in contract 'MultiSignatureVault':
    |      require(newOwners[i] != address(0));
    |      require(ownersIndices[newOwners[i]] == 0);
  > |      ownersIndices[newOwners[i]] = i + 1;
    |    }
    |
  at /unique_chucks/24/0xdd328892cac10a69d509496f865a9f4b6fe57cc9.sol(218)

[33mWarning[0m for UnrestrictedWrite in contract 'MultiSignatureVault':
    |    emit OwnershipTransferred(owners, howManyOwnersDecide, newOwners, newHowManyOwnersDecide);
    |    owners = newOwners;
  > |    howManyOwnersDecide = newHowManyOwnersDecide;
    |    allOperations.length = 0;
    |    ownersGeneration++;
  at /unique_chucks/24/0xdd328892cac10a69d509496f865a9f4b6fe57cc9.sol(223)

[33mWarning[0m for UnrestrictedWrite in contract 'MultiSignatureVault':
    |// File: contracts/Hydra.sol
    |
  > |contract MultiSignatureVault is Multiownable {
    |
    |  bool lockState;
  at /unique_chucks/24/0xdd328892cac10a69d509496f865a9f4b6fe57cc9.sol(391)

[33mWarning[0m for UnrestrictedWrite in contract 'Multiownable':
    |// File: contracts/ownership/Multiownable.sol
    |
  > |contract Multiownable {
    |
    |  uint256 public ownersGeneration;
  at /unique_chucks/24/0xdd328892cac10a69d509496f865a9f4b6fe57cc9.sol(59)

[33mWarning[0m for UnrestrictedWrite in contract 'Multiownable':
    |    // Reset owners reverse lookup table
    |    for (uint j = 0; j < owners.length; j++) {
  > |      delete ownersIndices[owners[j]];
    |    }
    |    for (uint i = 0; i < newOwners.length; i++) {
  at /unique_chucks/24/0xdd328892cac10a69d509496f865a9f4b6fe57cc9.sol(213)

[33mWarning[0m for UnrestrictedWrite in contract 'Multiownable':
    |      require(newOwners[i] != address(0));
    |      require(ownersIndices[newOwners[i]] == 0);
  > |      ownersIndices[newOwners[i]] = i + 1;
    |    }
    |
  at /unique_chucks/24/0xdd328892cac10a69d509496f865a9f4b6fe57cc9.sol(218)

[33mWarning[0m for UnrestrictedWrite in contract 'Multiownable':
    |    emit OwnershipTransferred(owners, howManyOwnersDecide, newOwners, newHowManyOwnersDecide);
    |    owners = newOwners;
  > |    howManyOwnersDecide = newHowManyOwnersDecide;
    |    allOperations.length = 0;
    |    ownersGeneration++;
  at /unique_chucks/24/0xdd328892cac10a69d509496f865a9f4b6fe57cc9.sol(223)