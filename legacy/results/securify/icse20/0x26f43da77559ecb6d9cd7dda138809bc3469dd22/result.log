Processing contract: /unique_chucks/21/0x26f43da77559ecb6d9cd7dda138809bc3469dd22.sol:Address
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/21/0x26f43da77559ecb6d9cd7dda138809bc3469dd22.sol:Avatar
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/21/0x26f43da77559ecb6d9cd7dda138809bc3469dd22.sol:ControllerInterface
Processing contract: /unique_chucks/21/0x26f43da77559ecb6d9cd7dda138809bc3469dd22.sol:DAOToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/21/0x26f43da77559ecb6d9cd7dda138809bc3469dd22.sol:DxLockEth4Rep
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/21/0x26f43da77559ecb6d9cd7dda138809bc3469dd22.sol:ERC20
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/21/0x26f43da77559ecb6d9cd7dda138809bc3469dd22.sol:ERC20Burnable
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/21/0x26f43da77559ecb6d9cd7dda138809bc3469dd22.sol:GlobalConstraintInterface
Processing contract: /unique_chucks/21/0x26f43da77559ecb6d9cd7dda138809bc3469dd22.sol:IERC20
Processing contract: /unique_chucks/21/0x26f43da77559ecb6d9cd7dda138809bc3469dd22.sol:Locking4Reputation
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/21/0x26f43da77559ecb6d9cd7dda138809bc3469dd22.sol:LockingEth4Reputation
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/21/0x26f43da77559ecb6d9cd7dda138809bc3469dd22.sol:Ownable
Processing contract: /unique_chucks/21/0x26f43da77559ecb6d9cd7dda138809bc3469dd22.sol:Reputation
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/21/0x26f43da77559ecb6d9cd7dda138809bc3469dd22.sol:SafeERC20
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/21/0x26f43da77559ecb6d9cd7dda138809bc3469dd22.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[33mWarning[0m for TODAmount in contract 'Avatar':
    |    returns(bool success, bytes memory returnValue) {
    |      // solhint-disable-next-line avoid-call-value
  > |        (success, returnValue) = _contract.call.value(_value)(_data);
    |        emit GenericCall(_contract, _data, _value, success);
    |    }
  at /unique_chucks/21/0x26f43da77559ecb6d9cd7dda138809bc3469dd22.sol(772)

[33mWarning[0m for TODReceiver in contract 'Avatar':
    |    returns(bool success, bytes memory returnValue) {
    |      // solhint-disable-next-line avoid-call-value
  > |        (success, returnValue) = _contract.call.value(_value)(_data);
    |        emit GenericCall(_contract, _data, _value, success);
    |    }
  at /unique_chucks/21/0x26f43da77559ecb6d9cd7dda138809bc3469dd22.sol(772)

[33mWarning[0m for UnhandledException in contract 'Avatar':
    |    returns(bool success, bytes memory returnValue) {
    |      // solhint-disable-next-line avoid-call-value
  > |        (success, returnValue) = _contract.call.value(_value)(_data);
    |        emit GenericCall(_contract, _data, _value, success);
    |    }
  at /unique_chucks/21/0x26f43da77559ecb6d9cd7dda138809bc3469dd22.sol(772)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'Avatar':
    |    returns(bool success, bytes memory returnValue) {
    |      // solhint-disable-next-line avoid-call-value
  > |        (success, returnValue) = _contract.call.value(_value)(_data);
    |        emit GenericCall(_contract, _data, _value, success);
    |    }
  at /unique_chucks/21/0x26f43da77559ecb6d9cd7dda138809bc3469dd22.sol(772)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'Avatar':
    |    */
    |    function sendEther(uint256 _amountInWei, address payable _to) public onlyOwner returns(bool) {
  > |        _to.transfer(_amountInWei);
    |        emit SendEther(_amountInWei, _to);
    |        return true;
  at /unique_chucks/21/0x26f43da77559ecb6d9cd7dda138809bc3469dd22.sol(783)

[33mWarning[0m for UnrestrictedWrite in contract 'Avatar':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipTransferred(_owner, address(0));
  > |        _owner = address(0);
    |    }
    |
  at /unique_chucks/21/0x26f43da77559ecb6d9cd7dda138809bc3469dd22.sol(54)

[33mWarning[0m for UnrestrictedWrite in contract 'Avatar':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_chucks/21/0x26f43da77559ecb6d9cd7dda138809bc3469dd22.sol(72)

[31mViolation[0m for LockedEther in contract 'DAOToken':
    | */
    |
  > |contract DAOToken is ERC20, ERC20Burnable, Ownable {
    |
    |    string public name;
  at /unique_chucks/21/0x26f43da77559ecb6d9cd7dda138809bc3469dd22.sol(577)

[33mWarning[0m for TODAmount in contract 'DxLockEth4Rep':
    |    function release(address payable _beneficiary, bytes32 _lockingId) public returns(bool) {
    |        uint256 amount = super._release(_beneficiary, _lockingId);
  > |        _beneficiary.transfer(amount);
    |
    |        return true;
  at /unique_chucks/21/0x26f43da77559ecb6d9cd7dda138809bc3469dd22.sol(1291)

[33mWarning[0m for TODReceiver in contract 'DxLockEth4Rep':
    |    function release(address payable _beneficiary, bytes32 _lockingId) public returns(bool) {
    |        uint256 amount = super._release(_beneficiary, _lockingId);
  > |        _beneficiary.transfer(amount);
    |
    |        return true;
  at /unique_chucks/21/0x26f43da77559ecb6d9cd7dda138809bc3469dd22.sol(1291)

[33mWarning[0m for UnrestrictedWrite in contract 'DxLockEth4Rep':
    |        require(scores[_beneficiary] > 0, "score should be > 0");
    |        uint256 score = scores[_beneficiary];
  > |        scores[_beneficiary] = 0;
    |        uint256 repRelation = score.mul(reputationReward);
    |        reputation = repRelation.div(totalScore);
  at /unique_chucks/21/0x26f43da77559ecb6d9cd7dda138809bc3469dd22.sol(1127)

[33mWarning[0m for UnrestrictedWrite in contract 'DxLockEth4Rep':
    |        require(locker.amount > 0, "amount should be > 0");
    |        amount = locker.amount;
  > |        locker.amount = 0;
    |        // solhint-disable-next-line not-rely-on-time
    |        require(block.timestamp > locker.releaseTime, "check the lock period pass");
  at /unique_chucks/21/0x26f43da77559ecb6d9cd7dda138809bc3469dd22.sol(1151)

[33mWarning[0m for UnrestrictedWrite in contract 'DxLockEth4Rep':
    |        require(_redeemEnableTime >= _lockingEndTime, "redeemEnableTime >= lockingEndTime");
    |
  > |        reputationReward = _reputationReward;
    |        reputationRewardLeft = _reputationReward;
    |        lockingEndTime = _lockingEndTime;
  at /unique_chucks/21/0x26f43da77559ecb6d9cd7dda138809bc3469dd22.sol(1231)

[33mWarning[0m for UnrestrictedWrite in contract 'DxLockEth4Rep':
    |
    |        reputationReward = _reputationReward;
  > |        reputationRewardLeft = _reputationReward;
    |        lockingEndTime = _lockingEndTime;
    |        maxLockingPeriod = _maxLockingPeriod;
  at /unique_chucks/21/0x26f43da77559ecb6d9cd7dda138809bc3469dd22.sol(1232)

[33mWarning[0m for UnrestrictedWrite in contract 'DxLockEth4Rep':
    |        reputationReward = _reputationReward;
    |        reputationRewardLeft = _reputationReward;
  > |        lockingEndTime = _lockingEndTime;
    |        maxLockingPeriod = _maxLockingPeriod;
    |        avatar = _avatar;
  at /unique_chucks/21/0x26f43da77559ecb6d9cd7dda138809bc3469dd22.sol(1233)

[33mWarning[0m for UnrestrictedWrite in contract 'DxLockEth4Rep':
    |        reputationRewardLeft = _reputationReward;
    |        lockingEndTime = _lockingEndTime;
  > |        maxLockingPeriod = _maxLockingPeriod;
    |        avatar = _avatar;
    |        lockingStartTime = _lockingStartTime;
  at /unique_chucks/21/0x26f43da77559ecb6d9cd7dda138809bc3469dd22.sol(1234)

[33mWarning[0m for UnrestrictedWrite in contract 'DxLockEth4Rep':
    |        lockingEndTime = _lockingEndTime;
    |        maxLockingPeriod = _maxLockingPeriod;
  > |        avatar = _avatar;
    |        lockingStartTime = _lockingStartTime;
    |        redeemEnableTime = _redeemEnableTime;
  at /unique_chucks/21/0x26f43da77559ecb6d9cd7dda138809bc3469dd22.sol(1235)

[33mWarning[0m for UnrestrictedWrite in contract 'DxLockEth4Rep':
    |        maxLockingPeriod = _maxLockingPeriod;
    |        avatar = _avatar;
  > |        lockingStartTime = _lockingStartTime;
    |        redeemEnableTime = _redeemEnableTime;
    |    }
  at /unique_chucks/21/0x26f43da77559ecb6d9cd7dda138809bc3469dd22.sol(1236)

[33mWarning[0m for UnrestrictedWrite in contract 'DxLockEth4Rep':
    |        avatar = _avatar;
    |        lockingStartTime = _lockingStartTime;
  > |        redeemEnableTime = _redeemEnableTime;
    |    }
    |
  at /unique_chucks/21/0x26f43da77559ecb6d9cd7dda138809bc3469dd22.sol(1237)

[33mWarning[0m for UnrestrictedWrite in contract 'ERC20Burnable':
    |        require(account != address(0));
    |
  > |        _totalSupply = _totalSupply.sub(value);
    |        _balances[account] = _balances[account].sub(value);
    |        emit Transfer(account, address(0), value);
  at /unique_chucks/21/0x26f43da77559ecb6d9cd7dda138809bc3469dd22.sol(516)

[31mViolation[0m for UnrestrictedWrite in contract 'Locking4Reputation':
    |        require(scores[_beneficiary] > 0, "score should be > 0");
    |        uint256 score = scores[_beneficiary];
  > |        scores[_beneficiary] = 0;
    |        uint256 repRelation = score.mul(reputationReward);
    |        reputation = repRelation.div(totalScore);
  at /unique_chucks/21/0x26f43da77559ecb6d9cd7dda138809bc3469dd22.sol(1127)

[31mViolation[0m for UnrestrictedWrite in contract 'Locking4Reputation':
    |
    |        //check that the reputation is sum zero
  > |        reputationRewardLeft = reputationRewardLeft.sub(reputation);
    |        require(
    |        ControllerInterface(
  at /unique_chucks/21/0x26f43da77559ecb6d9cd7dda138809bc3469dd22.sol(1132)

[33mWarning[0m for TODAmount in contract 'LockingEth4Reputation':
    |    function release(address payable _beneficiary, bytes32 _lockingId) public returns(bool) {
    |        uint256 amount = super._release(_beneficiary, _lockingId);
  > |        _beneficiary.transfer(amount);
    |
    |        return true;
  at /unique_chucks/21/0x26f43da77559ecb6d9cd7dda138809bc3469dd22.sol(1291)

[33mWarning[0m for TODReceiver in contract 'LockingEth4Reputation':
    |    function release(address payable _beneficiary, bytes32 _lockingId) public returns(bool) {
    |        uint256 amount = super._release(_beneficiary, _lockingId);
  > |        _beneficiary.transfer(amount);
    |
    |        return true;
  at /unique_chucks/21/0x26f43da77559ecb6d9cd7dda138809bc3469dd22.sol(1291)

[33mWarning[0m for UnrestrictedWrite in contract 'LockingEth4Reputation':
    |        require(scores[_beneficiary] > 0, "score should be > 0");
    |        uint256 score = scores[_beneficiary];
  > |        scores[_beneficiary] = 0;
    |        uint256 repRelation = score.mul(reputationReward);
    |        reputation = repRelation.div(totalScore);
  at /unique_chucks/21/0x26f43da77559ecb6d9cd7dda138809bc3469dd22.sol(1127)

[33mWarning[0m for UnrestrictedWrite in contract 'LockingEth4Reputation':
    |        require(locker.amount > 0, "amount should be > 0");
    |        amount = locker.amount;
  > |        locker.amount = 0;
    |        // solhint-disable-next-line not-rely-on-time
    |        require(block.timestamp > locker.releaseTime, "check the lock period pass");
  at /unique_chucks/21/0x26f43da77559ecb6d9cd7dda138809bc3469dd22.sol(1151)

[33mWarning[0m for UnrestrictedWrite in contract 'LockingEth4Reputation':
    |        require(_redeemEnableTime >= _lockingEndTime, "redeemEnableTime >= lockingEndTime");
    |
  > |        reputationReward = _reputationReward;
    |        reputationRewardLeft = _reputationReward;
    |        lockingEndTime = _lockingEndTime;
  at /unique_chucks/21/0x26f43da77559ecb6d9cd7dda138809bc3469dd22.sol(1231)

[33mWarning[0m for UnrestrictedWrite in contract 'LockingEth4Reputation':
    |
    |        reputationReward = _reputationReward;
  > |        reputationRewardLeft = _reputationReward;
    |        lockingEndTime = _lockingEndTime;
    |        maxLockingPeriod = _maxLockingPeriod;
  at /unique_chucks/21/0x26f43da77559ecb6d9cd7dda138809bc3469dd22.sol(1232)

[33mWarning[0m for UnrestrictedWrite in contract 'LockingEth4Reputation':
    |        reputationReward = _reputationReward;
    |        reputationRewardLeft = _reputationReward;
  > |        lockingEndTime = _lockingEndTime;
    |        maxLockingPeriod = _maxLockingPeriod;
    |        avatar = _avatar;
  at /unique_chucks/21/0x26f43da77559ecb6d9cd7dda138809bc3469dd22.sol(1233)

[33mWarning[0m for UnrestrictedWrite in contract 'LockingEth4Reputation':
    |        reputationRewardLeft = _reputationReward;
    |        lockingEndTime = _lockingEndTime;
  > |        maxLockingPeriod = _maxLockingPeriod;
    |        avatar = _avatar;
    |        lockingStartTime = _lockingStartTime;
  at /unique_chucks/21/0x26f43da77559ecb6d9cd7dda138809bc3469dd22.sol(1234)

[33mWarning[0m for UnrestrictedWrite in contract 'LockingEth4Reputation':
    |        lockingEndTime = _lockingEndTime;
    |        maxLockingPeriod = _maxLockingPeriod;
  > |        avatar = _avatar;
    |        lockingStartTime = _lockingStartTime;
    |        redeemEnableTime = _redeemEnableTime;
  at /unique_chucks/21/0x26f43da77559ecb6d9cd7dda138809bc3469dd22.sol(1235)

[33mWarning[0m for UnrestrictedWrite in contract 'LockingEth4Reputation':
    |        maxLockingPeriod = _maxLockingPeriod;
    |        avatar = _avatar;
  > |        lockingStartTime = _lockingStartTime;
    |        redeemEnableTime = _redeemEnableTime;
    |    }
  at /unique_chucks/21/0x26f43da77559ecb6d9cd7dda138809bc3469dd22.sol(1236)

[33mWarning[0m for UnrestrictedWrite in contract 'LockingEth4Reputation':
    |        avatar = _avatar;
    |        lockingStartTime = _lockingStartTime;
  > |        redeemEnableTime = _redeemEnableTime;
    |    }
    |
  at /unique_chucks/21/0x26f43da77559ecb6d9cd7dda138809bc3469dd22.sol(1237)

[31mViolation[0m for UnrestrictedWrite in contract 'Reputation':
    | */
    |
  > |contract Reputation is Ownable {
    |
    |    uint8 public decimals = 18;             //Number of decimals of the smallest unit
  at /unique_chucks/21/0x26f43da77559ecb6d9cd7dda138809bc3469dd22.sol(91)

[33mWarning[0m for UnrestrictedWrite in contract 'Reputation':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipTransferred(_owner, address(0));
  > |        _owner = address(0);
    |    }
    |
  at /unique_chucks/21/0x26f43da77559ecb6d9cd7dda138809bc3469dd22.sol(54)

[33mWarning[0m for UnrestrictedWrite in contract 'Reputation':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_chucks/21/0x26f43da77559ecb6d9cd7dda138809bc3469dd22.sol(72)

[33mWarning[0m for UnrestrictedWrite in contract 'Reputation':
    | */
    |
  > |contract Reputation is Ownable {
    |
    |    uint8 public decimals = 18;             //Number of decimals of the smallest unit
  at /unique_chucks/21/0x26f43da77559ecb6d9cd7dda138809bc3469dd22.sol(91)

[33mWarning[0m for UnrestrictedWrite in contract 'Reputation':
    |        if ((checkpoints.length == 0) || (checkpoints[checkpoints.length - 1].fromBlock < block.number)) {
    |            Checkpoint storage newCheckPoint = checkpoints[checkpoints.length++];
  > |            newCheckPoint.fromBlock = uint128(block.number);
    |            newCheckPoint.value = uint128(_value);
    |        } else {
  at /unique_chucks/21/0x26f43da77559ecb6d9cd7dda138809bc3469dd22.sol(244)

[33mWarning[0m for UnrestrictedWrite in contract 'Reputation':
    |            Checkpoint storage newCheckPoint = checkpoints[checkpoints.length++];
    |            newCheckPoint.fromBlock = uint128(block.number);
  > |            newCheckPoint.value = uint128(_value);
    |        } else {
    |            Checkpoint storage oldCheckPoint = checkpoints[checkpoints.length-1];
  at /unique_chucks/21/0x26f43da77559ecb6d9cd7dda138809bc3469dd22.sol(245)

[33mWarning[0m for UnrestrictedWrite in contract 'Reputation':
    |        } else {
    |            Checkpoint storage oldCheckPoint = checkpoints[checkpoints.length-1];
  > |            oldCheckPoint.value = uint128(_value);
    |        }
    |    }
  at /unique_chucks/21/0x26f43da77559ecb6d9cd7dda138809bc3469dd22.sol(248)