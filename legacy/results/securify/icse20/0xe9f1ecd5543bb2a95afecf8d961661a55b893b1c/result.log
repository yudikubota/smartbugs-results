Processing contract: /unique_chucks/40/0xe9f1ecd5543bb2a95afecf8d961661a55b893b1c.sol:CDPResolver
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/40/0xe9f1ecd5543bb2a95afecf8d961661a55b893b1c.sol:DSMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/40/0xe9f1ecd5543bb2a95afecf8d961661a55b893b1c.sol:Helpers
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/40/0xe9f1ecd5543bb2a95afecf8d961661a55b893b1c.sol:InstaMaker
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/40/0xe9f1ecd5543bb2a95afecf8d961661a55b893b1c.sol:PepInterface
Processing contract: /unique_chucks/40/0xe9f1ecd5543bb2a95afecf8d961661a55b893b1c.sol:TokenInterface
Processing contract: /unique_chucks/40/0xe9f1ecd5543bb2a95afecf8d961661a55b893b1c.sol:TubInterface
[31mViolation[0m for RepeatedCall in contract 'CDPResolver':
    |
    |            uint ink = rdiv(jam, tub.per());
  > |            ink = rmul(ink, tub.per()) <= jam ? ink : ink - 1;
    |            tub.free(cup, ink);
    |
  at /unique_chucks/40/0xe9f1ecd5543bb2a95afecf8d961661a55b893b1c.sol(97)

[31mViolation[0m for RepeatedCall in contract 'CDPResolver':
    |            tub.exit(ink);
    |            uint freeJam = tub.gem().balanceOf(address(this)); // withdraw possible previous stuck WETH as well
  > |            tub.gem().withdraw(freeJam);
    |            
    |            address(msg.sender).transfer(freeJam);
  at /unique_chucks/40/0xe9f1ecd5543bb2a95afecf8d961661a55b893b1c.sol(104)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'CDPResolver':
    |            tub.gem().withdraw(freeJam);
    |            
  > |            address(msg.sender).transfer(freeJam);
    |        }
    |    }
  at /unique_chucks/40/0xe9f1ecd5543bb2a95afecf8d961661a55b893b1c.sol(106)

[31mViolation[0m for RepeatedCall in contract 'InstaMaker':
    |
    |            uint ink = rdiv(jam, tub.per());
  > |            ink = rmul(ink, tub.per()) <= jam ? ink : ink - 1;
    |            tub.free(cup, ink);
    |
  at /unique_chucks/40/0xe9f1ecd5543bb2a95afecf8d961661a55b893b1c.sol(97)

[31mViolation[0m for RepeatedCall in contract 'InstaMaker':
    |            tub.exit(ink);
    |            uint freeJam = tub.gem().balanceOf(address(this)); // withdraw possible previous stuck WETH as well
  > |            tub.gem().withdraw(freeJam);
    |            
    |            address(msg.sender).transfer(freeJam);
  at /unique_chucks/40/0xe9f1ecd5543bb2a95afecf8d961661a55b893b1c.sol(104)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'InstaMaker':
    |            tub.gem().withdraw(freeJam);
    |            
  > |            address(msg.sender).transfer(freeJam);
    |        }
    |    }
  at /unique_chucks/40/0xe9f1ecd5543bb2a95afecf8d961661a55b893b1c.sol(106)