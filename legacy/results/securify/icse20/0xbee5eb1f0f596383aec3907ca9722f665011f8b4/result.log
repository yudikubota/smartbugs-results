Processing contract: /unique_chucks/14/0xbee5eb1f0f596383aec3907ca9722f665011f8b4.sol:ERC20
Processing contract: /unique_chucks/14/0xbee5eb1f0f596383aec3907ca9722f665011f8b4.sol:Protocol
Processing contract: /unique_chucks/14/0xbee5eb1f0f596383aec3907ca9722f665011f8b4.sol:ProtocolTypes
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/14/0xbee5eb1f0f596383aec3907ca9722f665011f8b4.sol:Trading
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[33mWarning[0m for TODAmount in contract 'Trading':
    |    function withdraw(uint amount) public {
    |        require(msg.sender == owner);
  > |        owner.transfer(amount);
    |    }
    |    
  at /unique_chucks/14/0xbee5eb1f0f596383aec3907ca9722f665011f8b4.sol(111)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'Trading':
    |            }
    |
  > |            msg.sender.transfer(getting);
    |        }
    |    }
  at /unique_chucks/14/0xbee5eb1f0f596383aec3907ca9722f665011f8b4.sol(95)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'Trading':
    |    function withdraw(uint amount) public {
    |        require(msg.sender == owner);
  > |        owner.transfer(amount);
    |    }
    |    
  at /unique_chucks/14/0xbee5eb1f0f596383aec3907ca9722f665011f8b4.sol(111)

[33mWarning[0m for UnrestrictedWrite in contract 'Trading':
    |    function setSigner(address next) public {
    |        require(msg.sender == owner);
  > |        signer = next;
    |    }
    |}
  at /unique_chucks/14/0xbee5eb1f0f596383aec3907ca9722f665011f8b4.sol(130)