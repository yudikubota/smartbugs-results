Processing contract: /unique_chucks/16/0xb50e1362d546dac91c1f4a2764af1af0731cab0a.sol:Crowdsale
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/16/0xb50e1362d546dac91c1f4a2764af1af0731cab0a.sol:simpleToken
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for DAOConstantGas in contract 'Crowdsale':
    |    function safeWithdrawal() public onlyOwner(){
    |       
  > |        msg.sender.transfer(amountRaised);
    |
    |        emit FundTransfer(msg.sender, amountRaised, false);
  at /unique_chucks/16/0xb50e1362d546dac91c1f4a2764af1af0731cab0a.sol(97)

[31mViolation[0m for MissingInputValidation in contract 'Crowdsale':
    |     uint256 public totalSupply = 10000000000000; 
    |     /* This creates an array with all balances */
  > |     mapping (address => uint256) public balanceOf;
    |
    |     event Transfer(address indexed from, address indexed to, uint256 value);  
  at /unique_chucks/16/0xb50e1362d546dac91c1f4a2764af1af0731cab0a.sol(12)

[31mViolation[0m for MissingInputValidation in contract 'Crowdsale':
    |     modifier onlyOwner() { require(msg.sender == beneficiary); _; }
    |
  > |     function transfer(address _to, uint256 _value) public{
    |       require(balanceOf[msg.sender] >= _value);
    |      
  at /unique_chucks/16/0xb50e1362d546dac91c1f4a2764af1af0731cab0a.sol(28)

[31mViolation[0m for MissingInputValidation in contract 'Crowdsale':
    |     }
    |
  > |     function issue(address _to, uint256 _amount) public onlyOwner(){
    |         require(balanceOf[beneficiary] >= _amount);
    |        
  at /unique_chucks/16/0xb50e1362d546dac91c1f4a2764af1af0731cab0a.sol(40)

[31mViolation[0m for MissingInputValidation in contract 'Crowdsale':
    |    uint public price;  
    |    uint256 public counterForTokenId = 0;
  > |    mapping(address => uint256) public balanceInEthAtCrowdsale; 
    | 
    |    event FundTransfer(address _backer, uint _amount, bool _isContribution);    
  at /unique_chucks/16/0xb50e1362d546dac91c1f4a2764af1af0731cab0a.sol(55)

[31mViolation[0m for MissingInputValidation in contract 'Crowdsale':
    |    }
    |    
  > |    function setPrice (uint price_in_finney) public onlyOwner(){
    |        price = price_in_finney * 1 finney;
    |        emit SetPrice(msg.sender, price);
  at /unique_chucks/16/0xb50e1362d546dac91c1f4a2764af1af0731cab0a.sol(103)

[31mViolation[0m for MissingInputValidation in contract 'Crowdsale':
    |    }
    |    
  > |    function addSupplyAmount (uint256 amount) public onlyOwner(){
    |        totalSupply = totalSupply + amount; 
    |        balanceOf[msg.sender] += amount;
  at /unique_chucks/16/0xb50e1362d546dac91c1f4a2764af1af0731cab0a.sol(108)

[31mViolation[0m for TODAmount in contract 'Crowdsale':
    |    function safeWithdrawal() public onlyOwner(){
    |       
  > |        msg.sender.transfer(amountRaised);
    |
    |        emit FundTransfer(msg.sender, amountRaised, false);
  at /unique_chucks/16/0xb50e1362d546dac91c1f4a2764af1af0731cab0a.sol(97)

[31mViolation[0m for UnrestrictedWrite in contract 'Crowdsale':
    |
    |     
  > |       balanceOf[_to] += _value;
    |
    |      
  at /unique_chucks/16/0xb50e1362d546dac91c1f4a2764af1af0731cab0a.sol(34)

[31mViolation[0m for UnrestrictedWrite in contract 'Crowdsale':
    |     require(balanceOf[beneficiary] >= _amount);
    |    
  > |     balanceOf[beneficiary] -= _amount;
    |     balanceOf[_to] += _amount;
    |   
  at /unique_chucks/16/0xb50e1362d546dac91c1f4a2764af1af0731cab0a.sol(73)

[31mViolation[0m for UnrestrictedWrite in contract 'Crowdsale':
    |    
    |     balanceOf[beneficiary] -= _amount;
  > |     balanceOf[_to] += _amount;
    |   
    |     emit Transfer(beneficiary, _to, _amount);
  at /unique_chucks/16/0xb50e1362d546dac91c1f4a2764af1af0731cab0a.sol(74)

[33mWarning[0m for UnrestrictedWrite in contract 'Crowdsale':
    |         require(balanceOf[beneficiary] >= _amount);
    |        
  > |         balanceOf[beneficiary] -= _amount;
    |         balanceOf[_to] += _amount;
    |        
  at /unique_chucks/16/0xb50e1362d546dac91c1f4a2764af1af0731cab0a.sol(43)

[33mWarning[0m for UnrestrictedWrite in contract 'Crowdsale':
    |        
    |         balanceOf[beneficiary] -= _amount;
  > |         balanceOf[_to] += _amount;
    |        
    |         emit Transfer(beneficiary, _to, _amount);
  at /unique_chucks/16/0xb50e1362d546dac91c1f4a2764af1af0731cab0a.sol(44)

[33mWarning[0m for UnrestrictedWrite in contract 'Crowdsale':
    |
    |        emit FundTransfer(msg.sender, amountRaised, false);
  > |        amountRaised = 0;
    |    }
    |    
  at /unique_chucks/16/0xb50e1362d546dac91c1f4a2764af1af0731cab0a.sol(100)

[33mWarning[0m for UnrestrictedWrite in contract 'Crowdsale':
    |    
    |    function setPrice (uint price_in_finney) public onlyOwner(){
  > |        price = price_in_finney * 1 finney;
    |        emit SetPrice(msg.sender, price);
    |    }
  at /unique_chucks/16/0xb50e1362d546dac91c1f4a2764af1af0731cab0a.sol(104)

[33mWarning[0m for UnrestrictedWrite in contract 'Crowdsale':
    |    
    |    function addSupplyAmount (uint256 amount) public onlyOwner(){
  > |        totalSupply = totalSupply + amount; 
    |        balanceOf[msg.sender] += amount;
    |
  at /unique_chucks/16/0xb50e1362d546dac91c1f4a2764af1af0731cab0a.sol(109)

[31mViolation[0m for LockedEther in contract 'simpleToken':
    |
    |
  > | contract simpleToken {
    |     address public beneficiary;
    |     string public standard = 'https://mshk.top';
  at /unique_chucks/16/0xb50e1362d546dac91c1f4a2764af1af0731cab0a.sol(4)

[31mViolation[0m for MissingInputValidation in contract 'simpleToken':
    |     uint256 public totalSupply = 10000000000000; 
    |     /* This creates an array with all balances */
  > |     mapping (address => uint256) public balanceOf;
    |
    |     event Transfer(address indexed from, address indexed to, uint256 value);  
  at /unique_chucks/16/0xb50e1362d546dac91c1f4a2764af1af0731cab0a.sol(12)

[31mViolation[0m for MissingInputValidation in contract 'simpleToken':
    |     modifier onlyOwner() { require(msg.sender == beneficiary); _; }
    |
  > |     function transfer(address _to, uint256 _value) public{
    |       require(balanceOf[msg.sender] >= _value);
    |      
  at /unique_chucks/16/0xb50e1362d546dac91c1f4a2764af1af0731cab0a.sol(28)

[31mViolation[0m for MissingInputValidation in contract 'simpleToken':
    |     }
    |
  > |     function issue(address _to, uint256 _amount) public onlyOwner(){
    |         require(balanceOf[beneficiary] >= _amount);
    |        
  at /unique_chucks/16/0xb50e1362d546dac91c1f4a2764af1af0731cab0a.sol(40)

[31mViolation[0m for UnrestrictedWrite in contract 'simpleToken':
    |
    |     
  > |       balanceOf[_to] += _value;
    |
    |      
  at /unique_chucks/16/0xb50e1362d546dac91c1f4a2764af1af0731cab0a.sol(34)

[33mWarning[0m for UnrestrictedWrite in contract 'simpleToken':
    |         require(balanceOf[beneficiary] >= _amount);
    |        
  > |         balanceOf[beneficiary] -= _amount;
    |         balanceOf[_to] += _amount;
    |        
  at /unique_chucks/16/0xb50e1362d546dac91c1f4a2764af1af0731cab0a.sol(43)

[33mWarning[0m for UnrestrictedWrite in contract 'simpleToken':
    |        
    |         balanceOf[beneficiary] -= _amount;
  > |         balanceOf[_to] += _amount;
    |        
    |         emit Transfer(beneficiary, _to, _amount);
  at /unique_chucks/16/0xb50e1362d546dac91c1f4a2764af1af0731cab0a.sol(44)