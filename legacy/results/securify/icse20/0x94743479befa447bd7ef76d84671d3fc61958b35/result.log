Processing contract: /unique_chucks/13/0x94743479befa447bd7ef76d84671d3fc61958b35.sol:BurnableToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/13/0x94743479befa447bd7ef76d84671d3fc61958b35.sol:ERC20
Processing contract: /unique_chucks/13/0x94743479befa447bd7ef76d84671d3fc61958b35.sol:ERC20Basic
Processing contract: /unique_chucks/13/0x94743479befa447bd7ef76d84671d3fc61958b35.sol:LockableToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/13/0x94743479befa447bd7ef76d84671d3fc61958b35.sol:MintableToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/13/0x94743479befa447bd7ef76d84671d3fc61958b35.sol:MzcToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/13/0x94743479befa447bd7ef76d84671d3fc61958b35.sol:Ownable
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/13/0x94743479befa447bd7ef76d84671d3fc61958b35.sol:Pausable
Processing contract: /unique_chucks/13/0x94743479befa447bd7ef76d84671d3fc61958b35.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/13/0x94743479befa447bd7ef76d84671d3fc61958b35.sol:StandardToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[33mWarning[0m for UnrestrictedWrite in contract 'BurnableToken':
    |
    |    emit OwnershipTransferred(_owner, newOwner);
  > |    _owner = newOwner;
    |  }
    |
  at /unique_chucks/13/0x94743479befa447bd7ef76d84671d3fc61958b35.sol(102)

[33mWarning[0m for UnrestrictedWrite in contract 'BurnableToken':
    |
    |    emit OperatorTransferred(_operator, newOperator);
  > |    _operator = newOperator;
    |  }
    |
  at /unique_chucks/13/0x94743479befa447bd7ef76d84671d3fc61958b35.sol(113)

[33mWarning[0m for UnrestrictedWrite in contract 'BurnableToken':
    |    require(account != address(0));
    |
  > |    _totalSupply = _totalSupply.add(value);
    |    _balances[account] = _balances[account].add(value);
    |    emit Transfer(address(0), account, value);
  at /unique_chucks/13/0x94743479befa447bd7ef76d84671d3fc61958b35.sol(381)

[33mWarning[0m for UnrestrictedWrite in contract 'BurnableToken':
    |    */
    |  function _burn(uint value) internal {
  > |    _totalSupply = _totalSupply.sub(value);
    |    _balances[msg.sender] = _balances[msg.sender].sub(value);
    |    emit Transfer(msg.sender, address(0), value);
  at /unique_chucks/13/0x94743479befa447bd7ef76d84671d3fc61958b35.sol(392)

[33mWarning[0m for UnrestrictedWrite in contract 'BurnableToken':
    |    */
    |  function finishMinting() public whenNotPaused onlyOwner canMint returns (bool) {
  > |    mintingFinished = true;
    |    emit MintFinished();
    |    return true;
  at /unique_chucks/13/0x94743479befa447bd7ef76d84671d3fc61958b35.sol(442)

[31mViolation[0m for LockedEther in contract 'LockableToken':
    |  * @dev locking of granted balance
    |  */
  > |contract LockableToken is BurnableToken {
    |
    |  using SafeMath for uint;
  at /unique_chucks/13/0x94743479befa447bd7ef76d84671d3fc61958b35.sol(469)

[33mWarning[0m for UnrestrictedWrite in contract 'LockableToken':
    |  * @dev locking of granted balance
    |  */
  > |contract LockableToken is BurnableToken {
    |
    |  using SafeMath for uint;
  at /unique_chucks/13/0x94743479befa447bd7ef76d84671d3fc61958b35.sol(469)

[33mWarning[0m for UnrestrictedWrite in contract 'MintableToken':
    |
    |    emit OwnershipTransferred(_owner, newOwner);
  > |    _owner = newOwner;
    |  }
    |
  at /unique_chucks/13/0x94743479befa447bd7ef76d84671d3fc61958b35.sol(102)

[33mWarning[0m for UnrestrictedWrite in contract 'MintableToken':
    |
    |    emit OperatorTransferred(_operator, newOperator);
  > |    _operator = newOperator;
    |  }
    |
  at /unique_chucks/13/0x94743479befa447bd7ef76d84671d3fc61958b35.sol(113)

[33mWarning[0m for UnrestrictedWrite in contract 'MintableToken':
    |    require(account != address(0));
    |
  > |    _totalSupply = _totalSupply.add(value);
    |    _balances[account] = _balances[account].add(value);
    |    emit Transfer(address(0), account, value);
  at /unique_chucks/13/0x94743479befa447bd7ef76d84671d3fc61958b35.sol(381)

[33mWarning[0m for UnrestrictedWrite in contract 'MintableToken':
    |    */
    |  function finishMinting() public whenNotPaused onlyOwner canMint returns (bool) {
  > |    mintingFinished = true;
    |    emit MintFinished();
    |    return true;
  at /unique_chucks/13/0x94743479befa447bd7ef76d84671d3fc61958b35.sol(442)

[31mViolation[0m for LockedEther in contract 'MzcToken':
    |  * @dev ERC20 Token
    |  */
  > |contract MzcToken is LockableToken {
    |
    |  string public constant name = "Muze creative";
  at /unique_chucks/13/0x94743479befa447bd7ef76d84671d3fc61958b35.sol(572)

[33mWarning[0m for UnrestrictedWrite in contract 'MzcToken':
    |  * @dev ERC20 Token
    |  */
  > |contract MzcToken is LockableToken {
    |
    |  string public constant name = "Muze creative";
  at /unique_chucks/13/0x94743479befa447bd7ef76d84671d3fc61958b35.sol(572)

[33mWarning[0m for UnrestrictedWrite in contract 'Ownable':
    |
    |    emit OwnershipTransferred(_owner, newOwner);
  > |    _owner = newOwner;
    |  }
    |
  at /unique_chucks/13/0x94743479befa447bd7ef76d84671d3fc61958b35.sol(102)

[33mWarning[0m for UnrestrictedWrite in contract 'Ownable':
    |
    |    emit OperatorTransferred(_operator, newOperator);
  > |    _operator = newOperator;
    |  }
    |
  at /unique_chucks/13/0x94743479befa447bd7ef76d84671d3fc61958b35.sol(113)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |
    |    emit OwnershipTransferred(_owner, newOwner);
  > |    _owner = newOwner;
    |  }
    |
  at /unique_chucks/13/0x94743479befa447bd7ef76d84671d3fc61958b35.sol(102)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |
    |    emit OperatorTransferred(_operator, newOperator);
  > |    _operator = newOperator;
    |  }
    |
  at /unique_chucks/13/0x94743479befa447bd7ef76d84671d3fc61958b35.sol(113)