Processing contract: /unique_chucks/1/0x3bff697e966b77cb4f0e32815dd020b09750b22d.sol:Controlled
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/1/0x3bff697e966b77cb4f0e32815dd020b09750b22d.sol:Currency
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/1/0x3bff697e966b77cb4f0e32815dd020b09750b22d.sol:Owned
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/1/0x3bff697e966b77cb4f0e32815dd020b09750b22d.sol:StandardToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/1/0x3bff697e966b77cb4f0e32815dd020b09750b22d.sol:Token
[33mWarning[0m for UnrestrictedWrite in contract 'Controlled':
    |    function changeOwner(address _newOwner) public isOwner {
    |        require(_newOwner != owner);
  > |        newOwner = _newOwner;
    |    }
    |
  at /unique_chucks/1/0x3bff697e966b77cb4f0e32815dd020b09750b22d.sol(33)

[33mWarning[0m for UnrestrictedWrite in contract 'Controlled':
    |        require(msg.sender == newOwner);
    |        emit OwnerUpdate(owner, newOwner);
  > |        owner = newOwner;
    |        newOwner = address(0x0);
    |    }
  at /unique_chucks/1/0x3bff697e966b77cb4f0e32815dd020b09750b22d.sol(39)

[33mWarning[0m for UnrestrictedWrite in contract 'Controlled':
    |        emit OwnerUpdate(owner, newOwner);
    |        owner = newOwner;
  > |        newOwner = address(0x0);
    |    }
    |
  at /unique_chucks/1/0x3bff697e966b77cb4f0e32815dd020b09750b22d.sol(40)

[33mWarning[0m for UnrestrictedWrite in contract 'Controlled':
    |
    |    function enableTransfer(bool _enable) public isOwner{
  > |        transferEnable = _enable;
    |    }
    |
  at /unique_chucks/1/0x3bff697e966b77cb4f0e32815dd020b09750b22d.sol(60)

[33mWarning[0m for UnrestrictedWrite in contract 'Controlled':
    |
    |    function disableLock(bool _enable) public isOwner returns (bool success){
  > |        lockFlag = _enable;
    |        return true;
    |    }
  at /unique_chucks/1/0x3bff697e966b77cb4f0e32815dd020b09750b22d.sol(64)

[33mWarning[0m for UnrestrictedWrite in contract 'Controlled':
    |    function addLock(address _addr) public isOwner returns (bool success){
    |        require(_addr != msg.sender);
  > |        locked[_addr] = true;
    |        return true;
    |    }
  at /unique_chucks/1/0x3bff697e966b77cb4f0e32815dd020b09750b22d.sol(70)

[33mWarning[0m for UnrestrictedWrite in contract 'Controlled':
    |
    |    function setExclude(address _addr) public isOwner returns (bool success){
  > |        exclude[_addr] = true;
    |        return true;
    |    }
  at /unique_chucks/1/0x3bff697e966b77cb4f0e32815dd020b09750b22d.sol(75)

[33mWarning[0m for UnrestrictedWrite in contract 'Controlled':
    |
    |    function removeLock(address _addr) public isOwner returns (bool success){
  > |        locked[_addr] = false;
    |        return true;
    |    }
  at /unique_chucks/1/0x3bff697e966b77cb4f0e32815dd020b09750b22d.sol(80)

[31mViolation[0m for LockedEther in contract 'Currency':
    |}
    |
  > |contract Currency is StandardToken {
    |
    |    string public name;
  at /unique_chucks/1/0x3bff697e966b77cb4f0e32815dd020b09750b22d.sol(146)

[33mWarning[0m for UnrestrictedWrite in contract 'Currency':
    |        if (balances[msg.sender] >= _value && balances[_to] + _value > balances[_to]) {
    |            balances[msg.sender] -= _value;
  > |            balances[_to] += _value;
    |            emit Transfer(msg.sender, _to, _value);
    |            return true;
  at /unique_chucks/1/0x3bff697e966b77cb4f0e32815dd020b09750b22d.sol(110)

[33mWarning[0m for UnrestrictedWrite in contract 'Currency':
    |        require(_value > 0);
    |        if (balances[_from] >= _value && allowed[_from][msg.sender] >= _value && balances[_to] + _value > balances[_to]) {
  > |            balances[_to] += _value;
    |            balances[_from] -= _value;
    |            allowed[_from][msg.sender] -= _value;
  at /unique_chucks/1/0x3bff697e966b77cb4f0e32815dd020b09750b22d.sol(121)

[33mWarning[0m for UnrestrictedWrite in contract 'Currency':
    |        if (balances[_from] >= _value && allowed[_from][msg.sender] >= _value && balances[_to] + _value > balances[_to]) {
    |            balances[_to] += _value;
  > |            balances[_from] -= _value;
    |            allowed[_from][msg.sender] -= _value;
    |            emit Transfer(_from, _to, _value);
  at /unique_chucks/1/0x3bff697e966b77cb4f0e32815dd020b09750b22d.sol(122)

[33mWarning[0m for UnrestrictedWrite in contract 'Currency':
    |    function changeOwner(address _newOwner) public isOwner {
    |        require(_newOwner != owner);
  > |        newOwner = _newOwner;
    |    }
    |
  at /unique_chucks/1/0x3bff697e966b77cb4f0e32815dd020b09750b22d.sol(33)

[33mWarning[0m for UnrestrictedWrite in contract 'Currency':
    |        require(msg.sender == newOwner);
    |        emit OwnerUpdate(owner, newOwner);
  > |        owner = newOwner;
    |        newOwner = address(0x0);
    |    }
  at /unique_chucks/1/0x3bff697e966b77cb4f0e32815dd020b09750b22d.sol(39)

[33mWarning[0m for UnrestrictedWrite in contract 'Currency':
    |        emit OwnerUpdate(owner, newOwner);
    |        owner = newOwner;
  > |        newOwner = address(0x0);
    |    }
    |
  at /unique_chucks/1/0x3bff697e966b77cb4f0e32815dd020b09750b22d.sol(40)

[33mWarning[0m for UnrestrictedWrite in contract 'Currency':
    |
    |    function enableTransfer(bool _enable) public isOwner{
  > |        transferEnable = _enable;
    |    }
    |
  at /unique_chucks/1/0x3bff697e966b77cb4f0e32815dd020b09750b22d.sol(60)

[33mWarning[0m for UnrestrictedWrite in contract 'Currency':
    |
    |    function disableLock(bool _enable) public isOwner returns (bool success){
  > |        lockFlag = _enable;
    |        return true;
    |    }
  at /unique_chucks/1/0x3bff697e966b77cb4f0e32815dd020b09750b22d.sol(64)

[33mWarning[0m for UnrestrictedWrite in contract 'Currency':
    |    function addLock(address _addr) public isOwner returns (bool success){
    |        require(_addr != msg.sender);
  > |        locked[_addr] = true;
    |        return true;
    |    }
  at /unique_chucks/1/0x3bff697e966b77cb4f0e32815dd020b09750b22d.sol(70)

[33mWarning[0m for UnrestrictedWrite in contract 'Currency':
    |
    |    function setExclude(address _addr) public isOwner returns (bool success){
  > |        exclude[_addr] = true;
    |        return true;
    |    }
  at /unique_chucks/1/0x3bff697e966b77cb4f0e32815dd020b09750b22d.sol(75)

[33mWarning[0m for UnrestrictedWrite in contract 'Currency':
    |
    |    function removeLock(address _addr) public isOwner returns (bool success){
  > |        locked[_addr] = false;
    |        return true;
    |    }
  at /unique_chucks/1/0x3bff697e966b77cb4f0e32815dd020b09750b22d.sol(80)

[33mWarning[0m for UnrestrictedWrite in contract 'Owned':
    |    function changeOwner(address _newOwner) public isOwner {
    |        require(_newOwner != owner);
  > |        newOwner = _newOwner;
    |    }
    |
  at /unique_chucks/1/0x3bff697e966b77cb4f0e32815dd020b09750b22d.sol(33)

[33mWarning[0m for UnrestrictedWrite in contract 'Owned':
    |        require(msg.sender == newOwner);
    |        emit OwnerUpdate(owner, newOwner);
  > |        owner = newOwner;
    |        newOwner = address(0x0);
    |    }
  at /unique_chucks/1/0x3bff697e966b77cb4f0e32815dd020b09750b22d.sol(39)

[33mWarning[0m for UnrestrictedWrite in contract 'Owned':
    |        emit OwnerUpdate(owner, newOwner);
    |        owner = newOwner;
  > |        newOwner = address(0x0);
    |    }
    |
  at /unique_chucks/1/0x3bff697e966b77cb4f0e32815dd020b09750b22d.sol(40)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |        if (balances[msg.sender] >= _value && balances[_to] + _value > balances[_to]) {
    |            balances[msg.sender] -= _value;
  > |            balances[_to] += _value;
    |            emit Transfer(msg.sender, _to, _value);
    |            return true;
  at /unique_chucks/1/0x3bff697e966b77cb4f0e32815dd020b09750b22d.sol(110)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |        require(_value > 0);
    |        if (balances[_from] >= _value && allowed[_from][msg.sender] >= _value && balances[_to] + _value > balances[_to]) {
  > |            balances[_to] += _value;
    |            balances[_from] -= _value;
    |            allowed[_from][msg.sender] -= _value;
  at /unique_chucks/1/0x3bff697e966b77cb4f0e32815dd020b09750b22d.sol(121)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |        if (balances[_from] >= _value && allowed[_from][msg.sender] >= _value && balances[_to] + _value > balances[_to]) {
    |            balances[_to] += _value;
  > |            balances[_from] -= _value;
    |            allowed[_from][msg.sender] -= _value;
    |            emit Transfer(_from, _to, _value);
  at /unique_chucks/1/0x3bff697e966b77cb4f0e32815dd020b09750b22d.sol(122)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |    function changeOwner(address _newOwner) public isOwner {
    |        require(_newOwner != owner);
  > |        newOwner = _newOwner;
    |    }
    |
  at /unique_chucks/1/0x3bff697e966b77cb4f0e32815dd020b09750b22d.sol(33)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |        require(msg.sender == newOwner);
    |        emit OwnerUpdate(owner, newOwner);
  > |        owner = newOwner;
    |        newOwner = address(0x0);
    |    }
  at /unique_chucks/1/0x3bff697e966b77cb4f0e32815dd020b09750b22d.sol(39)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |        emit OwnerUpdate(owner, newOwner);
    |        owner = newOwner;
  > |        newOwner = address(0x0);
    |    }
    |
  at /unique_chucks/1/0x3bff697e966b77cb4f0e32815dd020b09750b22d.sol(40)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |
    |    function enableTransfer(bool _enable) public isOwner{
  > |        transferEnable = _enable;
    |    }
    |
  at /unique_chucks/1/0x3bff697e966b77cb4f0e32815dd020b09750b22d.sol(60)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |
    |    function disableLock(bool _enable) public isOwner returns (bool success){
  > |        lockFlag = _enable;
    |        return true;
    |    }
  at /unique_chucks/1/0x3bff697e966b77cb4f0e32815dd020b09750b22d.sol(64)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |    function addLock(address _addr) public isOwner returns (bool success){
    |        require(_addr != msg.sender);
  > |        locked[_addr] = true;
    |        return true;
    |    }
  at /unique_chucks/1/0x3bff697e966b77cb4f0e32815dd020b09750b22d.sol(70)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |
    |    function setExclude(address _addr) public isOwner returns (bool success){
  > |        exclude[_addr] = true;
    |        return true;
    |    }
  at /unique_chucks/1/0x3bff697e966b77cb4f0e32815dd020b09750b22d.sol(75)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |
    |    function removeLock(address _addr) public isOwner returns (bool success){
  > |        locked[_addr] = false;
    |        return true;
    |    }
  at /unique_chucks/1/0x3bff697e966b77cb4f0e32815dd020b09750b22d.sol(80)