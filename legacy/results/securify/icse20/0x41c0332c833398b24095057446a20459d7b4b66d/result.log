Processing contract: /unique_contracts/0x41c0332c833398b24095057446a20459d7b4b66d.sol:ERC20
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0x41c0332c833398b24095057446a20459d7b4b66d.sol:ERC20Burnable
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0x41c0332c833398b24095057446a20459d7b4b66d.sol:ERC20Detailed
Processing contract: /unique_contracts/0x41c0332c833398b24095057446a20459d7b4b66d.sol:ERC20Mintable
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0x41c0332c833398b24095057446a20459d7b4b66d.sol:IERC20
Processing contract: /unique_contracts/0x41c0332c833398b24095057446a20459d7b4b66d.sol:Loche
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0x41c0332c833398b24095057446a20459d7b4b66d.sol:MinterRole
Processing contract: /unique_contracts/0x41c0332c833398b24095057446a20459d7b4b66d.sol:Ownable
Processing contract: /unique_contracts/0x41c0332c833398b24095057446a20459d7b4b66d.sol:Roles
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0x41c0332c833398b24095057446a20459d7b4b66d.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[33mWarning[0m for UnrestrictedWrite in contract 'ERC20Burnable':
    |        require(account != address(0));
    |
  > |        _totalSupply = _totalSupply.sub(value);
    |        _balances[account] = _balances[account].sub(value);
    |        emit Transfer(account, address(0), value);
  at /unique_contracts/0x41c0332c833398b24095057446a20459d7b4b66d.sol(362)

[31mViolation[0m for TODAmount in contract 'Loche':
    |    function withdrawEther() public onlyOwner
    |    {
  > |        msg.sender.transfer(address(this).balance);
    |    }
    |}
  at /unique_contracts/0x41c0332c833398b24095057446a20459d7b4b66d.sol(620)