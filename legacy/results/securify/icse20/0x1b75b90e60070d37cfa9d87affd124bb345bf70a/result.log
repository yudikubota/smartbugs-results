Processing contract: /unique_contracts/0x1b75b90e60070d37cfa9d87affd124bb345bf70a.sol:Lock
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0x1b75b90e60070d37cfa9d87affd124bb345bf70a.sol:Lockdrop
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for TODAmount in contract 'Lock':
    |            case 0 { revert(0, 0) }
    |            case 1 {
  > |                switch call(gas, sload(0x00), balance(address), 0, 0, 0, 0)
    |                case 0 { revert(0, 0) }
    |            }
  at /unique_contracts/0x1b75b90e60070d37cfa9d87affd124bb345bf70a.sol(21)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'Lock':
    |            case 0 { revert(0, 0) }
    |            case 1 {
  > |                switch call(gas, sload(0x00), balance(address), 0, 0, 0, 0)
    |                case 0 { revert(0, 0) }
    |            }
  at /unique_contracts/0x1b75b90e60070d37cfa9d87affd124bb345bf70a.sol(21)

[31mViolation[0m for LockedEther in contract 'Lockdrop':
    |}
    |
  > |contract Lockdrop {
    |    enum Term {
    |        ThreeMo,
  at /unique_contracts/0x1b75b90e60070d37cfa9d87affd124bb345bf70a.sol(28)

[31mViolation[0m for MissingInputValidation in contract 'Lockdrop':
    |     * @param      isValidator  Indicates if sender wishes to be a validator
    |     */
  > |    function lock(Term term, bytes calldata edgewareAddr, bool isValidator)
    |        external
    |        payable
  at /unique_contracts/0x1b75b90e60070d37cfa9d87affd124bb345bf70a.sol(53)

[31mViolation[0m for MissingInputValidation in contract 'Lockdrop':
    |     * @param      edgewareAddr   The bytes representation of the target edgeware key
    |     */
  > |    function signal(address contractAddr, uint32 nonce, bytes calldata edgewareAddr)
    |        external
    |        didStart
  at /unique_contracts/0x1b75b90e60070d37cfa9d87affd124bb345bf70a.sol(75)

[31mViolation[0m for MissingInputValidation in contract 'Lockdrop':
    |     * @param      _nonce   The transaction nonce from which to generate a contract address
    |     */
  > |    function addressFrom(address _origin, uint32 _nonce) public pure returns (address) {
    |        if(_nonce == 0x00)     return address(uint160(uint256(keccak256(abi.encodePacked(byte(0xd6), byte(0x94), _origin, byte(0x80))))));
    |        if(_nonce <= 0x7f)     return address(uint160(uint256(keccak256(abi.encodePacked(byte(0xd6), byte(0x94), _origin, uint8(_nonce))))));
  at /unique_contracts/0x1b75b90e60070d37cfa9d87affd124bb345bf70a.sol(113)