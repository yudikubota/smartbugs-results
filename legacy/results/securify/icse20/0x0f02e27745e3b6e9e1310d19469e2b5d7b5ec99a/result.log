Processing contract: /unique_contracts/0x0f02e27745e3b6e9e1310d19469e2b5d7b5ec99a.sol:ERC20
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0x0f02e27745e3b6e9e1310d19469e2b5d7b5ec99a.sol:IERC20
Processing contract: /unique_contracts/0x0f02e27745e3b6e9e1310d19469e2b5d7b5ec99a.sol:Peculium
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0x0f02e27745e3b6e9e1310d19469e2b5d7b5ec99a.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for LockedEther in contract 'Peculium':
    |// File: contracts/Peculium.sol
    |
  > |contract Peculium is ERC20 {
    |  string public constant name = "Peculium";
    |  string public constant symbol = "PCL";
  at /unique_contracts/0x0f02e27745e3b6e9e1310d19469e2b5d7b5ec99a.sol(280)

[33mWarning[0m for UnrestrictedWrite in contract 'Peculium':
    |        require(account != address(0));
    |
  > |        _totalSupply = _totalSupply.sub(value);
    |        _balances[account] = _balances[account].sub(value);
    |        emit Transfer(account, address(0), value);
  at /unique_contracts/0x0f02e27745e3b6e9e1310d19469e2b5d7b5ec99a.sol(258)