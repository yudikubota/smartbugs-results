Processing contract: /unique_chucks/45/0x5faa6eb66ed24b9c331634b0b12d28575b8fabd9.sol:ApproveAndCallFallBack
Processing contract: /unique_chucks/45/0x5faa6eb66ed24b9c331634b0b12d28575b8fabd9.sol:ERC20
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/45/0x5faa6eb66ed24b9c331634b0b12d28575b8fabd9.sol:ETAOToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/45/0x5faa6eb66ed24b9c331634b0b12d28575b8fabd9.sol:IERC20
Processing contract: /unique_chucks/45/0x5faa6eb66ed24b9c331634b0b12d28575b8fabd9.sol:Ownable
Processing contract: /unique_chucks/45/0x5faa6eb66ed24b9c331634b0b12d28575b8fabd9.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for LockedEther in contract 'ETAOToken':
    | * @author https://grox.solutions
    | */
  > |contract ETAOToken is ERC20, Ownable {
    |
    |    // name of the token
  at /unique_chucks/45/0x5faa6eb66ed24b9c331634b0b12d28575b8fabd9.sol(210)

[33mWarning[0m for UnrestrictedWrite in contract 'ETAOToken':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipTransferred(_owner, address(0));
  > |        _owner = address(0);
    |    }
    |
  at /unique_chucks/45/0x5faa6eb66ed24b9c331634b0b12d28575b8fabd9.sol(74)

[33mWarning[0m for UnrestrictedWrite in contract 'ETAOToken':
    |        require(newOwner != address(0), "Ownable: new owner is the zero address");
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_chucks/45/0x5faa6eb66ed24b9c331634b0b12d28575b8fabd9.sol(92)

[33mWarning[0m for UnrestrictedWrite in contract 'ETAOToken':
    |        require(account != address(0));
    |
  > |        _totalSupply = _totalSupply.sub(value);
    |        _balances[account] = _balances[account].sub(value);
    |        emit Transfer(account, address(0), value);
  at /unique_chucks/45/0x5faa6eb66ed24b9c331634b0b12d28575b8fabd9.sol(183)