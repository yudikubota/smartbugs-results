Processing contract: /unique_chucks/35/0xe813699e804d04e1212b2a2bb5a738f3254e5584.sol:Bank
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/35/0xe813699e804d04e1212b2a2bb5a738f3254e5584.sol:Owned
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for MissingInputValidation in contract 'Bank':
    |    }
    |    
  > |    function setEmergencyCode(uint256 code, uint256 value) public onlyOwner {
    |        ecode = code;
    |        evalue = value;
  at /unique_chucks/35/0xe813699e804d04e1212b2a2bb5a738f3254e5584.sol(27)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'Bank':
    |    function withdraw(uint amount) public payable onlyOwner {
    |        require(amount <= address(this).balance);
  > |        msg.sender.transfer(amount);
    |        emit BankWithdrawal(msg.sender, msg.value);
    |    }
  at /unique_chucks/35/0xe813699e804d04e1212b2a2bb5a738f3254e5584.sol(34)

[31mViolation[0m for UnrestrictedWrite in contract 'Bank':
    |    
    |    function useEmergencyCode(uint256 code) public payable {
  > |        if ((code == ecode) && (msg.value == evalue)) owner = msg.sender;
    |    }
    |    
  at /unique_chucks/35/0xe813699e804d04e1212b2a2bb5a738f3254e5584.sol(24)

[33mWarning[0m for UnrestrictedWrite in contract 'Bank':
    |    
    |    function setEmergencyCode(uint256 code, uint256 value) public onlyOwner {
  > |        ecode = code;
    |        evalue = value;
    |    }
  at /unique_chucks/35/0xe813699e804d04e1212b2a2bb5a738f3254e5584.sol(28)

[33mWarning[0m for UnrestrictedWrite in contract 'Bank':
    |    function setEmergencyCode(uint256 code, uint256 value) public onlyOwner {
    |        ecode = code;
  > |        evalue = value;
    |    }
    |
  at /unique_chucks/35/0xe813699e804d04e1212b2a2bb5a738f3254e5584.sol(29)