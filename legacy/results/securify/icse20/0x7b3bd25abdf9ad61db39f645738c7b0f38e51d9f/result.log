Processing contract: /unique_chucks/15/0x7b3bd25abdf9ad61db39f645738c7b0f38e51d9f.sol:SOContract
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/15/0x7b3bd25abdf9ad61db39f645738c7b0f38e51d9f.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/15/0x7b3bd25abdf9ad61db39f645738c7b0f38e51d9f.sol:tokenRecipient
[31mViolation[0m for LockedEther in contract 'SOContract':
    |}
    |
  > |contract SOContract {
    |    // Public variables of the token
    |    string public name;
  at /unique_chucks/15/0x7b3bd25abdf9ad61db39f645738c7b0f38e51d9f.sol(57)

[31mViolation[0m for UnrestrictedWrite in contract 'SOContract':
    |        balanceOf[_from] -= _value;
    |        // Add the same to the recipient
  > |        balanceOf[_to] += _value;
    |        emit Transfer(_from, _to, _value);
    |        // Asserts are used to use static analysis to find bugs in your code. They should never fail
  at /unique_chucks/15/0x7b3bd25abdf9ad61db39f645738c7b0f38e51d9f.sol(104)