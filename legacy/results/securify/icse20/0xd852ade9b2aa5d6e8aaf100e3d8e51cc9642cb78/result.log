Processing contract: /unique_chucks/32/0xd852ade9b2aa5d6e8aaf100e3d8e51cc9642cb78.sol:Ownable
Processing contract: /unique_chucks/32/0xd852ade9b2aa5d6e8aaf100e3d8e51cc9642cb78.sol:ProvenanceDocuments
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/32/0xd852ade9b2aa5d6e8aaf100e3d8e51cc9642cb78.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/32/0xd852ade9b2aa5d6e8aaf100e3d8e51cc9642cb78.sol:SuperOwner
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[33mWarning[0m for LockedEther in contract 'ProvenanceDocuments':
    |}
    |
  > |contract ProvenanceDocuments is Ownable, SuperOwner{
    |    using SafeMath for uint256;
    |
  at /unique_chucks/32/0xd852ade9b2aa5d6e8aaf100e3d8e51cc9642cb78.sol(154)

[33mWarning[0m for TODAmount in contract 'ProvenanceDocuments':
    |            bool executed,
    |            bytes memory responseData
  > |        ) = destination.call.value(value)(data);
    |        if (executed) {
    |            emit Execution(destination,value,responseData);
  at /unique_chucks/32/0xd852ade9b2aa5d6e8aaf100e3d8e51cc9642cb78.sol(145)

[33mWarning[0m for TODReceiver in contract 'ProvenanceDocuments':
    |            bool executed,
    |            bytes memory responseData
  > |        ) = destination.call.value(value)(data);
    |        if (executed) {
    |            emit Execution(destination,value,responseData);
  at /unique_chucks/32/0xd852ade9b2aa5d6e8aaf100e3d8e51cc9642cb78.sol(145)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'ProvenanceDocuments':
    |            bool executed,
    |            bytes memory responseData
  > |        ) = destination.call.value(value)(data);
    |        if (executed) {
    |            emit Execution(destination,value,responseData);
  at /unique_chucks/32/0xd852ade9b2aa5d6e8aaf100e3d8e51cc9642cb78.sol(145)

[31mViolation[0m for UnrestrictedWrite in contract 'ProvenanceDocuments':
    |}
    |
  > |contract ProvenanceDocuments is Ownable, SuperOwner{
    |    using SafeMath for uint256;
    |
  at /unique_chucks/32/0xd852ade9b2aa5d6e8aaf100e3d8e51cc9642cb78.sol(154)

[31mViolation[0m for UnrestrictedWrite in contract 'ProvenanceDocuments':
    |    function addType(string memory name) public onlyOwner onlyNonexistentTypeName(name){
    |        bytes32 hash_ = keccak256(abi.encodePacked(name));
  > |        document_types_[hash_] = Type(name, 0, true);
    |        document_types_count_ = document_types_count_.add(1);
    |        emit TypeAdded(name, hash_);
  at /unique_chucks/32/0xd852ade9b2aa5d6e8aaf100e3d8e51cc9642cb78.sol(284)

[31mViolation[0m for UnrestrictedWrite in contract 'ProvenanceDocuments':
    |        bytes32 hash_ = keccak256(abi.encodePacked(name));
    |        document_types_[hash_] = Type(name, 0, true);
  > |        document_types_count_ = document_types_count_.add(1);
    |        emit TypeAdded(name, hash_);
    |    }
  at /unique_chucks/32/0xd852ade9b2aa5d6e8aaf100e3d8e51cc9642cb78.sol(285)

[31mViolation[0m for UnrestrictedWrite in contract 'ProvenanceDocuments':
    |        uint256 versions = document_types_[hash_].versionsCount;
    |        string memory name = document_types_[hash_].name;
  > |        document_types_[hash_] = Type("", 0, false);
    |        document_types_count_ = document_types_count_.sub(1);
    |        emit TypeRemoved(name, hash_, versions);
  at /unique_chucks/32/0xd852ade9b2aa5d6e8aaf100e3d8e51cc9642cb78.sol(292)

[31mViolation[0m for UnrestrictedWrite in contract 'ProvenanceDocuments':
    |    function addDocument(bytes32 type_, string memory name, bytes32 hash_) public onlyOwner onlyExistentType(type_){
    |        uint256 versionNumber = document_types_[type_].versionsCount;
  > |        document_types_[type_].versions[versionNumber] = Document(
    |            name,
    |            hash_,
  at /unique_chucks/32/0xd852ade9b2aa5d6e8aaf100e3d8e51cc9642cb78.sol(299)

[31mViolation[0m for UnrestrictedWrite in contract 'ProvenanceDocuments':
    |            true
    |        );
  > |        document_types_[type_].versionsCount = versionNumber.add(1);
    |        emit DocumentAdded(
    |            name,
  at /unique_chucks/32/0xd852ade9b2aa5d6e8aaf100e3d8e51cc9642cb78.sol(305)

[33mWarning[0m for UnrestrictedWrite in contract 'ProvenanceDocuments':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipTransferred(_owner, address(0));
  > |        _owner = address(0);
    |    }
    |
  at /unique_chucks/32/0xd852ade9b2aa5d6e8aaf100e3d8e51cc9642cb78.sol(107)

[33mWarning[0m for UnrestrictedWrite in contract 'ProvenanceDocuments':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_chucks/32/0xd852ade9b2aa5d6e8aaf100e3d8e51cc9642cb78.sol(125)

[33mWarning[0m for UnrestrictedWrite in contract 'ProvenanceDocuments':
    |}
    |
  > |contract ProvenanceDocuments is Ownable, SuperOwner{
    |    using SafeMath for uint256;
    |
  at /unique_chucks/32/0xd852ade9b2aa5d6e8aaf100e3d8e51cc9642cb78.sol(154)

[33mWarning[0m for UnrestrictedWrite in contract 'ProvenanceDocuments':
    |        string memory name = document_types_[hash_].name;
    |        document_types_[hash_] = Type("", 0, false);
  > |        document_types_count_ = document_types_count_.sub(1);
    |        emit TypeRemoved(name, hash_, versions);
    |    }
  at /unique_chucks/32/0xd852ade9b2aa5d6e8aaf100e3d8e51cc9642cb78.sol(293)

[33mWarning[0m for MissingInputValidation in contract 'SuperOwner':
    |    * in behalf of the contract
    |    */
  > |    function executeTransaction(
    |        address payable destination,
    |        uint value,
  at /unique_chucks/32/0xd852ade9b2aa5d6e8aaf100e3d8e51cc9642cb78.sol(137)

[33mWarning[0m for TODAmount in contract 'SuperOwner':
    |            bool executed,
    |            bytes memory responseData
  > |        ) = destination.call.value(value)(data);
    |        if (executed) {
    |            emit Execution(destination,value,responseData);
  at /unique_chucks/32/0xd852ade9b2aa5d6e8aaf100e3d8e51cc9642cb78.sol(145)

[33mWarning[0m for TODReceiver in contract 'SuperOwner':
    |            bool executed,
    |            bytes memory responseData
  > |        ) = destination.call.value(value)(data);
    |        if (executed) {
    |            emit Execution(destination,value,responseData);
  at /unique_chucks/32/0xd852ade9b2aa5d6e8aaf100e3d8e51cc9642cb78.sol(145)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'SuperOwner':
    |            bool executed,
    |            bytes memory responseData
  > |        ) = destination.call.value(value)(data);
    |        if (executed) {
    |            emit Execution(destination,value,responseData);
  at /unique_chucks/32/0xd852ade9b2aa5d6e8aaf100e3d8e51cc9642cb78.sol(145)

[31mViolation[0m for UnrestrictedWrite in contract 'SuperOwner':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_chucks/32/0xd852ade9b2aa5d6e8aaf100e3d8e51cc9642cb78.sol(125)

[33mWarning[0m for UnrestrictedWrite in contract 'SuperOwner':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipTransferred(_owner, address(0));
  > |        _owner = address(0);
    |    }
    |
  at /unique_chucks/32/0xd852ade9b2aa5d6e8aaf100e3d8e51cc9642cb78.sol(107)

[33mWarning[0m for UnrestrictedWrite in contract 'SuperOwner':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_chucks/32/0xd852ade9b2aa5d6e8aaf100e3d8e51cc9642cb78.sol(125)