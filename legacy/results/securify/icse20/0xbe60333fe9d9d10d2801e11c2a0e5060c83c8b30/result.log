Processing contract: /unique_contracts/0xbe60333fe9d9d10d2801e11c2a0e5060c83c8b30.sol:Address
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0xbe60333fe9d9d10d2801e11c2a0e5060c83c8b30.sol:DJTBase
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0xbe60333fe9d9d10d2801e11c2a0e5060c83c8b30.sol:ERC165
Processing contract: /unique_contracts/0xbe60333fe9d9d10d2801e11c2a0e5060c83c8b30.sol:ERC721
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0xbe60333fe9d9d10d2801e11c2a0e5060c83c8b30.sol:ERC721Enumerable
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0xbe60333fe9d9d10d2801e11c2a0e5060c83c8b30.sol:ERC721Full
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0xbe60333fe9d9d10d2801e11c2a0e5060c83c8b30.sol:ERC721Metadata
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0xbe60333fe9d9d10d2801e11c2a0e5060c83c8b30.sol:ERC721Mintable
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0xbe60333fe9d9d10d2801e11c2a0e5060c83c8b30.sol:ERC721Pausable
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0xbe60333fe9d9d10d2801e11c2a0e5060c83c8b30.sol:ExtensionAsset
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0xbe60333fe9d9d10d2801e11c2a0e5060c83c8b30.sol:ExtensionGatewayV2
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0xbe60333fe9d9d10d2801e11c2a0e5060c83c8b30.sol:IERC165
Processing contract: /unique_contracts/0xbe60333fe9d9d10d2801e11c2a0e5060c83c8b30.sol:IERC20
Processing contract: /unique_contracts/0xbe60333fe9d9d10d2801e11c2a0e5060c83c8b30.sol:IERC721
Processing contract: /unique_contracts/0xbe60333fe9d9d10d2801e11c2a0e5060c83c8b30.sol:IERC721Enumerable
Processing contract: /unique_contracts/0xbe60333fe9d9d10d2801e11c2a0e5060c83c8b30.sol:IERC721Metadata
Processing contract: /unique_contracts/0xbe60333fe9d9d10d2801e11c2a0e5060c83c8b30.sol:IERC721Receiver
Processing contract: /unique_contracts/0xbe60333fe9d9d10d2801e11c2a0e5060c83c8b30.sol:MinterRole
Processing contract: /unique_contracts/0xbe60333fe9d9d10d2801e11c2a0e5060c83c8b30.sol:OperatorRole
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0xbe60333fe9d9d10d2801e11c2a0e5060c83c8b30.sol:Ownable
Processing contract: /unique_contracts/0xbe60333fe9d9d10d2801e11c2a0e5060c83c8b30.sol:Pausable
Processing contract: /unique_contracts/0xbe60333fe9d9d10d2801e11c2a0e5060c83c8b30.sol:PauserRole
Processing contract: /unique_contracts/0xbe60333fe9d9d10d2801e11c2a0e5060c83c8b30.sol:ReentrancyGuard
Processing contract: /unique_contracts/0xbe60333fe9d9d10d2801e11c2a0e5060c83c8b30.sol:Roles
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0xbe60333fe9d9d10d2801e11c2a0e5060c83c8b30.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0xbe60333fe9d9d10d2801e11c2a0e5060c83c8b30.sol:Withdrawable
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for TODAmount in contract 'DJTBase':
    |contract Withdrawable is Ownable {
    |  function withdrawEther() external onlyOwner {
  > |    msg.sender.transfer(address(this).balance);
    |  }
    |
  at /unique_contracts/0xbe60333fe9d9d10d2801e11c2a0e5060c83c8b30.sol(1234)

[33mWarning[0m for UnrestrictedWrite in contract 'DJTBase':
    |     */
    |    function pause() public onlyPauser whenNotPaused {
  > |        _paused = true;
    |        emit Paused(msg.sender);
    |    }
  at /unique_contracts/0xbe60333fe9d9d10d2801e11c2a0e5060c83c8b30.sol(674)

[33mWarning[0m for UnrestrictedWrite in contract 'DJTBase':
    |     */
    |    function unpause() public onlyPauser whenPaused {
  > |        _paused = false;
    |        emit Unpaused(msg.sender);
    |    }
  at /unique_contracts/0xbe60333fe9d9d10d2801e11c2a0e5060c83c8b30.sol(682)

[33mWarning[0m for UnrestrictedWrite in contract 'DJTBase':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipTransferred(_owner, address(0));
  > |        _owner = address(0);
    |    }
    |
  at /unique_contracts/0xbe60333fe9d9d10d2801e11c2a0e5060c83c8b30.sol(1149)

[33mWarning[0m for UnrestrictedWrite in contract 'DJTBase':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_contracts/0xbe60333fe9d9d10d2801e11c2a0e5060c83c8b30.sol(1167)

[33mWarning[0m for UnrestrictedWrite in contract 'ERC721Enumerable':
    | * @dev See https://github.com/ethereum/EIPs/blob/master/EIPS/eip-721.md
    | */
  > |contract ERC721Enumerable is ERC165, ERC721, IERC721Enumerable {
    |    // Mapping from owner to list of owned token IDs
    |    mapping(address => uint256[]) private _ownedTokens;
  at /unique_contracts/0xbe60333fe9d9d10d2801e11c2a0e5060c83c8b30.sol(726)

[31mViolation[0m for LockedEther in contract 'ERC721Full':
    | * @dev see https://github.com/ethereum/EIPs/blob/master/EIPS/eip-721.md
    | */
  > |contract ERC721Full is ERC721, ERC721Enumerable, ERC721Metadata {
    |    constructor (string memory name, string memory symbol) public ERC721Metadata(name, symbol) {
    |        // solhint-disable-previous-line no-empty-blocks
  at /unique_contracts/0xbe60333fe9d9d10d2801e11c2a0e5060c83c8b30.sol(1020)

[33mWarning[0m for UnrestrictedWrite in contract 'ERC721Full':
    | * @dev see https://github.com/ethereum/EIPs/blob/master/EIPS/eip-721.md
    | */
  > |contract ERC721Full is ERC721, ERC721Enumerable, ERC721Metadata {
    |    constructor (string memory name, string memory symbol) public ERC721Metadata(name, symbol) {
    |        // solhint-disable-previous-line no-empty-blocks
  at /unique_contracts/0xbe60333fe9d9d10d2801e11c2a0e5060c83c8b30.sol(1020)

[31mViolation[0m for LockedEther in contract 'ERC721Metadata':
    |// File: contracts/lib/github.com/OpenZeppelin/openzeppelin-solidity-2.1.2/contracts/token/ERC721/ERC721Metadata.sol
    |
  > |contract ERC721Metadata is ERC165, ERC721, IERC721Metadata {
    |    // Token name
    |    string private _name;
  at /unique_contracts/0xbe60333fe9d9d10d2801e11c2a0e5060c83c8b30.sol(929)

[31mViolation[0m for LockedEther in contract 'ExtensionAsset':
    |// File: contracts/ExtensionAsset.sol
    |
  > |contract ExtensionAsset is ERC721Full, ERC721Mintable, ERC721Pausable {
    |
    |    uint16 public constant EXTENSION_TYPE_OFFSET = 10000;
  at /unique_contracts/0xbe60333fe9d9d10d2801e11c2a0e5060c83c8b30.sol(1028)

[33mWarning[0m for UnrestrictedWrite in contract 'ExtensionAsset':
    |// File: contracts/ExtensionAsset.sol
    |
  > |contract ExtensionAsset is ERC721Full, ERC721Mintable, ERC721Pausable {
    |
    |    uint16 public constant EXTENSION_TYPE_OFFSET = 10000;
  at /unique_contracts/0xbe60333fe9d9d10d2801e11c2a0e5060c83c8b30.sol(1028)

[31mViolation[0m for RepeatedCall in contract 'ExtensionGatewayV2':
    |
    |    for (uint256 i=balance; i > 0; i--) {
  > |      uint256 tokenId = extensionAsset.tokenOfOwnerByIndex(address(this), i-1);
    |      _transferExtensionAsset(address(this), _newAddress, tokenId);
    |    }
  at /unique_contracts/0xbe60333fe9d9d10d2801e11c2a0e5060c83c8b30.sol(1309)

[31mViolation[0m for RepeatedCall in contract 'ExtensionGatewayV2':
    |  
    |  function _transferExtensionAsset(address _from, address _to, uint256 _tokenId) private {
  > |    extensionAsset.safeTransferFrom(
    |      _from,
    |      _to,
  at /unique_contracts/0xbe60333fe9d9d10d2801e11c2a0e5060c83c8b30.sol(1359)

[31mViolation[0m for TODAmount in contract 'ExtensionGatewayV2':
    |contract Withdrawable is Ownable {
    |  function withdrawEther() external onlyOwner {
  > |    msg.sender.transfer(address(this).balance);
    |  }
    |
  at /unique_contracts/0xbe60333fe9d9d10d2801e11c2a0e5060c83c8b30.sol(1234)

[33mWarning[0m for UnrestrictedWrite in contract 'OperatorRole':
    |        require(!has(role, account));
    |
  > |        role.bearer[account] = true;
    |    }
    |
  at /unique_contracts/0xbe60333fe9d9d10d2801e11c2a0e5060c83c8b30.sol(505)

[33mWarning[0m for UnrestrictedWrite in contract 'OperatorRole':
    |        require(has(role, account));
    |
  > |        role.bearer[account] = false;
    |    }
    |
  at /unique_contracts/0xbe60333fe9d9d10d2801e11c2a0e5060c83c8b30.sol(515)

[33mWarning[0m for UnrestrictedWrite in contract 'OperatorRole':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipTransferred(_owner, address(0));
  > |        _owner = address(0);
    |    }
    |
  at /unique_contracts/0xbe60333fe9d9d10d2801e11c2a0e5060c83c8b30.sol(1149)

[33mWarning[0m for UnrestrictedWrite in contract 'OperatorRole':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_contracts/0xbe60333fe9d9d10d2801e11c2a0e5060c83c8b30.sol(1167)

[31mViolation[0m for TODAmount in contract 'Withdrawable':
    |contract Withdrawable is Ownable {
    |  function withdrawEther() external onlyOwner {
  > |    msg.sender.transfer(address(this).balance);
    |  }
    |
  at /unique_contracts/0xbe60333fe9d9d10d2801e11c2a0e5060c83c8b30.sol(1234)

[31mViolation[0m for UnrestrictedWrite in contract 'Withdrawable':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_contracts/0xbe60333fe9d9d10d2801e11c2a0e5060c83c8b30.sol(1167)

[33mWarning[0m for UnrestrictedWrite in contract 'Withdrawable':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipTransferred(_owner, address(0));
  > |        _owner = address(0);
    |    }
    |
  at /unique_contracts/0xbe60333fe9d9d10d2801e11c2a0e5060c83c8b30.sol(1149)

[33mWarning[0m for UnrestrictedWrite in contract 'Withdrawable':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_contracts/0xbe60333fe9d9d10d2801e11c2a0e5060c83c8b30.sol(1167)