Processing contract: /unique_chucks/30/0x9828280f1decd9a622f2e6d4bd0915384aaa79ea.sol:ERC20
Processing contract: /unique_chucks/30/0x9828280f1decd9a622f2e6d4bd0915384aaa79ea.sol:Lock
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/30/0x9828280f1decd9a622f2e6d4bd0915384aaa79ea.sol:Ownable
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[33mWarning[0m for UnhandledException in contract 'Lock':
    |    
    |    function call(address payable _to, uint256 _value, bytes calldata _data) external onlyOwner onUnlocked returns (bool, bytes memory) {
  > |        return _to.call.value(_value)(_data);
    |    }
    |}
  at /unique_chucks/30/0x9828280f1decd9a622f2e6d4bd0915384aaa79ea.sol(57)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'Lock':
    |    
    |    function call(address payable _to, uint256 _value, bytes calldata _data) external onlyOwner onUnlocked returns (bool, bytes memory) {
  > |        return _to.call.value(_value)(_data);
    |    }
    |}
  at /unique_chucks/30/0x9828280f1decd9a622f2e6d4bd0915384aaa79ea.sol(57)

[33mWarning[0m for UnrestrictedWrite in contract 'Lock':
    |    function setOwner(address _owner) external onlyOwner {
    |        emit SetOwner(owner, _owner);
  > |        owner = _owner;
    |    }
    |}
  at /unique_chucks/30/0x9828280f1decd9a622f2e6d4bd0915384aaa79ea.sol(24)

[33mWarning[0m for UnrestrictedWrite in contract 'Lock':
    |        require(_lock - lock <= MAX_LOCK_JUMP, "Max lock jump exceeded");
    |        emit SetLock(lock, _lock);
  > |        lock = _lock;
    |    }
    |
  at /unique_chucks/30/0x9828280f1decd9a622f2e6d4bd0915384aaa79ea.sol(49)

[31mViolation[0m for MissingInputValidation in contract 'Ownable':
    |    }
    |    
  > |    function setOwner(address _owner) external onlyOwner {
    |        emit SetOwner(owner, _owner);
    |        owner = _owner;
  at /unique_chucks/30/0x9828280f1decd9a622f2e6d4bd0915384aaa79ea.sol(22)

[33mWarning[0m for UnrestrictedWrite in contract 'Ownable':
    |    function setOwner(address _owner) external onlyOwner {
    |        emit SetOwner(owner, _owner);
  > |        owner = _owner;
    |    }
    |}
  at /unique_chucks/30/0x9828280f1decd9a622f2e6d4bd0915384aaa79ea.sol(24)