Processing contract: /unique_chucks/2/0x687e3235baf994dabf9304394899e569b077bcb8.sol:TokenERC20
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for LockedEther in contract 'TokenERC20':
    |
    |
  > |contract TokenERC20 {
    |
    |    string public name;
  at /unique_chucks/2/0x687e3235baf994dabf9304394899e569b077bcb8.sol(4)

[31mViolation[0m for UnrestrictedWrite in contract 'TokenERC20':
    |        balanceOf[_from] -= _value;
    |
  > |        balanceOf[_to] += _value;
    |
    |        assert(balanceOf[_from] + balanceOf[_to] == previousBalances);
  at /unique_chucks/2/0x687e3235baf994dabf9304394899e569b077bcb8.sol(46)

[31mViolation[0m for UnrestrictedWrite in contract 'TokenERC20':
    |        balanceOf[msg.sender] -= _value;
    |
  > |        totalSupply -= _value;
    |
    |        emit Burn(msg.sender, _value);
  at /unique_chucks/2/0x687e3235baf994dabf9304394899e569b077bcb8.sol(91)

[31mViolation[0m for UnrestrictedWrite in contract 'TokenERC20':
    |        require(_value <= allowance[_from][msg.sender]);
    |
  > |        balanceOf[_from] -= _value;
    |
    |        allowance[_from][msg.sender] -= _value;
  at /unique_chucks/2/0x687e3235baf994dabf9304394899e569b077bcb8.sol(105)

[31mViolation[0m for UnrestrictedWrite in contract 'TokenERC20':
    |        allowance[_from][msg.sender] -= _value;
    |
  > |        totalSupply -= _value;
    |
    |        emit Burn(_from, _value);
  at /unique_chucks/2/0x687e3235baf994dabf9304394899e569b077bcb8.sol(109)