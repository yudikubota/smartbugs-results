Processing contract: /unique_chucks/7/0xbac2c4f8804d44fb90dbf3324784044d4ce1c6bb.sol:Game365MetaDiff
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for UnrestrictedWrite in contract 'Game365MetaDiff':
    |
    |        // Move bet into 'processed' state, release funds.
  > |        bet.amount = 0;
    |        
    |        uint gameWinAmount;
  at /unique_chucks/7/0xbac2c4f8804d44fb90dbf3324784044d4ce1c6bb.sol(341)

[33mWarning[0m for UnrestrictedWrite in contract 'Game365MetaDiff':
    |    // See comment for "secretSigner" variable.
    |    function setSecretSigner(address newSecretSigner) external onlyOwner {
  > |        secretSigner = newSecretSigner;
    |    }
    |
  at /unique_chucks/7/0xbac2c4f8804d44fb90dbf3324784044d4ce1c6bb.sol(116)

[33mWarning[0m for UnrestrictedWrite in contract 'Game365MetaDiff':
    |    // Change the croupier address.
    |    function setCroupier(address newCroupier) external onlyOwner {
  > |        croupier = newCroupier;
    |    }
    |
  at /unique_chucks/7/0xbac2c4f8804d44fb90dbf3324784044d4ce1c6bb.sol(121)

[33mWarning[0m for UnrestrictedWrite in contract 'Game365MetaDiff':
    |    function setMaxProfit(uint _maxProfit) public onlyOwner {
    |        require (_maxProfit < MAX_AMOUNT, "maxProfit should be a sane number.");
  > |        maxProfit = _maxProfit;
    |    }
    |
  at /unique_chucks/7/0xbac2c4f8804d44fb90dbf3324784044d4ce1c6bb.sol(126)

[33mWarning[0m for UnrestrictedWrite in contract 'Game365MetaDiff':
    |
    |    function setMinJackPotWinAmount(uint _minJackpotAmount) public onlyOwner {
  > |        minJackpotWinAmount = _minJackpotAmount;
    |    }
    |
  at /unique_chucks/7/0xbac2c4f8804d44fb90dbf3324784044d4ce1c6bb.sol(130)

[33mWarning[0m for UnrestrictedWrite in contract 'Game365MetaDiff':
    |        require (increaseAmount <= address(this).balance, "Increase amount larger than balance.");
    |        require (lockedInJackpot_ + lockedInBets_ + increaseAmount <= address(this).balance, "Not enough funds.");
  > |        lockedInJackpot_ += uint128(increaseAmount);
    |    }
    |
  at /unique_chucks/7/0xbac2c4f8804d44fb90dbf3324784044d4ce1c6bb.sol(137)