Processing contract: /unique_chucks/26/0x1293d462d08855a17d9649dd0767a0df936e27d4.sol:AddMinterMultisig
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/26/0x1293d462d08855a17d9649dd0767a0df936e27d4.sol:BasicMultisig
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/26/0x1293d462d08855a17d9649dd0767a0df936e27d4.sol:BasicToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/26/0x1293d462d08855a17d9649dd0767a0df936e27d4.sol:BurnableToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/26/0x1293d462d08855a17d9649dd0767a0df936e27d4.sol:DeleteMinterMultisig
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/26/0x1293d462d08855a17d9649dd0767a0df936e27d4.sol:ERC20
Processing contract: /unique_chucks/26/0x1293d462d08855a17d9649dd0767a0df936e27d4.sol:ERC20Basic
Processing contract: /unique_chucks/26/0x1293d462d08855a17d9649dd0767a0df936e27d4.sol:ERC223Mixin
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/26/0x1293d462d08855a17d9649dd0767a0df936e27d4.sol:ERC223ReceiverMixin
Processing contract: /unique_chucks/26/0x1293d462d08855a17d9649dd0767a0df936e27d4.sol:FinishMintingMultisig
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/26/0x1293d462d08855a17d9649dd0767a0df936e27d4.sol:MintMultisig
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/26/0x1293d462d08855a17d9649dd0767a0df936e27d4.sol:Multisig
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/26/0x1293d462d08855a17d9649dd0767a0df936e27d4.sol:RBACMintableTokenMixin
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/26/0x1293d462d08855a17d9649dd0767a0df936e27d4.sol:RBACMixin
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/26/0x1293d462d08855a17d9649dd0767a0df936e27d4.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/26/0x1293d462d08855a17d9649dd0767a0df936e27d4.sol:SetOwnerMultisig
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/26/0x1293d462d08855a17d9649dd0767a0df936e27d4.sol:StandardBurnableToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/26/0x1293d462d08855a17d9649dd0767a0df936e27d4.sol:StandardToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/26/0x1293d462d08855a17d9649dd0767a0df936e27d4.sol:VinciToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[33mWarning[0m for UnrestrictedWrite in contract 'AddMinterMultisig':
    |  // common method
    |  modifier createsNewOperation() {
  > |    operation++;
    |    if (isOwner(msg.sender)) {
    |      ownersConfirmations[operation] = 1;
  at /unique_chucks/26/0x1293d462d08855a17d9649dd0767a0df936e27d4.sol(650)

[33mWarning[0m for UnrestrictedWrite in contract 'AddMinterMultisig':
    |    operation++;
    |    if (isOwner(msg.sender)) {
  > |      ownersConfirmations[operation] = 1;
    |      adminsConfirmations[operation] = 0;
    |      ownersSigns[operation][msg.sender] = true;
  at /unique_chucks/26/0x1293d462d08855a17d9649dd0767a0df936e27d4.sol(652)

[33mWarning[0m for UnrestrictedWrite in contract 'AddMinterMultisig':
    |    if (isOwner(msg.sender)) {
    |      ownersConfirmations[operation] = 1;
  > |      adminsConfirmations[operation] = 0;
    |      ownersSigns[operation][msg.sender] = true;
    |    } else {
  at /unique_chucks/26/0x1293d462d08855a17d9649dd0767a0df936e27d4.sol(653)

[33mWarning[0m for UnrestrictedWrite in contract 'AddMinterMultisig':
    |    } else {
    |      if (isAdmin(msg.sender)) {
  > |        ownersConfirmations[operation] = 0;
    |        adminsConfirmations[operation] = 1;
    |        adminsSigns[operation][msg.sender] = true;
  at /unique_chucks/26/0x1293d462d08855a17d9649dd0767a0df936e27d4.sol(657)

[33mWarning[0m for UnrestrictedWrite in contract 'AddMinterMultisig':
    |      if (isAdmin(msg.sender)) {
    |        ownersConfirmations[operation] = 0;
  > |        adminsConfirmations[operation] = 1;
    |        adminsSigns[operation][msg.sender] = true;
    |      }
  at /unique_chucks/26/0x1293d462d08855a17d9649dd0767a0df936e27d4.sol(658)

[33mWarning[0m for UnrestrictedWrite in contract 'AddMinterMultisig':
    |    if (isOwner(msg.sender)) {
    |      if (ownersSigns[_operation][msg.sender]) revert();
  > |      ownersConfirmations[_operation] += 1;
    |    } else {
    |      if (isAdmin(msg.sender)) {
  at /unique_chucks/26/0x1293d462d08855a17d9649dd0767a0df936e27d4.sol(668)

[33mWarning[0m for UnrestrictedWrite in contract 'AddMinterMultisig':
    |      if (isAdmin(msg.sender)) {
    |        if (adminsSigns[_operation][msg.sender]) revert();
  > |        adminsConfirmations[_operation] += 1;
    |      }
    |    }
  at /unique_chucks/26/0x1293d462d08855a17d9649dd0767a0df936e27d4.sol(672)

[33mWarning[0m for UnrestrictedWrite in contract 'AddMinterMultisig':
    |                                  returns (uint) {
    |
  > |    addMinterOperations[operation] = AddMinterParams(who);
    |
    |    emit addMinterAction(operation, who);
  at /unique_chucks/26/0x1293d462d08855a17d9649dd0767a0df936e27d4.sol(777)

[33mWarning[0m for UnrestrictedWrite in contract 'AddMinterMultisig':
    |    if (enoughConfirmations(_operation)){
    |      vinci_contract.addMinter(addMinterOperations[_operation].who);
  > |      executed[_operation] = true;
    |    }
    |
  at /unique_chucks/26/0x1293d462d08855a17d9649dd0767a0df936e27d4.sol(790)

[33mWarning[0m for UnrestrictedWrite in contract 'BasicToken':
    |
    |    balances[msg.sender] = balances[msg.sender].sub(_value);
  > |    balances[_to] = balances[_to].add(_value);
    |    emit Transfer(msg.sender, _to, _value);
    |    return true;
  at /unique_chucks/26/0x1293d462d08855a17d9649dd0767a0df936e27d4.sol(93)

[33mWarning[0m for UnrestrictedWrite in contract 'BurnableToken':
    |
    |    balances[_who] = balances[_who].sub(_value);
  > |    totalSupply_ = totalSupply_.sub(_value);
    |    emit Burn(_who, _value);
    |    emit Transfer(_who, address(0), _value);
  at /unique_chucks/26/0x1293d462d08855a17d9649dd0767a0df936e27d4.sol(542)

[33mWarning[0m for UnrestrictedWrite in contract 'DeleteMinterMultisig':
    |  // common method
    |  modifier createsNewOperation() {
  > |    operation++;
    |    if (isOwner(msg.sender)) {
    |      ownersConfirmations[operation] = 1;
  at /unique_chucks/26/0x1293d462d08855a17d9649dd0767a0df936e27d4.sol(650)

[33mWarning[0m for UnrestrictedWrite in contract 'DeleteMinterMultisig':
    |    operation++;
    |    if (isOwner(msg.sender)) {
  > |      ownersConfirmations[operation] = 1;
    |      adminsConfirmations[operation] = 0;
    |      ownersSigns[operation][msg.sender] = true;
  at /unique_chucks/26/0x1293d462d08855a17d9649dd0767a0df936e27d4.sol(652)

[33mWarning[0m for UnrestrictedWrite in contract 'DeleteMinterMultisig':
    |    if (isOwner(msg.sender)) {
    |      ownersConfirmations[operation] = 1;
  > |      adminsConfirmations[operation] = 0;
    |      ownersSigns[operation][msg.sender] = true;
    |    } else {
  at /unique_chucks/26/0x1293d462d08855a17d9649dd0767a0df936e27d4.sol(653)

[33mWarning[0m for UnrestrictedWrite in contract 'DeleteMinterMultisig':
    |    } else {
    |      if (isAdmin(msg.sender)) {
  > |        ownersConfirmations[operation] = 0;
    |        adminsConfirmations[operation] = 1;
    |        adminsSigns[operation][msg.sender] = true;
  at /unique_chucks/26/0x1293d462d08855a17d9649dd0767a0df936e27d4.sol(657)

[33mWarning[0m for UnrestrictedWrite in contract 'DeleteMinterMultisig':
    |      if (isAdmin(msg.sender)) {
    |        ownersConfirmations[operation] = 0;
  > |        adminsConfirmations[operation] = 1;
    |        adminsSigns[operation][msg.sender] = true;
    |      }
  at /unique_chucks/26/0x1293d462d08855a17d9649dd0767a0df936e27d4.sol(658)

[33mWarning[0m for UnrestrictedWrite in contract 'DeleteMinterMultisig':
    |    if (isOwner(msg.sender)) {
    |      if (ownersSigns[_operation][msg.sender]) revert();
  > |      ownersConfirmations[_operation] += 1;
    |    } else {
    |      if (isAdmin(msg.sender)) {
  at /unique_chucks/26/0x1293d462d08855a17d9649dd0767a0df936e27d4.sol(668)

[33mWarning[0m for UnrestrictedWrite in contract 'DeleteMinterMultisig':
    |      if (isAdmin(msg.sender)) {
    |        if (adminsSigns[_operation][msg.sender]) revert();
  > |        adminsConfirmations[_operation] += 1;
    |      }
    |    }
  at /unique_chucks/26/0x1293d462d08855a17d9649dd0767a0df936e27d4.sol(672)

[33mWarning[0m for UnrestrictedWrite in contract 'DeleteMinterMultisig':
    |                                    returns (uint) {
    |
  > |    deleteMinterOperations[operation] = DeleteMinterParams(who);
    |
    |    emit deleteMinterAction(operation, who);
  at /unique_chucks/26/0x1293d462d08855a17d9649dd0767a0df936e27d4.sol(738)

[33mWarning[0m for UnrestrictedWrite in contract 'DeleteMinterMultisig':
    |    if (enoughConfirmations(_operation)){
    |      vinci_contract.deleteMinter(deleteMinterOperations[_operation].who);
  > |      executed[_operation] = true;
    |    }
    |
  at /unique_chucks/26/0x1293d462d08855a17d9649dd0767a0df936e27d4.sol(750)

[31mViolation[0m for LockedEther in contract 'ERC223Mixin':
    |
    |/// @title Custom implementation of ERC223 
  > |contract ERC223Mixin is StandardToken {
    |  event Transfer(address indexed from, address indexed to, uint256 value, bytes data);
    |
  at /unique_chucks/26/0x1293d462d08855a17d9649dd0767a0df936e27d4.sol(255)

[33mWarning[0m for UnrestrictedWrite in contract 'FinishMintingMultisig':
    |  // common method
    |  modifier createsNewOperation() {
  > |    operation++;
    |    if (isOwner(msg.sender)) {
    |      ownersConfirmations[operation] = 1;
  at /unique_chucks/26/0x1293d462d08855a17d9649dd0767a0df936e27d4.sol(650)

[33mWarning[0m for UnrestrictedWrite in contract 'FinishMintingMultisig':
    |    operation++;
    |    if (isOwner(msg.sender)) {
  > |      ownersConfirmations[operation] = 1;
    |      adminsConfirmations[operation] = 0;
    |      ownersSigns[operation][msg.sender] = true;
  at /unique_chucks/26/0x1293d462d08855a17d9649dd0767a0df936e27d4.sol(652)

[33mWarning[0m for UnrestrictedWrite in contract 'FinishMintingMultisig':
    |    if (isOwner(msg.sender)) {
    |      ownersConfirmations[operation] = 1;
  > |      adminsConfirmations[operation] = 0;
    |      ownersSigns[operation][msg.sender] = true;
    |    } else {
  at /unique_chucks/26/0x1293d462d08855a17d9649dd0767a0df936e27d4.sol(653)

[33mWarning[0m for UnrestrictedWrite in contract 'FinishMintingMultisig':
    |    } else {
    |      if (isAdmin(msg.sender)) {
  > |        ownersConfirmations[operation] = 0;
    |        adminsConfirmations[operation] = 1;
    |        adminsSigns[operation][msg.sender] = true;
  at /unique_chucks/26/0x1293d462d08855a17d9649dd0767a0df936e27d4.sol(657)

[33mWarning[0m for UnrestrictedWrite in contract 'FinishMintingMultisig':
    |      if (isAdmin(msg.sender)) {
    |        ownersConfirmations[operation] = 0;
  > |        adminsConfirmations[operation] = 1;
    |        adminsSigns[operation][msg.sender] = true;
    |      }
  at /unique_chucks/26/0x1293d462d08855a17d9649dd0767a0df936e27d4.sol(658)

[33mWarning[0m for UnrestrictedWrite in contract 'FinishMintingMultisig':
    |    if (isOwner(msg.sender)) {
    |      if (ownersSigns[_operation][msg.sender]) revert();
  > |      ownersConfirmations[_operation] += 1;
    |    } else {
    |      if (isAdmin(msg.sender)) {
  at /unique_chucks/26/0x1293d462d08855a17d9649dd0767a0df936e27d4.sol(668)

[33mWarning[0m for UnrestrictedWrite in contract 'FinishMintingMultisig':
    |      if (isAdmin(msg.sender)) {
    |        if (adminsSigns[_operation][msg.sender]) revert();
  > |        adminsConfirmations[_operation] += 1;
    |      }
    |    }
  at /unique_chucks/26/0x1293d462d08855a17d9649dd0767a0df936e27d4.sol(672)

[33mWarning[0m for UnrestrictedWrite in contract 'FinishMintingMultisig':
    |    if (enoughConfirmations(_operation)){
    |      vinci_contract.finishMinting();
  > |      executed[_operation] = true;
    |    }
    |
  at /unique_chucks/26/0x1293d462d08855a17d9649dd0767a0df936e27d4.sol(865)

[33mWarning[0m for UnrestrictedWrite in contract 'MintMultisig':
    |  // common method
    |  modifier createsNewOperation() {
  > |    operation++;
    |    if (isOwner(msg.sender)) {
    |      ownersConfirmations[operation] = 1;
  at /unique_chucks/26/0x1293d462d08855a17d9649dd0767a0df936e27d4.sol(650)

[33mWarning[0m for UnrestrictedWrite in contract 'MintMultisig':
    |    operation++;
    |    if (isOwner(msg.sender)) {
  > |      ownersConfirmations[operation] = 1;
    |      adminsConfirmations[operation] = 0;
    |      ownersSigns[operation][msg.sender] = true;
  at /unique_chucks/26/0x1293d462d08855a17d9649dd0767a0df936e27d4.sol(652)

[33mWarning[0m for UnrestrictedWrite in contract 'MintMultisig':
    |    if (isOwner(msg.sender)) {
    |      ownersConfirmations[operation] = 1;
  > |      adminsConfirmations[operation] = 0;
    |      ownersSigns[operation][msg.sender] = true;
    |    } else {
  at /unique_chucks/26/0x1293d462d08855a17d9649dd0767a0df936e27d4.sol(653)

[33mWarning[0m for UnrestrictedWrite in contract 'MintMultisig':
    |    } else {
    |      if (isAdmin(msg.sender)) {
  > |        ownersConfirmations[operation] = 0;
    |        adminsConfirmations[operation] = 1;
    |        adminsSigns[operation][msg.sender] = true;
  at /unique_chucks/26/0x1293d462d08855a17d9649dd0767a0df936e27d4.sol(657)

[33mWarning[0m for UnrestrictedWrite in contract 'MintMultisig':
    |      if (isAdmin(msg.sender)) {
    |        ownersConfirmations[operation] = 0;
  > |        adminsConfirmations[operation] = 1;
    |        adminsSigns[operation][msg.sender] = true;
    |      }
  at /unique_chucks/26/0x1293d462d08855a17d9649dd0767a0df936e27d4.sol(658)

[33mWarning[0m for UnrestrictedWrite in contract 'MintMultisig':
    |    if (isOwner(msg.sender)) {
    |      if (ownersSigns[_operation][msg.sender]) revert();
  > |      ownersConfirmations[_operation] += 1;
    |    } else {
    |      if (isAdmin(msg.sender)) {
  at /unique_chucks/26/0x1293d462d08855a17d9649dd0767a0df936e27d4.sol(668)

[33mWarning[0m for UnrestrictedWrite in contract 'MintMultisig':
    |      if (isAdmin(msg.sender)) {
    |        if (adminsSigns[_operation][msg.sender]) revert();
  > |        adminsConfirmations[_operation] += 1;
    |      }
    |    }
  at /unique_chucks/26/0x1293d462d08855a17d9649dd0767a0df936e27d4.sol(672)

[33mWarning[0m for UnrestrictedWrite in contract 'MintMultisig':
    |                             returns (uint) {
    |
  > |    mintOperations[operation] = MintParams(to, amount);
    |
    |    emit mintAction(operation, to, amount);
  at /unique_chucks/26/0x1293d462d08855a17d9649dd0767a0df936e27d4.sol(820)

[33mWarning[0m for UnrestrictedWrite in contract 'MintMultisig':
    |    if (enoughConfirmations(_operation)){
    |      vinci_contract.mint(mintOperations[_operation].to, mintOperations[_operation].amount);
  > |      executed[_operation] = true;
    |    }
    |
  at /unique_chucks/26/0x1293d462d08855a17d9649dd0767a0df936e27d4.sol(832)

[33mWarning[0m for UnrestrictedWrite in contract 'Multisig':
    |  // common method
    |  modifier createsNewOperation() {
  > |    operation++;
    |    if (isOwner(msg.sender)) {
    |      ownersConfirmations[operation] = 1;
  at /unique_chucks/26/0x1293d462d08855a17d9649dd0767a0df936e27d4.sol(650)

[33mWarning[0m for UnrestrictedWrite in contract 'Multisig':
    |    operation++;
    |    if (isOwner(msg.sender)) {
  > |      ownersConfirmations[operation] = 1;
    |      adminsConfirmations[operation] = 0;
    |      ownersSigns[operation][msg.sender] = true;
  at /unique_chucks/26/0x1293d462d08855a17d9649dd0767a0df936e27d4.sol(652)

[33mWarning[0m for UnrestrictedWrite in contract 'Multisig':
    |    if (isOwner(msg.sender)) {
    |      ownersConfirmations[operation] = 1;
  > |      adminsConfirmations[operation] = 0;
    |      ownersSigns[operation][msg.sender] = true;
    |    } else {
  at /unique_chucks/26/0x1293d462d08855a17d9649dd0767a0df936e27d4.sol(653)

[33mWarning[0m for UnrestrictedWrite in contract 'Multisig':
    |    } else {
    |      if (isAdmin(msg.sender)) {
  > |        ownersConfirmations[operation] = 0;
    |        adminsConfirmations[operation] = 1;
    |        adminsSigns[operation][msg.sender] = true;
  at /unique_chucks/26/0x1293d462d08855a17d9649dd0767a0df936e27d4.sol(657)

[33mWarning[0m for UnrestrictedWrite in contract 'Multisig':
    |      if (isAdmin(msg.sender)) {
    |        ownersConfirmations[operation] = 0;
  > |        adminsConfirmations[operation] = 1;
    |        adminsSigns[operation][msg.sender] = true;
    |      }
  at /unique_chucks/26/0x1293d462d08855a17d9649dd0767a0df936e27d4.sol(658)

[33mWarning[0m for UnrestrictedWrite in contract 'Multisig':
    |    if (isOwner(msg.sender)) {
    |      if (ownersSigns[_operation][msg.sender]) revert();
  > |      ownersConfirmations[_operation] += 1;
    |    } else {
    |      if (isAdmin(msg.sender)) {
  at /unique_chucks/26/0x1293d462d08855a17d9649dd0767a0df936e27d4.sol(668)

[33mWarning[0m for UnrestrictedWrite in contract 'Multisig':
    |      if (isAdmin(msg.sender)) {
    |        if (adminsSigns[_operation][msg.sender]) revert();
  > |        adminsConfirmations[_operation] += 1;
    |      }
    |    }
  at /unique_chucks/26/0x1293d462d08855a17d9649dd0767a0df936e27d4.sol(672)

[33mWarning[0m for UnrestrictedWrite in contract 'Multisig':
    |                                 returns (uint) {
    |
  > |    setOwnerOperations[operation] = SetOwnerParams(who);
    |
    |    emit setOwnerAction(operation, who);
  at /unique_chucks/26/0x1293d462d08855a17d9649dd0767a0df936e27d4.sol(697)

[33mWarning[0m for UnrestrictedWrite in contract 'Multisig':
    |    if (enoughConfirmations(_operation)){
    |      vinci_contract.setOwner(setOwnerOperations[_operation].who);
  > |      executed[_operation] = true;
    |    }
    |
  at /unique_chucks/26/0x1293d462d08855a17d9649dd0767a0df936e27d4.sol(709)

[33mWarning[0m for UnrestrictedWrite in contract 'Multisig':
    |                                    returns (uint) {
    |
  > |    deleteMinterOperations[operation] = DeleteMinterParams(who);
    |
    |    emit deleteMinterAction(operation, who);
  at /unique_chucks/26/0x1293d462d08855a17d9649dd0767a0df936e27d4.sol(738)

[33mWarning[0m for UnrestrictedWrite in contract 'Multisig':
    |    if (enoughConfirmations(_operation)){
    |      vinci_contract.deleteMinter(deleteMinterOperations[_operation].who);
  > |      executed[_operation] = true;
    |    }
    |
  at /unique_chucks/26/0x1293d462d08855a17d9649dd0767a0df936e27d4.sol(750)

[33mWarning[0m for UnrestrictedWrite in contract 'Multisig':
    |                                  returns (uint) {
    |
  > |    addMinterOperations[operation] = AddMinterParams(who);
    |
    |    emit addMinterAction(operation, who);
  at /unique_chucks/26/0x1293d462d08855a17d9649dd0767a0df936e27d4.sol(777)

[33mWarning[0m for UnrestrictedWrite in contract 'Multisig':
    |    if (enoughConfirmations(_operation)){
    |      vinci_contract.addMinter(addMinterOperations[_operation].who);
  > |      executed[_operation] = true;
    |    }
    |
  at /unique_chucks/26/0x1293d462d08855a17d9649dd0767a0df936e27d4.sol(790)

[33mWarning[0m for UnrestrictedWrite in contract 'Multisig':
    |                             returns (uint) {
    |
  > |    mintOperations[operation] = MintParams(to, amount);
    |
    |    emit mintAction(operation, to, amount);
  at /unique_chucks/26/0x1293d462d08855a17d9649dd0767a0df936e27d4.sol(820)

[33mWarning[0m for UnrestrictedWrite in contract 'Multisig':
    |    if (enoughConfirmations(_operation)){
    |      vinci_contract.mint(mintOperations[_operation].to, mintOperations[_operation].amount);
  > |      executed[_operation] = true;
    |    }
    |
  at /unique_chucks/26/0x1293d462d08855a17d9649dd0767a0df936e27d4.sol(832)

[33mWarning[0m for UnrestrictedWrite in contract 'Multisig':
    |    if (enoughConfirmations(_operation)){
    |      vinci_contract.finishMinting();
  > |      executed[_operation] = true;
    |    }
    |
  at /unique_chucks/26/0x1293d462d08855a17d9649dd0767a0df936e27d4.sol(865)

[33mWarning[0m for UnrestrictedWrite in contract 'RBACMintableTokenMixin':
    |
    |    balances[msg.sender] = balances[msg.sender].sub(_value);
  > |    balances[_to] = balances[_to].add(_value);
    |    emit Transfer(msg.sender, _to, _value);
    |    return true;
  at /unique_chucks/26/0x1293d462d08855a17d9649dd0767a0df936e27d4.sol(93)

[33mWarning[0m for UnrestrictedWrite in contract 'RBACMintableTokenMixin':
    |    require(_value <= allowed[_from][msg.sender]);
    |
  > |    balances[_from] = balances[_from].sub(_value);
    |    balances[_to] = balances[_to].add(_value);
    |    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
  at /unique_chucks/26/0x1293d462d08855a17d9649dd0767a0df936e27d4.sol(158)

[33mWarning[0m for UnrestrictedWrite in contract 'RBACMintableTokenMixin':
    |
    |    balances[_from] = balances[_from].sub(_value);
  > |    balances[_to] = balances[_to].add(_value);
    |    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
    |    emit Transfer(_from, _to, _value);
  at /unique_chucks/26/0x1293d462d08855a17d9649dd0767a0df936e27d4.sol(159)

[33mWarning[0m for UnrestrictedWrite in contract 'RBACMintableTokenMixin':
    |    returns (bool)
    |  {
  > |    totalIssued_ = totalIssued_.add(_amount);
    |    totalSupply_ = totalSupply_.add(_amount);
    |    balances[_to] = balances[_to].add(_amount);
  at /unique_chucks/26/0x1293d462d08855a17d9649dd0767a0df936e27d4.sol(501)

[33mWarning[0m for UnrestrictedWrite in contract 'RBACMintableTokenMixin':
    |  {
    |    totalIssued_ = totalIssued_.add(_amount);
  > |    totalSupply_ = totalSupply_.add(_amount);
    |    balances[_to] = balances[_to].add(_amount);
    |    emit Mint(_to, _amount);
  at /unique_chucks/26/0x1293d462d08855a17d9649dd0767a0df936e27d4.sol(502)

[33mWarning[0m for UnrestrictedWrite in contract 'RBACMintableTokenMixin':
    |    totalIssued_ = totalIssued_.add(_amount);
    |    totalSupply_ = totalSupply_.add(_amount);
  > |    balances[_to] = balances[_to].add(_amount);
    |    emit Mint(_to, _amount);
    |    emit Transfer(address(0), _to, _amount);
  at /unique_chucks/26/0x1293d462d08855a17d9649dd0767a0df936e27d4.sol(503)

[33mWarning[0m for UnrestrictedWrite in contract 'RBACMintableTokenMixin':
    |  function _setOwner(address _who) private returns (bool) {
    |    require(owner != _who, DUPLICATE);
  > |    owner = _who;
    |    emit SetOwner(_who);
    |    return true;
  at /unique_chucks/26/0x1293d462d08855a17d9649dd0767a0df936e27d4.sol(451)

[33mWarning[0m for UnrestrictedWrite in contract 'RBACMintableTokenMixin':
    |  function _setMinter(address _who, bool _flag) private returns (bool) {
    |    require(minters[_who] != _flag, DUPLICATE);
  > |    minters[_who] = _flag;
    |    if (_flag) {
    |      emit AddMinter(_who);
  at /unique_chucks/26/0x1293d462d08855a17d9649dd0767a0df936e27d4.sol(462)

[33mWarning[0m for UnrestrictedWrite in contract 'RBACMintableTokenMixin':
    |   */
    |  function finishMinting() onlyOwner canMint public returns (bool) {
  > |    mintingFinished = true;
    |    emit MintFinished();
    |    return true;
  at /unique_chucks/26/0x1293d462d08855a17d9649dd0767a0df936e27d4.sol(514)

[33mWarning[0m for UnrestrictedWrite in contract 'RBACMixin':
    |  function _setOwner(address _who) private returns (bool) {
    |    require(owner != _who, DUPLICATE);
  > |    owner = _who;
    |    emit SetOwner(_who);
    |    return true;
  at /unique_chucks/26/0x1293d462d08855a17d9649dd0767a0df936e27d4.sol(451)

[33mWarning[0m for UnrestrictedWrite in contract 'RBACMixin':
    |  function _setMinter(address _who, bool _flag) private returns (bool) {
    |    require(minters[_who] != _flag, DUPLICATE);
  > |    minters[_who] = _flag;
    |    if (_flag) {
    |      emit AddMinter(_who);
  at /unique_chucks/26/0x1293d462d08855a17d9649dd0767a0df936e27d4.sol(462)

[33mWarning[0m for UnrestrictedWrite in contract 'SetOwnerMultisig':
    |  // common method
    |  modifier createsNewOperation() {
  > |    operation++;
    |    if (isOwner(msg.sender)) {
    |      ownersConfirmations[operation] = 1;
  at /unique_chucks/26/0x1293d462d08855a17d9649dd0767a0df936e27d4.sol(650)

[33mWarning[0m for UnrestrictedWrite in contract 'SetOwnerMultisig':
    |    operation++;
    |    if (isOwner(msg.sender)) {
  > |      ownersConfirmations[operation] = 1;
    |      adminsConfirmations[operation] = 0;
    |      ownersSigns[operation][msg.sender] = true;
  at /unique_chucks/26/0x1293d462d08855a17d9649dd0767a0df936e27d4.sol(652)

[33mWarning[0m for UnrestrictedWrite in contract 'SetOwnerMultisig':
    |    if (isOwner(msg.sender)) {
    |      ownersConfirmations[operation] = 1;
  > |      adminsConfirmations[operation] = 0;
    |      ownersSigns[operation][msg.sender] = true;
    |    } else {
  at /unique_chucks/26/0x1293d462d08855a17d9649dd0767a0df936e27d4.sol(653)

[33mWarning[0m for UnrestrictedWrite in contract 'SetOwnerMultisig':
    |    } else {
    |      if (isAdmin(msg.sender)) {
  > |        ownersConfirmations[operation] = 0;
    |        adminsConfirmations[operation] = 1;
    |        adminsSigns[operation][msg.sender] = true;
  at /unique_chucks/26/0x1293d462d08855a17d9649dd0767a0df936e27d4.sol(657)

[33mWarning[0m for UnrestrictedWrite in contract 'SetOwnerMultisig':
    |      if (isAdmin(msg.sender)) {
    |        ownersConfirmations[operation] = 0;
  > |        adminsConfirmations[operation] = 1;
    |        adminsSigns[operation][msg.sender] = true;
    |      }
  at /unique_chucks/26/0x1293d462d08855a17d9649dd0767a0df936e27d4.sol(658)

[33mWarning[0m for UnrestrictedWrite in contract 'SetOwnerMultisig':
    |    if (isOwner(msg.sender)) {
    |      if (ownersSigns[_operation][msg.sender]) revert();
  > |      ownersConfirmations[_operation] += 1;
    |    } else {
    |      if (isAdmin(msg.sender)) {
  at /unique_chucks/26/0x1293d462d08855a17d9649dd0767a0df936e27d4.sol(668)

[33mWarning[0m for UnrestrictedWrite in contract 'SetOwnerMultisig':
    |      if (isAdmin(msg.sender)) {
    |        if (adminsSigns[_operation][msg.sender]) revert();
  > |        adminsConfirmations[_operation] += 1;
    |      }
    |    }
  at /unique_chucks/26/0x1293d462d08855a17d9649dd0767a0df936e27d4.sol(672)

[33mWarning[0m for UnrestrictedWrite in contract 'SetOwnerMultisig':
    |                                 returns (uint) {
    |
  > |    setOwnerOperations[operation] = SetOwnerParams(who);
    |
    |    emit setOwnerAction(operation, who);
  at /unique_chucks/26/0x1293d462d08855a17d9649dd0767a0df936e27d4.sol(697)

[33mWarning[0m for UnrestrictedWrite in contract 'SetOwnerMultisig':
    |    if (enoughConfirmations(_operation)){
    |      vinci_contract.setOwner(setOwnerOperations[_operation].who);
  > |      executed[_operation] = true;
    |    }
    |
  at /unique_chucks/26/0x1293d462d08855a17d9649dd0767a0df936e27d4.sol(709)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |
    |    balances[msg.sender] = balances[msg.sender].sub(_value);
  > |    balances[_to] = balances[_to].add(_value);
    |    emit Transfer(msg.sender, _to, _value);
    |    return true;
  at /unique_chucks/26/0x1293d462d08855a17d9649dd0767a0df936e27d4.sol(93)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |    require(_value <= allowed[_from][msg.sender]);
    |
  > |    balances[_from] = balances[_from].sub(_value);
    |    balances[_to] = balances[_to].add(_value);
    |    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
  at /unique_chucks/26/0x1293d462d08855a17d9649dd0767a0df936e27d4.sol(158)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |
    |    balances[_from] = balances[_from].sub(_value);
  > |    balances[_to] = balances[_to].add(_value);
    |    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
    |    emit Transfer(_from, _to, _value);
  at /unique_chucks/26/0x1293d462d08855a17d9649dd0767a0df936e27d4.sol(159)

[31mViolation[0m for LockedEther in contract 'VinciToken':
    |/// @title Vinci token implementation
    |/// @dev Implements ERC20, ERC223 and MintableToken interfaces
  > |contract VinciToken is StandardBurnableToken, ERC223Mixin, RBACMintableTokenMixin {
    |  /// @notice Constant field with token full name
    |  // solium-disable-next-line uppercase
  at /unique_chucks/26/0x1293d462d08855a17d9649dd0767a0df936e27d4.sol(570)