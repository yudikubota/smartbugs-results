Processing contract: /unique_chucks/46/0x440f29b408d31e951b7e0d67a402a2ce74785099.sol:PinRequired
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for TODAmount in contract 'PinRequired':
    |    function withdraw() payable public {
    |        require(msg.sender == owner);
  > |        owner.transfer(address(this).balance);
    |    }
    |    
  at /unique_chucks/46/0x440f29b408d31e951b7e0d67a402a2ce74785099.sol(18)

[31mViolation[0m for TODAmount in contract 'PinRequired':
    |    function guess(uint g) public payable {
    |        if(msg.value >= address(this).balance && g == topSecretNumber && msg.value >= 1 ether) {
  > |            msg.sender.transfer(address(this).balance + msg.value);
    |        }
    |    }
  at /unique_chucks/46/0x440f29b408d31e951b7e0d67a402a2ce74785099.sol(33)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'PinRequired':
    |    function guess(uint g) public payable {
    |        if(msg.value >= address(this).balance && g == topSecretNumber && msg.value >= 1 ether) {
  > |            msg.sender.transfer(address(this).balance + msg.value);
    |        }
    |    }
  at /unique_chucks/46/0x440f29b408d31e951b7e0d67a402a2ce74785099.sol(33)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'PinRequired':
    |    function withdraw(uint256 amount) payable public {
    |        require(msg.sender == owner);
  > |        owner.transfer(amount);
    |    }
    |
  at /unique_chucks/46/0x440f29b408d31e951b7e0d67a402a2ce74785099.sol(23)

[33mWarning[0m for UnrestrictedWrite in contract 'PinRequired':
    |	function setPin(uint pin) public {
    |		require(msg.sender == owner);
  > |		topSecretNumber = pin;
    |	}
    |
  at /unique_chucks/46/0x440f29b408d31e951b7e0d67a402a2ce74785099.sol(13)