Processing contract: /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol:Address
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol:Auction4Reputation
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol:Avatar
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol:ControllerInterface
Processing contract: /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol:DAOToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol:DxDaoClaimRedeemHelper
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol:DxGenAuction4Rep
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol:DxLockEth4Rep
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol:DxLockMgnForRep
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol:DxLockWhitelisted4Rep
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol:DxToken4RepInterface
Processing contract: /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol:ERC20
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol:ERC20Burnable
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol:ExternalLocking4Reputation
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol:GlobalConstraintInterface
Processing contract: /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol:IERC20
Processing contract: /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol:Locking4Reputation
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol:LockingEth4Reputation
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol:LockingToken4Reputation
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol:Ownable
Processing contract: /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol:PriceOracleInterface
Processing contract: /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol:Reputation
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol:SafeERC20
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for LockedEther in contract 'Auction4Reputation':
    |
    |
  > |contract Auction4Reputation {
    |    using SafeMath for uint256;
    |    using SafeERC20 for address;
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1557)

[31mViolation[0m for UnrestrictedWrite in contract 'Auction4Reputation':
    |        //_auctionPeriod should be greater than block interval
    |        require(_auctionPeriod > 15, "auctionPeriod should be > 15");
  > |        auctionPeriod = _auctionPeriod;
    |        auctionsEndTime = _auctionsStartTime + _auctionPeriod.mul(_numberOfAuctions);
    |        require(_redeemEnableTime >= auctionsEndTime, "_redeemEnableTime >= auctionsEndTime");
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1617)

[31mViolation[0m for UnrestrictedWrite in contract 'Auction4Reputation':
    |        require(_auctionPeriod > 15, "auctionPeriod should be > 15");
    |        auctionPeriod = _auctionPeriod;
  > |        auctionsEndTime = _auctionsStartTime + _auctionPeriod.mul(_numberOfAuctions);
    |        require(_redeemEnableTime >= auctionsEndTime, "_redeemEnableTime >= auctionsEndTime");
    |        token = _token;
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1618)

[31mViolation[0m for UnrestrictedWrite in contract 'Auction4Reputation':
    |        auctionsEndTime = _auctionsStartTime + _auctionPeriod.mul(_numberOfAuctions);
    |        require(_redeemEnableTime >= auctionsEndTime, "_redeemEnableTime >= auctionsEndTime");
  > |        token = _token;
    |        avatar = _avatar;
    |        auctionsStartTime = _auctionsStartTime;
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1620)

[31mViolation[0m for UnrestrictedWrite in contract 'Auction4Reputation':
    |        require(_redeemEnableTime >= auctionsEndTime, "_redeemEnableTime >= auctionsEndTime");
    |        token = _token;
  > |        avatar = _avatar;
    |        auctionsStartTime = _auctionsStartTime;
    |        numberOfAuctions = _numberOfAuctions;
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1621)

[31mViolation[0m for UnrestrictedWrite in contract 'Auction4Reputation':
    |        token = _token;
    |        avatar = _avatar;
  > |        auctionsStartTime = _auctionsStartTime;
    |        numberOfAuctions = _numberOfAuctions;
    |        wallet = _wallet;
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1622)

[31mViolation[0m for UnrestrictedWrite in contract 'Auction4Reputation':
    |        avatar = _avatar;
    |        auctionsStartTime = _auctionsStartTime;
  > |        numberOfAuctions = _numberOfAuctions;
    |        wallet = _wallet;
    |        auctionReputationReward = _auctionReputationReward;
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1623)

[31mViolation[0m for UnrestrictedWrite in contract 'Auction4Reputation':
    |        auctionsStartTime = _auctionsStartTime;
    |        numberOfAuctions = _numberOfAuctions;
  > |        wallet = _wallet;
    |        auctionReputationReward = _auctionReputationReward;
    |        reputationRewardLeft = _auctionReputationReward.mul(_numberOfAuctions);
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1624)

[31mViolation[0m for UnrestrictedWrite in contract 'Auction4Reputation':
    |        numberOfAuctions = _numberOfAuctions;
    |        wallet = _wallet;
  > |        auctionReputationReward = _auctionReputationReward;
    |        reputationRewardLeft = _auctionReputationReward.mul(_numberOfAuctions);
    |        redeemEnableTime = _redeemEnableTime;
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1625)

[31mViolation[0m for UnrestrictedWrite in contract 'Auction4Reputation':
    |        wallet = _wallet;
    |        auctionReputationReward = _auctionReputationReward;
  > |        reputationRewardLeft = _auctionReputationReward.mul(_numberOfAuctions);
    |        redeemEnableTime = _redeemEnableTime;
    |    }
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1626)

[31mViolation[0m for UnrestrictedWrite in contract 'Auction4Reputation':
    |        auctionReputationReward = _auctionReputationReward;
    |        reputationRewardLeft = _auctionReputationReward.mul(_numberOfAuctions);
  > |        redeemEnableTime = _redeemEnableTime;
    |    }
    |
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1627)

[31mViolation[0m for UnrestrictedWrite in contract 'Auction4Reputation':
    |        uint256 bid = auction.bids[_beneficiary];
    |        require(bid > 0, "bidding amount should be > 0");
  > |        auction.bids[_beneficiary] = 0;
    |        uint256 repRelation = bid.mul(auctionReputationReward);
    |        reputation = repRelation.div(auction.totalBid);
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1642)

[31mViolation[0m for UnrestrictedWrite in contract 'Auction4Reputation':
    |        reputation = repRelation.div(auction.totalBid);
    |        // check that the reputation is sum zero
  > |        reputationRewardLeft = reputationRewardLeft.sub(reputation);
    |        require(
    |        ControllerInterface(avatar.owner())
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1646)

[33mWarning[0m for UnrestrictedWrite in contract 'Auction4Reputation':
    |        require(auctionId == _auctionId, "auction is not active");
    |        Auction storage auction = auctions[auctionId];
  > |        auction.totalBid = auction.totalBid.add(_amount);
    |        auction.bids[msg.sender] = auction.bids[msg.sender].add(_amount);
    |        emit Bid(msg.sender, auctionId, _amount);
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1670)

[33mWarning[0m for TODAmount in contract 'Avatar':
    |    returns(bool success, bytes memory returnValue) {
    |      // solhint-disable-next-line avoid-call-value
  > |        (success, returnValue) = _contract.call.value(_value)(_data);
    |        emit GenericCall(_contract, _data, _value, success);
    |    }
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(772)

[33mWarning[0m for TODReceiver in contract 'Avatar':
    |    returns(bool success, bytes memory returnValue) {
    |      // solhint-disable-next-line avoid-call-value
  > |        (success, returnValue) = _contract.call.value(_value)(_data);
    |        emit GenericCall(_contract, _data, _value, success);
    |    }
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(772)

[33mWarning[0m for UnhandledException in contract 'Avatar':
    |    returns(bool success, bytes memory returnValue) {
    |      // solhint-disable-next-line avoid-call-value
  > |        (success, returnValue) = _contract.call.value(_value)(_data);
    |        emit GenericCall(_contract, _data, _value, success);
    |    }
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(772)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'Avatar':
    |    returns(bool success, bytes memory returnValue) {
    |      // solhint-disable-next-line avoid-call-value
  > |        (success, returnValue) = _contract.call.value(_value)(_data);
    |        emit GenericCall(_contract, _data, _value, success);
    |    }
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(772)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'Avatar':
    |    */
    |    function sendEther(uint256 _amountInWei, address payable _to) public onlyOwner returns(bool) {
  > |        _to.transfer(_amountInWei);
    |        emit SendEther(_amountInWei, _to);
    |        return true;
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(783)

[33mWarning[0m for UnrestrictedWrite in contract 'Avatar':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipTransferred(_owner, address(0));
  > |        _owner = address(0);
    |    }
    |
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(54)

[33mWarning[0m for UnrestrictedWrite in contract 'Avatar':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(72)

[31mViolation[0m for LockedEther in contract 'DAOToken':
    | */
    |
  > |contract DAOToken is ERC20, ERC20Burnable, Ownable {
    |
    |    string public name;
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(577)

[31mViolation[0m for LockedEther in contract 'DxDaoClaimRedeemHelper':
    |
    |
  > |contract DxDaoClaimRedeemHelper {
    |    DxToken4RepInterface public dxLER;
    |    DxToken4RepInterface public dxLMR;
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1730)

[31mViolation[0m for RepeatedCall in contract 'DxDaoClaimRedeemHelper':
    |
    |        for (uint i = 0; i < length; i++) {
  > |            returnArray[i] = claimingContract.claim(userAddresses[i]);
    |        }
    |
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1784)

[31mViolation[0m for RepeatedCall in contract 'DxDaoClaimRedeemHelper':
    |
    |        for (uint i = 0; i < length; i++) {
  > |            returnArray[i] = redeemingContract.redeem(userAddresses[i]);
    |        }
    |
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1815)

[31mViolation[0m for RepeatedCall in contract 'DxDaoClaimRedeemHelper':
    |
    |        for (uint i = 0; i < length; i++) {
  > |            returnArray[i] = dxGAR.redeem(userAddresses[i], auctionIndices[i]);
    |        }
    |
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1836)

[31mViolation[0m for LockedEther in contract 'DxGenAuction4Rep':
    | * @title Scheme for conducting ERC20 Tokens auctions for reputation
    | */
  > |contract DxGenAuction4Rep is Auction4Reputation {
    |    constructor() public {}
    |}
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1706)

[31mViolation[0m for UnrestrictedWrite in contract 'DxGenAuction4Rep':
    |        //_auctionPeriod should be greater than block interval
    |        require(_auctionPeriod > 15, "auctionPeriod should be > 15");
  > |        auctionPeriod = _auctionPeriod;
    |        auctionsEndTime = _auctionsStartTime + _auctionPeriod.mul(_numberOfAuctions);
    |        require(_redeemEnableTime >= auctionsEndTime, "_redeemEnableTime >= auctionsEndTime");
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1617)

[31mViolation[0m for UnrestrictedWrite in contract 'DxGenAuction4Rep':
    |        require(_auctionPeriod > 15, "auctionPeriod should be > 15");
    |        auctionPeriod = _auctionPeriod;
  > |        auctionsEndTime = _auctionsStartTime + _auctionPeriod.mul(_numberOfAuctions);
    |        require(_redeemEnableTime >= auctionsEndTime, "_redeemEnableTime >= auctionsEndTime");
    |        token = _token;
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1618)

[31mViolation[0m for UnrestrictedWrite in contract 'DxGenAuction4Rep':
    |        auctionsEndTime = _auctionsStartTime + _auctionPeriod.mul(_numberOfAuctions);
    |        require(_redeemEnableTime >= auctionsEndTime, "_redeemEnableTime >= auctionsEndTime");
  > |        token = _token;
    |        avatar = _avatar;
    |        auctionsStartTime = _auctionsStartTime;
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1620)

[31mViolation[0m for UnrestrictedWrite in contract 'DxGenAuction4Rep':
    |        require(_redeemEnableTime >= auctionsEndTime, "_redeemEnableTime >= auctionsEndTime");
    |        token = _token;
  > |        avatar = _avatar;
    |        auctionsStartTime = _auctionsStartTime;
    |        numberOfAuctions = _numberOfAuctions;
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1621)

[31mViolation[0m for UnrestrictedWrite in contract 'DxGenAuction4Rep':
    |        token = _token;
    |        avatar = _avatar;
  > |        auctionsStartTime = _auctionsStartTime;
    |        numberOfAuctions = _numberOfAuctions;
    |        wallet = _wallet;
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1622)

[31mViolation[0m for UnrestrictedWrite in contract 'DxGenAuction4Rep':
    |        avatar = _avatar;
    |        auctionsStartTime = _auctionsStartTime;
  > |        numberOfAuctions = _numberOfAuctions;
    |        wallet = _wallet;
    |        auctionReputationReward = _auctionReputationReward;
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1623)

[31mViolation[0m for UnrestrictedWrite in contract 'DxGenAuction4Rep':
    |        auctionsStartTime = _auctionsStartTime;
    |        numberOfAuctions = _numberOfAuctions;
  > |        wallet = _wallet;
    |        auctionReputationReward = _auctionReputationReward;
    |        reputationRewardLeft = _auctionReputationReward.mul(_numberOfAuctions);
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1624)

[31mViolation[0m for UnrestrictedWrite in contract 'DxGenAuction4Rep':
    |        numberOfAuctions = _numberOfAuctions;
    |        wallet = _wallet;
  > |        auctionReputationReward = _auctionReputationReward;
    |        reputationRewardLeft = _auctionReputationReward.mul(_numberOfAuctions);
    |        redeemEnableTime = _redeemEnableTime;
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1625)

[31mViolation[0m for UnrestrictedWrite in contract 'DxGenAuction4Rep':
    |        wallet = _wallet;
    |        auctionReputationReward = _auctionReputationReward;
  > |        reputationRewardLeft = _auctionReputationReward.mul(_numberOfAuctions);
    |        redeemEnableTime = _redeemEnableTime;
    |    }
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1626)

[31mViolation[0m for UnrestrictedWrite in contract 'DxGenAuction4Rep':
    |        auctionReputationReward = _auctionReputationReward;
    |        reputationRewardLeft = _auctionReputationReward.mul(_numberOfAuctions);
  > |        redeemEnableTime = _redeemEnableTime;
    |    }
    |
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1627)

[31mViolation[0m for UnrestrictedWrite in contract 'DxGenAuction4Rep':
    |        uint256 bid = auction.bids[_beneficiary];
    |        require(bid > 0, "bidding amount should be > 0");
  > |        auction.bids[_beneficiary] = 0;
    |        uint256 repRelation = bid.mul(auctionReputationReward);
    |        reputation = repRelation.div(auction.totalBid);
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1642)

[31mViolation[0m for UnrestrictedWrite in contract 'DxGenAuction4Rep':
    |        reputation = repRelation.div(auction.totalBid);
    |        // check that the reputation is sum zero
  > |        reputationRewardLeft = reputationRewardLeft.sub(reputation);
    |        require(
    |        ControllerInterface(avatar.owner())
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1646)

[33mWarning[0m for UnrestrictedWrite in contract 'DxGenAuction4Rep':
    |        require(auctionId == _auctionId, "auction is not active");
    |        Auction storage auction = auctions[auctionId];
  > |        auction.totalBid = auction.totalBid.add(_amount);
    |        auction.bids[msg.sender] = auction.bids[msg.sender].add(_amount);
    |        emit Bid(msg.sender, auctionId, _amount);
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1670)

[33mWarning[0m for TODAmount in contract 'DxLockEth4Rep':
    |    function release(address payable _beneficiary, bytes32 _lockingId) public returns(bool) {
    |        uint256 amount = super._release(_beneficiary, _lockingId);
  > |        _beneficiary.transfer(amount);
    |
    |        return true;
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1291)

[33mWarning[0m for TODReceiver in contract 'DxLockEth4Rep':
    |    function release(address payable _beneficiary, bytes32 _lockingId) public returns(bool) {
    |        uint256 amount = super._release(_beneficiary, _lockingId);
  > |        _beneficiary.transfer(amount);
    |
    |        return true;
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1291)

[33mWarning[0m for UnrestrictedWrite in contract 'DxLockEth4Rep':
    |        require(scores[_beneficiary] > 0, "score should be > 0");
    |        uint256 score = scores[_beneficiary];
  > |        scores[_beneficiary] = 0;
    |        uint256 repRelation = score.mul(reputationReward);
    |        reputation = repRelation.div(totalScore);
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1127)

[33mWarning[0m for UnrestrictedWrite in contract 'DxLockEth4Rep':
    |        require(locker.amount > 0, "amount should be > 0");
    |        amount = locker.amount;
  > |        locker.amount = 0;
    |        // solhint-disable-next-line not-rely-on-time
    |        require(block.timestamp > locker.releaseTime, "check the lock period pass");
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1151)

[33mWarning[0m for UnrestrictedWrite in contract 'DxLockEth4Rep':
    |        require(_redeemEnableTime >= _lockingEndTime, "redeemEnableTime >= lockingEndTime");
    |
  > |        reputationReward = _reputationReward;
    |        reputationRewardLeft = _reputationReward;
    |        lockingEndTime = _lockingEndTime;
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1231)

[33mWarning[0m for UnrestrictedWrite in contract 'DxLockEth4Rep':
    |
    |        reputationReward = _reputationReward;
  > |        reputationRewardLeft = _reputationReward;
    |        lockingEndTime = _lockingEndTime;
    |        maxLockingPeriod = _maxLockingPeriod;
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1232)

[33mWarning[0m for UnrestrictedWrite in contract 'DxLockEth4Rep':
    |        reputationReward = _reputationReward;
    |        reputationRewardLeft = _reputationReward;
  > |        lockingEndTime = _lockingEndTime;
    |        maxLockingPeriod = _maxLockingPeriod;
    |        avatar = _avatar;
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1233)

[33mWarning[0m for UnrestrictedWrite in contract 'DxLockEth4Rep':
    |        reputationRewardLeft = _reputationReward;
    |        lockingEndTime = _lockingEndTime;
  > |        maxLockingPeriod = _maxLockingPeriod;
    |        avatar = _avatar;
    |        lockingStartTime = _lockingStartTime;
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1234)

[33mWarning[0m for UnrestrictedWrite in contract 'DxLockEth4Rep':
    |        lockingEndTime = _lockingEndTime;
    |        maxLockingPeriod = _maxLockingPeriod;
  > |        avatar = _avatar;
    |        lockingStartTime = _lockingStartTime;
    |        redeemEnableTime = _redeemEnableTime;
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1235)

[33mWarning[0m for UnrestrictedWrite in contract 'DxLockEth4Rep':
    |        maxLockingPeriod = _maxLockingPeriod;
    |        avatar = _avatar;
  > |        lockingStartTime = _lockingStartTime;
    |        redeemEnableTime = _redeemEnableTime;
    |    }
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1236)

[33mWarning[0m for UnrestrictedWrite in contract 'DxLockEth4Rep':
    |        avatar = _avatar;
    |        lockingStartTime = _lockingStartTime;
  > |        redeemEnableTime = _redeemEnableTime;
    |    }
    |
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1237)

[31mViolation[0m for LockedEther in contract 'DxLockMgnForRep':
    | * @title Scheme that allows to get GEN by locking MGN
    | */
  > |contract DxLockMgnForRep is ExternalLocking4Reputation {
    |    constructor() public {}
    |}
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1423)

[31mViolation[0m for UnrestrictedWrite in contract 'DxLockMgnForRep':
    |        require(scores[_beneficiary] > 0, "score should be > 0");
    |        uint256 score = scores[_beneficiary];
  > |        scores[_beneficiary] = 0;
    |        uint256 repRelation = score.mul(reputationReward);
    |        reputation = repRelation.div(totalScore);
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1127)

[31mViolation[0m for UnrestrictedWrite in contract 'DxLockMgnForRep':
    |
    |        //check that the reputation is sum zero
  > |        reputationRewardLeft = reputationRewardLeft.sub(reputation);
    |        require(
    |        ControllerInterface(
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1132)

[31mViolation[0m for UnrestrictedWrite in contract 'DxLockMgnForRep':
    |
    |        lockingId = keccak256(abi.encodePacked(address(this), lockingsCounter));
  > |        lockingsCounter = lockingsCounter.add(1);
    |
    |        Locker storage locker = lockers[_locker][lockingId];
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1186)

[31mViolation[0m for UnrestrictedWrite in contract 'DxLockMgnForRep':
    |
    |        Locker storage locker = lockers[_locker][lockingId];
  > |        locker.amount = _amount;
    |        // solhint-disable-next-line not-rely-on-time
    |        locker.releaseTime = now + _period;
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1189)

[31mViolation[0m for UnrestrictedWrite in contract 'DxLockMgnForRep':
    |        locker.amount = _amount;
    |        // solhint-disable-next-line not-rely-on-time
  > |        locker.releaseTime = now + _period;
    |        totalLocked = totalLocked.add(_amount);
    |        totalLockedLeft = totalLockedLeft.add(_amount);
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1191)

[31mViolation[0m for UnrestrictedWrite in contract 'DxLockMgnForRep':
    |        // solhint-disable-next-line not-rely-on-time
    |        locker.releaseTime = now + _period;
  > |        totalLocked = totalLocked.add(_amount);
    |        totalLockedLeft = totalLockedLeft.add(_amount);
    |        uint256 score = _period.mul(_amount).mul(_numerator).div(_denominator);
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1192)

[31mViolation[0m for UnrestrictedWrite in contract 'DxLockMgnForRep':
    |        locker.releaseTime = now + _period;
    |        totalLocked = totalLocked.add(_amount);
  > |        totalLockedLeft = totalLockedLeft.add(_amount);
    |        uint256 score = _period.mul(_amount).mul(_numerator).div(_denominator);
    |        require(score > 0, "score must me > 0");
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1193)

[31mViolation[0m for UnrestrictedWrite in contract 'DxLockMgnForRep':
    |        uint256 score = _period.mul(_amount).mul(_numerator).div(_denominator);
    |        require(score > 0, "score must me > 0");
  > |        scores[_locker] = scores[_locker].add(score);
    |        //verify that redeem will not overflow for this locker
    |        require((scores[_locker] * reputationReward)/scores[_locker] == reputationReward,
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1196)

[31mViolation[0m for UnrestrictedWrite in contract 'DxLockMgnForRep':
    |        require((scores[_locker] * reputationReward)/scores[_locker] == reputationReward,
    |        "score is too high");
  > |        totalScore = totalScore.add(score);
    |
    |        emit Lock(_locker, lockingId, _amount, _period);
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1200)

[31mViolation[0m for UnrestrictedWrite in contract 'DxLockMgnForRep':
    |        require(_redeemEnableTime >= _lockingEndTime, "redeemEnableTime >= lockingEndTime");
    |
  > |        reputationReward = _reputationReward;
    |        reputationRewardLeft = _reputationReward;
    |        lockingEndTime = _lockingEndTime;
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1231)

[31mViolation[0m for UnrestrictedWrite in contract 'DxLockMgnForRep':
    |
    |        reputationReward = _reputationReward;
  > |        reputationRewardLeft = _reputationReward;
    |        lockingEndTime = _lockingEndTime;
    |        maxLockingPeriod = _maxLockingPeriod;
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1232)

[31mViolation[0m for UnrestrictedWrite in contract 'DxLockMgnForRep':
    |        reputationReward = _reputationReward;
    |        reputationRewardLeft = _reputationReward;
  > |        lockingEndTime = _lockingEndTime;
    |        maxLockingPeriod = _maxLockingPeriod;
    |        avatar = _avatar;
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1233)

[31mViolation[0m for UnrestrictedWrite in contract 'DxLockMgnForRep':
    |        reputationRewardLeft = _reputationReward;
    |        lockingEndTime = _lockingEndTime;
  > |        maxLockingPeriod = _maxLockingPeriod;
    |        avatar = _avatar;
    |        lockingStartTime = _lockingStartTime;
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1234)

[31mViolation[0m for UnrestrictedWrite in contract 'DxLockMgnForRep':
    |        lockingEndTime = _lockingEndTime;
    |        maxLockingPeriod = _maxLockingPeriod;
  > |        avatar = _avatar;
    |        lockingStartTime = _lockingStartTime;
    |        redeemEnableTime = _redeemEnableTime;
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1235)

[31mViolation[0m for UnrestrictedWrite in contract 'DxLockMgnForRep':
    |        maxLockingPeriod = _maxLockingPeriod;
    |        avatar = _avatar;
  > |        lockingStartTime = _lockingStartTime;
    |        redeemEnableTime = _redeemEnableTime;
    |    }
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1236)

[31mViolation[0m for UnrestrictedWrite in contract 'DxLockMgnForRep':
    |        avatar = _avatar;
    |        lockingStartTime = _lockingStartTime;
  > |        redeemEnableTime = _redeemEnableTime;
    |    }
    |
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1237)

[31mViolation[0m for UnrestrictedWrite in contract 'DxLockMgnForRep':
    |    {
    |        require(_claimingEndTime > _claimingStartTime, "_claimingEndTime should be greater than _claimingStartTime");
  > |        externalLockingContract = _externalLockingContract;
    |        getBalanceFuncSignature = _getBalanceFuncSignature;
    |        super._initialize(
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1365)

[31mViolation[0m for UnrestrictedWrite in contract 'DxLockMgnForRep':
    |        }
    |        require(externalLockers[beneficiary] == false, "claiming twice for the same beneficiary is not allowed");
  > |        externalLockers[beneficiary] = true;
    |        (bool result, bytes memory returnValue) =
    |        // solhint-disable-next-line avoid-call-value,avoid-low-level-calls
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1392)

[31mViolation[0m for UnrestrictedWrite in contract 'DxLockMgnForRep':
    | * @title Scheme that allows to get GEN by locking MGN
    | */
  > |contract DxLockMgnForRep is ExternalLocking4Reputation {
    |    constructor() public {}
    |}
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1423)

[31mViolation[0m for LockedEther in contract 'DxLockWhitelisted4Rep':
    | * @title Scheme for locking GNO tokens for reputation
    | */
  > |contract DxLockWhitelisted4Rep is LockingToken4Reputation {
    |    // TODO: Extend the new LockWhitelisted4Rep once it's implemented
    |    constructor() public {}
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1540)

[31mViolation[0m for RepeatedCall in contract 'DxLockWhitelisted4Rep':
    |        (bool success, bytes memory returnValue) =
    |        // solhint-disable-next-line avoid-low-level-calls
  > |        _erc20Addr.call(abi.encodeWithSelector(TRANSFERFROM_SELECTOR, _from, _to, _value));
    |        // call return false when something wrong
    |        require(success);
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(688)

[33mWarning[0m for RepeatedCall in contract 'DxLockWhitelisted4Rep':
    |        (bool success, bytes memory returnValue) =
    |        // solhint-disable-next-line avoid-low-level-calls
  > |        _erc20Addr.call(abi.encodeWithSelector(TRANSFER_SELECTOR, _to, _value));
    |        // call return false when something wrong
    |        require(success);
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(674)

[33mWarning[0m for UnrestrictedWrite in contract 'DxLockWhitelisted4Rep':
    |        require(scores[_beneficiary] > 0, "score should be > 0");
    |        uint256 score = scores[_beneficiary];
  > |        scores[_beneficiary] = 0;
    |        uint256 repRelation = score.mul(reputationReward);
    |        reputation = repRelation.div(totalScore);
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1127)

[33mWarning[0m for UnrestrictedWrite in contract 'DxLockWhitelisted4Rep':
    |        require(locker.amount > 0, "amount should be > 0");
    |        amount = locker.amount;
  > |        locker.amount = 0;
    |        // solhint-disable-next-line not-rely-on-time
    |        require(block.timestamp > locker.releaseTime, "check the lock period pass");
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1151)

[33mWarning[0m for UnrestrictedWrite in contract 'DxLockWhitelisted4Rep':
    |        require(_redeemEnableTime >= _lockingEndTime, "redeemEnableTime >= lockingEndTime");
    |
  > |        reputationReward = _reputationReward;
    |        reputationRewardLeft = _reputationReward;
    |        lockingEndTime = _lockingEndTime;
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1231)

[33mWarning[0m for UnrestrictedWrite in contract 'DxLockWhitelisted4Rep':
    |
    |        reputationReward = _reputationReward;
  > |        reputationRewardLeft = _reputationReward;
    |        lockingEndTime = _lockingEndTime;
    |        maxLockingPeriod = _maxLockingPeriod;
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1232)

[33mWarning[0m for UnrestrictedWrite in contract 'DxLockWhitelisted4Rep':
    |        reputationReward = _reputationReward;
    |        reputationRewardLeft = _reputationReward;
  > |        lockingEndTime = _lockingEndTime;
    |        maxLockingPeriod = _maxLockingPeriod;
    |        avatar = _avatar;
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1233)

[33mWarning[0m for UnrestrictedWrite in contract 'DxLockWhitelisted4Rep':
    |        reputationRewardLeft = _reputationReward;
    |        lockingEndTime = _lockingEndTime;
  > |        maxLockingPeriod = _maxLockingPeriod;
    |        avatar = _avatar;
    |        lockingStartTime = _lockingStartTime;
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1234)

[33mWarning[0m for UnrestrictedWrite in contract 'DxLockWhitelisted4Rep':
    |        lockingEndTime = _lockingEndTime;
    |        maxLockingPeriod = _maxLockingPeriod;
  > |        avatar = _avatar;
    |        lockingStartTime = _lockingStartTime;
    |        redeemEnableTime = _redeemEnableTime;
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1235)

[33mWarning[0m for UnrestrictedWrite in contract 'DxLockWhitelisted4Rep':
    |        maxLockingPeriod = _maxLockingPeriod;
    |        avatar = _avatar;
  > |        lockingStartTime = _lockingStartTime;
    |        redeemEnableTime = _redeemEnableTime;
    |    }
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1236)

[33mWarning[0m for UnrestrictedWrite in contract 'DxLockWhitelisted4Rep':
    |        avatar = _avatar;
    |        lockingStartTime = _lockingStartTime;
  > |        redeemEnableTime = _redeemEnableTime;
    |    }
    |
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1237)

[33mWarning[0m for UnrestrictedWrite in contract 'DxLockWhitelisted4Rep':
    |    external
    |    {
  > |        priceOracleContract = _priceOracleContract;
    |        super._initialize(
    |        _avatar,
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1482)

[33mWarning[0m for UnrestrictedWrite in contract 'ERC20Burnable':
    |        require(account != address(0));
    |
  > |        _totalSupply = _totalSupply.sub(value);
    |        _balances[account] = _balances[account].sub(value);
    |        emit Transfer(account, address(0), value);
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(516)

[31mViolation[0m for LockedEther in contract 'ExternalLocking4Reputation':
    | */
    |
  > |contract ExternalLocking4Reputation is Locking4Reputation {
    |
    |    event Register(address indexed _beneficiary);
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1328)

[31mViolation[0m for UnrestrictedWrite in contract 'ExternalLocking4Reputation':
    |        require(scores[_beneficiary] > 0, "score should be > 0");
    |        uint256 score = scores[_beneficiary];
  > |        scores[_beneficiary] = 0;
    |        uint256 repRelation = score.mul(reputationReward);
    |        reputation = repRelation.div(totalScore);
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1127)

[31mViolation[0m for UnrestrictedWrite in contract 'ExternalLocking4Reputation':
    |
    |        //check that the reputation is sum zero
  > |        reputationRewardLeft = reputationRewardLeft.sub(reputation);
    |        require(
    |        ControllerInterface(
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1132)

[31mViolation[0m for UnrestrictedWrite in contract 'ExternalLocking4Reputation':
    |
    |        lockingId = keccak256(abi.encodePacked(address(this), lockingsCounter));
  > |        lockingsCounter = lockingsCounter.add(1);
    |
    |        Locker storage locker = lockers[_locker][lockingId];
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1186)

[31mViolation[0m for UnrestrictedWrite in contract 'ExternalLocking4Reputation':
    |
    |        Locker storage locker = lockers[_locker][lockingId];
  > |        locker.amount = _amount;
    |        // solhint-disable-next-line not-rely-on-time
    |        locker.releaseTime = now + _period;
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1189)

[31mViolation[0m for UnrestrictedWrite in contract 'ExternalLocking4Reputation':
    |        locker.amount = _amount;
    |        // solhint-disable-next-line not-rely-on-time
  > |        locker.releaseTime = now + _period;
    |        totalLocked = totalLocked.add(_amount);
    |        totalLockedLeft = totalLockedLeft.add(_amount);
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1191)

[31mViolation[0m for UnrestrictedWrite in contract 'ExternalLocking4Reputation':
    |        // solhint-disable-next-line not-rely-on-time
    |        locker.releaseTime = now + _period;
  > |        totalLocked = totalLocked.add(_amount);
    |        totalLockedLeft = totalLockedLeft.add(_amount);
    |        uint256 score = _period.mul(_amount).mul(_numerator).div(_denominator);
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1192)

[31mViolation[0m for UnrestrictedWrite in contract 'ExternalLocking4Reputation':
    |        locker.releaseTime = now + _period;
    |        totalLocked = totalLocked.add(_amount);
  > |        totalLockedLeft = totalLockedLeft.add(_amount);
    |        uint256 score = _period.mul(_amount).mul(_numerator).div(_denominator);
    |        require(score > 0, "score must me > 0");
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1193)

[31mViolation[0m for UnrestrictedWrite in contract 'ExternalLocking4Reputation':
    |        uint256 score = _period.mul(_amount).mul(_numerator).div(_denominator);
    |        require(score > 0, "score must me > 0");
  > |        scores[_locker] = scores[_locker].add(score);
    |        //verify that redeem will not overflow for this locker
    |        require((scores[_locker] * reputationReward)/scores[_locker] == reputationReward,
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1196)

[31mViolation[0m for UnrestrictedWrite in contract 'ExternalLocking4Reputation':
    |        require((scores[_locker] * reputationReward)/scores[_locker] == reputationReward,
    |        "score is too high");
  > |        totalScore = totalScore.add(score);
    |
    |        emit Lock(_locker, lockingId, _amount, _period);
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1200)

[31mViolation[0m for UnrestrictedWrite in contract 'ExternalLocking4Reputation':
    |        require(_redeemEnableTime >= _lockingEndTime, "redeemEnableTime >= lockingEndTime");
    |
  > |        reputationReward = _reputationReward;
    |        reputationRewardLeft = _reputationReward;
    |        lockingEndTime = _lockingEndTime;
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1231)

[31mViolation[0m for UnrestrictedWrite in contract 'ExternalLocking4Reputation':
    |
    |        reputationReward = _reputationReward;
  > |        reputationRewardLeft = _reputationReward;
    |        lockingEndTime = _lockingEndTime;
    |        maxLockingPeriod = _maxLockingPeriod;
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1232)

[31mViolation[0m for UnrestrictedWrite in contract 'ExternalLocking4Reputation':
    |        reputationReward = _reputationReward;
    |        reputationRewardLeft = _reputationReward;
  > |        lockingEndTime = _lockingEndTime;
    |        maxLockingPeriod = _maxLockingPeriod;
    |        avatar = _avatar;
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1233)

[31mViolation[0m for UnrestrictedWrite in contract 'ExternalLocking4Reputation':
    |        reputationRewardLeft = _reputationReward;
    |        lockingEndTime = _lockingEndTime;
  > |        maxLockingPeriod = _maxLockingPeriod;
    |        avatar = _avatar;
    |        lockingStartTime = _lockingStartTime;
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1234)

[31mViolation[0m for UnrestrictedWrite in contract 'ExternalLocking4Reputation':
    |        lockingEndTime = _lockingEndTime;
    |        maxLockingPeriod = _maxLockingPeriod;
  > |        avatar = _avatar;
    |        lockingStartTime = _lockingStartTime;
    |        redeemEnableTime = _redeemEnableTime;
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1235)

[31mViolation[0m for UnrestrictedWrite in contract 'ExternalLocking4Reputation':
    |        maxLockingPeriod = _maxLockingPeriod;
    |        avatar = _avatar;
  > |        lockingStartTime = _lockingStartTime;
    |        redeemEnableTime = _redeemEnableTime;
    |    }
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1236)

[31mViolation[0m for UnrestrictedWrite in contract 'ExternalLocking4Reputation':
    |        avatar = _avatar;
    |        lockingStartTime = _lockingStartTime;
  > |        redeemEnableTime = _redeemEnableTime;
    |    }
    |
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1237)

[31mViolation[0m for UnrestrictedWrite in contract 'ExternalLocking4Reputation':
    | */
    |
  > |contract ExternalLocking4Reputation is Locking4Reputation {
    |
    |    event Register(address indexed _beneficiary);
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1328)

[31mViolation[0m for UnrestrictedWrite in contract 'ExternalLocking4Reputation':
    |    {
    |        require(_claimingEndTime > _claimingStartTime, "_claimingEndTime should be greater than _claimingStartTime");
  > |        externalLockingContract = _externalLockingContract;
    |        getBalanceFuncSignature = _getBalanceFuncSignature;
    |        super._initialize(
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1365)

[31mViolation[0m for UnrestrictedWrite in contract 'ExternalLocking4Reputation':
    |        }
    |        require(externalLockers[beneficiary] == false, "claiming twice for the same beneficiary is not allowed");
  > |        externalLockers[beneficiary] = true;
    |        (bool result, bytes memory returnValue) =
    |        // solhint-disable-next-line avoid-call-value,avoid-low-level-calls
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1392)

[31mViolation[0m for UnrestrictedWrite in contract 'Locking4Reputation':
    |        require(scores[_beneficiary] > 0, "score should be > 0");
    |        uint256 score = scores[_beneficiary];
  > |        scores[_beneficiary] = 0;
    |        uint256 repRelation = score.mul(reputationReward);
    |        reputation = repRelation.div(totalScore);
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1127)

[31mViolation[0m for UnrestrictedWrite in contract 'Locking4Reputation':
    |
    |        //check that the reputation is sum zero
  > |        reputationRewardLeft = reputationRewardLeft.sub(reputation);
    |        require(
    |        ControllerInterface(
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1132)

[33mWarning[0m for TODAmount in contract 'LockingEth4Reputation':
    |    function release(address payable _beneficiary, bytes32 _lockingId) public returns(bool) {
    |        uint256 amount = super._release(_beneficiary, _lockingId);
  > |        _beneficiary.transfer(amount);
    |
    |        return true;
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1291)

[33mWarning[0m for TODReceiver in contract 'LockingEth4Reputation':
    |    function release(address payable _beneficiary, bytes32 _lockingId) public returns(bool) {
    |        uint256 amount = super._release(_beneficiary, _lockingId);
  > |        _beneficiary.transfer(amount);
    |
    |        return true;
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1291)

[33mWarning[0m for UnrestrictedWrite in contract 'LockingEth4Reputation':
    |        require(scores[_beneficiary] > 0, "score should be > 0");
    |        uint256 score = scores[_beneficiary];
  > |        scores[_beneficiary] = 0;
    |        uint256 repRelation = score.mul(reputationReward);
    |        reputation = repRelation.div(totalScore);
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1127)

[33mWarning[0m for UnrestrictedWrite in contract 'LockingEth4Reputation':
    |        require(locker.amount > 0, "amount should be > 0");
    |        amount = locker.amount;
  > |        locker.amount = 0;
    |        // solhint-disable-next-line not-rely-on-time
    |        require(block.timestamp > locker.releaseTime, "check the lock period pass");
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1151)

[33mWarning[0m for UnrestrictedWrite in contract 'LockingEth4Reputation':
    |        require(_redeemEnableTime >= _lockingEndTime, "redeemEnableTime >= lockingEndTime");
    |
  > |        reputationReward = _reputationReward;
    |        reputationRewardLeft = _reputationReward;
    |        lockingEndTime = _lockingEndTime;
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1231)

[33mWarning[0m for UnrestrictedWrite in contract 'LockingEth4Reputation':
    |
    |        reputationReward = _reputationReward;
  > |        reputationRewardLeft = _reputationReward;
    |        lockingEndTime = _lockingEndTime;
    |        maxLockingPeriod = _maxLockingPeriod;
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1232)

[33mWarning[0m for UnrestrictedWrite in contract 'LockingEth4Reputation':
    |        reputationReward = _reputationReward;
    |        reputationRewardLeft = _reputationReward;
  > |        lockingEndTime = _lockingEndTime;
    |        maxLockingPeriod = _maxLockingPeriod;
    |        avatar = _avatar;
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1233)

[33mWarning[0m for UnrestrictedWrite in contract 'LockingEth4Reputation':
    |        reputationRewardLeft = _reputationReward;
    |        lockingEndTime = _lockingEndTime;
  > |        maxLockingPeriod = _maxLockingPeriod;
    |        avatar = _avatar;
    |        lockingStartTime = _lockingStartTime;
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1234)

[33mWarning[0m for UnrestrictedWrite in contract 'LockingEth4Reputation':
    |        lockingEndTime = _lockingEndTime;
    |        maxLockingPeriod = _maxLockingPeriod;
  > |        avatar = _avatar;
    |        lockingStartTime = _lockingStartTime;
    |        redeemEnableTime = _redeemEnableTime;
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1235)

[33mWarning[0m for UnrestrictedWrite in contract 'LockingEth4Reputation':
    |        maxLockingPeriod = _maxLockingPeriod;
    |        avatar = _avatar;
  > |        lockingStartTime = _lockingStartTime;
    |        redeemEnableTime = _redeemEnableTime;
    |    }
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1236)

[33mWarning[0m for UnrestrictedWrite in contract 'LockingEth4Reputation':
    |        avatar = _avatar;
    |        lockingStartTime = _lockingStartTime;
  > |        redeemEnableTime = _redeemEnableTime;
    |    }
    |
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1237)

[31mViolation[0m for LockedEther in contract 'LockingToken4Reputation':
    | */
    |
  > |contract LockingToken4Reputation is Locking4Reputation {
    |    using SafeERC20 for address;
    |
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1449)

[31mViolation[0m for RepeatedCall in contract 'LockingToken4Reputation':
    |        (bool success, bytes memory returnValue) =
    |        // solhint-disable-next-line avoid-low-level-calls
  > |        _erc20Addr.call(abi.encodeWithSelector(TRANSFERFROM_SELECTOR, _from, _to, _value));
    |        // call return false when something wrong
    |        require(success);
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(688)

[33mWarning[0m for RepeatedCall in contract 'LockingToken4Reputation':
    |        (bool success, bytes memory returnValue) =
    |        // solhint-disable-next-line avoid-low-level-calls
  > |        _erc20Addr.call(abi.encodeWithSelector(TRANSFER_SELECTOR, _to, _value));
    |        // call return false when something wrong
    |        require(success);
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(674)

[33mWarning[0m for UnrestrictedWrite in contract 'LockingToken4Reputation':
    |        require(scores[_beneficiary] > 0, "score should be > 0");
    |        uint256 score = scores[_beneficiary];
  > |        scores[_beneficiary] = 0;
    |        uint256 repRelation = score.mul(reputationReward);
    |        reputation = repRelation.div(totalScore);
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1127)

[33mWarning[0m for UnrestrictedWrite in contract 'LockingToken4Reputation':
    |        require(locker.amount > 0, "amount should be > 0");
    |        amount = locker.amount;
  > |        locker.amount = 0;
    |        // solhint-disable-next-line not-rely-on-time
    |        require(block.timestamp > locker.releaseTime, "check the lock period pass");
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1151)

[33mWarning[0m for UnrestrictedWrite in contract 'LockingToken4Reputation':
    |        require(_redeemEnableTime >= _lockingEndTime, "redeemEnableTime >= lockingEndTime");
    |
  > |        reputationReward = _reputationReward;
    |        reputationRewardLeft = _reputationReward;
    |        lockingEndTime = _lockingEndTime;
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1231)

[33mWarning[0m for UnrestrictedWrite in contract 'LockingToken4Reputation':
    |
    |        reputationReward = _reputationReward;
  > |        reputationRewardLeft = _reputationReward;
    |        lockingEndTime = _lockingEndTime;
    |        maxLockingPeriod = _maxLockingPeriod;
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1232)

[33mWarning[0m for UnrestrictedWrite in contract 'LockingToken4Reputation':
    |        reputationReward = _reputationReward;
    |        reputationRewardLeft = _reputationReward;
  > |        lockingEndTime = _lockingEndTime;
    |        maxLockingPeriod = _maxLockingPeriod;
    |        avatar = _avatar;
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1233)

[33mWarning[0m for UnrestrictedWrite in contract 'LockingToken4Reputation':
    |        reputationRewardLeft = _reputationReward;
    |        lockingEndTime = _lockingEndTime;
  > |        maxLockingPeriod = _maxLockingPeriod;
    |        avatar = _avatar;
    |        lockingStartTime = _lockingStartTime;
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1234)

[33mWarning[0m for UnrestrictedWrite in contract 'LockingToken4Reputation':
    |        lockingEndTime = _lockingEndTime;
    |        maxLockingPeriod = _maxLockingPeriod;
  > |        avatar = _avatar;
    |        lockingStartTime = _lockingStartTime;
    |        redeemEnableTime = _redeemEnableTime;
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1235)

[33mWarning[0m for UnrestrictedWrite in contract 'LockingToken4Reputation':
    |        maxLockingPeriod = _maxLockingPeriod;
    |        avatar = _avatar;
  > |        lockingStartTime = _lockingStartTime;
    |        redeemEnableTime = _redeemEnableTime;
    |    }
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1236)

[33mWarning[0m for UnrestrictedWrite in contract 'LockingToken4Reputation':
    |        avatar = _avatar;
    |        lockingStartTime = _lockingStartTime;
  > |        redeemEnableTime = _redeemEnableTime;
    |    }
    |
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1237)

[33mWarning[0m for UnrestrictedWrite in contract 'LockingToken4Reputation':
    |    external
    |    {
  > |        priceOracleContract = _priceOracleContract;
    |        super._initialize(
    |        _avatar,
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(1482)

[31mViolation[0m for UnrestrictedWrite in contract 'Reputation':
    | */
    |
  > |contract Reputation is Ownable {
    |
    |    uint8 public decimals = 18;             //Number of decimals of the smallest unit
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(91)

[33mWarning[0m for UnrestrictedWrite in contract 'Reputation':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipTransferred(_owner, address(0));
  > |        _owner = address(0);
    |    }
    |
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(54)

[33mWarning[0m for UnrestrictedWrite in contract 'Reputation':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(72)

[33mWarning[0m for UnrestrictedWrite in contract 'Reputation':
    | */
    |
  > |contract Reputation is Ownable {
    |
    |    uint8 public decimals = 18;             //Number of decimals of the smallest unit
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(91)

[33mWarning[0m for UnrestrictedWrite in contract 'Reputation':
    |        if ((checkpoints.length == 0) || (checkpoints[checkpoints.length - 1].fromBlock < block.number)) {
    |            Checkpoint storage newCheckPoint = checkpoints[checkpoints.length++];
  > |            newCheckPoint.fromBlock = uint128(block.number);
    |            newCheckPoint.value = uint128(_value);
    |        } else {
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(244)

[33mWarning[0m for UnrestrictedWrite in contract 'Reputation':
    |            Checkpoint storage newCheckPoint = checkpoints[checkpoints.length++];
    |            newCheckPoint.fromBlock = uint128(block.number);
  > |            newCheckPoint.value = uint128(_value);
    |        } else {
    |            Checkpoint storage oldCheckPoint = checkpoints[checkpoints.length-1];
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(245)

[33mWarning[0m for UnrestrictedWrite in contract 'Reputation':
    |        } else {
    |            Checkpoint storage oldCheckPoint = checkpoints[checkpoints.length-1];
  > |            oldCheckPoint.value = uint128(_value);
    |        }
    |    }
  at /unique_chucks/27/0xa1779af621aefae2d4a3f7aa084d1e4723b33b0e.sol(248)