Processing contract: /unique_chucks/36/0xa88ecdf1b7c8a4dc62ec0b83956dbd1158e33237.sol:IPUXcrowdsale
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/36/0xa88ecdf1b7c8a4dc62ec0b83956dbd1158e33237.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/36/0xa88ecdf1b7c8a4dc62ec0b83956dbd1158e33237.sol:TokenRecipient
Processing contract: /unique_chucks/36/0xa88ecdf1b7c8a4dc62ec0b83956dbd1158e33237.sol:owned
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for TODAmount in contract 'IPUXcrowdsale':
    |     */
    |    function manualWithdrawEther()onlyOwner public{
  > |        address(owner).transfer(address(this).balance);
    |    }
    |    
  at /unique_chucks/36/0xa88ecdf1b7c8a4dc62ec0b83956dbd1158e33237.sol(210)

[31mViolation[0m for TODReceiver in contract 'IPUXcrowdsale':
    |		fundRaised += msg.value;
    |		// transfer ether to owner
  > |		owner.transfer(msg.value);                                           
    |	}
    |
  at /unique_chucks/36/0xa88ecdf1b7c8a4dc62ec0b83956dbd1158e33237.sol(186)

[31mViolation[0m for TODReceiver in contract 'IPUXcrowdsale':
    |     */
    |    function manualWithdrawEther()onlyOwner public{
  > |        address(owner).transfer(address(this).balance);
    |    }
    |    
  at /unique_chucks/36/0xa88ecdf1b7c8a4dc62ec0b83956dbd1158e33237.sol(210)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'IPUXcrowdsale':
    |		fundRaised += msg.value;
    |		// transfer ether to owner
  > |		owner.transfer(msg.value);                                           
    |	}
    |
  at /unique_chucks/36/0xa88ecdf1b7c8a4dc62ec0b83956dbd1158e33237.sol(186)

[31mViolation[0m for UnrestrictedWrite in contract 'IPUXcrowdsale':
    |		tokenContract.transfer(msg.sender, finalTokens);
    |		}
  > |		fundRaised += msg.value;
    |		// transfer ether to owner
    |		owner.transfer(msg.value);                                           
  at /unique_chucks/36/0xa88ecdf1b7c8a4dc62ec0b83956dbd1158e33237.sol(184)

[33mWarning[0m for UnrestrictedWrite in contract 'IPUXcrowdsale':
    |
    |    function transferOwnership(address payable newOwner) onlyOwner public {
  > |        owner = newOwner;
    |    }
    |}
  at /unique_chucks/36/0xa88ecdf1b7c8a4dc62ec0b83956dbd1158e33237.sol(99)

[33mWarning[0m for UnrestrictedWrite in contract 'IPUXcrowdsale':
    |    function updateToken(address _tokenAddress, uint256 _tokenDecimal) public onlyOwner {
    |        require(_tokenAddress != address(0), 'Address is invalid');
  > |        tokenAddress = _tokenAddress;
    |        tokenDecimal = _tokenDecimal;
    |    }
  at /unique_chucks/36/0xa88ecdf1b7c8a4dc62ec0b83956dbd1158e33237.sol(165)

[33mWarning[0m for UnrestrictedWrite in contract 'IPUXcrowdsale':
    |        require(_tokenAddress != address(0), 'Address is invalid');
    |        tokenAddress = _tokenAddress;
  > |        tokenDecimal = _tokenDecimal;
    |    }
    |    
  at /unique_chucks/36/0xa88ecdf1b7c8a4dc62ec0b83956dbd1158e33237.sol(166)

[31mViolation[0m for MissingInputValidation in contract 'owned':
    |    }
    |
  > |    function transferOwnership(address payable newOwner) onlyOwner public {
    |        owner = newOwner;
    |    }
  at /unique_chucks/36/0xa88ecdf1b7c8a4dc62ec0b83956dbd1158e33237.sol(98)

[33mWarning[0m for UnrestrictedWrite in contract 'owned':
    |
    |    function transferOwnership(address payable newOwner) onlyOwner public {
  > |        owner = newOwner;
    |    }
    |}
  at /unique_chucks/36/0xa88ecdf1b7c8a4dc62ec0b83956dbd1158e33237.sol(99)