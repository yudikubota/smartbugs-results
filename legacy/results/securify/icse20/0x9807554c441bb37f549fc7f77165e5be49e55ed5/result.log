Processing contract: /unique_chucks/28/0x9807554c441bb37f549fc7f77165e5be49e55ed5.sol:Bridge
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/28/0x9807554c441bb37f549fc7f77165e5be49e55ed5.sol:CTokenInterface
Processing contract: /unique_chucks/28/0x9807554c441bb37f549fc7f77165e5be49e55ed5.sol:CTokens
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/28/0x9807554c441bb37f549fc7f77165e5be49e55ed5.sol:DSMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/28/0x9807554c441bb37f549fc7f77165e5be49e55ed5.sol:ERC20Interface
Processing contract: /unique_chucks/28/0x9807554c441bb37f549fc7f77165e5be49e55ed5.sol:Helper
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/28/0x9807554c441bb37f549fc7f77165e5be49e55ed5.sol:MakerCompBridge
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/28/0x9807554c441bb37f549fc7f77165e5be49e55ed5.sol:RegistryInterface
Processing contract: /unique_chucks/28/0x9807554c441bb37f549fc7f77165e5be49e55ed5.sol:UserWalletInterface
[31mViolation[0m for RepeatedCall in contract 'Bridge':
    |        if (withdrawAmt > deposited[msg.sender]) {
    |            withdrawAmt = deposited[msg.sender];
  > |            daiAmt = wmul(withdrawAmt, cToken.exchangeRateCurrent());
    |        }
    |        require(cToken.redeem(withdrawAmt) == 0, "something went wrong");
  at /unique_chucks/28/0x9807554c441bb37f549fc7f77165e5be49e55ed5.sol(145)

[31mViolation[0m for UnrestrictedWrite in contract 'Bridge':
    |pragma solidity ^0.5.7;
    |
  > |interface RegistryInterface {
    |    function proxies(address) external view returns (address);
    |}
  at /unique_chucks/28/0x9807554c441bb37f549fc7f77165e5be49e55ed5.sol(3)

[31mViolation[0m for UnrestrictedWrite in contract 'Bridge':
    |        require(isAdmin[msg.sender], "Address not an admin");
    |        CTokenData memory setCToken = CTokenData(cToken, factor);
  > |        cTokenAddr.push(setCToken);
    |        cArrLength++;
    |    }
  at /unique_chucks/28/0x9807554c441bb37f549fc7f77165e5be49e55ed5.sol(115)

[31mViolation[0m for UnrestrictedWrite in contract 'Bridge':
    |        CTokenData memory setCToken = CTokenData(cToken, factor);
    |        cTokenAddr.push(setCToken);
  > |        cArrLength++;
    |    }
    |
  at /unique_chucks/28/0x9807554c441bb37f549fc7f77165e5be49e55ed5.sol(116)

[31mViolation[0m for UnrestrictedWrite in contract 'CTokens':
    |pragma solidity ^0.5.7;
    |
  > |interface RegistryInterface {
    |    function proxies(address) external view returns (address);
    |}
  at /unique_chucks/28/0x9807554c441bb37f549fc7f77165e5be49e55ed5.sol(3)

[31mViolation[0m for UnrestrictedWrite in contract 'CTokens':
    |        require(isAdmin[msg.sender], "Address not an admin");
    |        CTokenData memory setCToken = CTokenData(cToken, factor);
  > |        cTokenAddr.push(setCToken);
    |        cArrLength++;
    |    }
  at /unique_chucks/28/0x9807554c441bb37f549fc7f77165e5be49e55ed5.sol(115)

[31mViolation[0m for UnrestrictedWrite in contract 'CTokens':
    |        CTokenData memory setCToken = CTokenData(cToken, factor);
    |        cTokenAddr.push(setCToken);
  > |        cArrLength++;
    |    }
    |
  at /unique_chucks/28/0x9807554c441bb37f549fc7f77165e5be49e55ed5.sol(116)

[31mViolation[0m for MissingInputValidation in contract 'Helper':
    |    // address public cDaiAdd = 0x6D7F0754FFeb405d23C51CE938289d4835bE3b14; // Rinkeby
    |    address public registryAdd = 0xF5DCe57282A584D2746FaF1593d3121Fcac444dC;
  > |    mapping (address => uint) public deposited; // Amount of CToken deposited
    |    mapping (address => bool) public isAdmin;
    |
  at /unique_chucks/28/0x9807554c441bb37f549fc7f77165e5be49e55ed5.sol(76)

[31mViolation[0m for MissingInputValidation in contract 'Helper':
    |    address public registryAdd = 0xF5DCe57282A584D2746FaF1593d3121Fcac444dC;
    |    mapping (address => uint) public deposited; // Amount of CToken deposited
  > |    mapping (address => bool) public isAdmin;
    |
    |    /**
  at /unique_chucks/28/0x9807554c441bb37f549fc7f77165e5be49e55ed5.sol(77)

[31mViolation[0m for LockedEther in contract 'MakerCompBridge':
    |
    |
  > |contract MakerCompBridge is Bridge {
    |
    |    uint public version;
  at /unique_chucks/28/0x9807554c441bb37f549fc7f77165e5be49e55ed5.sol(197)

[31mViolation[0m for RepeatedCall in contract 'MakerCompBridge':
    |        if (withdrawAmt > deposited[msg.sender]) {
    |            withdrawAmt = deposited[msg.sender];
  > |            daiAmt = wmul(withdrawAmt, cToken.exchangeRateCurrent());
    |        }
    |        require(cToken.redeem(withdrawAmt) == 0, "something went wrong");
  at /unique_chucks/28/0x9807554c441bb37f549fc7f77165e5be49e55ed5.sol(145)

[31mViolation[0m for UnrestrictedWrite in contract 'MakerCompBridge':
    |pragma solidity ^0.5.7;
    |
  > |interface RegistryInterface {
    |    function proxies(address) external view returns (address);
    |}
  at /unique_chucks/28/0x9807554c441bb37f549fc7f77165e5be49e55ed5.sol(3)

[31mViolation[0m for UnrestrictedWrite in contract 'MakerCompBridge':
    |        require(isAdmin[msg.sender], "Address not an admin");
    |        CTokenData memory setCToken = CTokenData(cToken, factor);
  > |        cTokenAddr.push(setCToken);
    |        cArrLength++;
    |    }
  at /unique_chucks/28/0x9807554c441bb37f549fc7f77165e5be49e55ed5.sol(115)

[31mViolation[0m for UnrestrictedWrite in contract 'MakerCompBridge':
    |        CTokenData memory setCToken = CTokenData(cToken, factor);
    |        cTokenAddr.push(setCToken);
  > |        cArrLength++;
    |    }
    |
  at /unique_chucks/28/0x9807554c441bb37f549fc7f77165e5be49e55ed5.sol(116)