Processing contract: /unique_chucks/16/0x77cf2198b76036807361db84aac6d2325281e433.sol:ApproveAndCallFallBack
Processing contract: /unique_chucks/16/0x77cf2198b76036807361db84aac6d2325281e433.sol:CryptotechNetworkToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/16/0x77cf2198b76036807361db84aac6d2325281e433.sol:ERC20Interface
Processing contract: /unique_chucks/16/0x77cf2198b76036807361db84aac6d2325281e433.sol:Owned
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/16/0x77cf2198b76036807361db84aac6d2325281e433.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for LockedEther in contract 'CryptotechNetworkToken':
    |}
    |
  > |contract CryptotechNetworkToken is ERC20Interface, Owned {
    |    using SafeMath for uint;
    |
  at /unique_chucks/16/0x77cf2198b76036807361db84aac6d2325281e433.sol(69)

[31mViolation[0m for UnrestrictedWrite in contract 'CryptotechNetworkToken':
    |    function transfer(address to, uint tokens) public returns (bool success) {
    |        balances[msg.sender] = balances[msg.sender].sub(tokens);
  > |        balances[to] = balances[to].add(tokens);
    |        emit Transfer(msg.sender, to, tokens);
    |        return true;
  at /unique_chucks/16/0x77cf2198b76036807361db84aac6d2325281e433.sol(99)

[31mViolation[0m for UnrestrictedWrite in contract 'CryptotechNetworkToken':
    |
    |    function transferFrom(address from, address to, uint tokens) public returns (bool success) {
  > |        balances[from] = balances[from].sub(tokens);
    |        allowed[from][msg.sender] = allowed[from][msg.sender].sub(tokens);
    |        balances[to] = balances[to].add(tokens);
  at /unique_chucks/16/0x77cf2198b76036807361db84aac6d2325281e433.sol(111)

[31mViolation[0m for UnrestrictedWrite in contract 'CryptotechNetworkToken':
    |        balances[from] = balances[from].sub(tokens);
    |        allowed[from][msg.sender] = allowed[from][msg.sender].sub(tokens);
  > |        balances[to] = balances[to].add(tokens);
    |        emit Transfer(from, to, tokens);
    |        return true;
  at /unique_chucks/16/0x77cf2198b76036807361db84aac6d2325281e433.sol(113)

[33mWarning[0m for UnrestrictedWrite in contract 'CryptotechNetworkToken':
    |
    |    function transferOwnership(address _newOwner) public onlyOwner {
  > |        newOwner = _newOwner;
    |    }
    |    function acceptOwnership() public {
  at /unique_chucks/16/0x77cf2198b76036807361db84aac6d2325281e433.sol(59)

[33mWarning[0m for UnrestrictedWrite in contract 'CryptotechNetworkToken':
    |        require(msg.sender == newOwner);
    |        emit OwnershipTransferred(owner, newOwner);
  > |        owner = newOwner;
    |        newOwner = address(0);
    |    }
  at /unique_chucks/16/0x77cf2198b76036807361db84aac6d2325281e433.sol(64)

[33mWarning[0m for UnrestrictedWrite in contract 'CryptotechNetworkToken':
    |        emit OwnershipTransferred(owner, newOwner);
    |        owner = newOwner;
  > |        newOwner = address(0);
    |    }
    |}
  at /unique_chucks/16/0x77cf2198b76036807361db84aac6d2325281e433.sol(65)

[31mViolation[0m for MissingInputValidation in contract 'Owned':
    |    }
    |
  > |    function transferOwnership(address _newOwner) public onlyOwner {
    |        newOwner = _newOwner;
    |    }
  at /unique_chucks/16/0x77cf2198b76036807361db84aac6d2325281e433.sol(58)

[33mWarning[0m for UnrestrictedWrite in contract 'Owned':
    |
    |    function transferOwnership(address _newOwner) public onlyOwner {
  > |        newOwner = _newOwner;
    |    }
    |    function acceptOwnership() public {
  at /unique_chucks/16/0x77cf2198b76036807361db84aac6d2325281e433.sol(59)

[33mWarning[0m for UnrestrictedWrite in contract 'Owned':
    |        require(msg.sender == newOwner);
    |        emit OwnershipTransferred(owner, newOwner);
  > |        owner = newOwner;
    |        newOwner = address(0);
    |    }
  at /unique_chucks/16/0x77cf2198b76036807361db84aac6d2325281e433.sol(64)

[33mWarning[0m for UnrestrictedWrite in contract 'Owned':
    |        emit OwnershipTransferred(owner, newOwner);
    |        owner = newOwner;
  > |        newOwner = address(0);
    |    }
    |}
  at /unique_chucks/16/0x77cf2198b76036807361db84aac6d2325281e433.sol(65)