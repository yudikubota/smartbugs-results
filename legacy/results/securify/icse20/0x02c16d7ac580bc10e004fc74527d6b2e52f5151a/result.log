Processing contract: /unique_contracts/0x02c16d7ac580bc10e004fc74527d6b2e52f5151a.sol:Approvable
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0x02c16d7ac580bc10e004fc74527d6b2e52f5151a.sol:NodeRegistry
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0x02c16d7ac580bc10e004fc74527d6b2e52f5151a.sol:Ownable
Processing contract: /unique_contracts/0x02c16d7ac580bc10e004fc74527d6b2e52f5151a.sol:StoringCreationMeta
[31mViolation[0m for MissingInputValidation in contract 'Approvable':
    |    }
    |
  > |    function approveAddress(address _address) public onlyOwner {
    |        _approvedAddress[_address] = true;
    |    }
  at /unique_contracts/0x02c16d7ac580bc10e004fc74527d6b2e52f5151a.sol(75)

[31mViolation[0m for MissingInputValidation in contract 'Approvable':
    |    }
    |
  > |    function revokeApproval(address _address) public onlyOwner {
    |        _approvedAddress[_address] = false;
    |    }
  at /unique_contracts/0x02c16d7ac580bc10e004fc74527d6b2e52f5151a.sol(79)

[31mViolation[0m for UnrestrictedWrite in contract 'Approvable':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_contracts/0x02c16d7ac580bc10e004fc74527d6b2e52f5151a.sol(56)

[33mWarning[0m for UnrestrictedWrite in contract 'Approvable':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_contracts/0x02c16d7ac580bc10e004fc74527d6b2e52f5151a.sol(56)

[33mWarning[0m for UnrestrictedWrite in contract 'Approvable':
    |
    |    function approveAddress(address _address) public onlyOwner {
  > |        _approvedAddress[_address] = true;
    |    }
    |
  at /unique_contracts/0x02c16d7ac580bc10e004fc74527d6b2e52f5151a.sol(76)

[33mWarning[0m for UnrestrictedWrite in contract 'Approvable':
    |
    |    function revokeApproval(address _address) public onlyOwner {
  > |        _approvedAddress[_address] = false;
    |    }
    |}
  at /unique_contracts/0x02c16d7ac580bc10e004fc74527d6b2e52f5151a.sol(80)

[31mViolation[0m for LockedEther in contract 'NodeRegistry':
    |// File: contracts/NodeRegistry.sol
    |
  > |contract NodeRegistry is StoringCreationMeta, Approvable {
    |    mapping(address => string) public nodeIp;
    |    mapping(address => string) public nodeWs;
  at /unique_contracts/0x02c16d7ac580bc10e004fc74527d6b2e52f5151a.sol(98)

[33mWarning[0m for UnrestrictedWrite in contract 'NodeRegistry':
    |pragma solidity ^0.5.3;
    |
  > |// File: contracts/utility/Ownable.sol
    |
    |contract Ownable {
  at /unique_contracts/0x02c16d7ac580bc10e004fc74527d6b2e52f5151a.sol(3)

[33mWarning[0m for UnrestrictedWrite in contract 'NodeRegistry':
    |// File: contracts/NodeRegistry.sol
    |
  > |contract NodeRegistry is StoringCreationMeta, Approvable {
    |    mapping(address => string) public nodeIp;
    |    mapping(address => string) public nodeWs;
  at /unique_contracts/0x02c16d7ac580bc10e004fc74527d6b2e52f5151a.sol(98)

[33mWarning[0m for UnrestrictedWrite in contract 'NodeRegistry':
    |
    |        // Save to global nodes
  > |        availableNodes.items.push(_nodeAddress);
    |        availableNodes.position[_nodeAddress] = availableNodes.items.length;
    |    }
  at /unique_contracts/0x02c16d7ac580bc10e004fc74527d6b2e52f5151a.sol(180)

[33mWarning[0m for UnrestrictedWrite in contract 'NodeRegistry':
    |        // Save to global nodes
    |        availableNodes.items.push(_nodeAddress);
  > |        availableNodes.position[_nodeAddress] = availableNodes.items.length;
    |    }
    |
  at /unique_contracts/0x02c16d7ac580bc10e004fc74527d6b2e52f5151a.sol(181)

[33mWarning[0m for UnrestrictedWrite in contract 'NodeRegistry':
    |
    |    function _setNodeLimit(address _user, uint _limit) private {
  > |        nodeCountLimit[_user] = _limit;
    |
    |        _pruneUserNodes(_user, _limit);
  at /unique_contracts/0x02c16d7ac580bc10e004fc74527d6b2e52f5151a.sol(201)