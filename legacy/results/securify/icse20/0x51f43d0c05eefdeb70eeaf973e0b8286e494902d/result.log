Processing contract: /unique_chucks/45/0x51f43d0c05eefdeb70eeaf973e0b8286e494902d.sol:ERC20Standard
Processing contract: /unique_chucks/45/0x51f43d0c05eefdeb70eeaf973e0b8286e494902d.sol:Exsender
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/45/0x51f43d0c05eefdeb70eeaf973e0b8286e494902d.sol:Owned
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/45/0x51f43d0c05eefdeb70eeaf973e0b8286e494902d.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for RepeatedCall in contract 'Exsender':
    |    function distributeForeignTokenWithUnifiedAmount(ERC20Standard _tokenContract, address[] calldata _addresses, uint256 _amount) external {
    |        for (uint256 i = 0; i < _addresses.length; i++) {
  > |            _tokenContract.transferFrom(msg.sender, _addresses[i], _amount);
    |        }
    |    }
  at /unique_chucks/45/0x51f43d0c05eefdeb70eeaf973e0b8286e494902d.sol(84)

[31mViolation[0m for RepeatedCall in contract 'Exsender':
    |        require(_addresses.length == _amounts.length);
    |        for (uint256 i = 0; i < _addresses.length; i++) {
  > |            _tokenContract.transferFrom(msg.sender, _addresses[i], _amounts[i]);
    |        }
    |    }
  at /unique_chucks/45/0x51f43d0c05eefdeb70eeaf973e0b8286e494902d.sol(91)

[31mViolation[0m for RepeatedCall in contract 'Exsender':
    |        require(msg.value >= sumArray(_amounts));
    |        for (uint256 i = 0; i < _addresses.length; i++) {
  > |            _addresses[i].transfer(_amounts[i]);
    |        }
    |    }
  at /unique_chucks/45/0x51f43d0c05eefdeb70eeaf973e0b8286e494902d.sol(106)

[31mViolation[0m for RepeatedCall in contract 'Exsender':
    |    function liftTokensToSingleAddress(ERC20Standard[] calldata _tokenContract, address _receiver, uint256[] calldata _amounts) external {
    |        for (uint256 i = 0; i < _tokenContract.length; i++) {
  > |            _tokenContract[i].transferFrom(msg.sender, _receiver, _amounts[i]);
    |        }
    |    }
  at /unique_chucks/45/0x51f43d0c05eefdeb70eeaf973e0b8286e494902d.sol(112)

[31mViolation[0m for RepeatedCall in contract 'Exsender':
    |    function liftTokensToMultipleAddresses(ERC20Standard[] calldata _tokenContract, address[] calldata _receiver, uint256[] calldata _amounts) external {
    |        for (uint256 i = 0; i < _tokenContract.length; i++) {
  > |            _tokenContract[i].transferFrom(msg.sender, _receiver[i], _amounts[i]);
    |        }
    |    }
  at /unique_chucks/45/0x51f43d0c05eefdeb70eeaf973e0b8286e494902d.sol(118)

[31mViolation[0m for TODAmount in contract 'Exsender':
    |    function withdrawFund() onlyOwner public {
    |        uint256 balance = address(this).balance;
  > |        owner.transfer(balance);
    |    }
    |    
  at /unique_chucks/45/0x51f43d0c05eefdeb70eeaf973e0b8286e494902d.sol(134)

[33mWarning[0m for TODAmount in contract 'Exsender':
    |        uint256 amount = msg.value.div(_addresses.length);
    |        for (uint256 i = 0; i < _addresses.length; i++) {
  > |            _addresses[i].transfer(amount);
    |        }
    |    }
  at /unique_chucks/45/0x51f43d0c05eefdeb70eeaf973e0b8286e494902d.sol(98)

[31mViolation[0m for TODReceiver in contract 'Exsender':
    |    function withdrawFund() onlyOwner public {
    |        uint256 balance = address(this).balance;
  > |        owner.transfer(balance);
    |    }
    |    
  at /unique_chucks/45/0x51f43d0c05eefdeb70eeaf973e0b8286e494902d.sol(134)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'Exsender':
    |        require(msg.value >= sumArray(_amounts));
    |        for (uint256 i = 0; i < _addresses.length; i++) {
  > |            _addresses[i].transfer(_amounts[i]);
    |        }
    |    }
  at /unique_chucks/45/0x51f43d0c05eefdeb70eeaf973e0b8286e494902d.sol(106)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'Exsender':
    |        uint256 amount = msg.value.div(_addresses.length);
    |        for (uint256 i = 0; i < _addresses.length; i++) {
  > |            _addresses[i].transfer(amount);
    |        }
    |    }
  at /unique_chucks/45/0x51f43d0c05eefdeb70eeaf973e0b8286e494902d.sol(98)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'Exsender':
    |        require(_amount <= address(this).balance);
    |        emit TransferEther(address(this), _receiver, _amount);
  > |        _receiver.transfer(_amount);
    |    }
    |    
  at /unique_chucks/45/0x51f43d0c05eefdeb70eeaf973e0b8286e494902d.sol(129)

[33mWarning[0m for UnrestrictedWrite in contract 'Exsender':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(owner, newOwner);
  > |        owner = newOwner;
    |    }
    |
  at /unique_chucks/45/0x51f43d0c05eefdeb70eeaf973e0b8286e494902d.sol(74)

[33mWarning[0m for UnrestrictedWrite in contract 'Owned':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(owner, newOwner);
  > |        owner = newOwner;
    |    }
    |
  at /unique_chucks/45/0x51f43d0c05eefdeb70eeaf973e0b8286e494902d.sol(74)