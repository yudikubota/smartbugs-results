Processing contract: /unique_contracts/0x000000000063b99b8036c31e91c64fc89bff9ca7.sol:ImmutableCreate2Factory
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for LockedEther in contract 'ImmutableCreate2Factory':
    | * caution and please share any exploits or optimizations you discover.
    | */
  > |contract ImmutableCreate2Factory {
    |  // mapping to track which addresses have already been deployed.
    |  mapping(address => bool) private _deployed;
  at /unique_contracts/0x000000000063b99b8036c31e91c64fc89bff9ca7.sol(19)

[31mViolation[0m for MissingInputValidation in contract 'ImmutableCreate2Factory':
    |   * if a contract already exists at that address.
    |   */
  > |  function safeCreate2(
    |    bytes32 salt,
    |    bytes calldata initializationCode
  at /unique_contracts/0x000000000063b99b8036c31e91c64fc89bff9ca7.sol(34)

[31mViolation[0m for MissingInputValidation in contract 'ImmutableCreate2Factory':
    |   * if a contract has already been deployed to that address.
    |   */
  > |  function findCreate2Address(
    |    bytes32 salt,
    |    bytes calldata initCode
  at /unique_contracts/0x000000000063b99b8036c31e91c64fc89bff9ca7.sol(103)

[31mViolation[0m for MissingInputValidation in contract 'ImmutableCreate2Factory':
    |   * if a contract has already been deployed to that address.
    |   */
  > |  function findCreate2AddressViaHash(
    |    bytes32 salt,
    |    bytes32 initCodeHash
  at /unique_contracts/0x000000000063b99b8036c31e91c64fc89bff9ca7.sol(147)

[31mViolation[0m for MissingInputValidation in contract 'ImmutableCreate2Factory':
    |   * @return True if the contract has been deployed, false otherwise.
    |   */
  > |  function hasBeenDeployed(
    |    address deploymentAddress
    |  ) external view returns (bool) {
  at /unique_contracts/0x000000000063b99b8036c31e91c64fc89bff9ca7.sol(179)

[31mViolation[0m for UnrestrictedWrite in contract 'ImmutableCreate2Factory':
    |
    |    // record the deployment of the contract to prevent redeploys.
  > |    _deployed[deploymentAddress] = true;
    |  }
    |
  at /unique_contracts/0x000000000063b99b8036c31e91c64fc89bff9ca7.sol(86)