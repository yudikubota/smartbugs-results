Processing contract: /unique_chucks/5/0xcf7722435fa1afbc9c308a8302c959e5114933bd.sol:KG
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/5/0xcf7722435fa1afbc9c308a8302c959e5114933bd.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/5/0xcf7722435fa1afbc9c308a8302c959e5114933bd.sol:StandardToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for LockedEther in contract 'KG':
    |}
    |
  > |contract KG is StandardToken {
    |    string public constant name = "KG"; // name of Token 
    |    string public constant symbol = "KG"; // symbol of Token 
  at /unique_chucks/5/0xcf7722435fa1afbc9c308a8302c959e5114933bd.sol(174)

[33mWarning[0m for UnrestrictedWrite in contract 'KG':
    |
    |        balances[msg.sender] = balances[msg.sender].sub(_value);
  > |        balances[_to] = balances[_to].add(_value);
    |        emit Transfer(msg.sender, _to, _value);
    |        return true;
  at /unique_chucks/5/0xcf7722435fa1afbc9c308a8302c959e5114933bd.sol(100)

[33mWarning[0m for UnrestrictedWrite in contract 'KG':
    |        require(_value <= allowed[_from][msg.sender]);
    |
  > |        balances[_from] = balances[_from].sub(_value);
    |        balances[_to] = balances[_to].add(_value);
    |        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
  at /unique_chucks/5/0xcf7722435fa1afbc9c308a8302c959e5114933bd.sol(131)

[33mWarning[0m for UnrestrictedWrite in contract 'KG':
    |
    |        balances[_from] = balances[_from].sub(_value);
  > |        balances[_to] = balances[_to].add(_value);
    |        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
    |        emit Transfer(_from, _to, _value);
  at /unique_chucks/5/0xcf7722435fa1afbc9c308a8302c959e5114933bd.sol(132)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |
    |        balances[msg.sender] = balances[msg.sender].sub(_value);
  > |        balances[_to] = balances[_to].add(_value);
    |        emit Transfer(msg.sender, _to, _value);
    |        return true;
  at /unique_chucks/5/0xcf7722435fa1afbc9c308a8302c959e5114933bd.sol(100)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |        require(_value <= allowed[_from][msg.sender]);
    |
  > |        balances[_from] = balances[_from].sub(_value);
    |        balances[_to] = balances[_to].add(_value);
    |        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
  at /unique_chucks/5/0xcf7722435fa1afbc9c308a8302c959e5114933bd.sol(131)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |
    |        balances[_from] = balances[_from].sub(_value);
  > |        balances[_to] = balances[_to].add(_value);
    |        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
    |        emit Transfer(_from, _to, _value);
  at /unique_chucks/5/0xcf7722435fa1afbc9c308a8302c959e5114933bd.sol(132)