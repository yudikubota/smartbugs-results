Processing contract: /unique_chucks/9/0x7777776dd38fcf2a446297305981497f201f85ef.sol:Buffer
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/9/0x7777776dd38fcf2a446297305981497f201f85ef.sol:CBOR
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/9/0x7777776dd38fcf2a446297305981497f201f85ef.sol:DrunkardGame
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/9/0x7777776dd38fcf2a446297305981497f201f85ef.sol:OraclizeAddrResolverI
Processing contract: /unique_chucks/9/0x7777776dd38fcf2a446297305981497f201f85ef.sol:OraclizeI
Processing contract: /unique_chucks/9/0x7777776dd38fcf2a446297305981497f201f85ef.sol:Ownable
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/9/0x7777776dd38fcf2a446297305981497f201f85ef.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/9/0x7777776dd38fcf2a446297305981497f201f85ef.sol:solcChecker
Processing contract: /unique_chucks/9/0x7777776dd38fcf2a446297305981497f201f85ef.sol:strings
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/9/0x7777776dd38fcf2a446297305981497f201f85ef.sol:usingOraclize
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[33mWarning[0m for DAO in contract 'DrunkardGame':
    |           return 0; // Unexpectedly high price
    |        }
  > |        return oraclize.query_withGasLimit.value(price)(0, _datasource, _arg, _gasLimit);
    |    }
    |
  at /unique_chucks/9/0x7777776dd38fcf2a446297305981497f201f85ef.sol(1070)

[31mViolation[0m for DAOConstantGas in contract 'DrunkardGame':
    |                profit = start_profit - commission; 
    |                drunkard_game_hystory[_id].profit = profit;
  > |                marketing_address.transfer(commission);
    |                player.transfer(profit);
    |            }else{
  at /unique_chucks/9/0x7777776dd38fcf2a446297305981497f201f85ef.sol(2188)

[31mViolation[0m for DAOConstantGas in contract 'DrunkardGame':
    |                drunkard_game_hystory[_id].profit = profit;
    |                marketing_address.transfer(commission);
  > |                player.transfer(profit);
    |            }else{
    |                drunkard_game_hystory[_id].profit = 0;
  at /unique_chucks/9/0x7777776dd38fcf2a446297305981497f201f85ef.sol(2189)

[31mViolation[0m for RepeatedCall in contract 'DrunkardGame':
    |            oraclize_setNetwork(networkID_auto);
    |        }
  > |        if (address(oraclize) != OAR.getAddress()) {
    |            oraclize = OraclizeI(OAR.getAddress());
    |        }
  at /unique_chucks/9/0x7777776dd38fcf2a446297305981497f201f85ef.sol(961)

[31mViolation[0m for RepeatedCall in contract 'DrunkardGame':
    |        }
    |        if (address(oraclize) != OAR.getAddress()) {
  > |            oraclize = OraclizeI(OAR.getAddress());
    |        }
    |        _;
  at /unique_chucks/9/0x7777776dd38fcf2a446297305981497f201f85ef.sol(962)

[31mViolation[0m for RepeatedCall in contract 'DrunkardGame':
    |
    |    function oraclize_cbAddress() oraclizeAPI internal returns (address _callbackAddress) {
  > |        return oraclize.cbAddress();
    |    }
    |
  at /unique_chucks/9/0x7777776dd38fcf2a446297305981497f201f85ef.sol(1503)

[31mViolation[0m for RepeatedCall in contract 'DrunkardGame':
    |
    |    function oraclize_setCustomGasPrice(uint _gasPrice) oraclizeAPI internal {
  > |        return oraclize.setCustomGasPrice(_gasPrice);
    |    }
    |
  at /unique_chucks/9/0x7777776dd38fcf2a446297305981497f201f85ef.sol(1513)

[33mWarning[0m for RepeatedCall in contract 'DrunkardGame':
    |            oraclize_setNetwork(networkID_auto);
    |        }
  > |        if (address(oraclize) != OAR.getAddress()) {
    |            oraclize = OraclizeI(OAR.getAddress());
    |        }
  at /unique_chucks/9/0x7777776dd38fcf2a446297305981497f201f85ef.sol(961)

[33mWarning[0m for RepeatedCall in contract 'DrunkardGame':
    |
    |    function oraclize_query(string memory _datasource, string memory _arg, uint _gasLimit) oraclizeAPI internal returns (bytes32 _id) {
  > |        uint price = oraclize.getPrice(_datasource, _gasLimit);
    |        if (price > 1 ether + tx.gasprice * _gasLimit) {
    |           return 0; // Unexpectedly high price
  at /unique_chucks/9/0x7777776dd38fcf2a446297305981497f201f85ef.sol(1066)

[33mWarning[0m for RepeatedCall in contract 'DrunkardGame':
    |           return 0; // Unexpectedly high price
    |        }
  > |        return oraclize.query_withGasLimit.value(price)(0, _datasource, _arg, _gasLimit);
    |    }
    |
  at /unique_chucks/9/0x7777776dd38fcf2a446297305981497f201f85ef.sol(1070)

[33mWarning[0m for TODAmount in contract 'DrunkardGame':
    |           return 0; // Unexpectedly high price
    |        }
  > |        return oraclize.query_withGasLimit.value(price)(0, _datasource, _arg, _gasLimit);
    |    }
    |
  at /unique_chucks/9/0x7777776dd38fcf2a446297305981497f201f85ef.sol(1070)

[33mWarning[0m for TODAmount in contract 'DrunkardGame':
    |                profit = start_profit - commission; 
    |                drunkard_game_hystory[_id].profit = profit;
  > |                marketing_address.transfer(commission);
    |                player.transfer(profit);
    |            }else{
  at /unique_chucks/9/0x7777776dd38fcf2a446297305981497f201f85ef.sol(2188)

[33mWarning[0m for TODAmount in contract 'DrunkardGame':
    |        uint value = _value.mul(1 ether);
    |        if (address(this).balance >= value) {
  > |            marketing_address.transfer(value);
    |        }
    |    }
  at /unique_chucks/9/0x7777776dd38fcf2a446297305981497f201f85ef.sol(2238)

[33mWarning[0m for TODReceiver in contract 'DrunkardGame':
    |           return 0; // Unexpectedly high price
    |        }
  > |        return oraclize.query_withGasLimit.value(price)(0, _datasource, _arg, _gasLimit);
    |    }
    |
  at /unique_chucks/9/0x7777776dd38fcf2a446297305981497f201f85ef.sol(1070)

[33mWarning[0m for TODReceiver in contract 'DrunkardGame':
    |                profit = start_profit - commission; 
    |                drunkard_game_hystory[_id].profit = profit;
  > |                marketing_address.transfer(commission);
    |                player.transfer(profit);
    |            }else{
  at /unique_chucks/9/0x7777776dd38fcf2a446297305981497f201f85ef.sol(2188)

[33mWarning[0m for TODReceiver in contract 'DrunkardGame':
    |        uint value = _value.mul(1 ether);
    |        if (address(this).balance >= value) {
  > |            marketing_address.transfer(value);
    |        }
    |    }
  at /unique_chucks/9/0x7777776dd38fcf2a446297305981497f201f85ef.sol(2238)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'DrunkardGame':
    |           return 0; // Unexpectedly high price
    |        }
  > |        return oraclize.query_withGasLimit.value(price)(0, _datasource, _arg, _gasLimit);
    |    }
    |
  at /unique_chucks/9/0x7777776dd38fcf2a446297305981497f201f85ef.sol(1070)

[33mWarning[0m for UnrestrictedWrite in contract 'DrunkardGame':
    |pragma solidity ^ 0.5.7;
    |
  > |library SafeMath {
    |
    |    /**
  at /unique_chucks/9/0x7777776dd38fcf2a446297305981497f201f85ef.sol(3)

[33mWarning[0m for UnrestrictedWrite in contract 'DrunkardGame':
    |        }
    |        if (address(oraclize) != OAR.getAddress()) {
  > |            oraclize = OraclizeI(OAR.getAddress());
    |        }
    |        _;
  at /unique_chucks/9/0x7777776dd38fcf2a446297305981497f201f85ef.sol(962)

[33mWarning[0m for UnrestrictedWrite in contract 'DrunkardGame':
    |Contract address 0x7777776dd38fcf2a446297305981497f201f85ef, making a bet you give an announcement that you are of age and you are 18 years old.
    |*/
  > |contract DrunkardGame is Ownable, usingOraclize {
    |
    |    using SafeMath for uint;
  at /unique_chucks/9/0x7777776dd38fcf2a446297305981497f201f85ef.sol(2031)

[33mWarning[0m for UnrestrictedWrite in contract 'DrunkardGame':
    |        
    |        // Recording the bet info for future reference.
  > |        drunkard_game_hystory[oraclizeQueryId].round = round_drunkard;
    |        drunkard_game_hystory[oraclizeQueryId].winner = false;
    |        drunkard_game_hystory[oraclizeQueryId].queryId = oraclizeQueryId;
  at /unique_chucks/9/0x7777776dd38fcf2a446297305981497f201f85ef.sol(2136)

[33mWarning[0m for UnrestrictedWrite in contract 'DrunkardGame':
    |        // Recording the bet info for future reference.
    |        drunkard_game_hystory[oraclizeQueryId].round = round_drunkard;
  > |        drunkard_game_hystory[oraclizeQueryId].winner = false;
    |        drunkard_game_hystory[oraclizeQueryId].queryId = oraclizeQueryId;
    |        drunkard_game_hystory[oraclizeQueryId].from = msg.sender;
  at /unique_chucks/9/0x7777776dd38fcf2a446297305981497f201f85ef.sol(2137)

[33mWarning[0m for UnrestrictedWrite in contract 'DrunkardGame':
    |        drunkard_game_hystory[oraclizeQueryId].round = round_drunkard;
    |        drunkard_game_hystory[oraclizeQueryId].winner = false;
  > |        drunkard_game_hystory[oraclizeQueryId].queryId = oraclizeQueryId;
    |        drunkard_game_hystory[oraclizeQueryId].from = msg.sender;
    |        drunkard_game_hystory[oraclizeQueryId].bet = msg.value;
  at /unique_chucks/9/0x7777776dd38fcf2a446297305981497f201f85ef.sol(2138)

[33mWarning[0m for UnrestrictedWrite in contract 'DrunkardGame':
    |        drunkard_game_hystory[oraclizeQueryId].winner = false;
    |        drunkard_game_hystory[oraclizeQueryId].queryId = oraclizeQueryId;
  > |        drunkard_game_hystory[oraclizeQueryId].from = msg.sender;
    |        drunkard_game_hystory[oraclizeQueryId].bet = msg.value;
    |        drunkard_game_hystory[oraclizeQueryId].choice = _choice;
  at /unique_chucks/9/0x7777776dd38fcf2a446297305981497f201f85ef.sol(2139)

[33mWarning[0m for UnrestrictedWrite in contract 'DrunkardGame':
    |        drunkard_game_hystory[oraclizeQueryId].queryId = oraclizeQueryId;
    |        drunkard_game_hystory[oraclizeQueryId].from = msg.sender;
  > |        drunkard_game_hystory[oraclizeQueryId].bet = msg.value;
    |        drunkard_game_hystory[oraclizeQueryId].choice = _choice;
    |        drunkard_game_hystory[oraclizeQueryId].status = true;
  at /unique_chucks/9/0x7777776dd38fcf2a446297305981497f201f85ef.sol(2140)

[33mWarning[0m for UnrestrictedWrite in contract 'DrunkardGame':
    |        drunkard_game_hystory[oraclizeQueryId].from = msg.sender;
    |        drunkard_game_hystory[oraclizeQueryId].bet = msg.value;
  > |        drunkard_game_hystory[oraclizeQueryId].choice = _choice;
    |        drunkard_game_hystory[oraclizeQueryId].status = true;
    |        
  at /unique_chucks/9/0x7777776dd38fcf2a446297305981497f201f85ef.sol(2141)

[33mWarning[0m for UnrestrictedWrite in contract 'DrunkardGame':
    |        drunkard_game_hystory[oraclizeQueryId].bet = msg.value;
    |        drunkard_game_hystory[oraclizeQueryId].choice = _choice;
  > |        drunkard_game_hystory[oraclizeQueryId].status = true;
    |        
    |        // Recording oraclize indices.
  at /unique_chucks/9/0x7777776dd38fcf2a446297305981497f201f85ef.sol(2142)

[33mWarning[0m for UnrestrictedWrite in contract 'DrunkardGame':
    |        
    |        // Recording oraclize indices.
  > |        oraclizedIndices.push(oraclizeQueryId) -1;
    |        //Recording user bet
    |        playerPendingWithdrawals[msg.sender] = playerPendingWithdrawals[msg.sender].add(msg.value);
  at /unique_chucks/9/0x7777776dd38fcf2a446297305981497f201f85ef.sol(2145)

[33mWarning[0m for UnrestrictedWrite in contract 'DrunkardGame':
    |                player.transfer(profit);
    |            }else{
  > |                drunkard_game_hystory[_id].profit = 0;
    |            }
    |            
  at /unique_chucks/9/0x7777776dd38fcf2a446297305981497f201f85ef.sol(2191)