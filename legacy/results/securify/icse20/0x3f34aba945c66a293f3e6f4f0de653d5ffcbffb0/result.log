Processing contract: /unique_chucks/22/0x3f34aba945c66a293f3e6f4f0de653d5ffcbffb0.sol:ERC20
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/22/0x3f34aba945c66a293f3e6f4f0de653d5ffcbffb0.sol:ERC20Burnable
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/22/0x3f34aba945c66a293f3e6f4f0de653d5ffcbffb0.sol:FluenceToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/22/0x3f34aba945c66a293f3e6f4f0de653d5ffcbffb0.sol:IERC20
Processing contract: /unique_chucks/22/0x3f34aba945c66a293f3e6f4f0de653d5ffcbffb0.sol:Owned
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/22/0x3f34aba945c66a293f3e6f4f0de653d5ffcbffb0.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/22/0x3f34aba945c66a293f3e6f4f0de653d5ffcbffb0.sol:Token
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[33mWarning[0m for UnrestrictedWrite in contract 'ERC20Burnable':
    |		require(value <= _balances[account]);
    |
  > |		_totalSupply = _totalSupply.sub(value);
    |		_balances[account] = _balances[account].sub(value);
    |		emit Transfer(account, address(0), value);
  at /unique_chucks/22/0x3f34aba945c66a293f3e6f4f0de653d5ffcbffb0.sol(258)

[31mViolation[0m for LockedEther in contract 'FluenceToken':
    |}
    |
  > |contract FluenceToken is Token {
    |
    |    string constant public name = 'Fluence Presale Token (Test)';
  at /unique_chucks/22/0x3f34aba945c66a293f3e6f4f0de653d5ffcbffb0.sol(366)

[31mViolation[0m for RepeatedCall in contract 'FluenceToken':
    |		require(_token.transfer(_to, _value));
    |
  > |		uint256 receiverNewBalance = _token.balanceOf(_to);
    |		assert(receiverNewBalance == receiverBalance + _value);
    |
  at /unique_chucks/22/0x3f34aba945c66a293f3e6f4f0de653d5ffcbffb0.sol(359)

[31mViolation[0m for MissingInputValidation in contract 'Owned':
    |	event NewPotentialOwner(address old, address potential);
    |
  > |	function setOwner(address _new)
    |		public
    |		onlyOwner
  at /unique_chucks/22/0x3f34aba945c66a293f3e6f4f0de653d5ffcbffb0.sol(319)

[33mWarning[0m for UnrestrictedWrite in contract 'Owned':
    |	{
    |		emit NewPotentialOwner(owner, _new);
  > |		potentialOwner = _new;
    |	}
    |
  at /unique_chucks/22/0x3f34aba945c66a293f3e6f4f0de653d5ffcbffb0.sol(324)

[33mWarning[0m for UnrestrictedWrite in contract 'Owned':
    |	{
    |		emit NewOwner(owner, potentialOwner);
  > |		owner = potentialOwner;
    |		potentialOwner = address(0);
    |	}
  at /unique_chucks/22/0x3f34aba945c66a293f3e6f4f0de653d5ffcbffb0.sol(332)

[33mWarning[0m for UnrestrictedWrite in contract 'Owned':
    |		emit NewOwner(owner, potentialOwner);
    |		owner = potentialOwner;
  > |		potentialOwner = address(0);
    |	}
    |}
  at /unique_chucks/22/0x3f34aba945c66a293f3e6f4f0de653d5ffcbffb0.sol(333)

[31mViolation[0m for RepeatedCall in contract 'Token':
    |	{
    |		require(_token.balanceOf(address(this)) >= _value);
  > |		uint256 receiverBalance = _token.balanceOf(_to);
    |		require(_token.transfer(_to, _value));
    |
  at /unique_chucks/22/0x3f34aba945c66a293f3e6f4f0de653d5ffcbffb0.sol(356)

[33mWarning[0m for UnrestrictedWrite in contract 'Token':
    |		require(value <= _balances[account]);
    |
  > |		_totalSupply = _totalSupply.sub(value);
    |		_balances[account] = _balances[account].sub(value);
    |		emit Transfer(account, address(0), value);
  at /unique_chucks/22/0x3f34aba945c66a293f3e6f4f0de653d5ffcbffb0.sol(258)

[33mWarning[0m for UnrestrictedWrite in contract 'Token':
    |	{
    |		emit NewPotentialOwner(owner, _new);
  > |		potentialOwner = _new;
    |	}
    |
  at /unique_chucks/22/0x3f34aba945c66a293f3e6f4f0de653d5ffcbffb0.sol(324)

[33mWarning[0m for UnrestrictedWrite in contract 'Token':
    |	{
    |		emit NewOwner(owner, potentialOwner);
  > |		owner = potentialOwner;
    |		potentialOwner = address(0);
    |	}
  at /unique_chucks/22/0x3f34aba945c66a293f3e6f4f0de653d5ffcbffb0.sol(332)

[33mWarning[0m for UnrestrictedWrite in contract 'Token':
    |		emit NewOwner(owner, potentialOwner);
    |		owner = potentialOwner;
  > |		potentialOwner = address(0);
    |	}
    |}
  at /unique_chucks/22/0x3f34aba945c66a293f3e6f4f0de653d5ffcbffb0.sol(333)