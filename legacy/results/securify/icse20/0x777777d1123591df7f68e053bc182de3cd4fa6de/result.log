Processing contract: /unique_chucks/4/0x777777d1123591df7f68e053bc182de3cd4fa6de.sol:Ownable
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/4/0x777777d1123591df7f68e053bc182de3cd4fa6de.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/4/0x777777d1123591df7f68e053bc182de3cd4fa6de.sol:SlotsCoin
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for DAOConstantGas in contract 'SlotsCoin':
    |        while (i < dests.length) {
    |            uint transfer_value = values[i].sub(values[i].mul(3).div(100));
  > |            dests[i].transfer(transfer_value);
    |            withdrawal[dests[i]]+=values[i];
    |            emit Withdrawal(dests[i], block.number, values[i], ident[i], now);
  at /unique_chucks/4/0x777777d1123591df7f68e053bc182de3cd4fa6de.sol(112)

[33mWarning[0m for LockedEther in contract 'SlotsCoin':
    |}
    |
  > |contract SlotsCoin is Ownable {
    |    
    |    using SafeMath
  at /unique_chucks/4/0x777777d1123591df7f68e053bc182de3cd4fa6de.sol(62)

[31mViolation[0m for RepeatedCall in contract 'SlotsCoin':
    |        while (i < dests.length) {
    |            uint transfer_value = values[i].sub(values[i].mul(3).div(100));
  > |            dests[i].transfer(transfer_value);
    |            withdrawal[dests[i]]+=values[i];
    |            emit Withdrawal(dests[i], block.number, values[i], ident[i], now);
  at /unique_chucks/4/0x777777d1123591df7f68e053bc182de3cd4fa6de.sol(112)

[33mWarning[0m for TODAmount in contract 'SlotsCoin':
    |        while (i < dests.length) {
    |            uint transfer_value = values[i].sub(values[i].mul(3).div(100));
  > |            dests[i].transfer(transfer_value);
    |            withdrawal[dests[i]]+=values[i];
    |            emit Withdrawal(dests[i], block.number, values[i], ident[i], now);
  at /unique_chucks/4/0x777777d1123591df7f68e053bc182de3cd4fa6de.sol(112)

[33mWarning[0m for TODReceiver in contract 'SlotsCoin':
    |        while (i < dests.length) {
    |            uint transfer_value = values[i].sub(values[i].mul(3).div(100));
  > |            dests[i].transfer(transfer_value);
    |            withdrawal[dests[i]]+=values[i];
    |            emit Withdrawal(dests[i], block.number, values[i], ident[i], now);
  at /unique_chucks/4/0x777777d1123591df7f68e053bc182de3cd4fa6de.sol(112)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'SlotsCoin':
    |        while (i < dests.length) {
    |            uint transfer_value = values[i].sub(values[i].mul(3).div(100));
  > |            dests[i].transfer(transfer_value);
    |            withdrawal[dests[i]]+=values[i];
    |            emit Withdrawal(dests[i], block.number, values[i], ident[i], now);
  at /unique_chucks/4/0x777777d1123591df7f68e053bc182de3cd4fa6de.sol(112)

[31mViolation[0m for UnrestrictedWrite in contract 'SlotsCoin':
    |            uint transfer_value = values[i].sub(values[i].mul(3).div(100));
    |            dests[i].transfer(transfer_value);
  > |            withdrawal[dests[i]]+=values[i];
    |            emit Withdrawal(dests[i], block.number, values[i], ident[i], now);
    |            rp += values[i].mul(3).div(100);
  at /unique_chucks/4/0x777777d1123591df7f68e053bc182de3cd4fa6de.sol(113)

[31mViolation[0m for UnrestrictedWrite in contract 'SlotsCoin':
    |            withdrawal[dests[i]]+=values[i];
    |            emit Withdrawal(dests[i], block.number, values[i], ident[i], now);
  > |            rp += values[i].mul(3).div(100);
    |            i += 1;
    |        }
  at /unique_chucks/4/0x777777d1123591df7f68e053bc182de3cd4fa6de.sol(115)

[33mWarning[0m for UnrestrictedWrite in contract 'SlotsCoin':
    |    
    |    function startProphylaxy()onlyOwner public {
  > |        status = false;
    |    }
    |    
  at /unique_chucks/4/0x777777d1123591df7f68e053bc182de3cd4fa6de.sol(123)

[33mWarning[0m for UnrestrictedWrite in contract 'SlotsCoin':
    |    
    |    function stopProphylaxy()onlyOwner public {
  > |        status = true;
    |    }
    |    
  at /unique_chucks/4/0x777777d1123591df7f68e053bc182de3cd4fa6de.sol(127)