Processing contract: /unique_contracts/0x157230b513e823320498e519fb2dc49b000103a5.sol:ERC20
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0x157230b513e823320498e519fb2dc49b000103a5.sol:ERC20Detailed
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0x157230b513e823320498e519fb2dc49b000103a5.sol:EZ365Token
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0x157230b513e823320498e519fb2dc49b000103a5.sol:IERC20
Processing contract: /unique_contracts/0x157230b513e823320498e519fb2dc49b000103a5.sol:Ownable
Processing contract: /unique_contracts/0x157230b513e823320498e519fb2dc49b000103a5.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[33mWarning[0m for UnrestrictedWrite in contract 'ERC20':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipTransferred(_owner, address(0));
  > |        _owner = address(0);
    |    }
    |
  at /unique_contracts/0x157230b513e823320498e519fb2dc49b000103a5.sol(52)

[33mWarning[0m for UnrestrictedWrite in contract 'ERC20':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_contracts/0x157230b513e823320498e519fb2dc49b000103a5.sol(70)

[31mViolation[0m for LockedEther in contract 'ERC20Detailed':
    | * just as on Ethereum all the operations are done in wei.
    | */
  > |contract ERC20Detailed is ERC20 {
    |    string constant private _name = "EZ365";
    |    string constant private _symbol = "EZ365";
  at /unique_contracts/0x157230b513e823320498e519fb2dc49b000103a5.sol(351)

[33mWarning[0m for UnrestrictedWrite in contract 'ERC20Detailed':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipTransferred(_owner, address(0));
  > |        _owner = address(0);
    |    }
    |
  at /unique_contracts/0x157230b513e823320498e519fb2dc49b000103a5.sol(52)

[33mWarning[0m for UnrestrictedWrite in contract 'ERC20Detailed':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_contracts/0x157230b513e823320498e519fb2dc49b000103a5.sol(70)

[31mViolation[0m for LockedEther in contract 'EZ365Token':
    |    }
    |}
  > |contract EZ365Token is ERC20Detailed {
    |    
    |    uint256 public _releaseTime;
  at /unique_contracts/0x157230b513e823320498e519fb2dc49b000103a5.sol(378)