Processing contract: /unique_chucks/6/0xdc1c1092b730a625063874a75b7e2bba93c9f282.sol:ERC20
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/6/0xdc1c1092b730a625063874a75b7e2bba93c9f282.sol:ERC20Burnable
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/6/0xdc1c1092b730a625063874a75b7e2bba93c9f282.sol:ERC20Details
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/6/0xdc1c1092b730a625063874a75b7e2bba93c9f282.sol:ERC20Mintable
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/6/0xdc1c1092b730a625063874a75b7e2bba93c9f282.sol:IERC20
Processing contract: /unique_chucks/6/0xdc1c1092b730a625063874a75b7e2bba93c9f282.sol:Ownable
Processing contract: /unique_chucks/6/0xdc1c1092b730a625063874a75b7e2bba93c9f282.sol:Pausable
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/6/0xdc1c1092b730a625063874a75b7e2bba93c9f282.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/6/0xdc1c1092b730a625063874a75b7e2bba93c9f282.sol:TokenDetails
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/6/0xdc1c1092b730a625063874a75b7e2bba93c9f282.sol:XmedBaseLoyaltyToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/6/0xdc1c1092b730a625063874a75b7e2bba93c9f282.sol:XmedLoyaltyToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for LockedEther in contract 'ERC20Details':
    |
    |
  > |contract ERC20Details is TokenDetails {
    |
    |    uint8 internal _decimals;
  at /unique_chucks/6/0xdc1c1092b730a625063874a75b7e2bba93c9f282.sol(498)

[33mWarning[0m for UnrestrictedWrite in contract 'Pausable':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipTransferred(_owner, address(0));
  > |        _owner = address(0);
    |    }
    |
  at /unique_chucks/6/0xdc1c1092b730a625063874a75b7e2bba93c9f282.sol(58)

[33mWarning[0m for UnrestrictedWrite in contract 'Pausable':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_chucks/6/0xdc1c1092b730a625063874a75b7e2bba93c9f282.sol(76)

[33mWarning[0m for UnrestrictedWrite in contract 'Pausable':
    |    */
    |    function pause() public onlyOwner whenNotPaused {
  > |        paused = true;
    |        emit Paused(msg.sender);
    |    }
  at /unique_chucks/6/0xdc1c1092b730a625063874a75b7e2bba93c9f282.sol(114)

[33mWarning[0m for UnrestrictedWrite in contract 'Pausable':
    |    */
    |    function unpause() public onlyOwner whenPaused {
  > |        paused = false;
    |        emit Unpaused(msg.sender);
    |    }
  at /unique_chucks/6/0xdc1c1092b730a625063874a75b7e2bba93c9f282.sol(122)

[31mViolation[0m for LockedEther in contract 'TokenDetails':
    |
    |
  > |contract TokenDetails {
    |
    |    string internal _name;
  at /unique_chucks/6/0xdc1c1092b730a625063874a75b7e2bba93c9f282.sol(471)

[31mViolation[0m for LockedEther in contract 'XmedBaseLoyaltyToken':
    |
    |
  > |contract XmedBaseLoyaltyToken is Pausable, ERC20Mintable, ERC20Burnable, ERC20Details {
    |
    |    /**
  at /unique_chucks/6/0xdc1c1092b730a625063874a75b7e2bba93c9f282.sol(521)

[33mWarning[0m for UnrestrictedWrite in contract 'XmedBaseLoyaltyToken':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipTransferred(_owner, address(0));
  > |        _owner = address(0);
    |    }
    |
  at /unique_chucks/6/0xdc1c1092b730a625063874a75b7e2bba93c9f282.sol(58)

[33mWarning[0m for UnrestrictedWrite in contract 'XmedBaseLoyaltyToken':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_chucks/6/0xdc1c1092b730a625063874a75b7e2bba93c9f282.sol(76)

[33mWarning[0m for UnrestrictedWrite in contract 'XmedBaseLoyaltyToken':
    |    */
    |    function pause() public onlyOwner whenNotPaused {
  > |        paused = true;
    |        emit Paused(msg.sender);
    |    }
  at /unique_chucks/6/0xdc1c1092b730a625063874a75b7e2bba93c9f282.sol(114)

[33mWarning[0m for UnrestrictedWrite in contract 'XmedBaseLoyaltyToken':
    |    */
    |    function unpause() public onlyOwner whenPaused {
  > |        paused = false;
    |        emit Unpaused(msg.sender);
    |    }
  at /unique_chucks/6/0xdc1c1092b730a625063874a75b7e2bba93c9f282.sol(122)

[33mWarning[0m for UnrestrictedWrite in contract 'XmedBaseLoyaltyToken':
    |    function _mint(address account, uint256 value) internal {
    |        require(account != address(0));
  > |        _totalSupply = _totalSupply.add(value);
    |        _balances[account] = _balances[account].add(value);
    |        emit Transfer(address(0), account, value);
  at /unique_chucks/6/0xdc1c1092b730a625063874a75b7e2bba93c9f282.sol(426)

[33mWarning[0m for UnrestrictedWrite in contract 'XmedBaseLoyaltyToken':
    |        require(value <= _balances[account]);
    |
  > |        _totalSupply = _totalSupply.sub(value);
    |        _balances[account] = _balances[account].sub(value);
    |        emit Transfer(account, address(0), value);
  at /unique_chucks/6/0xdc1c1092b730a625063874a75b7e2bba93c9f282.sol(456)

[31mViolation[0m for LockedEther in contract 'XmedLoyaltyToken':
    |
    |
  > |contract XmedLoyaltyToken is XmedBaseLoyaltyToken {
    |
    |    /**
  at /unique_chucks/6/0xdc1c1092b730a625063874a75b7e2bba93c9f282.sol(579)

[33mWarning[0m for UnrestrictedWrite in contract 'XmedLoyaltyToken':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipTransferred(_owner, address(0));
  > |        _owner = address(0);
    |    }
    |
  at /unique_chucks/6/0xdc1c1092b730a625063874a75b7e2bba93c9f282.sol(58)

[33mWarning[0m for UnrestrictedWrite in contract 'XmedLoyaltyToken':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_chucks/6/0xdc1c1092b730a625063874a75b7e2bba93c9f282.sol(76)

[33mWarning[0m for UnrestrictedWrite in contract 'XmedLoyaltyToken':
    |    */
    |    function pause() public onlyOwner whenNotPaused {
  > |        paused = true;
    |        emit Paused(msg.sender);
    |    }
  at /unique_chucks/6/0xdc1c1092b730a625063874a75b7e2bba93c9f282.sol(114)

[33mWarning[0m for UnrestrictedWrite in contract 'XmedLoyaltyToken':
    |    */
    |    function unpause() public onlyOwner whenPaused {
  > |        paused = false;
    |        emit Unpaused(msg.sender);
    |    }
  at /unique_chucks/6/0xdc1c1092b730a625063874a75b7e2bba93c9f282.sol(122)