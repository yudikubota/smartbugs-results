Processing contract: /unique_chucks/12/0xd701f9fcd6d9990ef826640c6c069c705c217557.sol:AllowanceCrowdsale
Processing contract: /unique_chucks/12/0xd701f9fcd6d9990ef826640c6c069c705c217557.sol:Crowdsale
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/12/0xd701f9fcd6d9990ef826640c6c069c705c217557.sol:IERC20
Processing contract: /unique_chucks/12/0xd701f9fcd6d9990ef826640c6c069c705c217557.sol:Math
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/12/0xd701f9fcd6d9990ef826640c6c069c705c217557.sol:MocoCrowdsale
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
java.io.IOException: Timeout for /tmp/binaries_souffle4672774030107514171/mustExplicit -j 2 -F /tmp/souffle-16d641da-df34-4d46-b97c-5f3e0cb1f308 -D /tmp/souffle-16d641da-df34-4d46-b97c-5f3e0cb1f308_OUT
	at ch.securify.analysis.AbstractDataflow.runCommand(AbstractDataflow.java:277)
	at ch.securify.analysis.AbstractDataflow.initDataflow(AbstractDataflow.java:169)
	at ch.securify.analysis.MustExplicitDataflow.<init>(MustExplicitDataflow.java:33)
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:33)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error in Securify
java.lang.RuntimeException
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:37)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error, skipping: /unique_chucks/12/0xd701f9fcd6d9990ef826640c6c069c705c217557.sol:MocoCrowdsale
Processing contract: /unique_chucks/12/0xd701f9fcd6d9990ef826640c6c069c705c217557.sol:Ownable
Processing contract: /unique_chucks/12/0xd701f9fcd6d9990ef826640c6c069c705c217557.sol:PostDeliveryCrowdsale
Processing contract: /unique_chucks/12/0xd701f9fcd6d9990ef826640c6c069c705c217557.sol:ReentrancyGuard
Processing contract: /unique_chucks/12/0xd701f9fcd6d9990ef826640c6c069c705c217557.sol:Referral
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/12/0xd701f9fcd6d9990ef826640c6c069c705c217557.sol:SafeERC20
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/12/0xd701f9fcd6d9990ef826640c6c069c705c217557.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/12/0xd701f9fcd6d9990ef826640c6c069c705c217557.sol:TimedCrowdsale
Processing contract: /unique_chucks/12/0xd701f9fcd6d9990ef826640c6c069c705c217557.sol:Whitelisted
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[33mWarning[0m for TODAmount in contract 'Crowdsale':
    |     */
    |    function _forwardFunds() internal {
  > |        _wallet.transfer(msg.value);
    |    }
    |}
  at /unique_chucks/12/0xd701f9fcd6d9990ef826640c6c069c705c217557.sol(560)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'Crowdsale':
    |     */
    |    function _forwardFunds() internal {
  > |        _wallet.transfer(msg.value);
    |    }
    |}
  at /unique_chucks/12/0xd701f9fcd6d9990ef826640c6c069c705c217557.sol(560)

[31mViolation[0m for UnrestrictedWrite in contract 'Crowdsale':
    |     */
    |    modifier nonReentrant() {
  > |        _guardCounter += 1;
    |        uint256 localCounter = _guardCounter;
    |        _;
  at /unique_chucks/12/0xd701f9fcd6d9990ef826640c6c069c705c217557.sol(361)

[31mViolation[0m for UnrestrictedWrite in contract 'Crowdsale':
    |
    |        // update state
  > |        _weiRaised = _weiRaised.add(weiAmount);
    |
    |        _processPurchase(beneficiary, tokens);
  at /unique_chucks/12/0xd701f9fcd6d9990ef826640c6c069c705c217557.sol(480)

[33mWarning[0m for UnrestrictedWrite in contract 'Referral':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipTransferred(_owner, address(0));
  > |        _owner = address(0);
    |    }
    |
  at /unique_chucks/12/0xd701f9fcd6d9990ef826640c6c069c705c217557.sol(120)

[33mWarning[0m for UnrestrictedWrite in contract 'Referral':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_chucks/12/0xd701f9fcd6d9990ef826640c6c069c705c217557.sol(138)

[33mWarning[0m for UnrestrictedWrite in contract 'Referral':
    |
    |    function setManagerReward(uint8 tokenReward, uint8 ethReward, uint8 customerReward) public onlyOwner returns(bool){
  > |      managerTokenReward = tokenReward;
    |      managerEthReward = ethReward;
    |      managerCustomerReward = customerReward;
  at /unique_chucks/12/0xd701f9fcd6d9990ef826640c6c069c705c217557.sol(155)

[33mWarning[0m for UnrestrictedWrite in contract 'Referral':
    |    function setManagerReward(uint8 tokenReward, uint8 ethReward, uint8 customerReward) public onlyOwner returns(bool){
    |      managerTokenReward = tokenReward;
  > |      managerEthReward = ethReward;
    |      managerCustomerReward = customerReward;
    |      return true;
  at /unique_chucks/12/0xd701f9fcd6d9990ef826640c6c069c705c217557.sol(156)

[33mWarning[0m for UnrestrictedWrite in contract 'Referral':
    |      managerTokenReward = tokenReward;
    |      managerEthReward = ethReward;
  > |      managerCustomerReward = customerReward;
    |      return true;
    |    }
  at /unique_chucks/12/0xd701f9fcd6d9990ef826640c6c069c705c217557.sol(157)

[33mWarning[0m for UnrestrictedWrite in contract 'Referral':
    |    }
    |    function setReferralReward(uint8 tokenReward, uint8 customerReward) public onlyOwner returns(bool){
  > |      referralTokenReward = tokenReward;
    |      referralCustomerReward = customerReward;
    |      return true;
  at /unique_chucks/12/0xd701f9fcd6d9990ef826640c6c069c705c217557.sol(161)

[33mWarning[0m for UnrestrictedWrite in contract 'Referral':
    |    function setReferralReward(uint8 tokenReward, uint8 customerReward) public onlyOwner returns(bool){
    |      referralTokenReward = tokenReward;
  > |      referralCustomerReward = customerReward;
    |      return true;
    |    }
  at /unique_chucks/12/0xd701f9fcd6d9990ef826640c6c069c705c217557.sol(162)

[33mWarning[0m for UnrestrictedWrite in contract 'Whitelisted':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipTransferred(_owner, address(0));
  > |        _owner = address(0);
    |    }
    |
  at /unique_chucks/12/0xd701f9fcd6d9990ef826640c6c069c705c217557.sol(120)

[33mWarning[0m for UnrestrictedWrite in contract 'Whitelisted':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_chucks/12/0xd701f9fcd6d9990ef826640c6c069c705c217557.sol(138)

[33mWarning[0m for UnrestrictedWrite in contract 'Whitelisted':
    |      // Set new provider
    |      function setProvider(address _provider) public onlyOwner {
  > |         provider[_provider] = true;
    |      }
    |      // Deactive current provider
  at /unique_chucks/12/0xd701f9fcd6d9990ef826640c6c069c705c217557.sol(239)

[33mWarning[0m for UnrestrictedWrite in contract 'Whitelisted':
    |      function deactivateProvider(address _provider) public onlyOwner {
    |         require(provider[_provider] == true);
  > |         provider[_provider] = false;
    |      }
    |      // Set new provider
  at /unique_chucks/12/0xd701f9fcd6d9990ef826640c6c069c705c217557.sol(244)

[33mWarning[0m for UnrestrictedWrite in contract 'Whitelisted':
    |      // Set new provider
    |      function setSalesManager(address _manager) public onlyOwner {
  > |         salesManager[_manager] = true;
    |      }
    |      // Deactive current provider
  at /unique_chucks/12/0xd701f9fcd6d9990ef826640c6c069c705c217557.sol(248)

[33mWarning[0m for UnrestrictedWrite in contract 'Whitelisted':
    |      function deactivateSalesManager(address _manager) public onlyOwner {
    |         require(salesManager[_manager] == true);
  > |         salesManager[_manager] = false;
    |      }
    |      // Set purchaser to whitelist with zone code
  at /unique_chucks/12/0xd701f9fcd6d9990ef826640c6c069c705c217557.sol(253)

[33mWarning[0m for UnrestrictedWrite in contract 'Whitelisted':
    |      // Set purchaser to whitelist with zone code
    |      function setWhitelisted(address _purchaser, uint16 _zone) public onlyProvider {
  > |         whitelist[_purchaser] = _zone;
    |      }
    |      // Delete purchaser from whitelist
  at /unique_chucks/12/0xd701f9fcd6d9990ef826640c6c069c705c217557.sol(257)

[33mWarning[0m for UnrestrictedWrite in contract 'Whitelisted':
    |      // Delete purchaser from whitelist
    |      function deleteFromWhitelist(address _purchaser) public onlyProvider {
  > |         whitelist[_purchaser] = 0;
    |      }
    |      // Get purchaser zone code
  at /unique_chucks/12/0xd701f9fcd6d9990ef826640c6c069c705c217557.sol(261)