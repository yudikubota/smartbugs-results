Processing contract: /unique_chucks/15/0x215238ff63bd80dabdfc0c7774b9742a3239e6f4.sol:ATD
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/15/0x215238ff63bd80dabdfc0c7774b9742a3239e6f4.sol:DistributionConfigurable
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/15/0x215238ff63bd80dabdfc0c7774b9742a3239e6f4.sol:ERC20Detailed
Processing contract: /unique_chucks/15/0x215238ff63bd80dabdfc0c7774b9742a3239e6f4.sol:IERC20
Processing contract: /unique_chucks/15/0x215238ff63bd80dabdfc0c7774b9742a3239e6f4.sol:Pausable
Processing contract: /unique_chucks/15/0x215238ff63bd80dabdfc0c7774b9742a3239e6f4.sol:PauserRole
Processing contract: /unique_chucks/15/0x215238ff63bd80dabdfc0c7774b9742a3239e6f4.sol:Roles
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/15/0x215238ff63bd80dabdfc0c7774b9742a3239e6f4.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/15/0x215238ff63bd80dabdfc0c7774b9742a3239e6f4.sol:SignerRole
[31mViolation[0m for RepeatedCall in contract 'ATD':
    |      DistributionConfig storage dc = distributionConfigs[i];
    |      uint256 amount = dailyTradedVolume.mul(dc.ratioDTV).div(10 ** dc.ratioDecimals);
  > |      token.transferFrom(dc.lockedWallet, dc.unlockWallet, amount);
    |      total = total.add(amount);
    |      emit Distributed(
  at /unique_chucks/15/0x215238ff63bd80dabdfc0c7774b9742a3239e6f4.sol(485)

[33mWarning[0m for UnrestrictedWrite in contract 'ATD':
    |    // Replace the element to delete and shift elements of the array.
    |    for (uint i = index; i<distributionConfigs.length-1; i++){
  > |      distributionConfigs[i] = distributionConfigs[i+1];
    |    }
    |    distributionConfigs.length--;
  at /unique_chucks/15/0x215238ff63bd80dabdfc0c7774b9742a3239e6f4.sol(384)

[33mWarning[0m for UnrestrictedWrite in contract 'ATD':
    |}
    |
  > |contract ATD is Pausable, SignerRole, DistributionConfigurable {
    |  using SafeMath for uint256;
    |
  at /unique_chucks/15/0x215238ff63bd80dabdfc0c7774b9742a3239e6f4.sol(431)

[31mViolation[0m for LockedEther in contract 'DistributionConfigurable':
    |}
    |
  > |contract DistributionConfigurable is PauserRole {
    |
    |  /**
  at /unique_chucks/15/0x215238ff63bd80dabdfc0c7774b9742a3239e6f4.sol(262)

[33mWarning[0m for UnrestrictedWrite in contract 'DistributionConfigurable':
    |}
    |
  > |contract DistributionConfigurable is PauserRole {
    |
    |  /**
  at /unique_chucks/15/0x215238ff63bd80dabdfc0c7774b9742a3239e6f4.sol(262)

[33mWarning[0m for UnrestrictedWrite in contract 'DistributionConfigurable':
    |    // Replace the element to delete and shift elements of the array.
    |    for (uint i = index; i<distributionConfigs.length-1; i++){
  > |      distributionConfigs[i] = distributionConfigs[i+1];
    |    }
    |    distributionConfigs.length--;
  at /unique_chucks/15/0x215238ff63bd80dabdfc0c7774b9742a3239e6f4.sol(384)