Processing contract: /unique_contracts/0xd9bae39c725a1864b1133ad0ef1640d02f79b78c.sol:BasicToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0xd9bae39c725a1864b1133ad0ef1640d02f79b78c.sol:ERC20
Processing contract: /unique_contracts/0xd9bae39c725a1864b1133ad0ef1640d02f79b78c.sol:ERC20Basic
Processing contract: /unique_contracts/0xd9bae39c725a1864b1133ad0ef1640d02f79b78c.sol:Ownable
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0xd9bae39c725a1864b1133ad0ef1640d02f79b78c.sol:Pausable
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0xd9bae39c725a1864b1133ad0ef1640d02f79b78c.sol:PausableToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0xd9bae39c725a1864b1133ad0ef1640d02f79b78c.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0xd9bae39c725a1864b1133ad0ef1640d02f79b78c.sol:StandardToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0xd9bae39c725a1864b1133ad0ef1640d02f79b78c.sol:TSToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[33mWarning[0m for UnrestrictedWrite in contract 'BasicToken':
    |
    |        balances[msg.sender] = balances[msg.sender].sub(_value);
  > |        balances[_to] = balances[_to].add(_value);
    |        emit Transfer(msg.sender, _to, _value);
    |        return true;
  at /unique_contracts/0xd9bae39c725a1864b1133ad0ef1640d02f79b78c.sol(146)

[33mWarning[0m for UnrestrictedWrite in contract 'Ownable':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(owner, newOwner);
  > |        owner = newOwner;
    |    }
    |
  at /unique_contracts/0xd9bae39c725a1864b1133ad0ef1640d02f79b78c.sol(87)

[33mWarning[0m for UnrestrictedWrite in contract 'Ownable':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipRenounced(owner);
  > |        owner = address(0);
    |    }
    |}
  at /unique_contracts/0xd9bae39c725a1864b1133ad0ef1640d02f79b78c.sol(95)

[33mWarning[0m for UnrestrictedWrite in contract 'Pausable':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(owner, newOwner);
  > |        owner = newOwner;
    |    }
    |
  at /unique_contracts/0xd9bae39c725a1864b1133ad0ef1640d02f79b78c.sol(87)

[33mWarning[0m for UnrestrictedWrite in contract 'Pausable':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipRenounced(owner);
  > |        owner = address(0);
    |    }
    |}
  at /unique_contracts/0xd9bae39c725a1864b1133ad0ef1640d02f79b78c.sol(95)

[33mWarning[0m for UnrestrictedWrite in contract 'Pausable':
    |    */
    |    function pause() onlyOwner whenNotPaused public {
  > |        paused = true;
    |        emit Pause();
    |    }
  at /unique_contracts/0xd9bae39c725a1864b1133ad0ef1640d02f79b78c.sol(283)

[33mWarning[0m for UnrestrictedWrite in contract 'Pausable':
    |    */
    |    function unpause() onlyOwner whenPaused public {
  > |        paused = false;
    |        emit Unpause();
    |    }
  at /unique_contracts/0xd9bae39c725a1864b1133ad0ef1640d02f79b78c.sol(291)

[33mWarning[0m for UnrestrictedWrite in contract 'PausableToken':
    |
    |        balances[msg.sender] = balances[msg.sender].sub(_value);
  > |        balances[_to] = balances[_to].add(_value);
    |        emit Transfer(msg.sender, _to, _value);
    |        return true;
  at /unique_contracts/0xd9bae39c725a1864b1133ad0ef1640d02f79b78c.sol(146)

[33mWarning[0m for UnrestrictedWrite in contract 'PausableToken':
    |        require(_value <= allowed[_from][msg.sender]);
    |
  > |        balances[_from] = balances[_from].sub(_value);
    |        balances[_to] = balances[_to].add(_value);
    |        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
  at /unique_contracts/0xd9bae39c725a1864b1133ad0ef1640d02f79b78c.sol(184)

[33mWarning[0m for UnrestrictedWrite in contract 'PausableToken':
    |
    |        balances[_from] = balances[_from].sub(_value);
  > |        balances[_to] = balances[_to].add(_value);
    |        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
    |        emit Transfer(_from, _to, _value);
  at /unique_contracts/0xd9bae39c725a1864b1133ad0ef1640d02f79b78c.sol(185)

[33mWarning[0m for UnrestrictedWrite in contract 'PausableToken':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(owner, newOwner);
  > |        owner = newOwner;
    |    }
    |
  at /unique_contracts/0xd9bae39c725a1864b1133ad0ef1640d02f79b78c.sol(87)

[33mWarning[0m for UnrestrictedWrite in contract 'PausableToken':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipRenounced(owner);
  > |        owner = address(0);
    |    }
    |}
  at /unique_contracts/0xd9bae39c725a1864b1133ad0ef1640d02f79b78c.sol(95)

[33mWarning[0m for UnrestrictedWrite in contract 'PausableToken':
    |    */
    |    function pause() onlyOwner whenNotPaused public {
  > |        paused = true;
    |        emit Pause();
    |    }
  at /unique_contracts/0xd9bae39c725a1864b1133ad0ef1640d02f79b78c.sol(283)

[33mWarning[0m for UnrestrictedWrite in contract 'PausableToken':
    |    */
    |    function unpause() onlyOwner whenPaused public {
  > |        paused = false;
    |        emit Unpause();
    |    }
  at /unique_contracts/0xd9bae39c725a1864b1133ad0ef1640d02f79b78c.sol(291)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |
    |        balances[msg.sender] = balances[msg.sender].sub(_value);
  > |        balances[_to] = balances[_to].add(_value);
    |        emit Transfer(msg.sender, _to, _value);
    |        return true;
  at /unique_contracts/0xd9bae39c725a1864b1133ad0ef1640d02f79b78c.sol(146)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |        require(_value <= allowed[_from][msg.sender]);
    |
  > |        balances[_from] = balances[_from].sub(_value);
    |        balances[_to] = balances[_to].add(_value);
    |        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
  at /unique_contracts/0xd9bae39c725a1864b1133ad0ef1640d02f79b78c.sol(184)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |
    |        balances[_from] = balances[_from].sub(_value);
  > |        balances[_to] = balances[_to].add(_value);
    |        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
    |        emit Transfer(_from, _to, _value);
  at /unique_contracts/0xd9bae39c725a1864b1133ad0ef1640d02f79b78c.sol(185)

[31mViolation[0m for LockedEther in contract 'TSToken':
    |}
    |
  > |contract TSToken is PausableToken {
    |    string public constant name = "Touch Smart Token"; 
    |    string public constant symbol = "TST";
  at /unique_contracts/0xd9bae39c725a1864b1133ad0ef1640d02f79b78c.sol(319)

[33mWarning[0m for UnrestrictedWrite in contract 'TSToken':
    |
    |        balances[msg.sender] = balances[msg.sender].sub(_value);
  > |        balances[_to] = balances[_to].add(_value);
    |        emit Transfer(msg.sender, _to, _value);
    |        return true;
  at /unique_contracts/0xd9bae39c725a1864b1133ad0ef1640d02f79b78c.sol(146)

[33mWarning[0m for UnrestrictedWrite in contract 'TSToken':
    |        require(_value <= allowed[_from][msg.sender]);
    |
  > |        balances[_from] = balances[_from].sub(_value);
    |        balances[_to] = balances[_to].add(_value);
    |        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
  at /unique_contracts/0xd9bae39c725a1864b1133ad0ef1640d02f79b78c.sol(184)

[33mWarning[0m for UnrestrictedWrite in contract 'TSToken':
    |
    |        balances[_from] = balances[_from].sub(_value);
  > |        balances[_to] = balances[_to].add(_value);
    |        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
    |        emit Transfer(_from, _to, _value);
  at /unique_contracts/0xd9bae39c725a1864b1133ad0ef1640d02f79b78c.sol(185)

[33mWarning[0m for UnrestrictedWrite in contract 'TSToken':
    |        
    |        balances[msg.sender] = balances[msg.sender].sub(_value);
  > |        totalSupply_ = totalSupply_.sub(_value);
    |        emit Burn(msg.sender, _value);
    |        return true;
  at /unique_contracts/0xd9bae39c725a1864b1133ad0ef1640d02f79b78c.sol(348)

[33mWarning[0m for UnrestrictedWrite in contract 'TSToken':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(owner, newOwner);
  > |        owner = newOwner;
    |    }
    |
  at /unique_contracts/0xd9bae39c725a1864b1133ad0ef1640d02f79b78c.sol(87)

[33mWarning[0m for UnrestrictedWrite in contract 'TSToken':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipRenounced(owner);
  > |        owner = address(0);
    |    }
    |}
  at /unique_contracts/0xd9bae39c725a1864b1133ad0ef1640d02f79b78c.sol(95)

[33mWarning[0m for UnrestrictedWrite in contract 'TSToken':
    |    */
    |    function pause() onlyOwner whenNotPaused public {
  > |        paused = true;
    |        emit Pause();
    |    }
  at /unique_contracts/0xd9bae39c725a1864b1133ad0ef1640d02f79b78c.sol(283)

[33mWarning[0m for UnrestrictedWrite in contract 'TSToken':
    |    */
    |    function unpause() onlyOwner whenPaused public {
  > |        paused = false;
    |        emit Unpause();
    |    }
  at /unique_contracts/0xd9bae39c725a1864b1133ad0ef1640d02f79b78c.sol(291)