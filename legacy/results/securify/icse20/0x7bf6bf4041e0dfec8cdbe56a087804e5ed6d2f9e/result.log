Processing contract: /unique_chucks/27/0x7bf6bf4041e0dfec8cdbe56a087804e5ed6d2f9e.sol:BasicToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/27/0x7bf6bf4041e0dfec8cdbe56a087804e5ed6d2f9e.sol:ERC20
Processing contract: /unique_chucks/27/0x7bf6bf4041e0dfec8cdbe56a087804e5ed6d2f9e.sol:ERC20Basic
Processing contract: /unique_chucks/27/0x7bf6bf4041e0dfec8cdbe56a087804e5ed6d2f9e.sol:JeromesBTC
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/27/0x7bf6bf4041e0dfec8cdbe56a087804e5ed6d2f9e.sol:MintableToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/27/0x7bf6bf4041e0dfec8cdbe56a087804e5ed6d2f9e.sol:Ownable
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/27/0x7bf6bf4041e0dfec8cdbe56a087804e5ed6d2f9e.sol:Pausable
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/27/0x7bf6bf4041e0dfec8cdbe56a087804e5ed6d2f9e.sol:PausableToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/27/0x7bf6bf4041e0dfec8cdbe56a087804e5ed6d2f9e.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/27/0x7bf6bf4041e0dfec8cdbe56a087804e5ed6d2f9e.sol:StandardToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[33mWarning[0m for UnrestrictedWrite in contract 'BasicToken':
    |    // SafeMath.sub will throw if there is not enough balance.
    |    balances[msg.sender] = balances[msg.sender].sub(_value);
  > |    balances[_to] = balances[_to].add(_value);
    |    emit Transfer(msg.sender, _to, _value);
    |    return true;
  at /unique_chucks/27/0x7bf6bf4041e0dfec8cdbe56a087804e5ed6d2f9e.sol(57)

[31mViolation[0m for LockedEther in contract 'JeromesBTC':
    |  }
    |}
  > |contract JeromesBTC is PausableToken, MintableToken {
    |    string public constant name = "BITCOIN FUTURE FROM DESK DELTA ONE";
    |    string public constant symbol = "BTC";
  at /unique_chucks/27/0x7bf6bf4041e0dfec8cdbe56a087804e5ed6d2f9e.sol(167)

[33mWarning[0m for UnrestrictedWrite in contract 'JeromesBTC':
    |    require(newOwner != address(0));
    |    emit OwnershipTransferred(owner, newOwner);
  > |    owner = newOwner;
    |  }
    |}
  at /unique_chucks/27/0x7bf6bf4041e0dfec8cdbe56a087804e5ed6d2f9e.sol(15)

[33mWarning[0m for UnrestrictedWrite in contract 'JeromesBTC':
    |  }
    |  function finishMinting() KingPrerogative canMint public returns (bool) {
  > |    mintingFinished = true;
    |    emit MintFinished();
    |    return true;
  at /unique_chucks/27/0x7bf6bf4041e0dfec8cdbe56a087804e5ed6d2f9e.sol(124)

[33mWarning[0m for UnrestrictedWrite in contract 'JeromesBTC':
    |  }
    |  function pause() KingPrerogative whenNotPaused public {
  > |    paused = true;
    |    emit Pause();
    |  }
  at /unique_chucks/27/0x7bf6bf4041e0dfec8cdbe56a087804e5ed6d2f9e.sol(142)

[33mWarning[0m for UnrestrictedWrite in contract 'JeromesBTC':
    |  }
    |  function unpause() KingPrerogative whenPaused public {
  > |    paused = false;
    |    emit Unpause();
    |  }
  at /unique_chucks/27/0x7bf6bf4041e0dfec8cdbe56a087804e5ed6d2f9e.sol(146)

[33mWarning[0m for UnrestrictedWrite in contract 'MintableToken':
    |    require(newOwner != address(0));
    |    emit OwnershipTransferred(owner, newOwner);
  > |    owner = newOwner;
    |  }
    |}
  at /unique_chucks/27/0x7bf6bf4041e0dfec8cdbe56a087804e5ed6d2f9e.sol(15)

[33mWarning[0m for UnrestrictedWrite in contract 'MintableToken':
    |  }
    |  function finishMinting() KingPrerogative canMint public returns (bool) {
  > |    mintingFinished = true;
    |    emit MintFinished();
    |    return true;
  at /unique_chucks/27/0x7bf6bf4041e0dfec8cdbe56a087804e5ed6d2f9e.sol(124)

[33mWarning[0m for UnrestrictedWrite in contract 'Ownable':
    |    require(newOwner != address(0));
    |    emit OwnershipTransferred(owner, newOwner);
  > |    owner = newOwner;
    |  }
    |}
  at /unique_chucks/27/0x7bf6bf4041e0dfec8cdbe56a087804e5ed6d2f9e.sol(15)

[33mWarning[0m for UnrestrictedWrite in contract 'Pausable':
    |    require(newOwner != address(0));
    |    emit OwnershipTransferred(owner, newOwner);
  > |    owner = newOwner;
    |  }
    |}
  at /unique_chucks/27/0x7bf6bf4041e0dfec8cdbe56a087804e5ed6d2f9e.sol(15)

[33mWarning[0m for UnrestrictedWrite in contract 'Pausable':
    |  }
    |  function pause() KingPrerogative whenNotPaused public {
  > |    paused = true;
    |    emit Pause();
    |  }
  at /unique_chucks/27/0x7bf6bf4041e0dfec8cdbe56a087804e5ed6d2f9e.sol(142)

[33mWarning[0m for UnrestrictedWrite in contract 'Pausable':
    |  }
    |  function unpause() KingPrerogative whenPaused public {
  > |    paused = false;
    |    emit Unpause();
    |  }
  at /unique_chucks/27/0x7bf6bf4041e0dfec8cdbe56a087804e5ed6d2f9e.sol(146)

[33mWarning[0m for UnrestrictedWrite in contract 'PausableToken':
    |    // SafeMath.sub will throw if there is not enough balance.
    |    balances[msg.sender] = balances[msg.sender].sub(_value);
  > |    balances[_to] = balances[_to].add(_value);
    |    emit Transfer(msg.sender, _to, _value);
    |    return true;
  at /unique_chucks/27/0x7bf6bf4041e0dfec8cdbe56a087804e5ed6d2f9e.sol(57)

[33mWarning[0m for UnrestrictedWrite in contract 'PausableToken':
    |    require(_value <= balances[_from]);
    |    require(_value <= allowed[_from][msg.sender]);
  > |    balances[_from] = balances[_from].sub(_value);
    |    balances[_to] = balances[_to].add(_value);
    |    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
  at /unique_chucks/27/0x7bf6bf4041e0dfec8cdbe56a087804e5ed6d2f9e.sol(78)

[33mWarning[0m for UnrestrictedWrite in contract 'PausableToken':
    |    require(_value <= allowed[_from][msg.sender]);
    |    balances[_from] = balances[_from].sub(_value);
  > |    balances[_to] = balances[_to].add(_value);
    |    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
    |    emit Transfer(_from, _to, _value);
  at /unique_chucks/27/0x7bf6bf4041e0dfec8cdbe56a087804e5ed6d2f9e.sol(79)

[33mWarning[0m for UnrestrictedWrite in contract 'PausableToken':
    |    require(newOwner != address(0));
    |    emit OwnershipTransferred(owner, newOwner);
  > |    owner = newOwner;
    |  }
    |}
  at /unique_chucks/27/0x7bf6bf4041e0dfec8cdbe56a087804e5ed6d2f9e.sol(15)

[33mWarning[0m for UnrestrictedWrite in contract 'PausableToken':
    |  }
    |  function pause() KingPrerogative whenNotPaused public {
  > |    paused = true;
    |    emit Pause();
    |  }
  at /unique_chucks/27/0x7bf6bf4041e0dfec8cdbe56a087804e5ed6d2f9e.sol(142)

[33mWarning[0m for UnrestrictedWrite in contract 'PausableToken':
    |  }
    |  function unpause() KingPrerogative whenPaused public {
  > |    paused = false;
    |    emit Unpause();
    |  }
  at /unique_chucks/27/0x7bf6bf4041e0dfec8cdbe56a087804e5ed6d2f9e.sol(146)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |    // SafeMath.sub will throw if there is not enough balance.
    |    balances[msg.sender] = balances[msg.sender].sub(_value);
  > |    balances[_to] = balances[_to].add(_value);
    |    emit Transfer(msg.sender, _to, _value);
    |    return true;
  at /unique_chucks/27/0x7bf6bf4041e0dfec8cdbe56a087804e5ed6d2f9e.sol(57)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |    require(_value <= balances[_from]);
    |    require(_value <= allowed[_from][msg.sender]);
  > |    balances[_from] = balances[_from].sub(_value);
    |    balances[_to] = balances[_to].add(_value);
    |    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
  at /unique_chucks/27/0x7bf6bf4041e0dfec8cdbe56a087804e5ed6d2f9e.sol(78)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |    require(_value <= allowed[_from][msg.sender]);
    |    balances[_from] = balances[_from].sub(_value);
  > |    balances[_to] = balances[_to].add(_value);
    |    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
    |    emit Transfer(_from, _to, _value);
  at /unique_chucks/27/0x7bf6bf4041e0dfec8cdbe56a087804e5ed6d2f9e.sol(79)