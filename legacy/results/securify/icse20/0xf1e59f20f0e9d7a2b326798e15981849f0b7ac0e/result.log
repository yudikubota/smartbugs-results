Processing contract: /unique_chucks/4/0xf1e59f20f0e9d7a2b326798e15981849f0b7ac0e.sol:BasicToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/4/0xf1e59f20f0e9d7a2b326798e15981849f0b7ac0e.sol:BurnableToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/4/0xf1e59f20f0e9d7a2b326798e15981849f0b7ac0e.sol:ERC20
Processing contract: /unique_chucks/4/0xf1e59f20f0e9d7a2b326798e15981849f0b7ac0e.sol:ERC20Basic
Processing contract: /unique_chucks/4/0xf1e59f20f0e9d7a2b326798e15981849f0b7ac0e.sol:ExtoToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/4/0xf1e59f20f0e9d7a2b326798e15981849f0b7ac0e.sol:Ownable
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/4/0xf1e59f20f0e9d7a2b326798e15981849f0b7ac0e.sol:SafeERC20
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/4/0xf1e59f20f0e9d7a2b326798e15981849f0b7ac0e.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/4/0xf1e59f20f0e9d7a2b326798e15981849f0b7ac0e.sol:StandardToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[33mWarning[0m for UnrestrictedWrite in contract 'BasicToken':
    |        // SafeMath.sub will throw if there is not enough balance.
    |        balances[msg.sender] = balances[msg.sender].sub(_value);
  > |        balances[_to] = balances[_to].add(_value);
    |        emit Transfer(msg.sender, _to, _value);
    |        return true;
  at /unique_chucks/4/0xf1e59f20f0e9d7a2b326798e15981849f0b7ac0e.sol(132)

[33mWarning[0m for UnrestrictedWrite in contract 'BurnableToken':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(owner, newOwner);
  > |        owner = newOwner;
    |    }
    |
  at /unique_chucks/4/0xf1e59f20f0e9d7a2b326798e15981849f0b7ac0e.sol(75)

[33mWarning[0m for UnrestrictedWrite in contract 'BurnableToken':
    |    */
    |    function stop() onlyOwner public{
  > |        stopped = true;
    |    }
    |
  at /unique_chucks/4/0xf1e59f20f0e9d7a2b326798e15981849f0b7ac0e.sol(82)

[33mWarning[0m for UnrestrictedWrite in contract 'BurnableToken':
    |    */
    |    function start() onlyOwner public{
  > |        stopped = false;
    |    }
    |
  at /unique_chucks/4/0xf1e59f20f0e9d7a2b326798e15981849f0b7ac0e.sol(89)

[31mViolation[0m for LockedEther in contract 'ExtoToken':
    |
    |
  > |contract ExtoToken is StandardToken, BurnableToken {
    |
    |    using SafeMath for uint;
  at /unique_chucks/4/0xf1e59f20f0e9d7a2b326798e15981849f0b7ac0e.sol(275)

[33mWarning[0m for UnrestrictedWrite in contract 'ExtoToken':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(owner, newOwner);
  > |        owner = newOwner;
    |    }
    |
  at /unique_chucks/4/0xf1e59f20f0e9d7a2b326798e15981849f0b7ac0e.sol(75)

[33mWarning[0m for UnrestrictedWrite in contract 'ExtoToken':
    |    */
    |    function stop() onlyOwner public{
  > |        stopped = true;
    |    }
    |
  at /unique_chucks/4/0xf1e59f20f0e9d7a2b326798e15981849f0b7ac0e.sol(82)

[33mWarning[0m for UnrestrictedWrite in contract 'ExtoToken':
    |    */
    |    function start() onlyOwner public{
  > |        stopped = false;
    |    }
    |
  at /unique_chucks/4/0xf1e59f20f0e9d7a2b326798e15981849f0b7ac0e.sol(89)

[33mWarning[0m for UnrestrictedWrite in contract 'Ownable':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(owner, newOwner);
  > |        owner = newOwner;
    |    }
    |
  at /unique_chucks/4/0xf1e59f20f0e9d7a2b326798e15981849f0b7ac0e.sol(75)

[33mWarning[0m for UnrestrictedWrite in contract 'Ownable':
    |    */
    |    function stop() onlyOwner public{
  > |        stopped = true;
    |    }
    |
  at /unique_chucks/4/0xf1e59f20f0e9d7a2b326798e15981849f0b7ac0e.sol(82)

[33mWarning[0m for UnrestrictedWrite in contract 'Ownable':
    |    */
    |    function start() onlyOwner public{
  > |        stopped = false;
    |    }
    |
  at /unique_chucks/4/0xf1e59f20f0e9d7a2b326798e15981849f0b7ac0e.sol(89)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |        // SafeMath.sub will throw if there is not enough balance.
    |        balances[msg.sender] = balances[msg.sender].sub(_value);
  > |        balances[_to] = balances[_to].add(_value);
    |        emit Transfer(msg.sender, _to, _value);
    |        return true;
  at /unique_chucks/4/0xf1e59f20f0e9d7a2b326798e15981849f0b7ac0e.sol(132)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |        require(_value <= allowed[_from][msg.sender]);
    |
  > |        balances[_from] = balances[_from].sub(_value);
    |        balances[_to] = balances[_to].add(_value);
    |        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
  at /unique_chucks/4/0xf1e59f20f0e9d7a2b326798e15981849f0b7ac0e.sol(203)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |
    |        balances[_from] = balances[_from].sub(_value);
  > |        balances[_to] = balances[_to].add(_value);
    |        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
    |        emit Transfer(_from, _to, _value);
  at /unique_chucks/4/0xf1e59f20f0e9d7a2b326798e15981849f0b7ac0e.sol(204)