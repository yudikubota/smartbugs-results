Processing contract: /unique_chucks/15/0xc617d51e3a1f621da8ae67b2f652d6ac02eb8d95.sol:ERC20Token
Processing contract: /unique_chucks/15/0xc617d51e3a1f621da8ae67b2f652d6ac02eb8d95.sol:ExtendedStandardToken
Processing contract: /unique_chucks/15/0xc617d51e3a1f621da8ae67b2f652d6ac02eb8d95.sol:HoardToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/15/0xc617d51e3a1f621da8ae67b2f652d6ac02eb8d95.sol:Migratable
Processing contract: /unique_chucks/15/0xc617d51e3a1f621da8ae67b2f652d6ac02eb8d95.sol:MigrationAgent
Processing contract: /unique_chucks/15/0xc617d51e3a1f621da8ae67b2f652d6ac02eb8d95.sol:Mintable
Processing contract: /unique_chucks/15/0xc617d51e3a1f621da8ae67b2f652d6ac02eb8d95.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/15/0xc617d51e3a1f621da8ae67b2f652d6ac02eb8d95.sol:StandardToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for LockedEther in contract 'HoardToken':
    |/// @notice Based on MLN implementation - https://github.com/melonproject/melon/blob/master/contracts/tokens/MelonToken.sol
    |/// @notice Based on GNT implementation - https://github.com/golemfactory/golem-crowdfunding/blob/master/contracts/Token.sol
  > |contract HoardToken is ExtendedStandardToken {
    |
    |    // Token description fields
  at /unique_chucks/15/0xc617d51e3a1f621da8ae67b2f652d6ac02eb8d95.sol(308)

[33mWarning[0m for UnrestrictedWrite in contract 'HoardToken':
    |    /// @param _address address of new migration agent 
    |    function setMigrationAgent  (address _address) public {
  > |        migrationAgent = _address; 
    |    }
    |
  at /unique_chucks/15/0xc617d51e3a1f621da8ae67b2f652d6ac02eb8d95.sol(297)

[33mWarning[0m for UnrestrictedWrite in contract 'HoardToken':
    |
    |    /// @dev changes Hoard multisig address to another one
  > |    function changeHoardAddress     (address _address) onlyHoard external { hoard = _address; }
    |
    |    /// @dev changes migration master address to another one
  at /unique_chucks/15/0xc617d51e3a1f621da8ae67b2f652d6ac02eb8d95.sol(390)

[33mWarning[0m for UnrestrictedWrite in contract 'HoardToken':
    |
    |    /// @dev changes migration master address to another one
  > |    function changeMigrationMaster  (address _address) onlyHoard external { migrationMaster = _address; }
    |
    |}
  at /unique_chucks/15/0xc617d51e3a1f621da8ae67b2f652d6ac02eb8d95.sol(393)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |   function transfer(address _to, uint256 _value) public returns (bool) {
    |        balances[msg.sender] = balances[msg.sender].safeSub(_value);
  > |        balances[_to] = balances[_to].safeAdd(_value);
    |
    |        emit Transfer(msg.sender, _to, _value);            
  at /unique_chucks/15/0xc617d51e3a1f621da8ae67b2f652d6ac02eb8d95.sol(105)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |        // require (_value <= _allowance);        if (balances[_from] >= _value && allowed[_from][msg.sender] >= _value && balances[_to] + _value > balances[_to]) {
    |
  > |        balances[_to] = balances[_to].safeAdd(_value);
    |        balances[_from] = balances[_from].safeSub(_value);
    |        allowed[_from][msg.sender] = _allowance.safeSub(_value);
  at /unique_chucks/15/0xc617d51e3a1f621da8ae67b2f652d6ac02eb8d95.sol(122)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |
    |        balances[_to] = balances[_to].safeAdd(_value);
  > |        balances[_from] = balances[_from].safeSub(_value);
    |        allowed[_from][msg.sender] = _allowance.safeSub(_value);
    |
  at /unique_chucks/15/0xc617d51e3a1f621da8ae67b2f652d6ac02eb8d95.sol(123)