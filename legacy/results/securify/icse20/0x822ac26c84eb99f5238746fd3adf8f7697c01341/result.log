Processing contract: /unique_chucks/44/0x822ac26c84eb99f5238746fd3adf8f7697c01341.sol:DUSDStorage
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/44/0x822ac26c84eb99f5238746fd3adf8f7697c01341.sol:Operable
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/44/0x822ac26c84eb99f5238746fd3adf8f7697c01341.sol:Ownable
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/44/0x822ac26c84eb99f5238746fd3adf8f7697c01341.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for LockedEther in contract 'DUSDStorage':
    |}
    |
  > |contract DUSDStorage is Operable {
    |
    |    using SafeMath for uint256;
  at /unique_chucks/44/0x822ac26c84eb99f5238746fd3adf8f7697c01341.sol(144)

[33mWarning[0m for UnrestrictedWrite in contract 'DUSDStorage':
    |        require(msg.sender == _pendingOwner);
    |        emit OwnershipTransferred(_owner, _pendingOwner);
  > |        _owner = _pendingOwner;
    |        _pendingOwner = address(0);  
    |    }
  at /unique_chucks/44/0x822ac26c84eb99f5238746fd3adf8f7697c01341.sol(98)

[33mWarning[0m for UnrestrictedWrite in contract 'DUSDStorage':
    |        emit OwnershipTransferred(_owner, _pendingOwner);
    |        _owner = _pendingOwner;
  > |        _pendingOwner = address(0);  
    |    }
    |}
  at /unique_chucks/44/0x822ac26c84eb99f5238746fd3adf8f7697c01341.sol(99)

[33mWarning[0m for UnrestrictedWrite in contract 'DUSDStorage':
    |        require(isContract(_newOperator), "New operator must be contract address");
    |        emit OperatorChanged(_operator, _newOperator);
  > |        _operator = _newOperator;
    |    }
    |
  at /unique_chucks/44/0x822ac26c84eb99f5238746fd3adf8f7697c01341.sol(139)

[33mWarning[0m for UnrestrictedWrite in contract 'DUSDStorage':
    |
    |    function addBalance(address _holder, uint256 _value) public onlyOperator {
  > |        balances[_holder] = balances[_holder].add(_value);
    |    }
    |
  at /unique_chucks/44/0x822ac26c84eb99f5238746fd3adf8f7697c01341.sol(181)

[33mWarning[0m for UnrestrictedWrite in contract 'DUSDStorage':
    |
    |    function subBalance(address _holder, uint256 _value) public onlyOperator {
  > |        balances[_holder] = balances[_holder].sub(_value);
    |    }
    |
  at /unique_chucks/44/0x822ac26c84eb99f5238746fd3adf8f7697c01341.sol(185)

[33mWarning[0m for UnrestrictedWrite in contract 'DUSDStorage':
    |
    |    function setBalance(address _holder, uint256 _value) public onlyOperator {
  > |        balances[_holder] = _value;
    |    }
    |    
  at /unique_chucks/44/0x822ac26c84eb99f5238746fd3adf8f7697c01341.sol(189)

[33mWarning[0m for UnrestrictedWrite in contract 'DUSDStorage':
    |
    |    function addAllowance(address _holder, address _spender, uint256 _value) public onlyOperator {
  > |        allowances[_holder][_spender] = allowances[_holder][_spender].add(_value);
    |    }
    |
  at /unique_chucks/44/0x822ac26c84eb99f5238746fd3adf8f7697c01341.sol(197)

[33mWarning[0m for UnrestrictedWrite in contract 'DUSDStorage':
    |
    |    function subAllowance(address _holder, address _spender, uint256 _value) public onlyOperator {
  > |        allowances[_holder][_spender] = allowances[_holder][_spender].sub(_value);
    |    }
    |
  at /unique_chucks/44/0x822ac26c84eb99f5238746fd3adf8f7697c01341.sol(201)

[33mWarning[0m for UnrestrictedWrite in contract 'DUSDStorage':
    |
    |    function setAllowance(address _holder, address _spender, uint256 _value) public onlyOperator {
  > |        allowances[_holder][_spender] = _value;
    |    }
    |
  at /unique_chucks/44/0x822ac26c84eb99f5238746fd3adf8f7697c01341.sol(205)

[33mWarning[0m for UnrestrictedWrite in contract 'DUSDStorage':
    |
    |    function addTotalSupply(uint256 _value) public onlyOperator {
  > |        totalSupply = totalSupply.add(_value);
    |    }
    |
  at /unique_chucks/44/0x822ac26c84eb99f5238746fd3adf8f7697c01341.sol(209)

[33mWarning[0m for UnrestrictedWrite in contract 'DUSDStorage':
    |
    |    function subTotalSupply(uint256 _value) public onlyOperator {
  > |        totalSupply = totalSupply.sub(_value);
    |    }
    |
  at /unique_chucks/44/0x822ac26c84eb99f5238746fd3adf8f7697c01341.sol(213)

[33mWarning[0m for UnrestrictedWrite in contract 'DUSDStorage':
    |
    |    function setTotalSupply(uint256 _value) public onlyOperator {
  > |        totalSupply = _value;
    |    }
    |
  at /unique_chucks/44/0x822ac26c84eb99f5238746fd3adf8f7697c01341.sol(217)

[33mWarning[0m for UnrestrictedWrite in contract 'DUSDStorage':
    |
    |    function addBlackList(address user) public onlyOperator {
  > |        blackList[user] = true;
    |    }
    |
  at /unique_chucks/44/0x822ac26c84eb99f5238746fd3adf8f7697c01341.sol(221)

[33mWarning[0m for UnrestrictedWrite in contract 'DUSDStorage':
    |
    |    function removeBlackList (address user) public onlyOperator {
  > |        blackList[user] = false;
    |    }
    |    
  at /unique_chucks/44/0x822ac26c84eb99f5238746fd3adf8f7697c01341.sol(225)

[33mWarning[0m for UnrestrictedWrite in contract 'DUSDStorage':
    |    
    |    function pause() public onlyOperator {
  > |        paused = true;
    |    }
    |    
  at /unique_chucks/44/0x822ac26c84eb99f5238746fd3adf8f7697c01341.sol(237)

[33mWarning[0m for UnrestrictedWrite in contract 'DUSDStorage':
    |    
    |    function unpause() public onlyOperator {
  > |        paused = false;
    |    }
    |
  at /unique_chucks/44/0x822ac26c84eb99f5238746fd3adf8f7697c01341.sol(241)

[33mWarning[0m for UnrestrictedWrite in contract 'Operable':
    |        require(msg.sender == _pendingOwner);
    |        emit OwnershipTransferred(_owner, _pendingOwner);
  > |        _owner = _pendingOwner;
    |        _pendingOwner = address(0);  
    |    }
  at /unique_chucks/44/0x822ac26c84eb99f5238746fd3adf8f7697c01341.sol(98)

[33mWarning[0m for UnrestrictedWrite in contract 'Operable':
    |        emit OwnershipTransferred(_owner, _pendingOwner);
    |        _owner = _pendingOwner;
  > |        _pendingOwner = address(0);  
    |    }
    |}
  at /unique_chucks/44/0x822ac26c84eb99f5238746fd3adf8f7697c01341.sol(99)

[33mWarning[0m for UnrestrictedWrite in contract 'Operable':
    |        require(isContract(_newOperator), "New operator must be contract address");
    |        emit OperatorChanged(_operator, _newOperator);
  > |        _operator = _newOperator;
    |    }
    |
  at /unique_chucks/44/0x822ac26c84eb99f5238746fd3adf8f7697c01341.sol(139)

[33mWarning[0m for UnrestrictedWrite in contract 'Ownable':
    |        require(msg.sender == _pendingOwner);
    |        emit OwnershipTransferred(_owner, _pendingOwner);
  > |        _owner = _pendingOwner;
    |        _pendingOwner = address(0);  
    |    }
  at /unique_chucks/44/0x822ac26c84eb99f5238746fd3adf8f7697c01341.sol(98)

[33mWarning[0m for UnrestrictedWrite in contract 'Ownable':
    |        emit OwnershipTransferred(_owner, _pendingOwner);
    |        _owner = _pendingOwner;
  > |        _pendingOwner = address(0);  
    |    }
    |}
  at /unique_chucks/44/0x822ac26c84eb99f5238746fd3adf8f7697c01341.sol(99)