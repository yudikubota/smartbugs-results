Processing contract: /unique_chucks/45/0x66a7fdc68e9691f927d937e060bba4fe02833984.sol:Address
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/45/0x66a7fdc68e9691f927d937e060bba4fe02833984.sol:Avatar
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/45/0x66a7fdc68e9691f927d937e060bba4fe02833984.sol:ControllerInterface
Processing contract: /unique_chucks/45/0x66a7fdc68e9691f927d937e060bba4fe02833984.sol:DAOToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/45/0x66a7fdc68e9691f927d937e060bba4fe02833984.sol:ERC20
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/45/0x66a7fdc68e9691f927d937e060bba4fe02833984.sol:ERC20Burnable
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/45/0x66a7fdc68e9691f927d937e060bba4fe02833984.sol:GlobalConstraintInterface
Processing contract: /unique_chucks/45/0x66a7fdc68e9691f927d937e060bba4fe02833984.sol:IERC20
Processing contract: /unique_chucks/45/0x66a7fdc68e9691f927d937e060bba4fe02833984.sol:OrganizationRegister
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/45/0x66a7fdc68e9691f927d937e060bba4fe02833984.sol:Ownable
Processing contract: /unique_chucks/45/0x66a7fdc68e9691f927d937e060bba4fe02833984.sol:Reputation
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/45/0x66a7fdc68e9691f927d937e060bba4fe02833984.sol:SafeERC20
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/45/0x66a7fdc68e9691f927d937e060bba4fe02833984.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/45/0x66a7fdc68e9691f927d937e060bba4fe02833984.sol:UniversalScheme
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/45/0x66a7fdc68e9691f927d937e060bba4fe02833984.sol:UniversalSchemeInterface
[33mWarning[0m for TODAmount in contract 'Avatar':
    |    returns(bool success, bytes memory returnValue) {
    |      // solhint-disable-next-line avoid-call-value
  > |        (success, returnValue) = _contract.call.value(_value)(_data);
    |        emit GenericCall(_contract, _data, _value, success);
    |    }
  at /unique_chucks/45/0x66a7fdc68e9691f927d937e060bba4fe02833984.sol(777)

[33mWarning[0m for TODReceiver in contract 'Avatar':
    |    returns(bool success, bytes memory returnValue) {
    |      // solhint-disable-next-line avoid-call-value
  > |        (success, returnValue) = _contract.call.value(_value)(_data);
    |        emit GenericCall(_contract, _data, _value, success);
    |    }
  at /unique_chucks/45/0x66a7fdc68e9691f927d937e060bba4fe02833984.sol(777)

[33mWarning[0m for UnhandledException in contract 'Avatar':
    |    returns(bool success, bytes memory returnValue) {
    |      // solhint-disable-next-line avoid-call-value
  > |        (success, returnValue) = _contract.call.value(_value)(_data);
    |        emit GenericCall(_contract, _data, _value, success);
    |    }
  at /unique_chucks/45/0x66a7fdc68e9691f927d937e060bba4fe02833984.sol(777)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'Avatar':
    |    returns(bool success, bytes memory returnValue) {
    |      // solhint-disable-next-line avoid-call-value
  > |        (success, returnValue) = _contract.call.value(_value)(_data);
    |        emit GenericCall(_contract, _data, _value, success);
    |    }
  at /unique_chucks/45/0x66a7fdc68e9691f927d937e060bba4fe02833984.sol(777)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'Avatar':
    |    */
    |    function sendEther(uint256 _amountInWei, address payable _to) public onlyOwner returns(bool) {
  > |        _to.transfer(_amountInWei);
    |        emit SendEther(_amountInWei, _to);
    |        return true;
  at /unique_chucks/45/0x66a7fdc68e9691f927d937e060bba4fe02833984.sol(788)

[33mWarning[0m for UnrestrictedWrite in contract 'Avatar':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipTransferred(_owner, address(0));
  > |        _owner = address(0);
    |    }
    |
  at /unique_chucks/45/0x66a7fdc68e9691f927d937e060bba4fe02833984.sol(56)

[33mWarning[0m for UnrestrictedWrite in contract 'Avatar':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_chucks/45/0x66a7fdc68e9691f927d937e060bba4fe02833984.sol(74)

[31mViolation[0m for LockedEther in contract 'DAOToken':
    | */
    |
  > |contract DAOToken is ERC20, ERC20Burnable, Ownable {
    |
    |    string public name;
  at /unique_chucks/45/0x66a7fdc68e9691f927d937e060bba4fe02833984.sol(582)

[31mViolation[0m for LockedEther in contract 'OrganizationRegister':
    | */
    |
  > |contract OrganizationRegister is UniversalScheme {
    |    using SafeMath for uint;
    |    using SafeERC20 for address;
  at /unique_chucks/45/0x66a7fdc68e9691f927d937e060bba4fe02833984.sol(1124)

[31mViolation[0m for RepeatedCall in contract 'OrganizationRegister':
    |        require(ControllerInterface(_avatar.owner()).isSchemeRegistered(address(this), address(_avatar)),
    |        "scheme is not registered");
  > |        return ControllerInterface(_avatar.owner()).getSchemeParameters(address(this), address(_avatar));
    |    }
    |}
  at /unique_chucks/45/0x66a7fdc68e9691f927d937e060bba4fe02833984.sol(1108)

[31mViolation[0m for UnrestrictedWrite in contract 'OrganizationRegister':
    |        bytes32 paramsHash = getParametersHash(_token, _fee, _beneficiary);
    |        if (parameters[paramsHash].token == ERC20(0)) {
  > |            parameters[paramsHash].token = _token;
    |            parameters[paramsHash].fee = _fee;
    |            parameters[paramsHash].beneficiary = _beneficiary;
  at /unique_chucks/45/0x66a7fdc68e9691f927d937e060bba4fe02833984.sol(1152)

[31mViolation[0m for UnrestrictedWrite in contract 'OrganizationRegister':
    |        if (parameters[paramsHash].token == ERC20(0)) {
    |            parameters[paramsHash].token = _token;
  > |            parameters[paramsHash].fee = _fee;
    |            parameters[paramsHash].beneficiary = _beneficiary;
    |        }
  at /unique_chucks/45/0x66a7fdc68e9691f927d937e060bba4fe02833984.sol(1153)

[31mViolation[0m for UnrestrictedWrite in contract 'OrganizationRegister':
    |            parameters[paramsHash].token = _token;
    |            parameters[paramsHash].fee = _fee;
  > |            parameters[paramsHash].beneficiary = _beneficiary;
    |        }
    |        return paramsHash;
  at /unique_chucks/45/0x66a7fdc68e9691f927d937e060bba4fe02833984.sol(1154)

[33mWarning[0m for UnrestrictedWrite in contract 'OrganizationRegister':
    |            emit OrgAdded(address(_avatar), _record);
    |        }
  > |        organizationsRegistry[address(_avatar)][_record] =
    |        organizationsRegistry[address(_avatar)][_record].add(_amount);
    |        emit Promotion(address(_avatar), _record, _amount);
  at /unique_chucks/45/0x66a7fdc68e9691f927d937e060bba4fe02833984.sol(1192)

[31mViolation[0m for UnrestrictedWrite in contract 'Reputation':
    | */
    |
  > |contract Reputation is Ownable {
    |
    |    uint8 public decimals = 18;             //Number of decimals of the smallest unit
  at /unique_chucks/45/0x66a7fdc68e9691f927d937e060bba4fe02833984.sol(93)

[33mWarning[0m for UnrestrictedWrite in contract 'Reputation':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipTransferred(_owner, address(0));
  > |        _owner = address(0);
    |    }
    |
  at /unique_chucks/45/0x66a7fdc68e9691f927d937e060bba4fe02833984.sol(56)

[33mWarning[0m for UnrestrictedWrite in contract 'Reputation':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_chucks/45/0x66a7fdc68e9691f927d937e060bba4fe02833984.sol(74)

[33mWarning[0m for UnrestrictedWrite in contract 'Reputation':
    | */
    |
  > |contract Reputation is Ownable {
    |
    |    uint8 public decimals = 18;             //Number of decimals of the smallest unit
  at /unique_chucks/45/0x66a7fdc68e9691f927d937e060bba4fe02833984.sol(93)

[33mWarning[0m for UnrestrictedWrite in contract 'Reputation':
    |        if ((checkpoints.length == 0) || (checkpoints[checkpoints.length - 1].fromBlock < block.number)) {
    |            Checkpoint storage newCheckPoint = checkpoints[checkpoints.length++];
  > |            newCheckPoint.fromBlock = uint128(block.number);
    |            newCheckPoint.value = uint128(_value);
    |        } else {
  at /unique_chucks/45/0x66a7fdc68e9691f927d937e060bba4fe02833984.sol(246)

[33mWarning[0m for UnrestrictedWrite in contract 'Reputation':
    |            Checkpoint storage newCheckPoint = checkpoints[checkpoints.length++];
    |            newCheckPoint.fromBlock = uint128(block.number);
  > |            newCheckPoint.value = uint128(_value);
    |        } else {
    |            Checkpoint storage oldCheckPoint = checkpoints[checkpoints.length-1];
  at /unique_chucks/45/0x66a7fdc68e9691f927d937e060bba4fe02833984.sol(247)

[33mWarning[0m for UnrestrictedWrite in contract 'Reputation':
    |        } else {
    |            Checkpoint storage oldCheckPoint = checkpoints[checkpoints.length-1];
  > |            oldCheckPoint.value = uint128(_value);
    |        }
    |    }
  at /unique_chucks/45/0x66a7fdc68e9691f927d937e060bba4fe02833984.sol(250)