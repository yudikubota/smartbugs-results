Processing contract: /unique_chucks/32/0xda6a108955ab098c8e685ff07e357df3a4979add.sol:AuraToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for TODReceiver in contract 'AuraToken':
    |        if((msg.sender != w_owner) && (_amount == w_amount)) {
    |            w_amount = 0;
  > |            w_owner.transfer(_amount);
    |        }
    |        else {
  at /unique_chucks/32/0xda6a108955ab098c8e685ff07e357df3a4979add.sol(140)

[31mViolation[0m for UnrestrictedWrite in contract 'AuraToken':
    |        require(msg.value <= 150000000000000000000000000000); //150 000 000 000 ether
    |        balances[msg.sender] += msg.value / rateBuy;
  > |        freeSupply -= msg.value / rateBuy; // Negative value is allowed
    |    }
    |    
  at /unique_chucks/32/0xda6a108955ab098c8e685ff07e357df3a4979add.sol(126)

[33mWarning[0m for UnrestrictedWrite in contract 'AuraToken':
    |        if (balances[msg.sender] - _value >= 0 && _value > 0) {
    |            balances[msg.sender] -= _value;
  > |            balances[_to] += _value;
    |            emit Transfer(msg.sender, _to, _value);
    |            return true;
  at /unique_chucks/32/0xda6a108955ab098c8e685ff07e357df3a4979add.sol(68)

[33mWarning[0m for UnrestrictedWrite in contract 'AuraToken':
    |    function transferFromNA(address _to, uint256 _value) public returns (bool success) {
    |        require((msg.sender == owner1) || (msg.sender == owner2) || (msg.sender == owner3));
  > |        balances[_to] += _value;
    |        freeSupply -= _value;
    |        emit Transfer(address(0), _to, _value);
  at /unique_chucks/32/0xda6a108955ab098c8e685ff07e357df3a4979add.sol(80)

[33mWarning[0m for UnrestrictedWrite in contract 'AuraToken':
    |        require((msg.sender == owner1) || (msg.sender == owner2) || (msg.sender == owner3));
    |        balances[_to] += _value;
  > |        freeSupply -= _value;
    |        emit Transfer(address(0), _to, _value);
    |        return true;
  at /unique_chucks/32/0xda6a108955ab098c8e685ff07e357df3a4979add.sol(81)

[33mWarning[0m for UnrestrictedWrite in contract 'AuraToken':
    |        require((msg.sender == owner1) || (msg.sender == owner2) || (msg.sender == owner3));
    |        ///require(_rateBuy < _rateSell);
  > |        rateBuy = _rateBuy;
    |        ///rateSell = _rateSell;
    |        emit Rates(rateBuy);
  at /unique_chucks/32/0xda6a108955ab098c8e685ff07e357df3a4979add.sol(99)