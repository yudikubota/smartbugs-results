Processing contract: /unique_chucks/42/0xa4b01a89162141c58505ea43db2d3bda71a325c2.sol:CappedCrowdsale
Processing contract: /unique_chucks/42/0xa4b01a89162141c58505ea43db2d3bda71a325c2.sol:Crowdsale
Processing contract: /unique_chucks/42/0xa4b01a89162141c58505ea43db2d3bda71a325c2.sol:ERC20
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/42/0xa4b01a89162141c58505ea43db2d3bda71a325c2.sol:ERC20Detailed
Processing contract: /unique_chucks/42/0xa4b01a89162141c58505ea43db2d3bda71a325c2.sol:ERC20Mintable
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/42/0xa4b01a89162141c58505ea43db2d3bda71a325c2.sol:IERC20
Processing contract: /unique_chucks/42/0xa4b01a89162141c58505ea43db2d3bda71a325c2.sol:MintedCrowdsale
Processing contract: /unique_chucks/42/0xa4b01a89162141c58505ea43db2d3bda71a325c2.sol:MinterRole
Processing contract: /unique_chucks/42/0xa4b01a89162141c58505ea43db2d3bda71a325c2.sol:ReentrancyGuard
Processing contract: /unique_chucks/42/0xa4b01a89162141c58505ea43db2d3bda71a325c2.sol:Roles
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/42/0xa4b01a89162141c58505ea43db2d3bda71a325c2.sol:SafeERC20
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/42/0xa4b01a89162141c58505ea43db2d3bda71a325c2.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/42/0xa4b01a89162141c58505ea43db2d3bda71a325c2.sol:TXCSale
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/42/0xa4b01a89162141c58505ea43db2d3bda71a325c2.sol:TXCast
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[33mWarning[0m for UnrestrictedWrite in contract 'ERC20Mintable':
    |  function _mint(address account, uint256 value) internal {
    |    require(account != address(0));
  > |    _totalSupply = _totalSupply.add(value);
    |    _balances[account] = _balances[account].add(value);
    |    emit Transfer(address(0), account, value);
  at /unique_chucks/42/0xa4b01a89162141c58505ea43db2d3bda71a325c2.sol(302)

[33mWarning[0m for TODAmount in contract 'TXCSale':
    |   */
    |  function _forwardFunds() internal {
  > |    _wallet.transfer(msg.value);
    |  }
    |}
  at /unique_chucks/42/0xa4b01a89162141c58505ea43db2d3bda71a325c2.sol(838)

[31mViolation[0m for UnrestrictedWrite in contract 'TXCSale':
    |   */
    |  modifier nonReentrant() {
  > |    _guardCounter += 1;
    |    uint256 localCounter = _guardCounter;
    |    _;
  at /unique_chucks/42/0xa4b01a89162141c58505ea43db2d3bda71a325c2.sol(597)

[33mWarning[0m for UnrestrictedWrite in contract 'TXCSale':
    |
    |    // update state
  > |    _weiRaised = _weiRaised.add(weiAmount);
    |
    |    _processPurchase(beneficiary, tokens);
  at /unique_chucks/42/0xa4b01a89162141c58505ea43db2d3bda71a325c2.sol(726)

[31mViolation[0m for LockedEther in contract 'TXCast':
    |// File: contracts/TXCast.sol
    |
  > |contract TXCast is ERC20Mintable, ERC20Detailed {
    |  constructor () public ERC20Detailed("TXCast", "TXC", 0) {}
    |}
  at /unique_chucks/42/0xa4b01a89162141c58505ea43db2d3bda71a325c2.sol(496)

[33mWarning[0m for UnrestrictedWrite in contract 'TXCast':
    |  function _mint(address account, uint256 value) internal {
    |    require(account != address(0));
  > |    _totalSupply = _totalSupply.add(value);
    |    _balances[account] = _balances[account].add(value);
    |    emit Transfer(address(0), account, value);
  at /unique_chucks/42/0xa4b01a89162141c58505ea43db2d3bda71a325c2.sol(302)