Processing contract: /unique_chucks/4/0x83076f026b72df648673f9a81c771ae9c7446f21.sol:Ownable
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/4/0x83076f026b72df648673f9a81c771ae9c7446f21.sol:RunOnChain
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for UnrestrictedWrite in contract 'Ownable':
    |    function ownerAdd(address _newOwner) ownerOnly public {
    |        require(_newOwner != address(0));
  > |        owner[_newOwner] = true;
    |        
    |        emit AddedOwner(_newOwner);
  at /unique_chucks/4/0x83076f026b72df648673f9a81c771ae9c7446f21.sol(22)

[33mWarning[0m for UnrestrictedWrite in contract 'Ownable':
    |        require(_toRemove != msg.sender);
    |        //owner[_toRemove] = false;
  > |        delete owner[_toRemove];
    |        
    |        emit RemovedOwner(_toRemove);
  at /unique_chucks/4/0x83076f026b72df648673f9a81c771ae9c7446f21.sol(31)

[31mViolation[0m for UnrestrictedWrite in contract 'RunOnChain':
    |
    |
  > |contract Ownable {
    |    
    |    mapping(address => bool) internal owner;
  at /unique_chucks/4/0x83076f026b72df648673f9a81c771ae9c7446f21.sol(4)

[31mViolation[0m for UnrestrictedWrite in contract 'RunOnChain':
    |    function ownerAdd(address _newOwner) ownerOnly public {
    |        require(_newOwner != address(0));
  > |        owner[_newOwner] = true;
    |        
    |        emit AddedOwner(_newOwner);
  at /unique_chucks/4/0x83076f026b72df648673f9a81c771ae9c7446f21.sol(22)

[31mViolation[0m for UnrestrictedWrite in contract 'RunOnChain':
    |
    |
  > |contract RunOnChain is Ownable {
    |
    |
  at /unique_chucks/4/0x83076f026b72df648673f9a81c771ae9c7446f21.sol(38)

[31mViolation[0m for UnrestrictedWrite in contract 'RunOnChain':
    |        mensuTemp.DeviceDatetime = deviceDatetime;
    |        
  > |        Mensurations[eventId][runnerId].push(mensuTemp);
    |        
    |        return true;
  at /unique_chucks/4/0x83076f026b72df648673f9a81c771ae9c7446f21.sol(66)

[33mWarning[0m for UnrestrictedWrite in contract 'RunOnChain':
    |        require(_toRemove != msg.sender);
    |        //owner[_toRemove] = false;
  > |        delete owner[_toRemove];
    |        
    |        emit RemovedOwner(_toRemove);
  at /unique_chucks/4/0x83076f026b72df648673f9a81c771ae9c7446f21.sol(31)