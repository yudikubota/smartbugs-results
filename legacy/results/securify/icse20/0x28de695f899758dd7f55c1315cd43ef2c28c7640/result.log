Processing contract: /unique_chucks/15/0x28de695f899758dd7f55c1315cd43ef2c28c7640.sol:BasicToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/15/0x28de695f899758dd7f55c1315cd43ef2c28c7640.sol:BurnableToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/15/0x28de695f899758dd7f55c1315cd43ef2c28c7640.sol:ERC20
Processing contract: /unique_chucks/15/0x28de695f899758dd7f55c1315cd43ef2c28c7640.sol:ERC20Basic
Processing contract: /unique_chucks/15/0x28de695f899758dd7f55c1315cd43ef2c28c7640.sol:Ownable
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/15/0x28de695f899758dd7f55c1315cd43ef2c28c7640.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/15/0x28de695f899758dd7f55c1315cd43ef2c28c7640.sol:StandardToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/15/0x28de695f899758dd7f55c1315cd43ef2c28c7640.sol:TOMTToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[33mWarning[0m for UnrestrictedWrite in contract 'BasicToken':
    |    require(balances[msg.sender] >= _amount && _amount > 0 && balances[_to].add(_amount) > balances[_to]);
    |    balances[msg.sender] = balances[msg.sender].sub(_amount);
  > |    balances[_to] = balances[_to].add(_amount);
    |    emit Transfer(msg.sender, _to, _amount);
    |    return true;
  at /unique_chucks/15/0x28de695f899758dd7f55c1315cd43ef2c28c7640.sol(65)

[33mWarning[0m for UnrestrictedWrite in contract 'Ownable':
    |    require(newOwner != address(0));
    |    emit OwnershipTransferred(owner, newOwner);
  > |    owner = newOwner;
    |  }
    |}
  at /unique_chucks/15/0x28de695f899758dd7f55c1315cd43ef2c28c7640.sol(43)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |    require(balances[msg.sender] >= _amount && _amount > 0 && balances[_to].add(_amount) > balances[_to]);
    |    balances[msg.sender] = balances[msg.sender].sub(_amount);
  > |    balances[_to] = balances[_to].add(_amount);
    |    emit Transfer(msg.sender, _to, _amount);
    |    return true;
  at /unique_chucks/15/0x28de695f899758dd7f55c1315cd43ef2c28c7640.sol(65)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |    require(allowed[_from][msg.sender] >= _amount);
    |    require(_amount > 0 && balances[_to].add(_amount) > balances[_to]);
  > |    balances[_from] = balances[_from].sub(_amount);
    |    balances[_to] = balances[_to].add(_amount);
    |    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_amount);
  at /unique_chucks/15/0x28de695f899758dd7f55c1315cd43ef2c28c7640.sol(80)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |    require(_amount > 0 && balances[_to].add(_amount) > balances[_to]);
    |    balances[_from] = balances[_from].sub(_amount);
  > |    balances[_to] = balances[_to].add(_amount);
    |    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_amount);
    |    emit Transfer(_from, _to, _amount);
  at /unique_chucks/15/0x28de695f899758dd7f55c1315cd43ef2c28c7640.sol(81)

[31mViolation[0m for LockedEther in contract 'TOMTToken':
    |    }
    |}
  > |contract TOMTToken is BurnableToken {
    |    string public name = "TOMCAT TOKEN";
    |    string public symbol = "TOMT";
  at /unique_chucks/15/0x28de695f899758dd7f55c1315cd43ef2c28c7640.sol(104)