Processing contract: /unique_chucks/44/0x74106fae96a5f969c88bff8b9c43dbcb663cd890.sol:Ownable
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/44/0x74106fae96a5f969c88bff8b9c43dbcb663cd890.sol:Randao
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/44/0x74106fae96a5f969c88bff8b9c43dbcb663cd890.sol:iRNG
[33mWarning[0m for UnrestrictedWrite in contract 'Ownable':
    |    function transferOwnership(address newOwner) public onlyOwner {
    |        require(newOwner != address(0), "");
  > |        owner = newOwner;
    |    }
    |
  at /unique_chucks/44/0x74106fae96a5f969c88bff8b9c43dbcb663cd890.sol(17)

[31mViolation[0m for DAOConstantGas in contract 'Randao':
    |        p.reward = _share;
    |        p.rewarded = true;
  > |        if (!msg.sender.send(_share + c.deposit)) {
    |            p.reward = 0;
    |            p.rewarded = false;
  at /unique_chucks/44/0x74106fae96a5f969c88bff8b9c43dbcb663cd890.sol(279)

[31mViolation[0m for DAOConstantGas in contract 'Randao':
    |        uint256 bountypot = c.consumers[msg.sender].bountypot;
    |        c.consumers[msg.sender].bountypot = 0;
  > |        if (!msg.sender.send(bountypot)) {
    |            c.consumers[msg.sender].bountypot = bountypot;
    |        }
  at /unique_chucks/44/0x74106fae96a5f969c88bff8b9c43dbcb663cd890.sol(313)

[33mWarning[0m for TODAmount in contract 'Randao':
    |        p.reward = _share;
    |        p.rewarded = true;
  > |        if (!msg.sender.send(_share + c.deposit)) {
    |            p.reward = 0;
    |            p.rewarded = false;
  at /unique_chucks/44/0x74106fae96a5f969c88bff8b9c43dbcb663cd890.sol(279)

[33mWarning[0m for TODAmount in contract 'Randao':
    |        uint256 bountypot = c.consumers[msg.sender].bountypot;
    |        c.consumers[msg.sender].bountypot = 0;
  > |        if (!msg.sender.send(bountypot)) {
    |            c.consumers[msg.sender].bountypot = bountypot;
    |        }
  at /unique_chucks/44/0x74106fae96a5f969c88bff8b9c43dbcb663cd890.sol(313)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'Randao':
    |        p.reward = _share;
    |        p.rewarded = true;
  > |        if (!msg.sender.send(_share + c.deposit)) {
    |            p.reward = 0;
    |            p.rewarded = false;
  at /unique_chucks/44/0x74106fae96a5f969c88bff8b9c43dbcb663cd890.sol(279)

[31mViolation[0m for UnrestrictedWrite in contract 'Randao':
    |
    |
  > |contract Randao is Ownable {
    |    struct Participant {
    |        uint256   secret;
  at /unique_chucks/44/0x74106fae96a5f969c88bff8b9c43dbcb663cd890.sol(27)

[31mViolation[0m for UnrestrictedWrite in contract 'Randao':
    |        _campaignID = campaigns.length++;
    |        Campaign storage c = campaigns[_campaignID];
  > |        numCampaigns++;
    |        c.bnum = _bnum;
    |        c.deposit = _deposit;
  at /unique_chucks/44/0x74106fae96a5f969c88bff8b9c43dbcb663cd890.sol(108)

[31mViolation[0m for UnrestrictedWrite in contract 'Randao':
    |        Campaign storage c = campaigns[_campaignID];
    |        numCampaigns++;
  > |        c.bnum = _bnum;
    |        c.deposit = _deposit;
    |        c.commitBalkline = _commitBalkline;
  at /unique_chucks/44/0x74106fae96a5f969c88bff8b9c43dbcb663cd890.sol(109)

[31mViolation[0m for UnrestrictedWrite in contract 'Randao':
    |        numCampaigns++;
    |        c.bnum = _bnum;
  > |        c.deposit = _deposit;
    |        c.commitBalkline = _commitBalkline;
    |        c.commitDeadline = _commitDeadline;
  at /unique_chucks/44/0x74106fae96a5f969c88bff8b9c43dbcb663cd890.sol(110)

[31mViolation[0m for UnrestrictedWrite in contract 'Randao':
    |        c.bnum = _bnum;
    |        c.deposit = _deposit;
  > |        c.commitBalkline = _commitBalkline;
    |        c.commitDeadline = _commitDeadline;
    |        c.bountypot = msg.value;
  at /unique_chucks/44/0x74106fae96a5f969c88bff8b9c43dbcb663cd890.sol(111)

[31mViolation[0m for UnrestrictedWrite in contract 'Randao':
    |        c.deposit = _deposit;
    |        c.commitBalkline = _commitBalkline;
  > |        c.commitDeadline = _commitDeadline;
    |        c.bountypot = msg.value;
    |        c.consumers[msg.sender] = Consumer(msg.sender, msg.value);
  at /unique_chucks/44/0x74106fae96a5f969c88bff8b9c43dbcb663cd890.sol(112)

[31mViolation[0m for UnrestrictedWrite in contract 'Randao':
    |        c.commitBalkline = _commitBalkline;
    |        c.commitDeadline = _commitDeadline;
  > |        c.bountypot = msg.value;
    |        c.consumers[msg.sender] = Consumer(msg.sender, msg.value);
    |        emit LogCampaignAdded(_campaignID, msg.sender, _bnum, _deposit, _commitBalkline, _commitDeadline, msg.value);
  at /unique_chucks/44/0x74106fae96a5f969c88bff8b9c43dbcb663cd890.sol(113)

[31mViolation[0m for UnrestrictedWrite in contract 'Randao':
    |        returns (bool)
    |    {
  > |        c.bountypot += msg.value;
    |        c.consumers[msg.sender] = Consumer(msg.sender, msg.value);
    |        emit LogFollow(_campaignID, msg.sender, msg.value);
  at /unique_chucks/44/0x74106fae96a5f969c88bff8b9c43dbcb663cd890.sol(145)

[31mViolation[0m for UnrestrictedWrite in contract 'Randao':
    |    {
    |        c.participants[msg.sender] = Participant(0, _hs, 0, false, false);
  > |        c.commitNum++;
    |        emit LogCommit(_campaignID, msg.sender, _hs);
    |    }
  at /unique_chucks/44/0x74106fae96a5f969c88bff8b9c43dbcb663cd890.sol(177)

[31mViolation[0m for UnrestrictedWrite in contract 'Randao':
    |        p.secret = _s;
    |        p.revealed = true;
  > |        c.revealsNum++;
    |        c.random ^= uint256(keccak256(abi.encodePacked(p.secret)));
    |        emit LogReveal(_campaignID, msg.sender, _s);
  at /unique_chucks/44/0x74106fae96a5f969c88bff8b9c43dbcb663cd890.sol(213)

[31mViolation[0m for UnrestrictedWrite in contract 'Randao':
    |        p.revealed = true;
    |        c.revealsNum++;
  > |        c.random ^= uint256(keccak256(abi.encodePacked(p.secret)));
    |        emit LogReveal(_campaignID, msg.sender, _s);
    |    }
  at /unique_chucks/44/0x74106fae96a5f969c88bff8b9c43dbcb663cd890.sol(214)

[31mViolation[0m for UnrestrictedWrite in contract 'Randao':
    |    function returnRandom(Campaign storage c) bountyPhase(c.bnum) internal returns (uint256) {
    |        if (c.revealsNum > 0) {
  > |            c.settled = true;
    |            return c.random;
    |        }
  at /unique_chucks/44/0x74106fae96a5f969c88bff8b9c43dbcb663cd890.sol(227)

[33mWarning[0m for UnrestrictedWrite in contract 'Randao':
    |    function transferOwnership(address newOwner) public onlyOwner {
    |        require(newOwner != address(0), "");
  > |        owner = newOwner;
    |    }
    |
  at /unique_chucks/44/0x74106fae96a5f969c88bff8b9c43dbcb663cd890.sol(17)

[33mWarning[0m for UnrestrictedWrite in contract 'Randao':
    |        require(_rng != address(0));
    |
  > |        rng = _rng;
    |    }
    |
  at /unique_chucks/44/0x74106fae96a5f969c88bff8b9c43dbcb663cd890.sol(333)