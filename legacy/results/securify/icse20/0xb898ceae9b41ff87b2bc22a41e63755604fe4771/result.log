Processing contract: /unique_contracts/0xb898ceae9b41ff87b2bc22a41e63755604fe4771.sol:CryptoLott
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0xb898ceae9b41ff87b2bc22a41e63755604fe4771.sol:Owned
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for DAOConstantGas in contract 'CryptoLott':
    |      uint256 winnerFund = totalFund * winnerRate / 100 / winnerAddressList.length;
    |      for (uint i = 0; i < winnerAddressList.length; i++) {
  > |        (success, _) = winnerAddressList[i].call.value(winnerFund).gas(20317)("");
    |        if (!success) {
    |          revert();
  at /unique_contracts/0xb898ceae9b41ff87b2bc22a41e63755604fe4771.sol(230)

[31mViolation[0m for DAOConstantGas in contract 'CryptoLott':
    |    }
    |
  > |    (success, _) = charityAddress.call.value(charityFund).gas(20317)("");
    |    if (!success) {
    |      revert();
  at /unique_contracts/0xb898ceae9b41ff87b2bc22a41e63755604fe4771.sol(246)

[31mViolation[0m for DAOConstantGas in contract 'CryptoLott':
    |      revert();
    |    }
  > |    (success, _) = owner.call.value(totalFund - winnerFunds - charityFund).gas(20317)("");
    |    if (!success) {
    |      revert();
  at /unique_contracts/0xb898ceae9b41ff87b2bc22a41e63755604fe4771.sol(250)

[31mViolation[0m for RepeatedCall in contract 'CryptoLott':
    |      uint256 winnerFund = totalFund * winnerRate / 100 / winnerAddressList.length;
    |      for (uint i = 0; i < winnerAddressList.length; i++) {
  > |        (success, _) = winnerAddressList[i].call.value(winnerFund).gas(20317)("");
    |        if (!success) {
    |          revert();
  at /unique_contracts/0xb898ceae9b41ff87b2bc22a41e63755604fe4771.sol(230)

[31mViolation[0m for RepeatedCall in contract 'CryptoLott':
    |    }
    |
  > |    (success, _) = charityAddress.call.value(charityFund).gas(20317)("");
    |    if (!success) {
    |      revert();
  at /unique_contracts/0xb898ceae9b41ff87b2bc22a41e63755604fe4771.sol(246)

[31mViolation[0m for RepeatedCall in contract 'CryptoLott':
    |      revert();
    |    }
  > |    (success, _) = owner.call.value(totalFund - winnerFunds - charityFund).gas(20317)("");
    |    if (!success) {
    |      revert();
  at /unique_contracts/0xb898ceae9b41ff87b2bc22a41e63755604fe4771.sol(250)

[31mViolation[0m for TODAmount in contract 'CryptoLott':
    |    }
    |
  > |    (success, _) = charityAddress.call.value(charityFund).gas(20317)("");
    |    if (!success) {
    |      revert();
  at /unique_contracts/0xb898ceae9b41ff87b2bc22a41e63755604fe4771.sol(246)

[31mViolation[0m for TODAmount in contract 'CryptoLott':
    |      revert();
    |    }
  > |    (success, _) = owner.call.value(totalFund - winnerFunds - charityFund).gas(20317)("");
    |    if (!success) {
    |      revert();
  at /unique_contracts/0xb898ceae9b41ff87b2bc22a41e63755604fe4771.sol(250)

[33mWarning[0m for TODAmount in contract 'CryptoLott':
    |      uint256 winnerFund = totalFund * winnerRate / 100 / winnerAddressList.length;
    |      for (uint i = 0; i < winnerAddressList.length; i++) {
  > |        (success, _) = winnerAddressList[i].call.value(winnerFund).gas(20317)("");
    |        if (!success) {
    |          revert();
  at /unique_contracts/0xb898ceae9b41ff87b2bc22a41e63755604fe4771.sol(230)

[31mViolation[0m for TODReceiver in contract 'CryptoLott':
    |    }
    |
  > |    (success, _) = charityAddress.call.value(charityFund).gas(20317)("");
    |    if (!success) {
    |      revert();
  at /unique_contracts/0xb898ceae9b41ff87b2bc22a41e63755604fe4771.sol(246)

[31mViolation[0m for TODReceiver in contract 'CryptoLott':
    |      revert();
    |    }
  > |    (success, _) = owner.call.value(totalFund - winnerFunds - charityFund).gas(20317)("");
    |    if (!success) {
    |      revert();
  at /unique_contracts/0xb898ceae9b41ff87b2bc22a41e63755604fe4771.sol(250)

[33mWarning[0m for TODReceiver in contract 'CryptoLott':
    |      uint256 winnerFund = totalFund * winnerRate / 100 / winnerAddressList.length;
    |      for (uint i = 0; i < winnerAddressList.length; i++) {
  > |        (success, _) = winnerAddressList[i].call.value(winnerFund).gas(20317)("");
    |        if (!success) {
    |          revert();
  at /unique_contracts/0xb898ceae9b41ff87b2bc22a41e63755604fe4771.sol(230)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'CryptoLott':
    |      uint256 winnerFund = totalFund * winnerRate / 100 / winnerAddressList.length;
    |      for (uint i = 0; i < winnerAddressList.length; i++) {
  > |        (success, _) = winnerAddressList[i].call.value(winnerFund).gas(20317)("");
    |        if (!success) {
    |          revert();
  at /unique_contracts/0xb898ceae9b41ff87b2bc22a41e63755604fe4771.sol(230)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'CryptoLott':
    |    }
    |
  > |    (success, _) = charityAddress.call.value(charityFund).gas(20317)("");
    |    if (!success) {
    |      revert();
  at /unique_contracts/0xb898ceae9b41ff87b2bc22a41e63755604fe4771.sol(246)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'CryptoLott':
    |      revert();
    |    }
  > |    (success, _) = owner.call.value(totalFund - winnerFunds - charityFund).gas(20317)("");
    |    if (!success) {
    |      revert();
  at /unique_contracts/0xb898ceae9b41ff87b2bc22a41e63755604fe4771.sol(250)

[33mWarning[0m for UnrestrictedWrite in contract 'CryptoLott':
    |
    |/**
  > |Owned contract
    | */
    |contract Owned {
  at /unique_contracts/0xb898ceae9b41ff87b2bc22a41e63755604fe4771.sol(4)

[33mWarning[0m for UnrestrictedWrite in contract 'CryptoLott':
    |}
    |
  > |contract CryptoLott is Owned {
    |
    |  struct Player {
  at /unique_contracts/0xb898ceae9b41ff87b2bc22a41e63755604fe4771.sol(33)

[33mWarning[0m for UnrestrictedWrite in contract 'CryptoLott':
    |    startRound = now;
    |    playerList.length = 0;
  > |    playerInSession = randomMaxPlayer();
    |    state = State.Accepting;
    |    emit GameSessionBeginEvent(minPrice, playerInSession, charityRate, winnerRate, maxLuckyNumberRandom);
  at /unique_contracts/0xb898ceae9b41ff87b2bc22a41e63755604fe4771.sol(126)

[33mWarning[0m for UnrestrictedWrite in contract 'CryptoLott':
    |    playerList.length = 0;
    |    playerInSession = randomMaxPlayer();
  > |    state = State.Accepting;
    |    emit GameSessionBeginEvent(minPrice, playerInSession, charityRate, winnerRate, maxLuckyNumberRandom);
    |  }
  at /unique_contracts/0xb898ceae9b41ff87b2bc22a41e63755604fe4771.sol(127)

[33mWarning[0m for UnrestrictedWrite in contract 'CryptoLott':
    |    }
    |
  > |    totalFund += msg.value;
    |    Player memory player = Player(msg.sender, name, numbers);
    |    playerList.push(player);
  at /unique_contracts/0xb898ceae9b41ff87b2bc22a41e63755604fe4771.sol(145)

[33mWarning[0m for UnrestrictedWrite in contract 'CryptoLott':
    |    totalFund += msg.value;
    |    Player memory player = Player(msg.sender, name, numbers);
  > |    playerList.push(player);
    |    emit PlayerRegisterEvent(player.playerAddress);
    |
  at /unique_contracts/0xb898ceae9b41ff87b2bc22a41e63755604fe4771.sol(147)

[33mWarning[0m for UnrestrictedWrite in contract 'CryptoLott':
    |    // Finish session && find winner
    |    lastTotalFund = totalFund;
  > |    lastLuckyNumber = randomLuckyNumber();
    |
    |    winnerAddressList.length = 0;
  at /unique_contracts/0xb898ceae9b41ff87b2bc22a41e63755604fe4771.sol(211)

[33mWarning[0m for UnrestrictedWrite in contract 'CryptoLott':
    |      for (uint j = 0; j < playerList[i].playerNumbers.length; j++) {
    |        if (playerList[i].playerNumbers[j] == lastLuckyNumber) {
  > |          winnerAddressList.push(playerList[i].playerAddress);
    |        }
    |      }
  at /unique_contracts/0xb898ceae9b41ff87b2bc22a41e63755604fe4771.sol(218)

[33mWarning[0m for UnrestrictedWrite in contract 'CryptoLott':
    |        winnerFunds += winnerFund;
    |      }
  > |      hasWinner = true;
    |    } else {
    |      winnerFunds = totalFund * 50 / 100;
  at /unique_contracts/0xb898ceae9b41ff87b2bc22a41e63755604fe4771.sol(236)

[33mWarning[0m for UnrestrictedWrite in contract 'CryptoLott':
    |      revert();
    |    }
  > |    totalFund = winnerFunds;
    |
    |    endRound = now;
  at /unique_contracts/0xb898ceae9b41ff87b2bc22a41e63755604fe4771.sol(254)

[33mWarning[0m for UnrestrictedWrite in contract 'CryptoLott':
    |    totalFund = winnerFunds;
    |
  > |    endRound = now;
    |    if (endRound - startRound < 2 days) {
    |      if (playerRandomPadding < UINT64_MAX) playerRandomPadding ++;
  at /unique_contracts/0xb898ceae9b41ff87b2bc22a41e63755604fe4771.sol(256)

[33mWarning[0m for UnrestrictedWrite in contract 'CryptoLott':
    |    endRound = now;
    |    if (endRound - startRound < 2 days) {
  > |      if (playerRandomPadding < UINT64_MAX) playerRandomPadding ++;
    |      if (luckyNumberRandomPadding < UINT64_MAX) luckyNumberRandomPadding ++;
    |      if (maxPlayerRandom < 1000) maxPlayerRandom ++;
  at /unique_contracts/0xb898ceae9b41ff87b2bc22a41e63755604fe4771.sol(258)

[33mWarning[0m for UnrestrictedWrite in contract 'CryptoLott':
    |    if (endRound - startRound < 2 days) {
    |      if (playerRandomPadding < UINT64_MAX) playerRandomPadding ++;
  > |      if (luckyNumberRandomPadding < UINT64_MAX) luckyNumberRandomPadding ++;
    |      if (maxPlayerRandom < 1000) maxPlayerRandom ++;
    |    } else if (playerRandomPadding > 5) {
  at /unique_contracts/0xb898ceae9b41ff87b2bc22a41e63755604fe4771.sol(259)

[33mWarning[0m for UnrestrictedWrite in contract 'CryptoLott':
    |      if (playerRandomPadding < UINT64_MAX) playerRandomPadding ++;
    |      if (luckyNumberRandomPadding < UINT64_MAX) luckyNumberRandomPadding ++;
  > |      if (maxPlayerRandom < 1000) maxPlayerRandom ++;
    |    } else if (playerRandomPadding > 5) {
    |      playerRandomPadding --;
  at /unique_contracts/0xb898ceae9b41ff87b2bc22a41e63755604fe4771.sol(260)

[33mWarning[0m for UnrestrictedWrite in contract 'CryptoLott':
    |      if (maxPlayerRandom < 1000) maxPlayerRandom ++;
    |    } else if (playerRandomPadding > 5) {
  > |      playerRandomPadding --;
    |    }
    |
  at /unique_contracts/0xb898ceae9b41ff87b2bc22a41e63755604fe4771.sol(262)

[31mViolation[0m for MissingInputValidation in contract 'Owned':
    |  }
    |
  > |  function transferOwnership(address payable _newOwner) public onlyOwner {
    |    newOwner = _newOwner;
    |  }
  at /unique_contracts/0xb898ceae9b41ff87b2bc22a41e63755604fe4771.sol(21)

[33mWarning[0m for UnrestrictedWrite in contract 'Owned':
    |
    |  function transferOwnership(address payable _newOwner) public onlyOwner {
  > |    newOwner = _newOwner;
    |  }
    |
  at /unique_contracts/0xb898ceae9b41ff87b2bc22a41e63755604fe4771.sol(22)

[33mWarning[0m for UnrestrictedWrite in contract 'Owned':
    |    require(msg.sender == newOwner);
    |    emit OwnershipTransferred(owner, newOwner);
  > |    owner = newOwner;
    |    newOwner = address(0);
    |  }
  at /unique_contracts/0xb898ceae9b41ff87b2bc22a41e63755604fe4771.sol(28)

[33mWarning[0m for UnrestrictedWrite in contract 'Owned':
    |    emit OwnershipTransferred(owner, newOwner);
    |    owner = newOwner;
  > |    newOwner = address(0);
    |  }
    |}
  at /unique_contracts/0xb898ceae9b41ff87b2bc22a41e63755604fe4771.sol(29)