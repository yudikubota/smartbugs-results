Processing contract: /unique_chucks/2/0x4a9e09f6d1f643ee5f3b02039843d774a224577a.sol:BasicToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/2/0x4a9e09f6d1f643ee5f3b02039843d774a224577a.sol:BurnableToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/2/0x4a9e09f6d1f643ee5f3b02039843d774a224577a.sol:CappedToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/2/0x4a9e09f6d1f643ee5f3b02039843d774a224577a.sol:CryptoControlToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/2/0x4a9e09f6d1f643ee5f3b02039843d774a224577a.sol:ERC20
Processing contract: /unique_chucks/2/0x4a9e09f6d1f643ee5f3b02039843d774a224577a.sol:ERC20Basic
Processing contract: /unique_chucks/2/0x4a9e09f6d1f643ee5f3b02039843d774a224577a.sol:MintableToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/2/0x4a9e09f6d1f643ee5f3b02039843d774a224577a.sol:Ownable
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/2/0x4a9e09f6d1f643ee5f3b02039843d774a224577a.sol:Pausable
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/2/0x4a9e09f6d1f643ee5f3b02039843d774a224577a.sol:PausableToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/2/0x4a9e09f6d1f643ee5f3b02039843d774a224577a.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/2/0x4a9e09f6d1f643ee5f3b02039843d774a224577a.sol:StandardToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/2/0x4a9e09f6d1f643ee5f3b02039843d774a224577a.sol:UpgradedStandardToken
[33mWarning[0m for UnrestrictedWrite in contract 'BasicToken':
    |
    |        balances[msg.sender] = balances[msg.sender].sub(_value);
  > |        balances[_to] = balances[_to].add(_value);
    |        emit Transfer(msg.sender, _to, _value);
    |        return true;
  at /unique_chucks/2/0x4a9e09f6d1f643ee5f3b02039843d774a224577a.sol(178)

[33mWarning[0m for UnrestrictedWrite in contract 'BurnableToken':
    |  function renounceOwnership() public onlyOwner {
    |    emit OwnershipRenounced(owner);
  > |    owner = address(0);
    |  }
    |
  at /unique_chucks/2/0x4a9e09f6d1f643ee5f3b02039843d774a224577a.sol(84)

[33mWarning[0m for UnrestrictedWrite in contract 'BurnableToken':
    |    require(_newOwner != address(0));
    |    emit OwnershipTransferred(owner, _newOwner);
  > |    owner = _newOwner;
    |  }
    |}
  at /unique_chucks/2/0x4a9e09f6d1f643ee5f3b02039843d774a224577a.sol(102)

[33mWarning[0m for UnrestrictedWrite in contract 'CappedToken':
    |  function renounceOwnership() public onlyOwner {
    |    emit OwnershipRenounced(owner);
  > |    owner = address(0);
    |  }
    |
  at /unique_chucks/2/0x4a9e09f6d1f643ee5f3b02039843d774a224577a.sol(84)

[33mWarning[0m for UnrestrictedWrite in contract 'CappedToken':
    |    require(_newOwner != address(0));
    |    emit OwnershipTransferred(owner, _newOwner);
  > |    owner = _newOwner;
    |  }
    |}
  at /unique_chucks/2/0x4a9e09f6d1f643ee5f3b02039843d774a224577a.sol(102)

[33mWarning[0m for UnrestrictedWrite in contract 'CappedToken':
    |     */
    |    function finishMinting() public onlyOwner canMint returns (bool) {
  > |        mintingFinished = true;
    |        emit MintFinished();
    |        return true;
  at /unique_chucks/2/0x4a9e09f6d1f643ee5f3b02039843d774a224577a.sol(352)

[31mViolation[0m for LockedEther in contract 'CryptoControlToken':
    |}
    |
  > |contract CryptoControlToken is BurnableToken, PausableToken, CappedToken {
    |    address public upgradedAddress;
    |    bool public deprecated;
  at /unique_chucks/2/0x4a9e09f6d1f643ee5f3b02039843d774a224577a.sol(411)

[31mViolation[0m for UnrestrictedWrite in contract 'CryptoControlToken':
    |}
    |
  > |contract CryptoControlToken is BurnableToken, PausableToken, CappedToken {
    |    address public upgradedAddress;
    |    bool public deprecated;
  at /unique_chucks/2/0x4a9e09f6d1f643ee5f3b02039843d774a224577a.sol(411)

[33mWarning[0m for UnrestrictedWrite in contract 'CryptoControlToken':
    |  function renounceOwnership() public onlyOwner {
    |    emit OwnershipRenounced(owner);
  > |    owner = address(0);
    |  }
    |
  at /unique_chucks/2/0x4a9e09f6d1f643ee5f3b02039843d774a224577a.sol(84)

[33mWarning[0m for UnrestrictedWrite in contract 'CryptoControlToken':
    |    require(_newOwner != address(0));
    |    emit OwnershipTransferred(owner, _newOwner);
  > |    owner = _newOwner;
    |  }
    |}
  at /unique_chucks/2/0x4a9e09f6d1f643ee5f3b02039843d774a224577a.sol(102)

[33mWarning[0m for UnrestrictedWrite in contract 'CryptoControlToken':
    |   */
    |  function pause() public onlyOwner whenNotPaused {
  > |    paused = true;
    |    emit Pause();
    |  }
  at /unique_chucks/2/0x4a9e09f6d1f643ee5f3b02039843d774a224577a.sol(133)

[33mWarning[0m for UnrestrictedWrite in contract 'CryptoControlToken':
    |   */
    |  function unpause() public onlyOwner whenPaused {
  > |    paused = false;
    |    emit Unpause();
    |  }
  at /unique_chucks/2/0x4a9e09f6d1f643ee5f3b02039843d774a224577a.sol(141)

[33mWarning[0m for UnrestrictedWrite in contract 'CryptoControlToken':
    |     */
    |    function finishMinting() public onlyOwner canMint returns (bool) {
  > |        mintingFinished = true;
    |        emit MintFinished();
    |        return true;
  at /unique_chucks/2/0x4a9e09f6d1f643ee5f3b02039843d774a224577a.sol(352)

[33mWarning[0m for UnrestrictedWrite in contract 'CryptoControlToken':
    |}
    |
  > |contract CryptoControlToken is BurnableToken, PausableToken, CappedToken {
    |    address public upgradedAddress;
    |    bool public deprecated;
  at /unique_chucks/2/0x4a9e09f6d1f643ee5f3b02039843d774a224577a.sol(411)

[33mWarning[0m for UnrestrictedWrite in contract 'CryptoControlToken':
    |    // deprecate current contract in favour of a new one
    |    function deprecate(address _upgradedAddress, string memory _reason) public onlyOwner {
  > |        deprecated = true;
    |        upgradedAddress = _upgradedAddress;
    |        reason = _reason;
  at /unique_chucks/2/0x4a9e09f6d1f643ee5f3b02039843d774a224577a.sol(460)

[33mWarning[0m for UnrestrictedWrite in contract 'CryptoControlToken':
    |    function deprecate(address _upgradedAddress, string memory _reason) public onlyOwner {
    |        deprecated = true;
  > |        upgradedAddress = _upgradedAddress;
    |        reason = _reason;
    |        emit Deprecate(_upgradedAddress, _reason);
  at /unique_chucks/2/0x4a9e09f6d1f643ee5f3b02039843d774a224577a.sol(461)

[33mWarning[0m for UnrestrictedWrite in contract 'MintableToken':
    |  function renounceOwnership() public onlyOwner {
    |    emit OwnershipRenounced(owner);
  > |    owner = address(0);
    |  }
    |
  at /unique_chucks/2/0x4a9e09f6d1f643ee5f3b02039843d774a224577a.sol(84)

[33mWarning[0m for UnrestrictedWrite in contract 'MintableToken':
    |    require(_newOwner != address(0));
    |    emit OwnershipTransferred(owner, _newOwner);
  > |    owner = _newOwner;
    |  }
    |}
  at /unique_chucks/2/0x4a9e09f6d1f643ee5f3b02039843d774a224577a.sol(102)

[33mWarning[0m for UnrestrictedWrite in contract 'MintableToken':
    |     */
    |    function finishMinting() public onlyOwner canMint returns (bool) {
  > |        mintingFinished = true;
    |        emit MintFinished();
    |        return true;
  at /unique_chucks/2/0x4a9e09f6d1f643ee5f3b02039843d774a224577a.sol(352)

[31mViolation[0m for UnrestrictedWrite in contract 'Ownable':
    |    require(_newOwner != address(0));
    |    emit OwnershipTransferred(owner, _newOwner);
  > |    owner = _newOwner;
    |  }
    |}
  at /unique_chucks/2/0x4a9e09f6d1f643ee5f3b02039843d774a224577a.sol(102)

[33mWarning[0m for UnrestrictedWrite in contract 'Ownable':
    |  function renounceOwnership() public onlyOwner {
    |    emit OwnershipRenounced(owner);
  > |    owner = address(0);
    |  }
    |
  at /unique_chucks/2/0x4a9e09f6d1f643ee5f3b02039843d774a224577a.sol(84)

[33mWarning[0m for UnrestrictedWrite in contract 'Ownable':
    |    require(_newOwner != address(0));
    |    emit OwnershipTransferred(owner, _newOwner);
  > |    owner = _newOwner;
    |  }
    |}
  at /unique_chucks/2/0x4a9e09f6d1f643ee5f3b02039843d774a224577a.sol(102)

[31mViolation[0m for UnrestrictedWrite in contract 'Pausable':
    |    require(_newOwner != address(0));
    |    emit OwnershipTransferred(owner, _newOwner);
  > |    owner = _newOwner;
    |  }
    |}
  at /unique_chucks/2/0x4a9e09f6d1f643ee5f3b02039843d774a224577a.sol(102)

[33mWarning[0m for UnrestrictedWrite in contract 'Pausable':
    |  function renounceOwnership() public onlyOwner {
    |    emit OwnershipRenounced(owner);
  > |    owner = address(0);
    |  }
    |
  at /unique_chucks/2/0x4a9e09f6d1f643ee5f3b02039843d774a224577a.sol(84)

[33mWarning[0m for UnrestrictedWrite in contract 'Pausable':
    |    require(_newOwner != address(0));
    |    emit OwnershipTransferred(owner, _newOwner);
  > |    owner = _newOwner;
    |  }
    |}
  at /unique_chucks/2/0x4a9e09f6d1f643ee5f3b02039843d774a224577a.sol(102)

[33mWarning[0m for UnrestrictedWrite in contract 'Pausable':
    |   */
    |  function pause() public onlyOwner whenNotPaused {
  > |    paused = true;
    |    emit Pause();
    |  }
  at /unique_chucks/2/0x4a9e09f6d1f643ee5f3b02039843d774a224577a.sol(133)

[33mWarning[0m for UnrestrictedWrite in contract 'Pausable':
    |   */
    |  function unpause() public onlyOwner whenPaused {
  > |    paused = false;
    |    emit Unpause();
    |  }
  at /unique_chucks/2/0x4a9e09f6d1f643ee5f3b02039843d774a224577a.sol(141)

[33mWarning[0m for UnrestrictedWrite in contract 'PausableToken':
    |
    |        balances[msg.sender] = balances[msg.sender].sub(_value);
  > |        balances[_to] = balances[_to].add(_value);
    |        emit Transfer(msg.sender, _to, _value);
    |        return true;
  at /unique_chucks/2/0x4a9e09f6d1f643ee5f3b02039843d774a224577a.sol(178)

[33mWarning[0m for UnrestrictedWrite in contract 'PausableToken':
    |        require(_to != address(0));
    |
  > |        balances[_from] = balances[_from].sub(_value);
    |        balances[_to] = balances[_to].add(_value);
    |        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
  at /unique_chucks/2/0x4a9e09f6d1f643ee5f3b02039843d774a224577a.sol(217)

[33mWarning[0m for UnrestrictedWrite in contract 'PausableToken':
    |
    |        balances[_from] = balances[_from].sub(_value);
  > |        balances[_to] = balances[_to].add(_value);
    |        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
    |        emit Transfer(_from, _to, _value);
  at /unique_chucks/2/0x4a9e09f6d1f643ee5f3b02039843d774a224577a.sol(218)

[33mWarning[0m for UnrestrictedWrite in contract 'PausableToken':
    |  function renounceOwnership() public onlyOwner {
    |    emit OwnershipRenounced(owner);
  > |    owner = address(0);
    |  }
    |
  at /unique_chucks/2/0x4a9e09f6d1f643ee5f3b02039843d774a224577a.sol(84)

[33mWarning[0m for UnrestrictedWrite in contract 'PausableToken':
    |    require(_newOwner != address(0));
    |    emit OwnershipTransferred(owner, _newOwner);
  > |    owner = _newOwner;
    |  }
    |}
  at /unique_chucks/2/0x4a9e09f6d1f643ee5f3b02039843d774a224577a.sol(102)

[33mWarning[0m for UnrestrictedWrite in contract 'PausableToken':
    |   */
    |  function pause() public onlyOwner whenNotPaused {
  > |    paused = true;
    |    emit Pause();
    |  }
  at /unique_chucks/2/0x4a9e09f6d1f643ee5f3b02039843d774a224577a.sol(133)

[33mWarning[0m for UnrestrictedWrite in contract 'PausableToken':
    |   */
    |  function unpause() public onlyOwner whenPaused {
  > |    paused = false;
    |    emit Unpause();
    |  }
  at /unique_chucks/2/0x4a9e09f6d1f643ee5f3b02039843d774a224577a.sol(141)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |
    |        balances[msg.sender] = balances[msg.sender].sub(_value);
  > |        balances[_to] = balances[_to].add(_value);
    |        emit Transfer(msg.sender, _to, _value);
    |        return true;
  at /unique_chucks/2/0x4a9e09f6d1f643ee5f3b02039843d774a224577a.sol(178)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |        require(_to != address(0));
    |
  > |        balances[_from] = balances[_from].sub(_value);
    |        balances[_to] = balances[_to].add(_value);
    |        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
  at /unique_chucks/2/0x4a9e09f6d1f643ee5f3b02039843d774a224577a.sol(217)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |
    |        balances[_from] = balances[_from].sub(_value);
  > |        balances[_to] = balances[_to].add(_value);
    |        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
    |        emit Transfer(_from, _to, _value);
  at /unique_chucks/2/0x4a9e09f6d1f643ee5f3b02039843d774a224577a.sol(218)