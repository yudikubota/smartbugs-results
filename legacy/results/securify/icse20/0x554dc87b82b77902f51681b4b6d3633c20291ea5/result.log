Processing contract: /unique_chucks/17/0x554dc87b82b77902f51681b4b6d3633c20291ea5.sol:IERC20
Processing contract: /unique_chucks/17/0x554dc87b82b77902f51681b4b6d3633c20291ea5.sol:Multisig
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[33mWarning[0m for TODAmount in contract 'Multisig':
    |	    if (withdrawEther[withdrawEtherId].confirmators.length >= confirmationCount) {
    |	        withdrawEther[withdrawEtherId].completed = true;
  > |	        withdrawEther[withdrawEtherId].toAddr.transfer(withdrawEther[withdrawEtherId].amount);
    |	    }
    |	}
  at /unique_chucks/17/0x554dc87b82b77902f51681b4b6d3633c20291ea5.sol(117)

[33mWarning[0m for TODReceiver in contract 'Multisig':
    |	    if (withdrawEther[withdrawEtherId].confirmators.length >= confirmationCount) {
    |	        withdrawEther[withdrawEtherId].completed = true;
  > |	        withdrawEther[withdrawEtherId].toAddr.transfer(withdrawEther[withdrawEtherId].amount);
    |	    }
    |	}
  at /unique_chucks/17/0x554dc87b82b77902f51681b4b6d3633c20291ea5.sol(117)

[31mViolation[0m for UnrestrictedWrite in contract 'Multisig':
    |
    |/**
  > | * @title ERC20 interface
    | * @dev see https://github.com/ethereum/EIPs/issues/20
    | */
  at /unique_chucks/17/0x554dc87b82b77902f51681b4b6d3633c20291ea5.sol(4)

[31mViolation[0m for UnrestrictedWrite in contract 'Multisig':
    | * @author Roman Holovay
    | */
  > |contract Multisig {
    |	struct WithdrawEtherStruct {
    |		address payable toAddr;
  at /unique_chucks/17/0x554dc87b82b77902f51681b4b6d3633c20291ea5.sol(39)

[31mViolation[0m for UnrestrictedWrite in contract 'Multisig':
    |		require (owners[msg.sender]);
    |		require (token == IERC20(address(0)));
  > |		token = IERC20(_tokenAddress);
    |	}
    |	
  at /unique_chucks/17/0x554dc87b82b77902f51681b4b6d3633c20291ea5.sol(86)

[31mViolation[0m for UnrestrictedWrite in contract 'Multisig':
    |	function createNewEtherWithdrawRequest(address payable _toAddr, uint _amount) public onlyOwners {
    |		address[] memory conf;
  > |		withdrawEther.push(WithdrawEtherStruct(_toAddr, _amount, conf, false));
    |		withdrawEther[withdrawEther.length-1].confirmators.push(msg.sender);
    |	}
  at /unique_chucks/17/0x554dc87b82b77902f51681b4b6d3633c20291ea5.sol(97)

[31mViolation[0m for UnrestrictedWrite in contract 'Multisig':
    |		address[] memory conf;
    |		withdrawEther.push(WithdrawEtherStruct(_toAddr, _amount, conf, false));
  > |		withdrawEther[withdrawEther.length-1].confirmators.push(msg.sender);
    |	}
    |	
  at /unique_chucks/17/0x554dc87b82b77902f51681b4b6d3633c20291ea5.sol(98)

[31mViolation[0m for UnrestrictedWrite in contract 'Multisig':
    |	function createTransferTokensRequest(address _toAddr, uint _amount) public onlyOwners {
    |	    address[] memory conf;
  > |		sendTokens.push(SendTokensStruct(_toAddr, _amount, conf, false));
    |		sendTokens[sendTokens.length-1].confirmators.push(msg.sender);
    |	}
  at /unique_chucks/17/0x554dc87b82b77902f51681b4b6d3633c20291ea5.sol(128)

[31mViolation[0m for UnrestrictedWrite in contract 'Multisig':
    |	    address[] memory conf;
    |		sendTokens.push(SendTokensStruct(_toAddr, _amount, conf, false));
  > |		sendTokens[sendTokens.length-1].confirmators.push(msg.sender);
    |	}
    |	
  at /unique_chucks/17/0x554dc87b82b77902f51681b4b6d3633c20291ea5.sol(129)

[33mWarning[0m for UnrestrictedWrite in contract 'Multisig':
    |
    |/**
  > | * @title ERC20 interface
    | * @dev see https://github.com/ethereum/EIPs/issues/20
    | */
  at /unique_chucks/17/0x554dc87b82b77902f51681b4b6d3633c20291ea5.sol(4)

[33mWarning[0m for UnrestrictedWrite in contract 'Multisig':
    |	    }
    |	    
  > |	    withdrawEther[withdrawEtherId].confirmators.push(msg.sender);
    |	    
    |	    if (withdrawEther[withdrawEtherId].confirmators.length >= confirmationCount) {
  at /unique_chucks/17/0x554dc87b82b77902f51681b4b6d3633c20291ea5.sol(113)

[33mWarning[0m for UnrestrictedWrite in contract 'Multisig':
    |	    }
    |	    
  > |	    sendTokens[sendTokensId].confirmators.push(msg.sender);
    |	    
    |	    if (sendTokens[sendTokensId].confirmators.length >= confirmationCount) {
  at /unique_chucks/17/0x554dc87b82b77902f51681b4b6d3633c20291ea5.sol(144)