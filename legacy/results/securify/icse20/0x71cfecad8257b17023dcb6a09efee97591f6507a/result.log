Processing contract: /unique_chucks/15/0x71cfecad8257b17023dcb6a09efee97591f6507a.sol:Bank
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
java.io.IOException: Timeout for /tmp/binaries_souffle9178422242661219157/mustExplicit -j 2 -F /tmp/souffle-788d471b-a01a-4903-bfcc-627c6fe1504f -D /tmp/souffle-788d471b-a01a-4903-bfcc-627c6fe1504f_OUT
	at ch.securify.analysis.AbstractDataflow.runCommand(AbstractDataflow.java:277)
	at ch.securify.analysis.AbstractDataflow.initDataflow(AbstractDataflow.java:169)
	at ch.securify.analysis.MustExplicitDataflow.<init>(MustExplicitDataflow.java:33)
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:33)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error in Securify
java.lang.RuntimeException
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:37)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error, skipping: /unique_chucks/15/0x71cfecad8257b17023dcb6a09efee97591f6507a.sol:Bank
Processing contract: /unique_chucks/15/0x71cfecad8257b17023dcb6a09efee97591f6507a.sol:Bears
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/15/0x71cfecad8257b17023dcb6a09efee97591f6507a.sol:Bulls
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/15/0x71cfecad8257b17023dcb6a09efee97591f6507a.sol:CryptoTeam
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/15/0x71cfecad8257b17023dcb6a09efee97591f6507a.sol:ERC20
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/15/0x71cfecad8257b17023dcb6a09efee97591f6507a.sol:ERC20Detailed
Processing contract: /unique_chucks/15/0x71cfecad8257b17023dcb6a09efee97591f6507a.sol:GameWave
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/15/0x71cfecad8257b17023dcb6a09efee97591f6507a.sol:IERC20
Processing contract: /unique_chucks/15/0x71cfecad8257b17023dcb6a09efee97591f6507a.sol:Ownable
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/15/0x71cfecad8257b17023dcb6a09efee97591f6507a.sol:SafeERC20
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/15/0x71cfecad8257b17023dcb6a09efee97591f6507a.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/15/0x71cfecad8257b17023dcb6a09efee97591f6507a.sol:Sale
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for RepeatedCall in contract 'Bears':
    |        require(BankContract.getState() && msg.value >= 0.05 ether);
    |
  > |        BankContract.setInfo(msg.sender, msg.value.mul(90).div(100));
    |
    |        address(GameWaveContract).transfer(msg.value.mul(10).div(100));
  at /unique_chucks/15/0x71cfecad8257b17023dcb6a09efee97591f6507a.sol(988)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'Bears':
    |        BankContract.setInfo(msg.sender, msg.value.mul(90).div(100));
    |
  > |        address(GameWaveContract).transfer(msg.value.mul(10).div(100));
    |        
    |        address(BankContract).transfer(msg.value.mul(90).div(100));
  at /unique_chucks/15/0x71cfecad8257b17023dcb6a09efee97591f6507a.sol(990)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'Bears':
    |        address(GameWaveContract).transfer(msg.value.mul(10).div(100));
    |        
  > |        address(BankContract).transfer(msg.value.mul(90).div(100));
    |    }
    |}
  at /unique_chucks/15/0x71cfecad8257b17023dcb6a09efee97591f6507a.sol(992)

[31mViolation[0m for RepeatedCall in contract 'Bulls':
    |        require(BankContract.getState() && msg.value >= 0.05 ether);
    |
  > |        BankContract.setInfo(msg.sender, msg.value.mul(90).div(100));
    |
    |        address(GameWaveContract).transfer(msg.value.mul(10).div(100));
  at /unique_chucks/15/0x71cfecad8257b17023dcb6a09efee97591f6507a.sol(988)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'Bulls':
    |        BankContract.setInfo(msg.sender, msg.value.mul(90).div(100));
    |
  > |        address(GameWaveContract).transfer(msg.value.mul(10).div(100));
    |        
    |        address(BankContract).transfer(msg.value.mul(90).div(100));
  at /unique_chucks/15/0x71cfecad8257b17023dcb6a09efee97591f6507a.sol(990)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'Bulls':
    |        address(GameWaveContract).transfer(msg.value.mul(10).div(100));
    |        
  > |        address(BankContract).transfer(msg.value.mul(90).div(100));
    |    }
    |}
  at /unique_chucks/15/0x71cfecad8257b17023dcb6a09efee97591f6507a.sol(992)

[31mViolation[0m for RepeatedCall in contract 'CryptoTeam':
    |        require(BankContract.getState() && msg.value >= 0.05 ether);
    |
  > |        BankContract.setInfo(msg.sender, msg.value.mul(90).div(100));
    |
    |        address(GameWaveContract).transfer(msg.value.mul(10).div(100));
  at /unique_chucks/15/0x71cfecad8257b17023dcb6a09efee97591f6507a.sol(988)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'CryptoTeam':
    |        BankContract.setInfo(msg.sender, msg.value.mul(90).div(100));
    |
  > |        address(GameWaveContract).transfer(msg.value.mul(10).div(100));
    |        
    |        address(BankContract).transfer(msg.value.mul(90).div(100));
  at /unique_chucks/15/0x71cfecad8257b17023dcb6a09efee97591f6507a.sol(990)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'CryptoTeam':
    |        address(GameWaveContract).transfer(msg.value.mul(10).div(100));
    |        
  > |        address(BankContract).transfer(msg.value.mul(90).div(100));
    |    }
    |}
  at /unique_chucks/15/0x71cfecad8257b17023dcb6a09efee97591f6507a.sol(992)

[31mViolation[0m for DAOConstantGas in contract 'GameWave':
    |  function startPayments() public {
    |    require(block.timestamp >= paymentsTime + 30 days);
  > |    owner.transfer(totalPaymentAmount.sub(lastTotalPaymentAmount));
    |    totalPaymentAmount = address(this).balance;
    |    paymentsTime = block.timestamp;
  at /unique_chucks/15/0x71cfecad8257b17023dcb6a09efee97591f6507a.sol(504)

[33mWarning[0m for TODAmount in contract 'GameWave':
    |    lastWithdrawTime[_holder] = block.timestamp;
    |    lastTotalPaymentAmount = lastTotalPaymentAmount.add(dividends);
  > |    _holder.transfer(dividends);
    |  }
    |
  at /unique_chucks/15/0x71cfecad8257b17023dcb6a09efee97591f6507a.sol(494)

[33mWarning[0m for TODAmount in contract 'GameWave':
    |  function startPayments() public {
    |    require(block.timestamp >= paymentsTime + 30 days);
  > |    owner.transfer(totalPaymentAmount.sub(lastTotalPaymentAmount));
    |    totalPaymentAmount = address(this).balance;
    |    paymentsTime = block.timestamp;
  at /unique_chucks/15/0x71cfecad8257b17023dcb6a09efee97591f6507a.sol(504)

[33mWarning[0m for TODReceiver in contract 'GameWave':
    |  function startPayments() public {
    |    require(block.timestamp >= paymentsTime + 30 days);
  > |    owner.transfer(totalPaymentAmount.sub(lastTotalPaymentAmount));
    |    totalPaymentAmount = address(this).balance;
    |    paymentsTime = block.timestamp;
  at /unique_chucks/15/0x71cfecad8257b17023dcb6a09efee97591f6507a.sol(504)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'GameWave':
    |  function startPayments() public {
    |    require(block.timestamp >= paymentsTime + 30 days);
  > |    owner.transfer(totalPaymentAmount.sub(lastTotalPaymentAmount));
    |    totalPaymentAmount = address(this).balance;
    |    paymentsTime = block.timestamp;
  at /unique_chucks/15/0x71cfecad8257b17023dcb6a09efee97591f6507a.sol(504)

[33mWarning[0m for UnrestrictedWrite in contract 'GameWave':
    |  function transferOwnership(address payable newOwner) public onlyOwner {
    |    require(newOwner != address(0));
  > |    owner = newOwner;
    |  }
    |}
  at /unique_chucks/15/0x71cfecad8257b17023dcb6a09efee97591f6507a.sol(438)

[33mWarning[0m for UnrestrictedWrite in contract 'GameWave':
    |    require(block.timestamp >= paymentsTime + 30 days);
    |    owner.transfer(totalPaymentAmount.sub(lastTotalPaymentAmount));
  > |    totalPaymentAmount = address(this).balance;
    |    paymentsTime = block.timestamp;
    |    lastTotalPaymentAmount = 0;
  at /unique_chucks/15/0x71cfecad8257b17023dcb6a09efee97591f6507a.sol(505)

[33mWarning[0m for UnrestrictedWrite in contract 'GameWave':
    |    owner.transfer(totalPaymentAmount.sub(lastTotalPaymentAmount));
    |    totalPaymentAmount = address(this).balance;
  > |    paymentsTime = block.timestamp;
    |    lastTotalPaymentAmount = 0;
    |  }
  at /unique_chucks/15/0x71cfecad8257b17023dcb6a09efee97591f6507a.sol(506)

[33mWarning[0m for UnrestrictedWrite in contract 'GameWave':
    |    totalPaymentAmount = address(this).balance;
    |    paymentsTime = block.timestamp;
  > |    lastTotalPaymentAmount = 0;
    |  }
    |}
  at /unique_chucks/15/0x71cfecad8257b17023dcb6a09efee97591f6507a.sol(507)

[33mWarning[0m for UnrestrictedWrite in contract 'Ownable':
    |  function transferOwnership(address payable newOwner) public onlyOwner {
    |    require(newOwner != address(0));
  > |    owner = newOwner;
    |  }
    |}
  at /unique_chucks/15/0x71cfecad8257b17023dcb6a09efee97591f6507a.sol(438)

[31mViolation[0m for MissingInputValidation in contract 'Sale':
    |     */
    |
  > |    function setPrice(uint256 newBuyPrice) public {
    |        buyPrice = newBuyPrice;
    |    }
  at /unique_chucks/15/0x71cfecad8257b17023dcb6a09efee97591f6507a.sol(1045)

[31mViolation[0m for UnrestrictedWrite in contract 'Sale':
    |
    |    function setPrice(uint256 newBuyPrice) public {
  > |        buyPrice = newBuyPrice;
    |    }
    |
  at /unique_chucks/15/0x71cfecad8257b17023dcb6a09efee97591f6507a.sol(1046)