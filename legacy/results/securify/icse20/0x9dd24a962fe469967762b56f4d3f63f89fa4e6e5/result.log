Processing contract: /unique_contracts/0x9dd24a962fe469967762b56f4d3f63f89fa4e6e5.sol:Address
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0x9dd24a962fe469967762b56f4d3f63f89fa4e6e5.sol:IERC20
Processing contract: /unique_contracts/0x9dd24a962fe469967762b56f4d3f63f89fa4e6e5.sol:SafeERC20
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0x9dd24a962fe469967762b56f4d3f63f89fa4e6e5.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0x9dd24a962fe469967762b56f4d3f63f89fa4e6e5.sol:TokenTimelock
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for LockedEther in contract 'TokenTimelock':
    | * beneficiary to extract the tokens after a given release time
    | */
  > |contract TokenTimelock {
    |    using SafeERC20 for IERC20;
    |
  at /unique_contracts/0x9dd24a962fe469967762b56f4d3f63f89fa4e6e5.sol(195)