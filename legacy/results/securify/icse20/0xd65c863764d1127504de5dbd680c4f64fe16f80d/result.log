Processing contract: /unique_chucks/24/0xd65c863764d1127504de5dbd680c4f64fe16f80d.sol:ERC20
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/24/0xd65c863764d1127504de5dbd680c4f64fe16f80d.sol:IERC20
Processing contract: /unique_chucks/24/0xd65c863764d1127504de5dbd680c4f64fe16f80d.sol:Lockable
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/24/0xd65c863764d1127504de5dbd680c4f64fe16f80d.sol:Ownable
Processing contract: /unique_chucks/24/0xd65c863764d1127504de5dbd680c4f64fe16f80d.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/24/0xd65c863764d1127504de5dbd680c4f64fe16f80d.sol:SecurityToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/24/0xd65c863764d1127504de5dbd680c4f64fe16f80d.sol:Whitelist
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for LockedEther in contract 'ERC20':
    |// File: C:/st/contracts/ERC20.sol
    |
  > |contract ERC20 is IERC20, Lockable, Whitelist {
    |    using SafeMath for uint256;
    |
  at /unique_chucks/24/0xd65c863764d1127504de5dbd680c4f64fe16f80d.sol(238)

[33mWarning[0m for UnrestrictedWrite in contract 'ERC20':
    |pragma solidity ^0.5.3;
    |
  > |// File: c:/st/contracts/IERC20.sol
    |
    |/**
  at /unique_chucks/24/0xd65c863764d1127504de5dbd680c4f64fe16f80d.sol(3)

[33mWarning[0m for UnrestrictedWrite in contract 'ERC20':
    |		for(uint i=0;i<whitelist.length;i++){
    |			if(whitelist[i] == addr){
  > |				whitelist[i] = whitelist[whitelist.length-1];
    |				delete(whitelist[whitelist.length-1]);
    |				whitelist.length--;
  at /unique_chucks/24/0xd65c863764d1127504de5dbd680c4f64fe16f80d.sol(201)

[33mWarning[0m for UnrestrictedWrite in contract 'ERC20':
    |			if(whitelist[i] == addr){
    |				whitelist[i] = whitelist[whitelist.length-1];
  > |				delete(whitelist[whitelist.length-1]);
    |				whitelist.length--;
    |				break;
  at /unique_chucks/24/0xd65c863764d1127504de5dbd680c4f64fe16f80d.sol(202)

[33mWarning[0m for UnrestrictedWrite in contract 'ERC20':
    |// File: C:/st/contracts/ERC20.sol
    |
  > |contract ERC20 is IERC20, Lockable, Whitelist {
    |    using SafeMath for uint256;
    |
  at /unique_chucks/24/0xd65c863764d1127504de5dbd680c4f64fe16f80d.sol(238)

[33mWarning[0m for UnrestrictedWrite in contract 'ERC20':
    |        _totalSupply = 0;
    |        for(uint i=0;i<holders.length;i++){
  > |            _balances[holders[i]] = 0;
    |        }
    |        delete holders;
  at /unique_chucks/24/0xd65c863764d1127504de5dbd680c4f64fe16f80d.sol(264)

[33mWarning[0m for UnrestrictedWrite in contract 'ERC20':
    |        require(address(0) != addr);
    |        if(!isHolder(addr)){
  > |            holders.push(addr);
    |        }
    |    }
  at /unique_chucks/24/0xd65c863764d1127504de5dbd680c4f64fe16f80d.sol(273)

[33mWarning[0m for UnrestrictedWrite in contract 'ERC20':
    |        for(uint i=0;i<holders.length;i++){
    |            if(holders[i] == addr){
  > |                holders[i] = holders[holders.length-1];
    |                delete(holders[holders.length-1]);
    |                holders.length--;
  at /unique_chucks/24/0xd65c863764d1127504de5dbd680c4f64fe16f80d.sol(280)

[33mWarning[0m for UnrestrictedWrite in contract 'ERC20':
    |            if(holders[i] == addr){
    |                holders[i] = holders[holders.length-1];
  > |                delete(holders[holders.length-1]);
    |                holders.length--;
    |                break;
  at /unique_chucks/24/0xd65c863764d1127504de5dbd680c4f64fe16f80d.sol(281)

[33mWarning[0m for UnrestrictedWrite in contract 'Lockable':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipTransferred(_owner, address(0));
  > |        _owner = address(0);
    |    }
    |
  at /unique_chucks/24/0xd65c863764d1127504de5dbd680c4f64fe16f80d.sol(137)

[33mWarning[0m for UnrestrictedWrite in contract 'Lockable':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_chucks/24/0xd65c863764d1127504de5dbd680c4f64fe16f80d.sol(155)

[33mWarning[0m for UnrestrictedWrite in contract 'Lockable':
    |
    |	function lock() public onlyOwner {
  > |		locked = true;
    |	}
    |
  at /unique_chucks/24/0xd65c863764d1127504de5dbd680c4f64fe16f80d.sol(171)

[33mWarning[0m for UnrestrictedWrite in contract 'Lockable':
    |
    |	function unlock() public onlyOwner {
  > |		locked = false;
    |	}
    |
  at /unique_chucks/24/0xd65c863764d1127504de5dbd680c4f64fe16f80d.sol(175)

[31mViolation[0m for LockedEther in contract 'SecurityToken':
    |// File: securitytoken.sol
    |
  > |contract SecurityToken is ERC20 {
    |	string public name;
    |	string public symbol;
  at /unique_chucks/24/0xd65c863764d1127504de5dbd680c4f64fe16f80d.sol(390)

[33mWarning[0m for UnrestrictedWrite in contract 'SecurityToken':
    |pragma solidity ^0.5.3;
    |
  > |// File: c:/st/contracts/IERC20.sol
    |
    |/**
  at /unique_chucks/24/0xd65c863764d1127504de5dbd680c4f64fe16f80d.sol(3)

[33mWarning[0m for UnrestrictedWrite in contract 'SecurityToken':
    |		for(uint i=0;i<whitelist.length;i++){
    |			if(whitelist[i] == addr){
  > |				whitelist[i] = whitelist[whitelist.length-1];
    |				delete(whitelist[whitelist.length-1]);
    |				whitelist.length--;
  at /unique_chucks/24/0xd65c863764d1127504de5dbd680c4f64fe16f80d.sol(201)

[33mWarning[0m for UnrestrictedWrite in contract 'SecurityToken':
    |			if(whitelist[i] == addr){
    |				whitelist[i] = whitelist[whitelist.length-1];
  > |				delete(whitelist[whitelist.length-1]);
    |				whitelist.length--;
    |				break;
  at /unique_chucks/24/0xd65c863764d1127504de5dbd680c4f64fe16f80d.sol(202)

[33mWarning[0m for UnrestrictedWrite in contract 'SecurityToken':
    |        _totalSupply = 0;
    |        for(uint i=0;i<holders.length;i++){
  > |            _balances[holders[i]] = 0;
    |        }
    |        delete holders;
  at /unique_chucks/24/0xd65c863764d1127504de5dbd680c4f64fe16f80d.sol(264)

[33mWarning[0m for UnrestrictedWrite in contract 'SecurityToken':
    |        require(address(0) != addr);
    |        if(!isHolder(addr)){
  > |            holders.push(addr);
    |        }
    |    }
  at /unique_chucks/24/0xd65c863764d1127504de5dbd680c4f64fe16f80d.sol(273)

[33mWarning[0m for UnrestrictedWrite in contract 'SecurityToken':
    |        for(uint i=0;i<holders.length;i++){
    |            if(holders[i] == addr){
  > |                holders[i] = holders[holders.length-1];
    |                delete(holders[holders.length-1]);
    |                holders.length--;
  at /unique_chucks/24/0xd65c863764d1127504de5dbd680c4f64fe16f80d.sol(280)

[33mWarning[0m for UnrestrictedWrite in contract 'SecurityToken':
    |            if(holders[i] == addr){
    |                holders[i] = holders[holders.length-1];
  > |                delete(holders[holders.length-1]);
    |                holders.length--;
    |                break;
  at /unique_chucks/24/0xd65c863764d1127504de5dbd680c4f64fe16f80d.sol(281)

[33mWarning[0m for UnrestrictedWrite in contract 'SecurityToken':
    |// File: securitytoken.sol
    |
  > |contract SecurityToken is ERC20 {
    |	string public name;
    |	string public symbol;
  at /unique_chucks/24/0xd65c863764d1127504de5dbd680c4f64fe16f80d.sol(390)

[31mViolation[0m for LockedEther in contract 'Whitelist':
    |// File: c:/st/contracts/Whitelist.sol
    |
  > |contract Whitelist is Ownable {
    |
    |	bool public whiteAll = false;
  at /unique_chucks/24/0xd65c863764d1127504de5dbd680c4f64fe16f80d.sol(182)

[31mViolation[0m for UnrestrictedWrite in contract 'Whitelist':
    |// File: c:/st/contracts/Whitelist.sol
    |
  > |contract Whitelist is Ownable {
    |
    |	bool public whiteAll = false;
  at /unique_chucks/24/0xd65c863764d1127504de5dbd680c4f64fe16f80d.sol(182)

[31mViolation[0m for UnrestrictedWrite in contract 'Whitelist':
    |		for(uint i=0;i<whitelist.length;i++){
    |			if(whitelist[i] == addr){
  > |				whitelist[i] = whitelist[whitelist.length-1];
    |				delete(whitelist[whitelist.length-1]);
    |				whitelist.length--;
  at /unique_chucks/24/0xd65c863764d1127504de5dbd680c4f64fe16f80d.sol(201)

[31mViolation[0m for UnrestrictedWrite in contract 'Whitelist':
    |			if(whitelist[i] == addr){
    |				whitelist[i] = whitelist[whitelist.length-1];
  > |				delete(whitelist[whitelist.length-1]);
    |				whitelist.length--;
    |				break;
  at /unique_chucks/24/0xd65c863764d1127504de5dbd680c4f64fe16f80d.sol(202)

[33mWarning[0m for UnrestrictedWrite in contract 'Whitelist':
    |pragma solidity ^0.5.3;
    |
  > |// File: c:/st/contracts/IERC20.sol
    |
    |/**
  at /unique_chucks/24/0xd65c863764d1127504de5dbd680c4f64fe16f80d.sol(3)

[33mWarning[0m for UnrestrictedWrite in contract 'Whitelist':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipTransferred(_owner, address(0));
  > |        _owner = address(0);
    |    }
    |
  at /unique_chucks/24/0xd65c863764d1127504de5dbd680c4f64fe16f80d.sol(137)

[33mWarning[0m for UnrestrictedWrite in contract 'Whitelist':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_chucks/24/0xd65c863764d1127504de5dbd680c4f64fe16f80d.sol(155)

[33mWarning[0m for UnrestrictedWrite in contract 'Whitelist':
    |	function addWhitelist(address addr) public onlyOwner{
    |		require(address(0) != addr && !isWhitelist(addr));
  > |		whitelist.push(addr);
    |	}
    |
  at /unique_chucks/24/0xd65c863764d1127504de5dbd680c4f64fe16f80d.sol(194)

[33mWarning[0m for UnrestrictedWrite in contract 'Whitelist':
    |
    |	function whitelistAll() public onlyOwner{
  > |		whiteAll = true;
    |	}
    |	function reverseWhitelistAll() public onlyOwner{
  at /unique_chucks/24/0xd65c863764d1127504de5dbd680c4f64fe16f80d.sol(220)

[33mWarning[0m for UnrestrictedWrite in contract 'Whitelist':
    |	}
    |	function reverseWhitelistAll() public onlyOwner{
  > |		whiteAll = false;
    |	}
    |
  at /unique_chucks/24/0xd65c863764d1127504de5dbd680c4f64fe16f80d.sol(223)