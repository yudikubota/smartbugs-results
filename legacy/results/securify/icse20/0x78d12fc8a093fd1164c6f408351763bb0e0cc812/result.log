Processing contract: /unique_chucks/26/0x78d12fc8a093fd1164c6f408351763bb0e0cc812.sol:ECTools
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/26/0x78d12fc8a093fd1164c6f408351763bb0e0cc812.sol:ERC20
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/26/0x78d12fc8a093fd1164c6f408351763bb0e0cc812.sol:Escrow_V3
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/26/0x78d12fc8a093fd1164c6f408351763bb0e0cc812.sol:IERC20
Processing contract: /unique_chucks/26/0x78d12fc8a093fd1164c6f408351763bb0e0cc812.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for LockedEther in contract 'ECTools':
    |pragma solidity 0.5.1;
    |
  > |library ECTools {
    |
    |  /**
  at /unique_chucks/26/0x78d12fc8a093fd1164c6f408351763bb0e0cc812.sol(3)

[33mWarning[0m for DAOConstantGas in contract 'Escrow_V3':
    |
    |        tokenContract.transfer(addressToFund, tokenAmount);
  > |        addressToFund.transfer(weiAmount);
    |
    |        _refundMsgSender(gasLimit, gasprice);
  at /unique_chucks/26/0x78d12fc8a093fd1164c6f408351763bb0e0cc812.sol(422)

[31mViolation[0m for RepeatedCall in contract 'Escrow_V3':
    |        _preFund(hashedParameters, authorizationSignature, nonce);
    |
  > |        tokenContract.transfer(addressToFund, tokenAmount);
    |        addressToFund.transfer(weiAmount);
    |
  at /unique_chucks/26/0x78d12fc8a093fd1164c6f408351763bb0e0cc812.sol(421)

[31mViolation[0m for RepeatedCall in contract 'Escrow_V3':
    |
    |        tokenContract.transfer(addressToFund, tokenAmount);
  > |        addressToFund.transfer(weiAmount);
    |
    |        _refundMsgSender(gasLimit, gasprice);
  at /unique_chucks/26/0x78d12fc8a093fd1164c6f408351763bb0e0cc812.sol(422)

[31mViolation[0m for RepeatedCall in contract 'Escrow_V3':
    |    function _refundMsgSender(uint256 gasLimit, uint256 gasprice) internal {
    |        uint256 refundAmount = gasLimit.sub(gasleft()).add(REFUNDING_LOGIC_GAS_COST).mul(gasprice);
  > |        msg.sender.transfer(refundAmount);
    |    }
    |
  at /unique_chucks/26/0x78d12fc8a093fd1164c6f408351763bb0e0cc812.sol(449)

[31mViolation[0m for TODReceiver in contract 'Escrow_V3':
    |    */
    |    function withdrawEthers(uint256 ethersAmount) public onlyDAppAdmin {
  > |        dAppAdmin.transfer(ethersAmount);
    |    }
    |
  at /unique_chucks/26/0x78d12fc8a093fd1164c6f408351763bb0e0cc812.sol(456)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'Escrow_V3':
    |
    |        tokenContract.transfer(addressToFund, tokenAmount);
  > |        addressToFund.transfer(weiAmount);
    |
    |        _refundMsgSender(gasLimit, gasprice);
  at /unique_chucks/26/0x78d12fc8a093fd1164c6f408351763bb0e0cc812.sol(422)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'Escrow_V3':
    |    function _refundMsgSender(uint256 gasLimit, uint256 gasprice) internal {
    |        uint256 refundAmount = gasLimit.sub(gasleft()).add(REFUNDING_LOGIC_GAS_COST).mul(gasprice);
  > |        msg.sender.transfer(refundAmount);
    |    }
    |
  at /unique_chucks/26/0x78d12fc8a093fd1164c6f408351763bb0e0cc812.sol(449)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'Escrow_V3':
    |    */
    |    function withdrawEthers(uint256 ethersAmount) public onlyDAppAdmin {
  > |        dAppAdmin.transfer(ethersAmount);
    |    }
    |
  at /unique_chucks/26/0x78d12fc8a093fd1164c6f408351763bb0e0cc812.sol(456)

[31mViolation[0m for UnrestrictedWrite in contract 'Escrow_V3':
    |        require(signers[signer], "Invalid authorization signature or signer");
    |
  > |        usedNonces[nonce] = true;
    |    }
    |
  at /unique_chucks/26/0x78d12fc8a093fd1164c6f408351763bb0e0cc812.sol(434)

[33mWarning[0m for UnrestrictedWrite in contract 'Escrow_V3':
    |    */
    |    function editSigner(address _newSigner, bool add) public onlyDAppAdmin {
  > |        signers[_newSigner] = add;
    |    }
    |
  at /unique_chucks/26/0x78d12fc8a093fd1164c6f408351763bb0e0cc812.sol(470)

[33mWarning[0m for UnrestrictedWrite in contract 'Escrow_V3':
    |    */
    |    function editDappAdmin (address payable _dAppAdmin) public onlyDAppAdmin {
  > |        dAppAdmin = _dAppAdmin;
    |    }
    |
  at /unique_chucks/26/0x78d12fc8a093fd1164c6f408351763bb0e0cc812.sol(477)

[33mWarning[0m for UnrestrictedWrite in contract 'Escrow_V3':
    |    */
    |    function editFundExecutor(address _newExecutor, bool add) public onlyDAppAdmin {
  > |        fundExecutors[_newExecutor] = add;
    |    }
    |
  at /unique_chucks/26/0x78d12fc8a093fd1164c6f408351763bb0e0cc812.sol(484)