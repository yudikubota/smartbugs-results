Processing contract: /unique_chucks/31/0xf8d4ea0b15f8118a8a33d4404988c330e9db39fd.sol:ArtworkToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/31/0xf8d4ea0b15f8118a8a33d4404988c330e9db39fd.sol:Documentable
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/31/0xf8d4ea0b15f8118a8a33d4404988c330e9db39fd.sol:ERC20
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/31/0xf8d4ea0b15f8118a8a33d4404988c330e9db39fd.sol:ERC20Detailed
Processing contract: /unique_chucks/31/0xf8d4ea0b15f8118a8a33d4404988c330e9db39fd.sol:IERC20
Processing contract: /unique_chucks/31/0xf8d4ea0b15f8118a8a33d4404988c330e9db39fd.sol:ITransferPolicy
Processing contract: /unique_chucks/31/0xf8d4ea0b15f8118a8a33d4404988c330e9db39fd.sol:Migratable
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/31/0xf8d4ea0b15f8118a8a33d4404988c330e9db39fd.sol:Ownable
Processing contract: /unique_chucks/31/0xf8d4ea0b15f8118a8a33d4404988c330e9db39fd.sol:Pausable
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/31/0xf8d4ea0b15f8118a8a33d4404988c330e9db39fd.sol:Policable
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/31/0xf8d4ea0b15f8118a8a33d4404988c330e9db39fd.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/31/0xf8d4ea0b15f8118a8a33d4404988c330e9db39fd.sol:Seizable
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/31/0xf8d4ea0b15f8118a8a33d4404988c330e9db39fd.sol:Token
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for LockedEther in contract 'ArtworkToken':
    |}
    |
  > |contract ArtworkToken is Token, Policable, Seizable, Pausable, Documentable, Migratable{
    |    
    |
  at /unique_chucks/31/0xf8d4ea0b15f8118a8a33d4404988c330e9db39fd.sol(540)

[33mWarning[0m for UnrestrictedWrite in contract 'Documentable':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipTransferred(_owner, address(0));
  > |        _owner = address(0);
    |    }
    |
  at /unique_chucks/31/0xf8d4ea0b15f8118a8a33d4404988c330e9db39fd.sol(107)

[33mWarning[0m for UnrestrictedWrite in contract 'Documentable':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_chucks/31/0xf8d4ea0b15f8118a8a33d4404988c330e9db39fd.sol(125)

[33mWarning[0m for UnrestrictedWrite in contract 'Documentable':
    |  function setAssetHash(bytes32 _newHash) public onlyOwner {
    |    require(assetHash == 0x0, "Asset Hash can only be set once");
  > |    assetHash = _newHash;
    |  }
    |}
  at /unique_chucks/31/0xf8d4ea0b15f8118a8a33d4404988c330e9db39fd.sol(365)

[33mWarning[0m for UnrestrictedWrite in contract 'Migratable':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipTransferred(_owner, address(0));
  > |        _owner = address(0);
    |    }
    |
  at /unique_chucks/31/0xf8d4ea0b15f8118a8a33d4404988c330e9db39fd.sol(107)

[33mWarning[0m for UnrestrictedWrite in contract 'Migratable':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_chucks/31/0xf8d4ea0b15f8118a8a33d4404988c330e9db39fd.sol(125)

[33mWarning[0m for UnrestrictedWrite in contract 'Migratable':
    |        require(account != address(0));
    |
  > |        _totalSupply = _totalSupply.add(value);
    |        _balances[account] = _balances[account].add(value);
    |        emit Transfer(address(0), account, value);
  at /unique_chucks/31/0xf8d4ea0b15f8118a8a33d4404988c330e9db39fd.sol(284)

[33mWarning[0m for UnrestrictedWrite in contract 'Migratable':
    |        require(account != address(0));
    |
  > |        _totalSupply = _totalSupply.sub(value);
    |        _balances[account] = _balances[account].sub(value);
    |        emit Transfer(account, address(0), value);
  at /unique_chucks/31/0xf8d4ea0b15f8118a8a33d4404988c330e9db39fd.sol(298)

[33mWarning[0m for UnrestrictedWrite in contract 'Migratable':
    |  function appendOldVersion(address old) public onlyOwner{
    |    require(_old[old] == false, "Know old version");
  > |    _old[old] = true;
    |    emit OldVersionAdded(old);
    |  }
  at /unique_chucks/31/0xf8d4ea0b15f8118a8a33d4404988c330e9db39fd.sol(393)

[33mWarning[0m for UnrestrictedWrite in contract 'Migratable':
    |  function removeOldVersion(address old) public onlyOwner{
    |    require(_old[old], "Unknow old version");
  > |    _old[old] = false;
    |    emit OldVersionRemoved(old);
    |  }
  at /unique_chucks/31/0xf8d4ea0b15f8118a8a33d4404988c330e9db39fd.sol(405)

[33mWarning[0m for UnrestrictedWrite in contract 'Migratable':
    |  function setNewVersion(address new_) public onlyOwner{
    |    emit NewVersionChanges(_new, new_);
  > |    _new = new_;
    |  }
    |
  at /unique_chucks/31/0xf8d4ea0b15f8118a8a33d4404988c330e9db39fd.sol(417)

[33mWarning[0m for UnrestrictedWrite in contract 'Pausable':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipTransferred(_owner, address(0));
  > |        _owner = address(0);
    |    }
    |
  at /unique_chucks/31/0xf8d4ea0b15f8118a8a33d4404988c330e9db39fd.sol(107)

[33mWarning[0m for UnrestrictedWrite in contract 'Pausable':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_chucks/31/0xf8d4ea0b15f8118a8a33d4404988c330e9db39fd.sol(125)

[33mWarning[0m for UnrestrictedWrite in contract 'Pausable':
    |     */
    |    function pause() public onlyOwner whenNotPaused {
  > |        _paused = true;
    |        emit Paused();
    |    }
  at /unique_chucks/31/0xf8d4ea0b15f8118a8a33d4404988c330e9db39fd.sol(481)

[33mWarning[0m for UnrestrictedWrite in contract 'Pausable':
    |     */
    |    function unpause() public onlyOwner whenPaused {
  > |        _paused = false;
    |        emit Unpaused();
    |    }
  at /unique_chucks/31/0xf8d4ea0b15f8118a8a33d4404988c330e9db39fd.sol(489)

[31mViolation[0m for MissingInputValidation in contract 'Policable':
    |    }
    |
  > |    function setTransferPolicy(address _newPolicy) public onlyOwner {
    |        address old = address(transferPolicy);
    |        transferPolicy = ITransferPolicy(_newPolicy);
  at /unique_chucks/31/0xf8d4ea0b15f8118a8a33d4404988c330e9db39fd.sol(515)

[31mViolation[0m for UnrestrictedWrite in contract 'Policable':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_chucks/31/0xf8d4ea0b15f8118a8a33d4404988c330e9db39fd.sol(125)

[33mWarning[0m for UnrestrictedWrite in contract 'Policable':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipTransferred(_owner, address(0));
  > |        _owner = address(0);
    |    }
    |
  at /unique_chucks/31/0xf8d4ea0b15f8118a8a33d4404988c330e9db39fd.sol(107)

[33mWarning[0m for UnrestrictedWrite in contract 'Policable':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_chucks/31/0xf8d4ea0b15f8118a8a33d4404988c330e9db39fd.sol(125)

[33mWarning[0m for UnrestrictedWrite in contract 'Policable':
    |    function setTransferPolicy(address _newPolicy) public onlyOwner {
    |        address old = address(transferPolicy);
  > |        transferPolicy = ITransferPolicy(_newPolicy);
    |        emit PolicyChanged(old, _newPolicy);
    |    }
  at /unique_chucks/31/0xf8d4ea0b15f8118a8a33d4404988c330e9db39fd.sol(517)

[33mWarning[0m for UnrestrictedWrite in contract 'Seizable':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipTransferred(_owner, address(0));
  > |        _owner = address(0);
    |    }
    |
  at /unique_chucks/31/0xf8d4ea0b15f8118a8a33d4404988c330e9db39fd.sol(107)

[33mWarning[0m for UnrestrictedWrite in contract 'Seizable':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_chucks/31/0xf8d4ea0b15f8118a8a33d4404988c330e9db39fd.sol(125)

[33mWarning[0m for UnrestrictedWrite in contract 'Seizable':
    |        require(account != address(0));
    |
  > |        _totalSupply = _totalSupply.add(value);
    |        _balances[account] = _balances[account].add(value);
    |        emit Transfer(address(0), account, value);
  at /unique_chucks/31/0xf8d4ea0b15f8118a8a33d4404988c330e9db39fd.sol(284)

[33mWarning[0m for UnrestrictedWrite in contract 'Seizable':
    |        require(account != address(0));
    |
  > |        _totalSupply = _totalSupply.sub(value);
    |        _balances[account] = _balances[account].sub(value);
    |        emit Transfer(account, address(0), value);
  at /unique_chucks/31/0xf8d4ea0b15f8118a8a33d4404988c330e9db39fd.sol(298)

[31mViolation[0m for LockedEther in contract 'Token':
    |}
    |
  > |contract Token is ERC20, ERC20Detailed {
    |    constructor(string memory name, string memory symbol, uint8 decimals, uint256 mint) ERC20Detailed(name,symbol,decimals) public {
    |        _mint(msg.sender, mint);
  at /unique_chucks/31/0xf8d4ea0b15f8118a8a33d4404988c330e9db39fd.sol(534)