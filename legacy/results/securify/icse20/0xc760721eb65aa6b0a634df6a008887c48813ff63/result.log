Processing contract: /unique_chucks/18/0xc760721eb65aa6b0a634df6a008887c48813ff63.sol:Cryptorg
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/18/0xc760721eb65aa6b0a634df6a008887c48813ff63.sol:ERC20
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/18/0xc760721eb65aa6b0a634df6a008887c48813ff63.sol:ERC20Detailed
Processing contract: /unique_chucks/18/0xc760721eb65aa6b0a634df6a008887c48813ff63.sol:IERC20
Processing contract: /unique_chucks/18/0xc760721eb65aa6b0a634df6a008887c48813ff63.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for LockedEther in contract 'Cryptorg':
    | * @title Cryptorg Token CTG
    | */
  > |contract Cryptorg is ERC20, ERC20Detailed {
    |    uint8 public constant DECIMALS = 8;
    |    uint256 public constant INITIAL_SUPPLY = 100000000 * (10 ** uint256(DECIMALS));
  at /unique_chucks/18/0xc760721eb65aa6b0a634df6a008887c48813ff63.sol(319)