Processing contract: /unique_chucks/47/0x233148c349b66777357ff46dd0bd77987e346015.sol:BasicToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/47/0x233148c349b66777357ff46dd0bd77987e346015.sol:ERC20
Processing contract: /unique_chucks/47/0x233148c349b66777357ff46dd0bd77987e346015.sol:ERC20Basic
Processing contract: /unique_chucks/47/0x233148c349b66777357ff46dd0bd77987e346015.sol:KrpToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/47/0x233148c349b66777357ff46dd0bd77987e346015.sol:Ownable
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/47/0x233148c349b66777357ff46dd0bd77987e346015.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/47/0x233148c349b66777357ff46dd0bd77987e346015.sol:StandardToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[33mWarning[0m for UnrestrictedWrite in contract 'BasicToken':
    |        // SafeMath.sub will throw if there is not enough balance.
    |        balances[msg.sender] = balances[msg.sender].sub(_value);
  > |        balances[_to] = balances[_to].add(_value);
    |        emit Transfer(msg.sender, _to, _value);
    |        return true;
  at /unique_chucks/47/0x233148c349b66777357ff46dd0bd77987e346015.sol(42)

[31mViolation[0m for LockedEther in contract 'KrpToken':
    |
    |}
  > |contract KrpToken is StandardToken, Ownable {
    |
    |    string public constant name = "Kryptoin Blockchain 10 ETF";
  at /unique_chucks/47/0x233148c349b66777357ff46dd0bd77987e346015.sol(219)

[33mWarning[0m for UnrestrictedWrite in contract 'KrpToken':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(owner, newOwner);
  > |        owner = newOwner;
    |    }
    |
  at /unique_chucks/47/0x233148c349b66777357ff46dd0bd77987e346015.sol(87)

[33mWarning[0m for UnrestrictedWrite in contract 'KrpToken':
    |
    |    function setMintManager(address _mintManager) public onlyOwner {
  > |        mintManager = _mintManager;
    |    }
    |
  at /unique_chucks/47/0x233148c349b66777357ff46dd0bd77987e346015.sol(245)

[33mWarning[0m for UnrestrictedWrite in contract 'KrpToken':
    |     */
    |    function stopMinting() onlyOwner public returns (bool) {
  > |        mintingStopped = true;
    |        emit MintStopped();
    |        return true;
  at /unique_chucks/47/0x233148c349b66777357ff46dd0bd77987e346015.sol(268)

[33mWarning[0m for UnrestrictedWrite in contract 'KrpToken':
    |
    |    function startMinting() onlyOwner public returns (bool) {
  > |        mintingStopped = false;
    |        emit MintStarted();
    |        return true;
  at /unique_chucks/47/0x233148c349b66777357ff46dd0bd77987e346015.sol(274)

[33mWarning[0m for UnrestrictedWrite in contract 'KrpToken':
    |    // Toggle trade on/off
    |    function toggleTradeOn() public onlyOwner{
  > |        tradeOn = !tradeOn;
    |    }
    |}
  at /unique_chucks/47/0x233148c349b66777357ff46dd0bd77987e346015.sol(309)

[33mWarning[0m for UnrestrictedWrite in contract 'Ownable':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(owner, newOwner);
  > |        owner = newOwner;
    |    }
    |
  at /unique_chucks/47/0x233148c349b66777357ff46dd0bd77987e346015.sol(87)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |        // SafeMath.sub will throw if there is not enough balance.
    |        balances[msg.sender] = balances[msg.sender].sub(_value);
  > |        balances[_to] = balances[_to].add(_value);
    |        emit Transfer(msg.sender, _to, _value);
    |        return true;
  at /unique_chucks/47/0x233148c349b66777357ff46dd0bd77987e346015.sol(42)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |        require(_value <= allowed[_from][msg.sender]);
    |
  > |        balances[_from] = balances[_from].sub(_value);
    |        balances[_to] = balances[_to].add(_value);
    |        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
  at /unique_chucks/47/0x233148c349b66777357ff46dd0bd77987e346015.sol(148)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |
    |        balances[_from] = balances[_from].sub(_value);
  > |        balances[_to] = balances[_to].add(_value);
    |        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
    |        emit Transfer(_from, _to, _value);
  at /unique_chucks/47/0x233148c349b66777357ff46dd0bd77987e346015.sol(149)