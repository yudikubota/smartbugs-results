Processing contract: /unique_chucks/5/0x957b28f93b0e01557e21e6c564ab26ddc2d18ec5.sol:MultiOwnable
Processing contract: /unique_chucks/5/0x957b28f93b0e01557e21e6c564ab26ddc2d18ec5.sol:NemodaxStorage
Processing contract: /unique_chucks/5/0x957b28f93b0e01557e21e6c564ab26ddc2d18ec5.sol:Pausable
Processing contract: /unique_chucks/5/0x957b28f93b0e01557e21e6c564ab26ddc2d18ec5.sol:ProxyNemodax
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/5/0x957b28f93b0e01557e21e6c564ab26ddc2d18ec5.sol:RunningContractManager
Processing contract: /unique_chucks/5/0x957b28f93b0e01557e21e6c564ab26ddc2d18ec5.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/5/0x957b28f93b0e01557e21e6c564ab26ddc2d18ec5.sol:TokenERC20
Processing contract: /unique_chucks/5/0x957b28f93b0e01557e21e6c564ab26ddc2d18ec5.sol:TokenExchanger
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
java.io.IOException: Timeout for /tmp/binaries_souffle3933508995816369876/mustExplicit -j 2 -F /tmp/souffle-66262744-15e0-4365-8997-cb51f0a316ac -D /tmp/souffle-66262744-15e0-4365-8997-cb51f0a316ac_OUT
	at ch.securify.analysis.AbstractDataflow.runCommand(AbstractDataflow.java:277)
	at ch.securify.analysis.AbstractDataflow.initDataflow(AbstractDataflow.java:169)
	at ch.securify.analysis.MustExplicitDataflow.<init>(MustExplicitDataflow.java:33)
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:33)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error in Securify
java.lang.RuntimeException
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:37)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error, skipping: /unique_chucks/5/0x957b28f93b0e01557e21e6c564ab26ddc2d18ec5.sol:TokenExchanger
[31mViolation[0m for UnrestrictedWrite in contract 'ProxyNemodax':
    |    function _dismiss() internal {
    |      emit Dismiss(msg.sender, committeeStatus.proposedFuncData);
  > |      committeeStatus.numOfVotes = 0;
    |      committeeStatus.proposedFuncData = "";
    |      delete ballot;
  at /unique_chucks/5/0x957b28f93b0e01557e21e6c564ab26ddc2d18ec5.sol(184)

[31mViolation[0m for UnrestrictedWrite in contract 'ProxyNemodax':
    |        require( owner[_newOwner] == false );
    |        owner[msg.sender] = false;
  > |        owner[_newOwner] = true;
    |        emit TransferOwnership(msg.sender, _newOwner);
    |    }
  at /unique_chucks/5/0x957b28f93b0e01557e21e6c564ab26ddc2d18ec5.sol(225)

[31mViolation[0m for UnrestrictedWrite in contract 'ProxyNemodax':
    |        require( _newOwner != address(0x0) );
    |        require( owner[_newOwner] != true );
  > |        owner[_newOwner] = true;
    |        committeeStatus.numOfOwners++;
    |        emit AddedOwner(_newOwner);
  at /unique_chucks/5/0x957b28f93b0e01557e21e6c564ab26ddc2d18ec5.sol(238)

[31mViolation[0m for UnrestrictedWrite in contract 'ProxyNemodax':
    |        require( owner[_newOwner] != true );
    |        owner[_newOwner] = true;
  > |        committeeStatus.numOfOwners++;
    |        emit AddedOwner(_newOwner);
    |    }
  at /unique_chucks/5/0x957b28f93b0e01557e21e6c564ab26ddc2d18ec5.sol(239)

[31mViolation[0m for UnrestrictedWrite in contract 'ProxyNemodax':
    |        require( owner[_toRemove] == true );
    |        require( committeeStatus.numOfOwners > committeeStatus.numOfMinOwners ); // must keep Number of Minimum Owners at least.
  > |        owner[_toRemove] = false;
    |        committeeStatus.numOfOwners--;
    |        emit RemovedOwner(_toRemove);
  at /unique_chucks/5/0x957b28f93b0e01557e21e6c564ab26ddc2d18ec5.sol(253)

[31mViolation[0m for UnrestrictedWrite in contract 'ProxyNemodax':
    |        require( committeeStatus.numOfOwners > committeeStatus.numOfMinOwners ); // must keep Number of Minimum Owners at least.
    |        owner[_toRemove] = false;
  > |        committeeStatus.numOfOwners--;
    |        emit RemovedOwner(_toRemove);
    |    }
  at /unique_chucks/5/0x957b28f93b0e01557e21e6c564ab26ddc2d18ec5.sol(254)

[31mViolation[0m for UnrestrictedWrite in contract 'ProxyNemodax':
    |     */
    |    function pause() public onlyOwner committeeApproved whenNotPaused {
  > |        paused = true;
    |        emit Pause();
    |    }
  at /unique_chucks/5/0x957b28f93b0e01557e21e6c564ab26ddc2d18ec5.sol(286)

[31mViolation[0m for UnrestrictedWrite in contract 'ProxyNemodax':
    |
    |    function unpause() public onlyOwner committeeApproved whenPaused {
  > |        paused = false;
    |        emit Unpause();
    |    }
  at /unique_chucks/5/0x957b28f93b0e01557e21e6c564ab26ddc2d18ec5.sol(291)

[31mViolation[0m for UnrestrictedWrite in contract 'ProxyNemodax':
    |    function upgrade(address _newAddr) onlyOwner committeeApproved external {
    |        require(implementation != _newAddr);
  > |        implementation = _newAddr;
    |        emit Upgraded(_newAddr); // SmartDec Recommendations
    |    }
  at /unique_chucks/5/0x957b28f93b0e01557e21e6c564ab26ddc2d18ec5.sol(306)

[31mViolation[0m for UnrestrictedWrite in contract 'ProxyNemodax':
    | */
    |
  > |contract ProxyNemodax is NemodaxStorage {
    |
    |    /* Initialize new committee. this will be real committee accounts, not from TokenExchanger contract */
  at /unique_chucks/5/0x957b28f93b0e01557e21e6c564ab26ddc2d18ec5.sol(849)

[33mWarning[0m for UnrestrictedWrite in contract 'ProxyNemodax':
    |
    |/**
  > | * @title SafeMath
    | * @dev Math operations with safety checks that throw on error
    | */
  at /unique_chucks/5/0x957b28f93b0e01557e21e6c564ab26ddc2d18ec5.sol(5)

[33mWarning[0m for UnrestrictedWrite in contract 'ProxyNemodax':
    |      //Check, if everyone voted.
    |      //require(committeeStatus.numOfOwners > committeeStatus.numOfVotes); // SmartDec Recommendations
  > |      committeeStatus.numOfVotes++;
    |      ballot.push(msg.sender);
    |      emit Vote(msg.sender, committeeStatus.proposedFuncData);
  at /unique_chucks/5/0x957b28f93b0e01557e21e6c564ab26ddc2d18ec5.sol(209)

[33mWarning[0m for UnrestrictedWrite in contract 'ProxyNemodax':
    |      //require(committeeStatus.numOfOwners > committeeStatus.numOfVotes); // SmartDec Recommendations
    |      committeeStatus.numOfVotes++;
  > |      ballot.push(msg.sender);
    |      emit Vote(msg.sender, committeeStatus.proposedFuncData);
    |    }
  at /unique_chucks/5/0x957b28f93b0e01557e21e6c564ab26ddc2d18ec5.sol(210)