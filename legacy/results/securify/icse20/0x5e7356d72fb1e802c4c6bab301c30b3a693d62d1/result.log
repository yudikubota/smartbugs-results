Processing contract: /unique_chucks/45/0x5e7356d72fb1e802c4c6bab301c30b3a693d62d1.sol:Address
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/45/0x5e7356d72fb1e802c4c6bab301c30b3a693d62d1.sol:AggregatedTokenSwap
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
java.io.IOException: Timeout for /tmp/binaries_souffle2625032427334546772/mustExplicit -j 2 -F /tmp/souffle-2d7dbaec-9098-4338-a4d9-672983a2c6e8 -D /tmp/souffle-2d7dbaec-9098-4338-a4d9-672983a2c6e8_OUT
	at ch.securify.analysis.AbstractDataflow.runCommand(AbstractDataflow.java:277)
	at ch.securify.analysis.AbstractDataflow.initDataflow(AbstractDataflow.java:169)
	at ch.securify.analysis.MustExplicitDataflow.<init>(MustExplicitDataflow.java:33)
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:33)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error in Securify
java.lang.RuntimeException
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:37)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error, skipping: /unique_chucks/45/0x5e7356d72fb1e802c4c6bab301c30b3a693d62d1.sol:AggregatedTokenSwap
Processing contract: /unique_chucks/45/0x5e7356d72fb1e802c4c6bab301c30b3a693d62d1.sol:CompressedCaller
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/45/0x5e7356d72fb1e802c4c6bab301c30b3a693d62d1.sol:ExternalCall
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/45/0x5e7356d72fb1e802c4c6bab301c30b3a693d62d1.sol:IAssetProxyDispatcher
Processing contract: /unique_chucks/45/0x5e7356d72fb1e802c4c6bab301c30b3a693d62d1.sol:IERC20
Processing contract: /unique_chucks/45/0x5e7356d72fb1e802c4c6bab301c30b3a693d62d1.sol:IExchangeCore
Processing contract: /unique_chucks/45/0x5e7356d72fb1e802c4c6bab301c30b3a693d62d1.sol:IGST2
Processing contract: /unique_chucks/45/0x5e7356d72fb1e802c4c6bab301c30b3a693d62d1.sol:IMatchOrders
Processing contract: /unique_chucks/45/0x5e7356d72fb1e802c4c6bab301c30b3a693d62d1.sol:IWETH
Processing contract: /unique_chucks/45/0x5e7356d72fb1e802c4c6bab301c30b3a693d62d1.sol:IWrapperFunctions
Processing contract: /unique_chucks/45/0x5e7356d72fb1e802c4c6bab301c30b3a693d62d1.sol:IZrxExchange
Processing contract: /unique_chucks/45/0x5e7356d72fb1e802c4c6bab301c30b3a693d62d1.sol:LibConstants
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/45/0x5e7356d72fb1e802c4c6bab301c30b3a693d62d1.sol:LibFillResults
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/45/0x5e7356d72fb1e802c4c6bab301c30b3a693d62d1.sol:LibOrder
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/45/0x5e7356d72fb1e802c4c6bab301c30b3a693d62d1.sol:Ownable
Processing contract: /unique_chucks/45/0x5e7356d72fb1e802c4c6bab301c30b3a693d62d1.sol:SafeERC20
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/45/0x5e7356d72fb1e802c4c6bab301c30b3a693d62d1.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/45/0x5e7356d72fb1e802c4c6bab301c30b3a693d62d1.sol:TokenSpender
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[33mWarning[0m for LockedEther in contract 'CompressedCaller':
    |
    |
  > |contract CompressedCaller {
    |
    |    function compressedCall(
  at /unique_chucks/45/0x5e7356d72fb1e802c4c6bab301c30b3a693d62d1.sol(348)

[31mViolation[0m for RepeatedCall in contract 'CompressedCaller':
    |
    |        bool success;
  > |        (success, result) = target.call.value(msg.value)(data);
    |        require(success, "Decompressed call failed");
    |    }
  at /unique_chucks/45/0x5e7356d72fb1e802c4c6bab301c30b3a693d62d1.sol(363)

[33mWarning[0m for TODAmount in contract 'CompressedCaller':
    |
    |        bool success;
  > |        (success, result) = target.call.value(msg.value)(data);
    |        require(success, "Decompressed call failed");
    |    }
  at /unique_chucks/45/0x5e7356d72fb1e802c4c6bab301c30b3a693d62d1.sol(363)

[33mWarning[0m for TODReceiver in contract 'CompressedCaller':
    |
    |        bool success;
  > |        (success, result) = target.call.value(msg.value)(data);
    |        require(success, "Decompressed call failed");
    |    }
  at /unique_chucks/45/0x5e7356d72fb1e802c4c6bab301c30b3a693d62d1.sol(363)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'CompressedCaller':
    |
    |        bool success;
  > |        (success, result) = target.call.value(msg.value)(data);
    |        require(success, "Decompressed call failed");
    |    }
  at /unique_chucks/45/0x5e7356d72fb1e802c4c6bab301c30b3a693d62d1.sol(363)

[31mViolation[0m for LockedEther in contract 'TokenSpender':
    |
    |
  > |contract TokenSpender is Ownable {
    |
    |    using SafeERC20 for IERC20;
  at /unique_chucks/45/0x5e7356d72fb1e802c4c6bab301c30b3a693d62d1.sol(797)

[31mViolation[0m for RepeatedCall in contract 'TokenSpender':
    |
    |        // solhint-disable-next-line avoid-low-level-calls
  > |        (bool success, bytes memory returndata) = address(token).call(data);
    |        require(success, "SafeERC20: low-level call failed");
    |
  at /unique_chucks/45/0x5e7356d72fb1e802c4c6bab301c30b3a693d62d1.sol(776)