Processing contract: /unique_chucks/30/0x5ac731c6cca4330c9c5badfde21578de57204db2.sol:CappedCrowdsale
Processing contract: /unique_chucks/30/0x5ac731c6cca4330c9c5badfde21578de57204db2.sol:ConditionalEscrow
Processing contract: /unique_chucks/30/0x5ac731c6cca4330c9c5badfde21578de57204db2.sol:Crowdsale
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/30/0x5ac731c6cca4330c9c5badfde21578de57204db2.sol:ERC20
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/30/0x5ac731c6cca4330c9c5badfde21578de57204db2.sol:ERC20Detailed
Processing contract: /unique_chucks/30/0x5ac731c6cca4330c9c5badfde21578de57204db2.sol:ERC20Mintable
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/30/0x5ac731c6cca4330c9c5badfde21578de57204db2.sol:ERC20Pausable
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/30/0x5ac731c6cca4330c9c5badfde21578de57204db2.sol:Escrow
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/30/0x5ac731c6cca4330c9c5badfde21578de57204db2.sol:FinalizableCrowdsale
Processing contract: /unique_chucks/30/0x5ac731c6cca4330c9c5badfde21578de57204db2.sol:IERC20
Processing contract: /unique_chucks/30/0x5ac731c6cca4330c9c5badfde21578de57204db2.sol:Migrations
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/30/0x5ac731c6cca4330c9c5badfde21578de57204db2.sol:MintedCrowdsale
Processing contract: /unique_chucks/30/0x5ac731c6cca4330c9c5badfde21578de57204db2.sol:MinterRole
Processing contract: /unique_chucks/30/0x5ac731c6cca4330c9c5badfde21578de57204db2.sol:Ownable
Processing contract: /unique_chucks/30/0x5ac731c6cca4330c9c5badfde21578de57204db2.sol:Pausable
Processing contract: /unique_chucks/30/0x5ac731c6cca4330c9c5badfde21578de57204db2.sol:PauserRole
Processing contract: /unique_chucks/30/0x5ac731c6cca4330c9c5badfde21578de57204db2.sol:ReentrancyGuard
Processing contract: /unique_chucks/30/0x5ac731c6cca4330c9c5badfde21578de57204db2.sol:RefundEscrow
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/30/0x5ac731c6cca4330c9c5badfde21578de57204db2.sol:RefundableCrowdsale
Processing contract: /unique_chucks/30/0x5ac731c6cca4330c9c5badfde21578de57204db2.sol:Roles
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/30/0x5ac731c6cca4330c9c5badfde21578de57204db2.sol:SafeERC20
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/30/0x5ac731c6cca4330c9c5badfde21578de57204db2.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/30/0x5ac731c6cca4330c9c5badfde21578de57204db2.sol:Secondary
Processing contract: /unique_chucks/30/0x5ac731c6cca4330c9c5badfde21578de57204db2.sol:TimedCrowdsale
Processing contract: /unique_chucks/30/0x5ac731c6cca4330c9c5badfde21578de57204db2.sol:TokenTimelock
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/30/0x5ac731c6cca4330c9c5badfde21578de57204db2.sol:TokenVesting
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/30/0x5ac731c6cca4330c9c5badfde21578de57204db2.sol:WiseToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/30/0x5ac731c6cca4330c9c5badfde21578de57204db2.sol:WiseTokenCrowdsale
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
java.io.IOException: Timeout for /tmp/binaries_souffle5120480427996976614/mustExplicit -j 2 -F /tmp/souffle-6b0e3448-50af-418d-9346-184a603f48ac -D /tmp/souffle-6b0e3448-50af-418d-9346-184a603f48ac_OUT
	at ch.securify.analysis.AbstractDataflow.runCommand(AbstractDataflow.java:277)
	at ch.securify.analysis.AbstractDataflow.initDataflow(AbstractDataflow.java:169)
	at ch.securify.analysis.MustExplicitDataflow.<init>(MustExplicitDataflow.java:33)
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:33)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error in Securify
java.lang.RuntimeException
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:37)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error, skipping: /unique_chucks/30/0x5ac731c6cca4330c9c5badfde21578de57204db2.sol:WiseTokenCrowdsale
[33mWarning[0m for TODAmount in contract 'Crowdsale':
    |     */
    |    function _forwardFunds() internal {
  > |        _wallet.transfer(msg.value);
    |    }
    |}
  at /unique_chucks/30/0x5ac731c6cca4330c9c5badfde21578de57204db2.sol(829)

[31mViolation[0m for UnrestrictedWrite in contract 'Crowdsale':
    |     */
    |    modifier nonReentrant() {
  > |        _guardCounter += 1;
    |        uint256 localCounter = _guardCounter;
    |        _;
  at /unique_chucks/30/0x5ac731c6cca4330c9c5badfde21578de57204db2.sol(632)

[33mWarning[0m for UnrestrictedWrite in contract 'Crowdsale':
    |
    |        // update state
  > |        _weiRaised = _weiRaised.add(weiAmount);
    |
    |        _processPurchase(beneficiary, tokens);
  at /unique_chucks/30/0x5ac731c6cca4330c9c5badfde21578de57204db2.sol(751)

[33mWarning[0m for UnrestrictedWrite in contract 'ERC20Pausable':
    |     */
    |    function pause() public onlyPauser whenNotPaused {
  > |        _paused = true;
    |        emit Paused(msg.sender);
    |    }
  at /unique_chucks/30/0x5ac731c6cca4330c9c5badfde21578de57204db2.sol(565)

[33mWarning[0m for UnrestrictedWrite in contract 'ERC20Pausable':
    |     */
    |    function unpause() public onlyPauser whenPaused {
  > |        _paused = false;
    |        emit Unpaused(msg.sender);
    |    }
  at /unique_chucks/30/0x5ac731c6cca4330c9c5badfde21578de57204db2.sol(573)

[33mWarning[0m for TODAmount in contract 'Escrow':
    |        _deposits[payee] = 0;
    |
  > |        payee.transfer(payment);
    |
    |        emit Withdrawn(payee, payment);
  at /unique_chucks/30/0x5ac731c6cca4330c9c5badfde21578de57204db2.sol(1115)

[33mWarning[0m for UnrestrictedWrite in contract 'Escrow':
    |    function transferPrimary(address recipient) public onlyPrimary {
    |        require(recipient != address(0));
  > |        _primary = recipient;
    |        emit PrimaryTransferred(_primary);
    |    }
  at /unique_chucks/30/0x5ac731c6cca4330c9c5badfde21578de57204db2.sol(1064)

[33mWarning[0m for UnrestrictedWrite in contract 'Escrow':
    |    function deposit(address payee) public onlyPrimary payable {
    |        uint256 amount = msg.value;
  > |        _deposits[payee] = _deposits[payee].add(amount);
    |
    |        emit Deposited(payee, amount);
  at /unique_chucks/30/0x5ac731c6cca4330c9c5badfde21578de57204db2.sol(1101)

[33mWarning[0m for UnrestrictedWrite in contract 'Escrow':
    |        uint256 payment = _deposits[payee];
    |
  > |        _deposits[payee] = 0;
    |
    |        payee.transfer(payment);
  at /unique_chucks/30/0x5ac731c6cca4330c9c5badfde21578de57204db2.sol(1113)

[31mViolation[0m for MissingInputValidation in contract 'Migrations':
    |    }
    |
  > |    function setCompleted(uint completed) public restricted {
    |        last_completed_migration = completed;
    |    }
  at /unique_chucks/30/0x5ac731c6cca4330c9c5badfde21578de57204db2.sol(1935)

[31mViolation[0m for TODAmount in contract 'RefundEscrow':
    |    function beneficiaryWithdraw() public {
    |        require(_state == State.Closed);
  > |        _beneficiary.transfer(address(this).balance);
    |    }
    |
  at /unique_chucks/30/0x5ac731c6cca4330c9c5badfde21578de57204db2.sol(1221)

[33mWarning[0m for TODAmount in contract 'RefundEscrow':
    |        _deposits[payee] = 0;
    |
  > |        payee.transfer(payment);
    |
    |        emit Withdrawn(payee, payment);
  at /unique_chucks/30/0x5ac731c6cca4330c9c5badfde21578de57204db2.sol(1115)

[31mViolation[0m for TODReceiver in contract 'RefundEscrow':
    |    function beneficiaryWithdraw() public {
    |        require(_state == State.Closed);
  > |        _beneficiary.transfer(address(this).balance);
    |    }
    |
  at /unique_chucks/30/0x5ac731c6cca4330c9c5badfde21578de57204db2.sol(1221)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'RefundEscrow':
    |    function beneficiaryWithdraw() public {
    |        require(_state == State.Closed);
  > |        _beneficiary.transfer(address(this).balance);
    |    }
    |
  at /unique_chucks/30/0x5ac731c6cca4330c9c5badfde21578de57204db2.sol(1221)

[33mWarning[0m for UnrestrictedWrite in contract 'RefundEscrow':
    |    function transferPrimary(address recipient) public onlyPrimary {
    |        require(recipient != address(0));
  > |        _primary = recipient;
    |        emit PrimaryTransferred(_primary);
    |    }
  at /unique_chucks/30/0x5ac731c6cca4330c9c5badfde21578de57204db2.sol(1064)

[33mWarning[0m for UnrestrictedWrite in contract 'RefundEscrow':
    |    function deposit(address payee) public onlyPrimary payable {
    |        uint256 amount = msg.value;
  > |        _deposits[payee] = _deposits[payee].add(amount);
    |
    |        emit Deposited(payee, amount);
  at /unique_chucks/30/0x5ac731c6cca4330c9c5badfde21578de57204db2.sol(1101)

[33mWarning[0m for UnrestrictedWrite in contract 'RefundEscrow':
    |        uint256 payment = _deposits[payee];
    |
  > |        _deposits[payee] = 0;
    |
    |        payee.transfer(payment);
  at /unique_chucks/30/0x5ac731c6cca4330c9c5badfde21578de57204db2.sol(1113)

[33mWarning[0m for UnrestrictedWrite in contract 'RefundEscrow':
    |    function close() public onlyPrimary {
    |        require(_state == State.Active);
  > |        _state = State.Closed;
    |        emit RefundsClosed();
    |    }
  at /unique_chucks/30/0x5ac731c6cca4330c9c5badfde21578de57204db2.sol(1203)

[33mWarning[0m for UnrestrictedWrite in contract 'RefundEscrow':
    |    function enableRefunds() public onlyPrimary {
    |        require(_state == State.Active);
  > |        _state = State.Refunding;
    |        emit RefundsEnabled();
    |    }
  at /unique_chucks/30/0x5ac731c6cca4330c9c5badfde21578de57204db2.sol(1212)

[33mWarning[0m for UnrestrictedWrite in contract 'TokenVesting':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipTransferred(_owner, address(0));
  > |        _owner = address(0);
    |    }
    |
  at /unique_chucks/30/0x5ac731c6cca4330c9c5badfde21578de57204db2.sol(1363)

[33mWarning[0m for UnrestrictedWrite in contract 'TokenVesting':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_chucks/30/0x5ac731c6cca4330c9c5badfde21578de57204db2.sol(1381)

[33mWarning[0m for UnrestrictedWrite in contract 'TokenVesting':
    |        require(unreleased > 0);
    |
  > |        _released[address(token)] = _released[address(token)].add(unreleased);
    |
    |        token.safeTransfer(_beneficiary, unreleased);
  at /unique_chucks/30/0x5ac731c6cca4330c9c5badfde21578de57204db2.sol(1500)

[33mWarning[0m for UnrestrictedWrite in contract 'TokenVesting':
    |        uint256 refund = balance.sub(unreleased);
    |
  > |        _revoked[address(token)] = true;
    |
    |        token.safeTransfer(owner(), refund);
  at /unique_chucks/30/0x5ac731c6cca4330c9c5badfde21578de57204db2.sol(1521)

[31mViolation[0m for LockedEther in contract 'WiseToken':
    |// File: contracts/WiseToken.sol
    |
  > |contract WiseToken is  ERC20, ERC20Detailed, ERC20Mintable, ERC20Pausable, Ownable{
    |    constructor () public ERC20Detailed("WISE TOKEN", "WSE", 18) {
    |    }
  at /unique_chucks/30/0x5ac731c6cca4330c9c5badfde21578de57204db2.sol(1916)

[33mWarning[0m for UnrestrictedWrite in contract 'WiseToken':
    |        require(account != address(0));
    |
  > |        _totalSupply = _totalSupply.add(value);
    |        _balances[account] = _balances[account].add(value);
    |        emit Transfer(address(0), account, value);
  at /unique_chucks/30/0x5ac731c6cca4330c9c5badfde21578de57204db2.sol(244)

[33mWarning[0m for UnrestrictedWrite in contract 'WiseToken':
    |     */
    |    function pause() public onlyPauser whenNotPaused {
  > |        _paused = true;
    |        emit Paused(msg.sender);
    |    }
  at /unique_chucks/30/0x5ac731c6cca4330c9c5badfde21578de57204db2.sol(565)

[33mWarning[0m for UnrestrictedWrite in contract 'WiseToken':
    |     */
    |    function unpause() public onlyPauser whenPaused {
  > |        _paused = false;
    |        emit Unpaused(msg.sender);
    |    }
  at /unique_chucks/30/0x5ac731c6cca4330c9c5badfde21578de57204db2.sol(573)

[33mWarning[0m for UnrestrictedWrite in contract 'WiseToken':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipTransferred(_owner, address(0));
  > |        _owner = address(0);
    |    }
    |
  at /unique_chucks/30/0x5ac731c6cca4330c9c5badfde21578de57204db2.sol(1363)

[33mWarning[0m for UnrestrictedWrite in contract 'WiseToken':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_chucks/30/0x5ac731c6cca4330c9c5badfde21578de57204db2.sol(1381)