Processing contract: /unique_chucks/21/0xf99e87098f4f1c8d8bd6a3df7181b3acdc21848a.sol:ECRecovery
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/21/0xf99e87098f4f1c8d8bd6a3df7181b3acdc21848a.sol:EtherScheduler
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/21/0xf99e87098f4f1c8d8bd6a3df7181b3acdc21848a.sol:IERC20
Processing contract: /unique_chucks/21/0xf99e87098f4f1c8d8bd6a3df7181b3acdc21848a.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for DAOConstantGas in contract 'EtherScheduler':
    |    ) internal {
    |        balances[signer] = balances[signer].sub(P.add(_amount));
  > |        _targetAddress.transfer(_amount);
    |    }
    |    
  at /unique_chucks/21/0xf99e87098f4f1c8d8bd6a3df7181b3acdc21848a.sol(274)

[33mWarning[0m for TODAmount in contract 'EtherScheduler':
    |        
    |        msg.sender.transfer(P-fee);
  > |        fee_collector.transfer(fee);
    |    }
    |    
  at /unique_chucks/21/0xf99e87098f4f1c8d8bd6a3df7181b3acdc21848a.sol(264)

[33mWarning[0m for TODReceiver in contract 'EtherScheduler':
    |        
    |        msg.sender.transfer(P-fee);
  > |        fee_collector.transfer(fee);
    |    }
    |    
  at /unique_chucks/21/0xf99e87098f4f1c8d8bd6a3df7181b3acdc21848a.sol(264)

[33mWarning[0m for TODReceiver in contract 'EtherScheduler':
    |        
    |        balances[msg.sender] = balances[msg.sender].sub(1 finney);
  > |        fee_collector.transfer(1 finney);
    |    }
    |    
  at /unique_chucks/21/0xf99e87098f4f1c8d8bd6a3df7181b3acdc21848a.sol(281)

[31mViolation[0m for UnrestrictedWrite in contract 'EtherScheduler':
    |                
    |        require(!usedNonces[signer][_nonce]);
  > |        usedNonces[signer][_nonce] = true;
    |        //  v------------------------------ Burned the nonce ------------------------------v
    |        
  at /unique_chucks/21/0xf99e87098f4f1c8d8bd6a3df7181b3acdc21848a.sol(197)

[31mViolation[0m for UnrestrictedWrite in contract 'EtherScheduler':
    |        
    |        require(!usedNonces[signer][_nonce]);
  > |        usedNonces[signer][_nonce] = true;
    |        //  v------------------------------ Burned the nonce ------------------------------v
    |        
  at /unique_chucks/21/0xf99e87098f4f1c8d8bd6a3df7181b3acdc21848a.sol(232)