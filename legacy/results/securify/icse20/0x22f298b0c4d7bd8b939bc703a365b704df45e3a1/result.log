Processing contract: /unique_chucks/17/0x22f298b0c4d7bd8b939bc703a365b704df45e3a1.sol:Furance
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/17/0x22f298b0c4d7bd8b939bc703a365b704df45e3a1.sol:IERC20
Processing contract: /unique_chucks/17/0x22f298b0c4d7bd8b939bc703a365b704df45e3a1.sol:IPyroToken
Processing contract: /unique_chucks/17/0x22f298b0c4d7bd8b939bc703a365b704df45e3a1.sol:Ownable
Processing contract: /unique_chucks/17/0x22f298b0c4d7bd8b939bc703a365b704df45e3a1.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for UnrestrictedWrite in contract 'Furance':
    |  function bind() public returns(bool) {
    |    require(address(0) == address(pyro));
  > |    pyro = IPyroToken(msg.sender);
    |    return true;
    |  }
  at /unique_chucks/17/0x22f298b0c4d7bd8b939bc703a365b704df45e3a1.sol(255)

[31mViolation[0m for UnrestrictedWrite in contract 'Furance':
    |    if (c_i > b_i*kappa/DECIMAL_MULTIPLIER) c_i = b_i*kappa/DECIMAL_MULTIPLIER;
    |    require(c_i >= minimalPyroValue);
  > |    t.b += b_i;
    |    t.c += c_i;
    |    t.r = r_i;
  at /unique_chucks/17/0x22f298b0c4d7bd8b939bc703a365b704df45e3a1.sol(292)

[31mViolation[0m for UnrestrictedWrite in contract 'Furance':
    |    require(c_i >= minimalPyroValue);
    |    t.b += b_i;
  > |    t.c += c_i;
    |    t.r = r_i;
    |    t.blockNumber = block.number;
  at /unique_chucks/17/0x22f298b0c4d7bd8b939bc703a365b704df45e3a1.sol(293)

[31mViolation[0m for UnrestrictedWrite in contract 'Furance':
    |    t.b += b_i;
    |    t.c += c_i;
  > |    t.r = r_i;
    |    t.blockNumber = block.number;
    |    if (IERC20(token_).balanceOf(msg.sender)==0) ashes+=1;
  at /unique_chucks/17/0x22f298b0c4d7bd8b939bc703a365b704df45e3a1.sol(294)

[31mViolation[0m for UnrestrictedWrite in contract 'Furance':
    |    t.c += c_i;
    |    t.r = r_i;
  > |    t.blockNumber = block.number;
    |    if (IERC20(token_).balanceOf(msg.sender)==0) ashes+=1;
    |    pyro.mint(msg.sender, c_i);
  at /unique_chucks/17/0x22f298b0c4d7bd8b939bc703a365b704df45e3a1.sol(295)

[31mViolation[0m for UnrestrictedWrite in contract 'Furance':
    |    t.r = r_i;
    |    t.blockNumber = block.number;
  > |    if (IERC20(token_).balanceOf(msg.sender)==0) ashes+=1;
    |    pyro.mint(msg.sender, c_i);
    |    emit Burn(msg.sender, token_, b_i, c_i);
  at /unique_chucks/17/0x22f298b0c4d7bd8b939bc703a365b704df45e3a1.sol(296)

[33mWarning[0m for UnrestrictedWrite in contract 'Furance':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipTransferred(_owner, address(0));
  > |        _owner = address(0);
    |    }
    |
  at /unique_chucks/17/0x22f298b0c4d7bd8b939bc703a365b704df45e3a1.sol(54)

[33mWarning[0m for UnrestrictedWrite in contract 'Furance':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_chucks/17/0x22f298b0c4d7bd8b939bc703a365b704df45e3a1.sol(72)

[33mWarning[0m for UnrestrictedWrite in contract 'Furance':
    |
    |  function exitgush() public onlyOwner notExitgushed returns(bool) {
  > |    extinguished=true;
    |    return true;
    |  }
  at /unique_chucks/17/0x22f298b0c4d7bd8b939bc703a365b704df45e3a1.sol(248)

[33mWarning[0m for UnrestrictedWrite in contract 'Furance':
    |
    |  function addFuel(address token_, uint a, uint kappa0, uint w) public onlyOwner notExitgushed returns (bool) {
  > |    tokens[token_] = token(true, a, 0, 0, 0, kappa0, w, block.number);
    |  }
    |
  at /unique_chucks/17/0x22f298b0c4d7bd8b939bc703a365b704df45e3a1.sol(303)