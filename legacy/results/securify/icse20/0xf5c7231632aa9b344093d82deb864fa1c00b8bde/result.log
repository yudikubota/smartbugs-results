Processing contract: /unique_chucks/8/0xf5c7231632aa9b344093d82deb864fa1c00b8bde.sol:AddressRecord
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/8/0xf5c7231632aa9b344093d82deb864fa1c00b8bde.sol:RegistryInterface
Processing contract: /unique_chucks/8/0xf5c7231632aa9b344093d82deb864fa1c00b8bde.sol:UserAuth
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/8/0xf5c7231632aa9b344093d82deb864fa1c00b8bde.sol:UserNote
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/8/0xf5c7231632aa9b344093d82deb864fa1c00b8bde.sol:UserWallet
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for MissingInputValidation in contract 'UserAuth':
    |     * @dev sets new owner
    |     */
  > |    function setOwner(address nextOwner) public auth {
    |        RegistryInterface(registry).record(owner, nextOwner);
    |        owner = nextOwner;
  at /unique_chucks/8/0xf5c7231632aa9b344093d82deb864fa1c00b8bde.sol(53)

[33mWarning[0m for UnrestrictedWrite in contract 'UserAuth':
    |    function setOwner(address nextOwner) public auth {
    |        RegistryInterface(registry).record(owner, nextOwner);
  > |        owner = nextOwner;
    |        emit LogSetOwner(nextOwner);
    |    }
  at /unique_chucks/8/0xf5c7231632aa9b344093d82deb864fa1c00b8bde.sol(55)

[31mViolation[0m for DAO in contract 'UserWallet':
    |     */
    |    function setOwner(address nextOwner) public auth {
  > |        RegistryInterface(registry).record(owner, nextOwner);
    |        owner = nextOwner;
    |        emit LogSetOwner(nextOwner);
  at /unique_chucks/8/0xf5c7231632aa9b344093d82deb864fa1c00b8bde.sol(54)

[33mWarning[0m for MissingInputValidation in contract 'UserWallet':
    |     * @dev sets new owner
    |     */
  > |    function setOwner(address nextOwner) public auth {
    |        RegistryInterface(registry).record(owner, nextOwner);
    |        owner = nextOwner;
  at /unique_chucks/8/0xf5c7231632aa9b344093d82deb864fa1c00b8bde.sol(53)

[33mWarning[0m for MissingInputValidation in contract 'UserWallet':
    |     * @param _session to find the session
    |     */
  > |    function execute(
    |        address _target,
    |        bytes memory _data,
  at /unique_chucks/8/0xf5c7231632aa9b344093d82deb864fa1c00b8bde.sol(131)

[33mWarning[0m for TODAmount in contract 'UserWallet':
    |     */
    |    function setOwner(address nextOwner) public auth {
  > |        RegistryInterface(registry).record(owner, nextOwner);
    |        owner = nextOwner;
    |        emit LogSetOwner(nextOwner);
  at /unique_chucks/8/0xf5c7231632aa9b344093d82deb864fa1c00b8bde.sol(54)

[33mWarning[0m for TODReceiver in contract 'UserWallet':
    |     */
    |    function setOwner(address nextOwner) public auth {
  > |        RegistryInterface(registry).record(owner, nextOwner);
    |        owner = nextOwner;
    |        emit LogSetOwner(nextOwner);
  at /unique_chucks/8/0xf5c7231632aa9b344093d82deb864fa1c00b8bde.sol(54)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'UserWallet':
    |     */
    |    function setOwner(address nextOwner) public auth {
  > |        RegistryInterface(registry).record(owner, nextOwner);
    |        owner = nextOwner;
    |        emit LogSetOwner(nextOwner);
  at /unique_chucks/8/0xf5c7231632aa9b344093d82deb864fa1c00b8bde.sol(54)

[31mViolation[0m for UnrestrictedWrite in contract 'UserWallet':
    |    function setOwner(address nextOwner) public auth {
    |        RegistryInterface(registry).record(owner, nextOwner);
  > |        owner = nextOwner;
    |        emit LogSetOwner(nextOwner);
    |    }
  at /unique_chucks/8/0xf5c7231632aa9b344093d82deb864fa1c00b8bde.sol(55)