Processing contract: /unique_contracts/0x20bd491fee75b6af6c2100c83b83312d620f2958.sol:AddressUtils
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0x20bd491fee75b6af6c2100c83b83312d620f2958.sol:AdvancedRealityClashWeapon
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
java.io.IOException: Timeout for /tmp/binaries_souffle3547342745021725225/mustExplicit -j 1 -F /tmp/souffle-0be32e96-8e7e-412f-95aa-c418d26b9a11 -D /tmp/souffle-0be32e96-8e7e-412f-95aa-c418d26b9a11_OUT
	at ch.securify.analysis.AbstractDataflow.runCommand(AbstractDataflow.java:277)
	at ch.securify.analysis.AbstractDataflow.initDataflow(AbstractDataflow.java:169)
	at ch.securify.analysis.MustExplicitDataflow.<init>(MustExplicitDataflow.java:33)
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:33)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error in Securify
java.lang.RuntimeException
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:37)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error, skipping: /unique_contracts/0x20bd491fee75b6af6c2100c83b83312d620f2958.sol:AdvancedRealityClashWeapon
Processing contract: /unique_contracts/0x20bd491fee75b6af6c2100c83b83312d620f2958.sol:ERC165
Processing contract: /unique_contracts/0x20bd491fee75b6af6c2100c83b83312d620f2958.sol:ERC20Interface
Processing contract: /unique_contracts/0x20bd491fee75b6af6c2100c83b83312d620f2958.sol:ERC721
Processing contract: /unique_contracts/0x20bd491fee75b6af6c2100c83b83312d620f2958.sol:ERC721Basic
Processing contract: /unique_contracts/0x20bd491fee75b6af6c2100c83b83312d620f2958.sol:ERC721BasicToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0x20bd491fee75b6af6c2100c83b83312d620f2958.sol:ERC721Enumerable
Processing contract: /unique_contracts/0x20bd491fee75b6af6c2100c83b83312d620f2958.sol:ERC721Metadata
Processing contract: /unique_contracts/0x20bd491fee75b6af6c2100c83b83312d620f2958.sol:ERC721Receiver
Processing contract: /unique_contracts/0x20bd491fee75b6af6c2100c83b83312d620f2958.sol:ERC721Token
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0x20bd491fee75b6af6c2100c83b83312d620f2958.sol:Operators
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0x20bd491fee75b6af6c2100c83b83312d620f2958.sol:Ownership
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0x20bd491fee75b6af6c2100c83b83312d620f2958.sol:Pausable
Processing contract: /unique_contracts/0x20bd491fee75b6af6c2100c83b83312d620f2958.sol:RealityClashWeapon
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
java.io.IOException: Timeout for /tmp/binaries_souffle3547342745021725225/mustExplicit -j 1 -F /tmp/souffle-ea612fef-cc3b-43cf-b5aa-21e1f98bafa0 -D /tmp/souffle-ea612fef-cc3b-43cf-b5aa-21e1f98bafa0_OUT
	at ch.securify.analysis.AbstractDataflow.runCommand(AbstractDataflow.java:277)
	at ch.securify.analysis.AbstractDataflow.initDataflow(AbstractDataflow.java:169)
	at ch.securify.analysis.MustExplicitDataflow.<init>(MustExplicitDataflow.java:33)
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:33)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error in Securify
java.lang.RuntimeException
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:37)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error, skipping: /unique_contracts/0x20bd491fee75b6af6c2100c83b83312d620f2958.sol:RealityClashWeapon
Processing contract: /unique_contracts/0x20bd491fee75b6af6c2100c83b83312d620f2958.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0x20bd491fee75b6af6c2100c83b83312d620f2958.sol:SupportsInterfaceWithLookup
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for LockedEther in contract 'ERC721Token':
    | * @dev see https://github.com/ethereum/EIPs/blob/master/EIPS/eip-721.md
    | */
  > |contract ERC721Token is SupportsInterfaceWithLookup, ERC721BasicToken, ERC721 {
    |
    |  bytes4 private constant InterfaceId_ERC721Enumerable = 0x780e9d63;
  at /unique_contracts/0x20bd491fee75b6af6c2100c83b83312d620f2958.sol(673)

[33mWarning[0m for UnrestrictedWrite in contract 'ERC721Token':
    | * @dev see https://github.com/ethereum/EIPs/blob/master/EIPS/eip-721.md
    | */
  > |contract ERC721Token is SupportsInterfaceWithLookup, ERC721BasicToken, ERC721 {
    |
    |  bytes4 private constant InterfaceId_ERC721Enumerable = 0x780e9d63;
  at /unique_contracts/0x20bd491fee75b6af6c2100c83b83312d620f2958.sol(673)

[31mViolation[0m for LockedEther in contract 'Operators':
    | * @dev Operators can perform different actions based on their level.
    | */
  > |contract Operators is Ownership {
    |  // state variable
    |  address[] private operators;
  at /unique_contracts/0x20bd491fee75b6af6c2100c83b83312d620f2958.sol(908)

[31mViolation[0m for UnrestrictedWrite in contract 'Operators':
    | * @dev Operators can perform different actions based on their level.
    | */
  > |contract Operators is Ownership {
    |  // state variable
    |  address[] private operators;
  at /unique_contracts/0x20bd491fee75b6af6c2100c83b83312d620f2958.sol(908)

[33mWarning[0m for UnrestrictedWrite in contract 'Operators':
    |pragma solidity 0.5.1;
    |
  > |// RCC Tokenization Contract
    |
    |/**
  at /unique_contracts/0x20bd491fee75b6af6c2100c83b83312d620f2958.sol(3)

[33mWarning[0m for UnrestrictedWrite in contract 'Operators':
    |  function pause() public onlyPauser {
    |    require(!_paused);
  > |    _paused = true;
    |    emit Paused(msg.sender);
    |  }
  at /unique_contracts/0x20bd491fee75b6af6c2100c83b83312d620f2958.sol(220)

[33mWarning[0m for UnrestrictedWrite in contract 'Operators':
    |  function unpause() public onlyPauser {
    |    require(_paused);
  > |    _paused = false;
    |    emit Unpaused(msg.sender);
    |  }
  at /unique_contracts/0x20bd491fee75b6af6c2100c83b83312d620f2958.sol(229)

[33mWarning[0m for UnrestrictedWrite in contract 'Operators':
    |    whenNotPaused
    |  {
  > |    owner = _newOwner;
    |    emit OwnershipUpdated(msg.sender, owner);
    |  }
  at /unique_contracts/0x20bd491fee75b6af6c2100c83b83312d620f2958.sol(897)

[33mWarning[0m for UnrestrictedWrite in contract 'Operators':
    | * @dev Operators can perform different actions based on their level.
    | */
  > |contract Operators is Ownership {
    |  // state variable
    |  address[] private operators;
  at /unique_contracts/0x20bd491fee75b6af6c2100c83b83312d620f2958.sol(908)

[33mWarning[0m for UnrestrictedWrite in contract 'Operators':
    |  {
    |    require (operatorLevel[_newOperator] == 0); // use change level instead
  > |    operatorLevel[_newOperator] = _level;
    |    operators.push(_newOperator);
    |    emit OperatorAdded(_newOperator, _level);
  at /unique_contracts/0x20bd491fee75b6af6c2100c83b83312d620f2958.sol(948)

[33mWarning[0m for UnrestrictedWrite in contract 'Operators':
    |    require (operatorLevel[_newOperator] == 0); // use change level instead
    |    operatorLevel[_newOperator] = _level;
  > |    operators.push(_newOperator);
    |    emit OperatorAdded(_newOperator, _level);
    |    return true;
  at /unique_contracts/0x20bd491fee75b6af6c2100c83b83312d620f2958.sol(949)

[33mWarning[0m for UnrestrictedWrite in contract 'Operators':
    |  {
    |    require (operatorLevel[_operator] != 0); // use add Operator
  > |    operatorLevel[_operator] = _level;
    |    emit OperatorUpdated(_operator, _level);
    |    return true;
  at /unique_contracts/0x20bd491fee75b6af6c2100c83b83312d620f2958.sol(962)

[33mWarning[0m for UnrestrictedWrite in contract 'Operators':
    |  {
    |    index = index - 1;
  > |    operatorLevel[operators[index]] = 0;
    |    operators[index] = operators[operators.length - 1];
    |    operators.length -- ;
  at /unique_contracts/0x20bd491fee75b6af6c2100c83b83312d620f2958.sol(974)

[33mWarning[0m for UnrestrictedWrite in contract 'Operators':
    |    index = index - 1;
    |    operatorLevel[operators[index]] = 0;
  > |    operators[index] = operators[operators.length - 1];
    |    operators.length -- ;
    |    return true;
  at /unique_contracts/0x20bd491fee75b6af6c2100c83b83312d620f2958.sol(975)

[31mViolation[0m for MissingInputValidation in contract 'Ownership':
    |  }
    |
  > |  function updateOwner(address _newOwner)
    |    public
    |    onlyOwner
  at /unique_contracts/0x20bd491fee75b6af6c2100c83b83312d620f2958.sol(892)

[33mWarning[0m for UnrestrictedWrite in contract 'Ownership':
    |  function pause() public onlyPauser {
    |    require(!_paused);
  > |    _paused = true;
    |    emit Paused(msg.sender);
    |  }
  at /unique_contracts/0x20bd491fee75b6af6c2100c83b83312d620f2958.sol(220)

[33mWarning[0m for UnrestrictedWrite in contract 'Ownership':
    |  function unpause() public onlyPauser {
    |    require(_paused);
  > |    _paused = false;
    |    emit Unpaused(msg.sender);
    |  }
  at /unique_contracts/0x20bd491fee75b6af6c2100c83b83312d620f2958.sol(229)

[33mWarning[0m for UnrestrictedWrite in contract 'Ownership':
    |    whenNotPaused
    |  {
  > |    owner = _newOwner;
    |    emit OwnershipUpdated(msg.sender, owner);
    |  }
  at /unique_contracts/0x20bd491fee75b6af6c2100c83b83312d620f2958.sol(897)

[31mViolation[0m for MissingInputValidation in contract 'SupportsInterfaceWithLookup':
    |   * @dev implement supportsInterface(bytes4) using a lookup table
    |   */
  > |  function supportsInterface(bytes4 _interfaceId)
    |    external
    |    view
  at /unique_contracts/0x20bd491fee75b6af6c2100c83b83312d620f2958.sol(155)