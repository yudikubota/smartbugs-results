Processing contract: /unique_chucks/5/0x61b2d3ea9f1c6b387c985c73d40e8fbfb284e5c7.sol:ERC20_Interface
Processing contract: /unique_chucks/5/0x61b2d3ea9f1c6b387c985c73d40e8fbfb284e5c7.sol:Ownable
Processing contract: /unique_chucks/5/0x61b2d3ea9f1c6b387c985c73d40e8fbfb284e5c7.sol:RC20
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/5/0x61b2d3ea9f1c6b387c985c73d40e8fbfb284e5c7.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for LockedEther in contract 'RC20':
    |
    |
  > |contract RC20 is ERC20_Interface, Ownable {
    |    
    |    using SafeMath for uint256;
  at /unique_chucks/5/0x61b2d3ea9f1c6b387c985c73d40e8fbfb284e5c7.sol(130)

[33mWarning[0m for UnrestrictedWrite in contract 'RC20':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_chucks/5/0x61b2d3ea9f1c6b387c985c73d40e8fbfb284e5c7.sol(40)

[33mWarning[0m for UnrestrictedWrite in contract 'RC20':
    |     */
    |    function burn(uint256 value) public onlyOwner {
  > |        _totalSupply = _totalSupply.sub(value);
    |        _balances[msg.sender] = _balances[msg.sender].sub(value);
    |        emit Transfer(msg.sender, address(0), value);
  at /unique_chucks/5/0x61b2d3ea9f1c6b387c985c73d40e8fbfb284e5c7.sol(288)