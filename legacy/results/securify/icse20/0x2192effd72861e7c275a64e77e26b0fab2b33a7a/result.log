Processing contract: /unique_contracts/0x2192effd72861e7c275a64e77e26b0fab2b33a7a.sol:ERC20
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0x2192effd72861e7c275a64e77e26b0fab2b33a7a.sol:ERC20Detailed
Processing contract: /unique_contracts/0x2192effd72861e7c275a64e77e26b0fab2b33a7a.sol:IERC20
Processing contract: /unique_contracts/0x2192effd72861e7c275a64e77e26b0fab2b33a7a.sol:InterdaxToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0x2192effd72861e7c275a64e77e26b0fab2b33a7a.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for LockedEther in contract 'InterdaxToken':
    | * @dev Standard ERC20 Token where all tokens are allocated to the issuer.
    | */
  > |contract InterdaxToken is ERC20, ERC20Detailed {
    |    // Token name
    |    string public constant NAME = "Interdax Token";
  at /unique_contracts/0x2192effd72861e7c275a64e77e26b0fab2b33a7a.sol(347)