Processing contract: /unique_chucks/37/0x7d527e289b5de565d96bdae2f8738eafab5964e8.sol:Payment
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for MissingInputValidation in contract 'Payment':
    |    event Paid(string indexed invoiceId);
    |
  > |    function makePayment(
    |        uint amount,
    |        address payable payee,
  at /unique_chucks/37/0x7d527e289b5de565d96bdae2f8738eafab5964e8.sol(7)

[31mViolation[0m for RepeatedCall in contract 'Payment':
    |        require(msg.value == amount + fee, "Value of the payment is incorrect");
    |        payee.transfer(amount);
  > |        provider.transfer(fee);
    |        emit Paid(invoiceId);
    |    }
  at /unique_chucks/37/0x7d527e289b5de565d96bdae2f8738eafab5964e8.sol(17)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'Payment':
    |        public payable returns(bool) {
    |        require(msg.value == amount + fee, "Value of the payment is incorrect");
  > |        payee.transfer(amount);
    |        provider.transfer(fee);
    |        emit Paid(invoiceId);
  at /unique_chucks/37/0x7d527e289b5de565d96bdae2f8738eafab5964e8.sol(16)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'Payment':
    |        require(msg.value == amount + fee, "Value of the payment is incorrect");
    |        payee.transfer(amount);
  > |        provider.transfer(fee);
    |        emit Paid(invoiceId);
    |    }
  at /unique_chucks/37/0x7d527e289b5de565d96bdae2f8738eafab5964e8.sol(17)