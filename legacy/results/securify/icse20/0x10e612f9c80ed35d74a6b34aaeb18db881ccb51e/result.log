Processing contract: /unique_chucks/8/0x10e612f9c80ed35d74a6b34aaeb18db881ccb51e.sol:EthMadness
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/8/0x10e612f9c80ed35d74a6b34aaeb18db881ccb51e.sol:IERC20
Processing contract: /unique_chucks/8/0x10e612f9c80ed35d74a6b34aaeb18db881ccb51e.sol:Ownable
[31mViolation[0m for LockedEther in contract 'EthMadness':
    |}
    |
  > |contract EthMadness is Ownable {
    |    
    |    // Represents the submission to the contest.
  at /unique_chucks/8/0x10e612f9c80ed35d74a6b34aaeb18db881ccb51e.sol(97)

[31mViolation[0m for RepeatedCall in contract 'EthMadness':
    |        erc20.transfer(topThree[0].submitter, firstPrize);
    |        erc20.transfer(topThree[1].submitter, secondPrize);
  > |        erc20.transfer(topThree[2].submitter, thirdPrize);
    |    }
    |    
  at /unique_chucks/8/0x10e612f9c80ed35d74a6b34aaeb18db881ccb51e.sol(371)

[31mViolation[0m for UnrestrictedWrite in contract 'EthMadness':
    |        require(now > transitionTimes[uint(nextState)], "Transition time hasn't happened yet");
    |        
  > |        currentState = nextState;
    |    }
    |
  at /unique_chucks/8/0x10e612f9c80ed35d74a6b34aaeb18db881ccb51e.sol(253)

[31mViolation[0m for UnrestrictedWrite in contract 'EthMadness':
    |        emit EntrySubmitted(msg.sender, entryCompressed, entryCount, bracketName);
    |        Entrant memory entrant = Entrant(msg.sender, entryCount);
  > |        entries[entryCompressed] = entrant;
    |        entryCount++;
    |    }
  at /unique_chucks/8/0x10e612f9c80ed35d74a6b34aaeb18db881ccb51e.sol(285)

[31mViolation[0m for UnrestrictedWrite in contract 'EthMadness':
    |        Entrant memory entrant = Entrant(msg.sender, entryCount);
    |        entries[entryCompressed] = entrant;
  > |        entryCount++;
    |    }
    |
  at /unique_chucks/8/0x10e612f9c80ed35d74a6b34aaeb18db881ccb51e.sol(286)

[31mViolation[0m for UnrestrictedWrite in contract 'EthMadness':
    |        // Change the state and set our final result which will be used to compute scores
    |        advanceState(ContestState.WAITING_FOR_WINNING_CLAIMS);
  > |        finalResult = Result(winners, scoreA, scoreB, true);
    |    }
    |    
  at /unique_chucks/8/0x10e612f9c80ed35d74a6b34aaeb18db881ccb51e.sol(338)

[33mWarning[0m for UnrestrictedWrite in contract 'EthMadness':
    |        TopScore memory scoreResult = TopScore(entries[entryCompressed].entryIndex, score, difference, entries[entryCompressed].submitter);
    |        if (isScoreBetter(scoreResult, topThree[0])) {
  > |            topThree[2] = topThree[1];
    |            topThree[1] = topThree[0];
    |            topThree[0] = scoreResult;
  at /unique_chucks/8/0x10e612f9c80ed35d74a6b34aaeb18db881ccb51e.sol(393)

[33mWarning[0m for UnrestrictedWrite in contract 'EthMadness':
    |        if (isScoreBetter(scoreResult, topThree[0])) {
    |            topThree[2] = topThree[1];
  > |            topThree[1] = topThree[0];
    |            topThree[0] = scoreResult;
    |        } else if (isScoreBetter(scoreResult, topThree[1])) {
  at /unique_chucks/8/0x10e612f9c80ed35d74a6b34aaeb18db881ccb51e.sol(394)

[33mWarning[0m for UnrestrictedWrite in contract 'EthMadness':
    |            topThree[2] = topThree[1];
    |            topThree[1] = topThree[0];
  > |            topThree[0] = scoreResult;
    |        } else if (isScoreBetter(scoreResult, topThree[1])) {
    |            topThree[2] = topThree[1];
  at /unique_chucks/8/0x10e612f9c80ed35d74a6b34aaeb18db881ccb51e.sol(395)

[33mWarning[0m for UnrestrictedWrite in contract 'EthMadness':
    |            topThree[0] = scoreResult;
    |        } else if (isScoreBetter(scoreResult, topThree[1])) {
  > |            topThree[2] = topThree[1];
    |            topThree[1] = scoreResult;
    |        } else if (isScoreBetter(scoreResult, topThree[2])) {
  at /unique_chucks/8/0x10e612f9c80ed35d74a6b34aaeb18db881ccb51e.sol(397)

[33mWarning[0m for UnrestrictedWrite in contract 'EthMadness':
    |        } else if (isScoreBetter(scoreResult, topThree[1])) {
    |            topThree[2] = topThree[1];
  > |            topThree[1] = scoreResult;
    |        } else if (isScoreBetter(scoreResult, topThree[2])) {
    |            topThree[2] = scoreResult;
  at /unique_chucks/8/0x10e612f9c80ed35d74a6b34aaeb18db881ccb51e.sol(398)

[33mWarning[0m for UnrestrictedWrite in contract 'EthMadness':
    |            topThree[1] = scoreResult;
    |        } else if (isScoreBetter(scoreResult, topThree[2])) {
  > |            topThree[2] = scoreResult;
    |        }
    |        
  at /unique_chucks/8/0x10e612f9c80ed35d74a6b34aaeb18db881ccb51e.sol(400)

[33mWarning[0m for UnrestrictedWrite in contract 'EthMadness':
    |
    |/**
  > | * @title ERC20 interface
    | * @dev see https://eips.ethereum.org/EIPS/eip-20
    | */
  at /unique_chucks/8/0x10e612f9c80ed35d74a6b34aaeb18db881ccb51e.sol(4)

[33mWarning[0m for UnrestrictedWrite in contract 'EthMadness':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipTransferred(_owner, address(0));
  > |        _owner = address(0);
    |    }
    |
  at /unique_chucks/8/0x10e612f9c80ed35d74a6b34aaeb18db881ccb51e.sol(75)

[33mWarning[0m for UnrestrictedWrite in contract 'EthMadness':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_chucks/8/0x10e612f9c80ed35d74a6b34aaeb18db881ccb51e.sol(93)

[33mWarning[0m for UnrestrictedWrite in contract 'EthMadness':
    |        require(currentState == ContestState.OPEN_FOR_ENTRIES, "Must be accepting entries");
    |        require(oracles.length < MAX_ORACLES - 1, "Must be less than max number of oracles");
  > |        oracles.push(oracle);
    |    }
    |
  at /unique_chucks/8/0x10e612f9c80ed35d74a6b34aaeb18db881ccb51e.sol(294)