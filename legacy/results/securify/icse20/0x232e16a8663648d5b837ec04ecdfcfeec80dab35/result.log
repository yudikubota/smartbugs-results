Processing contract: /unique_chucks/47/0x232e16a8663648d5b837ec04ecdfcfeec80dab35.sol:BasicToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/47/0x232e16a8663648d5b837ec04ecdfcfeec80dab35.sol:BurnableToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/47/0x232e16a8663648d5b837ec04ecdfcfeec80dab35.sol:ERC20
Processing contract: /unique_chucks/47/0x232e16a8663648d5b837ec04ecdfcfeec80dab35.sol:ERC20Basic
Processing contract: /unique_chucks/47/0x232e16a8663648d5b837ec04ecdfcfeec80dab35.sol:Ownable
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/47/0x232e16a8663648d5b837ec04ecdfcfeec80dab35.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/47/0x232e16a8663648d5b837ec04ecdfcfeec80dab35.sol:StandardToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/47/0x232e16a8663648d5b837ec04ecdfcfeec80dab35.sol:XMD
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[33mWarning[0m for UnrestrictedWrite in contract 'BasicToken':
    |    // SafeMath.sub will throw if there is not enough balance.
    |    balances[msg.sender] = balances[msg.sender].sub(_value);
  > |    balances[_to] = balances[_to].add(_value);
    |    emit Transfer(msg.sender, _to, _value);
    |    return true;
  at /unique_chucks/47/0x232e16a8663648d5b837ec04ecdfcfeec80dab35.sol(107)

[33mWarning[0m for UnrestrictedWrite in contract 'Ownable':
    |    require(newOwner != address(0));
    |    emit OwnershipTransferred(owner, newOwner);
  > |    owner = newOwner;
    |  }
    |}
  at /unique_chucks/47/0x232e16a8663648d5b837ec04ecdfcfeec80dab35.sol(71)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |    // SafeMath.sub will throw if there is not enough balance.
    |    balances[msg.sender] = balances[msg.sender].sub(_value);
  > |    balances[_to] = balances[_to].add(_value);
    |    emit Transfer(msg.sender, _to, _value);
    |    return true;
  at /unique_chucks/47/0x232e16a8663648d5b837ec04ecdfcfeec80dab35.sol(107)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |    // require (_value <= _allowance);
    |
  > |    balances[_from] = balances[_from].sub(_value);
    |    balances[_to] = balances[_to].add(_value);
    |    allowed[_from][msg.sender] = _allowance.sub(_value);
  at /unique_chucks/47/0x232e16a8663648d5b837ec04ecdfcfeec80dab35.sol(160)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |
    |    balances[_from] = balances[_from].sub(_value);
  > |    balances[_to] = balances[_to].add(_value);
    |    allowed[_from][msg.sender] = _allowance.sub(_value);
    |    emit Transfer(_from, _to, _value);
  at /unique_chucks/47/0x232e16a8663648d5b837ec04ecdfcfeec80dab35.sol(161)

[31mViolation[0m for LockedEther in contract 'XMD':
    |}
    |
  > |contract XMD is BurnableToken, Ownable {
    |
    |    string public constant name = "Mydexpay token";
  at /unique_chucks/47/0x232e16a8663648d5b837ec04ecdfcfeec80dab35.sol(246)

[33mWarning[0m for UnrestrictedWrite in contract 'XMD':
    |    require(newOwner != address(0));
    |    emit OwnershipTransferred(owner, newOwner);
  > |    owner = newOwner;
    |  }
    |}
  at /unique_chucks/47/0x232e16a8663648d5b837ec04ecdfcfeec80dab35.sol(71)