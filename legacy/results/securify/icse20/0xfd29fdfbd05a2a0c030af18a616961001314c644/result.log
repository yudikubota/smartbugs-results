Processing contract: /unique_chucks/17/0xfd29fdfbd05a2a0c030af18a616961001314c644.sol:IERC20
Processing contract: /unique_chucks/17/0xfd29fdfbd05a2a0c030af18a616961001314c644.sol:Multisend
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/17/0xfd29fdfbd05a2a0c030af18a616961001314c644.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[33mWarning[0m for DAOConstantGas in contract 'Multisend':
    |        total_ether_amount = total_ether_amount.add(amounts[i]);
    |        balances[msg.sender][address(0)] = balances[msg.sender][address(0)].sub(amounts[i]);
  > |        recipients[i].transfer(amounts[i]);
    |      }
    |    }
  at /unique_chucks/17/0xfd29fdfbd05a2a0c030af18a616961001314c644.sol(148)

[31mViolation[0m for RepeatedCall in contract 'Multisend':
    |      require(whitelist[tokenDepositAddress[i]] == true, "token not whitelisted");
    |      uint256 tokenFee = tokenDepositAmount[i].div(10000).mul(_fee);
  > |      IERC20(tokenDepositAddress[i]).transferFrom(msg.sender, address(this), tokenDepositAmount[i]);
    |      balances[msg.sender][tokenDepositAddress[i]] = balances[msg.sender][tokenDepositAddress[i]].add(tokenDepositAmount[i].sub(tokenFee));
    |      balances[address(this)][tokenDepositAddress[i]] = balances[address(this)][tokenDepositAddress[i]].add(tokenFee);
  at /unique_chucks/17/0xfd29fdfbd05a2a0c030af18a616961001314c644.sol(123)

[31mViolation[0m for RepeatedCall in contract 'Multisend':
    |      if(tokens[i] != address(0)) {
    |        balances[msg.sender][tokens[i]] = balances[msg.sender][tokens[i]].sub(amounts[i]);
  > |        IERC20(tokens[i]).transfer(recipients[i], amounts[i]);
    |      }
    |      else {
  at /unique_chucks/17/0xfd29fdfbd05a2a0c030af18a616961001314c644.sol(143)

[31mViolation[0m for RepeatedCall in contract 'Multisend':
    |        total_ether_amount = total_ether_amount.add(amounts[i]);
    |        balances[msg.sender][address(0)] = balances[msg.sender][address(0)].sub(amounts[i]);
  > |        recipients[i].transfer(amounts[i]);
    |      }
    |    }
  at /unique_chucks/17/0xfd29fdfbd05a2a0c030af18a616961001314c644.sol(148)

[31mViolation[0m for RepeatedCall in contract 'Multisend':
    |      balances[msg.sender][tokenAddresses[i]] = 0;
    |      IERC20 ERC20 = IERC20(tokenAddresses[i]);
  > |      ERC20.transfer(msg.sender, balance);
    |    }
    |  }
  at /unique_chucks/17/0xfd29fdfbd05a2a0c030af18a616961001314c644.sol(170)

[31mViolation[0m for RepeatedCall in contract 'Multisend':
    |      balances[address(this)][tokenAddresses[i]] = 0;
    |      IERC20 ERC20 = IERC20(tokenAddresses[i]);
  > |      ERC20.transfer(_owner, balance);
    |    }
    |  }
  at /unique_chucks/17/0xfd29fdfbd05a2a0c030af18a616961001314c644.sol(211)

[33mWarning[0m for TODAmount in contract 'Multisend':
    |        total_ether_amount = total_ether_amount.add(amounts[i]);
    |        balances[msg.sender][address(0)] = balances[msg.sender][address(0)].sub(amounts[i]);
  > |        recipients[i].transfer(amounts[i]);
    |      }
    |    }
  at /unique_chucks/17/0xfd29fdfbd05a2a0c030af18a616961001314c644.sol(148)

[33mWarning[0m for TODAmount in contract 'Multisend':
    |    uint balance = balances[msg.sender][address(0)];
    |    balances[msg.sender][address(0)] = 0;
  > |    msg.sender.transfer(balance);
    |  }
    |
  at /unique_chucks/17/0xfd29fdfbd05a2a0c030af18a616961001314c644.sol(178)

[33mWarning[0m for TODAmount in contract 'Multisend':
    |    uint balance = balances[address(this)][address(0)];
    |    balances[address(this)][address(0)] = 0;
  > |    _owner.transfer(balance);
    |  }
    |
  at /unique_chucks/17/0xfd29fdfbd05a2a0c030af18a616961001314c644.sol(219)

[31mViolation[0m for TODReceiver in contract 'Multisend':
    |    uint balance = balances[address(this)][address(0)];
    |    balances[address(this)][address(0)] = 0;
  > |    _owner.transfer(balance);
    |  }
    |
  at /unique_chucks/17/0xfd29fdfbd05a2a0c030af18a616961001314c644.sol(219)

[33mWarning[0m for TODReceiver in contract 'Multisend':
    |        total_ether_amount = total_ether_amount.add(amounts[i]);
    |        balances[msg.sender][address(0)] = balances[msg.sender][address(0)].sub(amounts[i]);
  > |        recipients[i].transfer(amounts[i]);
    |      }
    |    }
  at /unique_chucks/17/0xfd29fdfbd05a2a0c030af18a616961001314c644.sol(148)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'Multisend':
    |        total_ether_amount = total_ether_amount.add(amounts[i]);
    |        balances[msg.sender][address(0)] = balances[msg.sender][address(0)].sub(amounts[i]);
  > |        recipients[i].transfer(amounts[i]);
    |      }
    |    }
  at /unique_chucks/17/0xfd29fdfbd05a2a0c030af18a616961001314c644.sol(148)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'Multisend':
    |    uint balance = balances[msg.sender][address(0)];
    |    balances[msg.sender][address(0)] = 0;
  > |    msg.sender.transfer(balance);
    |  }
    |
  at /unique_chucks/17/0xfd29fdfbd05a2a0c030af18a616961001314c644.sol(178)

[33mWarning[0m for UnrestrictedWrite in contract 'Multisend':
    |      uint256 etherFee = msg.value.div(10000).mul(_fee); //calculate fee
    |      balances[msg.sender][address(0)] = balances[msg.sender][address(0)].add(msg.value.sub(etherFee));
  > |      balances[address(this)][address(0)] = balances[address(this)][address(0)].add(etherFee);
    |    }
    |    for (uint i=0;i<tokenDepositAddress.length;i++) {
  at /unique_chucks/17/0xfd29fdfbd05a2a0c030af18a616961001314c644.sol(118)

[33mWarning[0m for UnrestrictedWrite in contract 'Multisend':
    |      IERC20(tokenDepositAddress[i]).transferFrom(msg.sender, address(this), tokenDepositAmount[i]);
    |      balances[msg.sender][tokenDepositAddress[i]] = balances[msg.sender][tokenDepositAddress[i]].add(tokenDepositAmount[i].sub(tokenFee));
  > |      balances[address(this)][tokenDepositAddress[i]] = balances[address(this)][tokenDepositAddress[i]].add(tokenFee);
    |    }
    |  }
  at /unique_chucks/17/0xfd29fdfbd05a2a0c030af18a616961001314c644.sol(125)

[33mWarning[0m for UnrestrictedWrite in contract 'Multisend':
    |    for(uint i=0; i<tokenAddresses.length;i++) {
    |      uint balance = balances[address(this)][tokenAddresses[i]];
  > |      balances[address(this)][tokenAddresses[i]] = 0;
    |      IERC20 ERC20 = IERC20(tokenAddresses[i]);
    |      ERC20.transfer(_owner, balance);
  at /unique_chucks/17/0xfd29fdfbd05a2a0c030af18a616961001314c644.sol(209)