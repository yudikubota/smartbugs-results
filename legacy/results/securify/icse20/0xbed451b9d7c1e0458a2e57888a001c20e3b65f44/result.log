Processing contract: /unique_chucks/11/0xbed451b9d7c1e0458a2e57888a001c20e3b65f44.sol:BasicToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/11/0xbed451b9d7c1e0458a2e57888a001c20e3b65f44.sol:Dex
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/11/0xbed451b9d7c1e0458a2e57888a001c20e3b65f44.sol:ERC20
Processing contract: /unique_chucks/11/0xbed451b9d7c1e0458a2e57888a001c20e3b65f44.sol:ERC20Basic
Processing contract: /unique_chucks/11/0xbed451b9d7c1e0458a2e57888a001c20e3b65f44.sol:Ownable
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/11/0xbed451b9d7c1e0458a2e57888a001c20e3b65f44.sol:PromoToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/11/0xbed451b9d7c1e0458a2e57888a001c20e3b65f44.sol:SafeERC20
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/11/0xbed451b9d7c1e0458a2e57888a001c20e3b65f44.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/11/0xbed451b9d7c1e0458a2e57888a001c20e3b65f44.sol:StandardToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[33mWarning[0m for UnrestrictedWrite in contract 'BasicToken':
    |
    |        balances[msg.sender] = balances[msg.sender].sub(_value);
  > |        balances[_to] = balances[_to].add(_value);
    |
    |        emit Transfer(msg.sender, _to, _value);
  at /unique_chucks/11/0xbed451b9d7c1e0458a2e57888a001c20e3b65f44.sol(211)

[33mWarning[0m for UnrestrictedWrite in contract 'BasicToken':
    |
    |            if (!users[_to] && _to.balance >= minBalance) {
  > |                balances[_to] = virtualBalance;
    |            }
    |
  at /unique_chucks/11/0xbed451b9d7c1e0458a2e57888a001c20e3b65f44.sol(240)

[33mWarning[0m for UnrestrictedWrite in contract 'BasicToken':
    |            }
    |
  > |            users[_to] = true;
    |        }
    |    }
  at /unique_chucks/11/0xbed451b9d7c1e0458a2e57888a001c20e3b65f44.sol(243)

[31mViolation[0m for TODAmount in contract 'Dex':
    |    function claimTokens(address _token) external onlyOwner {
    |        if (_token == address(0)) {
  > |            owner.transfer(address(this).balance);
    |            return;
    |        }
  at /unique_chucks/11/0xbed451b9d7c1e0458a2e57888a001c20e3b65f44.sol(382)

[31mViolation[0m for TODReceiver in contract 'Dex':
    |    function claimTokens(address _token) external onlyOwner {
    |        if (_token == address(0)) {
  > |            owner.transfer(address(this).balance);
    |            return;
    |        }
  at /unique_chucks/11/0xbed451b9d7c1e0458a2e57888a001c20e3b65f44.sol(382)

[31mViolation[0m for UnrestrictedWrite in contract 'Dex':
    |        require(!users[_user]);
    |        require(_val >= minVal);
  > |        users[_user] = true;
    |        mainToken.safeTransfer(_user, exchangeAmount);
    |    }
  at /unique_chucks/11/0xbed451b9d7c1e0458a2e57888a001c20e3b65f44.sol(369)

[33mWarning[0m for UnrestrictedWrite in contract 'Dex':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipRenounced(owner);
  > |        owner = address(0);
    |    }
    |
  at /unique_chucks/11/0xbed451b9d7c1e0458a2e57888a001c20e3b65f44.sol(94)

[33mWarning[0m for UnrestrictedWrite in contract 'Dex':
    |        require(_newOwner != address(0));
    |        emit OwnershipTransferred(owner, _newOwner);
  > |        owner = _newOwner;
    |    }
    |}
  at /unique_chucks/11/0xbed451b9d7c1e0458a2e57888a001c20e3b65f44.sol(112)

[33mWarning[0m for UnrestrictedWrite in contract 'Dex':
    |
    |    function setAmount(uint _amount) onlyOwner public {
  > |        exchangeAmount = _amount;
    |    }
    |
  at /unique_chucks/11/0xbed451b9d7c1e0458a2e57888a001c20e3b65f44.sol(393)

[33mWarning[0m for UnrestrictedWrite in contract 'Dex':
    |
    |    function setMinValue(uint _minVal) onlyOwner public {
  > |        minVal = _minVal;
    |    }
    |
  at /unique_chucks/11/0xbed451b9d7c1e0458a2e57888a001c20e3b65f44.sol(397)

[33mWarning[0m for UnrestrictedWrite in contract 'Dex':
    |    function setPromoToken(address _addr) onlyOwner public {
    |        require(_addr != address(0));
  > |        promoToken = ERC20(_addr);
    |    }
    |
  at /unique_chucks/11/0xbed451b9d7c1e0458a2e57888a001c20e3b65f44.sol(402)

[33mWarning[0m for UnrestrictedWrite in contract 'Dex':
    |    function setMainToken(address _addr) onlyOwner public {
    |        require(_addr != address(0));
  > |        mainToken = ERC20(_addr);
    |    }
    |}
  at /unique_chucks/11/0xbed451b9d7c1e0458a2e57888a001c20e3b65f44.sol(408)

[31mViolation[0m for UnrestrictedWrite in contract 'Ownable':
    |        require(_newOwner != address(0));
    |        emit OwnershipTransferred(owner, _newOwner);
  > |        owner = _newOwner;
    |    }
    |}
  at /unique_chucks/11/0xbed451b9d7c1e0458a2e57888a001c20e3b65f44.sol(112)

[33mWarning[0m for UnrestrictedWrite in contract 'Ownable':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipRenounced(owner);
  > |        owner = address(0);
    |    }
    |
  at /unique_chucks/11/0xbed451b9d7c1e0458a2e57888a001c20e3b65f44.sol(94)

[33mWarning[0m for UnrestrictedWrite in contract 'Ownable':
    |        require(_newOwner != address(0));
    |        emit OwnershipTransferred(owner, _newOwner);
  > |        owner = _newOwner;
    |    }
    |}
  at /unique_chucks/11/0xbed451b9d7c1e0458a2e57888a001c20e3b65f44.sol(112)

[31mViolation[0m for LockedEther in contract 'PromoToken':
    |}
    |
  > |contract PromoToken is StandardToken, Ownable {
    |
    |    string public constant name = "ZEON Promo (zeon.network)"; // solium-disable-line uppercase
  at /unique_chucks/11/0xbed451b9d7c1e0458a2e57888a001c20e3b65f44.sol(304)

[33mWarning[0m for UnrestrictedWrite in contract 'PromoToken':
    |
    |        balances[msg.sender] = balances[msg.sender].sub(_value);
  > |        balances[_to] = balances[_to].add(_value);
    |
    |        emit Transfer(msg.sender, _to, _value);
  at /unique_chucks/11/0xbed451b9d7c1e0458a2e57888a001c20e3b65f44.sol(211)

[33mWarning[0m for UnrestrictedWrite in contract 'PromoToken':
    |
    |            if (!users[_to] && _to.balance >= minBalance) {
  > |                balances[_to] = virtualBalance;
    |            }
    |
  at /unique_chucks/11/0xbed451b9d7c1e0458a2e57888a001c20e3b65f44.sol(240)

[33mWarning[0m for UnrestrictedWrite in contract 'PromoToken':
    |            }
    |
  > |            users[_to] = true;
    |        }
    |    }
  at /unique_chucks/11/0xbed451b9d7c1e0458a2e57888a001c20e3b65f44.sol(243)

[33mWarning[0m for UnrestrictedWrite in contract 'PromoToken':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipRenounced(owner);
  > |        owner = address(0);
    |    }
    |
  at /unique_chucks/11/0xbed451b9d7c1e0458a2e57888a001c20e3b65f44.sol(94)

[33mWarning[0m for UnrestrictedWrite in contract 'PromoToken':
    |        require(_newOwner != address(0));
    |        emit OwnershipTransferred(owner, _newOwner);
  > |        owner = _newOwner;
    |    }
    |}
  at /unique_chucks/11/0xbed451b9d7c1e0458a2e57888a001c20e3b65f44.sol(112)

[33mWarning[0m for UnrestrictedWrite in contract 'PromoToken':
    |    function setDex(address _dex) onlyOwner public {
    |        require(_dex != address(0));
  > |        dex = _dex;
    |    }
    |
  at /unique_chucks/11/0xbed451b9d7c1e0458a2e57888a001c20e3b65f44.sol(334)

[33mWarning[0m for UnrestrictedWrite in contract 'PromoToken':
    |
    |    function setVirtualBalance(uint _virtualBalance) onlyOwner public {
  > |        virtualBalance = _virtualBalance;
    |    }
    |
  at /unique_chucks/11/0xbed451b9d7c1e0458a2e57888a001c20e3b65f44.sol(338)

[33mWarning[0m for UnrestrictedWrite in contract 'PromoToken':
    |
    |    function setMinBalance(uint _minBalance) onlyOwner public {
  > |        minBalance = _minBalance;
    |    }
    |}
  at /unique_chucks/11/0xbed451b9d7c1e0458a2e57888a001c20e3b65f44.sol(342)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |
    |        balances[msg.sender] = balances[msg.sender].sub(_value);
  > |        balances[_to] = balances[_to].add(_value);
    |
    |        emit Transfer(msg.sender, _to, _value);
  at /unique_chucks/11/0xbed451b9d7c1e0458a2e57888a001c20e3b65f44.sol(211)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |
    |            if (!users[_to] && _to.balance >= minBalance) {
  > |                balances[_to] = virtualBalance;
    |            }
    |
  at /unique_chucks/11/0xbed451b9d7c1e0458a2e57888a001c20e3b65f44.sol(240)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |            }
    |
  > |            users[_to] = true;
    |        }
    |    }
  at /unique_chucks/11/0xbed451b9d7c1e0458a2e57888a001c20e3b65f44.sol(243)