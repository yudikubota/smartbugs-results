Processing contract: /unique_chucks/12/0x189fdb81e99c9c1a442a7e4b9cf4a389ca7878b7.sol:ERC20
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/12/0x189fdb81e99c9c1a442a7e4b9cf4a389ca7878b7.sol:ERC20Burnable
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/12/0x189fdb81e99c9c1a442a7e4b9cf4a389ca7878b7.sol:ERC20Detailed
Processing contract: /unique_chucks/12/0x189fdb81e99c9c1a442a7e4b9cf4a389ca7878b7.sol:ERC20Mintable
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/12/0x189fdb81e99c9c1a442a7e4b9cf4a389ca7878b7.sol:ERC20Pausable
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/12/0x189fdb81e99c9c1a442a7e4b9cf4a389ca7878b7.sol:IERC20
Processing contract: /unique_chucks/12/0x189fdb81e99c9c1a442a7e4b9cf4a389ca7878b7.sol:MinterRole
Processing contract: /unique_chucks/12/0x189fdb81e99c9c1a442a7e4b9cf4a389ca7878b7.sol:Pausable
Processing contract: /unique_chucks/12/0x189fdb81e99c9c1a442a7e4b9cf4a389ca7878b7.sol:PauserRole
Processing contract: /unique_chucks/12/0x189fdb81e99c9c1a442a7e4b9cf4a389ca7878b7.sol:Roles
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/12/0x189fdb81e99c9c1a442a7e4b9cf4a389ca7878b7.sol:SDR
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/12/0x189fdb81e99c9c1a442a7e4b9cf4a389ca7878b7.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[33mWarning[0m for UnrestrictedWrite in contract 'ERC20Burnable':
    |        require(account != address(0));
    |
  > |        _totalSupply = _totalSupply.sub(value);
    |        _balances[account] = _balances[account].sub(value);
    |        emit Transfer(account, address(0), value);
  at /unique_chucks/12/0x189fdb81e99c9c1a442a7e4b9cf4a389ca7878b7.sol(258)

[33mWarning[0m for UnrestrictedWrite in contract 'ERC20Pausable':
    |     */
    |    function pause() public onlyPauser whenNotPaused {
  > |        _paused = true;
    |        emit Paused(msg.sender);
    |    }
  at /unique_chucks/12/0x189fdb81e99c9c1a442a7e4b9cf4a389ca7878b7.sol(531)

[33mWarning[0m for UnrestrictedWrite in contract 'ERC20Pausable':
    |     */
    |    function unpause() public onlyPauser whenPaused {
  > |        _paused = false;
    |        emit Unpaused(msg.sender);
    |    }
  at /unique_chucks/12/0x189fdb81e99c9c1a442a7e4b9cf4a389ca7878b7.sol(539)

[31mViolation[0m for LockedEther in contract 'SDR':
    |// File: contracts/SDR.sol
    |
  > |contract SDR is ERC20, ERC20Burnable, ERC20Detailed, ERC20Mintable, ERC20Pausable {
    |    
    |    string private _name = "SDR";
  at /unique_chucks/12/0x189fdb81e99c9c1a442a7e4b9cf4a389ca7878b7.sol(574)

[33mWarning[0m for UnrestrictedWrite in contract 'SDR':
    |        require(account != address(0));
    |
  > |        _totalSupply = _totalSupply.add(value);
    |        _balances[account] = _balances[account].add(value);
    |        emit Transfer(address(0), account, value);
  at /unique_chucks/12/0x189fdb81e99c9c1a442a7e4b9cf4a389ca7878b7.sol(244)

[33mWarning[0m for UnrestrictedWrite in contract 'SDR':
    |        require(account != address(0));
    |
  > |        _totalSupply = _totalSupply.sub(value);
    |        _balances[account] = _balances[account].sub(value);
    |        emit Transfer(account, address(0), value);
  at /unique_chucks/12/0x189fdb81e99c9c1a442a7e4b9cf4a389ca7878b7.sol(258)

[33mWarning[0m for UnrestrictedWrite in contract 'SDR':
    |     */
    |    function pause() public onlyPauser whenNotPaused {
  > |        _paused = true;
    |        emit Paused(msg.sender);
    |    }
  at /unique_chucks/12/0x189fdb81e99c9c1a442a7e4b9cf4a389ca7878b7.sol(531)

[33mWarning[0m for UnrestrictedWrite in contract 'SDR':
    |     */
    |    function unpause() public onlyPauser whenPaused {
  > |        _paused = false;
    |        emit Unpaused(msg.sender);
    |    }
  at /unique_chucks/12/0x189fdb81e99c9c1a442a7e4b9cf4a389ca7878b7.sol(539)