Processing contract: /unique_chucks/24/0x2a2247140d1683fbeaefb22cef32d0b1982657bd.sol:ERC20
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/24/0x2a2247140d1683fbeaefb22cef32d0b1982657bd.sol:ERC20Burnable
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/24/0x2a2247140d1683fbeaefb22cef32d0b1982657bd.sol:IERC20
Processing contract: /unique_chucks/24/0x2a2247140d1683fbeaefb22cef32d0b1982657bd.sol:IOldManager
Processing contract: /unique_chucks/24/0x2a2247140d1683fbeaefb22cef32d0b1982657bd.sol:Manager
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/24/0x2a2247140d1683fbeaefb22cef32d0b1982657bd.sol:Owned
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/24/0x2a2247140d1683fbeaefb22cef32d0b1982657bd.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[33mWarning[0m for UnrestrictedWrite in contract 'ERC20Burnable':
    |		require(value <= _balances[account]);
    |
  > |		_totalSupply = _totalSupply.sub(value);
    |		_balances[account] = _balances[account].sub(value);
    |		emit Transfer(account, address(0), value);
  at /unique_chucks/24/0x2a2247140d1683fbeaefb22cef32d0b1982657bd.sol(301)

[31mViolation[0m for RepeatedCall in contract 'Manager':
    |
    |    function _transferTokens(address recipient, uint256 amount) internal {
  > |        uint256 initialBalance = newToken.balanceOf(recipient);
    |        require(newToken.transfer(recipient, amount));
    |        assert(newToken.balanceOf(recipient) == initialBalance + amount);
  at /unique_chucks/24/0x2a2247140d1683fbeaefb22cef32d0b1982657bd.sol(405)

[31mViolation[0m for RepeatedCall in contract 'Manager':
    |        uint256 initialBalance = newToken.balanceOf(recipient);
    |        require(newToken.transfer(recipient, amount));
  > |        assert(newToken.balanceOf(recipient) == initialBalance + amount);
    |    }
    |}
  at /unique_chucks/24/0x2a2247140d1683fbeaefb22cef32d0b1982657bd.sol(407)

[33mWarning[0m for UnrestrictedWrite in contract 'Manager':
    |	{
    |		emit NewPotentialOwner(owner, _new);
  > |		potentialOwner = _new;
    |	}
    |
  at /unique_chucks/24/0x2a2247140d1683fbeaefb22cef32d0b1982657bd.sol(90)

[33mWarning[0m for UnrestrictedWrite in contract 'Manager':
    |	{
    |		emit NewOwner(owner, potentialOwner);
  > |		owner = potentialOwner;
    |		potentialOwner = address(0);
    |	}
  at /unique_chucks/24/0x2a2247140d1683fbeaefb22cef32d0b1982657bd.sol(98)

[33mWarning[0m for UnrestrictedWrite in contract 'Manager':
    |		emit NewOwner(owner, potentialOwner);
    |		owner = potentialOwner;
  > |		potentialOwner = address(0);
    |	}
    |}
  at /unique_chucks/24/0x2a2247140d1683fbeaefb22cef32d0b1982657bd.sol(99)

[33mWarning[0m for UnrestrictedWrite in contract 'Manager':
    |        require(verifiedInvestors[investor] != is_verified);
    |
  > |        verifiedInvestors[investor] = is_verified;
    |        if (is_verified) emit InvestorVerified(investor);
    |        if (!is_verified) emit VerificationRevoked(investor);
  at /unique_chucks/24/0x2a2247140d1683fbeaefb22cef32d0b1982657bd.sol(379)

[31mViolation[0m for MissingInputValidation in contract 'Owned':
    |	event NewPotentialOwner(address old, address potential);
    |
  > |	function setOwner(address _new)
    |		public
    |		onlyOwner
  at /unique_chucks/24/0x2a2247140d1683fbeaefb22cef32d0b1982657bd.sol(85)

[33mWarning[0m for UnrestrictedWrite in contract 'Owned':
    |	{
    |		emit NewPotentialOwner(owner, _new);
  > |		potentialOwner = _new;
    |	}
    |
  at /unique_chucks/24/0x2a2247140d1683fbeaefb22cef32d0b1982657bd.sol(90)

[33mWarning[0m for UnrestrictedWrite in contract 'Owned':
    |	{
    |		emit NewOwner(owner, potentialOwner);
  > |		owner = potentialOwner;
    |		potentialOwner = address(0);
    |	}
  at /unique_chucks/24/0x2a2247140d1683fbeaefb22cef32d0b1982657bd.sol(98)

[33mWarning[0m for UnrestrictedWrite in contract 'Owned':
    |		emit NewOwner(owner, potentialOwner);
    |		owner = potentialOwner;
  > |		potentialOwner = address(0);
    |	}
    |}
  at /unique_chucks/24/0x2a2247140d1683fbeaefb22cef32d0b1982657bd.sol(99)