Processing contract: /unique_chucks/24/0x9cb79101f795287585843d71c1b0a33a0724c2bb.sol:Blacklistable
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/24/0x9cb79101f795287585843d71c1b0a33a0724c2bb.sol:ERC20
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/24/0x9cb79101f795287585843d71c1b0a33a0724c2bb.sol:HERC20
Processing contract: /unique_chucks/24/0x9cb79101f795287585843d71c1b0a33a0724c2bb.sol:LakesCash
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/24/0x9cb79101f795287585843d71c1b0a33a0724c2bb.sol:Ownable
Processing contract: /unique_chucks/24/0x9cb79101f795287585843d71c1b0a33a0724c2bb.sol:Pausable
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/24/0x9cb79101f795287585843d71c1b0a33a0724c2bb.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[33mWarning[0m for UnrestrictedWrite in contract 'Blacklistable':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipTransferred(_owner, address(0));
  > |        _owner = address(0);
    |    }
    |
  at /unique_chucks/24/0x9cb79101f795287585843d71c1b0a33a0724c2bb.sol(367)

[33mWarning[0m for UnrestrictedWrite in contract 'Blacklistable':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_chucks/24/0x9cb79101f795287585843d71c1b0a33a0724c2bb.sol(385)

[33mWarning[0m for UnrestrictedWrite in contract 'Blacklistable':
    |    */
    |    function blacklist(address _account) public onlyBlacklister {
  > |        blacklisted[_account] = true;
    |        emit Blacklisted(_account);
    |    }
  at /unique_chucks/24/0x9cb79101f795287585843d71c1b0a33a0724c2bb.sol(499)

[33mWarning[0m for UnrestrictedWrite in contract 'Blacklistable':
    |    */
    |    function unBlacklist(address _account) public onlyBlacklister {
  > |        blacklisted[_account] = false;
    |        emit UnBlacklisted(_account);
    |    }
  at /unique_chucks/24/0x9cb79101f795287585843d71c1b0a33a0724c2bb.sol(508)

[33mWarning[0m for UnrestrictedWrite in contract 'Blacklistable':
    |    function updateBlacklister(address _newBlacklister) public onlyOwner {
    |        require(_newBlacklister != address(0));
  > |        blacklister = _newBlacklister;
    |        emit BlacklisterChanged(blacklister);
    |    }
  at /unique_chucks/24/0x9cb79101f795287585843d71c1b0a33a0724c2bb.sol(514)

[31mViolation[0m for LockedEther in contract 'LakesCash':
    |}
    |
  > |contract LakesCash is Ownable, ERC20, Pausable, Blacklistable {
    |    using SafeMath for uint256;
    |
  at /unique_chucks/24/0x9cb79101f795287585843d71c1b0a33a0724c2bb.sol(519)

[31mViolation[0m for UnrestrictedWrite in contract 'LakesCash':
    |}
    |
  > |contract LakesCash is Ownable, ERC20, Pausable, Blacklistable {
    |    using SafeMath for uint256;
    |
  at /unique_chucks/24/0x9cb79101f795287585843d71c1b0a33a0724c2bb.sol(519)

[31mViolation[0m for UnrestrictedWrite in contract 'LakesCash':
    |        symbol = _symbol;
    |        currency = _currency;
  > |        decimals = _decimals;
    |        masterMinter = _masterMinter;
    |        pauser = _pauser;
  at /unique_chucks/24/0x9cb79101f795287585843d71c1b0a33a0724c2bb.sol(560)

[31mViolation[0m for UnrestrictedWrite in contract 'LakesCash':
    |        currency = _currency;
    |        decimals = _decimals;
  > |        masterMinter = _masterMinter;
    |        pauser = _pauser;
    |        blacklister = _blacklister;
  at /unique_chucks/24/0x9cb79101f795287585843d71c1b0a33a0724c2bb.sol(561)

[31mViolation[0m for UnrestrictedWrite in contract 'LakesCash':
    |        decimals = _decimals;
    |        masterMinter = _masterMinter;
  > |        pauser = _pauser;
    |        blacklister = _blacklister;
    |        initialized = true;
  at /unique_chucks/24/0x9cb79101f795287585843d71c1b0a33a0724c2bb.sol(562)

[31mViolation[0m for UnrestrictedWrite in contract 'LakesCash':
    |        masterMinter = _masterMinter;
    |        pauser = _pauser;
  > |        blacklister = _blacklister;
    |        initialized = true;
    |    }
  at /unique_chucks/24/0x9cb79101f795287585843d71c1b0a33a0724c2bb.sol(563)

[31mViolation[0m for UnrestrictedWrite in contract 'LakesCash':
    |        pauser = _pauser;
    |        blacklister = _blacklister;
  > |        initialized = true;
    |    }
    |
  at /unique_chucks/24/0x9cb79101f795287585843d71c1b0a33a0724c2bb.sol(564)

[33mWarning[0m for UnrestrictedWrite in contract 'LakesCash':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipTransferred(_owner, address(0));
  > |        _owner = address(0);
    |    }
    |
  at /unique_chucks/24/0x9cb79101f795287585843d71c1b0a33a0724c2bb.sol(367)

[33mWarning[0m for UnrestrictedWrite in contract 'LakesCash':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_chucks/24/0x9cb79101f795287585843d71c1b0a33a0724c2bb.sol(385)

[33mWarning[0m for UnrestrictedWrite in contract 'LakesCash':
    |   */
    |  function pause() onlyPauser public {
  > |    paused = true;
    |    emit Pause();
    |  }
  at /unique_chucks/24/0x9cb79101f795287585843d71c1b0a33a0724c2bb.sol(433)

[33mWarning[0m for UnrestrictedWrite in contract 'LakesCash':
    |   */
    |  function unpause() onlyPauser public {
  > |    paused = false;
    |    emit Unpause();
    |  }
  at /unique_chucks/24/0x9cb79101f795287585843d71c1b0a33a0724c2bb.sol(441)

[33mWarning[0m for UnrestrictedWrite in contract 'LakesCash':
    |  function updatePauser(address _newPauser) onlyOwner public {
    |    require(_newPauser != address(0));
  > |    pauser = _newPauser;
    |    emit PauserChanged(pauser);
    |  }
  at /unique_chucks/24/0x9cb79101f795287585843d71c1b0a33a0724c2bb.sol(450)

[33mWarning[0m for UnrestrictedWrite in contract 'LakesCash':
    |    */
    |    function blacklist(address _account) public onlyBlacklister {
  > |        blacklisted[_account] = true;
    |        emit Blacklisted(_account);
    |    }
  at /unique_chucks/24/0x9cb79101f795287585843d71c1b0a33a0724c2bb.sol(499)

[33mWarning[0m for UnrestrictedWrite in contract 'LakesCash':
    |    */
    |    function unBlacklist(address _account) public onlyBlacklister {
  > |        blacklisted[_account] = false;
    |        emit UnBlacklisted(_account);
    |    }
  at /unique_chucks/24/0x9cb79101f795287585843d71c1b0a33a0724c2bb.sol(508)

[33mWarning[0m for UnrestrictedWrite in contract 'LakesCash':
    |    function updateBlacklister(address _newBlacklister) public onlyOwner {
    |        require(_newBlacklister != address(0));
  > |        blacklister = _newBlacklister;
    |        emit BlacklisterChanged(blacklister);
    |    }
  at /unique_chucks/24/0x9cb79101f795287585843d71c1b0a33a0724c2bb.sol(514)

[33mWarning[0m for UnrestrictedWrite in contract 'LakesCash':
    |        require(_amount <= mintingAllowedAmount);
    |
  > |        totalSupply_ = totalSupply_.add(_amount);
    |        balances[_to] = balances[_to].add(_amount);
    |        minterAllowed[msg.sender] = mintingAllowedAmount.sub(_amount);
  at /unique_chucks/24/0x9cb79101f795287585843d71c1b0a33a0724c2bb.sol(588)

[33mWarning[0m for UnrestrictedWrite in contract 'LakesCash':
    |
    |        totalSupply_ = totalSupply_.add(_amount);
  > |        balances[_to] = balances[_to].add(_amount);
    |        minterAllowed[msg.sender] = mintingAllowedAmount.sub(_amount);
    |        emit Mint(msg.sender, _to, _amount);
  at /unique_chucks/24/0x9cb79101f795287585843d71c1b0a33a0724c2bb.sol(589)

[33mWarning[0m for UnrestrictedWrite in contract 'LakesCash':
    |        require(_value <= allowed[_from][msg.sender]);
    |
  > |        balances[_from] = balances[_from].sub(_value);
    |        balances[_to] = balances[_to].add(_value);
    |        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
  at /unique_chucks/24/0x9cb79101f795287585843d71c1b0a33a0724c2bb.sol(666)

[33mWarning[0m for UnrestrictedWrite in contract 'LakesCash':
    |
    |        balances[_from] = balances[_from].sub(_value);
  > |        balances[_to] = balances[_to].add(_value);
    |        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
    |        emit Transfer(_from, _to, _value);
  at /unique_chucks/24/0x9cb79101f795287585843d71c1b0a33a0724c2bb.sol(667)

[33mWarning[0m for UnrestrictedWrite in contract 'LakesCash':
    |
    |        balances[msg.sender] = balances[msg.sender].sub(_value);
  > |        balances[_to] = balances[_to].add(_value);
    |        emit Transfer(msg.sender, _to, _value);
    |        return true;
  at /unique_chucks/24/0x9cb79101f795287585843d71c1b0a33a0724c2bb.sol(684)

[33mWarning[0m for UnrestrictedWrite in contract 'LakesCash':
    |    */
    |    function configureMinter(address minter, uint256 minterAllowedAmount) whenNotPaused onlyMasterMinter public returns (bool) {
  > |        minters[minter] = true;
    |        minterAllowed[minter] = minterAllowedAmount;
    |        emit MinterConfigured(minter, minterAllowedAmount);
  at /unique_chucks/24/0x9cb79101f795287585843d71c1b0a33a0724c2bb.sol(696)

[33mWarning[0m for UnrestrictedWrite in contract 'LakesCash':
    |    function configureMinter(address minter, uint256 minterAllowedAmount) whenNotPaused onlyMasterMinter public returns (bool) {
    |        minters[minter] = true;
  > |        minterAllowed[minter] = minterAllowedAmount;
    |        emit MinterConfigured(minter, minterAllowedAmount);
    |        return true;
  at /unique_chucks/24/0x9cb79101f795287585843d71c1b0a33a0724c2bb.sol(697)

[33mWarning[0m for UnrestrictedWrite in contract 'LakesCash':
    |    */
    |    function removeMinter(address minter) onlyMasterMinter public returns (bool) {
  > |        minters[minter] = false;
    |        minterAllowed[minter] = 0;
    |        emit MinterRemoved(minter);
  at /unique_chucks/24/0x9cb79101f795287585843d71c1b0a33a0724c2bb.sol(708)

[33mWarning[0m for UnrestrictedWrite in contract 'LakesCash':
    |    function removeMinter(address minter) onlyMasterMinter public returns (bool) {
    |        minters[minter] = false;
  > |        minterAllowed[minter] = 0;
    |        emit MinterRemoved(minter);
    |        return true;
  at /unique_chucks/24/0x9cb79101f795287585843d71c1b0a33a0724c2bb.sol(709)

[33mWarning[0m for UnrestrictedWrite in contract 'LakesCash':
    |        require(balance >= _amount);
    |
  > |        totalSupply_ = totalSupply_.sub(_amount);
    |        balances[msg.sender] = balance.sub(_amount);
    |        emit Burn(msg.sender, _amount);
  at /unique_chucks/24/0x9cb79101f795287585843d71c1b0a33a0724c2bb.sol(725)

[33mWarning[0m for UnrestrictedWrite in contract 'LakesCash':
    |    function updateMasterMinter(address _newMasterMinter) onlyOwner public {
    |        require(_newMasterMinter != address(0));
  > |        masterMinter = _newMasterMinter;
    |        emit MasterMinterChanged(masterMinter);
    |    }
  at /unique_chucks/24/0x9cb79101f795287585843d71c1b0a33a0724c2bb.sol(733)

[33mWarning[0m for UnrestrictedWrite in contract 'Pausable':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipTransferred(_owner, address(0));
  > |        _owner = address(0);
    |    }
    |
  at /unique_chucks/24/0x9cb79101f795287585843d71c1b0a33a0724c2bb.sol(367)

[33mWarning[0m for UnrestrictedWrite in contract 'Pausable':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_chucks/24/0x9cb79101f795287585843d71c1b0a33a0724c2bb.sol(385)

[33mWarning[0m for UnrestrictedWrite in contract 'Pausable':
    |   */
    |  function pause() onlyPauser public {
  > |    paused = true;
    |    emit Pause();
    |  }
  at /unique_chucks/24/0x9cb79101f795287585843d71c1b0a33a0724c2bb.sol(433)

[33mWarning[0m for UnrestrictedWrite in contract 'Pausable':
    |   */
    |  function unpause() onlyPauser public {
  > |    paused = false;
    |    emit Unpause();
    |  }
  at /unique_chucks/24/0x9cb79101f795287585843d71c1b0a33a0724c2bb.sol(441)

[33mWarning[0m for UnrestrictedWrite in contract 'Pausable':
    |  function updatePauser(address _newPauser) onlyOwner public {
    |    require(_newPauser != address(0));
  > |    pauser = _newPauser;
    |    emit PauserChanged(pauser);
    |  }
  at /unique_chucks/24/0x9cb79101f795287585843d71c1b0a33a0724c2bb.sol(450)