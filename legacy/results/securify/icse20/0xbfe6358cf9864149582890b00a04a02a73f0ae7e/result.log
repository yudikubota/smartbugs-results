Processing contract: /unique_chucks/6/0xbfe6358cf9864149582890b00a04a02a73f0ae7e.sol:Pmes
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for LockedEther in contract 'Pmes':
    |pragma solidity =0.5.1;
    |
  > |contract Pmes {
    |
    |    address public owner;
  at /unique_chucks/6/0xbfe6358cf9864149582890b00a04a02a73f0ae7e.sol(3)

[31mViolation[0m for UnrestrictedWrite in contract 'Pmes':
    |        require(cid == 0, "Content already uploaded");
    |
  > |        cid = nextCid++;
    |        CusToCid[cus] = cid;
    |
  at /unique_chucks/6/0xbfe6358cf9864149582890b00a04a02a73f0ae7e.sol(89)

[31mViolation[0m for UnrestrictedWrite in contract 'Pmes':
    |
    |        cid = nextCid++;
  > |        CusToCid[cus] = cid;
    |
    |        contents[cid] = Content(cus, description, ownerId, readPrice, writePrice);
  at /unique_chucks/6/0xbfe6358cf9864149582890b00a04a02a73f0ae7e.sol(90)

[33mWarning[0m for UnrestrictedWrite in contract 'Pmes':
    |pragma solidity =0.5.1;
    |
  > |contract Pmes {
    |
    |    address public owner;
  at /unique_chucks/6/0xbfe6358cf9864149582890b00a04a02a73f0ae7e.sol(3)

[33mWarning[0m for UnrestrictedWrite in contract 'Pmes':
    |
    |contract Pmes {
  > |
    |    address public owner;
    |    uint256 public nextCid = 1;
  at /unique_chucks/6/0xbfe6358cf9864149582890b00a04a02a73f0ae7e.sol(4)

[33mWarning[0m for UnrestrictedWrite in contract 'Pmes':
    |        CusToCid[cus] = cid;
    |
  > |        contents[cid] = Content(cus, description, ownerId, readPrice, writePrice);
    |        emit postContent(cid);
    |
  at /unique_chucks/6/0xbfe6358cf9864149582890b00a04a02a73f0ae7e.sol(92)

[33mWarning[0m for UnrestrictedWrite in contract 'Pmes':
    |        offers[offerId].sellerAccessString = sellerAccessString;
    |        offers[offerId].sellerPublicKey = sellerPublicKey;
  > |        offers[offerId].status = OfferStatus.Accepted;
    |        emit acceptOffer(cid);
    |    }
  at /unique_chucks/6/0xbfe6358cf9864149582890b00a04a02a73f0ae7e.sol(136)

[33mWarning[0m for UnrestrictedWrite in contract 'Pmes':
    |        offers[offerId].sellerAccessString = sellerAccessString;
    |        offers[offerId].sellerPublicKey = sellerPublicKey;
  > |        offers[offerId].status = OfferStatus.Accepted;
    |        emit acceptOffer(cid);
    |    }
  at /unique_chucks/6/0xbfe6358cf9864149582890b00a04a02a73f0ae7e.sol(153)

[33mWarning[0m for UnrestrictedWrite in contract 'Pmes':
    |        );
    |
  > |        offers[nextOfferId] = Offer(
    |            offers[CidBuyerIdToOfferId[cid][buyerId]].id + 1,
    |            buyerAccessString, 
  at /unique_chucks/6/0xbfe6358cf9864149582890b00a04a02a73f0ae7e.sol(175)

[33mWarning[0m for UnrestrictedWrite in contract 'Pmes':
    |        );
    |
  > |        CidBuyerIdToOfferId[cid][buyerId] = nextOfferId;
    |
    |        CidToOfferIds[cid].push(nextOfferId);
  at /unique_chucks/6/0xbfe6358cf9864149582890b00a04a02a73f0ae7e.sol(187)

[33mWarning[0m for UnrestrictedWrite in contract 'Pmes':
    |        CidBuyerIdToOfferId[cid][buyerId] = nextOfferId;
    |
  > |        CidToOfferIds[cid].push(nextOfferId);
    |        BuyerIdToOfferIds[buyerId].push(nextOfferId);
    |
  at /unique_chucks/6/0xbfe6358cf9864149582890b00a04a02a73f0ae7e.sol(189)

[33mWarning[0m for UnrestrictedWrite in contract 'Pmes':
    |
    |        CidToOfferIds[cid].push(nextOfferId);
  > |        BuyerIdToOfferIds[buyerId].push(nextOfferId);
    |
    |        emit postOffer(cid, offerType, price, buyerId);
  at /unique_chucks/6/0xbfe6358cf9864149582890b00a04a02a73f0ae7e.sol(190)

[33mWarning[0m for UnrestrictedWrite in contract 'Pmes':
    |        emit postOffer(cid, offerType, price, buyerId);
    |        
  > |        nextOfferId++;
    |    }
    |
  at /unique_chucks/6/0xbfe6358cf9864149582890b00a04a02a73f0ae7e.sol(194)

[33mWarning[0m for UnrestrictedWrite in contract 'Pmes':
    |
    |contract Pmes {
  > |
    |    address public owner;
    |    uint256 public nextCid = 1;
  at /unique_chucks/6/0xbfe6358cf9864149582890b00a04a02a73f0ae7e.sol(4)

[33mWarning[0m for UnrestrictedWrite in contract 'Pmes':
    |        minAccessLevel(5)
    |    {
  > |        publishersMap[publisherAddress] = accessLevel;
    |    }
    |
  at /unique_chucks/6/0xbfe6358cf9864149582890b00a04a02a73f0ae7e.sol(71)

[33mWarning[0m for UnrestrictedWrite in contract 'Pmes':
    |    function setReadPrice(uint256 cid, uint256 price) public minAccessLevel(1) {
    |        require(cid > 0 && cid < nextCid);
  > |        contents[cid].readPrice = price;
    |    }
    |
  at /unique_chucks/6/0xbfe6358cf9864149582890b00a04a02a73f0ae7e.sol(100)

[33mWarning[0m for UnrestrictedWrite in contract 'Pmes':
    |    function setWritePrice(uint256 cid, uint256 price) public minAccessLevel(1) {
    |        require(cid > 0 && cid < nextCid);
  > |        contents[cid].writePrice = price;
    |    }
    |
  at /unique_chucks/6/0xbfe6358cf9864149582890b00a04a02a73f0ae7e.sol(105)

[33mWarning[0m for UnrestrictedWrite in contract 'Pmes':
    |        uint256 offerId = CidBuyerIdToOfferId[cid][buyerId];
    |        require(offers[offerId].status == OfferStatus.Opened);
  > |        contents[cid].owner = buyerId;
    |        offers[offerId].sellerAccessString = sellerAccessString;
    |        offers[offerId].sellerPublicKey = sellerPublicKey;
  at /unique_chucks/6/0xbfe6358cf9864149582890b00a04a02a73f0ae7e.sol(133)

[33mWarning[0m for UnrestrictedWrite in contract 'Pmes':
    |        );
    |
  > |        offers[nextOfferId] = Offer(
    |            offers[CidBuyerIdToOfferId[cid][buyerId]].id + 1,
    |            buyerAccessString, 
  at /unique_chucks/6/0xbfe6358cf9864149582890b00a04a02a73f0ae7e.sol(175)

[33mWarning[0m for UnrestrictedWrite in contract 'Pmes':
    |        uint256 offerId = CidBuyerIdToOfferId[cid][buyerId];
    |        require(offers[offerId].status == OfferStatus.Opened);
  > |        offers[offerId].status = OfferStatus.Cancelled;
    |    }
    |
  at /unique_chucks/6/0xbfe6358cf9864149582890b00a04a02a73f0ae7e.sol(200)

[33mWarning[0m for UnrestrictedWrite in contract 'Pmes':
    |        uint256 offerId = CidBuyerIdToOfferId[cid][buyerId];
    |        require(offers[offerId].status == OfferStatus.Opened);
  > |        offers[offerId].status = OfferStatus.Rejected;
    |    }
    |
  at /unique_chucks/6/0xbfe6358cf9864149582890b00a04a02a73f0ae7e.sol(206)