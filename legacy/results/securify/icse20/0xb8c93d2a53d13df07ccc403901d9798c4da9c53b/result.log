Processing contract: /unique_contracts/0xb8c93d2a53d13df07ccc403901d9798c4da9c53b.sol:DAOToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0xb8c93d2a53d13df07ccc403901d9798c4da9c53b.sol:ERC20
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0xb8c93d2a53d13df07ccc403901d9798c4da9c53b.sol:ERC20Burnable
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0xb8c93d2a53d13df07ccc403901d9798c4da9c53b.sol:IERC20
Processing contract: /unique_contracts/0xb8c93d2a53d13df07ccc403901d9798c4da9c53b.sol:Ownable
Processing contract: /unique_contracts/0xb8c93d2a53d13df07ccc403901d9798c4da9c53b.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for LockedEther in contract 'DAOToken':
    | */
    |
  > |contract DAOToken is ERC20, ERC20Burnable, Ownable {
    |
    |    string public name;
  at /unique_contracts/0xb8c93d2a53d13df07ccc403901d9798c4da9c53b.sol(400)

[33mWarning[0m for UnrestrictedWrite in contract 'ERC20Burnable':
    |        require(account != address(0));
    |
  > |        _totalSupply = _totalSupply.sub(value);
    |        _balances[account] = _balances[account].sub(value);
    |        emit Transfer(account, address(0), value);
  at /unique_contracts/0xb8c93d2a53d13df07ccc403901d9798c4da9c53b.sol(264)