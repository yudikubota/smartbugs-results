Processing contract: /unique_contracts/0x44ea4d7e8e76f71bcc1836793a6493d5a4ef6788.sol:Address
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0x44ea4d7e8e76f71bcc1836793a6493d5a4ef6788.sol:ChainmonstersCoreV2
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0x44ea4d7e8e76f71bcc1836793a6493d5a4ef6788.sol:Counters
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0x44ea4d7e8e76f71bcc1836793a6493d5a4ef6788.sol:ERC165
Processing contract: /unique_contracts/0x44ea4d7e8e76f71bcc1836793a6493d5a4ef6788.sol:ERC721
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0x44ea4d7e8e76f71bcc1836793a6493d5a4ef6788.sol:ERC721Enumerable
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0x44ea4d7e8e76f71bcc1836793a6493d5a4ef6788.sol:ERC721Full
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0x44ea4d7e8e76f71bcc1836793a6493d5a4ef6788.sol:ERC721Metadata
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0x44ea4d7e8e76f71bcc1836793a6493d5a4ef6788.sol:GameLogic
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0x44ea4d7e8e76f71bcc1836793a6493d5a4ef6788.sol:IERC165
Processing contract: /unique_contracts/0x44ea4d7e8e76f71bcc1836793a6493d5a4ef6788.sol:IERC721
Processing contract: /unique_contracts/0x44ea4d7e8e76f71bcc1836793a6493d5a4ef6788.sol:IERC721Enumerable
Processing contract: /unique_contracts/0x44ea4d7e8e76f71bcc1836793a6493d5a4ef6788.sol:IERC721Metadata
Processing contract: /unique_contracts/0x44ea4d7e8e76f71bcc1836793a6493d5a4ef6788.sol:IERC721Receiver
Processing contract: /unique_contracts/0x44ea4d7e8e76f71bcc1836793a6493d5a4ef6788.sol:Ownable
Processing contract: /unique_contracts/0x44ea4d7e8e76f71bcc1836793a6493d5a4ef6788.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for LockedEther in contract 'ChainmonstersCoreV2':
    |}
    |
  > |contract ChainmonstersCoreV2 is ERC721Full, Ownable{
    |    
    |    address public GameContract;
  at /unique_contracts/0x44ea4d7e8e76f71bcc1836793a6493d5a4ef6788.sol(825)

[33mWarning[0m for UnrestrictedWrite in contract 'ChainmonstersCoreV2':
    |}
    |
  > |contract ChainmonstersCoreV2 is ERC721Full, Ownable{
    |    
    |    address public GameContract;
  at /unique_contracts/0x44ea4d7e8e76f71bcc1836793a6493d5a4ef6788.sol(825)

[33mWarning[0m for UnrestrictedWrite in contract 'ERC721Enumerable':
    |}
    |
  > |contract ERC721Enumerable is ERC165, ERC721, IERC721Enumerable {
    |    // Mapping from owner to list of owned token IDs
    |    mapping(address => uint256[]) private _ownedTokens;
  at /unique_contracts/0x44ea4d7e8e76f71bcc1836793a6493d5a4ef6788.sol(547)

[31mViolation[0m for LockedEther in contract 'ERC721Full':
    |}
    |
  > |contract ERC721Full is ERC721, ERC721Enumerable, ERC721Metadata {
    |    constructor (string memory name, string memory symbol) public ERC721Metadata(name, symbol) {
    |        // solhint-disable-previous-line no-empty-blocks
  at /unique_contracts/0x44ea4d7e8e76f71bcc1836793a6493d5a4ef6788.sol(819)

[33mWarning[0m for UnrestrictedWrite in contract 'ERC721Full':
    |}
    |
  > |contract ERC721Full is ERC721, ERC721Enumerable, ERC721Metadata {
    |    constructor (string memory name, string memory symbol) public ERC721Metadata(name, symbol) {
    |        // solhint-disable-previous-line no-empty-blocks
  at /unique_contracts/0x44ea4d7e8e76f71bcc1836793a6493d5a4ef6788.sol(819)

[31mViolation[0m for LockedEther in contract 'ERC721Metadata':
    |}
    |
  > |contract ERC721Metadata is ERC165, ERC721, IERC721Metadata {
    |    // Token name
    |    string private _name;
  at /unique_contracts/0x44ea4d7e8e76f71bcc1836793a6493d5a4ef6788.sol(736)

[31mViolation[0m for DAOConstantGas in contract 'GameLogic':
    |        require(tokenToMinted[_id] == 0);
    |        require(msg.value == mintFee);
  > |        backend.transfer(gasCosts);
    |        tokenToMinted[_id] = 1;
    |
  at /unique_contracts/0x44ea4d7e8e76f71bcc1836793a6493d5a4ef6788.sol(987)

[31mViolation[0m for TODAmount in contract 'GameLogic':
    |        require(tokenToMinted[_id] == 0);
    |        require(msg.value == mintFee);
  > |        backend.transfer(gasCosts);
    |        tokenToMinted[_id] = 1;
    |
  at /unique_contracts/0x44ea4d7e8e76f71bcc1836793a6493d5a4ef6788.sol(987)

[31mViolation[0m for TODAmount in contract 'GameLogic':
    |        uint256 balance = address(this).balance;
    |        address payable _owner = address(uint160(owner));
  > |        _owner.transfer(balance);
    |    }
    |
  at /unique_contracts/0x44ea4d7e8e76f71bcc1836793a6493d5a4ef6788.sol(1021)

[31mViolation[0m for TODReceiver in contract 'GameLogic':
    |        require(tokenToMinted[_id] == 0);
    |        require(msg.value == mintFee);
  > |        backend.transfer(gasCosts);
    |        tokenToMinted[_id] = 1;
    |
  at /unique_contracts/0x44ea4d7e8e76f71bcc1836793a6493d5a4ef6788.sol(987)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'GameLogic':
    |        require(tokenToMinted[_id] == 0);
    |        require(msg.value == mintFee);
  > |        backend.transfer(gasCosts);
    |        tokenToMinted[_id] = 1;
    |
  at /unique_contracts/0x44ea4d7e8e76f71bcc1836793a6493d5a4ef6788.sol(987)

[31mViolation[0m for UnrestrictedWrite in contract 'GameLogic':
    |        require(msg.value == mintFee);
    |        backend.transfer(gasCosts);
  > |        tokenToMinted[_id] = 1;
    |
    |        emit RequestMint(msg.sender, _id, mintFee, gasCosts);
  at /unique_contracts/0x44ea4d7e8e76f71bcc1836793a6493d5a4ef6788.sol(988)

[33mWarning[0m for UnrestrictedWrite in contract 'GameLogic':
    |        require(msg.sender == admin);
    |        require(_gasFee > 0);
  > |        gasCosts = _gasFee;
    |        
    |        mintFee = mintCosts + gasCosts;
  at /unique_contracts/0x44ea4d7e8e76f71bcc1836793a6493d5a4ef6788.sol(944)

[33mWarning[0m for UnrestrictedWrite in contract 'GameLogic':
    |        gasCosts = _gasFee;
    |        
  > |        mintFee = mintCosts + gasCosts;
    |
    |
  at /unique_contracts/0x44ea4d7e8e76f71bcc1836793a6493d5a4ef6788.sol(946)

[33mWarning[0m for UnrestrictedWrite in contract 'GameLogic':
    |        require(msg.sender == admin);
    |        require(_mintFee > 0);
  > |        mintCosts = _mintFee;
    |        mintFee = mintCosts + gasCosts;
    |
  at /unique_contracts/0x44ea4d7e8e76f71bcc1836793a6493d5a4ef6788.sol(954)

[33mWarning[0m for UnrestrictedWrite in contract 'GameLogic':
    |        require(_mintFee > 0);
    |        mintCosts = _mintFee;
  > |        mintFee = mintCosts + gasCosts;
    |
    |        
  at /unique_contracts/0x44ea4d7e8e76f71bcc1836793a6493d5a4ef6788.sol(955)

[33mWarning[0m for UnrestrictedWrite in contract 'GameLogic':
    |        require(msg.sender == admin);
    |        require(_admin == address(_admin));
  > |        admin = _admin;
    |    }
    |    
  at /unique_contracts/0x44ea4d7e8e76f71bcc1836793a6493d5a4ef6788.sol(963)

[33mWarning[0m for UnrestrictedWrite in contract 'GameLogic':
    |        require(msg.sender == admin);
    |        require(_backend == address(_backend));
  > |        backend = _backend;
    |    }
    |    
  at /unique_contracts/0x44ea4d7e8e76f71bcc1836793a6493d5a4ef6788.sol(969)

[33mWarning[0m for UnrestrictedWrite in contract 'GameLogic':
    |        require(msg.sender == admin);
    |        require(_core == address(_core));
  > |        coreContract = ChainmonstersCoreV2(_core);
    |        core = _core;
    |    }
  at /unique_contracts/0x44ea4d7e8e76f71bcc1836793a6493d5a4ef6788.sol(975)

[33mWarning[0m for UnrestrictedWrite in contract 'GameLogic':
    |        require(_core == address(_core));
    |        coreContract = ChainmonstersCoreV2(_core);
  > |        core = _core;
    |    }
    |
  at /unique_contracts/0x44ea4d7e8e76f71bcc1836793a6493d5a4ef6788.sol(976)

[33mWarning[0m for UnrestrictedWrite in contract 'GameLogic':
    |
    |        // start off with blocking any attemps of creating any duplicates
  > |        tokenToMinted[_id] = 2;
    |
    |        coreContract.mintToken(_owner);
  at /unique_contracts/0x44ea4d7e8e76f71bcc1836793a6493d5a4ef6788.sol(1005)