Processing contract: /unique_chucks/1/0x931abd3732f7eada74190c8f89b46f8ba7103d54.sol:ERC20
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/1/0x931abd3732f7eada74190c8f89b46f8ba7103d54.sol:ERC20Detailed
Processing contract: /unique_chucks/1/0x931abd3732f7eada74190c8f89b46f8ba7103d54.sol:FDSToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/1/0x931abd3732f7eada74190c8f89b46f8ba7103d54.sol:IERC20
Processing contract: /unique_chucks/1/0x931abd3732f7eada74190c8f89b46f8ba7103d54.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for LockedEther in contract 'FDSToken':
    |}
    |
  > |contract FDSToken is ERC20, ERC20Detailed {
    |    uint256 public burned; // Burned FDS.
    |
  at /unique_chucks/1/0x931abd3732f7eada74190c8f89b46f8ba7103d54.sol(285)

[33mWarning[0m for UnrestrictedWrite in contract 'FDSToken':
    |        require(account != address(0));
    |
  > |        _totalSupply = _totalSupply.sub(value);
    |        _balances[account] = _balances[account].sub(value);
    |        emit Transfer(account, address(0), value);
  at /unique_chucks/1/0x931abd3732f7eada74190c8f89b46f8ba7103d54.sol(232)

[33mWarning[0m for UnrestrictedWrite in contract 'FDSToken':
    |
    |    function burn(uint256 value) public returns(bool) {
  > |        burned = burned.add(value);
    |        _burn(msg.sender, value);
    |        return true;
  at /unique_chucks/1/0x931abd3732f7eada74190c8f89b46f8ba7103d54.sol(298)

[33mWarning[0m for UnrestrictedWrite in contract 'FDSToken':
    |
    |    function burnFrom(address from, uint256 value) public returns(bool) {
  > |        burned = burned.add(value);
    |        _burnFrom(from, value);
    |        return true;
  at /unique_chucks/1/0x931abd3732f7eada74190c8f89b46f8ba7103d54.sol(304)