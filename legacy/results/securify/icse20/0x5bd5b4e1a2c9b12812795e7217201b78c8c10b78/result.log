Processing contract: /unique_chucks/5/0x5bd5b4e1a2c9b12812795e7217201b78c8c10b78.sol:AccountMap
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/5/0x5bd5b4e1a2c9b12812795e7217201b78c8c10b78.sol:AdditiveMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/5/0x5bd5b4e1a2c9b12812795e7217201b78c8c10b78.sol:AddressMap
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/5/0x5bd5b4e1a2c9b12812795e7217201b78c8c10b78.sol:Compliance
Processing contract: /unique_chucks/5/0x5bd5b4e1a2c9b12812795e7217201b78c8c10b78.sol:ComplianceRule
Processing contract: /unique_chucks/5/0x5bd5b4e1a2c9b12812795e7217201b78c8c10b78.sol:Destroyable
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/5/0x5bd5b4e1a2c9b12812795e7217201b78c8c10b78.sol:ERC20
Processing contract: /unique_chucks/5/0x5bd5b4e1a2c9b12812795e7217201b78c8c10b78.sol:Lockable
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/5/0x5bd5b4e1a2c9b12812795e7217201b78c8c10b78.sol:LockableDestroyable
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/5/0x5bd5b4e1a2c9b12812795e7217201b78c8c10b78.sol:Ownable
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/5/0x5bd5b4e1a2c9b12812795e7217201b78c8c10b78.sol:Storage
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/5/0x5bd5b4e1a2c9b12812795e7217201b78c8c10b78.sol:T0ken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[33mWarning[0m for UnrestrictedWrite in contract 'Destroyable':
    |        require(newOwner != address(0), "New Owner cannot be zero address");
    |        address payable prevOwner = owner;
  > |        owner = newOwner;
    |        emit OwnerTransferred(prevOwner, newOwner);
    |    }
  at /unique_chucks/5/0x5bd5b4e1a2c9b12812795e7217201b78c8c10b78.sol(55)

[33mWarning[0m for UnrestrictedWrite in contract 'Lockable':
    |        require(newOwner != address(0), "New Owner cannot be zero address");
    |        address payable prevOwner = owner;
  > |        owner = newOwner;
    |        emit OwnerTransferred(prevOwner, newOwner);
    |    }
  at /unique_chucks/5/0x5bd5b4e1a2c9b12812795e7217201b78c8c10b78.sol(55)

[33mWarning[0m for UnrestrictedWrite in contract 'Lockable':
    |        require(isLocked != locked, "Contract already in requested lock state");
    |
  > |        isLocked = locked;
    |    }
    |}
  at /unique_chucks/5/0x5bd5b4e1a2c9b12812795e7217201b78c8c10b78.sol(87)

[33mWarning[0m for UnrestrictedWrite in contract 'LockableDestroyable':
    |        require(newOwner != address(0), "New Owner cannot be zero address");
    |        address payable prevOwner = owner;
  > |        owner = newOwner;
    |        emit OwnerTransferred(prevOwner, newOwner);
    |    }
  at /unique_chucks/5/0x5bd5b4e1a2c9b12812795e7217201b78c8c10b78.sol(55)

[33mWarning[0m for UnrestrictedWrite in contract 'LockableDestroyable':
    |        require(isLocked != locked, "Contract already in requested lock state");
    |
  > |        isLocked = locked;
    |    }
    |}
  at /unique_chucks/5/0x5bd5b4e1a2c9b12812795e7217201b78c8c10b78.sol(87)

[33mWarning[0m for UnrestrictedWrite in contract 'Ownable':
    |        require(newOwner != address(0), "New Owner cannot be zero address");
    |        address payable prevOwner = owner;
  > |        owner = newOwner;
    |        emit OwnerTransferred(prevOwner, newOwner);
    |    }
  at /unique_chucks/5/0x5bd5b4e1a2c9b12812795e7217201b78c8c10b78.sol(55)

[33mWarning[0m for UnrestrictedWrite in contract 'Storage':
    |            // Replace with last item
    |            Account storage last = self.items[self.count];  // Get the last item
  > |            self.indices[last.addr] = oneBasedIndex;        // Update last items index to current index
    |            self.items[oneBasedIndex] = last;               // Update current index to last item
    |            delete self.items[self.count];                  // Delete the last item, since it's moved
  at /unique_chucks/5/0x5bd5b4e1a2c9b12812795e7217201b78c8c10b78.sol(359)

[33mWarning[0m for UnrestrictedWrite in contract 'Storage':
    |            Account storage last = self.items[self.count];  // Get the last item
    |            self.indices[last.addr] = oneBasedIndex;        // Update last items index to current index
  > |            self.items[oneBasedIndex] = last;               // Update current index to last item
    |            delete self.items[self.count];                  // Delete the last item, since it's moved
    |        } else {
  at /unique_chucks/5/0x5bd5b4e1a2c9b12812795e7217201b78c8c10b78.sol(360)

[33mWarning[0m for UnrestrictedWrite in contract 'Storage':
    |            self.indices[last.addr] = oneBasedIndex;        // Update last items index to current index
    |            self.items[oneBasedIndex] = last;               // Update current index to last item
  > |            delete self.items[self.count];                  // Delete the last item, since it's moved
    |        } else {
    |            // Delete the account
  at /unique_chucks/5/0x5bd5b4e1a2c9b12812795e7217201b78c8c10b78.sol(361)

[33mWarning[0m for UnrestrictedWrite in contract 'Storage':
    |        } else {
    |            // Delete the account
  > |            delete self.items[oneBasedIndex];
    |        }
    |
  at /unique_chucks/5/0x5bd5b4e1a2c9b12812795e7217201b78c8c10b78.sol(364)

[33mWarning[0m for UnrestrictedWrite in contract 'Storage':
    |        }
    |
  > |        delete self.indices[addr];
    |        self.count--;
    |        return true;
  at /unique_chucks/5/0x5bd5b4e1a2c9b12812795e7217201b78c8c10b78.sol(367)

[33mWarning[0m for UnrestrictedWrite in contract 'Storage':
    |
    |        delete self.indices[addr];
  > |        self.count--;
    |        return true;
    |    }
  at /unique_chucks/5/0x5bd5b4e1a2c9b12812795e7217201b78c8c10b78.sol(368)

[33mWarning[0m for UnrestrictedWrite in contract 'Storage':
    |        for (uint8 i = 0; i < MAX_DATA; i++) {
    |            if (accountData[i] != ZERO_BYTES) {
  > |                delete accountData[i];
    |            }
    |        }
  at /unique_chucks/5/0x5bd5b4e1a2c9b12812795e7217201b78c8c10b78.sol(531)

[33mWarning[0m for UnrestrictedWrite in contract 'T0ken':
    |        require(newOwner != address(0), "New Owner cannot be zero address");
    |        address payable prevOwner = owner;
  > |        owner = newOwner;
    |        emit OwnerTransferred(prevOwner, newOwner);
    |    }
  at /unique_chucks/5/0x5bd5b4e1a2c9b12812795e7217201b78c8c10b78.sol(55)

[33mWarning[0m for UnrestrictedWrite in contract 'T0ken':
    |        require(isLocked != locked, "Contract already in requested lock state");
    |
  > |        isLocked = locked;
    |    }
    |}
  at /unique_chucks/5/0x5bd5b4e1a2c9b12812795e7217201b78c8c10b78.sol(87)

[33mWarning[0m for UnrestrictedWrite in contract 'T0ken':
    |    canIssue
    |    returns (bool) {
  > |        issuingFinished = true;
    |        emit IssueFinished();
    |        return issuingFinished;
  at /unique_chucks/5/0x5bd5b4e1a2c9b12812795e7217201b78c8c10b78.sol(1037)

[33mWarning[0m for UnrestrictedWrite in contract 'T0ken':
    |    isUnlocked
    |    onlyOwner {
  > |        issuer = newIssuer;
    |        emit IssuerSet(issuer, newIssuer);
    |    }
  at /unique_chucks/5/0x5bd5b4e1a2c9b12812795e7217201b78c8c10b78.sol(1104)

[33mWarning[0m for UnrestrictedWrite in contract 'T0ken':
    |    isUnlocked
    |    onlyOwner {
  > |        compliance = Compliance(newComplianceAddress);
    |    }
    |
  at /unique_chucks/5/0x5bd5b4e1a2c9b12812795e7217201b78c8c10b78.sol(1116)