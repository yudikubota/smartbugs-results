/unique_chucks/11/0xe3c2130530d77418b3e367fe162808887526e74d.sol:73:3: Error: Functions are not allowed to have the same name as the contract. If you intend this to be a constructor, use "constructor(...) { ... }" to define it.
  function Ownable() public {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xe3c2130530d77418b3e367fe162808887526e74d.sol:3:1: Warning: Source file does not specify required compiler version! Consider adding "pragma solidity ^0.5.8;"
contract StakeInterface {
^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xe3c2130530d77418b3e367fe162808887526e74d.sol:73:3: Warning: This declaration shadows an existing declaration.
  function Ownable() public {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xe3c2130530d77418b3e367fe162808887526e74d.sol:62:1: The shadowed declaration is here:
contract Ownable {
^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xe3c2130530d77418b3e367fe162808887526e74d.sol:219:3: Error: Identifier already declared.
  function requiredStake() external view returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xe3c2130530d77418b3e367fe162808887526e74d.sol:132:3: The previous declaration is here:
  uint256 public requiredStake;
  ^--------------------------^
/unique_chucks/11/0xe3c2130530d77418b3e367fe162808887526e74d.sol:231:27: Error: Data location must be "calldata" for parameter in external function, but none was given.
  function refundBalances(address[] addresses) external onlyOwner {
                          ^-----------------^
Exception in thread "main" java.lang.RuntimeException
	at ch.securify.CompilationHelpers.compileContracts(CompilationHelpers.java:115)
	at ch.securify.Main.processSolidityFile(Main.java:98)
	at ch.securify.Main.main(Main.java:254)