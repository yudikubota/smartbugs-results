Processing contract: /unique_chucks/32/0xd3cf41315daf77a06bade6a931f47c1ab98d2952.sol:Membership
Processing contract: /unique_chucks/32/0xd3cf41315daf77a06bade6a931f47c1ab98d2952.sol:Owned
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/32/0xd3cf41315daf77a06bade6a931f47c1ab98d2952.sol:Publisher
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/32/0xd3cf41315daf77a06bade6a931f47c1ab98d2952.sol:Token
[31mViolation[0m for MissingInputValidation in contract 'Owned':
    |  constructor() public { owner = msg.sender; }
    |
  > |  function changeOwner( address payable newOwner ) isOwner public {
    |    owner = newOwner;
    |  }
  at /unique_chucks/32/0xd3cf41315daf77a06bade6a931f47c1ab98d2952.sol(17)

[33mWarning[0m for UnrestrictedWrite in contract 'Owned':
    |
    |  function changeOwner( address payable newOwner ) isOwner public {
  > |    owner = newOwner;
    |  }
    |
  at /unique_chucks/32/0xd3cf41315daf77a06bade6a931f47c1ab98d2952.sol(18)

[31mViolation[0m for RepeatedCall in contract 'Publisher':
    |    require( membership.isMember(msg.sender) );
    |
  > |    token.transferFrom( msg.sender, address(this), tokenFee );
    |
    |    if (treasury != address(0)) {
  at /unique_chucks/32/0xd3cf41315daf77a06bade6a931f47c1ab98d2952.sol(89)

[31mViolation[0m for RepeatedCall in contract 'Publisher':
    |
    |    if (treasury != address(0)) {
  > |      token.transfer( treasury, tokenFee - tokenFee/dao );
    |    }
    |
  at /unique_chucks/32/0xd3cf41315daf77a06bade6a931f47c1ab98d2952.sol(92)

[33mWarning[0m for RepeatedCall in contract 'Publisher':
    |
    |    if (treasury != address(0))
  > |      treasury.transfer( msg.value - msg.value / dao );
    |
    |    emit Published( receiverpubkey, ipfshash, redmeta );
  at /unique_chucks/32/0xd3cf41315daf77a06bade6a931f47c1ab98d2952.sol(78)

[31mViolation[0m for TODAmount in contract 'Publisher':
    |
    |    if (treasury != address(0))
  > |      treasury.transfer( msg.value - msg.value / dao );
    |
    |    emit Published( receiverpubkey, ipfshash, redmeta );
  at /unique_chucks/32/0xd3cf41315daf77a06bade6a931f47c1ab98d2952.sol(78)

[31mViolation[0m for TODReceiver in contract 'Publisher':
    |
    |    if (treasury != address(0))
  > |      treasury.transfer( msg.value - msg.value / dao );
    |
    |    emit Published( receiverpubkey, ipfshash, redmeta );
  at /unique_chucks/32/0xd3cf41315daf77a06bade6a931f47c1ab98d2952.sol(78)

[31mViolation[0m for TODReceiver in contract 'Publisher':
    |
    |  function withdraw( uint256 amount ) isOwner public {
  > |    owner.transfer( amount );
    |  }
    |
  at /unique_chucks/32/0xd3cf41315daf77a06bade6a931f47c1ab98d2952.sol(99)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'Publisher':
    |
    |    if (treasury != address(0))
  > |      treasury.transfer( msg.value - msg.value / dao );
    |
    |    emit Published( receiverpubkey, ipfshash, redmeta );
  at /unique_chucks/32/0xd3cf41315daf77a06bade6a931f47c1ab98d2952.sol(78)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'Publisher':
    |
    |  function withdraw( uint256 amount ) isOwner public {
  > |    owner.transfer( amount );
    |  }
    |
  at /unique_chucks/32/0xd3cf41315daf77a06bade6a931f47c1ab98d2952.sol(99)

[33mWarning[0m for UnrestrictedWrite in contract 'Publisher':
    |
    |  function changeOwner( address payable newOwner ) isOwner public {
  > |    owner = newOwner;
    |  }
    |
  at /unique_chucks/32/0xd3cf41315daf77a06bade6a931f47c1ab98d2952.sol(18)

[33mWarning[0m for UnrestrictedWrite in contract 'Publisher':
    |
    |  function setFee( uint256 _fee ) isOwner public {
  > |    fee = _fee;
    |  }
    |
  at /unique_chucks/32/0xd3cf41315daf77a06bade6a931f47c1ab98d2952.sol(47)

[33mWarning[0m for UnrestrictedWrite in contract 'Publisher':
    |
    |  function setDao( uint256 _dao ) isOwner public {
  > |    dao = _dao;
    |  }
    |
  at /unique_chucks/32/0xd3cf41315daf77a06bade6a931f47c1ab98d2952.sol(51)

[33mWarning[0m for UnrestrictedWrite in contract 'Publisher':
    |
    |  function setTreasury( address payable _treasury ) isOwner public {
  > |    treasury = _treasury;
    |  }
    |
  at /unique_chucks/32/0xd3cf41315daf77a06bade6a931f47c1ab98d2952.sol(55)

[33mWarning[0m for UnrestrictedWrite in contract 'Publisher':
    |
    |  function setMembership( address _contract ) isOwner public {
  > |    membership = Membership(_contract);
    |  }
    |
  at /unique_chucks/32/0xd3cf41315daf77a06bade6a931f47c1ab98d2952.sol(59)

[33mWarning[0m for UnrestrictedWrite in contract 'Publisher':
    |
    |  function setTokenFee( uint256 _fee ) isOwner public {
  > |    tokenFee = _fee;
    |  }
    |
  at /unique_chucks/32/0xd3cf41315daf77a06bade6a931f47c1ab98d2952.sol(63)

[33mWarning[0m for UnrestrictedWrite in contract 'Publisher':
    |
    |  function setToken( address _token ) isOwner public {
  > |    token = Token(_token);
    |  }
    |
  at /unique_chucks/32/0xd3cf41315daf77a06bade6a931f47c1ab98d2952.sol(67)