Processing contract: /unique_contracts/0x000c100050e98c91f9114fa5dd75ce6869bf4f53.sol:C10Token
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
java.io.IOException: Timeout for /tmp/binaries_souffle4351379295825313436/mustExplicit -j 1 -F /tmp/souffle-9e52d772-5151-445b-92a2-5df10be313e6 -D /tmp/souffle-9e52d772-5151-445b-92a2-5df10be313e6_OUT
	at ch.securify.analysis.AbstractDataflow.runCommand(AbstractDataflow.java:277)
	at ch.securify.analysis.AbstractDataflow.initDataflow(AbstractDataflow.java:169)
	at ch.securify.analysis.MustExplicitDataflow.<init>(MustExplicitDataflow.java:33)
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:33)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error in Securify
java.lang.RuntimeException
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:37)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error, skipping: /unique_contracts/0x000c100050e98c91f9114fa5dd75ce6869bf4f53.sol:C10Token
Processing contract: /unique_contracts/0x000c100050e98c91f9114fa5dd75ce6869bf4f53.sol:ERC20
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0x000c100050e98c91f9114fa5dd75ce6869bf4f53.sol:ERC20Burnable
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0x000c100050e98c91f9114fa5dd75ce6869bf4f53.sol:ERC20Detailed
Processing contract: /unique_contracts/0x000c100050e98c91f9114fa5dd75ce6869bf4f53.sol:IERC20
Processing contract: /unique_contracts/0x000c100050e98c91f9114fa5dd75ce6869bf4f53.sol:InvictusWhitelist
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0x000c100050e98c91f9114fa5dd75ce6869bf4f53.sol:MinterRole
Processing contract: /unique_contracts/0x000c100050e98c91f9114fa5dd75ce6869bf4f53.sol:Ownable
Processing contract: /unique_contracts/0x000c100050e98c91f9114fa5dd75ce6869bf4f53.sol:Pausable
Processing contract: /unique_contracts/0x000c100050e98c91f9114fa5dd75ce6869bf4f53.sol:PauserRole
Processing contract: /unique_contracts/0x000c100050e98c91f9114fa5dd75ce6869bf4f53.sol:Roles
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0x000c100050e98c91f9114fa5dd75ce6869bf4f53.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0x000c100050e98c91f9114fa5dd75ce6869bf4f53.sol:WhitelistAdminRole
Processing contract: /unique_contracts/0x000c100050e98c91f9114fa5dd75ce6869bf4f53.sol:WhitelistedRole
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[33mWarning[0m for UnrestrictedWrite in contract 'ERC20Burnable':
    |        require(account != address(0));
    |
  > |        _totalSupply = _totalSupply.sub(value);
    |        _balances[account] = _balances[account].sub(value);
    |        emit Transfer(account, address(0), value);
  at /unique_contracts/0x000c100050e98c91f9114fa5dd75ce6869bf4f53.sol(313)

[33mWarning[0m for UnrestrictedWrite in contract 'InvictusWhitelist':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipTransferred(_owner, address(0));
  > |        _owner = address(0);
    |    }
    |
  at /unique_contracts/0x000c100050e98c91f9114fa5dd75ce6869bf4f53.sol(413)

[33mWarning[0m for UnrestrictedWrite in contract 'InvictusWhitelist':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_contracts/0x000c100050e98c91f9114fa5dd75ce6869bf4f53.sol(431)