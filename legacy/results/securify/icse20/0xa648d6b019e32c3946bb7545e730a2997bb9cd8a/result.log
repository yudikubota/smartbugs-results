Processing contract: /unique_chucks/32/0xa648d6b019e32c3946bb7545e730a2997bb9cd8a.sol:ERC20
Processing contract: /unique_chucks/32/0xa648d6b019e32c3946bb7545e730a2997bb9cd8a.sol:MultiSign
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/32/0xa648d6b019e32c3946bb7545e730a2997bb9cd8a.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[33mWarning[0m for UnrestrictedWrite in contract 'MultiSign':
    |    function proposal (address _to, address _tokenContractAddress, uint256 _amount) public returns (uint256 id) {
    |        require(msg.sender == Foundation || msg.sender == ThirdParty);
  > |        ProposalID = ProposalID.add(1);
    |        Proposals[ProposalID] = Proposal(ProposalID, _to, false, _tokenContractAddress, _amount, 0, 0);
    |        return id;
  at /unique_chucks/32/0xa648d6b019e32c3946bb7545e730a2997bb9cd8a.sol(52)

[33mWarning[0m for UnrestrictedWrite in contract 'MultiSign':
    |        require(msg.sender == Foundation || msg.sender == ThirdParty);
    |        ProposalID = ProposalID.add(1);
  > |        Proposals[ProposalID] = Proposal(ProposalID, _to, false, _tokenContractAddress, _amount, 0, 0);
    |        return id;
    |    }
  at /unique_chucks/32/0xa648d6b019e32c3946bb7545e730a2997bb9cd8a.sol(53)