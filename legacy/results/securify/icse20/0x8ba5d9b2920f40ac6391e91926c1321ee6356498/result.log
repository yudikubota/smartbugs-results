Processing contract: /unique_chucks/14/0x8ba5d9b2920f40ac6391e91926c1321ee6356498.sol:ApproveAndCallFallBack
Processing contract: /unique_chucks/14/0x8ba5d9b2920f40ac6391e91926c1321ee6356498.sol:ERC20Interface
Processing contract: /unique_chucks/14/0x8ba5d9b2920f40ac6391e91926c1321ee6356498.sol:Owned
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/14/0x8ba5d9b2920f40ac6391e91926c1321ee6356498.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/14/0x8ba5d9b2920f40ac6391e91926c1321ee6356498.sol:fubicai
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for MissingInputValidation in contract 'Owned':
    |    }
    |
  > |    function transferOwner(address _newOwner) public onlyOwner {
    |        newOwner = _newOwner;
    |    }
  at /unique_chucks/14/0x8ba5d9b2920f40ac6391e91926c1321ee6356498.sol(53)

[33mWarning[0m for UnrestrictedWrite in contract 'Owned':
    |
    |    function transferOwner(address _newOwner) public onlyOwner {
  > |        newOwner = _newOwner;
    |    }
    |    function acceptOwnership() public {
  at /unique_chucks/14/0x8ba5d9b2920f40ac6391e91926c1321ee6356498.sol(54)

[33mWarning[0m for UnrestrictedWrite in contract 'Owned':
    |        require(msg.sender == newOwner);
    |        emit OwnershipTransferred(owner, newOwner);
  > |        owner = newOwner;
    |        newOwner = address(0);
    |    }
  at /unique_chucks/14/0x8ba5d9b2920f40ac6391e91926c1321ee6356498.sol(59)

[33mWarning[0m for UnrestrictedWrite in contract 'Owned':
    |        emit OwnershipTransferred(owner, newOwner);
    |        owner = newOwner;
  > |        newOwner = address(0);
    |    }
    |}
  at /unique_chucks/14/0x8ba5d9b2920f40ac6391e91926c1321ee6356498.sol(60)

[31mViolation[0m for LockedEther in contract 'fubicai':
    |}
    |
  > |contract fubicai is ERC20Interface, Owned {
    |    using SafeMath for uint;
    |
  at /unique_chucks/14/0x8ba5d9b2920f40ac6391e91926c1321ee6356498.sol(64)

[31mViolation[0m for UnrestrictedWrite in contract 'fubicai':
    |    function transfer(address to, uint tokens) public returns (bool success) {
    |        balances[msg.sender] = balances[msg.sender].sub(tokens);
  > |        balances[to] = balances[to].add(tokens);
    |        emit Transfer(msg.sender, to, tokens);
    |        return true;
  at /unique_chucks/14/0x8ba5d9b2920f40ac6391e91926c1321ee6356498.sol(93)

[31mViolation[0m for UnrestrictedWrite in contract 'fubicai':
    |
    |    function transferFrom(address from, address to, uint tokens) public returns (bool success) {
  > |        balances[from] = balances[from].sub(tokens);
    |        allowed[from][msg.sender] = allowed[from][msg.sender].sub(tokens);
    |        balances[to] = balances[to].add(tokens);
  at /unique_chucks/14/0x8ba5d9b2920f40ac6391e91926c1321ee6356498.sol(105)

[31mViolation[0m for UnrestrictedWrite in contract 'fubicai':
    |        balances[from] = balances[from].sub(tokens);
    |        allowed[from][msg.sender] = allowed[from][msg.sender].sub(tokens);
  > |        balances[to] = balances[to].add(tokens);
    |        emit Transfer(from, to, tokens);
    |        return true;
  at /unique_chucks/14/0x8ba5d9b2920f40ac6391e91926c1321ee6356498.sol(107)

[33mWarning[0m for UnrestrictedWrite in contract 'fubicai':
    |
    |    function transferOwner(address _newOwner) public onlyOwner {
  > |        newOwner = _newOwner;
    |    }
    |    function acceptOwnership() public {
  at /unique_chucks/14/0x8ba5d9b2920f40ac6391e91926c1321ee6356498.sol(54)

[33mWarning[0m for UnrestrictedWrite in contract 'fubicai':
    |        require(msg.sender == newOwner);
    |        emit OwnershipTransferred(owner, newOwner);
  > |        owner = newOwner;
    |        newOwner = address(0);
    |    }
  at /unique_chucks/14/0x8ba5d9b2920f40ac6391e91926c1321ee6356498.sol(59)

[33mWarning[0m for UnrestrictedWrite in contract 'fubicai':
    |        emit OwnershipTransferred(owner, newOwner);
    |        owner = newOwner;
  > |        newOwner = address(0);
    |    }
    |}
  at /unique_chucks/14/0x8ba5d9b2920f40ac6391e91926c1321ee6356498.sol(60)

[33mWarning[0m for UnrestrictedWrite in contract 'fubicai':
    |        require( balances[msg.sender] >=tokens);
    |         balances[msg.sender] -= tokens;
  > |         _totalSupply -=tokens;
    |        return true;
    |    }
  at /unique_chucks/14/0x8ba5d9b2920f40ac6391e91926c1321ee6356498.sol(134)