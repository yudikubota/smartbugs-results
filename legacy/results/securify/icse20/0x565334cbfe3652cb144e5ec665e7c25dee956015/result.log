Processing contract: /unique_chucks/25/0x565334cbfe3652cb144e5ec665e7c25dee956015.sol:CompoundContract
Processing contract: /unique_chucks/25/0x565334cbfe3652cb144e5ec665e7c25dee956015.sol:CompoundPayroll
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/25/0x565334cbfe3652cb144e5ec665e7c25dee956015.sol:owned
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/25/0x565334cbfe3652cb144e5ec665e7c25dee956015.sol:token
[31mViolation[0m for RepeatedCall in contract 'CompoundPayroll':
    |        compound.withdraw(daiAddress, totalToPay);
    |        
  > |        require(dai.balanceOf(address(this)) <= totalToPay);
    |        
    |        for (uint i = 1; i<payrollLength-1; i++){
  at /unique_chucks/25/0x565334cbfe3652cb144e5ec665e7c25dee956015.sol(125)

[31mViolation[0m for RepeatedCall in contract 'CompoundPayroll':
    |        for (uint i = 1; i<payrollLength-1; i++){
    |            payroll[i].lastPaid = now;
  > |            dai.transfer(payroll[i].recipient, payments[i]);
    |            emit MemberPaid(payroll[i].recipient, payments[i]);
    |        }  
  at /unique_chucks/25/0x565334cbfe3652cb144e5ec665e7c25dee956015.sol(129)

[33mWarning[0m for TODAmount in contract 'CompoundPayroll':
    |                
    |        save();
  > |        msg.sender.transfer(msg.value);
    |    }
    |}
  at /unique_chucks/25/0x565334cbfe3652cb144e5ec665e7c25dee956015.sol(134)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'CompoundPayroll':
    |                
    |        save();
  > |        msg.sender.transfer(msg.value);
    |    }
    |}
  at /unique_chucks/25/0x565334cbfe3652cb144e5ec665e7c25dee956015.sol(134)

[31mViolation[0m for UnrestrictedWrite in contract 'CompoundPayroll':
    |    }
    |
  > |contract CompoundPayroll is owned {
    |    address compoundAddress = 0x3FDA67f7583380E67ef93072294a7fAc882FD7E7;
    |    address daiAddress = 0x89d24A6b4CcB1B6fAA2625fE562bDD9a23260359;
  at /unique_chucks/25/0x565334cbfe3652cb144e5ec665e7c25dee956015.sol(31)

[31mViolation[0m for UnrestrictedWrite in contract 'CompoundPayroll':
    |
    |        for (uint i = salaryId[recipient]; i<payroll.length-1; i++){
  > |            payroll[i] = payroll[i+1];
    |            salaryId[payroll[i].recipient] = i;
    |        }
  at /unique_chucks/25/0x565334cbfe3652cb144e5ec665e7c25dee956015.sol(81)

[31mViolation[0m for UnrestrictedWrite in contract 'CompoundPayroll':
    |        for (uint i = salaryId[recipient]; i<payroll.length-1; i++){
    |            payroll[i] = payroll[i+1];
  > |            salaryId[payroll[i].recipient] = i;
    |        }
    |        
  at /unique_chucks/25/0x565334cbfe3652cb144e5ec665e7c25dee956015.sol(82)

[31mViolation[0m for UnrestrictedWrite in contract 'CompoundPayroll':
    |        }
    |        
  > |        salaryId[recipient] = 0;
    |        delete payroll[payroll.length-1];
    |        payroll.length--;
  at /unique_chucks/25/0x565334cbfe3652cb144e5ec665e7c25dee956015.sol(85)

[31mViolation[0m for UnrestrictedWrite in contract 'CompoundPayroll':
    |        
    |        salaryId[recipient] = 0;
  > |        delete payroll[payroll.length-1];
    |        payroll.length--;
    |    }
  at /unique_chucks/25/0x565334cbfe3652cb144e5ec665e7c25dee956015.sol(86)

[31mViolation[0m for UnrestrictedWrite in contract 'CompoundPayroll':
    |        require(amount > 0);
    |        compound.withdraw(daiAddress, amount);
  > |        payroll[salaryId[recipient]].lastPaid = now;
    |        emit MemberPaid( recipient,  amount);
    |        
  at /unique_chucks/25/0x565334cbfe3652cb144e5ec665e7c25dee956015.sol(104)

[31mViolation[0m for UnrestrictedWrite in contract 'CompoundPayroll':
    |        
    |        for (uint i = 1; i<payrollLength-1; i++){
  > |            payroll[i].lastPaid = now;
    |            dai.transfer(payroll[i].recipient, payments[i]);
    |            emit MemberPaid(payroll[i].recipient, payments[i]);
  at /unique_chucks/25/0x565334cbfe3652cb144e5ec665e7c25dee956015.sol(128)

[33mWarning[0m for UnrestrictedWrite in contract 'CompoundPayroll':
    |
    |        function transferOwnership(address newOwner) onlyOwner public {
  > |            owner = newOwner;
    |        }
    |    }
  at /unique_chucks/25/0x565334cbfe3652cb144e5ec665e7c25dee956015.sol(27)

[33mWarning[0m for UnrestrictedWrite in contract 'CompoundPayroll':
    |    }
    |
  > |contract CompoundPayroll is owned {
    |    address compoundAddress = 0x3FDA67f7583380E67ef93072294a7fAc882FD7E7;
    |    address daiAddress = 0x89d24A6b4CcB1B6fAA2625fE562bDD9a23260359;
  at /unique_chucks/25/0x565334cbfe3652cb144e5ec665e7c25dee956015.sol(31)

[33mWarning[0m for UnrestrictedWrite in contract 'CompoundPayroll':
    |        uint id = salaryId[recipient];
    |        if (id == 0) {
  > |            salaryId[recipient] = payroll.length;
    |            id = payroll.length++;
    |        }
  at /unique_chucks/25/0x565334cbfe3652cb144e5ec665e7c25dee956015.sol(66)

[33mWarning[0m for UnrestrictedWrite in contract 'CompoundPayroll':
    |            id = payroll.length++;
    |        }
  > |        payroll[id] = Salary({
    |            recipient: recipient, 
    |            payRate: yearlyPay / 365.25 days, 
  at /unique_chucks/25/0x565334cbfe3652cb144e5ec665e7c25dee956015.sol(69)

[31mViolation[0m for MissingInputValidation in contract 'owned':
    |        }
    |
  > |        function transferOwnership(address newOwner) onlyOwner public {
    |            owner = newOwner;
    |        }
  at /unique_chucks/25/0x565334cbfe3652cb144e5ec665e7c25dee956015.sol(26)

[33mWarning[0m for UnrestrictedWrite in contract 'owned':
    |
    |        function transferOwnership(address newOwner) onlyOwner public {
  > |            owner = newOwner;
    |        }
    |    }
  at /unique_chucks/25/0x565334cbfe3652cb144e5ec665e7c25dee956015.sol(27)