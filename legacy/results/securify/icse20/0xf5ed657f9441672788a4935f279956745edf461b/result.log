Processing contract: /unique_chucks/18/0xf5ed657f9441672788a4935f279956745edf461b.sol:BatchTransferEtherAndVoken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/18/0xf5ed657f9441672788a4935f279956745edf461b.sol:IERC20
Processing contract: /unique_chucks/18/0xf5ed657f9441672788a4935f279956745edf461b.sol:Ownable
Processing contract: /unique_chucks/18/0xf5ed657f9441672788a4935f279956745edf461b.sol:SafeMath256
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[33mWarning[0m for LockedEther in contract 'BatchTransferEtherAndVoken':
    | * @title Batch Transfer Ether And Voken
    | */
  > |contract BatchTransferEtherAndVoken is Ownable{
    |    using SafeMath256 for uint256;
    |    
  at /unique_chucks/18/0xf5ed657f9441672788a4935f279956745edf461b.sol(109)

[31mViolation[0m for RepeatedCall in contract 'BatchTransferEtherAndVoken':
    |
    |        for (uint256 i = 0; i < accounts.length; i++) {
  > |            accounts[i].transfer(etherValue);
    |            assert(VOKEN.transferFrom(msg.sender, accounts[i], vokenValue));
    |        }
  at /unique_chucks/18/0xf5ed657f9441672788a4935f279956745edf461b.sol(125)

[31mViolation[0m for RepeatedCall in contract 'BatchTransferEtherAndVoken':
    |        for (uint256 i = 0; i < accounts.length; i++) {
    |            accounts[i].transfer(etherValue);
  > |            assert(VOKEN.transferFrom(msg.sender, accounts[i], vokenValue));
    |        }
    |    }
  at /unique_chucks/18/0xf5ed657f9441672788a4935f279956745edf461b.sol(126)

[31mViolation[0m for RepeatedCall in contract 'BatchTransferEtherAndVoken':
    |
    |        for (uint256 i = 0; i < accounts.length; i++) {
  > |            accounts[i].transfer(etherValue);
    |        }
    |    }
  at /unique_chucks/18/0xf5ed657f9441672788a4935f279956745edf461b.sol(139)

[31mViolation[0m for RepeatedCall in contract 'BatchTransferEtherAndVoken':
    |
    |        for (uint256 i = 0; i < accounts.length; i++) {
  > |            assert(VOKEN.transferFrom(msg.sender, accounts[i], vokenValue));
    |        }
    |    }
  at /unique_chucks/18/0xf5ed657f9441672788a4935f279956745edf461b.sol(152)

[33mWarning[0m for TODAmount in contract 'BatchTransferEtherAndVoken':
    |
    |        for (uint256 i = 0; i < accounts.length; i++) {
  > |            accounts[i].transfer(etherValue);
    |            assert(VOKEN.transferFrom(msg.sender, accounts[i], vokenValue));
    |        }
  at /unique_chucks/18/0xf5ed657f9441672788a4935f279956745edf461b.sol(125)

[33mWarning[0m for TODAmount in contract 'BatchTransferEtherAndVoken':
    |
    |        for (uint256 i = 0; i < accounts.length; i++) {
  > |            accounts[i].transfer(etherValue);
    |        }
    |    }
  at /unique_chucks/18/0xf5ed657f9441672788a4935f279956745edf461b.sol(139)

[33mWarning[0m for TODReceiver in contract 'BatchTransferEtherAndVoken':
    |
    |        for (uint256 i = 0; i < accounts.length; i++) {
  > |            accounts[i].transfer(etherValue);
    |            assert(VOKEN.transferFrom(msg.sender, accounts[i], vokenValue));
    |        }
  at /unique_chucks/18/0xf5ed657f9441672788a4935f279956745edf461b.sol(125)

[33mWarning[0m for TODReceiver in contract 'BatchTransferEtherAndVoken':
    |
    |        for (uint256 i = 0; i < accounts.length; i++) {
  > |            accounts[i].transfer(etherValue);
    |        }
    |    }
  at /unique_chucks/18/0xf5ed657f9441672788a4935f279956745edf461b.sol(139)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'BatchTransferEtherAndVoken':
    |
    |        for (uint256 i = 0; i < accounts.length; i++) {
  > |            accounts[i].transfer(etherValue);
    |            assert(VOKEN.transferFrom(msg.sender, accounts[i], vokenValue));
    |        }
  at /unique_chucks/18/0xf5ed657f9441672788a4935f279956745edf461b.sol(125)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'BatchTransferEtherAndVoken':
    |
    |        for (uint256 i = 0; i < accounts.length; i++) {
  > |            accounts[i].transfer(etherValue);
    |        }
    |    }
  at /unique_chucks/18/0xf5ed657f9441672788a4935f279956745edf461b.sol(139)

[33mWarning[0m for UnrestrictedWrite in contract 'BatchTransferEtherAndVoken':
    |        require(newOwner != address(0));
    |        address __previousOwner = _owner;
  > |        _owner = newOwner;
    |        emit OwnershipTransferred(__previousOwner, newOwner);
    |    }
  at /unique_chucks/18/0xf5ed657f9441672788a4935f279956745edf461b.sol(72)