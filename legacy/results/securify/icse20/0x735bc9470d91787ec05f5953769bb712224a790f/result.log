Processing contract: /unique_chucks/21/0x735bc9470d91787ec05f5953769bb712224a790f.sol:ERC20
Processing contract: /unique_chucks/21/0x735bc9470d91787ec05f5953769bb712224a790f.sol:ERC20Basic
Processing contract: /unique_chucks/21/0x735bc9470d91787ec05f5953769bb712224a790f.sol:MultiSend
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[33mWarning[0m for MissingInputValidation in contract 'MultiSend':
    |
    |contract MultiSend {
  > |  function multiSend(address _token, address[] memory addresses, uint amount) public {
    |    ERC20 token = ERC20(_token);
    |    for(uint i = 0; i < addresses.length; i++) {
  at /unique_chucks/21/0x735bc9470d91787ec05f5953769bb712224a790f.sol(28)

[33mWarning[0m for MissingInputValidation in contract 'MultiSend':
    |  }
    |  
  > |  function multiSendEth(address payable[] memory addresses, uint[] memory values) public payable {
    |    for(uint i = 0; i < addresses.length; i++) {
    |      addresses[i].transfer(values[i]);
  at /unique_chucks/21/0x735bc9470d91787ec05f5953769bb712224a790f.sol(35)

[33mWarning[0m for MissingInputValidation in contract 'MultiSend':
    |  }
    |  
  > |  function multiSendEthEqual(address payable[] memory addresses, uint amount) public payable {
    |    for(uint i = 0; i < addresses.length; i++) {
    |      addresses[i].transfer(amount);
  at /unique_chucks/21/0x735bc9470d91787ec05f5953769bb712224a790f.sol(42)

[31mViolation[0m for RepeatedCall in contract 'MultiSend':
    |    ERC20 token = ERC20(_token);
    |    for(uint i = 0; i < addresses.length; i++) {
  > |      require(token.transferFrom(msg.sender, addresses[i], amount));
    |    }
    |  }
  at /unique_chucks/21/0x735bc9470d91787ec05f5953769bb712224a790f.sol(31)

[31mViolation[0m for RepeatedCall in contract 'MultiSend':
    |  function multiSendEth(address payable[] memory addresses, uint[] memory values) public payable {
    |    for(uint i = 0; i < addresses.length; i++) {
  > |      addresses[i].transfer(values[i]);
    |    }
    |    msg.sender.transfer(address(this).balance);
  at /unique_chucks/21/0x735bc9470d91787ec05f5953769bb712224a790f.sol(37)

[31mViolation[0m for RepeatedCall in contract 'MultiSend':
    |      addresses[i].transfer(values[i]);
    |    }
  > |    msg.sender.transfer(address(this).balance);
    |  }
    |  
  at /unique_chucks/21/0x735bc9470d91787ec05f5953769bb712224a790f.sol(39)

[31mViolation[0m for RepeatedCall in contract 'MultiSend':
    |  function multiSendEthEqual(address payable[] memory addresses, uint amount) public payable {
    |    for(uint i = 0; i < addresses.length; i++) {
  > |      addresses[i].transfer(amount);
    |    }
    |    msg.sender.transfer(address(this).balance);
  at /unique_chucks/21/0x735bc9470d91787ec05f5953769bb712224a790f.sol(44)

[31mViolation[0m for RepeatedCall in contract 'MultiSend':
    |      addresses[i].transfer(amount);
    |    }
  > |    msg.sender.transfer(address(this).balance);
    |  }
    |}
  at /unique_chucks/21/0x735bc9470d91787ec05f5953769bb712224a790f.sol(46)

[31mViolation[0m for TODAmount in contract 'MultiSend':
    |      addresses[i].transfer(values[i]);
    |    }
  > |    msg.sender.transfer(address(this).balance);
    |  }
    |  
  at /unique_chucks/21/0x735bc9470d91787ec05f5953769bb712224a790f.sol(39)

[31mViolation[0m for TODAmount in contract 'MultiSend':
    |      addresses[i].transfer(amount);
    |    }
  > |    msg.sender.transfer(address(this).balance);
    |  }
    |}
  at /unique_chucks/21/0x735bc9470d91787ec05f5953769bb712224a790f.sol(46)

[33mWarning[0m for TODAmount in contract 'MultiSend':
    |  function multiSendEth(address payable[] memory addresses, uint[] memory values) public payable {
    |    for(uint i = 0; i < addresses.length; i++) {
  > |      addresses[i].transfer(values[i]);
    |    }
    |    msg.sender.transfer(address(this).balance);
  at /unique_chucks/21/0x735bc9470d91787ec05f5953769bb712224a790f.sol(37)

[33mWarning[0m for TODAmount in contract 'MultiSend':
    |  function multiSendEthEqual(address payable[] memory addresses, uint amount) public payable {
    |    for(uint i = 0; i < addresses.length; i++) {
  > |      addresses[i].transfer(amount);
    |    }
    |    msg.sender.transfer(address(this).balance);
  at /unique_chucks/21/0x735bc9470d91787ec05f5953769bb712224a790f.sol(44)

[33mWarning[0m for TODReceiver in contract 'MultiSend':
    |  function multiSendEth(address payable[] memory addresses, uint[] memory values) public payable {
    |    for(uint i = 0; i < addresses.length; i++) {
  > |      addresses[i].transfer(values[i]);
    |    }
    |    msg.sender.transfer(address(this).balance);
  at /unique_chucks/21/0x735bc9470d91787ec05f5953769bb712224a790f.sol(37)

[33mWarning[0m for TODReceiver in contract 'MultiSend':
    |  function multiSendEthEqual(address payable[] memory addresses, uint amount) public payable {
    |    for(uint i = 0; i < addresses.length; i++) {
  > |      addresses[i].transfer(amount);
    |    }
    |    msg.sender.transfer(address(this).balance);
  at /unique_chucks/21/0x735bc9470d91787ec05f5953769bb712224a790f.sol(44)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'MultiSend':
    |  function multiSendEth(address payable[] memory addresses, uint[] memory values) public payable {
    |    for(uint i = 0; i < addresses.length; i++) {
  > |      addresses[i].transfer(values[i]);
    |    }
    |    msg.sender.transfer(address(this).balance);
  at /unique_chucks/21/0x735bc9470d91787ec05f5953769bb712224a790f.sol(37)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'MultiSend':
    |      addresses[i].transfer(values[i]);
    |    }
  > |    msg.sender.transfer(address(this).balance);
    |  }
    |  
  at /unique_chucks/21/0x735bc9470d91787ec05f5953769bb712224a790f.sol(39)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'MultiSend':
    |  function multiSendEthEqual(address payable[] memory addresses, uint amount) public payable {
    |    for(uint i = 0; i < addresses.length; i++) {
  > |      addresses[i].transfer(amount);
    |    }
    |    msg.sender.transfer(address(this).balance);
  at /unique_chucks/21/0x735bc9470d91787ec05f5953769bb712224a790f.sol(44)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'MultiSend':
    |      addresses[i].transfer(amount);
    |    }
  > |    msg.sender.transfer(address(this).balance);
    |  }
    |}
  at /unique_chucks/21/0x735bc9470d91787ec05f5953769bb712224a790f.sol(46)