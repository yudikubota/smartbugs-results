Processing contract: /unique_chucks/38/0x1f69824fe3723aae8d4d03f4ff4081187b58bf90.sol:Cremanon
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
java.io.IOException: Timeout for /tmp/binaries_souffle1479738614304782612/mustExplicit -j 2 -F /tmp/souffle-82793e05-cc41-43fc-a8f6-743eb10dc02f -D /tmp/souffle-82793e05-cc41-43fc-a8f6-743eb10dc02f_OUT
	at ch.securify.analysis.AbstractDataflow.runCommand(AbstractDataflow.java:277)
	at ch.securify.analysis.AbstractDataflow.initDataflow(AbstractDataflow.java:169)
	at ch.securify.analysis.MustExplicitDataflow.<init>(MustExplicitDataflow.java:33)
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:33)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error in Securify
java.lang.RuntimeException
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:37)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error, skipping: /unique_chucks/38/0x1f69824fe3723aae8d4d03f4ff4081187b58bf90.sol:Cremanon
Processing contract: /unique_chucks/38/0x1f69824fe3723aae8d4d03f4ff4081187b58bf90.sol:CremanonToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/38/0x1f69824fe3723aae8d4d03f4ff4081187b58bf90.sol:ERC20
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/38/0x1f69824fe3723aae8d4d03f4ff4081187b58bf90.sol:IERC20
Processing contract: /unique_chucks/38/0x1f69824fe3723aae8d4d03f4ff4081187b58bf90.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for LockedEther in contract 'CremanonToken':
    |// File: contracts\CremanonToken.sol
    |
  > |contract CremanonToken is ERC20 {
    |    string public name = ""; // solium-disable-line uppercase
    |    string public symbol = ""; // solium-disable-line uppercase
  at /unique_chucks/38/0x1f69824fe3723aae8d4d03f4ff4081187b58bf90.sol(416)

[33mWarning[0m for UnrestrictedWrite in contract 'CremanonToken':
    |        require(account != address(0), "ERC20: mint to the zero address");
    |
  > |        _totalSupply = _totalSupply.add(amount);
    |        _balances[account] = _balances[account].add(amount);
    |        emit Transfer(address(0), account, amount);
  at /unique_chucks/38/0x1f69824fe3723aae8d4d03f4ff4081187b58bf90.sol(357)

[33mWarning[0m for UnrestrictedWrite in contract 'CremanonToken':
    |        require(account != address(0), "ERC20: burn from the zero address");
    |
  > |        _totalSupply = _totalSupply.sub(value);
    |        _balances[account] = _balances[account].sub(value);
    |        emit Transfer(account, address(0), value);
  at /unique_chucks/38/0x1f69824fe3723aae8d4d03f4ff4081187b58bf90.sol(376)

[33mWarning[0m for UnrestrictedWrite in contract 'CremanonToken':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipRenounced(owner);
  > |        owner = address(0);
    |    }
    |
  at /unique_chucks/38/0x1f69824fe3723aae8d4d03f4ff4081187b58bf90.sol(452)

[33mWarning[0m for UnrestrictedWrite in contract 'CremanonToken':
    |        require(_newOwner != address(0), "Already owner");
    |        emit OwnershipTransferred(owner, _newOwner);
  > |        owner = _newOwner;
    |    }
    |
  at /unique_chucks/38/0x1f69824fe3723aae8d4d03f4ff4081187b58bf90.sol(470)

[33mWarning[0m for UnrestrictedWrite in contract 'CremanonToken':
    |        require(_newCrc != address(0), "Invalid Address");
    |        emit CrcTransferred(crc, _newCrc);
  > |        crc = _newCrc;
    |    }
    |    
  at /unique_chucks/38/0x1f69824fe3723aae8d4d03f4ff4081187b58bf90.sol(484)