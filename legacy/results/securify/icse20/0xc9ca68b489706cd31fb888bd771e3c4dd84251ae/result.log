Processing contract: /unique_chucks/9/0xc9ca68b489706cd31fb888bd771e3c4dd84251ae.sol:Ownable
Processing contract: /unique_chucks/9/0xc9ca68b489706cd31fb888bd771e3c4dd84251ae.sol:Pausable
Processing contract: /unique_chucks/9/0xc9ca68b489706cd31fb888bd771e3c4dd84251ae.sol:PauserRole
Processing contract: /unique_chucks/9/0xc9ca68b489706cd31fb888bd771e3c4dd84251ae.sol:ProofBox
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/9/0xc9ca68b489706cd31fb888bd771e3c4dd84251ae.sol:Roles
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for LockedEther in contract 'ProofBox':
    |
    |/** @title ProofBox. */
  > |contract ProofBox is Ownable, Pausable {
    |
    |    struct Device {
  at /unique_chucks/9/0xc9ca68b489706cd31fb888bd771e3c4dd84251ae.sol(209)

[31mViolation[0m for UnrestrictedWrite in contract 'ProofBox':
    |
    |/**
  > | * @title Ownable
    | * @dev The Ownable contract has an owner address, and provides basic authorization control
    | * functions, this simplifies the implementation of "user permissions".
  at /unique_chucks/9/0xc9ca68b489706cd31fb888bd771e3c4dd84251ae.sol(4)

[31mViolation[0m for UnrestrictedWrite in contract 'ProofBox':
    |
    |/** @title ProofBox. */
  > |contract ProofBox is Ownable, Pausable {
    |
    |    struct Device {
  at /unique_chucks/9/0xc9ca68b489706cd31fb888bd771e3c4dd84251ae.sol(209)

[31mViolation[0m for UnrestrictedWrite in contract 'ProofBox':
    |            address signer = ecrecover(_message, _v, _r, _s);
    |
  > |            deviceMap[_deviceId].deviceOwner = signer;
    |            deviceMap[_deviceId].txOriginator = signer;
    |            deviceMap[_deviceId].index = deviceIds.push(_deviceId)-1;
  at /unique_chucks/9/0xc9ca68b489706cd31fb888bd771e3c4dd84251ae.sol(366)

[31mViolation[0m for UnrestrictedWrite in contract 'ProofBox':
    |
    |            deviceMap[_deviceId].deviceOwner = signer;
  > |            deviceMap[_deviceId].txOriginator = signer;
    |            deviceMap[_deviceId].index = deviceIds.push(_deviceId)-1;
    |
  at /unique_chucks/9/0xc9ca68b489706cd31fb888bd771e3c4dd84251ae.sol(367)

[31mViolation[0m for UnrestrictedWrite in contract 'ProofBox':
    |            deviceMap[_deviceId].deviceOwner = signer;
    |            deviceMap[_deviceId].txOriginator = signer;
  > |            deviceMap[_deviceId].index = deviceIds.push(_deviceId)-1;
    |
    |            emit deviceCreated(_deviceId, signer);
  at /unique_chucks/9/0xc9ca68b489706cd31fb888bd771e3c4dd84251ae.sol(368)

[31mViolation[0m for UnrestrictedWrite in contract 'ProofBox':
    |                uint rowToDelete = deviceMap[_deviceId].index;
    |                bytes32 keyToMove = deviceIds[deviceIds.length-1];
  > |                deviceIds[rowToDelete] = keyToMove;
    |                deviceMap[keyToMove].index = rowToDelete;
    |                deviceIds.length--;
  at /unique_chucks/9/0xc9ca68b489706cd31fb888bd771e3c4dd84251ae.sol(393)

[31mViolation[0m for UnrestrictedWrite in contract 'ProofBox':
    |                bytes32 keyToMove = deviceIds[deviceIds.length-1];
    |                deviceIds[rowToDelete] = keyToMove;
  > |                deviceMap[keyToMove].index = rowToDelete;
    |                deviceIds.length--;
    |
  at /unique_chucks/9/0xc9ca68b489706cd31fb888bd771e3c4dd84251ae.sol(394)

[31mViolation[0m for UnrestrictedWrite in contract 'ProofBox':
    |            address signer = ecrecover(_message, _v, _r, _s);
    |
  > |            deviceMap[_deviceId].txOriginator=signer;
    |
    |            emit txnCreated(_deviceId, signer);
  at /unique_chucks/9/0xc9ca68b489706cd31fb888bd771e3c4dd84251ae.sol(415)

[31mViolation[0m for UnrestrictedWrite in contract 'ProofBox':
    |                require(deviceMap[_deviceId].txOriginator == newOwner);
    |
  > |                deviceMap[_deviceId].deviceOwner=newOwner;
    |
    |                emit deviceTransfer(_deviceId, signer, deviceMap[_deviceId].deviceOwner);
  at /unique_chucks/9/0xc9ca68b489706cd31fb888bd771e3c4dd84251ae.sol(439)

[31mViolation[0m for UnrestrictedWrite in contract 'ProofBox':
    |             address signer = ecrecover(_message, _v, _r, _s);
    |
  > |             deviceMap[_deviceId].txOriginator=signer;
    |
    |             emit txnCreated(_deviceId, signer);
  at /unique_chucks/9/0xc9ca68b489706cd31fb888bd771e3c4dd84251ae.sol(478)

[31mViolation[0m for UnrestrictedWrite in contract 'ProofBox':
    |
    |                  address signer = ecrecover(_message, _v, _r, _s);
  > |                  deviceMap[_deviceId].txOriginator=signer;
    |                  require(deviceMap[_deviceId].deviceOwner == signer);
    |
  at /unique_chucks/9/0xc9ca68b489706cd31fb888bd771e3c4dd84251ae.sol(498)

[33mWarning[0m for UnrestrictedWrite in contract 'ProofBox':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipTransferred(_owner, address(0));
  > |        _owner = address(0);
    |    }
    |
  at /unique_chucks/9/0xc9ca68b489706cd31fb888bd771e3c4dd84251ae.sol(53)

[33mWarning[0m for UnrestrictedWrite in contract 'ProofBox':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_chucks/9/0xc9ca68b489706cd31fb888bd771e3c4dd84251ae.sol(71)

[33mWarning[0m for UnrestrictedWrite in contract 'ProofBox':
    |     */
    |    function pause() public onlyPauser whenNotPaused {
  > |        _paused = true;
    |        emit Paused(msg.sender);
    |    }
  at /unique_chucks/9/0xc9ca68b489706cd31fb888bd771e3c4dd84251ae.sol(195)

[33mWarning[0m for UnrestrictedWrite in contract 'ProofBox':
    |     */
    |    function unpause() public onlyPauser whenPaused {
  > |        _paused = false;
    |        emit Unpaused(msg.sender);
    |    }
  at /unique_chucks/9/0xc9ca68b489706cd31fb888bd771e3c4dd84251ae.sol(203)

[33mWarning[0m for UnrestrictedWrite in contract 'ProofBox':
    |            onlyOwner() {
    |
  > |              authorized[target] = isAuthorized;
    |    }
    |
  at /unique_chucks/9/0xc9ca68b489706cd31fb888bd771e3c4dd84251ae.sol(526)