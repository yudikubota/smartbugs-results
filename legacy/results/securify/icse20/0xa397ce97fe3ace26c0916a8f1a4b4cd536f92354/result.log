Processing contract: /unique_chucks/5/0xa397ce97fe3ace26c0916a8f1a4b4cd536f92354.sol:IERC20
Processing contract: /unique_chucks/5/0xa397ce97fe3ace26c0916a8f1a4b4cd536f92354.sol:IxtEvents
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/5/0xa397ce97fe3ace26c0916a8f1a4b4cd536f92354.sol:IxtProtect
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/5/0xa397ce97fe3ace26c0916a8f1a4b4cd536f92354.sol:Ownable
Processing contract: /unique_chucks/5/0xa397ce97fe3ace26c0916a8f1a4b4cd536f92354.sol:Pausable
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/5/0xa397ce97fe3ace26c0916a8f1a4b4cd536f92354.sol:PauserRole
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/5/0xa397ce97fe3ace26c0916a8f1a4b4cd536f92354.sol:RewardManager
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/5/0xa397ce97fe3ace26c0916a8f1a4b4cd536f92354.sol:RoleManager
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/5/0xa397ce97fe3ace26c0916a8f1a4b4cd536f92354.sol:Roles
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/5/0xa397ce97fe3ace26c0916a8f1a4b4cd536f92354.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/5/0xa397ce97fe3ace26c0916a8f1a4b4cd536f92354.sol:StakeManager
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/5/0xa397ce97fe3ace26c0916a8f1a4b4cd536f92354.sol:ValidatorRole
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for LockedEther in contract 'IxtProtect':
    |/// @title IxtProtect
    |/// @notice Holds state and contains key logic which controls the IXTProtect platform
  > |contract IxtProtect is IxtEvents, RoleManager, StakeManager, RewardManager {
    |
    |  /*      Function modifiers      */
  at /unique_chucks/5/0xa397ce97fe3ace26c0916a8f1a4b4cd536f92354.sol(521)

[31mViolation[0m for RepeatedCall in contract 'IxtProtect':
    |    if (stakeToRefund > 0 && userStaking) {
    |      require(
  > |        ixtToken.transfer(memberAddress, stakeToRefund),
    |        "Unable to withdraw this value of IXT."  
    |      );
  at /unique_chucks/5/0xa397ce97fe3ace26c0916a8f1a4b4cd536f92354.sol(955)

[31mViolation[0m for RepeatedCall in contract 'IxtProtect':
    |    );
    |    require(
  > |      ixtToken.transfer(memberAddress, rewardAmount),
    |      "Unable to withdraw this value of IXT."  
    |    );
  at /unique_chucks/5/0xa397ce97fe3ace26c0916a8f1a4b4cd536f92354.sol(991)

[33mWarning[0m for RepeatedCall in contract 'IxtProtect':
    |    /// @dev Refund the pool balance
    |    require(
  > |      ixtToken.transfer(msg.sender, totalPoolBalance),
    |      "Unable to withdraw this value of IXT."
    |    );
  at /unique_chucks/5/0xa397ce97fe3ace26c0916a8f1a4b4cd536f92354.sol(870)

[33mWarning[0m for UnrestrictedWrite in contract 'IxtProtect':
    |/// @title IxtProtect
    |/// @notice Holds state and contains key logic which controls the IXTProtect platform
  > |contract IxtProtect is IxtEvents, RoleManager, StakeManager, RewardManager {
    |
    |  /*      Function modifiers      */
  at /unique_chucks/5/0xa397ce97fe3ace26c0916a8f1a4b4cd536f92354.sol(521)

[33mWarning[0m for UnrestrictedWrite in contract 'IxtProtect':
    |      uint256 amountRefunded = memberJoined ? refundUserBalance(memberAddress) : 0;
    |
  > |      delete registeredInvitationCodes[members[memberAddress].invitationCode];
    |      delete members[memberAddress];
    |
  at /unique_chucks/5/0xa397ce97fe3ace26c0916a8f1a4b4cd536f92354.sol(861)

[33mWarning[0m for UnrestrictedWrite in contract 'IxtProtect':
    |
    |      delete registeredInvitationCodes[members[memberAddress].invitationCode];
  > |      delete members[memberAddress];
    |
    |      emit MemberDrained(memberAddress, amountRefunded);
  at /unique_chucks/5/0xa397ce97fe3ace26c0916a8f1a4b4cd536f92354.sol(862)

[33mWarning[0m for UnrestrictedWrite in contract 'IxtProtect':
    |      "Unable to withdraw this value of IXT."
    |    );
  > |    totalPoolBalance = 0;
    |    emit PoolDrained(msg.sender, totalPoolBalance);
    |    
  at /unique_chucks/5/0xa397ce97fe3ace26c0916a8f1a4b4cd536f92354.sol(873)

[33mWarning[0m for UnrestrictedWrite in contract 'IxtProtect':
    |      }
    |    }
  > |    loyaltyRewardAmount = newLoyaltyRewardAmount;
    |    emit LoyaltyRewardChanged(newLoyaltyRewardAmount);
    |  }
  at /unique_chucks/5/0xa397ce97fe3ace26c0916a8f1a4b4cd536f92354.sol(916)

[33mWarning[0m for UnrestrictedWrite in contract 'IxtProtect':
    |    for (uint256 index; index < membersArray.length; index++) {
    |      if (membersArray[index] == memberAddress) {
  > |        membersArray[index] = membersArray[membersArray.length - 1];
    |        membersArray[membersArray.length - 1] = address(0);
    |        membersArray.length -= 1;
  at /unique_chucks/5/0xa397ce97fe3ace26c0916a8f1a4b4cd536f92354.sol(968)

[33mWarning[0m for UnrestrictedWrite in contract 'IxtProtect':
    |      if (membersArray[index] == memberAddress) {
    |        membersArray[index] = membersArray[membersArray.length - 1];
  > |        membersArray[membersArray.length - 1] = address(0);
    |        membersArray.length -= 1;
    |        break;
  at /unique_chucks/5/0xa397ce97fe3ace26c0916a8f1a4b4cd536f92354.sol(969)

[33mWarning[0m for UnrestrictedWrite in contract 'Pausable':
    |  function add(Role storage role, address account) internal {
    |    require(account != address(0));
  > |    role.bearer[account] = true;
    |  }
    |
  at /unique_chucks/5/0xa397ce97fe3ace26c0916a8f1a4b4cd536f92354.sol(200)

[33mWarning[0m for UnrestrictedWrite in contract 'Pausable':
    |   */
    |  function pause() public onlyPauser whenNotPaused {
  > |    _paused = true;
    |    emit Paused();
    |  }
  at /unique_chucks/5/0xa397ce97fe3ace26c0916a8f1a4b4cd536f92354.sol(306)

[33mWarning[0m for UnrestrictedWrite in contract 'Pausable':
    |   */
    |  function unpause() public onlyPauser whenPaused {
  > |    _paused = false;
    |    emit Unpaused();
    |  }
  at /unique_chucks/5/0xa397ce97fe3ace26c0916a8f1a4b4cd536f92354.sol(314)

[33mWarning[0m for UnrestrictedWrite in contract 'PauserRole':
    |  function add(Role storage role, address account) internal {
    |    require(account != address(0));
  > |    role.bearer[account] = true;
    |  }
    |
  at /unique_chucks/5/0xa397ce97fe3ace26c0916a8f1a4b4cd536f92354.sol(200)

[33mWarning[0m for UnrestrictedWrite in contract 'RoleManager':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipTransferred(_owner, address(0));
  > |        _owner = address(0);
    |    }
    |
  at /unique_chucks/5/0xa397ce97fe3ace26c0916a8f1a4b4cd536f92354.sol(54)

[33mWarning[0m for UnrestrictedWrite in contract 'RoleManager':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_chucks/5/0xa397ce97fe3ace26c0916a8f1a4b4cd536f92354.sol(72)

[33mWarning[0m for UnrestrictedWrite in contract 'RoleManager':
    |  function add(Role storage role, address account) internal {
    |    require(account != address(0));
  > |    role.bearer[account] = true;
    |  }
    |
  at /unique_chucks/5/0xa397ce97fe3ace26c0916a8f1a4b4cd536f92354.sol(200)

[33mWarning[0m for UnrestrictedWrite in contract 'RoleManager':
    |   */
    |  function pause() public onlyPauser whenNotPaused {
  > |    _paused = true;
    |    emit Paused();
    |  }
  at /unique_chucks/5/0xa397ce97fe3ace26c0916a8f1a4b4cd536f92354.sol(306)

[33mWarning[0m for UnrestrictedWrite in contract 'RoleManager':
    |   */
    |  function unpause() public onlyPauser whenPaused {
  > |    _paused = false;
    |    emit Unpaused();
    |  }
  at /unique_chucks/5/0xa397ce97fe3ace26c0916a8f1a4b4cd536f92354.sol(314)

[33mWarning[0m for UnrestrictedWrite in contract 'ValidatorRole':
    |  function add(Role storage role, address account) internal {
    |    require(account != address(0));
  > |    role.bearer[account] = true;
    |  }
    |
  at /unique_chucks/5/0xa397ce97fe3ace26c0916a8f1a4b4cd536f92354.sol(200)