Processing contract: /unique_chucks/30/0xa562dc7657c333cac710175ae658ffa6f9414bbc.sol:BITFRIENDZ
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/30/0xa562dc7657c333cac710175ae658ffa6f9414bbc.sol:IERC20
Processing contract: /unique_chucks/30/0xa562dc7657c333cac710175ae658ffa6f9414bbc.sol:Owned
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/30/0xa562dc7657c333cac710175ae658ffa6f9414bbc.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for TODAmount in contract 'BITFRIENDZ':
    |    function endICO() public onlyOwner {
    |        _balances[msg.sender] = _balances[msg.sender].sub(_balances[address(this)]);
  > |        msg.sender.transfer(address(this).balance);
    |    }
    |    
  at /unique_chucks/30/0xa562dc7657c333cac710175ae658ffa6f9414bbc.sol(233)

[33mWarning[0m for UnrestrictedWrite in contract 'BITFRIENDZ':
    |    }
    |    function transferOwnership(address _newOwner) public onlyOwner {
  > |        newOwner = _newOwner;
    |    }
    |    function acceptOwnership() public {
  at /unique_chucks/30/0xa562dc7657c333cac710175ae658ffa6f9414bbc.sol(100)

[33mWarning[0m for UnrestrictedWrite in contract 'BITFRIENDZ':
    |    function acceptOwnership() public {
    |        require(msg.sender == newOwner);
  > |        owner = newOwner;
    |    }
    |}
  at /unique_chucks/30/0xa562dc7657c333cac710175ae658ffa6f9414bbc.sol(104)

[33mWarning[0m for UnrestrictedWrite in contract 'BITFRIENDZ':
    |        } else {
    |            _balances[msg.sender] = _balances[msg.sender].sub(value);
  > |            _balances[to] = _balances[to].add(value);
    |            emit Transfer(msg.sender, to, value);
    |            return true;
  at /unique_chucks/30/0xa562dc7657c333cac710175ae658ffa6f9414bbc.sol(165)

[33mWarning[0m for UnrestrictedWrite in contract 'BITFRIENDZ':
    |        require(value <= balanceOf(from));
    |        require(value <= allowance(from, to));
  > |        _balances[from] = _balances[from].sub(value);
    |        _balances[to] = _balances[to].add(value);
    |        _allowed[from][to] = _allowed[from][to].sub(value);
  at /unique_chucks/30/0xa562dc7657c333cac710175ae658ffa6f9414bbc.sol(182)

[33mWarning[0m for UnrestrictedWrite in contract 'BITFRIENDZ':
    |        require(value <= allowance(from, to));
    |        _balances[from] = _balances[from].sub(value);
  > |        _balances[to] = _balances[to].add(value);
    |        _allowed[from][to] = _allowed[from][to].sub(value);
    |        emit Transfer(from, to, value);
  at /unique_chucks/30/0xa562dc7657c333cac710175ae658ffa6f9414bbc.sol(183)

[33mWarning[0m for UnrestrictedWrite in contract 'BITFRIENDZ':
    |        _balances[from] = _balances[from].sub(value);
    |        _balances[to] = _balances[to].add(value);
  > |        _allowed[from][to] = _allowed[from][to].sub(value);
    |        emit Transfer(from, to, value);
    |        return true;
  at /unique_chucks/30/0xa562dc7657c333cac710175ae658ffa6f9414bbc.sol(184)

[33mWarning[0m for UnrestrictedWrite in contract 'BITFRIENDZ':
    |            revert();
    |        }
  > |        _balances[address(this)] = _balances[address(this)].sub(amount + bonus);
    |        _balances[msg.sender] = _balances[msg.sender].add(amount + bonus);
    |        emit Transfer(address(this), msg.sender, amount + bonus);
  at /unique_chucks/30/0xa562dc7657c333cac710175ae658ffa6f9414bbc.sol(205)

[33mWarning[0m for UnrestrictedWrite in contract 'BITFRIENDZ':
    |            revert();
    |        }
  > |        _balances[address(this)] = _balances[address(this)].sub(amount + bonus);
    |        _balances[msg.sender] = _balances[msg.sender].add(amount + bonus);
    |        emit Transfer(address(this), msg.sender, amount + bonus);
  at /unique_chucks/30/0xa562dc7657c333cac710175ae658ffa6f9414bbc.sol(226)

[33mWarning[0m for UnrestrictedWrite in contract 'BITFRIENDZ':
    |        require(_balances[msg.sender] >= amount);
    |        _balances[msg.sender] = _balances[msg.sender].sub(amount);
  > |        supply = supply.sub(amount);
    |        emit Transfer(msg.sender, address(0), amount);
    |    }
  at /unique_chucks/30/0xa562dc7657c333cac710175ae658ffa6f9414bbc.sol(239)

[31mViolation[0m for MissingInputValidation in contract 'Owned':
    |        _;
    |    }
  > |    function transferOwnership(address _newOwner) public onlyOwner {
    |        newOwner = _newOwner;
    |    }
  at /unique_chucks/30/0xa562dc7657c333cac710175ae658ffa6f9414bbc.sol(99)

[33mWarning[0m for UnrestrictedWrite in contract 'Owned':
    |    }
    |    function transferOwnership(address _newOwner) public onlyOwner {
  > |        newOwner = _newOwner;
    |    }
    |    function acceptOwnership() public {
  at /unique_chucks/30/0xa562dc7657c333cac710175ae658ffa6f9414bbc.sol(100)

[33mWarning[0m for UnrestrictedWrite in contract 'Owned':
    |    function acceptOwnership() public {
    |        require(msg.sender == newOwner);
  > |        owner = newOwner;
    |    }
    |}
  at /unique_chucks/30/0xa562dc7657c333cac710175ae658ffa6f9414bbc.sol(104)