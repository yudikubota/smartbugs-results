Processing contract: /unique_chucks/30/0xacbc1971af62f42ee1ed89bc79308828e6b044f1.sol:Donations
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/30/0xacbc1971af62f42ee1ed89bc79308828e6b044f1.sol:ERC20Interface
Processing contract: /unique_chucks/30/0xacbc1971af62f42ee1ed89bc79308828e6b044f1.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[33mWarning[0m for TODAmount in contract 'Donations':
    |        if(toSendETH > 0) {
    |            _balances[ETH][msg.sender] = 0;
  > |            msg.sender.transfer(toSendETH);
    |        }
    |    }
  at /unique_chucks/30/0xacbc1971af62f42ee1ed89bc79308828e6b044f1.sol(148)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'Donations':
    |        if(toSendETH > 0) {
    |            _balances[ETH][msg.sender] = 0;
  > |            msg.sender.transfer(toSendETH);
    |        }
    |    }
  at /unique_chucks/30/0xacbc1971af62f42ee1ed89bc79308828e6b044f1.sol(148)

[31mViolation[0m for UnrestrictedWrite in contract 'Donations':
    |        //if there is something on the contract, compute the difference between knight balances and the contract total amount
    |        if(balance > 0) {
  > |            _toDistribute[isHorse] = balance
    |            .sub(_balances[isHorse][knights["Safir"].ethAddress])
    |            .sub(_balances[isHorse][knights["Lucan"].ethAddress])
  at /unique_chucks/30/0xacbc1971af62f42ee1ed89bc79308828e6b044f1.sol(170)

[31mViolation[0m for UnrestrictedWrite in contract 'Donations':
    |        } else {
    |            //just to make sure, but can be removed
  > |            _toDistribute[isHorse] = 0;
    |        }
    |    }
  at /unique_chucks/30/0xacbc1971af62f42ee1ed89bc79308828e6b044f1.sol(180)

[31mViolation[0m for UnrestrictedWrite in contract 'Donations':
    |
    |            //all balances are augmented by the computed due
  > |            _balances[isHorse][knights["Safir"].ethAddress] = _balances[isHorse][knights["Safir"].ethAddress].add(dueSafir);
    |            _balances[isHorse][knights["Lucan"].ethAddress] = _balances[isHorse][knights["Lucan"].ethAddress].add(dueLucan);
    |            _balances[isHorse][knights["Lancelot"].ethAddress] = _balances[isHorse][knights["Lancelot"].ethAddress].add(dueLancelot);
  at /unique_chucks/30/0xacbc1971af62f42ee1ed89bc79308828e6b044f1.sol(203)

[31mViolation[0m for UnrestrictedWrite in contract 'Donations':
    |            //all balances are augmented by the computed due
    |            _balances[isHorse][knights["Safir"].ethAddress] = _balances[isHorse][knights["Safir"].ethAddress].add(dueSafir);
  > |            _balances[isHorse][knights["Lucan"].ethAddress] = _balances[isHorse][knights["Lucan"].ethAddress].add(dueLucan);
    |            _balances[isHorse][knights["Lancelot"].ethAddress] = _balances[isHorse][knights["Lancelot"].ethAddress].add(dueLancelot);
    |            _balances[isHorse][knights["YwainTheBastard"].ethAddress] = _balances[isHorse][knights["YwainTheBastard"].ethAddress].add(dueYwainTheBastard);
  at /unique_chucks/30/0xacbc1971af62f42ee1ed89bc79308828e6b044f1.sol(204)

[31mViolation[0m for UnrestrictedWrite in contract 'Donations':
    |            _balances[isHorse][knights["Safir"].ethAddress] = _balances[isHorse][knights["Safir"].ethAddress].add(dueSafir);
    |            _balances[isHorse][knights["Lucan"].ethAddress] = _balances[isHorse][knights["Lucan"].ethAddress].add(dueLucan);
  > |            _balances[isHorse][knights["Lancelot"].ethAddress] = _balances[isHorse][knights["Lancelot"].ethAddress].add(dueLancelot);
    |            _balances[isHorse][knights["YwainTheBastard"].ethAddress] = _balances[isHorse][knights["YwainTheBastard"].ethAddress].add(dueYwainTheBastard);
    |            //the 5th knight due is computed by substraction of the others to avoid dust error due to division
  at /unique_chucks/30/0xacbc1971af62f42ee1ed89bc79308828e6b044f1.sol(205)

[31mViolation[0m for UnrestrictedWrite in contract 'Donations':
    |            _balances[isHorse][knights["Lucan"].ethAddress] = _balances[isHorse][knights["Lucan"].ethAddress].add(dueLucan);
    |            _balances[isHorse][knights["Lancelot"].ethAddress] = _balances[isHorse][knights["Lancelot"].ethAddress].add(dueLancelot);
  > |            _balances[isHorse][knights["YwainTheBastard"].ethAddress] = _balances[isHorse][knights["YwainTheBastard"].ethAddress].add(dueYwainTheBastard);
    |            //the 5th knight due is computed by substraction of the others to avoid dust error due to division
    |            _balances[isHorse][knights["Hoel"].ethAddress] = _balances[isHorse][knights["Hoel"].ethAddress]
  at /unique_chucks/30/0xacbc1971af62f42ee1ed89bc79308828e6b044f1.sol(206)

[31mViolation[0m for UnrestrictedWrite in contract 'Donations':
    |            _balances[isHorse][knights["YwainTheBastard"].ethAddress] = _balances[isHorse][knights["YwainTheBastard"].ethAddress].add(dueYwainTheBastard);
    |            //the 5th knight due is computed by substraction of the others to avoid dust error due to division
  > |            _balances[isHorse][knights["Hoel"].ethAddress] = _balances[isHorse][knights["Hoel"].ethAddress]
    |            .add(_toDistribute[isHorse] - dueSafir - dueLucan - dueLancelot - dueYwainTheBastard);
    |            
  at /unique_chucks/30/0xacbc1971af62f42ee1ed89bc79308828e6b044f1.sol(208)

[31mViolation[0m for UnrestrictedWrite in contract 'Donations':
    |            
    |            //the amount to distribute is set to zero
  > |            _toDistribute[isHorse] = 0;
    |        }
    |    }
  at /unique_chucks/30/0xacbc1971af62f42ee1ed89bc79308828e6b044f1.sol(212)