Processing contract: /unique_chucks/4/0x2f41f7fc1d45749e0a7498c659d997a1f8fe9f46.sol:DEJToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/4/0x2f41f7fc1d45749e0a7498c659d997a1f8fe9f46.sol:Ownable
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/4/0x2f41f7fc1d45749e0a7498c659d997a1f8fe9f46.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/4/0x2f41f7fc1d45749e0a7498c659d997a1f8fe9f46.sol:StandardToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for LockedEther in contract 'DEJToken':
    |
    |
  > |contract DEJToken is StandardToken, Ownable {
    |    string public constant name = "DEHOME"; // Name of token 
    |    string public constant symbol = "DEJ"; // Symbol of token 
  at /unique_chucks/4/0x2f41f7fc1d45749e0a7498c659d997a1f8fe9f46.sol(218)

[33mWarning[0m for UnrestrictedWrite in contract 'DEJToken':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(owner, newOwner);
  > |        owner = newOwner;
    |    }
    |}
  at /unique_chucks/4/0x2f41f7fc1d45749e0a7498c659d997a1f8fe9f46.sol(91)

[31mViolation[0m for UnrestrictedWrite in contract 'Ownable':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(owner, newOwner);
  > |        owner = newOwner;
    |    }
    |}
  at /unique_chucks/4/0x2f41f7fc1d45749e0a7498c659d997a1f8fe9f46.sol(91)

[33mWarning[0m for UnrestrictedWrite in contract 'Ownable':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(owner, newOwner);
  > |        owner = newOwner;
    |    }
    |}
  at /unique_chucks/4/0x2f41f7fc1d45749e0a7498c659d997a1f8fe9f46.sol(91)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |        
    |        balances[msg.sender] = balances[msg.sender].sub(_value);
  > |        balances[_to] = balances[_to].add(_value);
    |        emit Transfer(msg.sender, _to, _value);
    |        return true;
  at /unique_chucks/4/0x2f41f7fc1d45749e0a7498c659d997a1f8fe9f46.sol(141)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |        require(_value <= allowed[_from][msg.sender]);
    |        
  > |        balances[_from] = balances[_from].sub(_value);
    |        balances[_to] = balances[_to].add(_value);
    |        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
  at /unique_chucks/4/0x2f41f7fc1d45749e0a7498c659d997a1f8fe9f46.sol(173)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |        
    |        balances[_from] = balances[_from].sub(_value);
  > |        balances[_to] = balances[_to].add(_value);
    |        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
    |        emit Transfer(_from, _to, _value);
  at /unique_chucks/4/0x2f41f7fc1d45749e0a7498c659d997a1f8fe9f46.sol(174)