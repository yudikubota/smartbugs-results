Processing contract: /unique_contracts/0x306e505030c5f76b60c9561e88b57d1de60fb9ed.sol:KodDeneg
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0x306e505030c5f76b60c9561e88b57d1de60fb9ed.sol:Owned
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0x306e505030c5f76b60c9561e88b57d1de60fb9ed.sol:Save
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for TODAmount in contract 'KodDeneg':
    |        require(now>=deadline && saves[msg.sender]>0);
    |        uint256 royalty = saves[msg.sender]*fee/100;
  > |        if (royalty>0) owner.transfer(royalty);
    |        msg.sender.transfer(saves[msg.sender]-royalty);
    |        return true;
  at /unique_contracts/0x306e505030c5f76b60c9561e88b57d1de60fb9ed.sol(41)

[31mViolation[0m for TODAmount in contract 'KodDeneg':
    |        uint256 royalty = saves[msg.sender]*fee/100;
    |        if (royalty>0) owner.transfer(royalty);
  > |        msg.sender.transfer(saves[msg.sender]-royalty);
    |        return true;
    |    }
  at /unique_contracts/0x306e505030c5f76b60c9561e88b57d1de60fb9ed.sol(42)

[31mViolation[0m for TODReceiver in contract 'KodDeneg':
    |        require(now>=deadline && saves[msg.sender]>0);
    |        uint256 royalty = saves[msg.sender]*fee/100;
  > |        if (royalty>0) owner.transfer(royalty);
    |        msg.sender.transfer(saves[msg.sender]-royalty);
    |        return true;
  at /unique_contracts/0x306e505030c5f76b60c9561e88b57d1de60fb9ed.sol(41)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'KodDeneg':
    |        require(now>=deadline && saves[msg.sender]>0);
    |        uint256 royalty = saves[msg.sender]*fee/100;
  > |        if (royalty>0) owner.transfer(royalty);
    |        msg.sender.transfer(saves[msg.sender]-royalty);
    |        return true;
  at /unique_contracts/0x306e505030c5f76b60c9561e88b57d1de60fb9ed.sol(41)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'KodDeneg':
    |        uint256 royalty = saves[msg.sender]*fee/100;
    |        if (royalty>0) owner.transfer(royalty);
  > |        msg.sender.transfer(saves[msg.sender]-royalty);
    |        return true;
    |    }
  at /unique_contracts/0x306e505030c5f76b60c9561e88b57d1de60fb9ed.sol(42)

[33mWarning[0m for UnrestrictedWrite in contract 'KodDeneg':
    |    function () payable external {
    |        require(msg.value>0);
  > |        if (saves[msg.sender]==0) savers++;
    |        saves[msg.sender]+=msg.value;
    |        emit Saved(msg.sender,msg.value);
  at /unique_contracts/0x306e505030c5f76b60c9561e88b57d1de60fb9ed.sol(47)

[33mWarning[0m for UnrestrictedWrite in contract 'KodDeneg':
    |    address payable newOwner;
    |    function changeOwner(address payable _newOwner) public onlyOwner {
  > |        newOwner = _newOwner;
    |    }
    |    function acceptOwnership() public {
  at /unique_contracts/0x306e505030c5f76b60c9561e88b57d1de60fb9ed.sol(11)

[31mViolation[0m for MissingInputValidation in contract 'Owned':
    |    address payable owner;
    |    address payable newOwner;
  > |    function changeOwner(address payable _newOwner) public onlyOwner {
    |        newOwner = _newOwner;
    |    }
  at /unique_contracts/0x306e505030c5f76b60c9561e88b57d1de60fb9ed.sol(10)

[33mWarning[0m for UnrestrictedWrite in contract 'Owned':
    |    address payable newOwner;
    |    function changeOwner(address payable _newOwner) public onlyOwner {
  > |        newOwner = _newOwner;
    |    }
    |    function acceptOwnership() public {
  at /unique_contracts/0x306e505030c5f76b60c9561e88b57d1de60fb9ed.sol(11)

[31mViolation[0m for MissingInputValidation in contract 'Save':
    |    address payable owner;
    |    address payable newOwner;
  > |    function changeOwner(address payable _newOwner) public onlyOwner {
    |        newOwner = _newOwner;
    |    }
  at /unique_contracts/0x306e505030c5f76b60c9561e88b57d1de60fb9ed.sol(10)

[31mViolation[0m for MissingInputValidation in contract 'Save':
    |    mapping (address=>uint256) saves;
    |    event Saved(address indexed _from, uint256 _value);
  > |    function saveOf(address _user) view public returns (uint256 save) {return saves[_user];}
    |}
    |
  at /unique_contracts/0x306e505030c5f76b60c9561e88b57d1de60fb9ed.sol(26)

[33mWarning[0m for UnrestrictedWrite in contract 'Save':
    |    address payable newOwner;
    |    function changeOwner(address payable _newOwner) public onlyOwner {
  > |        newOwner = _newOwner;
    |    }
    |    function acceptOwnership() public {
  at /unique_contracts/0x306e505030c5f76b60c9561e88b57d1de60fb9ed.sol(11)