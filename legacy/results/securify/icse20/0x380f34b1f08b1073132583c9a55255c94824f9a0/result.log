Processing contract: /unique_chucks/15/0x380f34b1f08b1073132583c9a55255c94824f9a0.sol:BasicToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/15/0x380f34b1f08b1073132583c9a55255c94824f9a0.sol:ERC20
Processing contract: /unique_chucks/15/0x380f34b1f08b1073132583c9a55255c94824f9a0.sol:ERC20Basic
Processing contract: /unique_chucks/15/0x380f34b1f08b1073132583c9a55255c94824f9a0.sol:Ownable
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/15/0x380f34b1f08b1073132583c9a55255c94824f9a0.sol:Pausable
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/15/0x380f34b1f08b1073132583c9a55255c94824f9a0.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/15/0x380f34b1f08b1073132583c9a55255c94824f9a0.sol:StandardToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/15/0x380f34b1f08b1073132583c9a55255c94824f9a0.sol:sdcoin
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[33mWarning[0m for UnrestrictedWrite in contract 'BasicToken':
    |
    |    balances[msg.sender] = balances[msg.sender].sub(_value);
  > |    balances[_to] = balances[_to].add(_value);
    |    emit Transfer(msg.sender, _to, _value);
    |    return true;
  at /unique_chucks/15/0x380f34b1f08b1073132583c9a55255c94824f9a0.sol(59)

[33mWarning[0m for UnrestrictedWrite in contract 'Ownable':
    |    require(newOwner != address(0));
    |    emit OwnershipTransferred(owner, newOwner);
  > |    owner = newOwner;
    |  }
    |
  at /unique_chucks/15/0x380f34b1f08b1073132583c9a55255c94824f9a0.sol(139)

[33mWarning[0m for UnrestrictedWrite in contract 'Ownable':
    |  function renounceOwnership() public onlyOwner {
    |    emit OwnershipRenounced(owner);
  > |    owner = address(0);
    |  }
    |}
  at /unique_chucks/15/0x380f34b1f08b1073132583c9a55255c94824f9a0.sol(144)

[33mWarning[0m for UnrestrictedWrite in contract 'Pausable':
    |    require(newOwner != address(0));
    |    emit OwnershipTransferred(owner, newOwner);
  > |    owner = newOwner;
    |  }
    |
  at /unique_chucks/15/0x380f34b1f08b1073132583c9a55255c94824f9a0.sol(139)

[33mWarning[0m for UnrestrictedWrite in contract 'Pausable':
    |  function renounceOwnership() public onlyOwner {
    |    emit OwnershipRenounced(owner);
  > |    owner = address(0);
    |  }
    |}
  at /unique_chucks/15/0x380f34b1f08b1073132583c9a55255c94824f9a0.sol(144)

[33mWarning[0m for UnrestrictedWrite in contract 'Pausable':
    |    function pause() onlyOwner whenNotPaused public {
    |        require(canPause == true);
  > |        paused = true;
    |        emit Pause();
    |    }
  at /unique_chucks/15/0x380f34b1f08b1073132583c9a55255c94824f9a0.sol(168)

[33mWarning[0m for UnrestrictedWrite in contract 'Pausable':
    |  function unpause() onlyOwner whenPaused public {
    |    require(paused == true);
  > |    paused = false;
    |    emit Unpause();
    |  }
  at /unique_chucks/15/0x380f34b1f08b1073132583c9a55255c94824f9a0.sol(174)

[33mWarning[0m for UnrestrictedWrite in contract 'Pausable':
    |  
    |    function notPausable() onlyOwner public{
  > |        paused = false;
    |        canPause = false;
    |        emit NotPausable();
  at /unique_chucks/15/0x380f34b1f08b1073132583c9a55255c94824f9a0.sol(179)

[33mWarning[0m for UnrestrictedWrite in contract 'Pausable':
    |    function notPausable() onlyOwner public{
    |        paused = false;
  > |        canPause = false;
    |        emit NotPausable();
    |    }
  at /unique_chucks/15/0x380f34b1f08b1073132583c9a55255c94824f9a0.sol(180)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |
    |    balances[msg.sender] = balances[msg.sender].sub(_value);
  > |    balances[_to] = balances[_to].add(_value);
    |    emit Transfer(msg.sender, _to, _value);
    |    return true;
  at /unique_chucks/15/0x380f34b1f08b1073132583c9a55255c94824f9a0.sol(59)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |    require(_value <= allowed[_from][msg.sender]);
    |
  > |    balances[_from] = balances[_from].sub(_value);
    |    balances[_to] = balances[_to].add(_value);
    |    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
  at /unique_chucks/15/0x380f34b1f08b1073132583c9a55255c94824f9a0.sol(79)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |
    |    balances[_from] = balances[_from].sub(_value);
  > |    balances[_to] = balances[_to].add(_value);
    |    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
    |    emit Transfer(_from, _to, _value);
  at /unique_chucks/15/0x380f34b1f08b1073132583c9a55255c94824f9a0.sol(80)

[31mViolation[0m for LockedEther in contract 'sdcoin':
    |}
    |
  > |contract sdcoin is StandardToken, Pausable {
    |    string public constant NAME = "SDCOIN";
    |    string public constant SYMBOL = "SDC";
  at /unique_chucks/15/0x380f34b1f08b1073132583c9a55255c94824f9a0.sol(185)

[33mWarning[0m for UnrestrictedWrite in contract 'sdcoin':
    |
    |    balances[msg.sender] = balances[msg.sender].sub(_value);
  > |    balances[_to] = balances[_to].add(_value);
    |    emit Transfer(msg.sender, _to, _value);
    |    return true;
  at /unique_chucks/15/0x380f34b1f08b1073132583c9a55255c94824f9a0.sol(59)

[33mWarning[0m for UnrestrictedWrite in contract 'sdcoin':
    |    require(_value <= allowed[_from][msg.sender]);
    |
  > |    balances[_from] = balances[_from].sub(_value);
    |    balances[_to] = balances[_to].add(_value);
    |    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
  at /unique_chucks/15/0x380f34b1f08b1073132583c9a55255c94824f9a0.sol(79)

[33mWarning[0m for UnrestrictedWrite in contract 'sdcoin':
    |
    |    balances[_from] = balances[_from].sub(_value);
  > |    balances[_to] = balances[_to].add(_value);
    |    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
    |    emit Transfer(_from, _to, _value);
  at /unique_chucks/15/0x380f34b1f08b1073132583c9a55255c94824f9a0.sol(80)

[33mWarning[0m for UnrestrictedWrite in contract 'sdcoin':
    |    require(newOwner != address(0));
    |    emit OwnershipTransferred(owner, newOwner);
  > |    owner = newOwner;
    |  }
    |
  at /unique_chucks/15/0x380f34b1f08b1073132583c9a55255c94824f9a0.sol(139)

[33mWarning[0m for UnrestrictedWrite in contract 'sdcoin':
    |  function renounceOwnership() public onlyOwner {
    |    emit OwnershipRenounced(owner);
  > |    owner = address(0);
    |  }
    |}
  at /unique_chucks/15/0x380f34b1f08b1073132583c9a55255c94824f9a0.sol(144)

[33mWarning[0m for UnrestrictedWrite in contract 'sdcoin':
    |    function pause() onlyOwner whenNotPaused public {
    |        require(canPause == true);
  > |        paused = true;
    |        emit Pause();
    |    }
  at /unique_chucks/15/0x380f34b1f08b1073132583c9a55255c94824f9a0.sol(168)

[33mWarning[0m for UnrestrictedWrite in contract 'sdcoin':
    |  function unpause() onlyOwner whenPaused public {
    |    require(paused == true);
  > |    paused = false;
    |    emit Unpause();
    |  }
  at /unique_chucks/15/0x380f34b1f08b1073132583c9a55255c94824f9a0.sol(174)

[33mWarning[0m for UnrestrictedWrite in contract 'sdcoin':
    |  
    |    function notPausable() onlyOwner public{
  > |        paused = false;
    |        canPause = false;
    |        emit NotPausable();
  at /unique_chucks/15/0x380f34b1f08b1073132583c9a55255c94824f9a0.sol(179)

[33mWarning[0m for UnrestrictedWrite in contract 'sdcoin':
    |    function notPausable() onlyOwner public{
    |        paused = false;
  > |        canPause = false;
    |        emit NotPausable();
    |    }
  at /unique_chucks/15/0x380f34b1f08b1073132583c9a55255c94824f9a0.sol(180)