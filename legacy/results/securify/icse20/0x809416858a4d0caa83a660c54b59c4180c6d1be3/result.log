Processing contract: /unique_chucks/25/0x809416858a4d0caa83a660c54b59c4180c6d1be3.sol:Address
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/25/0x809416858a4d0caa83a660c54b59c4180c6d1be3.sol:Avatar
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/25/0x809416858a4d0caa83a660c54b59c4180c6d1be3.sol:ControllerInterface
Processing contract: /unique_chucks/25/0x809416858a4d0caa83a660c54b59c4180c6d1be3.sol:DAOToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/25/0x809416858a4d0caa83a660c54b59c4180c6d1be3.sol:ERC20
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/25/0x809416858a4d0caa83a660c54b59c4180c6d1be3.sol:ERC20Burnable
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/25/0x809416858a4d0caa83a660c54b59c4180c6d1be3.sol:GlobalConstraintInterface
Processing contract: /unique_chucks/25/0x809416858a4d0caa83a660c54b59c4180c6d1be3.sol:IERC20
Processing contract: /unique_chucks/25/0x809416858a4d0caa83a660c54b59c4180c6d1be3.sol:Ownable
Processing contract: /unique_chucks/25/0x809416858a4d0caa83a660c54b59c4180c6d1be3.sol:Reputation
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/25/0x809416858a4d0caa83a660c54b59c4180c6d1be3.sol:SafeERC20
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/25/0x809416858a4d0caa83a660c54b59c4180c6d1be3.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/25/0x809416858a4d0caa83a660c54b59c4180c6d1be3.sol:UController
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[33mWarning[0m for TODAmount in contract 'Avatar':
    |    returns(bool success, bytes memory returnValue) {
    |      // solhint-disable-next-line avoid-call-value
  > |        (success, returnValue) = _contract.call.value(_value)(_data);
    |        emit GenericCall(_contract, _data, _value, success);
    |    }
  at /unique_chucks/25/0x809416858a4d0caa83a660c54b59c4180c6d1be3.sol(777)

[33mWarning[0m for TODReceiver in contract 'Avatar':
    |    returns(bool success, bytes memory returnValue) {
    |      // solhint-disable-next-line avoid-call-value
  > |        (success, returnValue) = _contract.call.value(_value)(_data);
    |        emit GenericCall(_contract, _data, _value, success);
    |    }
  at /unique_chucks/25/0x809416858a4d0caa83a660c54b59c4180c6d1be3.sol(777)

[33mWarning[0m for UnhandledException in contract 'Avatar':
    |    returns(bool success, bytes memory returnValue) {
    |      // solhint-disable-next-line avoid-call-value
  > |        (success, returnValue) = _contract.call.value(_value)(_data);
    |        emit GenericCall(_contract, _data, _value, success);
    |    }
  at /unique_chucks/25/0x809416858a4d0caa83a660c54b59c4180c6d1be3.sol(777)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'Avatar':
    |    returns(bool success, bytes memory returnValue) {
    |      // solhint-disable-next-line avoid-call-value
  > |        (success, returnValue) = _contract.call.value(_value)(_data);
    |        emit GenericCall(_contract, _data, _value, success);
    |    }
  at /unique_chucks/25/0x809416858a4d0caa83a660c54b59c4180c6d1be3.sol(777)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'Avatar':
    |    */
    |    function sendEther(uint256 _amountInWei, address payable _to) public onlyOwner returns(bool) {
  > |        _to.transfer(_amountInWei);
    |        emit SendEther(_amountInWei, _to);
    |        return true;
  at /unique_chucks/25/0x809416858a4d0caa83a660c54b59c4180c6d1be3.sol(788)

[33mWarning[0m for UnrestrictedWrite in contract 'Avatar':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipTransferred(_owner, address(0));
  > |        _owner = address(0);
    |    }
    |
  at /unique_chucks/25/0x809416858a4d0caa83a660c54b59c4180c6d1be3.sol(56)

[33mWarning[0m for UnrestrictedWrite in contract 'Avatar':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_chucks/25/0x809416858a4d0caa83a660c54b59c4180c6d1be3.sol(74)

[31mViolation[0m for LockedEther in contract 'DAOToken':
    | */
    |
  > |contract DAOToken is ERC20, ERC20Burnable, Ownable {
    |
    |    string public name;
  at /unique_chucks/25/0x809416858a4d0caa83a660c54b59c4180c6d1be3.sol(582)

[31mViolation[0m for UnrestrictedWrite in contract 'Reputation':
    | */
    |
  > |contract Reputation is Ownable {
    |
    |    uint8 public decimals = 18;             //Number of decimals of the smallest unit
  at /unique_chucks/25/0x809416858a4d0caa83a660c54b59c4180c6d1be3.sol(93)

[33mWarning[0m for UnrestrictedWrite in contract 'Reputation':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipTransferred(_owner, address(0));
  > |        _owner = address(0);
    |    }
    |
  at /unique_chucks/25/0x809416858a4d0caa83a660c54b59c4180c6d1be3.sol(56)

[33mWarning[0m for UnrestrictedWrite in contract 'Reputation':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_chucks/25/0x809416858a4d0caa83a660c54b59c4180c6d1be3.sol(74)

[33mWarning[0m for UnrestrictedWrite in contract 'Reputation':
    | */
    |
  > |contract Reputation is Ownable {
    |
    |    uint8 public decimals = 18;             //Number of decimals of the smallest unit
  at /unique_chucks/25/0x809416858a4d0caa83a660c54b59c4180c6d1be3.sol(93)

[33mWarning[0m for UnrestrictedWrite in contract 'Reputation':
    |        if ((checkpoints.length == 0) || (checkpoints[checkpoints.length - 1].fromBlock < block.number)) {
    |            Checkpoint storage newCheckPoint = checkpoints[checkpoints.length++];
  > |            newCheckPoint.fromBlock = uint128(block.number);
    |            newCheckPoint.value = uint128(_value);
    |        } else {
  at /unique_chucks/25/0x809416858a4d0caa83a660c54b59c4180c6d1be3.sol(246)

[33mWarning[0m for UnrestrictedWrite in contract 'Reputation':
    |            Checkpoint storage newCheckPoint = checkpoints[checkpoints.length++];
    |            newCheckPoint.fromBlock = uint128(block.number);
  > |            newCheckPoint.value = uint128(_value);
    |        } else {
    |            Checkpoint storage oldCheckPoint = checkpoints[checkpoints.length-1];
  at /unique_chucks/25/0x809416858a4d0caa83a660c54b59c4180c6d1be3.sol(247)

[33mWarning[0m for UnrestrictedWrite in contract 'Reputation':
    |        } else {
    |            Checkpoint storage oldCheckPoint = checkpoints[checkpoints.length-1];
  > |            oldCheckPoint.value = uint128(_value);
    |        }
    |    }
  at /unique_chucks/25/0x809416858a4d0caa83a660c54b59c4180c6d1be3.sol(250)

[31mViolation[0m for LockedEther in contract 'UController':
    | * Each scheme has it own parameters and operation permissions.
    | */
  > |contract UController is ControllerInterface {
    |
    |    struct Scheme {
  at /unique_chucks/25/0x809416858a4d0caa83a660c54b59c4180c6d1be3.sol(1097)

[31mViolation[0m for RepeatedCall in contract 'UController':
    |        for (idx = 0; idx < globalConstraintsPre.length; idx++) {
    |            require(
  > |            (GlobalConstraintInterface(globalConstraintsPre[idx].gcAddress))
    |            .pre(msg.sender, globalConstraintsPre[idx].params, func));
    |        }
  at /unique_chucks/25/0x809416858a4d0caa83a660c54b59c4180c6d1be3.sol(1228)

[31mViolation[0m for RepeatedCall in contract 'UController':
    |        for (idx = 0; idx < globalConstraintsPost.length; idx++) {
    |            require(
  > |            (GlobalConstraintInterface(globalConstraintsPost[idx].gcAddress))
    |            .post(msg.sender, globalConstraintsPost[idx].params, func));
    |        }
  at /unique_chucks/25/0x809416858a4d0caa83a660c54b59c4180c6d1be3.sol(1234)

[31mViolation[0m for RepeatedCall in contract 'UController':
    |    {
    |        emit MintReputation(msg.sender, _to, _amount, _avatar);
  > |        return organizations[_avatar].nativeReputation.mint(_to, _amount);
    |    }
    |
  at /unique_chucks/25/0x809416858a4d0caa83a660c54b59c4180c6d1be3.sol(1253)

[31mViolation[0m for RepeatedCall in contract 'UController':
    |    {
    |        emit BurnReputation(msg.sender, _from, _amount, _avatar);
  > |        return organizations[_avatar].nativeReputation.burn(_from, _amount);
    |    }
    |
  at /unique_chucks/25/0x809416858a4d0caa83a660c54b59c4180c6d1be3.sol(1269)

[31mViolation[0m for RepeatedCall in contract 'UController':
    |    {
    |        emit MintTokens(msg.sender, _beneficiary, _amount, _avatar);
  > |        return organizations[_avatar].nativeToken.mint(_beneficiary, _amount);
    |    }
    |
  at /unique_chucks/25/0x809416858a4d0caa83a660c54b59c4180c6d1be3.sol(1286)

[31mViolation[0m for RepeatedCall in contract 'UController':
    |        _avatar.transferOwnership(_newController);
    |        require(_avatar.owner() == _newController);
  > |        if (organizations[address(_avatar)].nativeToken.owner() == address(this)) {
    |            organizations[address(_avatar)].nativeToken.transferOwnership(_newController);
    |            require(organizations[address(_avatar)].nativeToken.owner() == _newController);
  at /unique_chucks/25/0x809416858a4d0caa83a660c54b59c4180c6d1be3.sol(1439)

[31mViolation[0m for RepeatedCall in contract 'UController':
    |        require(_avatar.owner() == _newController);
    |        if (organizations[address(_avatar)].nativeToken.owner() == address(this)) {
  > |            organizations[address(_avatar)].nativeToken.transferOwnership(_newController);
    |            require(organizations[address(_avatar)].nativeToken.owner() == _newController);
    |        }
  at /unique_chucks/25/0x809416858a4d0caa83a660c54b59c4180c6d1be3.sol(1440)

[31mViolation[0m for RepeatedCall in contract 'UController':
    |        if (organizations[address(_avatar)].nativeToken.owner() == address(this)) {
    |            organizations[address(_avatar)].nativeToken.transferOwnership(_newController);
  > |            require(organizations[address(_avatar)].nativeToken.owner() == _newController);
    |        }
    |        if (organizations[address(_avatar)].nativeReputation.owner() == address(this)) {
  at /unique_chucks/25/0x809416858a4d0caa83a660c54b59c4180c6d1be3.sol(1441)

[31mViolation[0m for RepeatedCall in contract 'UController':
    |            require(organizations[address(_avatar)].nativeToken.owner() == _newController);
    |        }
  > |        if (organizations[address(_avatar)].nativeReputation.owner() == address(this)) {
    |            organizations[address(_avatar)].nativeReputation.transferOwnership(_newController);
    |            require(organizations[address(_avatar)].nativeReputation.owner() == _newController);
  at /unique_chucks/25/0x809416858a4d0caa83a660c54b59c4180c6d1be3.sol(1443)

[31mViolation[0m for RepeatedCall in contract 'UController':
    |        if (organizations[address(_avatar)].nativeReputation.owner() == address(this)) {
    |            organizations[address(_avatar)].nativeReputation.transferOwnership(_newController);
  > |            require(organizations[address(_avatar)].nativeReputation.owner() == _newController);
    |        }
    |        emit UpgradeController(address(this), _newController, address(_avatar));
  at /unique_chucks/25/0x809416858a4d0caa83a660c54b59c4180c6d1be3.sol(1445)

[31mViolation[0m for RepeatedCall in contract 'UController':
    |    returns (bool, bytes memory)
    |    {
  > |        return _avatar.genericCall(_contract, _data, _value);
    |    }
    |
  at /unique_chucks/25/0x809416858a4d0caa83a660c54b59c4180c6d1be3.sol(1466)

[31mViolation[0m for RepeatedCall in contract 'UController':
    |    returns(bool)
    |    {
  > |        return _avatar.sendEther(_amountInWei, _to);
    |    }
    |
  at /unique_chucks/25/0x809416858a4d0caa83a660c54b59c4180c6d1be3.sol(1482)

[31mViolation[0m for RepeatedCall in contract 'UController':
    |    returns(bool)
    |    {
  > |        return _avatar.externalTokenTransfer(_externalToken, _to, _value);
    |    }
    |
  at /unique_chucks/25/0x809416858a4d0caa83a660c54b59c4180c6d1be3.sol(1499)

[31mViolation[0m for RepeatedCall in contract 'UController':
    |    returns(bool)
    |    {
  > |        return _avatar.externalTokenTransferFrom(_externalToken, _from, _to, _value);
    |    }
    |
  at /unique_chucks/25/0x809416858a4d0caa83a660c54b59c4180c6d1be3.sol(1524)

[31mViolation[0m for RepeatedCall in contract 'UController':
    |    returns(bool)
    |    {
  > |        return _avatar.externalTokenApproval(_externalToken, _spender, _value);
    |    }
    |
  at /unique_chucks/25/0x809416858a4d0caa83a660c54b59c4180c6d1be3.sol(1541)

[31mViolation[0m for UnrestrictedWrite in contract 'UController':
    |
  > |// File: openzeppelin-solidity/contracts/ownership/Ownable.sol
    |
    |pragma solidity ^0.5.2;
  at /unique_chucks/25/0x809416858a4d0caa83a660c54b59c4180c6d1be3.sol(2)

[31mViolation[0m for UnrestrictedWrite in contract 'UController':
    | * Each scheme has it own parameters and operation permissions.
    | */
  > |contract UController is ControllerInterface {
    |
    |    struct Scheme {
  at /unique_chucks/25/0x809416858a4d0caa83a660c54b59c4180c6d1be3.sol(1097)

[31mViolation[0m for UnrestrictedWrite in contract 'UController':
    |    {
    |        require(!actors[address(_avatar)]);
  > |        actors[address(_avatar)] = true;
    |        require(_avatar.owner() == address(this));
    |        DAOToken nativeToken = _avatar.nativeToken();
  at /unique_chucks/25/0x809416858a4d0caa83a660c54b59c4180c6d1be3.sol(1172)

[31mViolation[0m for UnrestrictedWrite in contract 'UController':
    |        //To guaranty uniqueness for the reputation systems.
    |        require(!actors[address(nativeReputation)]);
  > |        actors[address(nativeReputation)] = true;
    |        //To guaranty uniqueness for the nativeToken.
    |        require(!actors[address(nativeToken)]);
  at /unique_chucks/25/0x809416858a4d0caa83a660c54b59c4180c6d1be3.sol(1180)

[31mViolation[0m for UnrestrictedWrite in contract 'UController':
    |        //To guaranty uniqueness for the nativeToken.
    |        require(!actors[address(nativeToken)]);
  > |        actors[address(nativeToken)] = true;
    |        organizations[address(_avatar)].nativeToken = nativeToken;
    |        organizations[address(_avatar)].nativeReputation = nativeReputation;
  at /unique_chucks/25/0x809416858a4d0caa83a660c54b59c4180c6d1be3.sol(1183)

[31mViolation[0m for UnrestrictedWrite in contract 'UController':
    |        require(!actors[address(nativeToken)]);
    |        actors[address(nativeToken)] = true;
  > |        organizations[address(_avatar)].nativeToken = nativeToken;
    |        organizations[address(_avatar)].nativeReputation = nativeReputation;
    |        organizations[address(_avatar)].schemes[msg.sender] =
  at /unique_chucks/25/0x809416858a4d0caa83a660c54b59c4180c6d1be3.sol(1184)

[31mViolation[0m for UnrestrictedWrite in contract 'UController':
    |        actors[address(nativeToken)] = true;
    |        organizations[address(_avatar)].nativeToken = nativeToken;
  > |        organizations[address(_avatar)].nativeReputation = nativeReputation;
    |        organizations[address(_avatar)].schemes[msg.sender] =
    |        Scheme({paramsHash: bytes32(0), permissions: bytes4(0x0000001f)});
  at /unique_chucks/25/0x809416858a4d0caa83a660c54b59c4180c6d1be3.sol(1185)

[31mViolation[0m for UnrestrictedWrite in contract 'UController':
    |            (when == GlobalConstraintInterface.CallPhase.PreAndPost)) {
    |            if (!organization.globalConstraintsRegisterPre[_globalConstraint].isRegistered) {
  > |                organization.globalConstraintsPre.push(GlobalConstraint(_globalConstraint, _params));
    |                organization.globalConstraintsRegisterPre[_globalConstraint] =
    |                GlobalConstraintRegister(true, organization.globalConstraintsPre.length-1);
  at /unique_chucks/25/0x809416858a4d0caa83a660c54b59c4180c6d1be3.sol(1377)

[31mViolation[0m for UnrestrictedWrite in contract 'UController':
    |            if (!organization.globalConstraintsRegisterPre[_globalConstraint].isRegistered) {
    |                organization.globalConstraintsPre.push(GlobalConstraint(_globalConstraint, _params));
  > |                organization.globalConstraintsRegisterPre[_globalConstraint] =
    |                GlobalConstraintRegister(true, organization.globalConstraintsPre.length-1);
    |            }else {
  at /unique_chucks/25/0x809416858a4d0caa83a660c54b59c4180c6d1be3.sol(1378)

[31mViolation[0m for UnrestrictedWrite in contract 'UController':
    |                GlobalConstraintRegister(true, organization.globalConstraintsPre.length-1);
    |            }else {
  > |                organization
    |                .globalConstraintsPre[organization.globalConstraintsRegisterPre[_globalConstraint].index]
    |                .params = _params;
  at /unique_chucks/25/0x809416858a4d0caa83a660c54b59c4180c6d1be3.sol(1381)

[31mViolation[0m for UnrestrictedWrite in contract 'UController':
    |            (when == GlobalConstraintInterface.CallPhase.PreAndPost)) {
    |            if (!organization.globalConstraintsRegisterPost[_globalConstraint].isRegistered) {
  > |                organization.globalConstraintsPost.push(GlobalConstraint(_globalConstraint, _params));
    |                organization.globalConstraintsRegisterPost[_globalConstraint] =
    |                GlobalConstraintRegister(true, organization.globalConstraintsPost.length-1);
  at /unique_chucks/25/0x809416858a4d0caa83a660c54b59c4180c6d1be3.sol(1390)

[31mViolation[0m for UnrestrictedWrite in contract 'UController':
    |            if (!organization.globalConstraintsRegisterPost[_globalConstraint].isRegistered) {
    |                organization.globalConstraintsPost.push(GlobalConstraint(_globalConstraint, _params));
  > |                organization.globalConstraintsRegisterPost[_globalConstraint] =
    |                GlobalConstraintRegister(true, organization.globalConstraintsPost.length-1);
    |            } else {
  at /unique_chucks/25/0x809416858a4d0caa83a660c54b59c4180c6d1be3.sol(1391)

[31mViolation[0m for UnrestrictedWrite in contract 'UController':
    |                GlobalConstraintRegister(true, organization.globalConstraintsPost.length-1);
    |            } else {
  > |                organization
    |                .globalConstraintsPost[organization.globalConstraintsRegisterPost[_globalConstraint].index]
    |                .params = _params;
  at /unique_chucks/25/0x809416858a4d0caa83a660c54b59c4180c6d1be3.sol(1394)

[31mViolation[0m for UnrestrictedWrite in contract 'UController':
    |        require(newControllers[address(_avatar)] == address(0));   // so the upgrade could be done once for a contract.
    |        require(_newController != address(0));
  > |        newControllers[address(_avatar)] = _newController;
    |        _avatar.transferOwnership(_newController);
    |        require(_avatar.owner() == _newController);
  at /unique_chucks/25/0x809416858a4d0caa83a660c54b59c4180c6d1be3.sol(1436)

[31mViolation[0m for UnrestrictedWrite in contract 'UController':
    |            if (globalConstraintRegister.index < globalConstraints.length-1) {
    |                GlobalConstraint memory globalConstraint = globalConstraints[globalConstraints.length-1];
  > |                globalConstraints[globalConstraintRegister.index] = globalConstraint;
    |                organizations[_avatar].globalConstraintsRegisterPre[globalConstraint.gcAddress].index =
    |                globalConstraintRegister.index;
  at /unique_chucks/25/0x809416858a4d0caa83a660c54b59c4180c6d1be3.sol(1629)

[31mViolation[0m for UnrestrictedWrite in contract 'UController':
    |                GlobalConstraint memory globalConstraint = globalConstraints[globalConstraints.length-1];
    |                globalConstraints[globalConstraintRegister.index] = globalConstraint;
  > |                organizations[_avatar].globalConstraintsRegisterPre[globalConstraint.gcAddress].index =
    |                globalConstraintRegister.index;
    |            }
  at /unique_chucks/25/0x809416858a4d0caa83a660c54b59c4180c6d1be3.sol(1630)

[31mViolation[0m for UnrestrictedWrite in contract 'UController':
    |            }
    |            globalConstraints.length--;
  > |            delete organizations[_avatar].globalConstraintsRegisterPre[_globalConstraint];
    |            emit RemoveGlobalConstraint(_globalConstraint, globalConstraintRegister.index, true, _avatar);
    |            return true;
  at /unique_chucks/25/0x809416858a4d0caa83a660c54b59c4180c6d1be3.sol(1634)

[31mViolation[0m for UnrestrictedWrite in contract 'UController':
    |            if (globalConstraintRegister.index < globalConstraints.length-1) {
    |                GlobalConstraint memory globalConstraint = globalConstraints[globalConstraints.length-1];
  > |                globalConstraints[globalConstraintRegister.index] = globalConstraint;
    |                organizations[_avatar].globalConstraintsRegisterPost[globalConstraint.gcAddress].index =
    |                globalConstraintRegister.index;
  at /unique_chucks/25/0x809416858a4d0caa83a660c54b59c4180c6d1be3.sol(1657)

[31mViolation[0m for UnrestrictedWrite in contract 'UController':
    |                GlobalConstraint memory globalConstraint = globalConstraints[globalConstraints.length-1];
    |                globalConstraints[globalConstraintRegister.index] = globalConstraint;
  > |                organizations[_avatar].globalConstraintsRegisterPost[globalConstraint.gcAddress].index =
    |                globalConstraintRegister.index;
    |            }
  at /unique_chucks/25/0x809416858a4d0caa83a660c54b59c4180c6d1be3.sol(1658)

[31mViolation[0m for UnrestrictedWrite in contract 'UController':
    |            }
    |            globalConstraints.length--;
  > |            delete organizations[_avatar].globalConstraintsRegisterPost[_globalConstraint];
    |            emit RemoveGlobalConstraint(_globalConstraint, globalConstraintRegister.index, false, _avatar);
    |            return true;
  at /unique_chucks/25/0x809416858a4d0caa83a660c54b59c4180c6d1be3.sol(1662)

[33mWarning[0m for UnrestrictedWrite in contract 'UController':
    |
    |    // Add or change the scheme:
  > |        organizations[_avatar].schemes[_scheme] =
    |        Scheme({paramsHash:_paramsHash, permissions:_permissions|bytes4(0x00000001)});
    |        emit RegisterScheme(msg.sender, _scheme, _avatar);
  at /unique_chucks/25/0x809416858a4d0caa83a660c54b59c4180c6d1be3.sol(1315)

[33mWarning[0m for UnrestrictedWrite in contract 'UController':
    |    // Unregister:
    |        emit UnregisterScheme(msg.sender, _scheme, _avatar);
  > |        delete organizations[_avatar].schemes[_scheme];
    |        return true;
    |    }
  at /unique_chucks/25/0x809416858a4d0caa83a660c54b59c4180c6d1be3.sol(1344)