Processing contract: /unique_chucks/28/0x83e401afd7438ec2b2827874eba920eb6a345cbb.sol:Burnable
Processing contract: /unique_chucks/28/0x83e401afd7438ec2b2827874eba920eb6a345cbb.sol:ERC20
Processing contract: /unique_chucks/28/0x83e401afd7438ec2b2827874eba920eb6a345cbb.sol:Freezable
Processing contract: /unique_chucks/28/0x83e401afd7438ec2b2827874eba920eb6a345cbb.sol:IERC20
Processing contract: /unique_chucks/28/0x83e401afd7438ec2b2827874eba920eb6a345cbb.sol:MinosCoin
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/28/0x83e401afd7438ec2b2827874eba920eb6a345cbb.sol:Ownable
Processing contract: /unique_chucks/28/0x83e401afd7438ec2b2827874eba920eb6a345cbb.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for TODAmount in contract 'MinosCoin':
    |    uint256 totalBalance = address(this).balance;
    |    require(totalBalance > 0, "MinosCoin: No ether available to be withdrawn");
  > |    msg.sender.transfer(totalBalance);
    |  }
    |}
  at /unique_chucks/28/0x83e401afd7438ec2b2827874eba920eb6a345cbb.sol(511)

[33mWarning[0m for UnrestrictedWrite in contract 'MinosCoin':
    |    require(newOwner != address(0), "Ownable: New owner is the zero address");
    |    emit OwnershipTransferred(_owner, newOwner);
  > |    _owner = newOwner;
    |  }
    |}
  at /unique_chucks/28/0x83e401afd7438ec2b2827874eba920eb6a345cbb.sol(166)

[33mWarning[0m for UnrestrictedWrite in contract 'MinosCoin':
    |
    |    balances[msg.sender] = balances[msg.sender].sub(value);
  > |    balances[to] = balances[to].add(value);
    |    emit Transfer(msg.sender, to, value);
    |    return true;
  at /unique_chucks/28/0x83e401afd7438ec2b2827874eba920eb6a345cbb.sol(252)

[33mWarning[0m for UnrestrictedWrite in contract 'MinosCoin':
    |    require(to != address(0));
    |
  > |    balances[from] = balances[from].sub(value);
    |    balances[to] = balances[to].add(value);
    |    allowed[from][msg.sender] = allowed[from][msg.sender].sub(value);
  at /unique_chucks/28/0x83e401afd7438ec2b2827874eba920eb6a345cbb.sol(275)

[33mWarning[0m for UnrestrictedWrite in contract 'MinosCoin':
    |
    |    balances[from] = balances[from].sub(value);
  > |    balances[to] = balances[to].add(value);
    |    allowed[from][msg.sender] = allowed[from][msg.sender].sub(value);
    |    emit Transfer(from, to, value);
  at /unique_chucks/28/0x83e401afd7438ec2b2827874eba920eb6a345cbb.sol(276)

[33mWarning[0m for UnrestrictedWrite in contract 'MinosCoin':
    |    require(amount <= balances[account], "Burnable: Amount to be burnt exceeds the account balance");
    |
  > |    totalSupply = totalSupply.sub(amount);
    |    balances[account] = balances[account].sub(amount);
    |    emit Burn(account, amount);
  at /unique_chucks/28/0x83e401afd7438ec2b2827874eba920eb6a345cbb.sol(414)