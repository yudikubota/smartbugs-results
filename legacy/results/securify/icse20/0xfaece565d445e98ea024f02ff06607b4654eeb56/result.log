Processing contract: /unique_chucks/29/0xfaece565d445e98ea024f02ff06607b4654eeb56.sol:ApproveAndCallFallback
Processing contract: /unique_chucks/29/0xfaece565d445e98ea024f02ff06607b4654eeb56.sol:BokkyPooBahsFixedSupplyTokenFactory
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/29/0xfaece565d445e98ea024f02ff06607b4654eeb56.sol:ERC20Interface
Processing contract: /unique_chucks/29/0xfaece565d445e98ea024f02ff06607b4654eeb56.sol:FixedSupplyToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/29/0xfaece565d445e98ea024f02ff06607b4654eeb56.sol:Owned
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/29/0xfaece565d445e98ea024f02ff06607b4654eeb56.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/29/0xfaece565d445e98ea024f02ff06607b4654eeb56.sol:TokenInterface
[33mWarning[0m for TODAmount in contract 'BokkyPooBahsFixedSupplyTokenFactory':
    |        token = _deployTokenContract(msg.sender, symbol, name, decimals, totalSupply);
    |        if (msg.value > 0) {
  > |            address(uint160(owner)).transfer(msg.value);
    |        }
    |    }
  at /unique_chucks/29/0xfaece565d445e98ea024f02ff06607b4654eeb56.sol(239)

[31mViolation[0m for TODReceiver in contract 'BokkyPooBahsFixedSupplyTokenFactory':
    |        token = _deployTokenContract(msg.sender, symbol, name, decimals, totalSupply);
    |        if (msg.value > 0) {
  > |            address(uint160(owner)).transfer(msg.value);
    |        }
    |    }
  at /unique_chucks/29/0xfaece565d445e98ea024f02ff06607b4654eeb56.sol(239)

[31mViolation[0m for TODReceiver in contract 'BokkyPooBahsFixedSupplyTokenFactory':
    |    function recoverTokens(address token, uint tokens) public onlyOwner {
    |        if (token == address(0)) {
  > |            address(uint160(owner)).transfer((tokens == 0 ? address(this).balance : tokens));
    |        } else {
    |            ERC20Interface(token).transfer(owner, tokens == 0 ? ERC20Interface(token).balanceOf(address(this)) : tokens);
  at /unique_chucks/29/0xfaece565d445e98ea024f02ff06607b4654eeb56.sol(244)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'BokkyPooBahsFixedSupplyTokenFactory':
    |        token = _deployTokenContract(msg.sender, symbol, name, decimals, totalSupply);
    |        if (msg.value > 0) {
  > |            address(uint160(owner)).transfer(msg.value);
    |        }
    |    }
  at /unique_chucks/29/0xfaece565d445e98ea024f02ff06607b4654eeb56.sol(239)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'BokkyPooBahsFixedSupplyTokenFactory':
    |    function recoverTokens(address token, uint tokens) public onlyOwner {
    |        if (token == address(0)) {
  > |            address(uint160(owner)).transfer((tokens == 0 ? address(this).balance : tokens));
    |        } else {
    |            ERC20Interface(token).transfer(owner, tokens == 0 ? ERC20Interface(token).balanceOf(address(this)) : tokens);
  at /unique_chucks/29/0xfaece565d445e98ea024f02ff06607b4654eeb56.sol(244)

[31mViolation[0m for UnrestrictedWrite in contract 'BokkyPooBahsFixedSupplyTokenFactory':
    |pragma solidity ^0.5.4;
    |
  > |// ----------------------------------------------------------------------------
    |// BokkyPooBah's Fixed Supply Token ðŸ‘Š + Factory v1.00
    |//
  at /unique_chucks/29/0xfaece565d445e98ea024f02ff06607b4654eeb56.sol(3)

[31mViolation[0m for UnrestrictedWrite in contract 'BokkyPooBahsFixedSupplyTokenFactory':
    |        token = address(new FixedSupplyToken(owner, symbol, name, decimals, totalSupply));
    |        isChild[token] = true;
  > |        children.push(token);
    |        emit TokenDeployed(owner, token, symbol, name, decimals, totalSupply);
    |    }
  at /unique_chucks/29/0xfaece565d445e98ea024f02ff06607b4654eeb56.sol(255)

[33mWarning[0m for UnrestrictedWrite in contract 'BokkyPooBahsFixedSupplyTokenFactory':
    |    function _deployTokenContract(address owner, string memory symbol, string memory name, uint8 decimals, uint totalSupply) internal returns (address token) {
    |        token = address(new FixedSupplyToken(owner, symbol, name, decimals, totalSupply));
  > |        isChild[token] = true;
    |        children.push(token);
    |        emit TokenDeployed(owner, token, symbol, name, decimals, totalSupply);
  at /unique_chucks/29/0xfaece565d445e98ea024f02ff06607b4654eeb56.sol(254)

[33mWarning[0m for UnrestrictedWrite in contract 'BokkyPooBahsFixedSupplyTokenFactory':
    |    }
    |    function transferOwnership(address _newOwner) public onlyOwner {
  > |        newOwner = _newOwner;
    |    }
    |    function acceptOwnership() public {
  at /unique_chucks/29/0xfaece565d445e98ea024f02ff06607b4654eeb56.sol(50)

[33mWarning[0m for UnrestrictedWrite in contract 'BokkyPooBahsFixedSupplyTokenFactory':
    |        require(msg.sender == newOwner);
    |        emit OwnershipTransferred(owner, newOwner);
  > |        owner = newOwner;
    |        newOwner = address(0);
    |    }
  at /unique_chucks/29/0xfaece565d445e98ea024f02ff06607b4654eeb56.sol(55)

[33mWarning[0m for UnrestrictedWrite in contract 'BokkyPooBahsFixedSupplyTokenFactory':
    |        emit OwnershipTransferred(owner, newOwner);
    |        owner = newOwner;
  > |        newOwner = address(0);
    |    }
    |}
  at /unique_chucks/29/0xfaece565d445e98ea024f02ff06607b4654eeb56.sol(56)

[33mWarning[0m for UnrestrictedWrite in contract 'BokkyPooBahsFixedSupplyTokenFactory':
    |        require(newAddress == address(0));
    |        emit FactoryDeprecated(_newAddress);
  > |        newAddress = _newAddress;
    |    }
    |    function setMinimumFee(uint _minimumFee) public onlyOwner {
  at /unique_chucks/29/0xfaece565d445e98ea024f02ff06607b4654eeb56.sol(227)

[33mWarning[0m for UnrestrictedWrite in contract 'BokkyPooBahsFixedSupplyTokenFactory':
    |    function setMinimumFee(uint _minimumFee) public onlyOwner {
    |        emit MinimumFeeUpdated(minimumFee, _minimumFee);
  > |        minimumFee = _minimumFee;
    |    }
    |    function deployTokenContract(string memory symbol, string memory name, uint8 decimals, uint totalSupply) public payable returns (address token) {
  at /unique_chucks/29/0xfaece565d445e98ea024f02ff06607b4654eeb56.sol(231)

[31mViolation[0m for TODReceiver in contract 'FixedSupplyToken':
    |    function recoverTokens(address token, uint tokens) public onlyOwner {
    |        if (token == address(0)) {
  > |            address(uint160(owner)).transfer((tokens == 0 ? address(this).balance : tokens));
    |        } else {
    |            ERC20Interface(token).transfer(owner, tokens == 0 ? ERC20Interface(token).balanceOf(address(this)) : tokens);
  at /unique_chucks/29/0xfaece565d445e98ea024f02ff06607b4654eeb56.sol(163)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'FixedSupplyToken':
    |    function recoverTokens(address token, uint tokens) public onlyOwner {
    |        if (token == address(0)) {
  > |            address(uint160(owner)).transfer((tokens == 0 ? address(this).balance : tokens));
    |        } else {
    |            ERC20Interface(token).transfer(owner, tokens == 0 ? ERC20Interface(token).balanceOf(address(this)) : tokens);
  at /unique_chucks/29/0xfaece565d445e98ea024f02ff06607b4654eeb56.sol(163)

[31mViolation[0m for UnrestrictedWrite in contract 'FixedSupplyToken':
    |    function transfer(address to, uint tokens) public returns (bool success) {
    |        balances[msg.sender] = balances[msg.sender].sub(tokens);
  > |        balances[to] = balances[to].add(tokens);
    |        emit Transfer(msg.sender, to, tokens);
    |        return true;
  at /unique_chucks/29/0xfaece565d445e98ea024f02ff06607b4654eeb56.sol(136)

[31mViolation[0m for UnrestrictedWrite in contract 'FixedSupplyToken':
    |    }
    |    function transferFrom(address from, address to, uint tokens) public returns (bool success) {
  > |        balances[from] = balances[from].sub(tokens);
    |        allowed[from][msg.sender] = allowed[from][msg.sender].sub(tokens);
    |        balances[to] = balances[to].add(tokens);
  at /unique_chucks/29/0xfaece565d445e98ea024f02ff06607b4654eeb56.sol(146)

[31mViolation[0m for UnrestrictedWrite in contract 'FixedSupplyToken':
    |        balances[from] = balances[from].sub(tokens);
    |        allowed[from][msg.sender] = allowed[from][msg.sender].sub(tokens);
  > |        balances[to] = balances[to].add(tokens);
    |        emit Transfer(from, to, tokens);
    |        return true;
  at /unique_chucks/29/0xfaece565d445e98ea024f02ff06607b4654eeb56.sol(148)

[33mWarning[0m for UnrestrictedWrite in contract 'FixedSupplyToken':
    |    }
    |    function transferOwnership(address _newOwner) public onlyOwner {
  > |        newOwner = _newOwner;
    |    }
    |    function acceptOwnership() public {
  at /unique_chucks/29/0xfaece565d445e98ea024f02ff06607b4654eeb56.sol(50)

[33mWarning[0m for UnrestrictedWrite in contract 'FixedSupplyToken':
    |        require(msg.sender == newOwner);
    |        emit OwnershipTransferred(owner, newOwner);
  > |        owner = newOwner;
    |        newOwner = address(0);
    |    }
  at /unique_chucks/29/0xfaece565d445e98ea024f02ff06607b4654eeb56.sol(55)

[33mWarning[0m for UnrestrictedWrite in contract 'FixedSupplyToken':
    |        emit OwnershipTransferred(owner, newOwner);
    |        owner = newOwner;
  > |        newOwner = address(0);
    |    }
    |}
  at /unique_chucks/29/0xfaece565d445e98ea024f02ff06607b4654eeb56.sol(56)

[31mViolation[0m for MissingInputValidation in contract 'Owned':
    |        owner = _owner;
    |    }
  > |    function transferOwnership(address _newOwner) public onlyOwner {
    |        newOwner = _newOwner;
    |    }
  at /unique_chucks/29/0xfaece565d445e98ea024f02ff06607b4654eeb56.sol(49)

[33mWarning[0m for UnrestrictedWrite in contract 'Owned':
    |    }
    |    function transferOwnership(address _newOwner) public onlyOwner {
  > |        newOwner = _newOwner;
    |    }
    |    function acceptOwnership() public {
  at /unique_chucks/29/0xfaece565d445e98ea024f02ff06607b4654eeb56.sol(50)

[33mWarning[0m for UnrestrictedWrite in contract 'Owned':
    |        require(msg.sender == newOwner);
    |        emit OwnershipTransferred(owner, newOwner);
  > |        owner = newOwner;
    |        newOwner = address(0);
    |    }
  at /unique_chucks/29/0xfaece565d445e98ea024f02ff06607b4654eeb56.sol(55)

[33mWarning[0m for UnrestrictedWrite in contract 'Owned':
    |        emit OwnershipTransferred(owner, newOwner);
    |        owner = newOwner;
  > |        newOwner = address(0);
    |    }
    |}
  at /unique_chucks/29/0xfaece565d445e98ea024f02ff06607b4654eeb56.sol(56)