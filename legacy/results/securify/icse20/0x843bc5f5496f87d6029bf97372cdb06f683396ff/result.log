Processing contract: /unique_chucks/28/0x843bc5f5496f87d6029bf97372cdb06f683396ff.sol:BasicToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/28/0x843bc5f5496f87d6029bf97372cdb06f683396ff.sol:ERC20
Processing contract: /unique_chucks/28/0x843bc5f5496f87d6029bf97372cdb06f683396ff.sol:ERC20Basic
Processing contract: /unique_chucks/28/0x843bc5f5496f87d6029bf97372cdb06f683396ff.sol:Ownable
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/28/0x843bc5f5496f87d6029bf97372cdb06f683396ff.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/28/0x843bc5f5496f87d6029bf97372cdb06f683396ff.sol:StandardToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/28/0x843bc5f5496f87d6029bf97372cdb06f683396ff.sol:TokensSpreader
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[33mWarning[0m for UnrestrictedWrite in contract 'BasicToken':
    |
    |    balances[msg.sender] = balances[msg.sender].sub(_value);
  > |    balances[_to] = balances[_to].add(_value);
    |    emit Transfer(msg.sender, _to, _value);
    |    return true;
  at /unique_chucks/28/0x843bc5f5496f87d6029bf97372cdb06f683396ff.sol(150)

[33mWarning[0m for UnrestrictedWrite in contract 'Ownable':
    |    require(newOwner != address(0));
    |    emit OwnershipTransferred(owner, newOwner);
  > |    owner = newOwner;
    |  }
    |
  at /unique_chucks/28/0x843bc5f5496f87d6029bf97372cdb06f683396ff.sol(45)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |
    |    balances[msg.sender] = balances[msg.sender].sub(_value);
  > |    balances[_to] = balances[_to].add(_value);
    |    emit Transfer(msg.sender, _to, _value);
    |    return true;
  at /unique_chucks/28/0x843bc5f5496f87d6029bf97372cdb06f683396ff.sol(150)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |    require(_value <= allowed[_from][msg.sender]);
    |
  > |    balances[_from] = balances[_from].sub(_value);
    |    balances[_to] = balances[_to].add(_value);
    |    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
  at /unique_chucks/28/0x843bc5f5496f87d6029bf97372cdb06f683396ff.sol(210)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |
    |    balances[_from] = balances[_from].sub(_value);
  > |    balances[_to] = balances[_to].add(_value);
    |    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
    |    emit Transfer(_from, _to, _value);
  at /unique_chucks/28/0x843bc5f5496f87d6029bf97372cdb06f683396ff.sol(211)

[31mViolation[0m for LockedEther in contract 'TokensSpreader':
    |//begin TokensSpreader.sol
    |
  > |contract TokensSpreader is Ownable {
    |    StandardToken public token;
    |    address public sender;
  at /unique_chucks/28/0x843bc5f5496f87d6029bf97372cdb06f683396ff.sol(286)

[31mViolation[0m for RepeatedCall in contract 'TokensSpreader':
    |        }
    |        for (uint8 i = 0; i < addresses.length; i++) {
  > |            token.transferFrom(sender, addresses[i], amounts[i]);
    |        }
    |    }
  at /unique_chucks/28/0x843bc5f5496f87d6029bf97372cdb06f683396ff.sol(301)

[33mWarning[0m for UnrestrictedWrite in contract 'TokensSpreader':
    |    require(newOwner != address(0));
    |    emit OwnershipTransferred(owner, newOwner);
  > |    owner = newOwner;
    |  }
    |
  at /unique_chucks/28/0x843bc5f5496f87d6029bf97372cdb06f683396ff.sol(45)

[33mWarning[0m for UnrestrictedWrite in contract 'TokensSpreader':
    |
    |    function setSender(address _sender) public onlyOwner {
  > |        sender = _sender;
    |    }
    |
  at /unique_chucks/28/0x843bc5f5496f87d6029bf97372cdb06f683396ff.sol(306)

[33mWarning[0m for UnrestrictedWrite in contract 'TokensSpreader':
    |
    |    function setToken(address _tokenAddress) public onlyOwner {
  > |        token = StandardToken(_tokenAddress);
    |    }
    |
  at /unique_chucks/28/0x843bc5f5496f87d6029bf97372cdb06f683396ff.sol(310)

[33mWarning[0m for UnrestrictedWrite in contract 'TokensSpreader':
    |
    |    function resetWith(address _sender, address _tokenAddress) public onlyOwner {
  > |        sender = _sender;
    |        token = StandardToken(_tokenAddress);
    |    }
  at /unique_chucks/28/0x843bc5f5496f87d6029bf97372cdb06f683396ff.sol(314)

[33mWarning[0m for UnrestrictedWrite in contract 'TokensSpreader':
    |    function resetWith(address _sender, address _tokenAddress) public onlyOwner {
    |        sender = _sender;
  > |        token = StandardToken(_tokenAddress);
    |    }
    |}
  at /unique_chucks/28/0x843bc5f5496f87d6029bf97372cdb06f683396ff.sol(315)