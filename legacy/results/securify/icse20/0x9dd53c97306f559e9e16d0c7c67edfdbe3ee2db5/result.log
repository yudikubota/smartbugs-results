Processing contract: /unique_chucks/36/0x9dd53c97306f559e9e16d0c7c67edfdbe3ee2db5.sol:ZTY
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[33mWarning[0m for TODAmount in contract 'ZTY':
    |        balances[msg.sender] -= _value;                  
    |        revenue =   (_value * sellPrice) /numDecimalsSellPrice;
  > |        msg.sender.transfer(revenue);
    |        emit Sell(msg.sender, address (this), _value);             
    |        return revenue;                                   
  at /unique_chucks/36/0x9dd53c97306f559e9e16d0c7c67edfdbe3ee2db5.sol(75)

[31mViolation[0m for TODReceiver in contract 'ZTY':
    |    function returnFunds(uint256 _value) public onlyOwner {
    |        require (address (this).balance >= _value);
  > |        owner.transfer (_value);
    |        emit ReturnFunds(msg.sender, _value);
    |    }
  at /unique_chucks/36/0x9dd53c97306f559e9e16d0c7c67edfdbe3ee2db5.sol(36)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'ZTY':
    |        balances[msg.sender] -= _value;                  
    |        revenue =   (_value * sellPrice) /numDecimalsSellPrice;
  > |        msg.sender.transfer(revenue);
    |        emit Sell(msg.sender, address (this), _value);             
    |        return revenue;                                   
  at /unique_chucks/36/0x9dd53c97306f559e9e16d0c7c67edfdbe3ee2db5.sol(75)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'ZTY':
    |    function returnFunds(uint256 _value) public onlyOwner {
    |        require (address (this).balance >= _value);
  > |        owner.transfer (_value);
    |        emit ReturnFunds(msg.sender, _value);
    |    }
  at /unique_chucks/36/0x9dd53c97306f559e9e16d0c7c67edfdbe3ee2db5.sol(36)

[31mViolation[0m for UnrestrictedWrite in contract 'ZTY':
    |        require (balances[address (this)] >= _value);
    |        balances[msg.sender] += _value;
  > |        balances[address (this)] -= _value;
    |        emit Buy(address (this), msg.sender, _value);
    |        return _value;
  at /unique_chucks/36/0x9dd53c97306f559e9e16d0c7c67edfdbe3ee2db5.sol(65)

[31mViolation[0m for UnrestrictedWrite in contract 'ZTY':
    |    function sell(uint256 _value) public returns (uint256 revenue){
    |        require(balances[msg.sender] >= _value);
  > |        balances[address (this)] += _value;         
    |        balances[msg.sender] -= _value;                  
    |        revenue =   (_value * sellPrice) /numDecimalsSellPrice;
  at /unique_chucks/36/0x9dd53c97306f559e9e16d0c7c67edfdbe3ee2db5.sol(72)

[31mViolation[0m for UnrestrictedWrite in contract 'ZTY':
    |        require(balances[msg.sender] >= _value);
    |        balances[msg.sender] -= _value;
  > |        balances[_to] += _value;
    |        emit Transfer(msg.sender, _to, _value); 
    |        return true;
  at /unique_chucks/36/0x9dd53c97306f559e9e16d0c7c67edfdbe3ee2db5.sol(84)

[31mViolation[0m for UnrestrictedWrite in contract 'ZTY':
    |        require (_to != address(0x0));
    |        require(balances[_from] >= _value && allowance >= _value);
  > |        balances[_to] += _value;
    |        balances[_from] -= _value;
    |        allowed[_from][msg.sender] -= _value;
  at /unique_chucks/36/0x9dd53c97306f559e9e16d0c7c67edfdbe3ee2db5.sol(93)

[31mViolation[0m for UnrestrictedWrite in contract 'ZTY':
    |        require(balances[_from] >= _value && allowance >= _value);
    |        balances[_to] += _value;
  > |        balances[_from] -= _value;
    |        allowed[_from][msg.sender] -= _value;
    |        emit Transfer(_from, _to, _value); 
  at /unique_chucks/36/0x9dd53c97306f559e9e16d0c7c67edfdbe3ee2db5.sol(94)

[33mWarning[0m for UnrestrictedWrite in contract 'ZTY':
    |    }
    |    function transferOwnership(address payable newOwner) public onlyOwner {
  > |        owner = newOwner;
    |        emit TransferOwnership(newOwner); 
    |    }
  at /unique_chucks/36/0x9dd53c97306f559e9e16d0c7c67edfdbe3ee2db5.sol(49)

[33mWarning[0m for UnrestrictedWrite in contract 'ZTY':
    |    
    |    function setPrices(uint256 newSellPrice, uint256 newnumDecimalsSellPrice, uint256 newBuyPrice, uint256 newnumDecimalsBuyPrice) public onlyOwner {
  > |        sellPrice = newSellPrice;
    |        buyPrice = newBuyPrice;
    |        numDecimalsBuyPrice = newnumDecimalsBuyPrice;
  at /unique_chucks/36/0x9dd53c97306f559e9e16d0c7c67edfdbe3ee2db5.sol(54)

[33mWarning[0m for UnrestrictedWrite in contract 'ZTY':
    |    function setPrices(uint256 newSellPrice, uint256 newnumDecimalsSellPrice, uint256 newBuyPrice, uint256 newnumDecimalsBuyPrice) public onlyOwner {
    |        sellPrice = newSellPrice;
  > |        buyPrice = newBuyPrice;
    |        numDecimalsBuyPrice = newnumDecimalsBuyPrice;
    |        numDecimalsSellPrice = newnumDecimalsSellPrice;
  at /unique_chucks/36/0x9dd53c97306f559e9e16d0c7c67edfdbe3ee2db5.sol(55)

[33mWarning[0m for UnrestrictedWrite in contract 'ZTY':
    |        sellPrice = newSellPrice;
    |        buyPrice = newBuyPrice;
  > |        numDecimalsBuyPrice = newnumDecimalsBuyPrice;
    |        numDecimalsSellPrice = newnumDecimalsSellPrice;
    |        emit SetPrices(newSellPrice, newnumDecimalsSellPrice, newBuyPrice, newnumDecimalsBuyPrice);
  at /unique_chucks/36/0x9dd53c97306f559e9e16d0c7c67edfdbe3ee2db5.sol(56)

[33mWarning[0m for UnrestrictedWrite in contract 'ZTY':
    |        buyPrice = newBuyPrice;
    |        numDecimalsBuyPrice = newnumDecimalsBuyPrice;
  > |        numDecimalsSellPrice = newnumDecimalsSellPrice;
    |        emit SetPrices(newSellPrice, newnumDecimalsSellPrice, newBuyPrice, newnumDecimalsBuyPrice);
    |    }
  at /unique_chucks/36/0x9dd53c97306f559e9e16d0c7c67edfdbe3ee2db5.sol(57)

[33mWarning[0m for UnrestrictedWrite in contract 'ZTY':
    |        require(balances[msg.sender] >= _value);   // Check if the sender has enough
    |        balances[msg.sender] -= _value;            // Subtract from the sender
  > |        totalSupply -= _value;                      // Updates totalSupply
    |        emit Burn(msg.sender, _value);
    |        return true;
  at /unique_chucks/36/0x9dd53c97306f559e9e16d0c7c67edfdbe3ee2db5.sol(117)