Processing contract: /unique_chucks/24/0x2a224e87b56eec82b744f2af3bbe753231ce3d87.sol:Address
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/24/0x2a224e87b56eec82b744f2af3bbe753231ce3d87.sol:AdminUpgradeabilityProxy
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/24/0x2a224e87b56eec82b744f2af3bbe753231ce3d87.sol:AdminableProxy
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/24/0x2a224e87b56eec82b744f2af3bbe753231ce3d87.sol:IERC20
Processing contract: /unique_chucks/24/0x2a224e87b56eec82b744f2af3bbe753231ce3d87.sol:MinGov
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/24/0x2a224e87b56eec82b744f2af3bbe753231ce3d87.sol:Ownable
Processing contract: /unique_chucks/24/0x2a224e87b56eec82b744f2af3bbe753231ce3d87.sol:Proxy
Processing contract: /unique_chucks/24/0x2a224e87b56eec82b744f2af3bbe753231ce3d87.sol:UpgradeabilityProxy
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for RepeatedCall in contract 'AdminUpgradeabilityProxy':
    |      // Call the implementation.
    |      // out and outsize are 0 because we don't know the size yet.
  > |      let result := delegatecall(gas, implementation, 0, calldatasize, 0, 0)
    |
    |      // Copy the returned data.
  at /unique_chucks/24/0x2a224e87b56eec82b744f2af3bbe753231ce3d87.sol(151)

[33mWarning[0m for RepeatedCall in contract 'AdminUpgradeabilityProxy':
    |    _upgradeTo(newImplementation);
    |    bool rv;
  > |    (rv,) = newImplementation.delegatecall(data);
    |    require(rv);
    |  }
  at /unique_chucks/24/0x2a224e87b56eec82b744f2af3bbe753231ce3d87.sol(376)

[31mViolation[0m for RepeatedCall in contract 'AdminableProxy':
    |      // Call the implementation.
    |      // out and outsize are 0 because we don't know the size yet.
  > |      let result := delegatecall(gas, implementation, 0, calldatasize, 0, 0)
    |
    |      // Copy the returned data.
  at /unique_chucks/24/0x2a224e87b56eec82b744f2af3bbe753231ce3d87.sol(151)

[33mWarning[0m for RepeatedCall in contract 'AdminableProxy':
    |    _upgradeTo(newImplementation);
    |    bool rv;
  > |    (rv,) = newImplementation.delegatecall(data);
    |    require(rv);
    |  }
  at /unique_chucks/24/0x2a224e87b56eec82b744f2af3bbe753231ce3d87.sol(376)

[33mWarning[0m for RepeatedCall in contract 'AdminableProxy':
    |  function applyProposal(bytes calldata data) external ifAdmin returns (bool) {
    |    bool rv;
  > |    (rv, ) = _implementation().delegatecall(data);
    |    return rv;
    |  }
  at /unique_chucks/24/0x2a224e87b56eec82b744f2af3bbe753231ce3d87.sol(433)

[31mViolation[0m for LockedEther in contract 'MinGov':
    |}
    |
  > |contract MinGov is Ownable {
    |  
    |  uint256 public proposalTime;
  at /unique_chucks/24/0x2a224e87b56eec82b744f2af3bbe753231ce3d87.sol(439)

[31mViolation[0m for RepeatedCall in contract 'MinGov':
    |          if (sig == 0x8f283970||sig == 0x3659cfe6||sig == 0x983b2d56) {
    |            // this changes proxy parameters 
  > |            (rv, ) = prop.subject.call(prop.msgData);
    |          } else {
    |            // this changes governance parameters to the implementation
  at /unique_chucks/24/0x2a224e87b56eec82b744f2af3bbe753231ce3d87.sol(499)

[31mViolation[0m for RepeatedCall in contract 'MinGov':
    |          } else {
    |            // this changes governance parameters to the implementation
  > |            rv = AdminableProxy(address(uint160(prop.subject))).applyProposal(prop.msgData);
    |          }
    |          if (rv) {
  at /unique_chucks/24/0x2a224e87b56eec82b744f2af3bbe753231ce3d87.sol(502)

[31mViolation[0m for UnrestrictedWrite in contract 'MinGov':
    |}
    |
  > |contract MinGov is Ownable {
    |  
    |  uint256 public proposalTime;
  at /unique_chucks/24/0x2a224e87b56eec82b744f2af3bbe753231ce3d87.sol(439)

[31mViolation[0m for UnrestrictedWrite in contract 'MinGov':
    |    );
    |    emit NewProposal(first + size, _subject, _msgData);
  > |    size++;
    |  }
    |  
  at /unique_chucks/24/0x2a224e87b56eec82b744f2af3bbe753231ce3d87.sol(472)

[31mViolation[0m for UnrestrictedWrite in contract 'MinGov':
    |          }
    |        }
  > |        delete proposals[i];
    |        first++;
    |        size--;
  at /unique_chucks/24/0x2a224e87b56eec82b744f2af3bbe753231ce3d87.sol(508)

[31mViolation[0m for UnrestrictedWrite in contract 'MinGov':
    |        }
    |        delete proposals[i];
  > |        first++;
    |        size--;
    |      }
  at /unique_chucks/24/0x2a224e87b56eec82b744f2af3bbe753231ce3d87.sol(509)

[31mViolation[0m for UnrestrictedWrite in contract 'MinGov':
    |        delete proposals[i];
    |        first++;
  > |        size--;
    |      }
    |    }
  at /unique_chucks/24/0x2a224e87b56eec82b744f2af3bbe753231ce3d87.sol(510)

[33mWarning[0m for UnrestrictedWrite in contract 'MinGov':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipTransferred(_owner, address(0));
  > |        _owner = address(0);
    |    }
    |
  at /unique_chucks/24/0x2a224e87b56eec82b744f2af3bbe753231ce3d87.sol(60)

[33mWarning[0m for UnrestrictedWrite in contract 'MinGov':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_chucks/24/0x2a224e87b56eec82b744f2af3bbe753231ce3d87.sol(78)

[33mWarning[0m for UnrestrictedWrite in contract 'MinGov':
    |}
    |
  > |contract MinGov is Ownable {
    |  
    |  uint256 public proposalTime;
  at /unique_chucks/24/0x2a224e87b56eec82b744f2af3bbe753231ce3d87.sol(439)

[33mWarning[0m for UnrestrictedWrite in contract 'MinGov':
    |  function propose(address _subject, bytes memory _msgData) public onlyOwner {
    |    require(size < 5);
  > |    proposals[first + size] = Proposal(
    |      _subject,
    |      uint32(now),
  at /unique_chucks/24/0x2a224e87b56eec82b744f2af3bbe753231ce3d87.sol(465)

[33mWarning[0m for UnrestrictedWrite in contract 'MinGov':
    |    require(prop.created > 0);
    |    require(prop.canceled == false);
  > |    prop.canceled = true;
    |  }
    |
  at /unique_chucks/24/0x2a224e87b56eec82b744f2af3bbe753231ce3d87.sol(479)