Processing contract: /unique_chucks/14/0x5d4456d1f4203645fd9c194e654594a72d5e6c76.sol:Bank
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
java.io.IOException: Timeout for /tmp/binaries_souffle7395116953084818425/mustExplicit -j 2 -F /tmp/souffle-1e8ca744-af9e-4171-8fff-ae0be35069f4 -D /tmp/souffle-1e8ca744-af9e-4171-8fff-ae0be35069f4_OUT
	at ch.securify.analysis.AbstractDataflow.runCommand(AbstractDataflow.java:277)
	at ch.securify.analysis.AbstractDataflow.initDataflow(AbstractDataflow.java:169)
	at ch.securify.analysis.MustExplicitDataflow.<init>(MustExplicitDataflow.java:33)
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:33)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error in Securify
java.lang.RuntimeException
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:37)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error, skipping: /unique_chucks/14/0x5d4456d1f4203645fd9c194e654594a72d5e6c76.sol:Bank
Processing contract: /unique_chucks/14/0x5d4456d1f4203645fd9c194e654594a72d5e6c76.sol:CryptoTeam
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/14/0x5d4456d1f4203645fd9c194e654594a72d5e6c76.sol:DEEX
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/14/0x5d4456d1f4203645fd9c194e654594a72d5e6c76.sol:Dragons
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/14/0x5d4456d1f4203645fd9c194e654594a72d5e6c76.sol:Hamsters
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/14/0x5d4456d1f4203645fd9c194e654594a72d5e6c76.sol:Ownable
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/14/0x5d4456d1f4203645fd9c194e654594a72d5e6c76.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/14/0x5d4456d1f4203645fd9c194e654594a72d5e6c76.sol:allowanceRecipient
Processing contract: /unique_chucks/14/0x5d4456d1f4203645fd9c194e654594a72d5e6c76.sol:tokenRecipient
[31mViolation[0m for RepeatedCall in contract 'CryptoTeam':
    |        require(BankContract.getState() && msg.value >= 0.05 ether);
    |
  > |        BankContract.setInfo(msg.sender, msg.value.mul(90).div(100));
    |
    |        team.transfer(msg.value.mul(10).div(100));
  at /unique_chucks/14/0x5d4456d1f4203645fd9c194e654594a72d5e6c76.sol(1123)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'CryptoTeam':
    |        BankContract.setInfo(msg.sender, msg.value.mul(90).div(100));
    |
  > |        team.transfer(msg.value.mul(10).div(100));
    |
    |        address(BankContract).transfer(msg.value.mul(90).div(100));
  at /unique_chucks/14/0x5d4456d1f4203645fd9c194e654594a72d5e6c76.sol(1125)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'CryptoTeam':
    |        team.transfer(msg.value.mul(10).div(100));
    |
  > |        address(BankContract).transfer(msg.value.mul(90).div(100));
    |    }
    |}
  at /unique_chucks/14/0x5d4456d1f4203645fd9c194e654594a72d5e6c76.sol(1127)

[31mViolation[0m for TODAmount in contract 'DEEX':
    |        if (
    |        // makes withdrawal and returns true or false
  > |            !msg.sender.send(address(this).balance)
    |        ) {
    |            return false;
  at /unique_chucks/14/0x5d4456d1f4203645fd9c194e654594a72d5e6c76.sol(474)

[31mViolation[0m for UnrestrictedWrite in contract 'DEEX':
    |
    |                balanceOf[msg.sender] = balanceOf[msg.sender] + numberOfTokens;
  > |                balanceOf[address(this)] = balanceOf[address(this)] - numberOfTokens;
    |
    |                emit NewTokensSold(numberOfTokens, msg.sender, tokenPriceInWei);
  at /unique_chucks/14/0x5d4456d1f4203645fd9c194e654594a72d5e6c76.sol(445)

[31mViolation[0m for UnrestrictedWrite in contract 'DEEX':
    |                if (numberOfTokens <= balanceOf[address(this)]) {
    |
  > |                    referrerLinkedSales[referrer] = referrerLinkedSales[referrer] + numberOfTokens;
    |
    |                    uint256 referralBonusTokens = (numberOfTokens * (100 + referralBonus) / 100) - numberOfTokens;
  at /unique_chucks/14/0x5d4456d1f4203645fd9c194e654594a72d5e6c76.sol(530)

[31mViolation[0m for UnrestrictedWrite in contract 'DEEX':
    |                    uint256 referrerBonusTokens = (numberOfTokens * (100 + referrerBonus) / 100) - numberOfTokens;
    |
  > |                    balanceOf[address(this)] = balanceOf[address(this)] - numberOfTokens - referralBonusTokens - referrerBonusTokens;
    |
    |                    balanceOf[msg.sender] = balanceOf[msg.sender] + (numberOfTokens + referralBonusTokens);
  at /unique_chucks/14/0x5d4456d1f4203645fd9c194e654594a72d5e6c76.sol(535)

[31mViolation[0m for UnrestrictedWrite in contract 'DEEX':
    |                    balanceOf[msg.sender] = balanceOf[msg.sender] + (numberOfTokens + referralBonusTokens);
    |
  > |                    referrerBalanceOf[referrer] = referrerBalanceOf[referrer] + referrerBonusTokens;
    |
    |                    emit NewTokensSold(numberOfTokens + referralBonusTokens, msg.sender, tokenPriceInWei);
  at /unique_chucks/14/0x5d4456d1f4203645fd9c194e654594a72d5e6c76.sol(539)

[33mWarning[0m for UnrestrictedWrite in contract 'DEEX':
    |
    |        require(contractInitialized == false);
  > |        contractInitialized = true;
    |
    |        priceSetter = msg.sender;
  at /unique_chucks/14/0x5d4456d1f4203645fd9c194e654594a72d5e6c76.sol(123)

[33mWarning[0m for UnrestrictedWrite in contract 'DEEX':
    |        contractInitialized = true;
    |
  > |        priceSetter = msg.sender;
    |
    |        totalSupply = 100000000;
  at /unique_chucks/14/0x5d4456d1f4203645fd9c194e654594a72d5e6c76.sol(125)

[33mWarning[0m for UnrestrictedWrite in contract 'DEEX':
    |        priceSetter = msg.sender;
    |
  > |        totalSupply = 100000000;
    |
    |        // tokens for sale go SC own account
  at /unique_chucks/14/0x5d4456d1f4203645fd9c194e654594a72d5e6c76.sol(127)

[33mWarning[0m for UnrestrictedWrite in contract 'DEEX':
    |
    |        // tokens for sale go SC own account
  > |        balanceOf[address(this)] = 75000000;
    |
    |        // for the team
  at /unique_chucks/14/0x5d4456d1f4203645fd9c194e654594a72d5e6c76.sol(130)

[33mWarning[0m for UnrestrictedWrite in contract 'DEEX':
    |
    |        // for the team
  > |        balanceOf[team] = balanceOf[team] + 15000000;
    |        isPreferredTokensAccount[team] = true;
    |
  at /unique_chucks/14/0x5d4456d1f4203645fd9c194e654594a72d5e6c76.sol(133)

[33mWarning[0m for UnrestrictedWrite in contract 'DEEX':
    |        // for the team
    |        balanceOf[team] = balanceOf[team] + 15000000;
  > |        isPreferredTokensAccount[team] = true;
    |
    |        // for advisers
  at /unique_chucks/14/0x5d4456d1f4203645fd9c194e654594a72d5e6c76.sol(134)

[33mWarning[0m for UnrestrictedWrite in contract 'DEEX':
    |
    |        // for advisers
  > |        balanceOf[advisers] = balanceOf[advisers] + 7000000;
    |        isPreferredTokensAccount[advisers] = true;
    |
  at /unique_chucks/14/0x5d4456d1f4203645fd9c194e654594a72d5e6c76.sol(137)

[33mWarning[0m for UnrestrictedWrite in contract 'DEEX':
    |        // for advisers
    |        balanceOf[advisers] = balanceOf[advisers] + 7000000;
  > |        isPreferredTokensAccount[advisers] = true;
    |
    |        // for the bounty campaign
  at /unique_chucks/14/0x5d4456d1f4203645fd9c194e654594a72d5e6c76.sol(138)

[33mWarning[0m for UnrestrictedWrite in contract 'DEEX':
    |
    |        // for the bounty campaign
  > |        balanceOf[bounty] = balanceOf[bounty] + 3000000;
    |        isPreferredTokensAccount[bounty] = true;
    |
  at /unique_chucks/14/0x5d4456d1f4203645fd9c194e654594a72d5e6c76.sol(141)

[33mWarning[0m for UnrestrictedWrite in contract 'DEEX':
    |        // for the bounty campaign
    |        balanceOf[bounty] = balanceOf[bounty] + 3000000;
  > |        isPreferredTokensAccount[bounty] = true;
    |
    |    }
  at /unique_chucks/14/0x5d4456d1f4203645fd9c194e654594a72d5e6c76.sol(142)

[33mWarning[0m for UnrestrictedWrite in contract 'DEEX':
    |        //
    |        // Add the same to the recipient
  > |        balanceOf[_to] = balanceOf[_to] + _value;
    |
    |        // If allowance used, change allowances correspondingly
  at /unique_chucks/14/0x5d4456d1f4203645fd9c194e654594a72d5e6c76.sol(216)

[33mWarning[0m for UnrestrictedWrite in contract 'DEEX':
    |
    |        address oldOwner = owner;
  > |        owner = _newOwner;
    |
    |        emit OwnerChanged(oldOwner, _newOwner);
  at /unique_chucks/14/0x5d4456d1f4203645fd9c194e654594a72d5e6c76.sol(311)

[33mWarning[0m for UnrestrictedWrite in contract 'DEEX':
    |        require(_endUnixTime - _startUnixTime > 0);
    |
  > |        saleStartUnixTime = _startUnixTime;
    |        saleEndUnixTime = _endUnixTime;
    |        salesCounter = salesCounter + 1;
  at /unique_chucks/14/0x5d4456d1f4203645fd9c194e654594a72d5e6c76.sol(350)

[33mWarning[0m for UnrestrictedWrite in contract 'DEEX':
    |
    |        saleStartUnixTime = _startUnixTime;
  > |        saleEndUnixTime = _endUnixTime;
    |        salesCounter = salesCounter + 1;
    |
  at /unique_chucks/14/0x5d4456d1f4203645fd9c194e654594a72d5e6c76.sol(351)

[33mWarning[0m for UnrestrictedWrite in contract 'DEEX':
    |        saleStartUnixTime = _startUnixTime;
    |        saleEndUnixTime = _endUnixTime;
  > |        salesCounter = salesCounter + 1;
    |
    |        emit SaleStarted(_startUnixTime, _endUnixTime, salesCounter);
  at /unique_chucks/14/0x5d4456d1f4203645fd9c194e654594a72d5e6c76.sol(352)

[33mWarning[0m for UnrestrictedWrite in contract 'DEEX':
    |
    |    function changePriceSetter(address _priceSetter) public onlyBy(owner) returns (bool success) {
  > |        priceSetter = _priceSetter;
    |        return true;
    |    }
  at /unique_chucks/14/0x5d4456d1f4203645fd9c194e654594a72d5e6c76.sol(394)

[33mWarning[0m for UnrestrictedWrite in contract 'DEEX':
    |    function setMinMaxPriceInWei(uint256 _priceMinWei, uint256 _priceMaxWei) public onlyBy(owner) returns (bool success){
    |        require(_priceMinWei >= 0 && _priceMaxWei >= 0);
  > |        priceMinWei = _priceMinWei;
    |        priceMaxWei = _priceMaxWei;
    |        return true;
  at /unique_chucks/14/0x5d4456d1f4203645fd9c194e654594a72d5e6c76.sol(400)

[33mWarning[0m for UnrestrictedWrite in contract 'DEEX':
    |        require(_priceMinWei >= 0 && _priceMaxWei >= 0);
    |        priceMinWei = _priceMinWei;
  > |        priceMaxWei = _priceMaxWei;
    |        return true;
    |    }
  at /unique_chucks/14/0x5d4456d1f4203645fd9c194e654594a72d5e6c76.sol(401)

[33mWarning[0m for UnrestrictedWrite in contract 'DEEX':
    |        // if 0 - not set
    |        if (priceMinWei != 0 && _priceInWei < priceMinWei) {
  > |            tokenPriceInWei = priceMinWei;
    |        }
    |        else if (priceMaxWei != 0 && _priceInWei > priceMaxWei) {
  at /unique_chucks/14/0x5d4456d1f4203645fd9c194e654594a72d5e6c76.sol(412)

[33mWarning[0m for UnrestrictedWrite in contract 'DEEX':
    |        }
    |        else if (priceMaxWei != 0 && _priceInWei > priceMaxWei) {
  > |            tokenPriceInWei = priceMaxWei;
    |        }
    |        else {
  at /unique_chucks/14/0x5d4456d1f4203645fd9c194e654594a72d5e6c76.sol(415)

[33mWarning[0m for UnrestrictedWrite in contract 'DEEX':
    |        }
    |        else {
  > |            tokenPriceInWei = _priceInWei;
    |        }
    |
  at /unique_chucks/14/0x5d4456d1f4203645fd9c194e654594a72d5e6c76.sol(418)

[33mWarning[0m for UnrestrictedWrite in contract 'DEEX':
    |
    |    function addReferrer(bytes32 _referrer) public onlyBy(owner) returns (bool success){
  > |        isReferrer[_referrer] = true;
    |        return true;
    |    }
  at /unique_chucks/14/0x5d4456d1f4203645fd9c194e654594a72d5e6c76.sol(501)

[33mWarning[0m for UnrestrictedWrite in contract 'DEEX':
    |
    |    function removeReferrer(bytes32 _referrer) public onlyBy(owner) returns (bool success){
  > |        isReferrer[_referrer] = false;
    |        return true;
    |    }
  at /unique_chucks/14/0x5d4456d1f4203645fd9c194e654594a72d5e6c76.sol(506)

[33mWarning[0m for UnrestrictedWrite in contract 'DEEX':
    |    function setReferralBonuses(uint256 _referralBonus, uint256 _referrerBonus) public onlyBy(owner) returns (bool success){
    |        require(_referralBonus > 0 && _referrerBonus > 0);
  > |        referralBonus = _referralBonus;
    |        referrerBonus = _referrerBonus;
    |        return true;
  at /unique_chucks/14/0x5d4456d1f4203645fd9c194e654594a72d5e6c76.sol(513)

[33mWarning[0m for UnrestrictedWrite in contract 'DEEX':
    |        require(_referralBonus > 0 && _referrerBonus > 0);
    |        referralBonus = _referralBonus;
  > |        referrerBonus = _referrerBonus;
    |        return true;
    |    }
  at /unique_chucks/14/0x5d4456d1f4203645fd9c194e654594a72d5e6c76.sol(514)

[31mViolation[0m for RepeatedCall in contract 'Dragons':
    |        require(BankContract.getState() && msg.value >= 0.05 ether);
    |
  > |        BankContract.setInfo(msg.sender, msg.value.mul(90).div(100));
    |
    |        team.transfer(msg.value.mul(10).div(100));
  at /unique_chucks/14/0x5d4456d1f4203645fd9c194e654594a72d5e6c76.sol(1123)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'Dragons':
    |        BankContract.setInfo(msg.sender, msg.value.mul(90).div(100));
    |
  > |        team.transfer(msg.value.mul(10).div(100));
    |
    |        address(BankContract).transfer(msg.value.mul(90).div(100));
  at /unique_chucks/14/0x5d4456d1f4203645fd9c194e654594a72d5e6c76.sol(1125)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'Dragons':
    |        team.transfer(msg.value.mul(10).div(100));
    |
  > |        address(BankContract).transfer(msg.value.mul(90).div(100));
    |    }
    |}
  at /unique_chucks/14/0x5d4456d1f4203645fd9c194e654594a72d5e6c76.sol(1127)

[31mViolation[0m for RepeatedCall in contract 'Hamsters':
    |        require(BankContract.getState() && msg.value >= 0.05 ether);
    |
  > |        BankContract.setInfo(msg.sender, msg.value.mul(90).div(100));
    |
    |        team.transfer(msg.value.mul(10).div(100));
  at /unique_chucks/14/0x5d4456d1f4203645fd9c194e654594a72d5e6c76.sol(1123)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'Hamsters':
    |        BankContract.setInfo(msg.sender, msg.value.mul(90).div(100));
    |
  > |        team.transfer(msg.value.mul(10).div(100));
    |
    |        address(BankContract).transfer(msg.value.mul(90).div(100));
  at /unique_chucks/14/0x5d4456d1f4203645fd9c194e654594a72d5e6c76.sol(1125)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'Hamsters':
    |        team.transfer(msg.value.mul(10).div(100));
    |
  > |        address(BankContract).transfer(msg.value.mul(90).div(100));
    |    }
    |}
  at /unique_chucks/14/0x5d4456d1f4203645fd9c194e654594a72d5e6c76.sol(1127)

[33mWarning[0m for UnrestrictedWrite in contract 'Ownable':
    |    function transferOwnership(address payable newOwner) public onlyOwner {
    |        require(newOwner != address(0));
  > |        owner = newOwner;
    |    }
    |}
  at /unique_chucks/14/0x5d4456d1f4203645fd9c194e654594a72d5e6c76.sol(656)