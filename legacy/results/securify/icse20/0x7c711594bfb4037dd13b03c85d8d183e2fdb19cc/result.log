Processing contract: /unique_chucks/37/0x7c711594bfb4037dd13b03c85d8d183e2fdb19cc.sol:BZxOwnable
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/37/0x7c711594bfb4037dd13b03c85d8d183e2fdb19cc.sol:BZxTo0x
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/37/0x7c711594bfb4037dd13b03c85d8d183e2fdb19cc.sol:BZxTo0xShared
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/37/0x7c711594bfb4037dd13b03c85d8d183e2fdb19cc.sol:EIP20
Processing contract: /unique_chucks/37/0x7c711594bfb4037dd13b03c85d8d183e2fdb19cc.sol:EIP20Wrapper
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/37/0x7c711594bfb4037dd13b03c85d8d183e2fdb19cc.sol:ERC20
Processing contract: /unique_chucks/37/0x7c711594bfb4037dd13b03c85d8d183e2fdb19cc.sol:ERC20Basic
Processing contract: /unique_chucks/37/0x7c711594bfb4037dd13b03c85d8d183e2fdb19cc.sol:ExchangeInterface
Processing contract: /unique_chucks/37/0x7c711594bfb4037dd13b03c85d8d183e2fdb19cc.sol:NonCompliantEIP20
Processing contract: /unique_chucks/37/0x7c711594bfb4037dd13b03c85d8d183e2fdb19cc.sol:Ownable
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/37/0x7c711594bfb4037dd13b03c85d8d183e2fdb19cc.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[33mWarning[0m for UnrestrictedWrite in contract 'BZxOwnable':
    |        require(newBZxContractAddress != address(0) && newBZxContractAddress != owner, "transferBZxOwnership::unauthorized");
    |        emit BZxOwnershipTransferred(bZxContractAddress, newBZxContractAddress);
  > |        bZxContractAddress = newBZxContractAddress;
    |    }
    |
  at /unique_chucks/37/0x7c711594bfb4037dd13b03c85d8d183e2fdb19cc.sol(262)

[33mWarning[0m for UnrestrictedWrite in contract 'BZxOwnable':
    |        require(newOwner != address(0) && newOwner != bZxContractAddress, "transferOwnership::unauthorized");
    |        emit OwnershipTransferred(owner, newOwner);
  > |        owner = newOwner;
    |    }
    |}
  at /unique_chucks/37/0x7c711594bfb4037dd13b03c85d8d183e2fdb19cc.sol(273)

[31mViolation[0m for LockedEther in contract 'BZxTo0x':
    |}
    |
  > |contract BZxTo0x is BZxTo0xShared, EIP20Wrapper, BZxOwnable {
    |    using SafeMath for uint256;
    |
  at /unique_chucks/37/0x7c711594bfb4037dd13b03c85d8d183e2fdb19cc.sol(407)

[31mViolation[0m for RepeatedCall in contract 'BZxTo0x':
    |        returns (bool result) {
    |
  > |        NonCompliantEIP20(token).transfer(to, value);
    |
    |        assembly {
  at /unique_chucks/37/0x7c711594bfb4037dd13b03c85d8d183e2fdb19cc.sol(61)

[31mViolation[0m for RepeatedCall in contract 'BZxTo0x':
    |        returns (bool result) {
    |
  > |        NonCompliantEIP20(token).transferFrom(from, to, value);
    |
    |        assembly {
  at /unique_chucks/37/0x7c711594bfb4037dd13b03c85d8d183e2fdb19cc.sol(88)

[31mViolation[0m for RepeatedCall in contract 'BZxTo0x':
    |        returns (bool result) {
    |
  > |        NonCompliantEIP20(token).approve(spender, value);
    |
    |        assembly {
  at /unique_chucks/37/0x7c711594bfb4037dd13b03c85d8d183e2fdb19cc.sol(114)

[31mViolation[0m for RepeatedCall in contract 'BZxTo0x':
    |        // Make sure there is enough allowance for 0x Exchange Proxy to transfer the sourceToken needed for the 0x trade
    |        // orderAddresses0x[0][3] -> takerToken/sourceToken
  > |        uint256 tempAllowance = EIP20(orderAddresses0x[0][3]).allowance(address(this), tokenTransferProxyContract);
    |        if (tempAllowance < sourceTokenAmountToUse) {
    |            if (tempAllowance > 0) {
  at /unique_chucks/37/0x7c711594bfb4037dd13b03c85d8d183e2fdb19cc.sol(640)

[31mViolation[0m for RepeatedCall in contract 'BZxTo0x':
    |
    |        if (orderAddresses0x.length > 1) {
  > |            sourceTokenUsedAmount = ExchangeInterface(exchangeContract).fillOrdersUpTo(
    |                orderAddresses0x,
    |                orderValues0x,
  at /unique_chucks/37/0x7c711594bfb4037dd13b03c85d8d183e2fdb19cc.sol(657)

[31mViolation[0m for RepeatedCall in contract 'BZxTo0x':
    |                s);
    |        } else {
  > |            sourceTokenUsedAmount = ExchangeInterface(exchangeContract).fillOrder(
    |                orderAddresses0x[0],
    |                orderValues0x[0],
  at /unique_chucks/37/0x7c711594bfb4037dd13b03c85d8d183e2fdb19cc.sol(666)

[31mViolation[0m for UnrestrictedWrite in contract 'Ownable':
    |    require(_newOwner != address(0));
    |    emit OwnershipTransferred(owner, _newOwner);
  > |    owner = _newOwner;
    |  }
    |}
  at /unique_chucks/37/0x7c711594bfb4037dd13b03c85d8d183e2fdb19cc.sol(239)

[33mWarning[0m for UnrestrictedWrite in contract 'Ownable':
    |    require(_newOwner != address(0));
    |    emit OwnershipTransferred(owner, _newOwner);
  > |    owner = _newOwner;
    |  }
    |}
  at /unique_chucks/37/0x7c711594bfb4037dd13b03c85d8d183e2fdb19cc.sol(239)