Processing contract: /unique_chucks/24/0x9f7002b797ed7170d7e5c7326781bc0dd83055b9.sol:CAPZ
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/24/0x9f7002b797ed7170d7e5c7326781bc0dd83055b9.sol:ERC20
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/24/0x9f7002b797ed7170d7e5c7326781bc0dd83055b9.sol:IERC20
Processing contract: /unique_chucks/24/0x9f7002b797ed7170d7e5c7326781bc0dd83055b9.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for TODAmount in contract 'CAPZ':
    |    require(0 < amount);
    |
  > |    msg.sender.transfer(amount);
    |  }
    |
  at /unique_chucks/24/0x9f7002b797ed7170d7e5c7326781bc0dd83055b9.sol(251)

[33mWarning[0m for TODAmount in contract 'CAPZ':
    |
    |    refunds[msg.sender] = 0;
  > |    msg.sender.transfer(amount);
    |  }
    |
  at /unique_chucks/24/0x9f7002b797ed7170d7e5c7326781bc0dd83055b9.sol(238)

[33mWarning[0m for UnrestrictedWrite in contract 'CAPZ':
    |    require(_goalLimitMinInWei < _goalLimitMaxInWei);
    |
  > |    goalLimitMinInWei = _goalLimitMinInWei;
    |    goalLimitMaxInWei = _goalLimitMaxInWei;
    |
  at /unique_chucks/24/0x9f7002b797ed7170d7e5c7326781bc0dd83055b9.sol(278)

[33mWarning[0m for UnrestrictedWrite in contract 'CAPZ':
    |
    |    goalLimitMinInWei = _goalLimitMinInWei;
  > |    goalLimitMaxInWei = _goalLimitMaxInWei;
    |
    |    emit GoalChange(_goalLimitMinInWei, _goalLimitMaxInWei);
  at /unique_chucks/24/0x9f7002b797ed7170d7e5c7326781bc0dd83055b9.sol(279)

[33mWarning[0m for UnrestrictedWrite in contract 'CAPZ':
    |    require(address(this) != newOwner);
    |
  > |    owner = newOwner;
    |  }
    |
  at /unique_chucks/24/0x9f7002b797ed7170d7e5c7326781bc0dd83055b9.sol(289)

[31mViolation[0m for LockedEther in contract 'ERC20':
    |/// @dev This is taken from https://github.com/OpenZeppelin/openzeppelin-solidity project.
    |/// https://github.com/OpenZeppelin/openzeppelin-solidity/blob/67bca857eedf99bf44a4b6a0fc5b5ed553135316/contracts/token/ERC20/ERC20.sol
  > |contract ERC20 is IERC20 {
    |  using SafeMath for uint256;
    |
  at /unique_chucks/24/0x9f7002b797ed7170d7e5c7326781bc0dd83055b9.sol(31)

[33mWarning[0m for UnrestrictedWrite in contract 'ERC20':
    |
    |    balances[from] = balances[from].sub(value);
  > |    balances[to] = balances[to].add(value);
    |
    |    emit Transfer(from, to, value);
  at /unique_chucks/24/0x9f7002b797ed7170d7e5c7326781bc0dd83055b9.sol(100)