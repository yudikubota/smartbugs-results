Processing contract: /unique_chucks/45/0x62632f870244ad9a9f74978489aafee0a859fdca.sol:Bytes
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/45/0x62632f870244ad9a9f74978489aafee0a859fdca.sol:Marmo
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/45/0x62632f870244ad9a9f74978489aafee0a859fdca.sol:MarmoStork
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/45/0x62632f870244ad9a9f74978489aafee0a859fdca.sol:MinimalProxy
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/45/0x62632f870244ad9a9f74978489aafee0a859fdca.sol:SigUtils
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for UnrestrictedWrite in contract 'Marmo':
    |        assembly { signer := sload(signerSlot) }
    |        require(signer == address(0), "Signer already defined");
  > |        assembly { sstore(signerSlot, _signer) }
    |    }
    |
  at /unique_chucks/45/0x62632f870244ad9a9f74978489aafee0a859fdca.sol(71)

[33mWarning[0m for UnrestrictedWrite in contract 'Marmo':
    |
    |        // Save the receipt before performing any other action
  > |        intentReceipt[id] = _encodeReceipt(false, block.number, msg.sender);
    |
    |        // Emit the 'relayed' event
  at /unique_chucks/45/0x62632f870244ad9a9f74978489aafee0a859fdca.sol(147)

[33mWarning[0m for UnrestrictedWrite in contract 'Marmo':
    |
    |        emit Canceled(_id);
  > |        intentReceipt[_id] = _encodeReceipt(true, 0, address(0));
    |    }
    |
  at /unique_chucks/45/0x62632f870244ad9a9f74978489aafee0a859fdca.sol(180)

[31mViolation[0m for MissingInputValidation in contract 'MarmoStork':
    |    // Calculates the Marmo wallet for a given signer
    |    // the wallet contract will be deployed in a deterministic manner
  > |    function marmoOf(address _signer) external view returns (address) {
    |        // CREATE2 address
    |        return address(
  at /unique_chucks/45/0x62632f870244ad9a9f74978489aafee0a859fdca.sol(409)

[31mViolation[0m for MissingInputValidation in contract 'MarmoStork':
    |    // Deploys the Marmo wallet of a given _signer
    |    // all ETH sent will be forwarded to the wallet
  > |    function reveal(address _signer) external payable {
    |        // Load init code from storage
    |        bytes memory proxyCode = bytecode;
  at /unique_chucks/45/0x62632f870244ad9a9f74978489aafee0a859fdca.sol(427)

[33mWarning[0m for TODAmount in contract 'MarmoStork':
    |        // Init wallet with provided _signer
    |        // and forward all Ether
  > |        p.init.value(msg.value)(_signer);
    |    }
    |}
  at /unique_chucks/45/0x62632f870244ad9a9f74978489aafee0a859fdca.sol(440)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'MarmoStork':
    |        // Init wallet with provided _signer
    |        // and forward all Ether
  > |        p.init.value(msg.value)(_signer);
    |    }
    |}
  at /unique_chucks/45/0x62632f870244ad9a9f74978489aafee0a859fdca.sol(440)