Processing contract: /unique_chucks/40/0xedde46861c52d139145912b39c756407992af4fb.sol:BurnableToken
Processing contract: /unique_chucks/40/0xedde46861c52d139145912b39c756407992af4fb.sol:CappedToken
Processing contract: /unique_chucks/40/0xedde46861c52d139145912b39c756407992af4fb.sol:Crowdsale
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/40/0xedde46861c52d139145912b39c756407992af4fb.sol:IERC20
Processing contract: /unique_chucks/40/0xedde46861c52d139145912b39c756407992af4fb.sol:Manageable
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/40/0xedde46861c52d139145912b39c756407992af4fb.sol:MintableToken
Processing contract: /unique_chucks/40/0xedde46861c52d139145912b39c756407992af4fb.sol:Ownable
Processing contract: /unique_chucks/40/0xedde46861c52d139145912b39c756407992af4fb.sol:Pausable
Processing contract: /unique_chucks/40/0xedde46861c52d139145912b39c756407992af4fb.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/40/0xedde46861c52d139145912b39c756407992af4fb.sol:StandardToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/40/0xedde46861c52d139145912b39c756407992af4fb.sol:Token
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/40/0xedde46861c52d139145912b39c756407992af4fb.sol:Withdrawable
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[33mWarning[0m for UnrestrictedEtherFlow in contract 'Crowdsale':
    |        require(address(this).balance >= _value);
    |
  > |        address(_to).transfer(_value);
    |
    |        emit WithdrawEther(_to, _value);
  at /unique_chucks/40/0xedde46861c52d139145912b39c756407992af4fb.sol(268)

[31mViolation[0m for UnrestrictedWrite in contract 'Crowdsale':
    |
    |        for(; index < managers.length - 1; index++) {
  > |            managers[index] = managers[index + 1];
    |        }
    |        
  at /unique_chucks/40/0xedde46861c52d139145912b39c756407992af4fb.sol(368)

[31mViolation[0m for UnrestrictedWrite in contract 'Crowdsale':
    |}
    |
  > |contract Crowdsale is Manageable, Withdrawable, Pausable {
    |    using SafeMath for uint;
    |
  at /unique_chucks/40/0xedde46861c52d139145912b39c756407992af4fb.sol(383)

[33mWarning[0m for UnrestrictedWrite in contract 'Crowdsale':
    |/**
  > | *Submitted for verification at Etherscan.io on 2019-05-29
    |*/
    |
  at /unique_chucks/40/0xedde46861c52d139145912b39c756407992af4fb.sol(2)

[33mWarning[0m for UnrestrictedWrite in contract 'Crowdsale':
    |        require(!isManager(_manager));
    |
  > |        managers.push(_manager);
    |
    |        emit ManagerAdded(_manager);
  at /unique_chucks/40/0xedde46861c52d139145912b39c756407992af4fb.sol(352)

[33mWarning[0m for UnrestrictedWrite in contract 'Crowdsale':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipTransferred(_owner, address(0));
  > |        _owner = address(0);
    |    }
    |
  at /unique_chucks/40/0xedde46861c52d139145912b39c756407992af4fb.sol(64)

[33mWarning[0m for UnrestrictedWrite in contract 'Crowdsale':
    |        require(newOwner != address(0), "Ownable: new owner is the zero address");
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_chucks/40/0xedde46861c52d139145912b39c756407992af4fb.sol(74)

[33mWarning[0m for UnrestrictedWrite in contract 'Crowdsale':
    |
    |    function pause() public onlyOwner whenNotPaused {
  > |        _paused = true;
    |
    |        emit Paused(msg.sender);
  at /unique_chucks/40/0xedde46861c52d139145912b39c756407992af4fb.sol(311)

[33mWarning[0m for UnrestrictedWrite in contract 'Crowdsale':
    |
    |    function unpause() public onlyOwner whenPaused {
  > |        _paused = false;
    |
    |        emit Unpaused(msg.sender);
  at /unique_chucks/40/0xedde46861c52d139145912b39c756407992af4fb.sol(317)

[33mWarning[0m for UnrestrictedWrite in contract 'Crowdsale':
    |        token.transferOwnership(_newTokenOwner);
    |
  > |        crowdsaleClosed = true;
    |
    |        emit CrowdsaleClose();
  at /unique_chucks/40/0xedde46861c52d139145912b39c756407992af4fb.sol(411)

[31mViolation[0m for LockedEther in contract 'Manageable':
    |}
    |
  > |contract Manageable is Ownable {
    |    address[] public managers;
    |
  at /unique_chucks/40/0xedde46861c52d139145912b39c756407992af4fb.sol(323)

[31mViolation[0m for UnrestrictedWrite in contract 'Manageable':
    |/**
  > | *Submitted for verification at Etherscan.io on 2019-05-29
    |*/
    |
  at /unique_chucks/40/0xedde46861c52d139145912b39c756407992af4fb.sol(2)

[31mViolation[0m for UnrestrictedWrite in contract 'Manageable':
    |}
    |
  > |contract Manageable is Ownable {
    |    address[] public managers;
    |
  at /unique_chucks/40/0xedde46861c52d139145912b39c756407992af4fb.sol(323)

[31mViolation[0m for UnrestrictedWrite in contract 'Manageable':
    |        require(!isManager(_manager));
    |
  > |        managers.push(_manager);
    |
    |        emit ManagerAdded(_manager);
  at /unique_chucks/40/0xedde46861c52d139145912b39c756407992af4fb.sol(352)

[31mViolation[0m for UnrestrictedWrite in contract 'Manageable':
    |
    |        for(; index < managers.length - 1; index++) {
  > |            managers[index] = managers[index + 1];
    |        }
    |        
  at /unique_chucks/40/0xedde46861c52d139145912b39c756407992af4fb.sol(368)

[33mWarning[0m for UnrestrictedWrite in contract 'Manageable':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipTransferred(_owner, address(0));
  > |        _owner = address(0);
    |    }
    |
  at /unique_chucks/40/0xedde46861c52d139145912b39c756407992af4fb.sol(64)

[33mWarning[0m for UnrestrictedWrite in contract 'Manageable':
    |        require(newOwner != address(0), "Ownable: new owner is the zero address");
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_chucks/40/0xedde46861c52d139145912b39c756407992af4fb.sol(74)

[31mViolation[0m for LockedEther in contract 'StandardToken':
    |}
    |
  > |contract StandardToken is IERC20 {
    |    using SafeMath for uint256;
    |
  at /unique_chucks/40/0xedde46861c52d139145912b39c756407992af4fb.sol(90)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'Withdrawable':
    |        require(address(this).balance >= _value);
    |
  > |        address(_to).transfer(_value);
    |
    |        emit WithdrawEther(_to, _value);
  at /unique_chucks/40/0xedde46861c52d139145912b39c756407992af4fb.sol(268)

[33mWarning[0m for UnrestrictedWrite in contract 'Withdrawable':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipTransferred(_owner, address(0));
  > |        _owner = address(0);
    |    }
    |
  at /unique_chucks/40/0xedde46861c52d139145912b39c756407992af4fb.sol(64)

[33mWarning[0m for UnrestrictedWrite in contract 'Withdrawable':
    |        require(newOwner != address(0), "Ownable: new owner is the zero address");
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_chucks/40/0xedde46861c52d139145912b39c756407992af4fb.sol(74)