Processing contract: /unique_chucks/48/0x07dce5b35a0711b2ba4d8a0d6f9f0f08c215bf12.sol:MMRRCToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for LockedEther in contract 'MMRRCToken':
    |pragma solidity >=0.5.0 <0.6.0;
    |
  > |contract MMRRCToken {
    |    string public name = "Make Me Really Rich Coin";
    |    string public symbol = "MMRRC";
  at /unique_chucks/48/0x07dce5b35a0711b2ba4d8a0d6f9f0f08c215bf12.sol(3)

[31mViolation[0m for UnrestrictedWrite in contract 'MMRRCToken':
    |        
    |        balances[msg.sender] -= _value;
  > |        balances[_to] += _value;
    |
    |        emit Transfer(msg.sender, _to, _value);
  at /unique_chucks/48/0x07dce5b35a0711b2ba4d8a0d6f9f0f08c215bf12.sol(44)

[31mViolation[0m for UnrestrictedWrite in contract 'MMRRCToken':
    |        require(_value <= balances[_from], "Not enough tokens for transfer");
    |        require(_value <= allowance[_from][msg.sender], "Exceeds allowance");
  > |        balances[_from] -= _value;
    |        balances[_to] += _value;
    |
  at /unique_chucks/48/0x07dce5b35a0711b2ba4d8a0d6f9f0f08c215bf12.sol(61)

[31mViolation[0m for UnrestrictedWrite in contract 'MMRRCToken':
    |        require(_value <= allowance[_from][msg.sender], "Exceeds allowance");
    |        balances[_from] -= _value;
  > |        balances[_to] += _value;
    |
    |        allowance[_from][msg.sender] -= _value;
  at /unique_chucks/48/0x07dce5b35a0711b2ba4d8a0d6f9f0f08c215bf12.sol(62)