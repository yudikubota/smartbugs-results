Processing contract: /unique_chucks/24/0xf7c6599a28ff7f02ea366588b12b132f5535a44e.sol:CompoundContract
Processing contract: /unique_chucks/24/0xf7c6599a28ff7f02ea366588b12b132f5535a44e.sol:CompoundPayroll
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/24/0xf7c6599a28ff7f02ea366588b12b132f5535a44e.sol:owned
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/24/0xf7c6599a28ff7f02ea366588b12b132f5535a44e.sol:token
[31mViolation[0m for RepeatedCall in contract 'CompoundPayroll':
    |    function cashOut (uint256 amount, address recipient, string memory justification) public onlyOwner {
    |        compound.withdraw(daiAddress, amount);
  > |        dai.transfer(recipient, amount);
    |        emit MemberPaid( recipient,  amount, justification);
    |
  at /unique_chucks/24/0xf7c6599a28ff7f02ea366588b12b132f5535a44e.sol(72)

[31mViolation[0m for RepeatedCall in contract 'CompoundPayroll':
    |        
    |        // Take it out from savings
  > |        compound.withdraw(daiAddress, amount);
    |        
    |        // Pay it out
  at /unique_chucks/24/0xf7c6599a28ff7f02ea366588b12b132f5535a44e.sol(129)

[31mViolation[0m for RepeatedCall in contract 'CompoundPayroll':
    |        // Pay it out
    |        payroll[salaryId[recipient]].lastPaid = now;
  > |        dai.transfer(recipient, amount);
    |        emit MemberPaid( recipient,  amount, justification);
    |    }
  at /unique_chucks/24/0xf7c6599a28ff7f02ea366588b12b132f5535a44e.sol(133)

[33mWarning[0m for TODAmount in contract 'CompoundPayroll':
    |        putInSavings();
    |        payAll();
  > |        msg.sender.transfer(msg.value);
    |    }
    |    
  at /unique_chucks/24/0xf7c6599a28ff7f02ea366588b12b132f5535a44e.sol(148)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'CompoundPayroll':
    |        putInSavings();
    |        payAll();
  > |        msg.sender.transfer(msg.value);
    |    }
    |    
  at /unique_chucks/24/0xf7c6599a28ff7f02ea366588b12b132f5535a44e.sol(148)

[31mViolation[0m for UnrestrictedWrite in contract 'CompoundPayroll':
    |
    |// Here we start
  > |contract CompoundPayroll is owned {
    |    // first, let's define the contracts we'll be interacting with
    |    address compoundAddress = 0x3FDA67f7583380E67ef93072294a7fAc882FD7E7;
  at /unique_chucks/24/0xf7c6599a28ff7f02ea366588b12b132f5535a44e.sol(35)

[31mViolation[0m for UnrestrictedWrite in contract 'CompoundPayroll':
    |            name: initials});
    |            
  > |        payrollLength = payroll.length;
    |    }
    |
  at /unique_chucks/24/0xf7c6599a28ff7f02ea366588b12b132f5535a44e.sol(92)

[31mViolation[0m for UnrestrictedWrite in contract 'CompoundPayroll':
    |
    |        for (uint i = salaryId[recipient]; i<payroll.length-1; i++){
  > |            payroll[i] = payroll[i+1];
    |            salaryId[payroll[i].recipient] = i;
    |        }
  at /unique_chucks/24/0xf7c6599a28ff7f02ea366588b12b132f5535a44e.sol(100)

[31mViolation[0m for UnrestrictedWrite in contract 'CompoundPayroll':
    |        for (uint i = salaryId[recipient]; i<payroll.length-1; i++){
    |            payroll[i] = payroll[i+1];
  > |            salaryId[payroll[i].recipient] = i;
    |        }
    |        
  at /unique_chucks/24/0xf7c6599a28ff7f02ea366588b12b132f5535a44e.sol(101)

[31mViolation[0m for UnrestrictedWrite in contract 'CompoundPayroll':
    |        }
    |        
  > |        salaryId[recipient] = 0;
    |        delete payroll[payroll.length-1];
    |        payroll.length--;
  at /unique_chucks/24/0xf7c6599a28ff7f02ea366588b12b132f5535a44e.sol(104)

[31mViolation[0m for UnrestrictedWrite in contract 'CompoundPayroll':
    |        
    |        salaryId[recipient] = 0;
  > |        delete payroll[payroll.length-1];
    |        payroll.length--;
    |        payrollLength = payroll.length;
  at /unique_chucks/24/0xf7c6599a28ff7f02ea366588b12b132f5535a44e.sol(105)

[31mViolation[0m for UnrestrictedWrite in contract 'CompoundPayroll':
    |        
    |        // Pay it out
  > |        payroll[salaryId[recipient]].lastPaid = now;
    |        dai.transfer(recipient, amount);
    |        emit MemberPaid( recipient,  amount, justification);
  at /unique_chucks/24/0xf7c6599a28ff7f02ea366588b12b132f5535a44e.sol(132)

[33mWarning[0m for UnrestrictedWrite in contract 'CompoundPayroll':
    |
    |        function transferOwnership(address newOwner) onlyOwner public {
  > |            owner = newOwner;
    |        }
    |    }
  at /unique_chucks/24/0xf7c6599a28ff7f02ea366588b12b132f5535a44e.sol(30)

[33mWarning[0m for UnrestrictedWrite in contract 'CompoundPayroll':
    |
    |// Here we start
  > |contract CompoundPayroll is owned {
    |    // first, let's define the contracts we'll be interacting with
    |    address compoundAddress = 0x3FDA67f7583380E67ef93072294a7fAc882FD7E7;
  at /unique_chucks/24/0xf7c6599a28ff7f02ea366588b12b132f5535a44e.sol(35)

[33mWarning[0m for UnrestrictedWrite in contract 'CompoundPayroll':
    |        // if it returns 0 then create a new one
    |        if (id == 0) {
  > |            salaryId[recipient] = payroll.length;
    |            id = payroll.length++;
    |        }
  at /unique_chucks/24/0xf7c6599a28ff7f02ea366588b12b132f5535a44e.sol(83)

[33mWarning[0m for UnrestrictedWrite in contract 'CompoundPayroll':
    |            id = payroll.length++;
    |        }
  > |        payroll[id] = Salary({
    |            recipient: recipient, 
    |            payRate: yearlyPay / 365.25 days, 
  at /unique_chucks/24/0xf7c6599a28ff7f02ea366588b12b132f5535a44e.sol(86)

[33mWarning[0m for UnrestrictedWrite in contract 'CompoundPayroll':
    |        delete payroll[payroll.length-1];
    |        payroll.length--;
  > |        payrollLength = payroll.length;
    |    }
    |    
  at /unique_chucks/24/0xf7c6599a28ff7f02ea366588b12b132f5535a44e.sol(107)

[31mViolation[0m for MissingInputValidation in contract 'owned':
    |        }
    |
  > |        function transferOwnership(address newOwner) onlyOwner public {
    |            owner = newOwner;
    |        }
  at /unique_chucks/24/0xf7c6599a28ff7f02ea366588b12b132f5535a44e.sol(29)

[33mWarning[0m for UnrestrictedWrite in contract 'owned':
    |
    |        function transferOwnership(address newOwner) onlyOwner public {
  > |            owner = newOwner;
    |        }
    |    }
  at /unique_chucks/24/0xf7c6599a28ff7f02ea366588b12b132f5535a44e.sol(30)