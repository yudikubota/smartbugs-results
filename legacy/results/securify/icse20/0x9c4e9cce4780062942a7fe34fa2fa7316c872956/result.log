Processing contract: /unique_chucks/21/0x9c4e9cce4780062942a7fe34fa2fa7316c872956.sol:ABIResolver
Processing contract: /unique_chucks/21/0x9c4e9cce4780062942a7fe34fa2fa7316c872956.sol:AddrResolver
Processing contract: /unique_chucks/21/0x9c4e9cce4780062942a7fe34fa2fa7316c872956.sol:ContentHashResolver
Processing contract: /unique_chucks/21/0x9c4e9cce4780062942a7fe34fa2fa7316c872956.sol:ENS
Processing contract: /unique_chucks/21/0x9c4e9cce4780062942a7fe34fa2fa7316c872956.sol:InterfaceResolver
Processing contract: /unique_chucks/21/0x9c4e9cce4780062942a7fe34fa2fa7316c872956.sol:NameResolver
Processing contract: /unique_chucks/21/0x9c4e9cce4780062942a7fe34fa2fa7316c872956.sol:OpenSeaENSResolver
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/21/0x9c4e9cce4780062942a7fe34fa2fa7316c872956.sol:Ownable
Processing contract: /unique_chucks/21/0x9c4e9cce4780062942a7fe34fa2fa7316c872956.sol:PubkeyResolver
Processing contract: /unique_chucks/21/0x9c4e9cce4780062942a7fe34fa2fa7316c872956.sol:PublicResolver
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/21/0x9c4e9cce4780062942a7fe34fa2fa7316c872956.sol:ResolverBase
Processing contract: /unique_chucks/21/0x9c4e9cce4780062942a7fe34fa2fa7316c872956.sol:Strings
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/21/0x9c4e9cce4780062942a7fe34fa2fa7316c872956.sol:TextResolver
[31mViolation[0m for LockedEther in contract 'OpenSeaENSResolver':
    | * OpenSea ENS Resolver - A resolver for linking ENS domains to OpenSea listings.
    | */
  > |contract OpenSeaENSResolver is Ownable, PublicResolver {
    |  bytes32 private ETH_NAMEHASH = subNamehash(0, keccak256("eth"));
    |  bytes32 private constant URL_KEYHASH = keccak256("url");
  at /unique_chucks/21/0x9c4e9cce4780062942a7fe34fa2fa7316c872956.sol(576)

[31mViolation[0m for UnrestrictedWrite in contract 'OpenSeaENSResolver':
    | * OpenSea ENS Resolver - A resolver for linking ENS domains to OpenSea listings.
    | */
  > |contract OpenSeaENSResolver is Ownable, PublicResolver {
    |  bytes32 private ETH_NAMEHASH = subNamehash(0, keccak256("eth"));
    |  bytes32 private constant URL_KEYHASH = keccak256("url");
  at /unique_chucks/21/0x9c4e9cce4780062942a7fe34fa2fa7316c872956.sol(576)

[31mViolation[0m for UnrestrictedWrite in contract 'OpenSeaENSResolver':
    |
    |  function addTokenId(uint256 tokenId) external {
  > |    tokenIds[subNamehash(ETH_NAMEHASH, bytes32(tokenId))] = tokenId;
    |  }
    |
  at /unique_chucks/21/0x9c4e9cce4780062942a7fe34fa2fa7316c872956.sol(597)

[33mWarning[0m for UnrestrictedWrite in contract 'OpenSeaENSResolver':
    | * OpenSea ENS Resolver - A resolver for linking ENS domains to OpenSea listings.
    | */
  > |contract OpenSeaENSResolver is Ownable, PublicResolver {
    |  bytes32 private ETH_NAMEHASH = subNamehash(0, keccak256("eth"));
    |  bytes32 private constant URL_KEYHASH = keccak256("url");
  at /unique_chucks/21/0x9c4e9cce4780062942a7fe34fa2fa7316c872956.sol(576)

[33mWarning[0m for UnrestrictedWrite in contract 'OpenSeaENSResolver':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipTransferred(_owner, address(0));
  > |        _owner = address(0);
    |    }
    |
  at /unique_chucks/21/0x9c4e9cce4780062942a7fe34fa2fa7316c872956.sol(58)

[33mWarning[0m for UnrestrictedWrite in contract 'OpenSeaENSResolver':
    |        require(newOwner != address(0), "Ownable: new owner is the zero address");
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_chucks/21/0x9c4e9cce4780062942a7fe34fa2fa7316c872956.sol(75)

[33mWarning[0m for UnrestrictedWrite in contract 'OpenSeaENSResolver':
    |     */
    |    function setAddr(bytes32 node, address addr) external authorised(node) {
  > |        addresses[node] = addr;
    |        emit AddrChanged(node, addr);
    |    }
  at /unique_chucks/21/0x9c4e9cce4780062942a7fe34fa2fa7316c872956.sol(199)

[33mWarning[0m for UnrestrictedWrite in contract 'OpenSeaENSResolver':
    |     */
    |    function setInterface(bytes32 node, bytes4 interfaceID, address implementer) external authorised(node) {
  > |        interfaces[node][interfaceID] = implementer;
    |        emit InterfaceChanged(node, interfaceID, implementer);
    |    }
  at /unique_chucks/21/0x9c4e9cce4780062942a7fe34fa2fa7316c872956.sol(276)

[33mWarning[0m for UnrestrictedWrite in contract 'OpenSeaENSResolver':
    |     */
    |    function setPubkey(bytes32 node, bytes32 x, bytes32 y) external authorised(node) {
  > |        pubkeys[node] = PublicKey(x, y);
    |        emit PubkeyChanged(node, x, y);
    |    }
  at /unique_chucks/21/0x9c4e9cce4780062942a7fe34fa2fa7316c872956.sol(383)

[33mWarning[0m for UnrestrictedWrite in contract 'OpenSeaENSResolver':
    | * OpenSea ENS Resolver - A resolver for linking ENS domains to OpenSea listings.
    | */
  > |contract OpenSeaENSResolver is Ownable, PublicResolver {
    |  bytes32 private ETH_NAMEHASH = subNamehash(0, keccak256("eth"));
    |  bytes32 private constant URL_KEYHASH = keccak256("url");
  at /unique_chucks/21/0x9c4e9cce4780062942a7fe34fa2fa7316c872956.sol(576)

[31mViolation[0m for LockedEther in contract 'PublicResolver':
    | * address.
    | */
  > |contract PublicResolver is ABIResolver, AddrResolver, ContentHashResolver, InterfaceResolver, NameResolver, PubkeyResolver, TextResolver {
    |    ENS ens;
    |
  at /unique_chucks/21/0x9c4e9cce4780062942a7fe34fa2fa7316c872956.sol(457)

[31mViolation[0m for UnrestrictedWrite in contract 'PublicResolver':
    | * address.
    | */
  > |contract PublicResolver is ABIResolver, AddrResolver, ContentHashResolver, InterfaceResolver, NameResolver, PubkeyResolver, TextResolver {
    |    ENS ens;
    |
  at /unique_chucks/21/0x9c4e9cce4780062942a7fe34fa2fa7316c872956.sol(457)

[33mWarning[0m for UnrestrictedWrite in contract 'PublicResolver':
    |     */
    |    function setAddr(bytes32 node, address addr) external authorised(node) {
  > |        addresses[node] = addr;
    |        emit AddrChanged(node, addr);
    |    }
  at /unique_chucks/21/0x9c4e9cce4780062942a7fe34fa2fa7316c872956.sol(199)

[33mWarning[0m for UnrestrictedWrite in contract 'PublicResolver':
    |     */
    |    function setInterface(bytes32 node, bytes4 interfaceID, address implementer) external authorised(node) {
  > |        interfaces[node][interfaceID] = implementer;
    |        emit InterfaceChanged(node, interfaceID, implementer);
    |    }
  at /unique_chucks/21/0x9c4e9cce4780062942a7fe34fa2fa7316c872956.sol(276)

[33mWarning[0m for UnrestrictedWrite in contract 'PublicResolver':
    |     */
    |    function setPubkey(bytes32 node, bytes32 x, bytes32 y) external authorised(node) {
  > |        pubkeys[node] = PublicKey(x, y);
    |        emit PubkeyChanged(node, x, y);
    |    }
  at /unique_chucks/21/0x9c4e9cce4780062942a7fe34fa2fa7316c872956.sol(383)

[33mWarning[0m for UnrestrictedWrite in contract 'PublicResolver':
    | * address.
    | */
  > |contract PublicResolver is ABIResolver, AddrResolver, ContentHashResolver, InterfaceResolver, NameResolver, PubkeyResolver, TextResolver {
    |    ENS ens;
    |
  at /unique_chucks/21/0x9c4e9cce4780062942a7fe34fa2fa7316c872956.sol(457)