Processing contract: /unique_chucks/1/0xddddddd1fd4e3708869c00cabe6b0b9d15181bb9.sol:FckRoulette
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for TODAmount in contract 'FckRoulette':
    |        } else {
    |            stopped = true;
  > |            owner1.transfer(address(this).balance);
    |        }
    |    }
  at /unique_chucks/1/0xddddddd1fd4e3708869c00cabe6b0b9d15181bb9.sol(301)

[31mViolation[0m for TODReceiver in contract 'FckRoulette':
    |        } else {
    |            stopped = true;
  > |            owner1.transfer(address(this).balance);
    |        }
    |    }
  at /unique_chucks/1/0xddddddd1fd4e3708869c00cabe6b0b9d15181bb9.sol(301)

[33mWarning[0m for TODReceiver in contract 'FckRoulette':
    |    // Helper routine to process the payment.
    |    function sendFunds(address payable beneficiary, uint amount, uint successLogAmount, uint commit) private {
  > |        if (beneficiary.send(amount)) {
    |            emit Payment(beneficiary, successLogAmount, commit);
    |        } else {
  at /unique_chucks/1/0xddddddd1fd4e3708869c00cabe6b0b9d15181bb9.sol(72)

[33mWarning[0m for UnrestrictedWrite in contract 'FckRoulette':
    |
    |        // Unlock the bet amount, regardless of the outcome.
  > |        lockedInBets -= uint128(unlockAmount);
    |
    |        // Roll for a jackpot (if eligible).
  at /unique_chucks/1/0xddddddd1fd4e3708869c00cabe6b0b9d15181bb9.sol(531)

[33mWarning[0m for UnrestrictedWrite in contract 'FckRoulette':
    |            if (jackpotRng == 888 || IS_DEV) {
    |                jackpotWin = jackpotSize;
  > |                jackpotSize = 0;
    |            }
    |        }
  at /unique_chucks/1/0xddddddd1fd4e3708869c00cabe6b0b9d15181bb9.sol(543)

[33mWarning[0m for UnrestrictedWrite in contract 'FckRoulette':
    |
    |        // move into 'refunded' status
  > |        bet.status = 3;
    |
    |        uint refundAmount = 0;
  at /unique_chucks/1/0xddddddd1fd4e3708869c00cabe6b0b9d15181bb9.sol(570)

[33mWarning[0m for UnrestrictedWrite in contract 'FckRoulette':
    |            // count on EVM for numbers below 2**40.
    |            rollUnder = ((betMask * POPCNT_MULT) & POPCNT_MASK) % POPCNT_MODULO;
  > |            bet.mask = uint216(betMask);
    |        } else if (modulo <= MASK_MODULO_40 * 2) {
    |            rollUnder = getRollUnder(betMask, 2);
  at /unique_chucks/1/0xddddddd1fd4e3708869c00cabe6b0b9d15181bb9.sol(628)

[33mWarning[0m for UnrestrictedWrite in contract 'FckRoulette':
    |        } else if (modulo <= MASK_MODULO_40 * 2) {
    |            rollUnder = getRollUnder(betMask, 2);
  > |            bet.mask = uint216(betMask);
    |        } else if (modulo == 100) {
    |            require(betMask > 0 && betMask <= modulo, "modulo=100: betMask larger than modulo");
  at /unique_chucks/1/0xddddddd1fd4e3708869c00cabe6b0b9d15181bb9.sol(631)

[33mWarning[0m for UnrestrictedWrite in contract 'FckRoulette':
    |            require(betMask > 0 && betMask <= modulo, "modulo=100: betMask larger than modulo");
    |            rollUnder = betMask;
  > |            bet.mask = uint216(betMask);
    |        } else if (modulo <= MASK_MODULO_40 * 3) {
    |            rollUnder = getRollUnder(betMask, 3);
  at /unique_chucks/1/0xddddddd1fd4e3708869c00cabe6b0b9d15181bb9.sol(635)

[33mWarning[0m for UnrestrictedWrite in contract 'FckRoulette':
    |        } else if (modulo <= MASK_MODULO_40 * 3) {
    |            rollUnder = getRollUnder(betMask, 3);
  > |            bet.mask = uint216(betMask);
    |        } else if (modulo <= MASK_MODULO_40 * 4) {
    |            rollUnder = getRollUnder(betMask, 4);
  at /unique_chucks/1/0xddddddd1fd4e3708869c00cabe6b0b9d15181bb9.sol(638)

[33mWarning[0m for UnrestrictedWrite in contract 'FckRoulette':
    |        } else if (modulo <= MASK_MODULO_40 * 4) {
    |            rollUnder = getRollUnder(betMask, 4);
  > |            bet.mask = uint216(betMask);
    |        } else if (modulo <= MASK_MODULO_40 * 5) {
    |            rollUnder = getRollUnder(betMask, 5);
  at /unique_chucks/1/0xddddddd1fd4e3708869c00cabe6b0b9d15181bb9.sol(641)

[33mWarning[0m for UnrestrictedWrite in contract 'FckRoulette':
    |        } else if (modulo <= MASK_MODULO_40 * 5) {
    |            rollUnder = getRollUnder(betMask, 5);
  > |            bet.mask = uint216(betMask);
    |        } else {//if (modulo <= MAX_MODULO)
    |            rollUnder = getRollUnder(betMask, 6);
  at /unique_chucks/1/0xddddddd1fd4e3708869c00cabe6b0b9d15181bb9.sol(644)

[33mWarning[0m for UnrestrictedWrite in contract 'FckRoulette':
    |        } else {//if (modulo <= MAX_MODULO)
    |            rollUnder = getRollUnder(betMask, 6);
  > |            bet.mask = uint216(betMask);
    |        }
    |
  at /unique_chucks/1/0xddddddd1fd4e3708869c00cabe6b0b9d15181bb9.sol(647)

[33mWarning[0m for UnrestrictedWrite in contract 'FckRoulette':
    |
    |        // Unlock the bet amount, regardless of the outcome.
  > |        lockedInBets -= uint128(diceWinAmount);
    |
    |        // Roll for a jackpot (if eligible).
  at /unique_chucks/1/0xddddddd1fd4e3708869c00cabe6b0b9d15181bb9.sol(745)

[33mWarning[0m for UnrestrictedWrite in contract 'FckRoulette':
    |            if (jackpotRng == 888 || IS_DEV) {
    |                jackpotWin = jackpotSize;
  > |                jackpotSize = 0;
    |            }
    |        }
  at /unique_chucks/1/0xddddddd1fd4e3708869c00cabe6b0b9d15181bb9.sol(756)

[33mWarning[0m for UnrestrictedWrite in contract 'FckRoulette':
    |
    |        // move into 'refunded' status
  > |        bet.status = 3;
    |
    |        uint diceWinAmount;
  at /unique_chucks/1/0xddddddd1fd4e3708869c00cabe6b0b9d15181bb9.sol(780)