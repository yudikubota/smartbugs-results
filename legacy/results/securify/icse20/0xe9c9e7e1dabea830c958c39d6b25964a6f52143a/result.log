Processing contract: /unique_chucks/10/0xe9c9e7e1dabea830c958c39d6b25964a6f52143a.sol:ERC20
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/10/0xe9c9e7e1dabea830c958c39d6b25964a6f52143a.sol:ERC20Detailed
Processing contract: /unique_chucks/10/0xe9c9e7e1dabea830c958c39d6b25964a6f52143a.sol:EmergencyERC20Drain
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/10/0xe9c9e7e1dabea830c958c39d6b25964a6f52143a.sol:IERC20
Processing contract: /unique_chucks/10/0xe9c9e7e1dabea830c958c39d6b25964a6f52143a.sol:Ownable
Processing contract: /unique_chucks/10/0xe9c9e7e1dabea830c958c39d6b25964a6f52143a.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/10/0xe9c9e7e1dabea830c958c39d6b25964a6f52143a.sol:Token
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for MissingInputValidation in contract 'EmergencyERC20Drain':
    |    * Taken from Zilliqa's token contract: https://github.com/Zilliqa/Zilliqa-ERC20-Token
    |    */
  > |    function drain(
    |        IERC20 token,
    |        uint amount
  at /unique_chucks/10/0xe9c9e7e1dabea830c958c39d6b25964a6f52143a.sol(396)

[31mViolation[0m for UnrestrictedWrite in contract 'EmergencyERC20Drain':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_chucks/10/0xe9c9e7e1dabea830c958c39d6b25964a6f52143a.sol(387)

[33mWarning[0m for UnrestrictedWrite in contract 'EmergencyERC20Drain':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipTransferred(_owner, address(0));
  > |        _owner = address(0);
    |    }
    |
  at /unique_chucks/10/0xe9c9e7e1dabea830c958c39d6b25964a6f52143a.sol(369)

[33mWarning[0m for UnrestrictedWrite in contract 'EmergencyERC20Drain':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_chucks/10/0xe9c9e7e1dabea830c958c39d6b25964a6f52143a.sol(387)

[31mViolation[0m for LockedEther in contract 'Token':
    | *  https://consensys.github.io/smart-contract-best-practices/tokens/
    | */
  > |contract Token is ERC20, ERC20Detailed, EmergencyERC20Drain {
    |
    |    /* *** Token Parameters *** */
  at /unique_chucks/10/0xe9c9e7e1dabea830c958c39d6b25964a6f52143a.sol(412)

[33mWarning[0m for UnrestrictedWrite in contract 'Token':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipTransferred(_owner, address(0));
  > |        _owner = address(0);
    |    }
    |
  at /unique_chucks/10/0xe9c9e7e1dabea830c958c39d6b25964a6f52143a.sol(369)

[33mWarning[0m for UnrestrictedWrite in contract 'Token':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_chucks/10/0xe9c9e7e1dabea830c958c39d6b25964a6f52143a.sol(387)