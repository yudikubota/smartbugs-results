Processing contract: /unique_chucks/37/0x5a34123b2dba13c02616c6aceb1e89353afc90f4.sol:AsianCarbonCoin
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/37/0x5a34123b2dba13c02616c6aceb1e89353afc90f4.sol:BasicToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/37/0x5a34123b2dba13c02616c6aceb1e89353afc90f4.sol:ERC20
Processing contract: /unique_chucks/37/0x5a34123b2dba13c02616c6aceb1e89353afc90f4.sol:ERC20Basic
Processing contract: /unique_chucks/37/0x5a34123b2dba13c02616c6aceb1e89353afc90f4.sol:Ownable
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/37/0x5a34123b2dba13c02616c6aceb1e89353afc90f4.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/37/0x5a34123b2dba13c02616c6aceb1e89353afc90f4.sol:StandardToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for LockedEther in contract 'AsianCarbonCoin':
    | * @dev Contract to create the AsianCarbonCoin
    | **/
  > |contract AsianCarbonCoin is StandardToken, Ownable {
    |    string public constant name = "Asian Carbon Coin";
    |    string public constant symbol = "ACC";
  at /unique_chucks/37/0x5a34123b2dba13c02616c6aceb1e89353afc90f4.sol(228)

[33mWarning[0m for UnrestrictedWrite in contract 'AsianCarbonCoin':
    |        
    |        balances[msg.sender] = balances[msg.sender].sub(_value);
  > |        balances[_to] = balances[_to].add(_value);
    |        emit Transfer(msg.sender, _to, _value);
    |        return true;
  at /unique_chucks/37/0x5a34123b2dba13c02616c6aceb1e89353afc90f4.sol(126)

[33mWarning[0m for UnrestrictedWrite in contract 'AsianCarbonCoin':
    |        require(_value <= allowed[_from][msg.sender]);
    |    
  > |        balances[_from] = balances[_from].sub(_value);
    |        balances[_to] = balances[_to].add(_value);
    |        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
  at /unique_chucks/37/0x5a34123b2dba13c02616c6aceb1e89353afc90f4.sol(153)

[33mWarning[0m for UnrestrictedWrite in contract 'AsianCarbonCoin':
    |    
    |        balances[_from] = balances[_from].sub(_value);
  > |        balances[_to] = balances[_to].add(_value);
    |        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
    |        
  at /unique_chucks/37/0x5a34123b2dba13c02616c6aceb1e89353afc90f4.sol(154)

[33mWarning[0m for UnrestrictedWrite in contract 'AsianCarbonCoin':
    |      require(newOwner != address(0));
    |      emit OwnershipTransferred(owner, newOwner);
  > |      owner = newOwner;
    |    }
    |}
  at /unique_chucks/37/0x5a34123b2dba13c02616c6aceb1e89353afc90f4.sol(77)

[33mWarning[0m for UnrestrictedWrite in contract 'BasicToken':
    |        
    |        balances[msg.sender] = balances[msg.sender].sub(_value);
  > |        balances[_to] = balances[_to].add(_value);
    |        emit Transfer(msg.sender, _to, _value);
    |        return true;
  at /unique_chucks/37/0x5a34123b2dba13c02616c6aceb1e89353afc90f4.sol(126)

[33mWarning[0m for UnrestrictedWrite in contract 'Ownable':
    |      require(newOwner != address(0));
    |      emit OwnershipTransferred(owner, newOwner);
  > |      owner = newOwner;
    |    }
    |}
  at /unique_chucks/37/0x5a34123b2dba13c02616c6aceb1e89353afc90f4.sol(77)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |        
    |        balances[msg.sender] = balances[msg.sender].sub(_value);
  > |        balances[_to] = balances[_to].add(_value);
    |        emit Transfer(msg.sender, _to, _value);
    |        return true;
  at /unique_chucks/37/0x5a34123b2dba13c02616c6aceb1e89353afc90f4.sol(126)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |        require(_value <= allowed[_from][msg.sender]);
    |    
  > |        balances[_from] = balances[_from].sub(_value);
    |        balances[_to] = balances[_to].add(_value);
    |        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
  at /unique_chucks/37/0x5a34123b2dba13c02616c6aceb1e89353afc90f4.sol(153)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |    
    |        balances[_from] = balances[_from].sub(_value);
  > |        balances[_to] = balances[_to].add(_value);
    |        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
    |        
  at /unique_chucks/37/0x5a34123b2dba13c02616c6aceb1e89353afc90f4.sol(154)