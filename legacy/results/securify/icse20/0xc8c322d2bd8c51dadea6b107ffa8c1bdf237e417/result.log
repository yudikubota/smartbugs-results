Processing contract: /unique_chucks/24/0xc8c322d2bd8c51dadea6b107ffa8c1bdf237e417.sol:DreamCarToken2
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/24/0xc8c322d2bd8c51dadea6b107ffa8c1bdf237e417.sol:ERC721
Processing contract: /unique_chucks/24/0xc8c322d2bd8c51dadea6b107ffa8c1bdf237e417.sol:ERC721Metadata
Processing contract: /unique_chucks/24/0xc8c322d2bd8c51dadea6b107ffa8c1bdf237e417.sol:WLCCompatible
[31mViolation[0m for DAOConstantGas in contract 'DreamCarToken2':
    |        
    |        //transfer ETH to CEO
  > |        CEO.transfer((amount * tokenPrice));
    |        
    |        //returns excessive ETH
  at /unique_chucks/24/0xc8c322d2bd8c51dadea6b107ffa8c1bdf237e417.sol(370)

[31mViolation[0m for DAOConstantGas in contract 'DreamCarToken2':
    |        
    |        //returns excessive ETH
  > |        msg.sender.transfer(msg.value - (amount * tokenPrice));
    |        
    |        chooseWinner();
  at /unique_chucks/24/0xc8c322d2bd8c51dadea6b107ffa8c1bdf237e417.sol(373)

[31mViolation[0m for TODAmount in contract 'DreamCarToken2':
    |        
    |        //transfer ETH to CEO
  > |        CEO.transfer((amount * tokenPrice));
    |        
    |        //returns excessive ETH
  at /unique_chucks/24/0xc8c322d2bd8c51dadea6b107ffa8c1bdf237e417.sol(370)

[31mViolation[0m for TODAmount in contract 'DreamCarToken2':
    |        
    |        //returns excessive ETH
  > |        msg.sender.transfer(msg.value - (amount * tokenPrice));
    |        
    |        chooseWinner();
  at /unique_chucks/24/0xc8c322d2bd8c51dadea6b107ffa8c1bdf237e417.sol(373)

[33mWarning[0m for TODReceiver in contract 'DreamCarToken2':
    |        
    |        //transfer ETH to CEO
  > |        CEO.transfer((amount * tokenPrice));
    |        
    |        //returns excessive ETH
  at /unique_chucks/24/0xc8c322d2bd8c51dadea6b107ffa8c1bdf237e417.sol(370)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'DreamCarToken2':
    |        
    |        //transfer ETH to CEO
  > |        CEO.transfer((amount * tokenPrice));
    |        
    |        //returns excessive ETH
  at /unique_chucks/24/0xc8c322d2bd8c51dadea6b107ffa8c1bdf237e417.sol(370)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'DreamCarToken2':
    |        
    |        //returns excessive ETH
  > |        msg.sender.transfer(msg.value - (amount * tokenPrice));
    |        
    |        chooseWinner();
  at /unique_chucks/24/0xc8c322d2bd8c51dadea6b107ffa8c1bdf237e417.sol(373)

[31mViolation[0m for UnrestrictedWrite in contract 'DreamCarToken2':
    |        for (uint256 i = 0; i < priceAdmins.length; i++) {
    |            if (_existingPriceAdmin == priceAdmins[i]) {
  > |                delete priceAdmins[i];
    |                break;
    |            }
  at /unique_chucks/24/0xc8c322d2bd8c51dadea6b107ffa8c1bdf237e417.sol(283)

[31mViolation[0m for UnrestrictedWrite in contract 'DreamCarToken2':
    |    function _addTokensToAddress(address _to, uint256 _amount) internal {
    |        for (uint256 i = 0; i < _amount; i++) {
  > |            tokenOwner[nextTokenId + i] = _to;
    |        }
    |        
  at /unique_chucks/24/0xc8c322d2bd8c51dadea6b107ffa8c1bdf237e417.sol(297)

[31mViolation[0m for UnrestrictedWrite in contract 'DreamCarToken2':
    |        tokenBallanceOf[_to] += _amount;
    |        
  > |        nextTokenId += _amount;
    |    }
    |    
  at /unique_chucks/24/0xc8c322d2bd8c51dadea6b107ffa8c1bdf237e417.sol(302)

[31mViolation[0m for UnrestrictedWrite in contract 'DreamCarToken2':
    |    function chooseWinner() internal {
    |         if ((nextTokenId - 1) == totalTokenSupply) {
  > |            winningTokenId = getRandomNumber();
    |            emit WinnerIsChosen(tokenOwner[winningTokenId], winningTokenId);
    |        } 
  at /unique_chucks/24/0xc8c322d2bd8c51dadea6b107ffa8c1bdf237e417.sol(333)

[33mWarning[0m for UnrestrictedWrite in contract 'DreamCarToken2':
    |        }
    |        
  > |        tokenBallanceOf[_to] += _amount;
    |        
    |        nextTokenId += _amount;
  at /unique_chucks/24/0xc8c322d2bd8c51dadea6b107ffa8c1bdf237e417.sol(300)

[33mWarning[0m for UnrestrictedWrite in contract 'DreamCarToken2':
    |
    |//DCC VERSION 5
  > |
    |/// @title Interface for contracts conforming to ERC-721: Non-Fungible Tokens
    |/// @author Dieter Shirley <dete@axiomzen.co> (https://github.com/dete)
  at /unique_chucks/24/0xc8c322d2bd8c51dadea6b107ffa8c1bdf237e417.sol(4)

[33mWarning[0m for UnrestrictedWrite in contract 'DreamCarToken2':
    |     */
    |    function addPriceAdmin(address _newPriceAdmin) onlyCEO public {
  > |        priceAdmins.push(_newPriceAdmin);
    |    }
    |    
  at /unique_chucks/24/0xc8c322d2bd8c51dadea6b107ffa8c1bdf237e417.sol(273)

[33mWarning[0m for UnrestrictedWrite in contract 'DreamCarToken2':
    |        ensureAddressIsTokenOwner(msg.sender, _tokenId);
    |        
  > |        winnerAddress = msg.sender;
    |        
    |        emit RewardIsClaimed(msg.sender, _tokenId);
  at /unique_chucks/24/0xc8c322d2bd8c51dadea6b107ffa8c1bdf237e417.sol(389)

[33mWarning[0m for UnrestrictedWrite in contract 'DreamCarToken2':
    |     */
    |    function setWLCParams(address _address, uint256 _reward) public onlyCEO {
  > |        WLCAdress = _address;
    |        WLCRewardAmount = _reward;
    |    }
  at /unique_chucks/24/0xc8c322d2bd8c51dadea6b107ffa8c1bdf237e417.sol(402)

[33mWarning[0m for UnrestrictedWrite in contract 'DreamCarToken2':
    |    function setWLCParams(address _address, uint256 _reward) public onlyCEO {
    |        WLCAdress = _address;
  > |        WLCRewardAmount = _reward;
    |    }
    |    
  at /unique_chucks/24/0xc8c322d2bd8c51dadea6b107ffa8c1bdf237e417.sol(403)

[33mWarning[0m for UnrestrictedWrite in contract 'DreamCarToken2':
    |     */
    |    function resetWLCParams() public onlyCEO {
  > |        WLCAdress = address(0);
    |        WLCRewardAmount = 0;
    |    }
  at /unique_chucks/24/0xc8c322d2bd8c51dadea6b107ffa8c1bdf237e417.sol(411)

[33mWarning[0m for UnrestrictedWrite in contract 'DreamCarToken2':
    |    function resetWLCParams() public onlyCEO {
    |        WLCAdress = address(0);
  > |        WLCRewardAmount = 0;
    |    }
    |    
  at /unique_chucks/24/0xc8c322d2bd8c51dadea6b107ffa8c1bdf237e417.sol(412)