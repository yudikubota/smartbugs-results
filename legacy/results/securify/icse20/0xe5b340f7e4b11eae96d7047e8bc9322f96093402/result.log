/unique_chucks/35/0xe5b340f7e4b11eae96d7047e8bc9322f96093402.sol:1:1: Warning: Source file does not specify required compiler version! Consider adding "pragma solidity ^0.5.8;"
contract ERC20Basic {
^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/35/0xe5b340f7e4b11eae96d7047e8bc9322f96093402.sol:33:47: Error: Invalid type for argument in function call. Invalid implicit conversion from contract Hodl to address requested.
        assert(erc20.transferFrom(msg.sender, this, amount) == true);
                                              ^--^
/unique_chucks/35/0xe5b340f7e4b11eae96d7047e8bc9322f96093402.sol:35:9: Error: Event invocations have to be prefixed by "emit".
        Hodling(msg.sender, tokenAddress, amount);
        ^---------------------------------------^
/unique_chucks/35/0xe5b340f7e4b11eae96d7047e8bc9322f96093402.sol:50:9: Error: Event invocations have to be prefixed by "emit".
        TokenReturn(msg.sender, tokenAddress, amount);
        ^-------------------------------------------^
Exception in thread "main" java.lang.RuntimeException
	at ch.securify.CompilationHelpers.compileContracts(CompilationHelpers.java:115)
	at ch.securify.Main.processSolidityFile(Main.java:98)
	at ch.securify.Main.main(Main.java:254)