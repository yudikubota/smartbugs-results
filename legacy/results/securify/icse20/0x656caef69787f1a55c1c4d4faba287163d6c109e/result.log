Processing contract: /unique_chucks/25/0x656caef69787f1a55c1c4d4faba287163d6c109e.sol:ImplementationDirectory
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/25/0x656caef69787f1a55c1c4d4faba287163d6c109e.sol:ImplementationProvider
Processing contract: /unique_chucks/25/0x656caef69787f1a55c1c4d4faba287163d6c109e.sol:ZOSLibAddress
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/25/0x656caef69787f1a55c1c4d4faba287163d6c109e.sol:ZOSLibOwnable
[31mViolation[0m for LockedEther in contract 'ImplementationDirectory':
    | * @dev Implementation provider that stores contract implementations in a mapping.
    | */
  > |contract ImplementationDirectory is ImplementationProvider, ZOSLibOwnable {
    |  /**
    |   * @dev Emitted when the implementation of a contract is changed.
  at /unique_chucks/25/0x656caef69787f1a55c1c4d4faba287163d6c109e.sol(143)

[31mViolation[0m for UnrestrictedWrite in contract 'ImplementationDirectory':
    |  function setImplementation(string memory contractName, address implementation) public onlyOwner whenNotFrozen {
    |    require(ZOSLibAddress.isContract(implementation), "Cannot set implementation in directory with a non-contract address");
  > |    implementations[contractName] = implementation;
    |    emit ImplementationChanged(contractName, implementation);
    |  }
  at /unique_chucks/25/0x656caef69787f1a55c1c4d4faba287163d6c109e.sol(195)

[31mViolation[0m for UnrestrictedWrite in contract 'ImplementationDirectory':
    |   */
    |  function unsetImplementation(string memory contractName) public onlyOwner whenNotFrozen {
  > |    implementations[contractName] = address(0);
    |    emit ImplementationChanged(contractName, address(0));
    |  }
  at /unique_chucks/25/0x656caef69787f1a55c1c4d4faba287163d6c109e.sol(204)

[33mWarning[0m for UnrestrictedWrite in contract 'ImplementationDirectory':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipTransferred(_owner, address(0));
  > |        _owner = address(0);
    |    }
    |
  at /unique_chucks/25/0x656caef69787f1a55c1c4d4faba287163d6c109e.sol(76)

[33mWarning[0m for UnrestrictedWrite in contract 'ImplementationDirectory':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_chucks/25/0x656caef69787f1a55c1c4d4faba287163d6c109e.sol(94)

[33mWarning[0m for UnrestrictedWrite in contract 'ImplementationDirectory':
    |   */
    |  function freeze() onlyOwner whenNotFrozen public {
  > |    frozen = true;
    |    emit Frozen();
    |  }
  at /unique_chucks/25/0x656caef69787f1a55c1c4d4faba287163d6c109e.sol(175)