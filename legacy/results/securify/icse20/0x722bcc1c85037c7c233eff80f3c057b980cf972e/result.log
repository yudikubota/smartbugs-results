Processing contract: /unique_chucks/37/0x722bcc1c85037c7c233eff80f3c057b980cf972e.sol:Package
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/37/0x722bcc1c85037c7c233eff80f3c057b980cf972e.sol:ZOSLibOwnable
[31mViolation[0m for LockedEther in contract 'Package':
    | * to major, minor, and patch, as prerelease tags are not supported.
    | */
  > |contract Package is ZOSLibOwnable {
    |  /**
    |   * @dev Emitted when a version is added to the package.
  at /unique_chucks/37/0x722bcc1c85037c7c233eff80f3c057b980cf972e.sol(93)

[31mViolation[0m for UnrestrictedWrite in contract 'Package':
    | * to major, minor, and patch, as prerelease tags are not supported.
    | */
  > |contract Package is ZOSLibOwnable {
    |  /**
    |   * @dev Emitted when a version is added to the package.
  at /unique_chucks/37/0x722bcc1c85037c7c233eff80f3c057b980cf972e.sol(93)

[31mViolation[0m for UnrestrictedWrite in contract 'Package':
    |    // Register version
    |    bytes32 versionId = semanticVersionHash(semanticVersion);
  > |    versions[versionId] = Version(semanticVersion, contractAddress, contentURI);
    |    
    |    // Update latest major
  at /unique_chucks/37/0x722bcc1c85037c7c233eff80f3c057b980cf972e.sol(148)

[31mViolation[0m for UnrestrictedWrite in contract 'Package':
    |    uint64 major = semanticVersion[0];
    |    if (major > latestMajor) {
  > |      latestMajor = semanticVersion[0];
    |    }
    |
  at /unique_chucks/37/0x722bcc1c85037c7c233eff80f3c057b980cf972e.sol(153)

[33mWarning[0m for UnrestrictedWrite in contract 'Package':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipTransferred(_owner, address(0));
  > |        _owner = address(0);
    |    }
    |
  at /unique_chucks/37/0x722bcc1c85037c7c233eff80f3c057b980cf972e.sol(59)

[33mWarning[0m for UnrestrictedWrite in contract 'Package':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_chucks/37/0x722bcc1c85037c7c233eff80f3c057b980cf972e.sol(77)

[33mWarning[0m for UnrestrictedWrite in contract 'Package':
    |       || (minor == latestVersionForMajor[1] && patch > latestVersionForMajor[2]) // Or current patch is greater
    |       ) { 
  > |      majorToLatestVersion[major] = versionId;
    |    }
    |
  at /unique_chucks/37/0x722bcc1c85037c7c233eff80f3c057b980cf972e.sol(164)