Processing contract: /unique_chucks/44/0x6cb74271f2f817a89096ee150ec0ac57c4c24d34.sol:Authorizable
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/44/0x6cb74271f2f817a89096ee150ec0ac57c4c24d34.sol:MultiSender
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/44/0x6cb74271f2f817a89096ee150ec0ac57c4c24d34.sol:Ownable
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/44/0x6cb74271f2f817a89096ee150ec0ac57c4c24d34.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/44/0x6cb74271f2f817a89096ee150ec0ac57c4c24d34.sol:tokenInterface
[31mViolation[0m for MissingInputValidation in contract 'Authorizable':
    |
    |contract Authorizable is Ownable {
  > |    mapping(address => bool) public authorized;
    |  
    |    event AuthorizationSet(address indexed addressAuthorized, bool indexed authorization);
  at /unique_chucks/44/0x6cb74271f2f817a89096ee150ec0ac57c4c24d34.sol(59)

[31mViolation[0m for MissingInputValidation in contract 'Authorizable':
    |    }
    |
  > |    function setAuthorized(address addressAuthorized, bool authorization) onlyOwner public {
    |        emit AuthorizationSet(addressAuthorized, authorization);
    |        authorized[addressAuthorized] = authorization;
  at /unique_chucks/44/0x6cb74271f2f817a89096ee150ec0ac57c4c24d34.sol(72)

[33mWarning[0m for UnrestrictedWrite in contract 'Authorizable':
    |	function transferOwnership(address _newOwner) public onlyOwner {
    |		require(address(0) != _newOwner, "address(0) != _newOwner");
  > |		newOwner = _newOwner;
    |	}
    |
  at /unique_chucks/44/0x6cb74271f2f817a89096ee150ec0ac57c4c24d34.sol(47)

[33mWarning[0m for UnrestrictedWrite in contract 'Authorizable':
    |		require(msg.sender == newOwner, "msg.sender == newOwner");
    |		emit OwnershipTransferred(owner, msg.sender);
  > |		owner = msg.sender;
    |		newOwner = address(0);
    |	}
  at /unique_chucks/44/0x6cb74271f2f817a89096ee150ec0ac57c4c24d34.sol(53)

[33mWarning[0m for UnrestrictedWrite in contract 'Authorizable':
    |		emit OwnershipTransferred(owner, msg.sender);
    |		owner = msg.sender;
  > |		newOwner = address(0);
    |	}
    |}
  at /unique_chucks/44/0x6cb74271f2f817a89096ee150ec0ac57c4c24d34.sol(54)

[33mWarning[0m for UnrestrictedWrite in contract 'Authorizable':
    |    function setAuthorized(address addressAuthorized, bool authorization) onlyOwner public {
    |        emit AuthorizationSet(addressAuthorized, authorization);
  > |        authorized[addressAuthorized] = authorization;
    |    }
    |  
  at /unique_chucks/44/0x6cb74271f2f817a89096ee150ec0ac57c4c24d34.sol(74)

[31mViolation[0m for RepeatedCall in contract 'MultiSender':
    |        uint256 i = 0;
    |        while (i < _dests.length) {
  > |           tokenContract.transfer(_dests[i], _values[i]);
    |           i += 1;
    |        }
  at /unique_chucks/44/0x6cb74271f2f817a89096ee150ec0ac57c4c24d34.sol(98)

[31mViolation[0m for TODAmount in contract 'MultiSender':
    |    
    |    function withdrawEther() public onlyAuthorized returns (bool) {
  > |        msg.sender.transfer(address(this).balance);
    |        return true;
    |    }
  at /unique_chucks/44/0x6cb74271f2f817a89096ee150ec0ac57c4c24d34.sol(109)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'MultiSender':
    |    
    |    function withdrawEther() public onlyAuthorized returns (bool) {
  > |        msg.sender.transfer(address(this).balance);
    |        return true;
    |    }
  at /unique_chucks/44/0x6cb74271f2f817a89096ee150ec0ac57c4c24d34.sol(109)

[31mViolation[0m for UnrestrictedWrite in contract 'MultiSender':
    |	
    |	function updateTokenContract(address _tokenAddress) public onlyAuthorized {
  > |        tokenContract = tokenInterface(_tokenAddress);
    |    }
    |	
  at /unique_chucks/44/0x6cb74271f2f817a89096ee150ec0ac57c4c24d34.sol(91)

[33mWarning[0m for UnrestrictedWrite in contract 'MultiSender':
    |	function transferOwnership(address _newOwner) public onlyOwner {
    |		require(address(0) != _newOwner, "address(0) != _newOwner");
  > |		newOwner = _newOwner;
    |	}
    |
  at /unique_chucks/44/0x6cb74271f2f817a89096ee150ec0ac57c4c24d34.sol(47)

[33mWarning[0m for UnrestrictedWrite in contract 'MultiSender':
    |		require(msg.sender == newOwner, "msg.sender == newOwner");
    |		emit OwnershipTransferred(owner, msg.sender);
  > |		owner = msg.sender;
    |		newOwner = address(0);
    |	}
  at /unique_chucks/44/0x6cb74271f2f817a89096ee150ec0ac57c4c24d34.sol(53)

[33mWarning[0m for UnrestrictedWrite in contract 'MultiSender':
    |		emit OwnershipTransferred(owner, msg.sender);
    |		owner = msg.sender;
  > |		newOwner = address(0);
    |	}
    |}
  at /unique_chucks/44/0x6cb74271f2f817a89096ee150ec0ac57c4c24d34.sol(54)

[33mWarning[0m for UnrestrictedWrite in contract 'MultiSender':
    |    function setAuthorized(address addressAuthorized, bool authorization) onlyOwner public {
    |        emit AuthorizationSet(addressAuthorized, authorization);
  > |        authorized[addressAuthorized] = authorization;
    |    }
    |  
  at /unique_chucks/44/0x6cb74271f2f817a89096ee150ec0ac57c4c24d34.sol(74)

[33mWarning[0m for UnrestrictedWrite in contract 'Ownable':
    |	function transferOwnership(address _newOwner) public onlyOwner {
    |		require(address(0) != _newOwner, "address(0) != _newOwner");
  > |		newOwner = _newOwner;
    |	}
    |
  at /unique_chucks/44/0x6cb74271f2f817a89096ee150ec0ac57c4c24d34.sol(47)

[33mWarning[0m for UnrestrictedWrite in contract 'Ownable':
    |		require(msg.sender == newOwner, "msg.sender == newOwner");
    |		emit OwnershipTransferred(owner, msg.sender);
  > |		owner = msg.sender;
    |		newOwner = address(0);
    |	}
  at /unique_chucks/44/0x6cb74271f2f817a89096ee150ec0ac57c4c24d34.sol(53)

[33mWarning[0m for UnrestrictedWrite in contract 'Ownable':
    |		emit OwnershipTransferred(owner, msg.sender);
    |		owner = msg.sender;
  > |		newOwner = address(0);
    |	}
    |}
  at /unique_chucks/44/0x6cb74271f2f817a89096ee150ec0ac57c4c24d34.sol(54)