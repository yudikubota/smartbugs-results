Processing contract: /unique_chucks/10/0xc9b965df61f634b35e34043545572f468af6599d.sol:ERC20
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/10/0xc9b965df61f634b35e34043545572f468af6599d.sol:ERC20RcvContract
Processing contract: /unique_chucks/10/0xc9b965df61f634b35e34043545572f468af6599d.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/10/0xc9b965df61f634b35e34043545572f468af6599d.sol:TenToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for UnrestrictedWrite in contract 'ERC20':
    |
    |        balances[msg.sender] = balances[msg.sender].sub(_value);
  > |        balances[_to] = balances[_to].add(_value);
    |        if(isContract(_to)) {
    |            ERC20RcvContract receiver = ERC20RcvContract(_to);
  at /unique_chucks/10/0xc9b965df61f634b35e34043545572f468af6599d.sol(98)

[31mViolation[0m for UnrestrictedWrite in contract 'ERC20':
    |    function transferFrom(address _from, address _to, uint _value) public returns (bool){
    |
  > |        balances[_from] = balances[_from].sub(_value);
    |        balances[_to] = balances[_to].add(_value);
    |        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
  at /unique_chucks/10/0xc9b965df61f634b35e34043545572f468af6599d.sol(109)

[31mViolation[0m for UnrestrictedWrite in contract 'ERC20':
    |
    |        balances[_from] = balances[_from].sub(_value);
  > |        balances[_to] = balances[_to].add(_value);
    |        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
    |
  at /unique_chucks/10/0xc9b965df61f634b35e34043545572f468af6599d.sol(110)

[31mViolation[0m for LockedEther in contract 'TenToken':
    |}
    |
  > |contract TenToken is ERC20 { 
    |
    |    string public symbol="GDEM";       
  at /unique_chucks/10/0xc9b965df61f634b35e34043545572f468af6599d.sol(150)

[31mViolation[0m for UnrestrictedWrite in contract 'TenToken':
    |
    |        balances[msg.sender] = balances[msg.sender].sub(_value);
  > |        balances[_to] = balances[_to].add(_value);
    |        if(isContract(_to)) {
    |            ERC20RcvContract receiver = ERC20RcvContract(_to);
  at /unique_chucks/10/0xc9b965df61f634b35e34043545572f468af6599d.sol(98)

[31mViolation[0m for UnrestrictedWrite in contract 'TenToken':
    |    function transferFrom(address _from, address _to, uint _value) public returns (bool){
    |
  > |        balances[_from] = balances[_from].sub(_value);
    |        balances[_to] = balances[_to].add(_value);
    |        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
  at /unique_chucks/10/0xc9b965df61f634b35e34043545572f468af6599d.sol(109)

[31mViolation[0m for UnrestrictedWrite in contract 'TenToken':
    |
    |        balances[_from] = balances[_from].sub(_value);
  > |        balances[_to] = balances[_to].add(_value);
    |        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
    |
  at /unique_chucks/10/0xc9b965df61f634b35e34043545572f468af6599d.sol(110)