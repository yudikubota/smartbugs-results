Processing contract: /unique_contracts/0xf4c13de243a7716fb7351736228c8337f460d760.sol:DreamCarToken
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0xf4c13de243a7716fb7351736228c8337f460d760.sol:WishListToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for TODAmount in contract 'WishListToken':
    |        
    |        //transfer ETH to CEO
  > |        CEO.transfer((amount * tokenPrice));
    |        
    |        //returns excessive ETH
  at /unique_contracts/0xf4c13de243a7716fb7351736228c8337f460d760.sol(268)

[31mViolation[0m for TODAmount in contract 'WishListToken':
    |        
    |        //returns excessive ETH
  > |        msg.sender.transfer(msg.value - (amount * tokenPrice));
    |    }
    |    
  at /unique_contracts/0xf4c13de243a7716fb7351736228c8337f460d760.sol(271)

[33mWarning[0m for TODReceiver in contract 'WishListToken':
    |        
    |        //transfer ETH to CEO
  > |        CEO.transfer((amount * tokenPrice));
    |        
    |        //returns excessive ETH
  at /unique_contracts/0xf4c13de243a7716fb7351736228c8337f460d760.sol(268)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'WishListToken':
    |        
    |        //transfer ETH to CEO
  > |        CEO.transfer((amount * tokenPrice));
    |        
    |        //returns excessive ETH
  at /unique_contracts/0xf4c13de243a7716fb7351736228c8337f460d760.sol(268)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'WishListToken':
    |        
    |        //returns excessive ETH
  > |        msg.sender.transfer(msg.value - (amount * tokenPrice));
    |    }
    |    
  at /unique_contracts/0xf4c13de243a7716fb7351736228c8337f460d760.sol(271)

[31mViolation[0m for UnrestrictedWrite in contract 'WishListToken':
    |        for (uint256 i = 0; i < priceAdmins.length; i++) {
    |            if (_existingPriceAdmin == priceAdmins[i]) {
  > |                delete priceAdmins[i];
    |                break;
    |            }
  at /unique_contracts/0xf4c13de243a7716fb7351736228c8337f460d760.sol(200)

[31mViolation[0m for UnrestrictedWrite in contract 'WishListToken':
    |        }
    |        
  > |        nextTokenId += _amount;
    |    }
    |    
  at /unique_contracts/0xf4c13de243a7716fb7351736228c8337f460d760.sol(233)

[33mWarning[0m for UnrestrictedWrite in contract 'WishListToken':
    |
    |//WLC VERSION 11
  > |
    |contract DreamCarToken {
    |    function getForWLC(address _owner) public {}
  at /unique_contracts/0xf4c13de243a7716fb7351736228c8337f460d760.sol(4)

[33mWarning[0m for UnrestrictedWrite in contract 'WishListToken':
    |        tokensOwnedBy[msg.sender].pop();
    |        
  > |        tokensOwnedBy[_to].push(_tokenId);
    |
    |        emit Transfer(msg.sender, _to, _tokenId);
  at /unique_contracts/0xf4c13de243a7716fb7351736228c8337f460d760.sol(97)

[33mWarning[0m for UnrestrictedWrite in contract 'WishListToken':
    |    function _addTokensToAddress(address _to, uint256 _amount) internal {
    |        for (uint256 i = 0; i < _amount; i++) {
  > |            tokensOwnedBy[_to].push(nextTokenId + i);
    |        }
    |        
  at /unique_contracts/0xf4c13de243a7716fb7351736228c8337f460d760.sol(230)

[33mWarning[0m for UnrestrictedWrite in contract 'WishListToken':
    |        tokensOwnedBy[msg.sender].pop();
    |
  > |        tokensExchangedBy[_owner].push(_tokenId);
    |    }
    |    
  at /unique_contracts/0xf4c13de243a7716fb7351736228c8337f460d760.sol(286)

[33mWarning[0m for UnrestrictedWrite in contract 'WishListToken':
    |
    |//WLC VERSION 11
  > |
    |contract DreamCarToken {
    |    function getForWLC(address _owner) public {}
  at /unique_contracts/0xf4c13de243a7716fb7351736228c8337f460d760.sol(4)

[33mWarning[0m for UnrestrictedWrite in contract 'WishListToken':
    |     */
    |    function addPriceAdmin(address _newPriceAdmin) onlyCEO public {
  > |        priceAdmins.push(_newPriceAdmin);
    |    }
    |    
  at /unique_contracts/0xf4c13de243a7716fb7351736228c8337f460d760.sol(190)

[33mWarning[0m for UnrestrictedWrite in contract 'WishListToken':
    |    function mint(uint256 _amount) onlyCEO public {
    |        require (_amount > 0, 'Amount must be bigger than 0!');
  > |        totalTokenSupply += _amount;
    |    }
    |    
  at /unique_contracts/0xf4c13de243a7716fb7351736228c8337f460d760.sol(305)

[33mWarning[0m for UnrestrictedWrite in contract 'WishListToken':
    |    function setDreamCarCoinExchanger(address _address) public onlyCEO {
    |        require (_address != address(0));
  > |        dreamCarCoinExchanger = DreamCarToken(_address);
    |    }
    |    
  at /unique_contracts/0xf4c13de243a7716fb7351736228c8337f460d760.sol(317)

[33mWarning[0m for UnrestrictedWrite in contract 'WishListToken':
    |     */
    |    function removeDreamCarCoinExchanger() public onlyCEO {
  > |        dreamCarCoinExchanger = DreamCarToken(address(0));
    |    }
    |    
  at /unique_contracts/0xf4c13de243a7716fb7351736228c8337f460d760.sol(325)