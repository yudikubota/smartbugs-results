Processing contract: /unique_chucks/22/0xa1b756be589441519b1a08e16bc4f60ab177d916.sol:BurnerRole
Processing contract: /unique_chucks/22/0xa1b756be589441519b1a08e16bc4f60ab177d916.sol:CanReclaimEther
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/22/0xa1b756be589441519b1a08e16bc4f60ab177d916.sol:CanReclaimToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/22/0xa1b756be589441519b1a08e16bc4f60ab177d916.sol:ERC20
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/22/0xa1b756be589441519b1a08e16bc4f60ab177d916.sol:ERC20Burnable
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/22/0xa1b756be589441519b1a08e16bc4f60ab177d916.sol:ERC20Detailed
Processing contract: /unique_chucks/22/0xa1b756be589441519b1a08e16bc4f60ab177d916.sol:ERC20Mintable
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/22/0xa1b756be589441519b1a08e16bc4f60ab177d916.sol:ERC20Pausable
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/22/0xa1b756be589441519b1a08e16bc4f60ab177d916.sol:ERC20Whitelistable
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/22/0xa1b756be589441519b1a08e16bc4f60ab177d916.sol:IERC20
Processing contract: /unique_chucks/22/0xa1b756be589441519b1a08e16bc4f60ab177d916.sol:IWhitelist
Processing contract: /unique_chucks/22/0xa1b756be589441519b1a08e16bc4f60ab177d916.sol:LeveragedToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/22/0xa1b756be589441519b1a08e16bc4f60ab177d916.sol:MinterRole
Processing contract: /unique_chucks/22/0xa1b756be589441519b1a08e16bc4f60ab177d916.sol:Ownable
Processing contract: /unique_chucks/22/0xa1b756be589441519b1a08e16bc4f60ab177d916.sol:Pausable
Processing contract: /unique_chucks/22/0xa1b756be589441519b1a08e16bc4f60ab177d916.sol:PauserRole
Processing contract: /unique_chucks/22/0xa1b756be589441519b1a08e16bc4f60ab177d916.sol:Roles
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/22/0xa1b756be589441519b1a08e16bc4f60ab177d916.sol:SafeERC20
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/22/0xa1b756be589441519b1a08e16bc4f60ab177d916.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for TODAmount in contract 'CanReclaimEther':
    |contract CanReclaimEther is Ownable {
    |    function reclaimEther() external onlyOwner {
  > |        msg.sender.transfer(address(this).balance);
    |    }
    |}
  at /unique_chucks/22/0xa1b756be589441519b1a08e16bc4f60ab177d916.sol(770)

[31mViolation[0m for UnrestrictedWrite in contract 'CanReclaimEther':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_chucks/22/0xa1b756be589441519b1a08e16bc4f60ab177d916.sol(642)

[33mWarning[0m for UnrestrictedWrite in contract 'CanReclaimEther':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipTransferred(_owner, address(0));
  > |        _owner = address(0);
    |    }
    |
  at /unique_chucks/22/0xa1b756be589441519b1a08e16bc4f60ab177d916.sol(624)

[33mWarning[0m for UnrestrictedWrite in contract 'CanReclaimEther':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_chucks/22/0xa1b756be589441519b1a08e16bc4f60ab177d916.sol(642)

[33mWarning[0m for UnrestrictedWrite in contract 'CanReclaimToken':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipTransferred(_owner, address(0));
  > |        _owner = address(0);
    |    }
    |
  at /unique_chucks/22/0xa1b756be589441519b1a08e16bc4f60ab177d916.sol(624)

[33mWarning[0m for UnrestrictedWrite in contract 'CanReclaimToken':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_chucks/22/0xa1b756be589441519b1a08e16bc4f60ab177d916.sol(642)

[33mWarning[0m for UnrestrictedWrite in contract 'ERC20Pausable':
    |     */
    |    function pause() public onlyPauser whenNotPaused {
  > |        _paused = true;
    |        emit Paused(msg.sender);
    |    }
  at /unique_chucks/22/0xa1b756be589441519b1a08e16bc4f60ab177d916.sol(462)

[33mWarning[0m for UnrestrictedWrite in contract 'ERC20Pausable':
    |     */
    |    function unpause() public onlyPauser whenPaused {
  > |        _paused = false;
    |        emit Unpaused(msg.sender);
    |    }
  at /unique_chucks/22/0xa1b756be589441519b1a08e16bc4f60ab177d916.sol(470)

[31mViolation[0m for RepeatedCall in contract 'ERC20Whitelistable':
    |
    |    function isWhitelisted(address account) public view returns (bool) {
  > |        return whitelist.isWhitelisted(account);
    |    }
    |
  at /unique_chucks/22/0xa1b756be589441519b1a08e16bc4f60ab177d916.sol(679)

[33mWarning[0m for UnrestrictedWrite in contract 'ERC20Whitelistable':
    |        require(account != address(0));
    |
  > |        _totalSupply = _totalSupply.add(value);
    |        _balances[account] = _balances[account].add(value);
    |        emit Transfer(address(0), account, value);
  at /unique_chucks/22/0xa1b756be589441519b1a08e16bc4f60ab177d916.sol(294)

[33mWarning[0m for UnrestrictedWrite in contract 'ERC20Whitelistable':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipTransferred(_owner, address(0));
  > |        _owner = address(0);
    |    }
    |
  at /unique_chucks/22/0xa1b756be589441519b1a08e16bc4f60ab177d916.sol(624)

[33mWarning[0m for UnrestrictedWrite in contract 'ERC20Whitelistable':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_chucks/22/0xa1b756be589441519b1a08e16bc4f60ab177d916.sol(642)

[33mWarning[0m for UnrestrictedWrite in contract 'ERC20Whitelistable':
    |
    |    function setWhitelist(IWhitelist _whitelist) public onlyOwner {
  > |        whitelist = _whitelist;
    |        emit WhitelistChanged(_whitelist);
    |    }
  at /unique_chucks/22/0xa1b756be589441519b1a08e16bc4f60ab177d916.sol(664)

[31mViolation[0m for RepeatedCall in contract 'LeveragedToken':
    |
    |    function isWhitelisted(address account) public view returns (bool) {
  > |        return whitelist.isWhitelisted(account);
    |    }
    |
  at /unique_chucks/22/0xa1b756be589441519b1a08e16bc4f60ab177d916.sol(679)

[31mViolation[0m for TODAmount in contract 'LeveragedToken':
    |contract CanReclaimEther is Ownable {
    |    function reclaimEther() external onlyOwner {
  > |        msg.sender.transfer(address(this).balance);
    |    }
    |}
  at /unique_chucks/22/0xa1b756be589441519b1a08e16bc4f60ab177d916.sol(770)

[33mWarning[0m for UnrestrictedWrite in contract 'LeveragedToken':
    |        require(account != address(0));
    |
  > |        _totalSupply = _totalSupply.add(value);
    |        _balances[account] = _balances[account].add(value);
    |        emit Transfer(address(0), account, value);
  at /unique_chucks/22/0xa1b756be589441519b1a08e16bc4f60ab177d916.sol(294)

[33mWarning[0m for UnrestrictedWrite in contract 'LeveragedToken':
    |        require(account != address(0));
    |
  > |        _totalSupply = _totalSupply.sub(value);
    |        _balances[account] = _balances[account].sub(value);
    |        emit Transfer(account, address(0), value);
  at /unique_chucks/22/0xa1b756be589441519b1a08e16bc4f60ab177d916.sol(308)

[33mWarning[0m for UnrestrictedWrite in contract 'LeveragedToken':
    |     */
    |    function pause() public onlyPauser whenNotPaused {
  > |        _paused = true;
    |        emit Paused(msg.sender);
    |    }
  at /unique_chucks/22/0xa1b756be589441519b1a08e16bc4f60ab177d916.sol(462)

[33mWarning[0m for UnrestrictedWrite in contract 'LeveragedToken':
    |     */
    |    function unpause() public onlyPauser whenPaused {
  > |        _paused = false;
    |        emit Unpaused(msg.sender);
    |    }
  at /unique_chucks/22/0xa1b756be589441519b1a08e16bc4f60ab177d916.sol(470)

[33mWarning[0m for UnrestrictedWrite in contract 'LeveragedToken':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipTransferred(_owner, address(0));
  > |        _owner = address(0);
    |    }
    |
  at /unique_chucks/22/0xa1b756be589441519b1a08e16bc4f60ab177d916.sol(624)

[33mWarning[0m for UnrestrictedWrite in contract 'LeveragedToken':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_chucks/22/0xa1b756be589441519b1a08e16bc4f60ab177d916.sol(642)

[33mWarning[0m for UnrestrictedWrite in contract 'LeveragedToken':
    |
    |    function setWhitelist(IWhitelist _whitelist) public onlyOwner {
  > |        whitelist = _whitelist;
    |        emit WhitelistChanged(_whitelist);
    |    }
  at /unique_chucks/22/0xa1b756be589441519b1a08e16bc4f60ab177d916.sol(664)