Processing contract: /unique_chucks/10/0x5cc00cca0692b9b34af816e5439cdb47d3b63691.sol:BasicToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/10/0x5cc00cca0692b9b34af816e5439cdb47d3b63691.sol:ERC20
Processing contract: /unique_chucks/10/0x5cc00cca0692b9b34af816e5439cdb47d3b63691.sol:ERC20Basic
Processing contract: /unique_chucks/10/0x5cc00cca0692b9b34af816e5439cdb47d3b63691.sol:Ownable
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/10/0x5cc00cca0692b9b34af816e5439cdb47d3b63691.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/10/0x5cc00cca0692b9b34af816e5439cdb47d3b63691.sol:StandardToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/10/0x5cc00cca0692b9b34af816e5439cdb47d3b63691.sol:WooshCoin
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[33mWarning[0m for UnrestrictedWrite in contract 'BasicToken':
    |    require(_value <= balances[msg.sender]);
    |    balances[msg.sender] = balances[msg.sender].sub(_value);
  > |    balances[_to] = balances[_to].add(_value);
    |    emit Transfer(msg.sender, _to, _value);
    |    return true;
  at /unique_chucks/10/0x5cc00cca0692b9b34af816e5439cdb47d3b63691.sol(105)

[33mWarning[0m for UnrestrictedWrite in contract 'Ownable':
    |    require(newOwner != address(0));
    |    emit OwnershipTransferred(owner, newOwner);
  > |    owner = newOwner;
    |  }
    |
  at /unique_chucks/10/0x5cc00cca0692b9b34af816e5439cdb47d3b63691.sol(62)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |    require(_value <= balances[msg.sender]);
    |    balances[msg.sender] = balances[msg.sender].sub(_value);
  > |    balances[_to] = balances[_to].add(_value);
    |    emit Transfer(msg.sender, _to, _value);
    |    return true;
  at /unique_chucks/10/0x5cc00cca0692b9b34af816e5439cdb47d3b63691.sol(105)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |    require(_value <= allowed[_from][msg.sender]);
    |
  > |    balances[_from] = balances[_from].sub(_value);
    |    balances[_to] = balances[_to].add(_value);
    |    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
  at /unique_chucks/10/0x5cc00cca0692b9b34af816e5439cdb47d3b63691.sol(128)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |
    |    balances[_from] = balances[_from].sub(_value);
  > |    balances[_to] = balances[_to].add(_value);
    |    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
    |    emit Transfer(_from, _to, _value);
  at /unique_chucks/10/0x5cc00cca0692b9b34af816e5439cdb47d3b63691.sol(129)

[31mViolation[0m for LockedEther in contract 'WooshCoin':
    |}
    |
  > |contract WooshCoin is StandardToken, Ownable {
    |    
    |  string public name;
  at /unique_chucks/10/0x5cc00cca0692b9b34af816e5439cdb47d3b63691.sol(164)

[33mWarning[0m for UnrestrictedWrite in contract 'WooshCoin':
    |    require(_value <= balances[msg.sender]);
    |    balances[msg.sender] = balances[msg.sender].sub(_value);
  > |    balances[_to] = balances[_to].add(_value);
    |    emit Transfer(msg.sender, _to, _value);
    |    return true;
  at /unique_chucks/10/0x5cc00cca0692b9b34af816e5439cdb47d3b63691.sol(105)

[33mWarning[0m for UnrestrictedWrite in contract 'WooshCoin':
    |    require(_value <= allowed[_from][msg.sender]);
    |
  > |    balances[_from] = balances[_from].sub(_value);
    |    balances[_to] = balances[_to].add(_value);
    |    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
  at /unique_chucks/10/0x5cc00cca0692b9b34af816e5439cdb47d3b63691.sol(128)

[33mWarning[0m for UnrestrictedWrite in contract 'WooshCoin':
    |
    |    balances[_from] = balances[_from].sub(_value);
  > |    balances[_to] = balances[_to].add(_value);
    |    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
    |    emit Transfer(_from, _to, _value);
  at /unique_chucks/10/0x5cc00cca0692b9b34af816e5439cdb47d3b63691.sol(129)

[33mWarning[0m for UnrestrictedWrite in contract 'WooshCoin':
    |    require(newOwner != address(0));
    |    emit OwnershipTransferred(owner, newOwner);
  > |    owner = newOwner;
    |  }
    |
  at /unique_chucks/10/0x5cc00cca0692b9b34af816e5439cdb47d3b63691.sol(62)