Processing contract: /unique_chucks/24/0xe650a4ed8c64174201204fd4d628a98661048fc4.sol:RobetTest
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/24/0xe650a4ed8c64174201204fd4d628a98661048fc4.sol:token
[33mWarning[0m for TODAmount in contract 'RobetTest':
    |            sendToken(addr, betToValue[bid], token(betToTokenAddress[bid]));
    |        }else{
  > |            addr.send(betToValue[bid]);
    |        }
    |        
  at /unique_chucks/24/0xe650a4ed8c64174201204fd4d628a98661048fc4.sol(54)

[33mWarning[0m for TODReceiver in contract 'RobetTest':
    |            sendToken(addr, betToValue[bid], token(betToTokenAddress[bid]));
    |        }else{
  > |            addr.send(betToValue[bid]);
    |        }
    |        
  at /unique_chucks/24/0xe650a4ed8c64174201204fd4d628a98661048fc4.sol(54)

[31mViolation[0m for UnhandledException in contract 'RobetTest':
    |            sendToken(addr, betToValue[bid], token(betToTokenAddress[bid]));
    |        }else{
  > |            addr.send(betToValue[bid]);
    |        }
    |        
  at /unique_chucks/24/0xe650a4ed8c64174201204fd4d628a98661048fc4.sol(54)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'RobetTest':
    |            sendToken(addr, betToValue[bid], token(betToTokenAddress[bid]));
    |        }else{
  > |            addr.send(betToValue[bid]);
    |        }
    |        
  at /unique_chucks/24/0xe650a4ed8c64174201204fd4d628a98661048fc4.sol(54)

[31mViolation[0m for UnrestrictedWrite in contract 'RobetTest':
    |
    |    function insertBet(bytes32 bid, address payable addr, uint256 _value, address payable tokenAddress) public returns (bool success) {
  > |        betToAddress[bid] = addr;
    |        betToValue[bid] = _value;
    |        betToTokenAddress[bid] = tokenAddress;
  at /unique_chucks/24/0xe650a4ed8c64174201204fd4d628a98661048fc4.sol(41)

[31mViolation[0m for UnrestrictedWrite in contract 'RobetTest':
    |    function insertBet(bytes32 bid, address payable addr, uint256 _value, address payable tokenAddress) public returns (bool success) {
    |        betToAddress[bid] = addr;
  > |        betToValue[bid] = _value;
    |        betToTokenAddress[bid] = tokenAddress;
    |        return true;
  at /unique_chucks/24/0xe650a4ed8c64174201204fd4d628a98661048fc4.sol(42)

[31mViolation[0m for UnrestrictedWrite in contract 'RobetTest':
    |        betToAddress[bid] = addr;
    |        betToValue[bid] = _value;
  > |        betToTokenAddress[bid] = tokenAddress;
    |        return true;
    |    }
  at /unique_chucks/24/0xe650a4ed8c64174201204fd4d628a98661048fc4.sol(43)

[31mViolation[0m for UnrestrictedWrite in contract 'RobetTest':
    |    
    |    function signal(bytes32 bid, bytes32 result) public returns (bool success) {
  > |        betToWinners[bid] = result;
    |        address payable addr = (betToAddress[bid]);
    |        
  at /unique_chucks/24/0xe650a4ed8c64174201204fd4d628a98661048fc4.sol(48)