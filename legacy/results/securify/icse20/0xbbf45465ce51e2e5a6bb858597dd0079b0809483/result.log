Processing contract: /unique_contracts/0xbbf45465ce51e2e5a6bb858597dd0079b0809483.sol:AICCToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
java.io.IOException: Timeout for /tmp/binaries_souffle3663042477474414772/mustExplicit -j 1 -F /tmp/souffle-63572cc2-bfc8-460f-8e4f-98456fc1a16e -D /tmp/souffle-63572cc2-bfc8-460f-8e4f-98456fc1a16e_OUT
	at ch.securify.analysis.AbstractDataflow.runCommand(AbstractDataflow.java:277)
	at ch.securify.analysis.AbstractDataflow.initDataflow(AbstractDataflow.java:169)
	at ch.securify.analysis.MustExplicitDataflow.<init>(MustExplicitDataflow.java:33)
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:33)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error in Securify
java.lang.RuntimeException
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:37)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error, skipping: /unique_contracts/0xbbf45465ce51e2e5a6bb858597dd0079b0809483.sol:AICCToken
Processing contract: /unique_contracts/0xbbf45465ce51e2e5a6bb858597dd0079b0809483.sol:FreezableToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0xbbf45465ce51e2e5a6bb858597dd0079b0809483.sol:IERC20
Processing contract: /unique_contracts/0xbbf45465ce51e2e5a6bb858597dd0079b0809483.sol:Ownable
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0xbbf45465ce51e2e5a6bb858597dd0079b0809483.sol:Pausable
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0xbbf45465ce51e2e5a6bb858597dd0079b0809483.sol:PausableToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0xbbf45465ce51e2e5a6bb858597dd0079b0809483.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0xbbf45465ce51e2e5a6bb858597dd0079b0809483.sol:StandardToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[33mWarning[0m for UnrestrictedWrite in contract 'FreezableToken':
    |        require(newOwner != address(0), "Cannot transfer control of the contract to the zero address");
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_contracts/0xbbf45465ce51e2e5a6bb858597dd0079b0809483.sol(127)

[33mWarning[0m for UnrestrictedWrite in contract 'FreezableToken':
    |     */
    |    function pause() public onlyOwner whenNotPaused {
  > |        paused = true;
    |        emit Pause();
    |    }
  at /unique_contracts/0xbbf45465ce51e2e5a6bb858597dd0079b0809483.sol(299)

[33mWarning[0m for UnrestrictedWrite in contract 'FreezableToken':
    |     */
    |    function unpause() public onlyOwner whenPaused {
  > |        paused = false;
    |        emit Unpause();
    |    }
  at /unique_contracts/0xbbf45465ce51e2e5a6bb858597dd0079b0809483.sol(307)

[33mWarning[0m for UnrestrictedWrite in contract 'FreezableToken':
    |     */
    |    function freeze(address account, bool frozen) public onlyOwner {
  > |  	    _frozenAccount[account] = frozen;
    |  	    emit FrozenAccount(account, frozen);
    |    }
  at /unique_contracts/0xbbf45465ce51e2e5a6bb858597dd0079b0809483.sol(368)

[31mViolation[0m for UnrestrictedWrite in contract 'Ownable':
    |        require(newOwner != address(0), "Cannot transfer control of the contract to the zero address");
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_contracts/0xbbf45465ce51e2e5a6bb858597dd0079b0809483.sol(127)

[33mWarning[0m for UnrestrictedWrite in contract 'Ownable':
    |        require(newOwner != address(0), "Cannot transfer control of the contract to the zero address");
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_contracts/0xbbf45465ce51e2e5a6bb858597dd0079b0809483.sol(127)

[31mViolation[0m for UnrestrictedWrite in contract 'Pausable':
    |        require(newOwner != address(0), "Cannot transfer control of the contract to the zero address");
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_contracts/0xbbf45465ce51e2e5a6bb858597dd0079b0809483.sol(127)

[33mWarning[0m for UnrestrictedWrite in contract 'Pausable':
    |        require(newOwner != address(0), "Cannot transfer control of the contract to the zero address");
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_contracts/0xbbf45465ce51e2e5a6bb858597dd0079b0809483.sol(127)

[33mWarning[0m for UnrestrictedWrite in contract 'Pausable':
    |     */
    |    function pause() public onlyOwner whenNotPaused {
  > |        paused = true;
    |        emit Pause();
    |    }
  at /unique_contracts/0xbbf45465ce51e2e5a6bb858597dd0079b0809483.sol(299)

[33mWarning[0m for UnrestrictedWrite in contract 'Pausable':
    |     */
    |    function unpause() public onlyOwner whenPaused {
  > |        paused = false;
    |        emit Unpause();
    |    }
  at /unique_contracts/0xbbf45465ce51e2e5a6bb858597dd0079b0809483.sol(307)

[33mWarning[0m for UnrestrictedWrite in contract 'PausableToken':
    |        require(newOwner != address(0), "Cannot transfer control of the contract to the zero address");
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_contracts/0xbbf45465ce51e2e5a6bb858597dd0079b0809483.sol(127)

[33mWarning[0m for UnrestrictedWrite in contract 'PausableToken':
    |     */
    |    function pause() public onlyOwner whenNotPaused {
  > |        paused = true;
    |        emit Pause();
    |    }
  at /unique_contracts/0xbbf45465ce51e2e5a6bb858597dd0079b0809483.sol(299)

[33mWarning[0m for UnrestrictedWrite in contract 'PausableToken':
    |     */
    |    function unpause() public onlyOwner whenPaused {
  > |        paused = false;
    |        emit Unpause();
    |    }
  at /unique_contracts/0xbbf45465ce51e2e5a6bb858597dd0079b0809483.sol(307)