Processing contract: /unique_chucks/23/0x6011eaa54b5cf8671ae02f6f51c3fff7bc266cdb.sol:Lockbox
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[33mWarning[0m for TODAmount in contract 'Lockbox':
    |
    |        emit PayOut(returnFundsAddress, UINT_MAX, amount);
  > |        returnFundsAddress.transfer(amount);
    |    }
    |
  at /unique_chucks/23/0x6011eaa54b5cf8671ae02f6f51c3fff7bc266cdb.sol(64)

[33mWarning[0m for TODReceiver in contract 'Lockbox':
    |
    |        emit PayOut(returnFundsAddress, UINT_MAX, amount);
  > |        returnFundsAddress.transfer(amount);
    |    }
    |
  at /unique_chucks/23/0x6011eaa54b5cf8671ae02f6f51c3fff7bc266cdb.sol(64)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'Lockbox':
    |
    |        emit PayOut(msg.sender, nonce, amount);
  > |        msg.sender.transfer(amount);
    |    }
    |
  at /unique_chucks/23/0x6011eaa54b5cf8671ae02f6f51c3fff7bc266cdb.sol(52)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'Lockbox':
    |
    |        emit PayOut(returnFundsAddress, UINT_MAX, amount);
  > |        returnFundsAddress.transfer(amount);
    |    }
    |
  at /unique_chucks/23/0x6011eaa54b5cf8671ae02f6f51c3fff7bc266cdb.sol(64)

[31mViolation[0m for UnrestrictedWrite in contract 'Lockbox':
    |            require(amount == 1, "Req. 1 WEI amt for 0 nonce");
    |        } else {
  > |            usedNonces[nonce] = true;
    |        }
    |
  at /unique_chucks/23/0x6011eaa54b5cf8671ae02f6f51c3fff7bc266cdb.sol(48)

[33mWarning[0m for UnrestrictedWrite in contract 'Lockbox':
    |        for (uint i = 0; i < nonces.length; i++){
    |            if (nonces[i] != 0)
  > |                usedNonces[nonces[i]] = true;
    |        }
    |
  at /unique_chucks/23/0x6011eaa54b5cf8671ae02f6f51c3fff7bc266cdb.sol(60)