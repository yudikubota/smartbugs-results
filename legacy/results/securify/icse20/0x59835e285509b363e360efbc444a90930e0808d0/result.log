Processing contract: /unique_chucks/45/0x59835e285509b363e360efbc444a90930e0808d0.sol:IERC20Token
Processing contract: /unique_chucks/45/0x59835e285509b363e360efbc444a90930e0808d0.sol:IOwnable
Processing contract: /unique_chucks/45/0x59835e285509b363e360efbc444a90930e0808d0.sol:IRefund
Processing contract: /unique_chucks/45/0x59835e285509b363e360efbc444a90930e0808d0.sol:ITap
Processing contract: /unique_chucks/45/0x59835e285509b363e360efbc444a90930e0808d0.sol:IWinbixToken
Processing contract: /unique_chucks/45/0x59835e285509b363e360efbc444a90930e0808d0.sol:Ownable
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/45/0x59835e285509b363e360efbc444a90930e0808d0.sol:Refund
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for MissingInputValidation in contract 'Ownable':
    |    }
    |
  > |    function changeOwner(address _newOwner) public onlyOwner {
    |        newOwner = _newOwner;
    |    }
  at /unique_chucks/45/0x59835e285509b363e360efbc444a90930e0808d0.sol(27)

[33mWarning[0m for UnrestrictedWrite in contract 'Ownable':
    |
    |    function changeOwner(address _newOwner) public onlyOwner {
  > |        newOwner = _newOwner;
    |    }
    |
  at /unique_chucks/45/0x59835e285509b363e360efbc444a90930e0808d0.sol(28)

[33mWarning[0m for UnrestrictedWrite in contract 'Ownable':
    |        require(msg.sender == newOwner);
    |        emit OwnerChanged(owner, newOwner);
  > |        owner = newOwner;
    |        newOwner = address(0);
    |    }
  at /unique_chucks/45/0x59835e285509b363e360efbc444a90930e0808d0.sol(34)

[33mWarning[0m for UnrestrictedWrite in contract 'Ownable':
    |        emit OwnerChanged(owner, newOwner);
    |        owner = newOwner;
  > |        newOwner = address(0);
    |    }
    |}
  at /unique_chucks/45/0x59835e285509b363e360efbc444a90930e0808d0.sol(35)

[33mWarning[0m for UnrestrictedWrite in contract 'Refund':
    |
    |    function changeOwner(address _newOwner) public onlyOwner {
  > |        newOwner = _newOwner;
    |    }
    |
  at /unique_chucks/45/0x59835e285509b363e360efbc444a90930e0808d0.sol(28)

[33mWarning[0m for UnrestrictedWrite in contract 'Refund':
    |        require(msg.sender == newOwner);
    |        emit OwnerChanged(owner, newOwner);
  > |        owner = newOwner;
    |        newOwner = address(0);
    |    }
  at /unique_chucks/45/0x59835e285509b363e360efbc444a90930e0808d0.sol(34)

[33mWarning[0m for UnrestrictedWrite in contract 'Refund':
    |        emit OwnerChanged(owner, newOwner);
    |        owner = newOwner;
  > |        newOwner = address(0);
    |    }
    |}
  at /unique_chucks/45/0x59835e285509b363e360efbc444a90930e0808d0.sol(35)

[33mWarning[0m for UnrestrictedWrite in contract 'Refund':
    |
    |    function init(uint _tokensBase, address _tap, uint _startDate) public onlyOwner {
  > |        tap = ITap(_tap);
    |        tokensBase = _tokensBase;
    |        startDate = _startDate;
  at /unique_chucks/45/0x59835e285509b363e360efbc444a90930e0808d0.sol(126)

[33mWarning[0m for UnrestrictedWrite in contract 'Refund':
    |    function init(uint _tokensBase, address _tap, uint _startDate) public onlyOwner {
    |        tap = ITap(_tap);
  > |        tokensBase = _tokensBase;
    |        startDate = _startDate;
    |    }
  at /unique_chucks/45/0x59835e285509b363e360efbc444a90930e0808d0.sol(127)

[33mWarning[0m for UnrestrictedWrite in contract 'Refund':
    |        tap = ITap(_tap);
    |        tokensBase = _tokensBase;
  > |        startDate = _startDate;
    |    }
    |
  at /unique_chucks/45/0x59835e285509b363e360efbc444a90930e0808d0.sol(128)

[33mWarning[0m for UnrestrictedWrite in contract 'Refund':
    |    function refundEther(uint _value) public onlyOwner returns (uint) {
    |        uint etherForRefund = calculateEtherForRefund(_value);
  > |        refundedTokens += _value;
    |        return etherForRefund;
    |    }
  at /unique_chucks/45/0x59835e285509b363e360efbc444a90930e0808d0.sol(133)