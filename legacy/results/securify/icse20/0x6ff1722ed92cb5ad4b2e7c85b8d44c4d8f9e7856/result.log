Processing contract: /unique_chucks/8/0x6ff1722ed92cb5ad4b2e7c85b8d44c4d8f9e7856.sol:ERC20
Processing contract: /unique_chucks/8/0x6ff1722ed92cb5ad4b2e7c85b8d44c4d8f9e7856.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/8/0x6ff1722ed92cb5ad4b2e7c85b8d44c4d8f9e7856.sol:selfdropToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for TODAmount in contract 'selfdropToken':
    |    }
    |    function withdraw() public onlyOwner {
  > |        msg.sender.transfer(address(this).balance);
    |    }
    |}
  at /unique_chucks/8/0x6ff1722ed92cb5ad4b2e7c85b8d44c4d8f9e7856.sol(193)

[31mViolation[0m for UnrestrictedWrite in contract 'selfdropToken':
    |        
    |        if (selfdropvalue > totalRemaining) {
  > |            selfdropvalue = totalRemaining;
    |        }
    |        
  at /unique_chucks/8/0x6ff1722ed92cb5ad4b2e7c85b8d44c4d8f9e7856.sol(153)

[33mWarning[0m for UnrestrictedWrite in contract 'selfdropToken':
    |
    |/**
  > | * @title ERC20 interface
    | * @dev see https://github.com/ethereum/EIPs/issues/20
    | */
  at /unique_chucks/8/0x6ff1722ed92cb5ad4b2e7c85b8d44c4d8f9e7856.sol(4)

[33mWarning[0m for UnrestrictedWrite in contract 'selfdropToken':
    |    function setselfdroptoken(address _selfdroptoken) public onlyOwner {
    |        require (_selfdroptoken != address(0));
  > |        selfdroptoken = _selfdroptoken;
    |        totalRemaining = ERC20(selfdroptoken).balanceOf(address(this));
    |    } 
  at /unique_chucks/8/0x6ff1722ed92cb5ad4b2e7c85b8d44c4d8f9e7856.sol(103)

[33mWarning[0m for UnrestrictedWrite in contract 'selfdropToken':
    |        require (_selfdroptoken != address(0));
    |        selfdroptoken = _selfdroptoken;
  > |        totalRemaining = ERC20(selfdroptoken).balanceOf(address(this));
    |    } 
    |    function transferOwnership(address newOwner) onlyOwner public {
  at /unique_chucks/8/0x6ff1722ed92cb5ad4b2e7c85b8d44c4d8f9e7856.sol(104)

[33mWarning[0m for UnrestrictedWrite in contract 'selfdropToken':
    |    function transferOwnership(address newOwner) onlyOwner public {
    |        if (newOwner != address(0)) {
  > |            owner = newOwner;
    |        }
    |    }
  at /unique_chucks/8/0x6ff1722ed92cb5ad4b2e7c85b8d44c4d8f9e7856.sol(108)

[33mWarning[0m for UnrestrictedWrite in contract 'selfdropToken':
    |    }
    |    function startselfdrop() onlyOwner public returns (bool) {
  > |        distributionFinished = false;
    |        return true;
    |    }
  at /unique_chucks/8/0x6ff1722ed92cb5ad4b2e7c85b8d44c4d8f9e7856.sol(112)

[33mWarning[0m for UnrestrictedWrite in contract 'selfdropToken':
    |    }
    |    function startcrowdsale() onlyOwner public returns (bool) {
  > |        crowdsaleFinished = false;
    |        return true;
    |    }
  at /unique_chucks/8/0x6ff1722ed92cb5ad4b2e7c85b8d44c4d8f9e7856.sol(116)

[33mWarning[0m for UnrestrictedWrite in contract 'selfdropToken':
    |    }
    |    function finishselfdrop() onlyOwner canDistr public returns (bool) {
  > |        distributionFinished = true;
    |        emit DistrFinished();
    |        return true;
  at /unique_chucks/8/0x6ff1722ed92cb5ad4b2e7c85b8d44c4d8f9e7856.sol(120)

[33mWarning[0m for UnrestrictedWrite in contract 'selfdropToken':
    |    }
    |    function finishcrowdsale() onlyOwner canDistrCS public returns (bool) {
  > |        crowdsaleFinished = true;
    |        emit crowdsaleFinishedd();
    |        return true;
  at /unique_chucks/8/0x6ff1722ed92cb5ad4b2e7c85b8d44c4d8f9e7856.sol(125)

[33mWarning[0m for UnrestrictedWrite in contract 'selfdropToken':
    |    function distr(address _to, uint256 _amount) private returns (bool) {
    |
  > |        totalRemaining = totalRemaining.sub(_amount);
    |        ERC20(selfdroptoken).transfer(_to,_amount);
    |        emit Distr(_to, _amount);
  at /unique_chucks/8/0x6ff1722ed92cb5ad4b2e7c85b8d44c4d8f9e7856.sol(132)

[33mWarning[0m for UnrestrictedWrite in contract 'selfdropToken':
    |    }
    |    function setselfdropvalue(uint256 _value) public onlyOwner {
  > |        selfdropvalue = _value.mul(1e18);
    |    }
    |    function () external payable{
  at /unique_chucks/8/0x6ff1722ed92cb5ad4b2e7c85b8d44c4d8f9e7856.sol(143)

[33mWarning[0m for UnrestrictedWrite in contract 'selfdropToken':
    |    
    |    function setethrate(uint _rate) onlyOwner public {
  > |        rate = _rate;
    |    }
    |    function getTokens() canDistrCS public payable {
  at /unique_chucks/8/0x6ff1722ed92cb5ad4b2e7c85b8d44c4d8f9e7856.sol(169)

[33mWarning[0m for UnrestrictedWrite in contract 'selfdropToken':
    |        
    |        if(msg.value >= 0.1 ether){
  > |            hugeetherinvest.push(msg.sender);
    |        }
    |    }
  at /unique_chucks/8/0x6ff1722ed92cb5ad4b2e7c85b8d44c4d8f9e7856.sol(186)