Processing contract: /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol:BlacklistStore
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol:BlacklistableToken
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol:BurnableToken
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol:ERC20Interface
Processing contract: /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol:ERC20StandardToken
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol:MintableToken
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol:Operable
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol:Ownable
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol:PausableToken
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol:PingAnToken
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol:TokenStore
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for MissingInputValidation in contract 'BlacklistStore':
    |     * @param _newOwner The address to transfer ownership to.
    |     */
  > |    function transferOwnership(address _newOwner) public onlyOwner {
    |        _pendingOwner = _newOwner;
    |    }
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(68)

[31mViolation[0m for MissingInputValidation in contract 'BlacklistStore':
    |contract BlacklistStore is Operable {
    |
  > |    mapping (address => uint256) public blacklisted;
    |
    |    /**
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(537)

[31mViolation[0m for MissingInputValidation in contract 'BlacklistStore':
    |     * @param _status The address status    
    |     */
  > |    function setBlacklist(address _account, uint256 _status) public onlyOperator {
    |        blacklisted[_account] = _status;
    |    }
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(544)

[33mWarning[0m for UnrestrictedWrite in contract 'BlacklistStore':
    |     */
    |    function transferOwnership(address _newOwner) public onlyOwner {
  > |        _pendingOwner = _newOwner;
    |    }
    |
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(69)

[33mWarning[0m for UnrestrictedWrite in contract 'BlacklistStore':
    |    function claimOwnership() public onlyPendingOwner {
    |        emit OwnershipTransferred(_owner, _pendingOwner);
  > |        _owner = _pendingOwner;
    |        _pendingOwner = address(0); 
    |    }
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(77)

[33mWarning[0m for UnrestrictedWrite in contract 'BlacklistStore':
    |        emit OwnershipTransferred(_owner, _pendingOwner);
    |        _owner = _pendingOwner;
  > |        _pendingOwner = address(0); 
    |    }
    |    
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(78)

[33mWarning[0m for UnrestrictedWrite in contract 'BlacklistStore':
    |        require(_newOperator != address(0), "Cannot change the newOperator to the zero address");
    |        emit OperatorChanged(_operator, _newOperator);
  > |        _operator = _newOperator;
    |    }
    |
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(117)

[33mWarning[0m for UnrestrictedWrite in contract 'BlacklistStore':
    |     */
    |    function setBlacklist(address _account, uint256 _status) public onlyOperator {
  > |        blacklisted[_account] = _status;
    |    }
    |
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(545)

[33mWarning[0m for LockedEther in contract 'BlacklistableToken':
    | * @dev Allows accounts to be blacklisted by a "blacklister" role
    | */
  > |contract BlacklistableToken is PausableToken {
    |
    |    BlacklistStore public blacklistStore;
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(560)

[31mViolation[0m for MissingInputValidation in contract 'BlacklistableToken':
    |     * @param _newOwner The address to transfer ownership to.
    |     */
  > |    function transferOwnership(address _newOwner) public onlyOwner {
    |        _pendingOwner = _newOwner;
    |    }
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(68)

[31mViolation[0m for MissingInputValidation in contract 'BlacklistableToken':
    |     * @param _newTokenStore The address to of the TokenStore to set.
    |     */
  > |    function setTokenStore(address _newTokenStore) public onlyOwner returns (bool) {
    |        emit TokenStoreSet(address(tokenStore), _newTokenStore);
    |        tokenStore = TokenStore(_newTokenStore);
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(296)

[31mViolation[0m for MissingInputValidation in contract 'BlacklistableToken':
    |    }
    |
  > |    function balanceOf(address _holder) public view returns (uint256) {
    |        return tokenStore.balances(_holder);
    |    }
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(311)

[31mViolation[0m for MissingInputValidation in contract 'BlacklistableToken':
    |    }
    |
  > |    function allowance(address _holder, address _spender) public view returns (uint256) {
    |        return tokenStore.allowed(_holder, _spender);
    |    }
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(315)

[31mViolation[0m for MissingInputValidation in contract 'BlacklistableToken':
    |     * @param _newblacklistStore The blacklistStore address to set
    |     */
  > |    function setBlacklistStore(address _newblacklistStore) public onlyOwner returns (bool) {
    |        emit BlacklistStoreSet(address(blacklistStore), _newblacklistStore);
    |        blacklistStore = BlacklistStore(_newblacklistStore);
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(600)

[31mViolation[0m for MissingInputValidation in contract 'BlacklistableToken':
    |     * @return the address status 
    |     */
  > |    function queryBlacklist(address _account) public view returns (uint256) {
    |        return blacklistStore.blacklisted(_account);
    |    }
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(621)

[31mViolation[0m for MissingInputValidation in contract 'BlacklistableToken':
    |     * @param _status The address status to change
    |     */
  > |    function changeBlacklist(address _account, uint256 _status) public onlyBlacklister {
    |        blacklistStore.setBlacklist(_account, _status);
    |        emit Blacklist(_account, _status);
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(630)

[31mViolation[0m for MissingInputValidation in contract 'BlacklistableToken':
    |    }
    |
  > |    function approve(
    |        address _spender,
    |        uint256 _value
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(635)

[31mViolation[0m for MissingInputValidation in contract 'BlacklistableToken':
    |    }
    |    
  > |    function increaseApproval(
    |        address _spender,
    |        uint256 _addedValue
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(642)

[31mViolation[0m for MissingInputValidation in contract 'BlacklistableToken':
    |    } 
    |
  > |    function decreaseApproval(
    |        address _spender,
    |        uint256 _subtractedValue 
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(649)

[31mViolation[0m for MissingInputValidation in contract 'BlacklistableToken':
    |    }
    |
  > |    function transferFrom(
    |        address _from, 
    |        address _to, 
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(656)

[31mViolation[0m for MissingInputValidation in contract 'BlacklistableToken':
    |    } 
    |
  > |    function transfer(
    |        address _to, 
    |        uint256 _value
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(664)

[33mWarning[0m for MissingInputValidation in contract 'BlacklistableToken':
    |    }
    |    
  > |    function changeTokenName(string memory _name, string memory _symbol) public onlyOwner {
    |        tokenStore.changeTokenName(_name, _symbol);
    |        emit ChangeTokenName(_name, _symbol);
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(302)

[33mWarning[0m for TODAmount in contract 'BlacklistableToken':
    |    ) public returns (bool success) {
    |        require (_spender != address(0), "Cannot approve to the zero address");       
  > |        tokenStore.setAllowance(msg.sender, _spender, _value);
    |        emit Approval(msg.sender, _spender, _value);
    |        return true;
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(345)

[33mWarning[0m for TODAmount in contract 'BlacklistableToken':
    |    ) public returns (bool success) {
    |        require (_spender != address(0), "Cannot increaseApproval to the zero address");      
  > |        tokenStore.addAllowance(msg.sender, _spender, _addedValue);
    |        emit Approval(msg.sender, _spender, tokenStore.allowed(msg.sender, _spender));
    |        return true;
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(365)

[33mWarning[0m for TODAmount in contract 'BlacklistableToken':
    |    ) public returns (bool success) {
    |        require (_spender != address(0), "Cannot decreaseApproval to the zero address");       
  > |        tokenStore.subAllowance(msg.sender, _spender, _subtractedValue);
    |        emit Approval(msg.sender, _spender, tokenStore.allowed(msg.sender, _spender));
    |        return true;
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(385)

[33mWarning[0m for TODAmount in contract 'BlacklistableToken':
    |    ) public returns (bool success) {
    |        require(_to != address(0), "Cannot transfer to zero address"); 
  > |        tokenStore.subAllowance(_from, msg.sender, _value);          
    |        tokenStore.subBalance(_from, _value);
    |        tokenStore.addBalance(_to, _value);
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(402)

[33mWarning[0m for TODAmount in contract 'BlacklistableToken':
    |        require(_to != address(0), "Cannot transfer to zero address"); 
    |        tokenStore.subAllowance(_from, msg.sender, _value);          
  > |        tokenStore.subBalance(_from, _value);
    |        tokenStore.addBalance(_to, _value);
    |        emit Transfer(_from, _to, _value);
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(403)

[33mWarning[0m for TODAmount in contract 'BlacklistableToken':
    |        tokenStore.subAllowance(_from, msg.sender, _value);          
    |        tokenStore.subBalance(_from, _value);
  > |        tokenStore.addBalance(_to, _value);
    |        emit Transfer(_from, _to, _value);
    |        return true;
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(404)

[33mWarning[0m for TODAmount in contract 'BlacklistableToken':
    |    ) public returns (bool success) {
    |        require (_to != address(0), "Cannot transfer to zero address");    
  > |        tokenStore.subBalance(msg.sender, _value);
    |        tokenStore.addBalance(_to, _value);
    |        emit Transfer(msg.sender, _to, _value);
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(419)

[33mWarning[0m for TODAmount in contract 'BlacklistableToken':
    |        require (_to != address(0), "Cannot transfer to zero address");    
    |        tokenStore.subBalance(msg.sender, _value);
  > |        tokenStore.addBalance(_to, _value);
    |        emit Transfer(msg.sender, _to, _value);
    |        return true;
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(420)

[33mWarning[0m for TODReceiver in contract 'BlacklistableToken':
    |    ) public returns (bool success) {
    |        require (_spender != address(0), "Cannot approve to the zero address");       
  > |        tokenStore.setAllowance(msg.sender, _spender, _value);
    |        emit Approval(msg.sender, _spender, _value);
    |        return true;
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(345)

[33mWarning[0m for TODReceiver in contract 'BlacklistableToken':
    |    ) public returns (bool success) {
    |        require (_spender != address(0), "Cannot increaseApproval to the zero address");      
  > |        tokenStore.addAllowance(msg.sender, _spender, _addedValue);
    |        emit Approval(msg.sender, _spender, tokenStore.allowed(msg.sender, _spender));
    |        return true;
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(365)

[33mWarning[0m for TODReceiver in contract 'BlacklistableToken':
    |    ) public returns (bool success) {
    |        require (_spender != address(0), "Cannot decreaseApproval to the zero address");       
  > |        tokenStore.subAllowance(msg.sender, _spender, _subtractedValue);
    |        emit Approval(msg.sender, _spender, tokenStore.allowed(msg.sender, _spender));
    |        return true;
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(385)

[33mWarning[0m for TODReceiver in contract 'BlacklistableToken':
    |    ) public returns (bool success) {
    |        require(_to != address(0), "Cannot transfer to zero address"); 
  > |        tokenStore.subAllowance(_from, msg.sender, _value);          
    |        tokenStore.subBalance(_from, _value);
    |        tokenStore.addBalance(_to, _value);
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(402)

[33mWarning[0m for TODReceiver in contract 'BlacklistableToken':
    |        require(_to != address(0), "Cannot transfer to zero address"); 
    |        tokenStore.subAllowance(_from, msg.sender, _value);          
  > |        tokenStore.subBalance(_from, _value);
    |        tokenStore.addBalance(_to, _value);
    |        emit Transfer(_from, _to, _value);
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(403)

[33mWarning[0m for TODReceiver in contract 'BlacklistableToken':
    |        tokenStore.subAllowance(_from, msg.sender, _value);          
    |        tokenStore.subBalance(_from, _value);
  > |        tokenStore.addBalance(_to, _value);
    |        emit Transfer(_from, _to, _value);
    |        return true;
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(404)

[33mWarning[0m for TODReceiver in contract 'BlacklistableToken':
    |    ) public returns (bool success) {
    |        require (_to != address(0), "Cannot transfer to zero address");    
  > |        tokenStore.subBalance(msg.sender, _value);
    |        tokenStore.addBalance(_to, _value);
    |        emit Transfer(msg.sender, _to, _value);
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(419)

[33mWarning[0m for TODReceiver in contract 'BlacklistableToken':
    |        require (_to != address(0), "Cannot transfer to zero address");    
    |        tokenStore.subBalance(msg.sender, _value);
  > |        tokenStore.addBalance(_to, _value);
    |        emit Transfer(msg.sender, _to, _value);
    |        return true;
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(420)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'BlacklistableToken':
    |    ) public returns (bool success) {
    |        require (_spender != address(0), "Cannot approve to the zero address");       
  > |        tokenStore.setAllowance(msg.sender, _spender, _value);
    |        emit Approval(msg.sender, _spender, _value);
    |        return true;
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(345)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'BlacklistableToken':
    |    ) public returns (bool success) {
    |        require (_spender != address(0), "Cannot increaseApproval to the zero address");      
  > |        tokenStore.addAllowance(msg.sender, _spender, _addedValue);
    |        emit Approval(msg.sender, _spender, tokenStore.allowed(msg.sender, _spender));
    |        return true;
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(365)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'BlacklistableToken':
    |    ) public returns (bool success) {
    |        require (_spender != address(0), "Cannot decreaseApproval to the zero address");       
  > |        tokenStore.subAllowance(msg.sender, _spender, _subtractedValue);
    |        emit Approval(msg.sender, _spender, tokenStore.allowed(msg.sender, _spender));
    |        return true;
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(385)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'BlacklistableToken':
    |    ) public returns (bool success) {
    |        require(_to != address(0), "Cannot transfer to zero address"); 
  > |        tokenStore.subAllowance(_from, msg.sender, _value);          
    |        tokenStore.subBalance(_from, _value);
    |        tokenStore.addBalance(_to, _value);
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(402)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'BlacklistableToken':
    |        require(_to != address(0), "Cannot transfer to zero address"); 
    |        tokenStore.subAllowance(_from, msg.sender, _value);          
  > |        tokenStore.subBalance(_from, _value);
    |        tokenStore.addBalance(_to, _value);
    |        emit Transfer(_from, _to, _value);
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(403)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'BlacklistableToken':
    |        tokenStore.subAllowance(_from, msg.sender, _value);          
    |        tokenStore.subBalance(_from, _value);
  > |        tokenStore.addBalance(_to, _value);
    |        emit Transfer(_from, _to, _value);
    |        return true;
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(404)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'BlacklistableToken':
    |    ) public returns (bool success) {
    |        require (_to != address(0), "Cannot transfer to zero address");    
  > |        tokenStore.subBalance(msg.sender, _value);
    |        tokenStore.addBalance(_to, _value);
    |        emit Transfer(msg.sender, _to, _value);
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(419)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'BlacklistableToken':
    |        require (_to != address(0), "Cannot transfer to zero address");    
    |        tokenStore.subBalance(msg.sender, _value);
  > |        tokenStore.addBalance(_to, _value);
    |        emit Transfer(msg.sender, _to, _value);
    |        return true;
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(420)

[33mWarning[0m for UnrestrictedWrite in contract 'BlacklistableToken':
    |     */
    |    function transferOwnership(address _newOwner) public onlyOwner {
  > |        _pendingOwner = _newOwner;
    |    }
    |
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(69)

[33mWarning[0m for UnrestrictedWrite in contract 'BlacklistableToken':
    |    function claimOwnership() public onlyPendingOwner {
    |        emit OwnershipTransferred(_owner, _pendingOwner);
  > |        _owner = _pendingOwner;
    |        _pendingOwner = address(0); 
    |    }
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(77)

[33mWarning[0m for UnrestrictedWrite in contract 'BlacklistableToken':
    |        emit OwnershipTransferred(_owner, _pendingOwner);
    |        _owner = _pendingOwner;
  > |        _pendingOwner = address(0); 
    |    }
    |    
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(78)

[33mWarning[0m for UnrestrictedWrite in contract 'BlacklistableToken':
    |    function setTokenStore(address _newTokenStore) public onlyOwner returns (bool) {
    |        emit TokenStoreSet(address(tokenStore), _newTokenStore);
  > |        tokenStore = TokenStore(_newTokenStore);
    |        return true;
    |    }
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(298)

[33mWarning[0m for UnrestrictedWrite in contract 'BlacklistableToken':
    |     */
    |    function pause() public onlyPauser {
  > |        paused = true;
    |        emit Pause();
    |    }
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(470)

[33mWarning[0m for UnrestrictedWrite in contract 'BlacklistableToken':
    |     */
    |    function unpause() public onlyPauser {
  > |        paused = false;
    |        emit Unpause();
    |    }
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(478)

[33mWarning[0m for UnrestrictedWrite in contract 'BlacklistableToken':
    |        require(_newPauser != address(0), "Cannot update the newPauser to the zero address");
    |        emit PauserChanged(_pauser, _newPauser);
  > |        _pauser = _newPauser;
    |    }
    |
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(489)

[33mWarning[0m for UnrestrictedWrite in contract 'BlacklistableToken':
    |    function setBlacklistStore(address _newblacklistStore) public onlyOwner returns (bool) {
    |        emit BlacklistStoreSet(address(blacklistStore), _newblacklistStore);
  > |        blacklistStore = BlacklistStore(_newblacklistStore);
    |        return true;
    |    }
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(602)

[33mWarning[0m for UnrestrictedWrite in contract 'BlacklistableToken':
    |        require(_newBlacklister != address(0), "Cannot update the blacklister to the zero address");
    |        emit BlacklisterChanged(_blacklister, _newBlacklister);
  > |        _blacklister = _newBlacklister;
    |    }
    |
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(613)

[33mWarning[0m for LockedEther in contract 'BurnableToken':
    |
    |
  > |contract BurnableToken is BlacklistableToken {
    |
    |    event Burn(address indexed burner, uint256 value);
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(678)

[31mViolation[0m for MissingInputValidation in contract 'BurnableToken':
    |     * @param _newOwner The address to transfer ownership to.
    |     */
  > |    function transferOwnership(address _newOwner) public onlyOwner {
    |        _pendingOwner = _newOwner;
    |    }
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(68)

[31mViolation[0m for MissingInputValidation in contract 'BurnableToken':
    |     * @param _newTokenStore The address to of the TokenStore to set.
    |     */
  > |    function setTokenStore(address _newTokenStore) public onlyOwner returns (bool) {
    |        emit TokenStoreSet(address(tokenStore), _newTokenStore);
    |        tokenStore = TokenStore(_newTokenStore);
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(296)

[31mViolation[0m for MissingInputValidation in contract 'BurnableToken':
    |    }
    |
  > |    function balanceOf(address _holder) public view returns (uint256) {
    |        return tokenStore.balances(_holder);
    |    }
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(311)

[31mViolation[0m for MissingInputValidation in contract 'BurnableToken':
    |    }
    |
  > |    function allowance(address _holder, address _spender) public view returns (uint256) {
    |        return tokenStore.allowed(_holder, _spender);
    |    }
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(315)

[31mViolation[0m for MissingInputValidation in contract 'BurnableToken':
    |     * @param _newblacklistStore The blacklistStore address to set
    |     */
  > |    function setBlacklistStore(address _newblacklistStore) public onlyOwner returns (bool) {
    |        emit BlacklistStoreSet(address(blacklistStore), _newblacklistStore);
    |        blacklistStore = BlacklistStore(_newblacklistStore);
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(600)

[31mViolation[0m for MissingInputValidation in contract 'BurnableToken':
    |     * @return the address status 
    |     */
  > |    function queryBlacklist(address _account) public view returns (uint256) {
    |        return blacklistStore.blacklisted(_account);
    |    }
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(621)

[31mViolation[0m for MissingInputValidation in contract 'BurnableToken':
    |     * @param _status The address status to change
    |     */
  > |    function changeBlacklist(address _account, uint256 _status) public onlyBlacklister {
    |        blacklistStore.setBlacklist(_account, _status);
    |        emit Blacklist(_account, _status);
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(630)

[31mViolation[0m for MissingInputValidation in contract 'BurnableToken':
    |    }
    |
  > |    function approve(
    |        address _spender,
    |        uint256 _value
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(635)

[31mViolation[0m for MissingInputValidation in contract 'BurnableToken':
    |    }
    |    
  > |    function increaseApproval(
    |        address _spender,
    |        uint256 _addedValue
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(642)

[31mViolation[0m for MissingInputValidation in contract 'BurnableToken':
    |    } 
    |
  > |    function decreaseApproval(
    |        address _spender,
    |        uint256 _subtractedValue 
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(649)

[31mViolation[0m for MissingInputValidation in contract 'BurnableToken':
    |    }
    |
  > |    function transferFrom(
    |        address _from, 
    |        address _to, 
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(656)

[31mViolation[0m for MissingInputValidation in contract 'BurnableToken':
    |    } 
    |
  > |    function transfer(
    |        address _to, 
    |        uint256 _value
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(664)

[31mViolation[0m for MissingInputValidation in contract 'BurnableToken':
    |     * @param _value uint256 the amount of tokens to be burned
    |    */
  > |    function burn(
    |        uint256 _value
    |    ) public whenNotPaused notBlacklisted(msg.sender) returns (bool success) {   
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(687)

[33mWarning[0m for MissingInputValidation in contract 'BurnableToken':
    |    }
    |    
  > |    function changeTokenName(string memory _name, string memory _symbol) public onlyOwner {
    |        tokenStore.changeTokenName(_name, _symbol);
    |        emit ChangeTokenName(_name, _symbol);
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(302)

[33mWarning[0m for RepeatedCall in contract 'BurnableToken':
    |        require(_to != address(0), "Cannot transfer to zero address"); 
    |        tokenStore.subAllowance(_from, msg.sender, _value);          
  > |        tokenStore.subBalance(_from, _value);
    |        tokenStore.addBalance(_to, _value);
    |        emit Transfer(_from, _to, _value);
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(403)

[33mWarning[0m for RepeatedCall in contract 'BurnableToken':
    |        tokenStore.subAllowance(_from, msg.sender, _value);          
    |        tokenStore.subBalance(_from, _value);
  > |        tokenStore.addBalance(_to, _value);
    |        emit Transfer(_from, _to, _value);
    |        return true;
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(404)

[33mWarning[0m for TODAmount in contract 'BurnableToken':
    |    ) public returns (bool success) {
    |        require (_spender != address(0), "Cannot approve to the zero address");       
  > |        tokenStore.setAllowance(msg.sender, _spender, _value);
    |        emit Approval(msg.sender, _spender, _value);
    |        return true;
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(345)

[33mWarning[0m for TODAmount in contract 'BurnableToken':
    |    ) public returns (bool success) {
    |        require (_spender != address(0), "Cannot increaseApproval to the zero address");      
  > |        tokenStore.addAllowance(msg.sender, _spender, _addedValue);
    |        emit Approval(msg.sender, _spender, tokenStore.allowed(msg.sender, _spender));
    |        return true;
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(365)

[33mWarning[0m for TODAmount in contract 'BurnableToken':
    |    ) public returns (bool success) {
    |        require (_spender != address(0), "Cannot decreaseApproval to the zero address");       
  > |        tokenStore.subAllowance(msg.sender, _spender, _subtractedValue);
    |        emit Approval(msg.sender, _spender, tokenStore.allowed(msg.sender, _spender));
    |        return true;
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(385)

[33mWarning[0m for TODAmount in contract 'BurnableToken':
    |    ) public returns (bool success) {
    |        require(_to != address(0), "Cannot transfer to zero address"); 
  > |        tokenStore.subAllowance(_from, msg.sender, _value);          
    |        tokenStore.subBalance(_from, _value);
    |        tokenStore.addBalance(_to, _value);
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(402)

[33mWarning[0m for TODAmount in contract 'BurnableToken':
    |        require(_to != address(0), "Cannot transfer to zero address"); 
    |        tokenStore.subAllowance(_from, msg.sender, _value);          
  > |        tokenStore.subBalance(_from, _value);
    |        tokenStore.addBalance(_to, _value);
    |        emit Transfer(_from, _to, _value);
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(403)

[33mWarning[0m for TODAmount in contract 'BurnableToken':
    |        tokenStore.subAllowance(_from, msg.sender, _value);          
    |        tokenStore.subBalance(_from, _value);
  > |        tokenStore.addBalance(_to, _value);
    |        emit Transfer(_from, _to, _value);
    |        return true;
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(404)

[33mWarning[0m for TODAmount in contract 'BurnableToken':
    |    ) public returns (bool success) {
    |        require (_to != address(0), "Cannot transfer to zero address");    
  > |        tokenStore.subBalance(msg.sender, _value);
    |        tokenStore.addBalance(_to, _value);
    |        emit Transfer(msg.sender, _to, _value);
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(419)

[33mWarning[0m for TODAmount in contract 'BurnableToken':
    |        require (_to != address(0), "Cannot transfer to zero address");    
    |        tokenStore.subBalance(msg.sender, _value);
  > |        tokenStore.addBalance(_to, _value);
    |        emit Transfer(msg.sender, _to, _value);
    |        return true;
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(420)

[33mWarning[0m for TODReceiver in contract 'BurnableToken':
    |    ) public returns (bool success) {
    |        require (_spender != address(0), "Cannot approve to the zero address");       
  > |        tokenStore.setAllowance(msg.sender, _spender, _value);
    |        emit Approval(msg.sender, _spender, _value);
    |        return true;
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(345)

[33mWarning[0m for TODReceiver in contract 'BurnableToken':
    |    ) public returns (bool success) {
    |        require (_spender != address(0), "Cannot increaseApproval to the zero address");      
  > |        tokenStore.addAllowance(msg.sender, _spender, _addedValue);
    |        emit Approval(msg.sender, _spender, tokenStore.allowed(msg.sender, _spender));
    |        return true;
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(365)

[33mWarning[0m for TODReceiver in contract 'BurnableToken':
    |    ) public returns (bool success) {
    |        require (_spender != address(0), "Cannot decreaseApproval to the zero address");       
  > |        tokenStore.subAllowance(msg.sender, _spender, _subtractedValue);
    |        emit Approval(msg.sender, _spender, tokenStore.allowed(msg.sender, _spender));
    |        return true;
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(385)

[33mWarning[0m for TODReceiver in contract 'BurnableToken':
    |    ) public returns (bool success) {
    |        require(_to != address(0), "Cannot transfer to zero address"); 
  > |        tokenStore.subAllowance(_from, msg.sender, _value);          
    |        tokenStore.subBalance(_from, _value);
    |        tokenStore.addBalance(_to, _value);
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(402)

[33mWarning[0m for TODReceiver in contract 'BurnableToken':
    |        require(_to != address(0), "Cannot transfer to zero address"); 
    |        tokenStore.subAllowance(_from, msg.sender, _value);          
  > |        tokenStore.subBalance(_from, _value);
    |        tokenStore.addBalance(_to, _value);
    |        emit Transfer(_from, _to, _value);
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(403)

[33mWarning[0m for TODReceiver in contract 'BurnableToken':
    |        tokenStore.subAllowance(_from, msg.sender, _value);          
    |        tokenStore.subBalance(_from, _value);
  > |        tokenStore.addBalance(_to, _value);
    |        emit Transfer(_from, _to, _value);
    |        return true;
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(404)

[33mWarning[0m for TODReceiver in contract 'BurnableToken':
    |    ) public returns (bool success) {
    |        require (_to != address(0), "Cannot transfer to zero address");    
  > |        tokenStore.subBalance(msg.sender, _value);
    |        tokenStore.addBalance(_to, _value);
    |        emit Transfer(msg.sender, _to, _value);
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(419)

[33mWarning[0m for TODReceiver in contract 'BurnableToken':
    |        require (_to != address(0), "Cannot transfer to zero address");    
    |        tokenStore.subBalance(msg.sender, _value);
  > |        tokenStore.addBalance(_to, _value);
    |        emit Transfer(msg.sender, _to, _value);
    |        return true;
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(420)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'BurnableToken':
    |    ) public returns (bool success) {
    |        require (_spender != address(0), "Cannot approve to the zero address");       
  > |        tokenStore.setAllowance(msg.sender, _spender, _value);
    |        emit Approval(msg.sender, _spender, _value);
    |        return true;
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(345)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'BurnableToken':
    |    ) public returns (bool success) {
    |        require (_spender != address(0), "Cannot increaseApproval to the zero address");      
  > |        tokenStore.addAllowance(msg.sender, _spender, _addedValue);
    |        emit Approval(msg.sender, _spender, tokenStore.allowed(msg.sender, _spender));
    |        return true;
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(365)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'BurnableToken':
    |    ) public returns (bool success) {
    |        require (_spender != address(0), "Cannot decreaseApproval to the zero address");       
  > |        tokenStore.subAllowance(msg.sender, _spender, _subtractedValue);
    |        emit Approval(msg.sender, _spender, tokenStore.allowed(msg.sender, _spender));
    |        return true;
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(385)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'BurnableToken':
    |    ) public returns (bool success) {
    |        require(_to != address(0), "Cannot transfer to zero address"); 
  > |        tokenStore.subAllowance(_from, msg.sender, _value);          
    |        tokenStore.subBalance(_from, _value);
    |        tokenStore.addBalance(_to, _value);
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(402)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'BurnableToken':
    |        require(_to != address(0), "Cannot transfer to zero address"); 
    |        tokenStore.subAllowance(_from, msg.sender, _value);          
  > |        tokenStore.subBalance(_from, _value);
    |        tokenStore.addBalance(_to, _value);
    |        emit Transfer(_from, _to, _value);
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(403)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'BurnableToken':
    |        tokenStore.subAllowance(_from, msg.sender, _value);          
    |        tokenStore.subBalance(_from, _value);
  > |        tokenStore.addBalance(_to, _value);
    |        emit Transfer(_from, _to, _value);
    |        return true;
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(404)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'BurnableToken':
    |    ) public returns (bool success) {
    |        require (_to != address(0), "Cannot transfer to zero address");    
  > |        tokenStore.subBalance(msg.sender, _value);
    |        tokenStore.addBalance(_to, _value);
    |        emit Transfer(msg.sender, _to, _value);
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(419)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'BurnableToken':
    |        require (_to != address(0), "Cannot transfer to zero address");    
    |        tokenStore.subBalance(msg.sender, _value);
  > |        tokenStore.addBalance(_to, _value);
    |        emit Transfer(msg.sender, _to, _value);
    |        return true;
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(420)

[33mWarning[0m for UnrestrictedWrite in contract 'BurnableToken':
    |     */
    |    function transferOwnership(address _newOwner) public onlyOwner {
  > |        _pendingOwner = _newOwner;
    |    }
    |
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(69)

[33mWarning[0m for UnrestrictedWrite in contract 'BurnableToken':
    |    function claimOwnership() public onlyPendingOwner {
    |        emit OwnershipTransferred(_owner, _pendingOwner);
  > |        _owner = _pendingOwner;
    |        _pendingOwner = address(0); 
    |    }
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(77)

[33mWarning[0m for UnrestrictedWrite in contract 'BurnableToken':
    |        emit OwnershipTransferred(_owner, _pendingOwner);
    |        _owner = _pendingOwner;
  > |        _pendingOwner = address(0); 
    |    }
    |    
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(78)

[33mWarning[0m for UnrestrictedWrite in contract 'BurnableToken':
    |    function setTokenStore(address _newTokenStore) public onlyOwner returns (bool) {
    |        emit TokenStoreSet(address(tokenStore), _newTokenStore);
  > |        tokenStore = TokenStore(_newTokenStore);
    |        return true;
    |    }
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(298)

[33mWarning[0m for UnrestrictedWrite in contract 'BurnableToken':
    |     */
    |    function pause() public onlyPauser {
  > |        paused = true;
    |        emit Pause();
    |    }
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(470)

[33mWarning[0m for UnrestrictedWrite in contract 'BurnableToken':
    |     */
    |    function unpause() public onlyPauser {
  > |        paused = false;
    |        emit Unpause();
    |    }
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(478)

[33mWarning[0m for UnrestrictedWrite in contract 'BurnableToken':
    |        require(_newPauser != address(0), "Cannot update the newPauser to the zero address");
    |        emit PauserChanged(_pauser, _newPauser);
  > |        _pauser = _newPauser;
    |    }
    |
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(489)

[33mWarning[0m for UnrestrictedWrite in contract 'BurnableToken':
    |    function setBlacklistStore(address _newblacklistStore) public onlyOwner returns (bool) {
    |        emit BlacklistStoreSet(address(blacklistStore), _newblacklistStore);
  > |        blacklistStore = BlacklistStore(_newblacklistStore);
    |        return true;
    |    }
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(602)

[33mWarning[0m for UnrestrictedWrite in contract 'BurnableToken':
    |        require(_newBlacklister != address(0), "Cannot update the blacklister to the zero address");
    |        emit BlacklisterChanged(_blacklister, _newBlacklister);
  > |        _blacklister = _newBlacklister;
    |    }
    |
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(613)

[31mViolation[0m for LockedEther in contract 'ERC20StandardToken':
    |
    |
  > |contract ERC20StandardToken is ERC20Interface, Ownable {
    |
    |
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(284)

[31mViolation[0m for MissingInputValidation in contract 'ERC20StandardToken':
    |     * @param _newOwner The address to transfer ownership to.
    |     */
  > |    function transferOwnership(address _newOwner) public onlyOwner {
    |        _pendingOwner = _newOwner;
    |    }
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(68)

[31mViolation[0m for MissingInputValidation in contract 'ERC20StandardToken':
    |     * @param _newTokenStore The address to of the TokenStore to set.
    |     */
  > |    function setTokenStore(address _newTokenStore) public onlyOwner returns (bool) {
    |        emit TokenStoreSet(address(tokenStore), _newTokenStore);
    |        tokenStore = TokenStore(_newTokenStore);
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(296)

[31mViolation[0m for MissingInputValidation in contract 'ERC20StandardToken':
    |    }
    |
  > |    function balanceOf(address _holder) public view returns (uint256) {
    |        return tokenStore.balances(_holder);
    |    }
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(311)

[31mViolation[0m for MissingInputValidation in contract 'ERC20StandardToken':
    |    }
    |
  > |    function allowance(address _holder, address _spender) public view returns (uint256) {
    |        return tokenStore.allowed(_holder, _spender);
    |    }
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(315)

[31mViolation[0m for MissingInputValidation in contract 'ERC20StandardToken':
    |     * @param _value The amount of tokens to be spent.
    |     */
  > |    function approve(
    |        address _spender,
    |        uint256 _value
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(340)

[31mViolation[0m for MissingInputValidation in contract 'ERC20StandardToken':
    |     * @param _addedValue The amount of tokens to increase the allowance by.
    |     */
  > |    function increaseApproval(
    |        address _spender,
    |        uint256 _addedValue
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(360)

[31mViolation[0m for MissingInputValidation in contract 'ERC20StandardToken':
    |     * @param _subtractedValue The amount of tokens to decrease the allowance by.
    |     */
  > |    function decreaseApproval(
    |        address _spender,
    |        uint256 _subtractedValue 
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(380)

[31mViolation[0m for MissingInputValidation in contract 'ERC20StandardToken':
    |     * @param _value uint256 the amount of tokens to be transferred
    |     */
  > |    function transferFrom(
    |        address _from, 
    |        address _to, 
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(396)

[31mViolation[0m for MissingInputValidation in contract 'ERC20StandardToken':
    |     * @param _value The amount to be transferred.
    |     */
  > |    function transfer(
    |        address _to, 
    |        uint256 _value
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(414)

[33mWarning[0m for MissingInputValidation in contract 'ERC20StandardToken':
    |    }
    |    
  > |    function changeTokenName(string memory _name, string memory _symbol) public onlyOwner {
    |        tokenStore.changeTokenName(_name, _symbol);
    |        emit ChangeTokenName(_name, _symbol);
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(302)

[33mWarning[0m for UnrestrictedWrite in contract 'ERC20StandardToken':
    |     */
    |    function transferOwnership(address _newOwner) public onlyOwner {
  > |        _pendingOwner = _newOwner;
    |    }
    |
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(69)

[33mWarning[0m for UnrestrictedWrite in contract 'ERC20StandardToken':
    |    function claimOwnership() public onlyPendingOwner {
    |        emit OwnershipTransferred(_owner, _pendingOwner);
  > |        _owner = _pendingOwner;
    |        _pendingOwner = address(0); 
    |    }
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(77)

[33mWarning[0m for UnrestrictedWrite in contract 'ERC20StandardToken':
    |        emit OwnershipTransferred(_owner, _pendingOwner);
    |        _owner = _pendingOwner;
  > |        _pendingOwner = address(0); 
    |    }
    |    
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(78)

[33mWarning[0m for UnrestrictedWrite in contract 'ERC20StandardToken':
    |    function setTokenStore(address _newTokenStore) public onlyOwner returns (bool) {
    |        emit TokenStoreSet(address(tokenStore), _newTokenStore);
  > |        tokenStore = TokenStore(_newTokenStore);
    |        return true;
    |    }
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(298)

[33mWarning[0m for LockedEther in contract 'MintableToken':
    |
    |
  > |contract MintableToken is BlacklistableToken {
    |
    |    event MinterChanged(address indexed previousMinter, address indexed newMinter);
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(705)

[31mViolation[0m for MissingInputValidation in contract 'MintableToken':
    |     * @param _newOwner The address to transfer ownership to.
    |     */
  > |    function transferOwnership(address _newOwner) public onlyOwner {
    |        _pendingOwner = _newOwner;
    |    }
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(68)

[31mViolation[0m for MissingInputValidation in contract 'MintableToken':
    |     * @param _newTokenStore The address to of the TokenStore to set.
    |     */
  > |    function setTokenStore(address _newTokenStore) public onlyOwner returns (bool) {
    |        emit TokenStoreSet(address(tokenStore), _newTokenStore);
    |        tokenStore = TokenStore(_newTokenStore);
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(296)

[31mViolation[0m for MissingInputValidation in contract 'MintableToken':
    |    }
    |
  > |    function balanceOf(address _holder) public view returns (uint256) {
    |        return tokenStore.balances(_holder);
    |    }
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(311)

[31mViolation[0m for MissingInputValidation in contract 'MintableToken':
    |    }
    |
  > |    function allowance(address _holder, address _spender) public view returns (uint256) {
    |        return tokenStore.allowed(_holder, _spender);
    |    }
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(315)

[31mViolation[0m for MissingInputValidation in contract 'MintableToken':
    |     * @param _newblacklistStore The blacklistStore address to set
    |     */
  > |    function setBlacklistStore(address _newblacklistStore) public onlyOwner returns (bool) {
    |        emit BlacklistStoreSet(address(blacklistStore), _newblacklistStore);
    |        blacklistStore = BlacklistStore(_newblacklistStore);
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(600)

[31mViolation[0m for MissingInputValidation in contract 'MintableToken':
    |     * @return the address status 
    |     */
  > |    function queryBlacklist(address _account) public view returns (uint256) {
    |        return blacklistStore.blacklisted(_account);
    |    }
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(621)

[31mViolation[0m for MissingInputValidation in contract 'MintableToken':
    |     * @param _status The address status to change
    |     */
  > |    function changeBlacklist(address _account, uint256 _status) public onlyBlacklister {
    |        blacklistStore.setBlacklist(_account, _status);
    |        emit Blacklist(_account, _status);
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(630)

[31mViolation[0m for MissingInputValidation in contract 'MintableToken':
    |    }
    |
  > |    function approve(
    |        address _spender,
    |        uint256 _value
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(635)

[31mViolation[0m for MissingInputValidation in contract 'MintableToken':
    |    }
    |    
  > |    function increaseApproval(
    |        address _spender,
    |        uint256 _addedValue
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(642)

[31mViolation[0m for MissingInputValidation in contract 'MintableToken':
    |    } 
    |
  > |    function decreaseApproval(
    |        address _spender,
    |        uint256 _subtractedValue 
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(649)

[31mViolation[0m for MissingInputValidation in contract 'MintableToken':
    |    }
    |
  > |    function transferFrom(
    |        address _from, 
    |        address _to, 
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(656)

[31mViolation[0m for MissingInputValidation in contract 'MintableToken':
    |    } 
    |
  > |    function transfer(
    |        address _to, 
    |        uint256 _value
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(664)

[31mViolation[0m for MissingInputValidation in contract 'MintableToken':
    |     * @return A boolean that indicates if the operation was successful.
    |     */
  > |    function mint(
    |        address _to, 
    |        uint256 _value
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(741)

[33mWarning[0m for MissingInputValidation in contract 'MintableToken':
    |    }
    |    
  > |    function changeTokenName(string memory _name, string memory _symbol) public onlyOwner {
    |        tokenStore.changeTokenName(_name, _symbol);
    |        emit ChangeTokenName(_name, _symbol);
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(302)

[33mWarning[0m for TODAmount in contract 'MintableToken':
    |    ) public returns (bool success) {
    |        require (_spender != address(0), "Cannot approve to the zero address");       
  > |        tokenStore.setAllowance(msg.sender, _spender, _value);
    |        emit Approval(msg.sender, _spender, _value);
    |        return true;
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(345)

[33mWarning[0m for TODAmount in contract 'MintableToken':
    |    ) public returns (bool success) {
    |        require (_spender != address(0), "Cannot increaseApproval to the zero address");      
  > |        tokenStore.addAllowance(msg.sender, _spender, _addedValue);
    |        emit Approval(msg.sender, _spender, tokenStore.allowed(msg.sender, _spender));
    |        return true;
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(365)

[33mWarning[0m for TODAmount in contract 'MintableToken':
    |    ) public returns (bool success) {
    |        require (_spender != address(0), "Cannot decreaseApproval to the zero address");       
  > |        tokenStore.subAllowance(msg.sender, _spender, _subtractedValue);
    |        emit Approval(msg.sender, _spender, tokenStore.allowed(msg.sender, _spender));
    |        return true;
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(385)

[33mWarning[0m for TODAmount in contract 'MintableToken':
    |    ) public returns (bool success) {
    |        require(_to != address(0), "Cannot transfer to zero address"); 
  > |        tokenStore.subAllowance(_from, msg.sender, _value);          
    |        tokenStore.subBalance(_from, _value);
    |        tokenStore.addBalance(_to, _value);
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(402)

[33mWarning[0m for TODAmount in contract 'MintableToken':
    |        require(_to != address(0), "Cannot transfer to zero address"); 
    |        tokenStore.subAllowance(_from, msg.sender, _value);          
  > |        tokenStore.subBalance(_from, _value);
    |        tokenStore.addBalance(_to, _value);
    |        emit Transfer(_from, _to, _value);
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(403)

[33mWarning[0m for TODAmount in contract 'MintableToken':
    |        tokenStore.subAllowance(_from, msg.sender, _value);          
    |        tokenStore.subBalance(_from, _value);
  > |        tokenStore.addBalance(_to, _value);
    |        emit Transfer(_from, _to, _value);
    |        return true;
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(404)

[33mWarning[0m for TODAmount in contract 'MintableToken':
    |    ) public returns (bool success) {
    |        require (_to != address(0), "Cannot transfer to zero address");    
  > |        tokenStore.subBalance(msg.sender, _value);
    |        tokenStore.addBalance(_to, _value);
    |        emit Transfer(msg.sender, _to, _value);
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(419)

[33mWarning[0m for TODAmount in contract 'MintableToken':
    |        require (_to != address(0), "Cannot transfer to zero address");    
    |        tokenStore.subBalance(msg.sender, _value);
  > |        tokenStore.addBalance(_to, _value);
    |        emit Transfer(msg.sender, _to, _value);
    |        return true;
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(420)

[33mWarning[0m for TODReceiver in contract 'MintableToken':
    |    ) public returns (bool success) {
    |        require (_spender != address(0), "Cannot approve to the zero address");       
  > |        tokenStore.setAllowance(msg.sender, _spender, _value);
    |        emit Approval(msg.sender, _spender, _value);
    |        return true;
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(345)

[33mWarning[0m for TODReceiver in contract 'MintableToken':
    |    ) public returns (bool success) {
    |        require (_spender != address(0), "Cannot increaseApproval to the zero address");      
  > |        tokenStore.addAllowance(msg.sender, _spender, _addedValue);
    |        emit Approval(msg.sender, _spender, tokenStore.allowed(msg.sender, _spender));
    |        return true;
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(365)

[33mWarning[0m for TODReceiver in contract 'MintableToken':
    |    ) public returns (bool success) {
    |        require (_spender != address(0), "Cannot decreaseApproval to the zero address");       
  > |        tokenStore.subAllowance(msg.sender, _spender, _subtractedValue);
    |        emit Approval(msg.sender, _spender, tokenStore.allowed(msg.sender, _spender));
    |        return true;
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(385)

[33mWarning[0m for TODReceiver in contract 'MintableToken':
    |    ) public returns (bool success) {
    |        require(_to != address(0), "Cannot transfer to zero address"); 
  > |        tokenStore.subAllowance(_from, msg.sender, _value);          
    |        tokenStore.subBalance(_from, _value);
    |        tokenStore.addBalance(_to, _value);
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(402)

[33mWarning[0m for TODReceiver in contract 'MintableToken':
    |        require(_to != address(0), "Cannot transfer to zero address"); 
    |        tokenStore.subAllowance(_from, msg.sender, _value);          
  > |        tokenStore.subBalance(_from, _value);
    |        tokenStore.addBalance(_to, _value);
    |        emit Transfer(_from, _to, _value);
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(403)

[33mWarning[0m for TODReceiver in contract 'MintableToken':
    |        tokenStore.subAllowance(_from, msg.sender, _value);          
    |        tokenStore.subBalance(_from, _value);
  > |        tokenStore.addBalance(_to, _value);
    |        emit Transfer(_from, _to, _value);
    |        return true;
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(404)

[33mWarning[0m for TODReceiver in contract 'MintableToken':
    |    ) public returns (bool success) {
    |        require (_to != address(0), "Cannot transfer to zero address");    
  > |        tokenStore.subBalance(msg.sender, _value);
    |        tokenStore.addBalance(_to, _value);
    |        emit Transfer(msg.sender, _to, _value);
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(419)

[33mWarning[0m for TODReceiver in contract 'MintableToken':
    |        require (_to != address(0), "Cannot transfer to zero address");    
    |        tokenStore.subBalance(msg.sender, _value);
  > |        tokenStore.addBalance(_to, _value);
    |        emit Transfer(msg.sender, _to, _value);
    |        return true;
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(420)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'MintableToken':
    |    ) public returns (bool success) {
    |        require (_spender != address(0), "Cannot approve to the zero address");       
  > |        tokenStore.setAllowance(msg.sender, _spender, _value);
    |        emit Approval(msg.sender, _spender, _value);
    |        return true;
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(345)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'MintableToken':
    |    ) public returns (bool success) {
    |        require (_spender != address(0), "Cannot increaseApproval to the zero address");      
  > |        tokenStore.addAllowance(msg.sender, _spender, _addedValue);
    |        emit Approval(msg.sender, _spender, tokenStore.allowed(msg.sender, _spender));
    |        return true;
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(365)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'MintableToken':
    |    ) public returns (bool success) {
    |        require (_spender != address(0), "Cannot decreaseApproval to the zero address");       
  > |        tokenStore.subAllowance(msg.sender, _spender, _subtractedValue);
    |        emit Approval(msg.sender, _spender, tokenStore.allowed(msg.sender, _spender));
    |        return true;
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(385)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'MintableToken':
    |    ) public returns (bool success) {
    |        require(_to != address(0), "Cannot transfer to zero address"); 
  > |        tokenStore.subAllowance(_from, msg.sender, _value);          
    |        tokenStore.subBalance(_from, _value);
    |        tokenStore.addBalance(_to, _value);
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(402)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'MintableToken':
    |        require(_to != address(0), "Cannot transfer to zero address"); 
    |        tokenStore.subAllowance(_from, msg.sender, _value);          
  > |        tokenStore.subBalance(_from, _value);
    |        tokenStore.addBalance(_to, _value);
    |        emit Transfer(_from, _to, _value);
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(403)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'MintableToken':
    |        tokenStore.subAllowance(_from, msg.sender, _value);          
    |        tokenStore.subBalance(_from, _value);
  > |        tokenStore.addBalance(_to, _value);
    |        emit Transfer(_from, _to, _value);
    |        return true;
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(404)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'MintableToken':
    |    ) public returns (bool success) {
    |        require (_to != address(0), "Cannot transfer to zero address");    
  > |        tokenStore.subBalance(msg.sender, _value);
    |        tokenStore.addBalance(_to, _value);
    |        emit Transfer(msg.sender, _to, _value);
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(419)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'MintableToken':
    |        require (_to != address(0), "Cannot transfer to zero address");    
    |        tokenStore.subBalance(msg.sender, _value);
  > |        tokenStore.addBalance(_to, _value);
    |        emit Transfer(msg.sender, _to, _value);
    |        return true;
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(420)

[33mWarning[0m for UnrestrictedWrite in contract 'MintableToken':
    |     */
    |    function transferOwnership(address _newOwner) public onlyOwner {
  > |        _pendingOwner = _newOwner;
    |    }
    |
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(69)

[33mWarning[0m for UnrestrictedWrite in contract 'MintableToken':
    |    function claimOwnership() public onlyPendingOwner {
    |        emit OwnershipTransferred(_owner, _pendingOwner);
  > |        _owner = _pendingOwner;
    |        _pendingOwner = address(0); 
    |    }
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(77)

[33mWarning[0m for UnrestrictedWrite in contract 'MintableToken':
    |        emit OwnershipTransferred(_owner, _pendingOwner);
    |        _owner = _pendingOwner;
  > |        _pendingOwner = address(0); 
    |    }
    |    
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(78)

[33mWarning[0m for UnrestrictedWrite in contract 'MintableToken':
    |    function setTokenStore(address _newTokenStore) public onlyOwner returns (bool) {
    |        emit TokenStoreSet(address(tokenStore), _newTokenStore);
  > |        tokenStore = TokenStore(_newTokenStore);
    |        return true;
    |    }
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(298)

[33mWarning[0m for UnrestrictedWrite in contract 'MintableToken':
    |     */
    |    function pause() public onlyPauser {
  > |        paused = true;
    |        emit Pause();
    |    }
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(470)

[33mWarning[0m for UnrestrictedWrite in contract 'MintableToken':
    |     */
    |    function unpause() public onlyPauser {
  > |        paused = false;
    |        emit Unpause();
    |    }
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(478)

[33mWarning[0m for UnrestrictedWrite in contract 'MintableToken':
    |        require(_newPauser != address(0), "Cannot update the newPauser to the zero address");
    |        emit PauserChanged(_pauser, _newPauser);
  > |        _pauser = _newPauser;
    |    }
    |
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(489)

[33mWarning[0m for UnrestrictedWrite in contract 'MintableToken':
    |    function setBlacklistStore(address _newblacklistStore) public onlyOwner returns (bool) {
    |        emit BlacklistStoreSet(address(blacklistStore), _newblacklistStore);
  > |        blacklistStore = BlacklistStore(_newblacklistStore);
    |        return true;
    |    }
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(602)

[33mWarning[0m for UnrestrictedWrite in contract 'MintableToken':
    |        require(_newBlacklister != address(0), "Cannot update the blacklister to the zero address");
    |        emit BlacklisterChanged(_blacklister, _newBlacklister);
  > |        _blacklister = _newBlacklister;
    |    }
    |
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(613)

[33mWarning[0m for UnrestrictedWrite in contract 'MintableToken':
    |        require(_newMinter != address(0), "Cannot update the newPauser to the zero address");
    |        emit MinterChanged(_minter, _newMinter);
  > |        _minter = _newMinter;
    |    }
    |
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(732)

[31mViolation[0m for MissingInputValidation in contract 'Operable':
    |     * @param _newOwner The address to transfer ownership to.
    |     */
  > |    function transferOwnership(address _newOwner) public onlyOwner {
    |        _pendingOwner = _newOwner;
    |    }
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(68)

[33mWarning[0m for UnrestrictedWrite in contract 'Operable':
    |     */
    |    function transferOwnership(address _newOwner) public onlyOwner {
  > |        _pendingOwner = _newOwner;
    |    }
    |
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(69)

[33mWarning[0m for UnrestrictedWrite in contract 'Operable':
    |    function claimOwnership() public onlyPendingOwner {
    |        emit OwnershipTransferred(_owner, _pendingOwner);
  > |        _owner = _pendingOwner;
    |        _pendingOwner = address(0); 
    |    }
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(77)

[33mWarning[0m for UnrestrictedWrite in contract 'Operable':
    |        emit OwnershipTransferred(_owner, _pendingOwner);
    |        _owner = _pendingOwner;
  > |        _pendingOwner = address(0); 
    |    }
    |    
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(78)

[33mWarning[0m for UnrestrictedWrite in contract 'Operable':
    |        require(_newOperator != address(0), "Cannot change the newOperator to the zero address");
    |        emit OperatorChanged(_operator, _newOperator);
  > |        _operator = _newOperator;
    |    }
    |
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(117)

[31mViolation[0m for MissingInputValidation in contract 'Ownable':
    |     * @param _newOwner The address to transfer ownership to.
    |     */
  > |    function transferOwnership(address _newOwner) public onlyOwner {
    |        _pendingOwner = _newOwner;
    |    }
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(68)

[33mWarning[0m for UnrestrictedWrite in contract 'Ownable':
    |     */
    |    function transferOwnership(address _newOwner) public onlyOwner {
  > |        _pendingOwner = _newOwner;
    |    }
    |
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(69)

[33mWarning[0m for UnrestrictedWrite in contract 'Ownable':
    |    function claimOwnership() public onlyPendingOwner {
    |        emit OwnershipTransferred(_owner, _pendingOwner);
  > |        _owner = _pendingOwner;
    |        _pendingOwner = address(0); 
    |    }
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(77)

[33mWarning[0m for UnrestrictedWrite in contract 'Ownable':
    |        emit OwnershipTransferred(_owner, _pendingOwner);
    |        _owner = _pendingOwner;
  > |        _pendingOwner = address(0); 
    |    }
    |    
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(78)

[33mWarning[0m for LockedEther in contract 'PausableToken':
    |
    |
  > |contract PausableToken is ERC20StandardToken {
    |
    |    address private _pauser;
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(433)

[31mViolation[0m for MissingInputValidation in contract 'PausableToken':
    |     * @param _newOwner The address to transfer ownership to.
    |     */
  > |    function transferOwnership(address _newOwner) public onlyOwner {
    |        _pendingOwner = _newOwner;
    |    }
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(68)

[31mViolation[0m for MissingInputValidation in contract 'PausableToken':
    |     * @param _newTokenStore The address to of the TokenStore to set.
    |     */
  > |    function setTokenStore(address _newTokenStore) public onlyOwner returns (bool) {
    |        emit TokenStoreSet(address(tokenStore), _newTokenStore);
    |        tokenStore = TokenStore(_newTokenStore);
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(296)

[31mViolation[0m for MissingInputValidation in contract 'PausableToken':
    |    }
    |
  > |    function balanceOf(address _holder) public view returns (uint256) {
    |        return tokenStore.balances(_holder);
    |    }
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(311)

[31mViolation[0m for MissingInputValidation in contract 'PausableToken':
    |    }
    |
  > |    function allowance(address _holder, address _spender) public view returns (uint256) {
    |        return tokenStore.allowed(_holder, _spender);
    |    }
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(315)

[31mViolation[0m for MissingInputValidation in contract 'PausableToken':
    |    }
    |
  > |    function approve(
    |        address _spender,
    |        uint256 _value
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(492)

[31mViolation[0m for MissingInputValidation in contract 'PausableToken':
    |    }
    |
  > |    function increaseApproval(
    |        address _spender,
    |        uint256 _addedValue
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(499)

[31mViolation[0m for MissingInputValidation in contract 'PausableToken':
    |    } 
    |
  > |    function decreaseApproval(
    |        address _spender,
    |        uint256 _subtractedValue 
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(506)

[31mViolation[0m for MissingInputValidation in contract 'PausableToken':
    |    }
    |
  > |    function transferFrom(
    |        address _from, 
    |        address _to, 
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(513)

[31mViolation[0m for MissingInputValidation in contract 'PausableToken':
    |    } 
    |
  > |    function transfer(
    |        address _to, 
    |        uint256 _value
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(521)

[33mWarning[0m for MissingInputValidation in contract 'PausableToken':
    |    }
    |    
  > |    function changeTokenName(string memory _name, string memory _symbol) public onlyOwner {
    |        tokenStore.changeTokenName(_name, _symbol);
    |        emit ChangeTokenName(_name, _symbol);
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(302)

[33mWarning[0m for TODAmount in contract 'PausableToken':
    |    ) public returns (bool success) {
    |        require (_spender != address(0), "Cannot approve to the zero address");       
  > |        tokenStore.setAllowance(msg.sender, _spender, _value);
    |        emit Approval(msg.sender, _spender, _value);
    |        return true;
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(345)

[33mWarning[0m for TODAmount in contract 'PausableToken':
    |    ) public returns (bool success) {
    |        require (_spender != address(0), "Cannot increaseApproval to the zero address");      
  > |        tokenStore.addAllowance(msg.sender, _spender, _addedValue);
    |        emit Approval(msg.sender, _spender, tokenStore.allowed(msg.sender, _spender));
    |        return true;
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(365)

[33mWarning[0m for TODAmount in contract 'PausableToken':
    |    ) public returns (bool success) {
    |        require (_spender != address(0), "Cannot decreaseApproval to the zero address");       
  > |        tokenStore.subAllowance(msg.sender, _spender, _subtractedValue);
    |        emit Approval(msg.sender, _spender, tokenStore.allowed(msg.sender, _spender));
    |        return true;
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(385)

[33mWarning[0m for TODAmount in contract 'PausableToken':
    |    ) public returns (bool success) {
    |        require(_to != address(0), "Cannot transfer to zero address"); 
  > |        tokenStore.subAllowance(_from, msg.sender, _value);          
    |        tokenStore.subBalance(_from, _value);
    |        tokenStore.addBalance(_to, _value);
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(402)

[33mWarning[0m for TODAmount in contract 'PausableToken':
    |        require(_to != address(0), "Cannot transfer to zero address"); 
    |        tokenStore.subAllowance(_from, msg.sender, _value);          
  > |        tokenStore.subBalance(_from, _value);
    |        tokenStore.addBalance(_to, _value);
    |        emit Transfer(_from, _to, _value);
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(403)

[33mWarning[0m for TODAmount in contract 'PausableToken':
    |        tokenStore.subAllowance(_from, msg.sender, _value);          
    |        tokenStore.subBalance(_from, _value);
  > |        tokenStore.addBalance(_to, _value);
    |        emit Transfer(_from, _to, _value);
    |        return true;
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(404)

[33mWarning[0m for TODAmount in contract 'PausableToken':
    |    ) public returns (bool success) {
    |        require (_to != address(0), "Cannot transfer to zero address");    
  > |        tokenStore.subBalance(msg.sender, _value);
    |        tokenStore.addBalance(_to, _value);
    |        emit Transfer(msg.sender, _to, _value);
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(419)

[33mWarning[0m for TODAmount in contract 'PausableToken':
    |        require (_to != address(0), "Cannot transfer to zero address");    
    |        tokenStore.subBalance(msg.sender, _value);
  > |        tokenStore.addBalance(_to, _value);
    |        emit Transfer(msg.sender, _to, _value);
    |        return true;
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(420)

[33mWarning[0m for TODReceiver in contract 'PausableToken':
    |    ) public returns (bool success) {
    |        require (_spender != address(0), "Cannot approve to the zero address");       
  > |        tokenStore.setAllowance(msg.sender, _spender, _value);
    |        emit Approval(msg.sender, _spender, _value);
    |        return true;
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(345)

[33mWarning[0m for TODReceiver in contract 'PausableToken':
    |    ) public returns (bool success) {
    |        require (_spender != address(0), "Cannot increaseApproval to the zero address");      
  > |        tokenStore.addAllowance(msg.sender, _spender, _addedValue);
    |        emit Approval(msg.sender, _spender, tokenStore.allowed(msg.sender, _spender));
    |        return true;
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(365)

[33mWarning[0m for TODReceiver in contract 'PausableToken':
    |    ) public returns (bool success) {
    |        require (_spender != address(0), "Cannot decreaseApproval to the zero address");       
  > |        tokenStore.subAllowance(msg.sender, _spender, _subtractedValue);
    |        emit Approval(msg.sender, _spender, tokenStore.allowed(msg.sender, _spender));
    |        return true;
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(385)

[33mWarning[0m for TODReceiver in contract 'PausableToken':
    |    ) public returns (bool success) {
    |        require(_to != address(0), "Cannot transfer to zero address"); 
  > |        tokenStore.subAllowance(_from, msg.sender, _value);          
    |        tokenStore.subBalance(_from, _value);
    |        tokenStore.addBalance(_to, _value);
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(402)

[33mWarning[0m for TODReceiver in contract 'PausableToken':
    |        require(_to != address(0), "Cannot transfer to zero address"); 
    |        tokenStore.subAllowance(_from, msg.sender, _value);          
  > |        tokenStore.subBalance(_from, _value);
    |        tokenStore.addBalance(_to, _value);
    |        emit Transfer(_from, _to, _value);
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(403)

[33mWarning[0m for TODReceiver in contract 'PausableToken':
    |        tokenStore.subAllowance(_from, msg.sender, _value);          
    |        tokenStore.subBalance(_from, _value);
  > |        tokenStore.addBalance(_to, _value);
    |        emit Transfer(_from, _to, _value);
    |        return true;
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(404)

[33mWarning[0m for TODReceiver in contract 'PausableToken':
    |    ) public returns (bool success) {
    |        require (_to != address(0), "Cannot transfer to zero address");    
  > |        tokenStore.subBalance(msg.sender, _value);
    |        tokenStore.addBalance(_to, _value);
    |        emit Transfer(msg.sender, _to, _value);
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(419)

[33mWarning[0m for TODReceiver in contract 'PausableToken':
    |        require (_to != address(0), "Cannot transfer to zero address");    
    |        tokenStore.subBalance(msg.sender, _value);
  > |        tokenStore.addBalance(_to, _value);
    |        emit Transfer(msg.sender, _to, _value);
    |        return true;
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(420)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'PausableToken':
    |    ) public returns (bool success) {
    |        require (_spender != address(0), "Cannot approve to the zero address");       
  > |        tokenStore.setAllowance(msg.sender, _spender, _value);
    |        emit Approval(msg.sender, _spender, _value);
    |        return true;
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(345)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'PausableToken':
    |    ) public returns (bool success) {
    |        require (_spender != address(0), "Cannot increaseApproval to the zero address");      
  > |        tokenStore.addAllowance(msg.sender, _spender, _addedValue);
    |        emit Approval(msg.sender, _spender, tokenStore.allowed(msg.sender, _spender));
    |        return true;
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(365)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'PausableToken':
    |    ) public returns (bool success) {
    |        require (_spender != address(0), "Cannot decreaseApproval to the zero address");       
  > |        tokenStore.subAllowance(msg.sender, _spender, _subtractedValue);
    |        emit Approval(msg.sender, _spender, tokenStore.allowed(msg.sender, _spender));
    |        return true;
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(385)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'PausableToken':
    |    ) public returns (bool success) {
    |        require(_to != address(0), "Cannot transfer to zero address"); 
  > |        tokenStore.subAllowance(_from, msg.sender, _value);          
    |        tokenStore.subBalance(_from, _value);
    |        tokenStore.addBalance(_to, _value);
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(402)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'PausableToken':
    |        require(_to != address(0), "Cannot transfer to zero address"); 
    |        tokenStore.subAllowance(_from, msg.sender, _value);          
  > |        tokenStore.subBalance(_from, _value);
    |        tokenStore.addBalance(_to, _value);
    |        emit Transfer(_from, _to, _value);
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(403)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'PausableToken':
    |        tokenStore.subAllowance(_from, msg.sender, _value);          
    |        tokenStore.subBalance(_from, _value);
  > |        tokenStore.addBalance(_to, _value);
    |        emit Transfer(_from, _to, _value);
    |        return true;
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(404)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'PausableToken':
    |    ) public returns (bool success) {
    |        require (_to != address(0), "Cannot transfer to zero address");    
  > |        tokenStore.subBalance(msg.sender, _value);
    |        tokenStore.addBalance(_to, _value);
    |        emit Transfer(msg.sender, _to, _value);
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(419)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'PausableToken':
    |        require (_to != address(0), "Cannot transfer to zero address");    
    |        tokenStore.subBalance(msg.sender, _value);
  > |        tokenStore.addBalance(_to, _value);
    |        emit Transfer(msg.sender, _to, _value);
    |        return true;
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(420)

[33mWarning[0m for UnrestrictedWrite in contract 'PausableToken':
    |     */
    |    function transferOwnership(address _newOwner) public onlyOwner {
  > |        _pendingOwner = _newOwner;
    |    }
    |
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(69)

[33mWarning[0m for UnrestrictedWrite in contract 'PausableToken':
    |    function claimOwnership() public onlyPendingOwner {
    |        emit OwnershipTransferred(_owner, _pendingOwner);
  > |        _owner = _pendingOwner;
    |        _pendingOwner = address(0); 
    |    }
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(77)

[33mWarning[0m for UnrestrictedWrite in contract 'PausableToken':
    |        emit OwnershipTransferred(_owner, _pendingOwner);
    |        _owner = _pendingOwner;
  > |        _pendingOwner = address(0); 
    |    }
    |    
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(78)

[33mWarning[0m for UnrestrictedWrite in contract 'PausableToken':
    |    function setTokenStore(address _newTokenStore) public onlyOwner returns (bool) {
    |        emit TokenStoreSet(address(tokenStore), _newTokenStore);
  > |        tokenStore = TokenStore(_newTokenStore);
    |        return true;
    |    }
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(298)

[33mWarning[0m for UnrestrictedWrite in contract 'PausableToken':
    |     */
    |    function pause() public onlyPauser {
  > |        paused = true;
    |        emit Pause();
    |    }
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(470)

[33mWarning[0m for UnrestrictedWrite in contract 'PausableToken':
    |     */
    |    function unpause() public onlyPauser {
  > |        paused = false;
    |        emit Unpause();
    |    }
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(478)

[33mWarning[0m for UnrestrictedWrite in contract 'PausableToken':
    |        require(_newPauser != address(0), "Cannot update the newPauser to the zero address");
    |        emit PauserChanged(_pauser, _newPauser);
  > |        _pauser = _newPauser;
    |    }
    |
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(489)

[33mWarning[0m for LockedEther in contract 'PingAnToken':
    |
    |
  > |contract PingAnToken is BurnableToken, MintableToken {
    |
    |
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(762)

[31mViolation[0m for MissingInputValidation in contract 'PingAnToken':
    |     * @param _newOwner The address to transfer ownership to.
    |     */
  > |    function transferOwnership(address _newOwner) public onlyOwner {
    |        _pendingOwner = _newOwner;
    |    }
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(68)

[31mViolation[0m for MissingInputValidation in contract 'PingAnToken':
    |     * @param _newTokenStore The address to of the TokenStore to set.
    |     */
  > |    function setTokenStore(address _newTokenStore) public onlyOwner returns (bool) {
    |        emit TokenStoreSet(address(tokenStore), _newTokenStore);
    |        tokenStore = TokenStore(_newTokenStore);
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(296)

[31mViolation[0m for MissingInputValidation in contract 'PingAnToken':
    |    }
    |
  > |    function balanceOf(address _holder) public view returns (uint256) {
    |        return tokenStore.balances(_holder);
    |    }
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(311)

[31mViolation[0m for MissingInputValidation in contract 'PingAnToken':
    |    }
    |
  > |    function allowance(address _holder, address _spender) public view returns (uint256) {
    |        return tokenStore.allowed(_holder, _spender);
    |    }
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(315)

[31mViolation[0m for MissingInputValidation in contract 'PingAnToken':
    |     * @param _newblacklistStore The blacklistStore address to set
    |     */
  > |    function setBlacklistStore(address _newblacklistStore) public onlyOwner returns (bool) {
    |        emit BlacklistStoreSet(address(blacklistStore), _newblacklistStore);
    |        blacklistStore = BlacklistStore(_newblacklistStore);
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(600)

[31mViolation[0m for MissingInputValidation in contract 'PingAnToken':
    |     * @return the address status 
    |     */
  > |    function queryBlacklist(address _account) public view returns (uint256) {
    |        return blacklistStore.blacklisted(_account);
    |    }
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(621)

[31mViolation[0m for MissingInputValidation in contract 'PingAnToken':
    |     * @param _status The address status to change
    |     */
  > |    function changeBlacklist(address _account, uint256 _status) public onlyBlacklister {
    |        blacklistStore.setBlacklist(_account, _status);
    |        emit Blacklist(_account, _status);
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(630)

[31mViolation[0m for MissingInputValidation in contract 'PingAnToken':
    |    }
    |
  > |    function approve(
    |        address _spender,
    |        uint256 _value
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(635)

[31mViolation[0m for MissingInputValidation in contract 'PingAnToken':
    |    }
    |    
  > |    function increaseApproval(
    |        address _spender,
    |        uint256 _addedValue
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(642)

[31mViolation[0m for MissingInputValidation in contract 'PingAnToken':
    |    } 
    |
  > |    function decreaseApproval(
    |        address _spender,
    |        uint256 _subtractedValue 
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(649)

[31mViolation[0m for MissingInputValidation in contract 'PingAnToken':
    |    }
    |
  > |    function transferFrom(
    |        address _from, 
    |        address _to, 
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(656)

[31mViolation[0m for MissingInputValidation in contract 'PingAnToken':
    |    } 
    |
  > |    function transfer(
    |        address _to, 
    |        uint256 _value
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(664)

[31mViolation[0m for MissingInputValidation in contract 'PingAnToken':
    |     * @param _value uint256 the amount of tokens to be burned
    |    */
  > |    function burn(
    |        uint256 _value
    |    ) public whenNotPaused notBlacklisted(msg.sender) returns (bool success) {   
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(687)

[31mViolation[0m for MissingInputValidation in contract 'PingAnToken':
    |     * @return A boolean that indicates if the operation was successful.
    |     */
  > |    function mint(
    |        address _to, 
    |        uint256 _value
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(741)

[33mWarning[0m for MissingInputValidation in contract 'PingAnToken':
    |    }
    |    
  > |    function changeTokenName(string memory _name, string memory _symbol) public onlyOwner {
    |        tokenStore.changeTokenName(_name, _symbol);
    |        emit ChangeTokenName(_name, _symbol);
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(302)

[33mWarning[0m for RepeatedCall in contract 'PingAnToken':
    |        require(_to != address(0), "Cannot transfer to zero address"); 
    |        tokenStore.subAllowance(_from, msg.sender, _value);          
  > |        tokenStore.subBalance(_from, _value);
    |        tokenStore.addBalance(_to, _value);
    |        emit Transfer(_from, _to, _value);
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(403)

[33mWarning[0m for RepeatedCall in contract 'PingAnToken':
    |        tokenStore.subAllowance(_from, msg.sender, _value);          
    |        tokenStore.subBalance(_from, _value);
  > |        tokenStore.addBalance(_to, _value);
    |        emit Transfer(_from, _to, _value);
    |        return true;
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(404)

[33mWarning[0m for TODAmount in contract 'PingAnToken':
    |    ) public returns (bool success) {
    |        require (_spender != address(0), "Cannot approve to the zero address");       
  > |        tokenStore.setAllowance(msg.sender, _spender, _value);
    |        emit Approval(msg.sender, _spender, _value);
    |        return true;
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(345)

[33mWarning[0m for TODAmount in contract 'PingAnToken':
    |    ) public returns (bool success) {
    |        require (_spender != address(0), "Cannot increaseApproval to the zero address");      
  > |        tokenStore.addAllowance(msg.sender, _spender, _addedValue);
    |        emit Approval(msg.sender, _spender, tokenStore.allowed(msg.sender, _spender));
    |        return true;
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(365)

[33mWarning[0m for TODAmount in contract 'PingAnToken':
    |    ) public returns (bool success) {
    |        require (_spender != address(0), "Cannot decreaseApproval to the zero address");       
  > |        tokenStore.subAllowance(msg.sender, _spender, _subtractedValue);
    |        emit Approval(msg.sender, _spender, tokenStore.allowed(msg.sender, _spender));
    |        return true;
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(385)

[33mWarning[0m for TODAmount in contract 'PingAnToken':
    |    ) public returns (bool success) {
    |        require(_to != address(0), "Cannot transfer to zero address"); 
  > |        tokenStore.subAllowance(_from, msg.sender, _value);          
    |        tokenStore.subBalance(_from, _value);
    |        tokenStore.addBalance(_to, _value);
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(402)

[33mWarning[0m for TODAmount in contract 'PingAnToken':
    |        require(_to != address(0), "Cannot transfer to zero address"); 
    |        tokenStore.subAllowance(_from, msg.sender, _value);          
  > |        tokenStore.subBalance(_from, _value);
    |        tokenStore.addBalance(_to, _value);
    |        emit Transfer(_from, _to, _value);
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(403)

[33mWarning[0m for TODAmount in contract 'PingAnToken':
    |        tokenStore.subAllowance(_from, msg.sender, _value);          
    |        tokenStore.subBalance(_from, _value);
  > |        tokenStore.addBalance(_to, _value);
    |        emit Transfer(_from, _to, _value);
    |        return true;
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(404)

[33mWarning[0m for TODAmount in contract 'PingAnToken':
    |    ) public returns (bool success) {
    |        require (_to != address(0), "Cannot transfer to zero address");    
  > |        tokenStore.subBalance(msg.sender, _value);
    |        tokenStore.addBalance(_to, _value);
    |        emit Transfer(msg.sender, _to, _value);
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(419)

[33mWarning[0m for TODAmount in contract 'PingAnToken':
    |        require (_to != address(0), "Cannot transfer to zero address");    
    |        tokenStore.subBalance(msg.sender, _value);
  > |        tokenStore.addBalance(_to, _value);
    |        emit Transfer(msg.sender, _to, _value);
    |        return true;
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(420)

[33mWarning[0m for TODReceiver in contract 'PingAnToken':
    |    ) public returns (bool success) {
    |        require (_spender != address(0), "Cannot approve to the zero address");       
  > |        tokenStore.setAllowance(msg.sender, _spender, _value);
    |        emit Approval(msg.sender, _spender, _value);
    |        return true;
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(345)

[33mWarning[0m for TODReceiver in contract 'PingAnToken':
    |    ) public returns (bool success) {
    |        require (_spender != address(0), "Cannot increaseApproval to the zero address");      
  > |        tokenStore.addAllowance(msg.sender, _spender, _addedValue);
    |        emit Approval(msg.sender, _spender, tokenStore.allowed(msg.sender, _spender));
    |        return true;
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(365)

[33mWarning[0m for TODReceiver in contract 'PingAnToken':
    |    ) public returns (bool success) {
    |        require (_spender != address(0), "Cannot decreaseApproval to the zero address");       
  > |        tokenStore.subAllowance(msg.sender, _spender, _subtractedValue);
    |        emit Approval(msg.sender, _spender, tokenStore.allowed(msg.sender, _spender));
    |        return true;
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(385)

[33mWarning[0m for TODReceiver in contract 'PingAnToken':
    |    ) public returns (bool success) {
    |        require(_to != address(0), "Cannot transfer to zero address"); 
  > |        tokenStore.subAllowance(_from, msg.sender, _value);          
    |        tokenStore.subBalance(_from, _value);
    |        tokenStore.addBalance(_to, _value);
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(402)

[33mWarning[0m for TODReceiver in contract 'PingAnToken':
    |        require(_to != address(0), "Cannot transfer to zero address"); 
    |        tokenStore.subAllowance(_from, msg.sender, _value);          
  > |        tokenStore.subBalance(_from, _value);
    |        tokenStore.addBalance(_to, _value);
    |        emit Transfer(_from, _to, _value);
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(403)

[33mWarning[0m for TODReceiver in contract 'PingAnToken':
    |        tokenStore.subAllowance(_from, msg.sender, _value);          
    |        tokenStore.subBalance(_from, _value);
  > |        tokenStore.addBalance(_to, _value);
    |        emit Transfer(_from, _to, _value);
    |        return true;
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(404)

[33mWarning[0m for TODReceiver in contract 'PingAnToken':
    |    ) public returns (bool success) {
    |        require (_to != address(0), "Cannot transfer to zero address");    
  > |        tokenStore.subBalance(msg.sender, _value);
    |        tokenStore.addBalance(_to, _value);
    |        emit Transfer(msg.sender, _to, _value);
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(419)

[33mWarning[0m for TODReceiver in contract 'PingAnToken':
    |        require (_to != address(0), "Cannot transfer to zero address");    
    |        tokenStore.subBalance(msg.sender, _value);
  > |        tokenStore.addBalance(_to, _value);
    |        emit Transfer(msg.sender, _to, _value);
    |        return true;
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(420)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'PingAnToken':
    |    ) public returns (bool success) {
    |        require (_spender != address(0), "Cannot approve to the zero address");       
  > |        tokenStore.setAllowance(msg.sender, _spender, _value);
    |        emit Approval(msg.sender, _spender, _value);
    |        return true;
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(345)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'PingAnToken':
    |    ) public returns (bool success) {
    |        require (_spender != address(0), "Cannot increaseApproval to the zero address");      
  > |        tokenStore.addAllowance(msg.sender, _spender, _addedValue);
    |        emit Approval(msg.sender, _spender, tokenStore.allowed(msg.sender, _spender));
    |        return true;
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(365)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'PingAnToken':
    |    ) public returns (bool success) {
    |        require (_spender != address(0), "Cannot decreaseApproval to the zero address");       
  > |        tokenStore.subAllowance(msg.sender, _spender, _subtractedValue);
    |        emit Approval(msg.sender, _spender, tokenStore.allowed(msg.sender, _spender));
    |        return true;
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(385)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'PingAnToken':
    |    ) public returns (bool success) {
    |        require(_to != address(0), "Cannot transfer to zero address"); 
  > |        tokenStore.subAllowance(_from, msg.sender, _value);          
    |        tokenStore.subBalance(_from, _value);
    |        tokenStore.addBalance(_to, _value);
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(402)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'PingAnToken':
    |        require(_to != address(0), "Cannot transfer to zero address"); 
    |        tokenStore.subAllowance(_from, msg.sender, _value);          
  > |        tokenStore.subBalance(_from, _value);
    |        tokenStore.addBalance(_to, _value);
    |        emit Transfer(_from, _to, _value);
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(403)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'PingAnToken':
    |        tokenStore.subAllowance(_from, msg.sender, _value);          
    |        tokenStore.subBalance(_from, _value);
  > |        tokenStore.addBalance(_to, _value);
    |        emit Transfer(_from, _to, _value);
    |        return true;
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(404)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'PingAnToken':
    |    ) public returns (bool success) {
    |        require (_to != address(0), "Cannot transfer to zero address");    
  > |        tokenStore.subBalance(msg.sender, _value);
    |        tokenStore.addBalance(_to, _value);
    |        emit Transfer(msg.sender, _to, _value);
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(419)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'PingAnToken':
    |        require (_to != address(0), "Cannot transfer to zero address");    
    |        tokenStore.subBalance(msg.sender, _value);
  > |        tokenStore.addBalance(_to, _value);
    |        emit Transfer(msg.sender, _to, _value);
    |        return true;
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(420)

[31mViolation[0m for UnrestrictedWrite in contract 'PingAnToken':
    |    */
    |    function setOwner(address _newOwner) internal {
  > |        _owner = _newOwner;
    |    }
    |
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(61)

[31mViolation[0m for UnrestrictedWrite in contract 'PingAnToken':
    |        require(_owner != address(0), "Cannot initialize the owner to zero address");
    |        setOwner(_owner);
  > |        initialized = true;
    |    }
    |
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(780)

[33mWarning[0m for UnrestrictedWrite in contract 'PingAnToken':
    |     */
    |    function transferOwnership(address _newOwner) public onlyOwner {
  > |        _pendingOwner = _newOwner;
    |    }
    |
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(69)

[33mWarning[0m for UnrestrictedWrite in contract 'PingAnToken':
    |    function claimOwnership() public onlyPendingOwner {
    |        emit OwnershipTransferred(_owner, _pendingOwner);
  > |        _owner = _pendingOwner;
    |        _pendingOwner = address(0); 
    |    }
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(77)

[33mWarning[0m for UnrestrictedWrite in contract 'PingAnToken':
    |        emit OwnershipTransferred(_owner, _pendingOwner);
    |        _owner = _pendingOwner;
  > |        _pendingOwner = address(0); 
    |    }
    |    
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(78)

[33mWarning[0m for UnrestrictedWrite in contract 'PingAnToken':
    |    function setTokenStore(address _newTokenStore) public onlyOwner returns (bool) {
    |        emit TokenStoreSet(address(tokenStore), _newTokenStore);
  > |        tokenStore = TokenStore(_newTokenStore);
    |        return true;
    |    }
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(298)

[33mWarning[0m for UnrestrictedWrite in contract 'PingAnToken':
    |     */
    |    function pause() public onlyPauser {
  > |        paused = true;
    |        emit Pause();
    |    }
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(470)

[33mWarning[0m for UnrestrictedWrite in contract 'PingAnToken':
    |     */
    |    function unpause() public onlyPauser {
  > |        paused = false;
    |        emit Unpause();
    |    }
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(478)

[33mWarning[0m for UnrestrictedWrite in contract 'PingAnToken':
    |        require(_newPauser != address(0), "Cannot update the newPauser to the zero address");
    |        emit PauserChanged(_pauser, _newPauser);
  > |        _pauser = _newPauser;
    |    }
    |
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(489)

[33mWarning[0m for UnrestrictedWrite in contract 'PingAnToken':
    |    function setBlacklistStore(address _newblacklistStore) public onlyOwner returns (bool) {
    |        emit BlacklistStoreSet(address(blacklistStore), _newblacklistStore);
  > |        blacklistStore = BlacklistStore(_newblacklistStore);
    |        return true;
    |    }
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(602)

[33mWarning[0m for UnrestrictedWrite in contract 'PingAnToken':
    |        require(_newBlacklister != address(0), "Cannot update the blacklister to the zero address");
    |        emit BlacklisterChanged(_blacklister, _newBlacklister);
  > |        _blacklister = _newBlacklister;
    |    }
    |
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(613)

[33mWarning[0m for UnrestrictedWrite in contract 'PingAnToken':
    |        require(_newMinter != address(0), "Cannot update the newPauser to the zero address");
    |        emit MinterChanged(_minter, _newMinter);
  > |        _minter = _newMinter;
    |    }
    |
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(732)

[31mViolation[0m for LockedEther in contract 'TokenStore':
    |
    |
  > |contract TokenStore is Operable {
    |
    |    using SafeMath for uint256;
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(196)

[33mWarning[0m for UnrestrictedWrite in contract 'TokenStore':
    |
    |
  > |contract TokenStore is Operable {
    |
    |    using SafeMath for uint256;
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(196)

[33mWarning[0m for UnrestrictedWrite in contract 'TokenStore':
    |     */
    |    function transferOwnership(address _newOwner) public onlyOwner {
  > |        _pendingOwner = _newOwner;
    |    }
    |
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(69)

[33mWarning[0m for UnrestrictedWrite in contract 'TokenStore':
    |    function claimOwnership() public onlyPendingOwner {
    |        emit OwnershipTransferred(_owner, _pendingOwner);
  > |        _owner = _pendingOwner;
    |        _pendingOwner = address(0); 
    |    }
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(77)

[33mWarning[0m for UnrestrictedWrite in contract 'TokenStore':
    |        emit OwnershipTransferred(_owner, _pendingOwner);
    |        _owner = _pendingOwner;
  > |        _pendingOwner = address(0); 
    |    }
    |    
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(78)

[33mWarning[0m for UnrestrictedWrite in contract 'TokenStore':
    |        require(_newOperator != address(0), "Cannot change the newOperator to the zero address");
    |        emit OperatorChanged(_operator, _newOperator);
  > |        _operator = _newOperator;
    |    }
    |
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(117)

[33mWarning[0m for UnrestrictedWrite in contract 'TokenStore':
    |
    |    function addBalance(address _holder, uint256 _value) public onlyOperator {
  > |        balances[_holder] = balances[_holder].add(_value);
    |    }
    |
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(215)

[33mWarning[0m for UnrestrictedWrite in contract 'TokenStore':
    |
    |    function subBalance(address _holder, uint256 _value) public onlyOperator {
  > |        balances[_holder] = balances[_holder].sub(_value);
    |    }
    |
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(219)

[33mWarning[0m for UnrestrictedWrite in contract 'TokenStore':
    |
    |    function setBalance(address _holder, uint256 _value) public onlyOperator {
  > |        balances[_holder] = _value;
    |    }
    |
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(223)

[33mWarning[0m for UnrestrictedWrite in contract 'TokenStore':
    |
    |    function addAllowance(address _holder, address _spender, uint256 _value) public onlyOperator {
  > |        allowed[_holder][_spender] = allowed[_holder][_spender].add(_value);
    |    }
    |
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(227)

[33mWarning[0m for UnrestrictedWrite in contract 'TokenStore':
    |
    |    function subAllowance(address _holder, address _spender, uint256 _value) public onlyOperator {
  > |        allowed[_holder][_spender] = allowed[_holder][_spender].sub(_value);
    |    }
    |
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(231)

[33mWarning[0m for UnrestrictedWrite in contract 'TokenStore':
    |
    |    function setAllowance(address _holder, address _spender, uint256 _value) public onlyOperator {
  > |        allowed[_holder][_spender] = _value;
    |    }
    |
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(235)

[33mWarning[0m for UnrestrictedWrite in contract 'TokenStore':
    |
    |    function addTotalSupply(uint256 _value) public onlyOperator {
  > |        totalSupply = totalSupply.add(_value);
    |    }
    |
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(239)

[33mWarning[0m for UnrestrictedWrite in contract 'TokenStore':
    |
    |    function subTotalSupply(uint256 _value) public onlyOperator {
  > |        totalSupply = totalSupply.sub(_value);
    |    }
    |
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(243)

[33mWarning[0m for UnrestrictedWrite in contract 'TokenStore':
    |
    |    function setTotalSupply(uint256 _value) public onlyOperator {
  > |        totalSupply = _value;
    |    }
    |
  at /unique_contracts/0x00000000000fe8503db73c68f1a1874eb9d86883.sol(247)