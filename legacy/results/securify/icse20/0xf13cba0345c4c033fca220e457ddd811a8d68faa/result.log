Processing contract: /unique_chucks/22/0xf13cba0345c4c033fca220e457ddd811a8d68faa.sol:IERC20
Processing contract: /unique_chucks/22/0xf13cba0345c4c033fca220e457ddd811a8d68faa.sol:Owned
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/22/0xf13cba0345c4c033fca220e457ddd811a8d68faa.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/22/0xf13cba0345c4c033fca220e457ddd811a8d68faa.sol:TBDToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for MissingInputValidation in contract 'Owned':
    |        _;
    |    }
  > |    function transferOwnership(address _newOwner) public onlyOwner {
    |        newOwner = _newOwner;
    |    }
  at /unique_chucks/22/0xf13cba0345c4c033fca220e457ddd811a8d68faa.sol(99)

[33mWarning[0m for UnrestrictedWrite in contract 'Owned':
    |    }
    |    function transferOwnership(address _newOwner) public onlyOwner {
  > |        newOwner = _newOwner;
    |    }
    |    function acceptOwnership() public {
  at /unique_chucks/22/0xf13cba0345c4c033fca220e457ddd811a8d68faa.sol(100)

[33mWarning[0m for UnrestrictedWrite in contract 'Owned':
    |    function acceptOwnership() public {
    |        require(msg.sender == newOwner);
  > |        owner = newOwner;
    |    }
    |}
  at /unique_chucks/22/0xf13cba0345c4c033fca220e457ddd811a8d68faa.sol(104)

[31mViolation[0m for TODAmount in contract 'TBDToken':
    |    // Withdraw ETH
    |    function withdrawContractBalance() public onlyOwner {
  > |        msg.sender.transfer(contractAddress.balance);
    |    }
    |    
  at /unique_chucks/22/0xf13cba0345c4c033fca220e457ddd811a8d68faa.sol(234)

[33mWarning[0m for UnrestrictedWrite in contract 'TBDToken':
    |    }
    |    function transferOwnership(address _newOwner) public onlyOwner {
  > |        newOwner = _newOwner;
    |    }
    |    function acceptOwnership() public {
  at /unique_chucks/22/0xf13cba0345c4c033fca220e457ddd811a8d68faa.sol(100)

[33mWarning[0m for UnrestrictedWrite in contract 'TBDToken':
    |    function acceptOwnership() public {
    |        require(msg.sender == newOwner);
  > |        owner = newOwner;
    |    }
    |}
  at /unique_chucks/22/0xf13cba0345c4c033fca220e457ddd811a8d68faa.sol(104)

[33mWarning[0m for UnrestrictedWrite in contract 'TBDToken':
    |        require(to != contractAddress);
    |        _balances[msg.sender] = _balances[msg.sender].sub(value);
  > |        _balances[to] = _balances[to].add(value);
    |        emit Transfer(msg.sender, to, value);
    |        return true;
  at /unique_chucks/22/0xf13cba0345c4c033fca220e457ddd811a8d68faa.sol(159)

[33mWarning[0m for UnrestrictedWrite in contract 'TBDToken':
    |        require(value <= balanceOf(from));
    |        require(value <= allowance(from, to));
  > |        _balances[from] = _balances[from].sub(value);
    |        _balances[to] = _balances[to].add(value);
    |        _allowed[from][to] = _allowed[from][to].sub(value);
  at /unique_chucks/22/0xf13cba0345c4c033fca220e457ddd811a8d68faa.sol(175)

[33mWarning[0m for UnrestrictedWrite in contract 'TBDToken':
    |        require(value <= allowance(from, to));
    |        _balances[from] = _balances[from].sub(value);
  > |        _balances[to] = _balances[to].add(value);
    |        _allowed[from][to] = _allowed[from][to].sub(value);
    |        emit Transfer(from, to, value);
  at /unique_chucks/22/0xf13cba0345c4c033fca220e457ddd811a8d68faa.sol(176)

[33mWarning[0m for UnrestrictedWrite in contract 'TBDToken':
    |        _balances[from] = _balances[from].sub(value);
    |        _balances[to] = _balances[to].add(value);
  > |        _allowed[from][to] = _allowed[from][to].sub(value);
    |        emit Transfer(from, to, value);
    |        return true;
  at /unique_chucks/22/0xf13cba0345c4c033fca220e457ddd811a8d68faa.sol(177)

[33mWarning[0m for UnrestrictedWrite in contract 'TBDToken':
    |    // Owner Can mint new tokens
    |    function mint(uint256 amount, address to) public onlyOwner {
  > |        _balances[to] = _balances[to].add(amount);
    |        supply = supply.add(amount);
    |        emit Mint(amount, to);
  at /unique_chucks/22/0xf13cba0345c4c033fca220e457ddd811a8d68faa.sol(189)

[33mWarning[0m for UnrestrictedWrite in contract 'TBDToken':
    |    function mint(uint256 amount, address to) public onlyOwner {
    |        _balances[to] = _balances[to].add(amount);
  > |        supply = supply.add(amount);
    |        emit Mint(amount, to);
    |    }
  at /unique_chucks/22/0xf13cba0345c4c033fca220e457ddd811a8d68faa.sol(190)

[33mWarning[0m for UnrestrictedWrite in contract 'TBDToken':
    |    function burn(uint256 amount, address from) public onlyOwner {
    |        require(_balances[from] >= amount);
  > |        _balances[from] = _balances[from].sub(amount);
    |        supply = supply.sub(amount);
    |        emit Burn(amount, from);
  at /unique_chucks/22/0xf13cba0345c4c033fca220e457ddd811a8d68faa.sol(197)

[33mWarning[0m for UnrestrictedWrite in contract 'TBDToken':
    |        require(_balances[from] >= amount);
    |        _balances[from] = _balances[from].sub(amount);
  > |        supply = supply.sub(amount);
    |        emit Burn(amount, from);
    |    }
  at /unique_chucks/22/0xf13cba0345c4c033fca220e457ddd811a8d68faa.sol(198)

[33mWarning[0m for UnrestrictedWrite in contract 'TBDToken':
    |    // Change ICO Price
    |    function setICOPrice(uint256 _newPrice) public onlyOwner {
  > |        ICOPrice = _newPrice;
    |    }
    |    
  at /unique_chucks/22/0xf13cba0345c4c033fca220e457ddd811a8d68faa.sol(204)

[33mWarning[0m for UnrestrictedWrite in contract 'TBDToken':
    |    function topUpICO(uint256 _amount) public onlyOwner {
    |        require(_balances[owner] >= _amount);
  > |        _balances[owner] = _balances[owner].sub(_amount);
    |        _balances[contractAddress] = _balances[contractAddress].add(_amount);
    |        emit Transfer(msg.sender, contractAddress, _amount);
  at /unique_chucks/22/0xf13cba0345c4c033fca220e457ddd811a8d68faa.sol(215)

[33mWarning[0m for UnrestrictedWrite in contract 'TBDToken':
    |        require(_balances[owner] >= _amount);
    |        _balances[owner] = _balances[owner].sub(_amount);
  > |        _balances[contractAddress] = _balances[contractAddress].add(_amount);
    |        emit Transfer(msg.sender, contractAddress, _amount);
    |    }
  at /unique_chucks/22/0xf13cba0345c4c033fca220e457ddd811a8d68faa.sol(216)

[33mWarning[0m for UnrestrictedWrite in contract 'TBDToken':
    |        uint256 affordAmount = msg.value / ICOPrice;
    |        require(_balances[contractAddress] >= affordAmount * 10 ** decimals);
  > |        _balances[contractAddress] = _balances[contractAddress].sub(affordAmount * 10 ** decimals);
    |        _balances[msg.sender] = _balances[msg.sender].add(affordAmount * 10 ** decimals);
    |        emit Transfer(contractAddress, msg.sender, affordAmount * 10 ** decimals);
  at /unique_chucks/22/0xf13cba0345c4c033fca220e457ddd811a8d68faa.sol(227)

[33mWarning[0m for UnrestrictedWrite in contract 'TBDToken':
    |    function withdrawContractTokens(uint256 _amount) public onlyOwner {
    |        require(_balances[contractAddress] >= _amount);
  > |        _balances[contractAddress] = _balances[contractAddress].sub(_amount);
    |        _balances[owner] = _balances[owner].add(_amount);
    |        emit Transfer(contractAddress, owner, _amount);
  at /unique_chucks/22/0xf13cba0345c4c033fca220e457ddd811a8d68faa.sol(240)

[33mWarning[0m for UnrestrictedWrite in contract 'TBDToken':
    |        require(_balances[contractAddress] >= _amount);
    |        _balances[contractAddress] = _balances[contractAddress].sub(_amount);
  > |        _balances[owner] = _balances[owner].add(_amount);
    |        emit Transfer(contractAddress, owner, _amount);
    |    }
  at /unique_chucks/22/0xf13cba0345c4c033fca220e457ddd811a8d68faa.sol(241)