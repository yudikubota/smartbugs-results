Processing contract: /unique_chucks/26/0x807b3f6868d2cae3c093b3f01ec985e4af5312f2.sol:Authorization
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/26/0x807b3f6868d2cae3c093b3f01ec985e4af5312f2.sol:PTA
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/26/0x807b3f6868d2cae3c093b3f01ec985e4af5312f2.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/26/0x807b3f6868d2cae3c093b3f01ec985e4af5312f2.sol:StandardToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/26/0x807b3f6868d2cae3c093b3f01ec985e4af5312f2.sol:Token
Processing contract: /unique_chucks/26/0x807b3f6868d2cae3c093b3f01ec985e4af5312f2.sol:tokenRecipient
[31mViolation[0m for LockedEther in contract 'Authorization':
    |}
    |
  > |contract Authorization {
    |    mapping(address => bool) internal authbook;
    |    address[] public operators;
  at /unique_chucks/26/0x807b3f6868d2cae3c093b3f01ec985e4af5312f2.sol(36)

[33mWarning[0m for UnrestrictedWrite in contract 'Authorization':
    |}
    |
  > |contract Authorization {
    |    mapping(address => bool) internal authbook;
    |    address[] public operators;
  at /unique_chucks/26/0x807b3f6868d2cae3c093b3f01ec985e4af5312f2.sol(36)

[33mWarning[0m for UnrestrictedWrite in contract 'Authorization':
    |        onlyOperator
    |    {
  > |        powerStatus = onOff_;
    |    }
    |    function transferOwnership(address newOwner_)
  at /unique_chucks/26/0x807b3f6868d2cae3c093b3f01ec985e4af5312f2.sol(69)

[33mWarning[0m for UnrestrictedWrite in contract 'Authorization':
    |        for(uint i = 0; i < operators.length; i++) {
    |            if(operators[i] == user_) {
  > |                operators[i] = operators[operators.length - 1];
    |                operators.length -= 1;
    |            }
  at /unique_chucks/26/0x807b3f6868d2cae3c093b3f01ec985e4af5312f2.sol(95)

[31mViolation[0m for LockedEther in contract 'PTA':
    |}
    |
  > |contract PTA is StandardToken {
    |
    |    // metadata
  at /unique_chucks/26/0x807b3f6868d2cae3c093b3f01ec985e4af5312f2.sol(173)

[33mWarning[0m for UnrestrictedWrite in contract 'PTA':
    |        onlyOperator
    |    {
  > |        powerStatus = onOff_;
    |    }
    |    function transferOwnership(address newOwner_)
  at /unique_chucks/26/0x807b3f6868d2cae3c093b3f01ec985e4af5312f2.sol(69)

[33mWarning[0m for UnrestrictedWrite in contract 'PTA':
    |        for(uint i = 0; i < operators.length; i++) {
    |            if(operators[i] == user_) {
  > |                operators[i] = operators[operators.length - 1];
    |                operators.length -= 1;
    |            }
  at /unique_chucks/26/0x807b3f6868d2cae3c093b3f01ec985e4af5312f2.sol(95)

[33mWarning[0m for UnrestrictedWrite in contract 'PTA':
    |        if (balances[msg.sender] >= _value && _value > 0) {
    |            balances[msg.sender] = safeSub(balances[msg.sender], _value);
  > |            balances[_to] = safeAdd(balances[_to], _value);
    |            emit Transfer(msg.sender, _to, _value);
    |            return true;
  at /unique_chucks/26/0x807b3f6868d2cae3c093b3f01ec985e4af5312f2.sol(131)

[33mWarning[0m for UnrestrictedWrite in contract 'PTA':
    |    function transferFrom(address _from, address _to, uint256 _value) onlyActive public returns (bool success) {
    |        if (balances[_from] >= _value && allowed[_from][msg.sender] >= _value && _value > 0) {
  > |            balances[_to] = safeAdd(balances[_to], _value);
    |            balances[_from] = safeSub(balances[_from], _value);
    |            allowed[_from][msg.sender] = safeSub(allowed[_from][msg.sender], _value);
  at /unique_chucks/26/0x807b3f6868d2cae3c093b3f01ec985e4af5312f2.sol(142)

[33mWarning[0m for UnrestrictedWrite in contract 'PTA':
    |        if (balances[_from] >= _value && allowed[_from][msg.sender] >= _value && _value > 0) {
    |            balances[_to] = safeAdd(balances[_to], _value);
  > |            balances[_from] = safeSub(balances[_from], _value);
    |            allowed[_from][msg.sender] = safeSub(allowed[_from][msg.sender], _value);
    |            emit Transfer(_from, _to, _value);
  at /unique_chucks/26/0x807b3f6868d2cae3c093b3f01ec985e4af5312f2.sol(143)

[33mWarning[0m for UnrestrictedWrite in contract 'PTA':
    |}
    |
  > |contract PTA is StandardToken {
    |
    |    // metadata
  at /unique_chucks/26/0x807b3f6868d2cae3c093b3f01ec985e4af5312f2.sol(173)

[31mViolation[0m for LockedEther in contract 'StandardToken':
    |
    |/*  ERC 20 token */
  > |contract StandardToken is SafeMath, Token {
    |    /* Send coins */
    |    function transfer(address _to, uint256 _value) onlyActive public returns (bool success) {
  at /unique_chucks/26/0x807b3f6868d2cae3c093b3f01ec985e4af5312f2.sol(126)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |        onlyOperator
    |    {
  > |        powerStatus = onOff_;
    |    }
    |    function transferOwnership(address newOwner_)
  at /unique_chucks/26/0x807b3f6868d2cae3c093b3f01ec985e4af5312f2.sol(69)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |        for(uint i = 0; i < operators.length; i++) {
    |            if(operators[i] == user_) {
  > |                operators[i] = operators[operators.length - 1];
    |                operators.length -= 1;
    |            }
  at /unique_chucks/26/0x807b3f6868d2cae3c093b3f01ec985e4af5312f2.sol(95)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |
    |/*  ERC 20 token */
  > |contract StandardToken is SafeMath, Token {
    |    /* Send coins */
    |    function transfer(address _to, uint256 _value) onlyActive public returns (bool success) {
  at /unique_chucks/26/0x807b3f6868d2cae3c093b3f01ec985e4af5312f2.sol(126)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |        if (balances[msg.sender] >= _value && _value > 0) {
    |            balances[msg.sender] = safeSub(balances[msg.sender], _value);
  > |            balances[_to] = safeAdd(balances[_to], _value);
    |            emit Transfer(msg.sender, _to, _value);
    |            return true;
  at /unique_chucks/26/0x807b3f6868d2cae3c093b3f01ec985e4af5312f2.sol(131)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |    function transferFrom(address _from, address _to, uint256 _value) onlyActive public returns (bool success) {
    |        if (balances[_from] >= _value && allowed[_from][msg.sender] >= _value && _value > 0) {
  > |            balances[_to] = safeAdd(balances[_to], _value);
    |            balances[_from] = safeSub(balances[_from], _value);
    |            allowed[_from][msg.sender] = safeSub(allowed[_from][msg.sender], _value);
  at /unique_chucks/26/0x807b3f6868d2cae3c093b3f01ec985e4af5312f2.sol(142)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |        if (balances[_from] >= _value && allowed[_from][msg.sender] >= _value && _value > 0) {
    |            balances[_to] = safeAdd(balances[_to], _value);
  > |            balances[_from] = safeSub(balances[_from], _value);
    |            allowed[_from][msg.sender] = safeSub(allowed[_from][msg.sender], _value);
    |            emit Transfer(_from, _to, _value);
  at /unique_chucks/26/0x807b3f6868d2cae3c093b3f01ec985e4af5312f2.sol(143)