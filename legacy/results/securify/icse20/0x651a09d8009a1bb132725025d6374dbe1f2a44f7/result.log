Processing contract: /unique_chucks/20/0x651a09d8009a1bb132725025d6374dbe1f2a44f7.sol:ApproveAndCallFallback
Processing contract: /unique_chucks/20/0x651a09d8009a1bb132725025d6374dbe1f2a44f7.sol:BokkyPooBahsFixedSupplyTokenFactory
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/20/0x651a09d8009a1bb132725025d6374dbe1f2a44f7.sol:ERC20Interface
Processing contract: /unique_chucks/20/0x651a09d8009a1bb132725025d6374dbe1f2a44f7.sol:FixedSupplyToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/20/0x651a09d8009a1bb132725025d6374dbe1f2a44f7.sol:Owned
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/20/0x651a09d8009a1bb132725025d6374dbe1f2a44f7.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/20/0x651a09d8009a1bb132725025d6374dbe1f2a44f7.sol:TokenInterface
[33mWarning[0m for RepeatedCall in contract 'BokkyPooBahsFixedSupplyTokenFactory':
    |        emit TokenDeployed(owner, address(token), symbol, name, decimals, totalSupply);
    |        if (msg.value > 0) {
  > |            owner.transfer(msg.value);
    |        }
    |    }
  at /unique_chucks/20/0x651a09d8009a1bb132725025d6374dbe1f2a44f7.sol(247)

[33mWarning[0m for TODAmount in contract 'BokkyPooBahsFixedSupplyTokenFactory':
    |        emit TokenDeployed(owner, address(token), symbol, name, decimals, totalSupply);
    |        if (msg.value > 0) {
  > |            owner.transfer(msg.value);
    |        }
    |    }
  at /unique_chucks/20/0x651a09d8009a1bb132725025d6374dbe1f2a44f7.sol(247)

[31mViolation[0m for TODReceiver in contract 'BokkyPooBahsFixedSupplyTokenFactory':
    |    function recoverTokens(address token, uint tokens) public onlyOwner {
    |        if (token == address(0)) {
  > |            owner.transfer((tokens == 0 ? address(this).balance : tokens));
    |        } else {
    |            ERC20Interface(token).transfer(owner, tokens == 0 ? ERC20Interface(token).balanceOf(address(this)) : tokens);
  at /unique_chucks/20/0x651a09d8009a1bb132725025d6374dbe1f2a44f7.sol(61)

[31mViolation[0m for TODReceiver in contract 'BokkyPooBahsFixedSupplyTokenFactory':
    |        emit TokenDeployed(owner, address(token), symbol, name, decimals, totalSupply);
    |        if (msg.value > 0) {
  > |            owner.transfer(msg.value);
    |        }
    |    }
  at /unique_chucks/20/0x651a09d8009a1bb132725025d6374dbe1f2a44f7.sol(247)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'BokkyPooBahsFixedSupplyTokenFactory':
    |        emit TokenDeployed(owner, address(token), symbol, name, decimals, totalSupply);
    |        if (msg.value > 0) {
  > |            owner.transfer(msg.value);
    |        }
    |    }
  at /unique_chucks/20/0x651a09d8009a1bb132725025d6374dbe1f2a44f7.sol(247)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'BokkyPooBahsFixedSupplyTokenFactory':
    |    function recoverTokens(address token, uint tokens) public onlyOwner {
    |        if (token == address(0)) {
  > |            owner.transfer((tokens == 0 ? address(this).balance : tokens));
    |        } else {
    |            ERC20Interface(token).transfer(owner, tokens == 0 ? ERC20Interface(token).balanceOf(address(this)) : tokens);
  at /unique_chucks/20/0x651a09d8009a1bb132725025d6374dbe1f2a44f7.sol(61)

[31mViolation[0m for UnrestrictedWrite in contract 'BokkyPooBahsFixedSupplyTokenFactory':
    |pragma solidity ^0.5.4;
    |
  > |// ----------------------------------------------------------------------------
    |// BokkyPooBah's Fixed Supply Token ðŸ‘Š + Factory v1.10
    |//
  at /unique_chucks/20/0x651a09d8009a1bb132725025d6374dbe1f2a44f7.sol(3)

[31mViolation[0m for UnrestrictedWrite in contract 'BokkyPooBahsFixedSupplyTokenFactory':
    |    function init(address _owner) public {
    |        require(owner == address(0));
  > |        owner = address(uint160(_owner));
    |    }
    |    function transferOwnership(address _newOwner) public onlyOwner {
  at /unique_chucks/20/0x651a09d8009a1bb132725025d6374dbe1f2a44f7.sol(48)

[31mViolation[0m for UnrestrictedWrite in contract 'BokkyPooBahsFixedSupplyTokenFactory':
    |        token = new FixedSupplyToken();
    |        token.init(msg.sender, symbol, name, decimals, totalSupply);
  > |        isChild[address(token)] = true;
    |        children.push(address(token));
    |        emit TokenDeployed(owner, address(token), symbol, name, decimals, totalSupply);
  at /unique_chucks/20/0x651a09d8009a1bb132725025d6374dbe1f2a44f7.sol(243)

[31mViolation[0m for UnrestrictedWrite in contract 'BokkyPooBahsFixedSupplyTokenFactory':
    |        token.init(msg.sender, symbol, name, decimals, totalSupply);
    |        isChild[address(token)] = true;
  > |        children.push(address(token));
    |        emit TokenDeployed(owner, address(token), symbol, name, decimals, totalSupply);
    |        if (msg.value > 0) {
  at /unique_chucks/20/0x651a09d8009a1bb132725025d6374dbe1f2a44f7.sol(244)

[33mWarning[0m for UnrestrictedWrite in contract 'BokkyPooBahsFixedSupplyTokenFactory':
    |    }
    |    function transferOwnership(address _newOwner) public onlyOwner {
  > |        newOwner = _newOwner;
    |    }
    |    function acceptOwnership() public {
  at /unique_chucks/20/0x651a09d8009a1bb132725025d6374dbe1f2a44f7.sol(51)

[33mWarning[0m for UnrestrictedWrite in contract 'BokkyPooBahsFixedSupplyTokenFactory':
    |        require(msg.sender == newOwner);
    |        emit OwnershipTransferred(owner, newOwner);
  > |        owner = address(uint160(newOwner));
    |        newOwner = address(0);
    |    }
  at /unique_chucks/20/0x651a09d8009a1bb132725025d6374dbe1f2a44f7.sol(56)

[33mWarning[0m for UnrestrictedWrite in contract 'BokkyPooBahsFixedSupplyTokenFactory':
    |        emit OwnershipTransferred(owner, newOwner);
    |        owner = address(uint160(newOwner));
  > |        newOwner = address(0);
    |    }
    |    function recoverTokens(address token, uint tokens) public onlyOwner {
  at /unique_chucks/20/0x651a09d8009a1bb132725025d6374dbe1f2a44f7.sol(57)

[33mWarning[0m for UnrestrictedWrite in contract 'BokkyPooBahsFixedSupplyTokenFactory':
    |        require(newAddress == address(0));
    |        emit FactoryDeprecated(_newAddress);
  > |        newAddress = _newAddress;
    |    }
    |    function setMinimumFee(uint _minimumFee) public onlyOwner {
  at /unique_chucks/20/0x651a09d8009a1bb132725025d6374dbe1f2a44f7.sol(231)

[33mWarning[0m for UnrestrictedWrite in contract 'BokkyPooBahsFixedSupplyTokenFactory':
    |    function setMinimumFee(uint _minimumFee) public onlyOwner {
    |        emit MinimumFeeUpdated(minimumFee, _minimumFee);
  > |        minimumFee = _minimumFee;
    |    }
    |    function deployTokenContract(string memory symbol, string memory name, uint8 decimals, uint totalSupply) public payable returns (FixedSupplyToken token) {
  at /unique_chucks/20/0x651a09d8009a1bb132725025d6374dbe1f2a44f7.sol(235)

[31mViolation[0m for TODReceiver in contract 'FixedSupplyToken':
    |    function recoverTokens(address token, uint tokens) public onlyOwner {
    |        if (token == address(0)) {
  > |            owner.transfer((tokens == 0 ? address(this).balance : tokens));
    |        } else {
    |            ERC20Interface(token).transfer(owner, tokens == 0 ? ERC20Interface(token).balanceOf(address(this)) : tokens);
  at /unique_chucks/20/0x651a09d8009a1bb132725025d6374dbe1f2a44f7.sol(61)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'FixedSupplyToken':
    |    function recoverTokens(address token, uint tokens) public onlyOwner {
    |        if (token == address(0)) {
  > |            owner.transfer((tokens == 0 ? address(this).balance : tokens));
    |        } else {
    |            ERC20Interface(token).transfer(owner, tokens == 0 ? ERC20Interface(token).balanceOf(address(this)) : tokens);
  at /unique_chucks/20/0x651a09d8009a1bb132725025d6374dbe1f2a44f7.sol(61)

[31mViolation[0m for UnrestrictedWrite in contract 'FixedSupplyToken':
    |    function init(address _owner) public {
    |        require(owner == address(0));
  > |        owner = address(uint160(_owner));
    |    }
    |    function transferOwnership(address _newOwner) public onlyOwner {
  at /unique_chucks/20/0x651a09d8009a1bb132725025d6374dbe1f2a44f7.sol(48)

[31mViolation[0m for UnrestrictedWrite in contract 'FixedSupplyToken':
    |// FixedSupplyToken ðŸ‘Š = ERC20 + symbol + name + decimals + approveAndCall
    |// ----------------------------------------------------------------------------
  > |contract FixedSupplyToken is TokenInterface, Owned {
    |    using SafeMath for uint;
    |
  at /unique_chucks/20/0x651a09d8009a1bb132725025d6374dbe1f2a44f7.sol(111)

[31mViolation[0m for UnrestrictedWrite in contract 'FixedSupplyToken':
    |        _symbol = symbol;
    |        _name = name;
  > |        _decimals = decimals;
    |        _totalSupply = fixedSupply;
    |        balances[tokenOwner] = _totalSupply;
  at /unique_chucks/20/0x651a09d8009a1bb132725025d6374dbe1f2a44f7.sol(126)

[31mViolation[0m for UnrestrictedWrite in contract 'FixedSupplyToken':
    |        _name = name;
    |        _decimals = decimals;
  > |        _totalSupply = fixedSupply;
    |        balances[tokenOwner] = _totalSupply;
    |        emit Transfer(address(0), tokenOwner, _totalSupply);
  at /unique_chucks/20/0x651a09d8009a1bb132725025d6374dbe1f2a44f7.sol(127)

[31mViolation[0m for UnrestrictedWrite in contract 'FixedSupplyToken':
    |        _decimals = decimals;
    |        _totalSupply = fixedSupply;
  > |        balances[tokenOwner] = _totalSupply;
    |        emit Transfer(address(0), tokenOwner, _totalSupply);
    |    }
  at /unique_chucks/20/0x651a09d8009a1bb132725025d6374dbe1f2a44f7.sol(128)

[31mViolation[0m for UnrestrictedWrite in contract 'FixedSupplyToken':
    |    function transfer(address to, uint tokens) public returns (bool success) {
    |        balances[msg.sender] = balances[msg.sender].sub(tokens);
  > |        balances[to] = balances[to].add(tokens);
    |        emit Transfer(msg.sender, to, tokens);
    |        return true;
  at /unique_chucks/20/0x651a09d8009a1bb132725025d6374dbe1f2a44f7.sol(148)

[31mViolation[0m for UnrestrictedWrite in contract 'FixedSupplyToken':
    |    }
    |    function transferFrom(address from, address to, uint tokens) public returns (bool success) {
  > |        balances[from] = balances[from].sub(tokens);
    |        allowed[from][msg.sender] = allowed[from][msg.sender].sub(tokens);
    |        balances[to] = balances[to].add(tokens);
  at /unique_chucks/20/0x651a09d8009a1bb132725025d6374dbe1f2a44f7.sol(158)

[31mViolation[0m for UnrestrictedWrite in contract 'FixedSupplyToken':
    |        balances[from] = balances[from].sub(tokens);
    |        allowed[from][msg.sender] = allowed[from][msg.sender].sub(tokens);
  > |        balances[to] = balances[to].add(tokens);
    |        emit Transfer(from, to, tokens);
    |        return true;
  at /unique_chucks/20/0x651a09d8009a1bb132725025d6374dbe1f2a44f7.sol(160)

[33mWarning[0m for UnrestrictedWrite in contract 'FixedSupplyToken':
    |    }
    |    function transferOwnership(address _newOwner) public onlyOwner {
  > |        newOwner = _newOwner;
    |    }
    |    function acceptOwnership() public {
  at /unique_chucks/20/0x651a09d8009a1bb132725025d6374dbe1f2a44f7.sol(51)

[33mWarning[0m for UnrestrictedWrite in contract 'FixedSupplyToken':
    |        require(msg.sender == newOwner);
    |        emit OwnershipTransferred(owner, newOwner);
  > |        owner = address(uint160(newOwner));
    |        newOwner = address(0);
    |    }
  at /unique_chucks/20/0x651a09d8009a1bb132725025d6374dbe1f2a44f7.sol(56)

[33mWarning[0m for UnrestrictedWrite in contract 'FixedSupplyToken':
    |        emit OwnershipTransferred(owner, newOwner);
    |        owner = address(uint160(newOwner));
  > |        newOwner = address(0);
    |    }
    |    function recoverTokens(address token, uint tokens) public onlyOwner {
  at /unique_chucks/20/0x651a09d8009a1bb132725025d6374dbe1f2a44f7.sol(57)

[31mViolation[0m for MissingInputValidation in contract 'Owned':
    |    }
    |
  > |    function init(address _owner) public {
    |        require(owner == address(0));
    |        owner = address(uint160(_owner));
  at /unique_chucks/20/0x651a09d8009a1bb132725025d6374dbe1f2a44f7.sol(46)

[31mViolation[0m for MissingInputValidation in contract 'Owned':
    |        owner = address(uint160(_owner));
    |    }
  > |    function transferOwnership(address _newOwner) public onlyOwner {
    |        newOwner = _newOwner;
    |    }
  at /unique_chucks/20/0x651a09d8009a1bb132725025d6374dbe1f2a44f7.sol(50)

[31mViolation[0m for TODReceiver in contract 'Owned':
    |    function recoverTokens(address token, uint tokens) public onlyOwner {
    |        if (token == address(0)) {
  > |            owner.transfer((tokens == 0 ? address(this).balance : tokens));
    |        } else {
    |            ERC20Interface(token).transfer(owner, tokens == 0 ? ERC20Interface(token).balanceOf(address(this)) : tokens);
  at /unique_chucks/20/0x651a09d8009a1bb132725025d6374dbe1f2a44f7.sol(61)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'Owned':
    |    function recoverTokens(address token, uint tokens) public onlyOwner {
    |        if (token == address(0)) {
  > |            owner.transfer((tokens == 0 ? address(this).balance : tokens));
    |        } else {
    |            ERC20Interface(token).transfer(owner, tokens == 0 ? ERC20Interface(token).balanceOf(address(this)) : tokens);
  at /unique_chucks/20/0x651a09d8009a1bb132725025d6374dbe1f2a44f7.sol(61)

[31mViolation[0m for UnrestrictedWrite in contract 'Owned':
    |    function init(address _owner) public {
    |        require(owner == address(0));
  > |        owner = address(uint160(_owner));
    |    }
    |    function transferOwnership(address _newOwner) public onlyOwner {
  at /unique_chucks/20/0x651a09d8009a1bb132725025d6374dbe1f2a44f7.sol(48)

[33mWarning[0m for UnrestrictedWrite in contract 'Owned':
    |    }
    |    function transferOwnership(address _newOwner) public onlyOwner {
  > |        newOwner = _newOwner;
    |    }
    |    function acceptOwnership() public {
  at /unique_chucks/20/0x651a09d8009a1bb132725025d6374dbe1f2a44f7.sol(51)

[33mWarning[0m for UnrestrictedWrite in contract 'Owned':
    |        require(msg.sender == newOwner);
    |        emit OwnershipTransferred(owner, newOwner);
  > |        owner = address(uint160(newOwner));
    |        newOwner = address(0);
    |    }
  at /unique_chucks/20/0x651a09d8009a1bb132725025d6374dbe1f2a44f7.sol(56)

[33mWarning[0m for UnrestrictedWrite in contract 'Owned':
    |        emit OwnershipTransferred(owner, newOwner);
    |        owner = address(uint160(newOwner));
  > |        newOwner = address(0);
    |    }
    |    function recoverTokens(address token, uint tokens) public onlyOwner {
  at /unique_chucks/20/0x651a09d8009a1bb132725025d6374dbe1f2a44f7.sol(57)