Processing contract: /unique_chucks/16/0x62a036ac10c449675d08054a1b7ad624e170fba2.sol:ERC20_Contract
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[33mWarning[0m for TODAmount in contract 'ERC20_Contract':
    |		balanceOf[management] -= buyNum;
    |		balanceOf[msg.sender] += buyNum;
  > |        management.transfer(msg.value);
    |        emit SendEth(management, msg.value);
    |        emit Transfer(management, msg.sender, buyNum);
  at /unique_chucks/16/0x62a036ac10c449675d08054a1b7ad624e170fba2.sol(53)

[31mViolation[0m for TODReceiver in contract 'ERC20_Contract':
    |		balanceOf[management] -= buyNum;
    |		balanceOf[msg.sender] += buyNum;
  > |        management.transfer(msg.value);
    |        emit SendEth(management, msg.value);
    |        emit Transfer(management, msg.sender, buyNum);
  at /unique_chucks/16/0x62a036ac10c449675d08054a1b7ad624e170fba2.sol(53)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'ERC20_Contract':
    |		balanceOf[management] -= buyNum;
    |		balanceOf[msg.sender] += buyNum;
  > |        management.transfer(msg.value);
    |        emit SendEth(management, msg.value);
    |        emit Transfer(management, msg.sender, buyNum);
  at /unique_chucks/16/0x62a036ac10c449675d08054a1b7ad624e170fba2.sol(53)

[31mViolation[0m for UnrestrictedWrite in contract 'ERC20_Contract':
    |		uint256 buyNum = msg.value /10000 * raiseOption;
    |		require(buyNum <= balanceOf[management]);
  > |		balanceOf[management] -= buyNum;
    |		balanceOf[msg.sender] += buyNum;
    |        management.transfer(msg.value);
  at /unique_chucks/16/0x62a036ac10c449675d08054a1b7ad624e170fba2.sol(51)

[33mWarning[0m for UnrestrictedWrite in contract 'ERC20_Contract':
    |        uint previousBalances = balanceOf[_from] + balanceOf[_to];
    |        balanceOf[_from] -= _value;
  > |        balanceOf[_to] += _value;
    |        emit Transfer(_from, _to, _value);
    |        assert(balanceOf[_from] + balanceOf[_to] == previousBalances);
  at /unique_chucks/16/0x62a036ac10c449675d08054a1b7ad624e170fba2.sol(80)

[33mWarning[0m for UnrestrictedWrite in contract 'ERC20_Contract':
    |	
    |	function setRaiseOption(uint256 _price)public onlyAdmin{
  > |		raiseOption = _price;
    |	}
    |	
  at /unique_chucks/16/0x62a036ac10c449675d08054a1b7ad624e170fba2.sol(86)

[33mWarning[0m for UnrestrictedWrite in contract 'ERC20_Contract':
    |	
    |	function setRaiseOpen(bool _open) public onlyAdmin{
  > |	    openRaise = _open;
    |	}
    |	
  at /unique_chucks/16/0x62a036ac10c449675d08054a1b7ad624e170fba2.sol(90)

[33mWarning[0m for UnrestrictedWrite in contract 'ERC20_Contract':
    |	
    |	function setAct(bool _isAct) public onlyAdmin{
  > |		isActivity = _isAct;
    |	}
    |	
  at /unique_chucks/16/0x62a036ac10c449675d08054a1b7ad624e170fba2.sol(94)

[33mWarning[0m for UnrestrictedWrite in contract 'ERC20_Contract':
    |	
    |	function changeAdmin(address _address) public onlyAdmin{
  > |       admin = _address;
    |    }
    |    
  at /unique_chucks/16/0x62a036ac10c449675d08054a1b7ad624e170fba2.sol(98)

[33mWarning[0m for UnrestrictedWrite in contract 'ERC20_Contract':
    |    
    |    function changeFinance(address payable _address) public onlyAdmin{
  > |       management = _address;
    |    }
    |	
  at /unique_chucks/16/0x62a036ac10c449675d08054a1b7ad624e170fba2.sol(102)