Processing contract: /unique_contracts/0x91e64f39c1fe14492e8fdf5a8b0f305bd218c8a1.sol:ERC20
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0x91e64f39c1fe14492e8fdf5a8b0f305bd218c8a1.sol:IController
Processing contract: /unique_contracts/0x91e64f39c1fe14492e8fdf5a8b0f305bd218c8a1.sol:IERC20
Processing contract: /unique_contracts/0x91e64f39c1fe14492e8fdf5a8b0f305bd218c8a1.sol:Ownable
Processing contract: /unique_contracts/0x91e64f39c1fe14492e8fdf5a8b0f305bd218c8a1.sol:VodiX
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for MissingInputValidation in contract 'ERC20':
    |    
    |    // Constant Functions
  > |    function balanceOf(address _owner) public view returns (uint256) {
    |        return IController(owner()).balanceOf(_owner);
    |    }
  at /unique_contracts/0x91e64f39c1fe14492e8fdf5a8b0f305bd218c8a1.sol(130)

[31mViolation[0m for MissingInputValidation in contract 'ERC20':
    |    }
    |
  > |    function allowance(address _owner, address _spender) public view returns (uint256) {
    |        return IController(owner()).allowance(_owner, _spender);
    |    }
  at /unique_contracts/0x91e64f39c1fe14492e8fdf5a8b0f305bd218c8a1.sol(138)

[31mViolation[0m for MissingInputValidation in contract 'ERC20':
    |    }
    |
  > |    function mint(address _to, uint256 _amount) public onlyOwner returns (bool) {
    |        emit Mint(_to, _amount);
    |        emit Transfer(address(0), _to, _amount);
  at /unique_contracts/0x91e64f39c1fe14492e8fdf5a8b0f305bd218c8a1.sol(142)

[31mViolation[0m for MissingInputValidation in contract 'ERC20':
    |    }
    |
  > |    function mintToggle(bool status) public onlyOwner returns (bool) {
    |        emit MintToggle(status);
    |        return true;
  at /unique_contracts/0x91e64f39c1fe14492e8fdf5a8b0f305bd218c8a1.sol(148)

[31mViolation[0m for MissingInputValidation in contract 'ERC20':
    |
    |    // public functions
  > |    function approve(address _spender, uint256 _value) public returns (bool) {
    |        IController(owner()).approve(msg.sender, _spender, _value);
    |        emit Approval(msg.sender, _spender, _value);
  at /unique_contracts/0x91e64f39c1fe14492e8fdf5a8b0f305bd218c8a1.sol(154)

[31mViolation[0m for MissingInputValidation in contract 'ERC20':
    |    }
    |
  > |    function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {
    |        uint256 allowed = IController(owner()).increaseAllowance(msg.sender, spender, addedValue);
    |        emit Approval(msg.sender, spender, allowed);
  at /unique_contracts/0x91e64f39c1fe14492e8fdf5a8b0f305bd218c8a1.sol(160)

[31mViolation[0m for MissingInputValidation in contract 'ERC20':
    |    }
    |    
  > |    function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {
    |        uint256 allowed = IController(owner()).decreaseAllowance(msg.sender, spender, subtractedValue);
    |        emit Approval(msg.sender, spender, allowed);
  at /unique_contracts/0x91e64f39c1fe14492e8fdf5a8b0f305bd218c8a1.sol(166)

[31mViolation[0m for MissingInputValidation in contract 'ERC20':
    |    }
    |
  > |    function transfer(address to, uint value) public returns (bool) {
    |        IController(owner()).transfer(msg.sender, to, value);
    |        emit Transfer(msg.sender, to, value);
  at /unique_contracts/0x91e64f39c1fe14492e8fdf5a8b0f305bd218c8a1.sol(172)

[31mViolation[0m for MissingInputValidation in contract 'ERC20':
    |    }
    |
  > |    function transferFrom(address _from, address _to, uint256 _amount) public returns (bool) {
    |        uint256 allowed = IController(owner()).transferFrom(msg.sender, _from, _to, _amount);
    |        emit Approval(_from, msg.sender, allowed);
  at /unique_contracts/0x91e64f39c1fe14492e8fdf5a8b0f305bd218c8a1.sol(178)

[31mViolation[0m for MissingInputValidation in contract 'ERC20':
    |    }
    |
  > |    function burn(uint256 value) public returns (bool) {
    |        IController(owner()).burn(msg.sender, value);
    |        emit Transfer(msg.sender, address(0), value);
  at /unique_contracts/0x91e64f39c1fe14492e8fdf5a8b0f305bd218c8a1.sol(185)

[31mViolation[0m for MissingInputValidation in contract 'ERC20':
    |    }
    |
  > |    function burnFrom(address from, uint256 value) public returns (bool) {
    |        uint256 allowed = IController(owner()).burnFrom(msg.sender, from, value);
    |        emit Approval(from, msg.sender, allowed);
  at /unique_contracts/0x91e64f39c1fe14492e8fdf5a8b0f305bd218c8a1.sol(191)

[31mViolation[0m for UnrestrictedWrite in contract 'ERC20':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_contracts/0x91e64f39c1fe14492e8fdf5a8b0f305bd218c8a1.sol(71)

[33mWarning[0m for UnrestrictedWrite in contract 'ERC20':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipTransferred(_owner, address(0));
  > |        _owner = address(0);
    |    }
    |
  at /unique_contracts/0x91e64f39c1fe14492e8fdf5a8b0f305bd218c8a1.sol(53)

[33mWarning[0m for UnrestrictedWrite in contract 'ERC20':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_contracts/0x91e64f39c1fe14492e8fdf5a8b0f305bd218c8a1.sol(71)

[31mViolation[0m for LockedEther in contract 'VodiX':
    |
    |
  > |contract VodiX is ERC20 {
    |
    |    string internal _name = "Vodi X";
  at /unique_contracts/0x91e64f39c1fe14492e8fdf5a8b0f305bd218c8a1.sol(200)

[31mViolation[0m for MissingInputValidation in contract 'VodiX':
    |    
    |    // Constant Functions
  > |    function balanceOf(address _owner) public view returns (uint256) {
    |        return IController(owner()).balanceOf(_owner);
    |    }
  at /unique_contracts/0x91e64f39c1fe14492e8fdf5a8b0f305bd218c8a1.sol(130)

[31mViolation[0m for MissingInputValidation in contract 'VodiX':
    |    }
    |
  > |    function allowance(address _owner, address _spender) public view returns (uint256) {
    |        return IController(owner()).allowance(_owner, _spender);
    |    }
  at /unique_contracts/0x91e64f39c1fe14492e8fdf5a8b0f305bd218c8a1.sol(138)

[31mViolation[0m for MissingInputValidation in contract 'VodiX':
    |    }
    |
  > |    function mint(address _to, uint256 _amount) public onlyOwner returns (bool) {
    |        emit Mint(_to, _amount);
    |        emit Transfer(address(0), _to, _amount);
  at /unique_contracts/0x91e64f39c1fe14492e8fdf5a8b0f305bd218c8a1.sol(142)

[31mViolation[0m for MissingInputValidation in contract 'VodiX':
    |    }
    |
  > |    function mintToggle(bool status) public onlyOwner returns (bool) {
    |        emit MintToggle(status);
    |        return true;
  at /unique_contracts/0x91e64f39c1fe14492e8fdf5a8b0f305bd218c8a1.sol(148)

[31mViolation[0m for MissingInputValidation in contract 'VodiX':
    |
    |    // public functions
  > |    function approve(address _spender, uint256 _value) public returns (bool) {
    |        IController(owner()).approve(msg.sender, _spender, _value);
    |        emit Approval(msg.sender, _spender, _value);
  at /unique_contracts/0x91e64f39c1fe14492e8fdf5a8b0f305bd218c8a1.sol(154)

[31mViolation[0m for MissingInputValidation in contract 'VodiX':
    |    }
    |
  > |    function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {
    |        uint256 allowed = IController(owner()).increaseAllowance(msg.sender, spender, addedValue);
    |        emit Approval(msg.sender, spender, allowed);
  at /unique_contracts/0x91e64f39c1fe14492e8fdf5a8b0f305bd218c8a1.sol(160)

[31mViolation[0m for MissingInputValidation in contract 'VodiX':
    |    }
    |    
  > |    function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {
    |        uint256 allowed = IController(owner()).decreaseAllowance(msg.sender, spender, subtractedValue);
    |        emit Approval(msg.sender, spender, allowed);
  at /unique_contracts/0x91e64f39c1fe14492e8fdf5a8b0f305bd218c8a1.sol(166)

[31mViolation[0m for MissingInputValidation in contract 'VodiX':
    |    }
    |
  > |    function transfer(address to, uint value) public returns (bool) {
    |        IController(owner()).transfer(msg.sender, to, value);
    |        emit Transfer(msg.sender, to, value);
  at /unique_contracts/0x91e64f39c1fe14492e8fdf5a8b0f305bd218c8a1.sol(172)

[31mViolation[0m for MissingInputValidation in contract 'VodiX':
    |    }
    |
  > |    function transferFrom(address _from, address _to, uint256 _amount) public returns (bool) {
    |        uint256 allowed = IController(owner()).transferFrom(msg.sender, _from, _to, _amount);
    |        emit Approval(_from, msg.sender, allowed);
  at /unique_contracts/0x91e64f39c1fe14492e8fdf5a8b0f305bd218c8a1.sol(178)

[31mViolation[0m for MissingInputValidation in contract 'VodiX':
    |    }
    |
  > |    function burn(uint256 value) public returns (bool) {
    |        IController(owner()).burn(msg.sender, value);
    |        emit Transfer(msg.sender, address(0), value);
  at /unique_contracts/0x91e64f39c1fe14492e8fdf5a8b0f305bd218c8a1.sol(185)

[31mViolation[0m for MissingInputValidation in contract 'VodiX':
    |    }
    |
  > |    function burnFrom(address from, uint256 value) public returns (bool) {
    |        uint256 allowed = IController(owner()).burnFrom(msg.sender, from, value);
    |        emit Approval(from, msg.sender, allowed);
  at /unique_contracts/0x91e64f39c1fe14492e8fdf5a8b0f305bd218c8a1.sol(191)

[31mViolation[0m for UnrestrictedWrite in contract 'VodiX':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_contracts/0x91e64f39c1fe14492e8fdf5a8b0f305bd218c8a1.sol(71)

[33mWarning[0m for UnrestrictedWrite in contract 'VodiX':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipTransferred(_owner, address(0));
  > |        _owner = address(0);
    |    }
    |
  at /unique_contracts/0x91e64f39c1fe14492e8fdf5a8b0f305bd218c8a1.sol(53)

[33mWarning[0m for UnrestrictedWrite in contract 'VodiX':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_contracts/0x91e64f39c1fe14492e8fdf5a8b0f305bd218c8a1.sol(71)