Processing contract: /unique_chucks/35/0xe10339af2c2b22706ea5d4cbb713a49d4b7ab2fc.sol:SuperToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for LockedEther in contract 'SuperToken':
    |pragma solidity ^0.5.0;
    |
  > |contract SuperToken {
    |    
    |    event Transfer(address indexed from, address indexed to, uint tokens);
  at /unique_chucks/35/0xe10339af2c2b22706ea5d4cbb713a49d4b7ab2fc.sol(3)

[31mViolation[0m for UnrestrictedWrite in contract 'SuperToken':
    |        require (balances[msg.sender] >= _value) ;
    |        balances[msg.sender] -= _value;
  > |        balances[_to] += _value;
    |        emit Transfer(msg.sender, _to, _value);
    |        return true;
  at /unique_chucks/35/0xe10339af2c2b22706ea5d4cbb713a49d4b7ab2fc.sol(23)

[31mViolation[0m for UnrestrictedWrite in contract 'SuperToken':
    |    function mint(uint256 amount) payable public {
    |        require(msg.value >= _rate*amount ) ; 
  > |        _totalSupply += amount;
    |        balances[msg.sender] += amount;
    |    }  
  at /unique_chucks/35/0xe10339af2c2b22706ea5d4cbb713a49d4b7ab2fc.sol(30)

[31mViolation[0m for UnrestrictedWrite in contract 'SuperToken':
    |        require (balances[msg.sender] >= amount) ;
    |        balances[msg.sender] -=amount;
  > |        _totalSupply -= amount;
    |        return true;
    |    }  
  at /unique_chucks/35/0xe10339af2c2b22706ea5d4cbb713a49d4b7ab2fc.sol(37)