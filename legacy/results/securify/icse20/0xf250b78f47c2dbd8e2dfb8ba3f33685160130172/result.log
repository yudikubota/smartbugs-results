Processing contract: /unique_chucks/18/0xf250b78f47c2dbd8e2dfb8ba3f33685160130172.sol:Ownable
Processing contract: /unique_chucks/18/0xf250b78f47c2dbd8e2dfb8ba3f33685160130172.sol:Whitelisting
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for LockedEther in contract 'Whitelisting':
    |
    |
  > |contract Whitelisting is Ownable {
    |    mapping(address => bool) public isInvestorApproved;
    |    mapping(address => bool) public isInvestorPaymentApproved;
  at /unique_chucks/18/0xf250b78f47c2dbd8e2dfb8ba3f33685160130172.sol(70)

[31mViolation[0m for UnrestrictedWrite in contract 'Whitelisting':
    |    function approveInvestorsInBulk(address[] calldata toApprove) external onlyOwner {
    |        for (uint i=0; i<toApprove.length; i++) {
  > |            isInvestorApproved[toApprove[i]] = true;
    |            emit Approved(toApprove[i]);
    |        }
  at /unique_chucks/18/0xf250b78f47c2dbd8e2dfb8ba3f33685160130172.sol(89)

[31mViolation[0m for UnrestrictedWrite in contract 'Whitelisting':
    |    function disapproveInvestorsInBulk(address[] calldata toDisapprove) external onlyOwner {
    |        for (uint i=0; i<toDisapprove.length; i++) {
  > |            delete isInvestorApproved[toDisapprove[i]];
    |            emit Disapproved(toDisapprove[i]);
    |        }
  at /unique_chucks/18/0xf250b78f47c2dbd8e2dfb8ba3f33685160130172.sol(101)

[31mViolation[0m for UnrestrictedWrite in contract 'Whitelisting':
    |    function approveInvestorsPaymentInBulk(address[] calldata toApprove) external onlyOwner {
    |        for (uint i=0; i<toApprove.length; i++) {
  > |            isInvestorPaymentApproved[toApprove[i]] = true;
    |            emit PaymentApproved(toApprove[i]);
    |        }
  at /unique_chucks/18/0xf250b78f47c2dbd8e2dfb8ba3f33685160130172.sol(114)

[31mViolation[0m for UnrestrictedWrite in contract 'Whitelisting':
    |    function disapproveInvestorsPaymentInBulk(address[] calldata toDisapprove) external onlyOwner {
    |        for (uint i=0; i<toDisapprove.length; i++) {
  > |            delete isInvestorPaymentApproved[toDisapprove[i]];
    |            emit PaymentDisapproved(toDisapprove[i]);
    |        }
  at /unique_chucks/18/0xf250b78f47c2dbd8e2dfb8ba3f33685160130172.sol(126)

[33mWarning[0m for UnrestrictedWrite in contract 'Whitelisting':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipTransferred(_owner, address(0));
  > |        _owner = address(0);
    |    }
    |
  at /unique_chucks/18/0xf250b78f47c2dbd8e2dfb8ba3f33685160130172.sol(47)

[33mWarning[0m for UnrestrictedWrite in contract 'Whitelisting':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_chucks/18/0xf250b78f47c2dbd8e2dfb8ba3f33685160130172.sol(65)

[33mWarning[0m for UnrestrictedWrite in contract 'Whitelisting':
    |    //Token distribution approval (KYC results)
    |    function approveInvestor(address toApprove) public onlyOwner {
  > |        isInvestorApproved[toApprove] = true;
    |        emit Approved(toApprove);
    |    }
  at /unique_chucks/18/0xf250b78f47c2dbd8e2dfb8ba3f33685160130172.sol(83)

[33mWarning[0m for UnrestrictedWrite in contract 'Whitelisting':
    |
    |    function disapproveInvestor(address toDisapprove) public onlyOwner {
  > |        delete isInvestorApproved[toDisapprove];
    |        emit Disapproved(toDisapprove);
    |    }
  at /unique_chucks/18/0xf250b78f47c2dbd8e2dfb8ba3f33685160130172.sol(95)

[33mWarning[0m for UnrestrictedWrite in contract 'Whitelisting':
    |    //Investor payment approval (For private sale)
    |    function approveInvestorPayment(address toApprove) public onlyOwner {
  > |        isInvestorPaymentApproved[toApprove] = true;
    |        emit PaymentApproved(toApprove);
    |    }
  at /unique_chucks/18/0xf250b78f47c2dbd8e2dfb8ba3f33685160130172.sol(108)

[33mWarning[0m for UnrestrictedWrite in contract 'Whitelisting':
    |
    |    function disapproveInvestorapproveInvestorPayment(address toDisapprove) public onlyOwner {
  > |        delete isInvestorPaymentApproved[toDisapprove];
    |        emit PaymentDisapproved(toDisapprove);
    |    }
  at /unique_chucks/18/0xf250b78f47c2dbd8e2dfb8ba3f33685160130172.sol(120)