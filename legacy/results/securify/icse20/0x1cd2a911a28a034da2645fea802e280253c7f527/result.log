Processing contract: /unique_chucks/14/0x1cd2a911a28a034da2645fea802e280253c7f527.sol:Claimable
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/14/0x1cd2a911a28a034da2645fea802e280253c7f527.sol:ERC20
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/14/0x1cd2a911a28a034da2645fea802e280253c7f527.sol:ERC20Burnable
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/14/0x1cd2a911a28a034da2645fea802e280253c7f527.sol:IERC20
Processing contract: /unique_chucks/14/0x1cd2a911a28a034da2645fea802e280253c7f527.sol:Mobu
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/14/0x1cd2a911a28a034da2645fea802e280253c7f527.sol:Ownable
Processing contract: /unique_chucks/14/0x1cd2a911a28a034da2645fea802e280253c7f527.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for MissingInputValidation in contract 'Claimable':
    |   * @param newOwner The address to transfer ownership to.
    |   */
  > |  function transferOwnership(address newOwner) onlyOwner public {
    |    pendingOwner = newOwner;
    |  }
  at /unique_chucks/14/0x1cd2a911a28a034da2645fea802e280253c7f527.sol(159)

[33mWarning[0m for UnrestrictedWrite in contract 'Claimable':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipTransferred(_owner, address(0));
  > |        _owner = address(0);
    |    }
    |
  at /unique_chucks/14/0x1cd2a911a28a034da2645fea802e280253c7f527.sol(117)

[33mWarning[0m for UnrestrictedWrite in contract 'Claimable':
    |   */
    |  function transferOwnership(address newOwner) onlyOwner public {
  > |    pendingOwner = newOwner;
    |  }
    |
  at /unique_chucks/14/0x1cd2a911a28a034da2645fea802e280253c7f527.sol(160)

[33mWarning[0m for UnrestrictedWrite in contract 'Claimable':
    |  function claimOwnership() onlyPendingOwner public {
    |    emit OwnershipTransferred(owner(), pendingOwner);
  > |    _owner = pendingOwner;
    |    pendingOwner = address(0);
    |  }
  at /unique_chucks/14/0x1cd2a911a28a034da2645fea802e280253c7f527.sol(168)

[33mWarning[0m for UnrestrictedWrite in contract 'Claimable':
    |    emit OwnershipTransferred(owner(), pendingOwner);
    |    _owner = pendingOwner;
  > |    pendingOwner = address(0);
    |  }
    |}
  at /unique_chucks/14/0x1cd2a911a28a034da2645fea802e280253c7f527.sol(169)

[31mViolation[0m for LockedEther in contract 'Mobu':
    |}
    |
  > |contract Mobu is ERC20Burnable, Claimable {
    |    string public constant name    = "MOBU";  
    |    string public constant symbol  = "MOBU";  
  at /unique_chucks/14/0x1cd2a911a28a034da2645fea802e280253c7f527.sol(405)

[31mViolation[0m for UnrestrictedWrite in contract 'Mobu':
    |        require (now > beginUnlockDate + 30 days);
    |        require (!bountyTokensClaimed);
  > |        bountyTokensClaimed = true;
    |        _transfer(address(this), bountyAddress, 6000000e18);
    |    }
  at /unique_chucks/14/0x1cd2a911a28a034da2645fea802e280253c7f527.sol(458)

[31mViolation[0m for UnrestrictedWrite in contract 'Mobu':
    |        require (now > beginUnlockDate + 365 days);
    |        require (!teamTokensClaimed);
  > |        teamTokensClaimed = true;
    |        _transfer(address(this), teamAddress, 18000000e18);
    |    }
  at /unique_chucks/14/0x1cd2a911a28a034da2645fea802e280253c7f527.sol(466)

[31mViolation[0m for UnrestrictedWrite in contract 'Mobu':
    |        require (now > beginUnlockDate + 90 days);
    |        require (!advisorsTokensClaimed);
  > |        advisorsTokensClaimed = true;
    |        _transfer(address(this), advisorsAddress, 6000000e18);
    |    }
  at /unique_chucks/14/0x1cd2a911a28a034da2645fea802e280253c7f527.sol(474)

[33mWarning[0m for UnrestrictedWrite in contract 'Mobu':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipTransferred(_owner, address(0));
  > |        _owner = address(0);
    |    }
    |
  at /unique_chucks/14/0x1cd2a911a28a034da2645fea802e280253c7f527.sol(117)

[33mWarning[0m for UnrestrictedWrite in contract 'Mobu':
    |   */
    |  function transferOwnership(address newOwner) onlyOwner public {
  > |    pendingOwner = newOwner;
    |  }
    |
  at /unique_chucks/14/0x1cd2a911a28a034da2645fea802e280253c7f527.sol(160)

[33mWarning[0m for UnrestrictedWrite in contract 'Mobu':
    |  function claimOwnership() onlyPendingOwner public {
    |    emit OwnershipTransferred(owner(), pendingOwner);
  > |    _owner = pendingOwner;
    |    pendingOwner = address(0);
    |  }
  at /unique_chucks/14/0x1cd2a911a28a034da2645fea802e280253c7f527.sol(168)

[33mWarning[0m for UnrestrictedWrite in contract 'Mobu':
    |    emit OwnershipTransferred(owner(), pendingOwner);
    |    _owner = pendingOwner;
  > |    pendingOwner = address(0);
    |  }
    |}
  at /unique_chucks/14/0x1cd2a911a28a034da2645fea802e280253c7f527.sol(169)

[33mWarning[0m for UnrestrictedWrite in contract 'Mobu':
    |    function startUnlockingPeriod() public onlyOwner {
    |        require (beginUnlockDate == 0);
  > |        beginUnlockDate = now;
    |    }
    |    
  at /unique_chucks/14/0x1cd2a911a28a034da2645fea802e280253c7f527.sol(451)