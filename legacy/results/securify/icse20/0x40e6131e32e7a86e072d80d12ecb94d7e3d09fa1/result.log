Processing contract: /unique_chucks/46/0x40e6131e32e7a86e072d80d12ecb94d7e3d09fa1.sol:AITBotToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/46/0x40e6131e32e7a86e072d80d12ecb94d7e3d09fa1.sol:ContractReceiver
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/46/0x40e6131e32e7a86e072d80d12ecb94d7e3d09fa1.sol:IERC20
Processing contract: /unique_chucks/46/0x40e6131e32e7a86e072d80d12ecb94d7e3d09fa1.sol:IERC223
Processing contract: /unique_chucks/46/0x40e6131e32e7a86e072d80d12ecb94d7e3d09fa1.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/46/0x40e6131e32e7a86e072d80d12ecb94d7e3d09fa1.sol:StandardToken
[31mViolation[0m for LockedEther in contract 'AITBotToken':
    |}
    |
  > |contract AITBotToken  is StandardToken {
    |    string public constant name = "AITBot Token ";
    |    string public constant symbol = "AITBOT";
  at /unique_chucks/46/0x40e6131e32e7a86e072d80d12ecb94d7e3d09fa1.sol(212)

[33mWarning[0m for UnrestrictedWrite in contract 'AITBotToken':
    |        require(_value <= balances[_from]);
    |        require(_value <= allowed[_from][msg.sender]);
  > |        balances[_from] = balances[_from].sub(_value);
    |        balances[_to] = balances[_to].add(_value);
    |        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
  at /unique_chucks/46/0x40e6131e32e7a86e072d80d12ecb94d7e3d09fa1.sol(123)

[33mWarning[0m for UnrestrictedWrite in contract 'AITBotToken':
    |        require(_value <= allowed[_from][msg.sender]);
    |        balances[_from] = balances[_from].sub(_value);
  > |        balances[_to] = balances[_to].add(_value);
    |        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
    |        emit Transfer(_from, _to, _value);
  at /unique_chucks/46/0x40e6131e32e7a86e072d80d12ecb94d7e3d09fa1.sol(124)

[33mWarning[0m for UnrestrictedWrite in contract 'AITBotToken':
    |        require(balances[msg.sender] >= _value);
    |        balances[msg.sender] = balances[msg.sender].sub(_value);
  > |        balances[_to] = balances[_to].add(_value);
    |        emit Transfer(msg.sender, _to, _value);
    |        emit Transfer(msg.sender, _to, _value, _data);
  at /unique_chucks/46/0x40e6131e32e7a86e072d80d12ecb94d7e3d09fa1.sol(193)

[33mWarning[0m for UnrestrictedWrite in contract 'AITBotToken':
    |        require(balances[msg.sender] >= _value);
    |        balances[msg.sender] = balances[msg.sender].sub(_value);
  > |        balances[_to] = balances[_to].add(_value);
    |        ContractReceiver receiver = ContractReceiver(_to);
    |        receiver.tokenFallback(msg.sender, _value, _data);
  at /unique_chucks/46/0x40e6131e32e7a86e072d80d12ecb94d7e3d09fa1.sol(203)