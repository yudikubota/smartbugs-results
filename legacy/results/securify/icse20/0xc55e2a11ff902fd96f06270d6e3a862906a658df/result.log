Processing contract: /unique_chucks/35/0xc55e2a11ff902fd96f06270d6e3a862906a658df.sol:MyEtherFund
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/35/0xc55e2a11ff902fd96f06270d6e3a862906a658df.sol:MyEtherFundControl
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for DAOConstantGas in contract 'MyEtherFund':
    |
    |
  > |        if (devAddress.send(investment / 100 * devCommission)) {
    |            // project fee
    |        }
  at /unique_chucks/35/0xc55e2a11ff902fd96f06270d6e3a862906a658df.sol(191)

[31mViolation[0m for DAOConstantGas in contract 'MyEtherFund':
    |        }
    |
  > |        if (advertiserAddress.send(investment / 100 * advertisingCommission)) {
    |            // advert fee
    |        }
  at /unique_chucks/35/0xc55e2a11ff902fd96f06270d6e3a862906a658df.sol(195)

[31mViolation[0m for DAOConstantGas in contract 'MyEtherFund':
    |        // user have referrer
    |        if (user.referrer != address(0)) {
  > |            if (user.referrer.send(bonusAmount)) { // pay referrer commission
    |                emit Payout(user.referrer, bonusAmount, "referral", msg.sender);
    |            }
  at /unique_chucks/35/0xc55e2a11ff902fd96f06270d6e3a862906a658df.sol(204)

[31mViolation[0m for DAOConstantGas in contract 'MyEtherFund':
    |        }
    |
  > |        msg.sender.transfer(amount);
    |        emit Payout(msg.sender, amount, "payout", address(0));
    |
  at /unique_chucks/35/0xc55e2a11ff902fd96f06270d6e3a862906a658df.sol(265)

[33mWarning[0m for DAOConstantGas in contract 'MyEtherFund':
    |
    |            if (user.deposits == 1) { // only the first deposit cashback
  > |                if (msg.sender.send(bonusAmount)) {
    |                    emit Payout(msg.sender, bonusAmount, "cash-back", address(0));
    |                }
  at /unique_chucks/35/0xc55e2a11ff902fd96f06270d6e3a862906a658df.sol(209)

[33mWarning[0m for DAOConstantGas in contract 'MyEtherFund':
    |            }
    |        } else if (top_investor.addr != address(0) && top_investor.from + 24 hours > now) {
  > |            if (top_investor.addr.send(bonusAmount)) { // pay bonus to current Perseus
    |                emit Payout(top_investor.addr, bonusAmount, "perseus", msg.sender);
    |            }
  at /unique_chucks/35/0xc55e2a11ff902fd96f06270d6e3a862906a658df.sol(214)

[31mViolation[0m for TODAmount in contract 'MyEtherFund':
    |        }
    |
  > |        msg.sender.transfer(amount);
    |        emit Payout(msg.sender, amount, "payout", address(0));
    |
  at /unique_chucks/35/0xc55e2a11ff902fd96f06270d6e3a862906a658df.sol(265)

[33mWarning[0m for TODAmount in contract 'MyEtherFund':
    |        if (pause) {
    |            doRestart();
  > |            msg.sender.transfer(msg.value); // return all money to sender
    |
    |            return;
  at /unique_chucks/35/0xc55e2a11ff902fd96f06270d6e3a862906a658df.sol(151)

[33mWarning[0m for TODAmount in contract 'MyEtherFund':
    |        // user have referrer
    |        if (user.referrer != address(0)) {
  > |            if (user.referrer.send(bonusAmount)) { // pay referrer commission
    |                emit Payout(user.referrer, bonusAmount, "referral", msg.sender);
    |            }
  at /unique_chucks/35/0xc55e2a11ff902fd96f06270d6e3a862906a658df.sol(204)

[33mWarning[0m for TODAmount in contract 'MyEtherFund':
    |
    |            if (user.deposits == 1) { // only the first deposit cashback
  > |                if (msg.sender.send(bonusAmount)) {
    |                    emit Payout(msg.sender, bonusAmount, "cash-back", address(0));
    |                }
  at /unique_chucks/35/0xc55e2a11ff902fd96f06270d6e3a862906a658df.sol(209)

[33mWarning[0m for TODAmount in contract 'MyEtherFund':
    |            }
    |        } else if (top_investor.addr != address(0) && top_investor.from + 24 hours > now) {
  > |            if (top_investor.addr.send(bonusAmount)) { // pay bonus to current Perseus
    |                emit Payout(top_investor.addr, bonusAmount, "perseus", msg.sender);
    |            }
  at /unique_chucks/35/0xc55e2a11ff902fd96f06270d6e3a862906a658df.sol(214)

[31mViolation[0m for TODReceiver in contract 'MyEtherFund':
    |        }
    |
  > |        if (advertiserAddress.send(investment / 100 * advertisingCommission)) {
    |            // advert fee
    |        }
  at /unique_chucks/35/0xc55e2a11ff902fd96f06270d6e3a862906a658df.sol(195)

[31mViolation[0m for TODReceiver in contract 'MyEtherFund':
    |            }
    |        } else if (top_investor.addr != address(0) && top_investor.from + 24 hours > now) {
  > |            if (top_investor.addr.send(bonusAmount)) { // pay bonus to current Perseus
    |                emit Payout(top_investor.addr, bonusAmount, "perseus", msg.sender);
    |            }
  at /unique_chucks/35/0xc55e2a11ff902fd96f06270d6e3a862906a658df.sol(214)

[33mWarning[0m for TODReceiver in contract 'MyEtherFund':
    |
    |
  > |        if (devAddress.send(investment / 100 * devCommission)) {
    |            // project fee
    |        }
  at /unique_chucks/35/0xc55e2a11ff902fd96f06270d6e3a862906a658df.sol(191)

[33mWarning[0m for TODReceiver in contract 'MyEtherFund':
    |        // user have referrer
    |        if (user.referrer != address(0)) {
  > |            if (user.referrer.send(bonusAmount)) { // pay referrer commission
    |                emit Payout(user.referrer, bonusAmount, "referral", msg.sender);
    |            }
  at /unique_chucks/35/0xc55e2a11ff902fd96f06270d6e3a862906a658df.sol(204)

[31mViolation[0m for UnhandledException in contract 'MyEtherFund':
    |
    |
  > |        if (devAddress.send(investment / 100 * devCommission)) {
    |            // project fee
    |        }
  at /unique_chucks/35/0xc55e2a11ff902fd96f06270d6e3a862906a658df.sol(191)

[31mViolation[0m for UnhandledException in contract 'MyEtherFund':
    |        }
    |
  > |        if (advertiserAddress.send(investment / 100 * advertisingCommission)) {
    |            // advert fee
    |        }
  at /unique_chucks/35/0xc55e2a11ff902fd96f06270d6e3a862906a658df.sol(195)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'MyEtherFund':
    |        if (pause) {
    |            doRestart();
  > |            msg.sender.transfer(msg.value); // return all money to sender
    |
    |            return;
  at /unique_chucks/35/0xc55e2a11ff902fd96f06270d6e3a862906a658df.sol(151)

[31mViolation[0m for UnrestrictedWrite in contract 'MyEtherFund':
    |
    |
  > |contract MyEtherFund {
    |    using MyEtherFundControl for MyEtherFundControl.data;
    |
  at /unique_chucks/35/0xc55e2a11ff902fd96f06270d6e3a862906a658df.sol(41)

[31mViolation[0m for UnrestrictedWrite in contract 'MyEtherFund':
    |
    |        for (uint i = addresses.length - 1; i > 0; i--) {
  > |            delete investors[addresses[i]]; // remove investor
    |            addresses.length -= 1; // decrease addr length
    |            if (txs++ == 150) { // 150 to prevent gas over use
  at /unique_chucks/35/0xc55e2a11ff902fd96f06270d6e3a862906a658df.sol(279)

[31mViolation[0m for UnrestrictedWrite in contract 'MyEtherFund':
    |
    |        emit NextRoundStarted(round, now, depositAmount);
  > |        pause = false; // stop pause, play
    |        round += 1; // increase round number
    |        depositAmount = 0;
  at /unique_chucks/35/0xc55e2a11ff902fd96f06270d6e3a862906a658df.sol(287)

[31mViolation[0m for UnrestrictedWrite in contract 'MyEtherFund':
    |        emit NextRoundStarted(round, now, depositAmount);
    |        pause = false; // stop pause, play
  > |        round += 1; // increase round number
    |        depositAmount = 0;
    |        paidAmount = 0;
  at /unique_chucks/35/0xc55e2a11ff902fd96f06270d6e3a862906a658df.sol(288)

[31mViolation[0m for UnrestrictedWrite in contract 'MyEtherFund':
    |        pause = false; // stop pause, play
    |        round += 1; // increase round number
  > |        depositAmount = 0;
    |        paidAmount = 0;
    |        lastPaymentDate = now;
  at /unique_chucks/35/0xc55e2a11ff902fd96f06270d6e3a862906a658df.sol(289)

[31mViolation[0m for UnrestrictedWrite in contract 'MyEtherFund':
    |        round += 1; // increase round number
    |        depositAmount = 0;
  > |        paidAmount = 0;
    |        lastPaymentDate = now;
    |    }
  at /unique_chucks/35/0xc55e2a11ff902fd96f06270d6e3a862906a658df.sol(290)

[31mViolation[0m for UnrestrictedWrite in contract 'MyEtherFund':
    |        depositAmount = 0;
    |        paidAmount = 0;
  > |        lastPaymentDate = now;
    |    }
    |
  at /unique_chucks/35/0xc55e2a11ff902fd96f06270d6e3a862906a658df.sol(291)

[33mWarning[0m for UnrestrictedWrite in contract 'MyEtherFund':
    |        require(maxAmountPerDay >= myEtherFundControl.min && maxAmountPerDay <= myEtherFundControl.max, "incorrect amount");
    |        require(msg.sender == devAddress, "Only dev team have access to this function");
  > |        myEtherFundControl.maxAmountPerDay = maxAmountPerDay;
    |    }
    |
  at /unique_chucks/35/0xc55e2a11ff902fd96f06270d6e3a862906a658df.sol(136)