Processing contract: /unique_contracts/0x1affed30268fd7515c97c2c517bcf15b2fc539c0.sol:DATACHAIN
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0x1affed30268fd7515c97c2c517bcf15b2fc539c0.sol:ERC1820Client
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0x1affed30268fd7515c97c2c517bcf15b2fc539c0.sol:ERC1820Registry
Processing contract: /unique_contracts/0x1affed30268fd7515c97c2c517bcf15b2fc539c0.sol:ERC20Token
Processing contract: /unique_contracts/0x1affed30268fd7515c97c2c517bcf15b2fc539c0.sol:ERC777BaseToken
Processing contract: /unique_contracts/0x1affed30268fd7515c97c2c517bcf15b2fc539c0.sol:ERC777ERC20BaseToken
Processing contract: /unique_contracts/0x1affed30268fd7515c97c2c517bcf15b2fc539c0.sol:ERC777Token
Processing contract: /unique_contracts/0x1affed30268fd7515c97c2c517bcf15b2fc539c0.sol:ERC777TokensRecipient
Processing contract: /unique_contracts/0x1affed30268fd7515c97c2c517bcf15b2fc539c0.sol:ERC777TokensSender
Processing contract: /unique_contracts/0x1affed30268fd7515c97c2c517bcf15b2fc539c0.sol:Ownable
Processing contract: /unique_contracts/0x1affed30268fd7515c97c2c517bcf15b2fc539c0.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for LockedEther in contract 'DATACHAIN':
    |
    |
  > |contract DATACHAIN is ERC777ERC20BaseToken {
    |    string internal dName = "DATACHAIN";
    |    string internal dSymbol = "DC";
  at /unique_contracts/0x1affed30268fd7515c97c2c517bcf15b2fc539c0.sol(705)

[31mViolation[0m for RepeatedCall in contract 'DATACHAIN':
    |        address senderImplementation = interfaceAddr(_from, "ERC777TokensSender");
    |        if (senderImplementation == address(0)) { return; }
  > |        ERC777TokensSender(senderImplementation).tokensToSend(
    |            _operator, _from, _to, _amount, _data, _operatorData);
    |    }
  at /unique_contracts/0x1affed30268fd7515c97c2c517bcf15b2fc539c0.sol(449)

[33mWarning[0m for RepeatedCall in contract 'DATACHAIN':
    |        address recipientImplementation = interfaceAddr(_to, "ERC777TokensRecipient");
    |        if (recipientImplementation != address(0)) {
  > |            ERC777TokensRecipient(recipientImplementation).tokensReceived(
    |                _operator, _from, _to, _amount, _data, _operatorData);
    |        } else if (_preventLocking) {
  at /unique_contracts/0x1affed30268fd7515c97c2c517bcf15b2fc539c0.sol(420)