/unique_chucks/8/0xe0c0f5ce4e746eaa048ae5db5c61b6b1ef3b56ed.sol:14:5: Error: Functions are not allowed to have the same name as the contract. If you intend this to be a constructor, use "constructor(...) { ... }" to define it.
    function CryptoSim() public{
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0xe0c0f5ce4e746eaa048ae5db5c61b6b1ef3b56ed.sol:1:1: Warning: Source file does not specify required compiler version! Consider adding "pragma solidity ^0.5.8;"
contract CryptoSim{
^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0xe0c0f5ce4e746eaa048ae5db5c61b6b1ef3b56ed.sol:14:5: Warning: This declaration shadows an existing declaration.
    function CryptoSim() public{
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0xe0c0f5ce4e746eaa048ae5db5c61b6b1ef3b56ed.sol:1:1: The shadowed declaration is here:
contract CryptoSim{
^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0xe0c0f5ce4e746eaa048ae5db5c61b6b1ef3b56ed.sol:19:12: Error: Operator == not compatible with types address and int_const 0
        if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
           ^----------------------^
/unique_chucks/8/0xe0c0f5ce4e746eaa048ae5db5c61b6b1ef3b56ed.sol:43:9: Error: "send" and "transfer" are only available for objects of type "address payable", not "address".
        ceoAddress.transfer(fee);
        ^-----------------^
Exception in thread "main" java.lang.RuntimeException
	at ch.securify.CompilationHelpers.compileContracts(CompilationHelpers.java:115)
	at ch.securify.Main.processSolidityFile(Main.java:98)
	at ch.securify.Main.main(Main.java:254)