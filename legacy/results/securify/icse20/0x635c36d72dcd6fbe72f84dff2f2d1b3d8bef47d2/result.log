Processing contract: /unique_chucks/21/0x635c36d72dcd6fbe72f84dff2f2d1b3d8bef47d2.sol:IERC20
Processing contract: /unique_chucks/21/0x635c36d72dcd6fbe72f84dff2f2d1b3d8bef47d2.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/21/0x635c36d72dcd6fbe72f84dff2f2d1b3d8bef47d2.sol:Trickle
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for RepeatedCall in contract 'Trickle':
    |
    |        record.releasedAmount = record.releasedAmount.add(unreleased);
  > |        record.token.transfer(record.recipient, unreleased);
    |        
    |        emit Withdraw(
  at /unique_chucks/21/0x635c36d72dcd6fbe72f84dff2f2d1b3d8bef47d2.sol(178)

[33mWarning[0m for UnrestrictedWrite in contract 'Trickle':
    |        require(recipient != address(0x0));
    |        
  > |        uint256 agreementId = ++lastAgreementId;
    |        
    |        agreements[agreementId] = Agreement({
  at /unique_chucks/21/0x635c36d72dcd6fbe72f84dff2f2d1b3d8bef47d2.sol(124)

[33mWarning[0m for UnrestrictedWrite in contract 'Trickle':
    |        uint256 agreementId = ++lastAgreementId;
    |        
  > |        agreements[agreementId] = Agreement({
    |            token: token,
    |            recipient: recipient,
  at /unique_chucks/21/0x635c36d72dcd6fbe72f84dff2f2d1b3d8bef47d2.sol(126)