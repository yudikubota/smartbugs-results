Processing contract: /unique_chucks/37/0x5f7e012dad671a3119314da464bc8f1c5a94a9da.sol:Buffer
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/37/0x5f7e012dad671a3119314da464bc8f1c5a94a9da.sol:CBOR
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/37/0x5f7e012dad671a3119314da464bc8f1c5a94a9da.sol:CappedCrowdsale
Processing contract: /unique_chucks/37/0x5f7e012dad671a3119314da464bc8f1c5a94a9da.sol:Crowdsale
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/37/0x5f7e012dad671a3119314da464bc8f1c5a94a9da.sol:ERC20
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/37/0x5f7e012dad671a3119314da464bc8f1c5a94a9da.sol:ERC20Capped
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/37/0x5f7e012dad671a3119314da464bc8f1c5a94a9da.sol:ERC20Detailed
Processing contract: /unique_chucks/37/0x5f7e012dad671a3119314da464bc8f1c5a94a9da.sol:ERC20Mintable
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/37/0x5f7e012dad671a3119314da464bc8f1c5a94a9da.sol:ExchangeInteractor
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/37/0x5f7e012dad671a3119314da464bc8f1c5a94a9da.sol:IERC20
Processing contract: /unique_chucks/37/0x5f7e012dad671a3119314da464bc8f1c5a94a9da.sol:IExchangeInteractor
Processing contract: /unique_chucks/37/0x5f7e012dad671a3119314da464bc8f1c5a94a9da.sol:MintedCrowdsale
Processing contract: /unique_chucks/37/0x5f7e012dad671a3119314da464bc8f1c5a94a9da.sol:MinterRole
Processing contract: /unique_chucks/37/0x5f7e012dad671a3119314da464bc8f1c5a94a9da.sol:OraclizeAddrResolverI
Processing contract: /unique_chucks/37/0x5f7e012dad671a3119314da464bc8f1c5a94a9da.sol:OraclizeI
Processing contract: /unique_chucks/37/0x5f7e012dad671a3119314da464bc8f1c5a94a9da.sol:Ownable
Processing contract: /unique_chucks/37/0x5f7e012dad671a3119314da464bc8f1c5a94a9da.sol:Pausable
Processing contract: /unique_chucks/37/0x5f7e012dad671a3119314da464bc8f1c5a94a9da.sol:PausableCrowdsale
Processing contract: /unique_chucks/37/0x5f7e012dad671a3119314da464bc8f1c5a94a9da.sol:PauserRole
Processing contract: /unique_chucks/37/0x5f7e012dad671a3119314da464bc8f1c5a94a9da.sol:ReentrancyGuard
Processing contract: /unique_chucks/37/0x5f7e012dad671a3119314da464bc8f1c5a94a9da.sol:Roles
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/37/0x5f7e012dad671a3119314da464bc8f1c5a94a9da.sol:SafeERC20
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/37/0x5f7e012dad671a3119314da464bc8f1c5a94a9da.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/37/0x5f7e012dad671a3119314da464bc8f1c5a94a9da.sol:ThresholdWhitelistedCrowdsale
Processing contract: /unique_chucks/37/0x5f7e012dad671a3119314da464bc8f1c5a94a9da.sol:TimedCrowdsale
Processing contract: /unique_chucks/37/0x5f7e012dad671a3119314da464bc8f1c5a94a9da.sol:VrParkIcoStep
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/37/0x5f7e012dad671a3119314da464bc8f1c5a94a9da.sol:VrParkToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/37/0x5f7e012dad671a3119314da464bc8f1c5a94a9da.sol:WhitelistAdminRole
Processing contract: /unique_chucks/37/0x5f7e012dad671a3119314da464bc8f1c5a94a9da.sol:WhitelistedRole
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/37/0x5f7e012dad671a3119314da464bc8f1c5a94a9da.sol:solcChecker
Processing contract: /unique_chucks/37/0x5f7e012dad671a3119314da464bc8f1c5a94a9da.sol:usingOraclize
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[33mWarning[0m for TODAmount in contract 'Crowdsale':
    |     */
    |    function _forwardFunds() internal {
  > |        _wallet.transfer(msg.value);
    |    }
    |}
  at /unique_chucks/37/0x5f7e012dad671a3119314da464bc8f1c5a94a9da.sol(503)

[31mViolation[0m for UnrestrictedWrite in contract 'Crowdsale':
    |     */
    |    modifier nonReentrant() {
  > |        _guardCounter += 1;
    |        uint256 localCounter = _guardCounter;
    |        _;
  at /unique_chucks/37/0x5f7e012dad671a3119314da464bc8f1c5a94a9da.sol(320)

[33mWarning[0m for UnrestrictedWrite in contract 'Crowdsale':
    |
    |        // update state
  > |        _weiRaised = _weiRaised.add(weiAmount);
    |
    |        _processPurchase(beneficiary, tokens);
  at /unique_chucks/37/0x5f7e012dad671a3119314da464bc8f1c5a94a9da.sol(425)

[31mViolation[0m for RepeatedCall in contract 'ExchangeInteractor':
    |            oraclize_setNetwork(networkID_auto);
    |        }
  > |        if (address(oraclize) != OAR.getAddress()) {
    |            oraclize = OraclizeI(OAR.getAddress());
    |        }
  at /unique_chucks/37/0x5f7e012dad671a3119314da464bc8f1c5a94a9da.sol(1372)

[31mViolation[0m for RepeatedCall in contract 'ExchangeInteractor':
    |        }
    |        if (address(oraclize) != OAR.getAddress()) {
  > |            oraclize = OraclizeI(OAR.getAddress());
    |        }
    |        _;
  at /unique_chucks/37/0x5f7e012dad671a3119314da464bc8f1c5a94a9da.sol(1373)

[31mViolation[0m for RepeatedCall in contract 'ExchangeInteractor':
    |
    |    function oraclize_cbAddress() oraclizeAPI internal returns (address _callbackAddress) {
  > |        return oraclize.cbAddress();
    |    }
    |
  at /unique_chucks/37/0x5f7e012dad671a3119314da464bc8f1c5a94a9da.sol(1914)

[31mViolation[0m for RepeatedCall in contract 'ExchangeInteractor':
    |
    |    function updatePrice() public onlyOwner {
  > |        if (oraclize.getPrice("URL") > address(this).balance) {
    |            emit NewQuery("Insufficient funds");
    |        } else {
  at /unique_chucks/37/0x5f7e012dad671a3119314da464bc8f1c5a94a9da.sol(2456)

[33mWarning[0m for RepeatedCall in contract 'ExchangeInteractor':
    |            oraclize_setNetwork(networkID_auto);
    |        }
  > |        if (address(oraclize) != OAR.getAddress()) {
    |            oraclize = OraclizeI(OAR.getAddress());
    |        }
  at /unique_chucks/37/0x5f7e012dad671a3119314da464bc8f1c5a94a9da.sol(1372)

[33mWarning[0m for RepeatedCall in contract 'ExchangeInteractor':
    |
    |    function oraclize_query(uint _timestamp, string memory _datasource, string memory _arg) oraclizeAPI internal returns (bytes32 _id) {
  > |        uint price = oraclize.getPrice(_datasource);
    |        if (price > 1 ether + tx.gasprice * 200000) {
    |            return 0; // Unexpectedly high price
  at /unique_chucks/37/0x5f7e012dad671a3119314da464bc8f1c5a94a9da.sol(1461)

[33mWarning[0m for RepeatedCall in contract 'ExchangeInteractor':
    |            return 0; // Unexpectedly high price
    |        }
  > |        return oraclize.query.value(price)(_timestamp, _datasource, _arg);
    |    }
    |
  at /unique_chucks/37/0x5f7e012dad671a3119314da464bc8f1c5a94a9da.sol(1465)

[31mViolation[0m for TODAmount in contract 'ExchangeInteractor':
    |
    |    function close() public onlyOwner {
  > |        msg.sender.transfer(address(this).balance);
    |    }
    |
  at /unique_chucks/37/0x5f7e012dad671a3119314da464bc8f1c5a94a9da.sol(2468)

[33mWarning[0m for TODAmount in contract 'ExchangeInteractor':
    |            return 0; // Unexpectedly high price
    |        }
  > |        return oraclize.query.value(price)(_timestamp, _datasource, _arg);
    |    }
    |
  at /unique_chucks/37/0x5f7e012dad671a3119314da464bc8f1c5a94a9da.sol(1465)

[33mWarning[0m for TODReceiver in contract 'ExchangeInteractor':
    |            return 0; // Unexpectedly high price
    |        }
  > |        return oraclize.query.value(price)(_timestamp, _datasource, _arg);
    |    }
    |
  at /unique_chucks/37/0x5f7e012dad671a3119314da464bc8f1c5a94a9da.sol(1465)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'ExchangeInteractor':
    |            return 0; // Unexpectedly high price
    |        }
  > |        return oraclize.query.value(price)(_timestamp, _datasource, _arg);
    |    }
    |
  at /unique_chucks/37/0x5f7e012dad671a3119314da464bc8f1c5a94a9da.sol(1465)

[33mWarning[0m for UnrestrictedWrite in contract 'ExchangeInteractor':
    |        }
    |        if (address(oraclize) != OAR.getAddress()) {
  > |            oraclize = OraclizeI(OAR.getAddress());
    |        }
    |        _;
  at /unique_chucks/37/0x5f7e012dad671a3119314da464bc8f1c5a94a9da.sol(1373)

[33mWarning[0m for UnrestrictedWrite in contract 'ExchangeInteractor':
    | * 
    | */
  > |contract ExchangeInteractor is usingOraclize, IExchangeInteractor, Ownable {
    |
    |    using SafeMath for uint256;
  at /unique_chucks/37/0x5f7e012dad671a3119314da464bc8f1c5a94a9da.sol(2413)

[33mWarning[0m for UnrestrictedWrite in contract 'ExchangeInteractor':
    |    function __callback(bytes32 myid, string memory result, bytes memory proof) public {
    |        require(msg.sender == oraclize_cbAddress(), "Invoked not by oraclize address!");
  > |        usdEthRate = parseInt(result, 5).div(100000);
    |        emit NewUsdEthRate(usdEthRate);
    |        updatePrice();
  at /unique_chucks/37/0x5f7e012dad671a3119314da464bc8f1c5a94a9da.sol(2450)

[31mViolation[0m for RepeatedCall in contract 'VrParkIcoStep':
    |
    |    function _getTokenAmount(uint256 weiAmount) internal view returns(uint256) {
  > |        uint256 usdEth = interactor.getCurrentPrice();
    |        uint256 rate = rate();
    |        return usdEth.mul(weiAmount).mul(bonusMultiplier).div(ONE_HUNDRED_PERCENT).div(rate);
  at /unique_chucks/37/0x5f7e012dad671a3119314da464bc8f1c5a94a9da.sol(1002)

[33mWarning[0m for TODAmount in contract 'VrParkIcoStep':
    |     */
    |    function _forwardFunds() internal {
  > |        _wallet.transfer(msg.value);
    |    }
    |}
  at /unique_chucks/37/0x5f7e012dad671a3119314da464bc8f1c5a94a9da.sol(503)

[33mWarning[0m for TODReceiver in contract 'VrParkIcoStep':
    |     */
    |    function _forwardFunds() internal {
  > |        _wallet.transfer(msg.value);
    |    }
    |}
  at /unique_chucks/37/0x5f7e012dad671a3119314da464bc8f1c5a94a9da.sol(503)

[31mViolation[0m for UnrestrictedWrite in contract 'VrParkIcoStep':
    |     */
    |    modifier nonReentrant() {
  > |        _guardCounter += 1;
    |        uint256 localCounter = _guardCounter;
    |        _;
  at /unique_chucks/37/0x5f7e012dad671a3119314da464bc8f1c5a94a9da.sol(320)

[31mViolation[0m for LockedEther in contract 'VrParkToken':
    |}
    |
  > |contract VrParkToken is ERC20Mintable, ERC20Capped, ERC20Detailed, Ownable {
    |
    |    uint8 internal constant DECIMALS = 18;
  at /unique_chucks/37/0x5f7e012dad671a3119314da464bc8f1c5a94a9da.sol(901)