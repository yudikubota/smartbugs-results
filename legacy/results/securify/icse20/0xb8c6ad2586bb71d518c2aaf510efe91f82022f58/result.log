Processing contract: /unique_chucks/8/0xb8c6ad2586bb71d518c2aaf510efe91f82022f58.sol:Administrator
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/8/0xb8c6ad2586bb71d518c2aaf510efe91f82022f58.sol:Blacklisted
Processing contract: /unique_chucks/8/0xb8c6ad2586bb71d518c2aaf510efe91f82022f58.sol:ERC20
Processing contract: /unique_chucks/8/0xb8c6ad2586bb71d518c2aaf510efe91f82022f58.sol:GomicsToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/8/0xb8c6ad2586bb71d518c2aaf510efe91f82022f58.sol:Ownable
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/8/0xb8c6ad2586bb71d518c2aaf510efe91f82022f58.sol:Pausable
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/8/0xb8c6ad2586bb71d518c2aaf510efe91f82022f58.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/8/0xb8c6ad2586bb71d518c2aaf510efe91f82022f58.sol:StandardToken
[33mWarning[0m for UnrestrictedWrite in contract 'Administrator':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipRenounced(owner);
  > |        owner = address(0);
    |    }
    |
  at /unique_chucks/8/0xb8c6ad2586bb71d518c2aaf510efe91f82022f58.sol(101)

[33mWarning[0m for UnrestrictedWrite in contract 'Administrator':
    |		require(_newOwner != address(0), "New owner cannot be address(0)");
    |		emit OwnershipTransferred(owner, _newOwner);
  > |        owner = _newOwner;
    |    }
    |}
  at /unique_chucks/8/0xb8c6ad2586bb71d518c2aaf510efe91f82022f58.sol(111)

[33mWarning[0m for UnrestrictedWrite in contract 'Administrator':
    |        require(adminLength < adminMaxLength, "Exceeded the maximum number of administrators");
    |        
  > |        admin[_addr] = true;
    |        adminLength++; 
    |        
  at /unique_chucks/8/0xb8c6ad2586bb71d518c2aaf510efe91f82022f58.sol(160)

[33mWarning[0m for UnrestrictedWrite in contract 'Administrator':
    |        
    |        admin[_addr] = true;
  > |        adminLength++; 
    |        
    |        emit AddAdmin(_addr);
  at /unique_chucks/8/0xb8c6ad2586bb71d518c2aaf510efe91f82022f58.sol(161)

[33mWarning[0m for UnrestrictedWrite in contract 'Administrator':
    |    */
    |    function removeAdmin(address _addr) onlyOwner isAdmin(_addr) public returns (bool) {
  > |        delete admin[_addr];
    |        adminLength--;
    |        
  at /unique_chucks/8/0xb8c6ad2586bb71d518c2aaf510efe91f82022f58.sol(171)

[33mWarning[0m for UnrestrictedWrite in contract 'Administrator':
    |    function removeAdmin(address _addr) onlyOwner isAdmin(_addr) public returns (bool) {
    |        delete admin[_addr];
  > |        adminLength--;
    |        
    |        emit RemoveAdmin(_addr);
  at /unique_chucks/8/0xb8c6ad2586bb71d518c2aaf510efe91f82022f58.sol(172)

[31mViolation[0m for LockedEther in contract 'GomicsToken':
    |* @dev	GomicsToken main contract 
    |*/
  > |contract GomicsToken is StandardToken {
    |    string public constant name = "Gomics";
    |    string public constant symbol = "GOM";
  at /unique_chucks/8/0xb8c6ad2586bb71d518c2aaf510efe91f82022f58.sol(388)

[33mWarning[0m for UnrestrictedWrite in contract 'GomicsToken':
    |
    |        balances[msg.sender] = balances[msg.sender].sub(_value);
  > |        balances[_to] = balances[_to].add(_value);
    |
    |        emit Transfer(msg.sender, _to, _value);
  at /unique_chucks/8/0xb8c6ad2586bb71d518c2aaf510efe91f82022f58.sol(307)

[33mWarning[0m for UnrestrictedWrite in contract 'GomicsToken':
    |        require(_to != address(0));
    |
  > |        balances[_from] = balances[_from].sub(_value);
    |        balances[_to] = balances[_to].add(_value);
    |        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
  at /unique_chucks/8/0xb8c6ad2586bb71d518c2aaf510efe91f82022f58.sol(323)

[33mWarning[0m for UnrestrictedWrite in contract 'GomicsToken':
    |
    |        balances[_from] = balances[_from].sub(_value);
  > |        balances[_to] = balances[_to].add(_value);
    |        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
    |
  at /unique_chucks/8/0xb8c6ad2586bb71d518c2aaf510efe91f82022f58.sol(324)

[33mWarning[0m for UnrestrictedWrite in contract 'GomicsToken':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipRenounced(owner);
  > |        owner = address(0);
    |    }
    |
  at /unique_chucks/8/0xb8c6ad2586bb71d518c2aaf510efe91f82022f58.sol(101)

[33mWarning[0m for UnrestrictedWrite in contract 'GomicsToken':
    |		require(_newOwner != address(0), "New owner cannot be address(0)");
    |		emit OwnershipTransferred(owner, _newOwner);
  > |        owner = _newOwner;
    |    }
    |}
  at /unique_chucks/8/0xb8c6ad2586bb71d518c2aaf510efe91f82022f58.sol(111)

[33mWarning[0m for UnrestrictedWrite in contract 'GomicsToken':
    |        require(adminLength < adminMaxLength, "Exceeded the maximum number of administrators");
    |        
  > |        admin[_addr] = true;
    |        adminLength++; 
    |        
  at /unique_chucks/8/0xb8c6ad2586bb71d518c2aaf510efe91f82022f58.sol(160)

[33mWarning[0m for UnrestrictedWrite in contract 'GomicsToken':
    |        
    |        admin[_addr] = true;
  > |        adminLength++; 
    |        
    |        emit AddAdmin(_addr);
  at /unique_chucks/8/0xb8c6ad2586bb71d518c2aaf510efe91f82022f58.sol(161)

[33mWarning[0m for UnrestrictedWrite in contract 'GomicsToken':
    |    */
    |    function removeAdmin(address _addr) onlyOwner isAdmin(_addr) public returns (bool) {
  > |        delete admin[_addr];
    |        adminLength--;
    |        
  at /unique_chucks/8/0xb8c6ad2586bb71d518c2aaf510efe91f82022f58.sol(171)

[33mWarning[0m for UnrestrictedWrite in contract 'GomicsToken':
    |    function removeAdmin(address _addr) onlyOwner isAdmin(_addr) public returns (bool) {
    |        delete admin[_addr];
  > |        adminLength--;
    |        
    |        emit RemoveAdmin(_addr);
  at /unique_chucks/8/0xb8c6ad2586bb71d518c2aaf510efe91f82022f58.sol(172)

[33mWarning[0m for UnrestrictedWrite in contract 'GomicsToken':
    |		}
    |		
  > |		blacklist[_address] = _bool;
    |		emit SetBlacklist(_address, _bool);
    |	}
  at /unique_chucks/8/0xb8c6ad2586bb71d518c2aaf510efe91f82022f58.sol(208)

[33mWarning[0m for UnrestrictedWrite in contract 'GomicsToken':
    |    */
    |    function pause() public onlyOwner whenNotPaused {
  > |        paused = true;
    |        emit Pause();
    |    }
  at /unique_chucks/8/0xb8c6ad2586bb71d518c2aaf510efe91f82022f58.sol(243)

[33mWarning[0m for UnrestrictedWrite in contract 'GomicsToken':
    |    */
    |    function unpause() public onlyOwner whenPaused {
  > |        paused = false;
    |        emit Unpause();
    |    }
  at /unique_chucks/8/0xb8c6ad2586bb71d518c2aaf510efe91f82022f58.sol(251)

[33mWarning[0m for UnrestrictedWrite in contract 'Ownable':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipRenounced(owner);
  > |        owner = address(0);
    |    }
    |
  at /unique_chucks/8/0xb8c6ad2586bb71d518c2aaf510efe91f82022f58.sol(101)

[33mWarning[0m for UnrestrictedWrite in contract 'Ownable':
    |		require(_newOwner != address(0), "New owner cannot be address(0)");
    |		emit OwnershipTransferred(owner, _newOwner);
  > |        owner = _newOwner;
    |    }
    |}
  at /unique_chucks/8/0xb8c6ad2586bb71d518c2aaf510efe91f82022f58.sol(111)

[33mWarning[0m for UnrestrictedWrite in contract 'Pausable':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipRenounced(owner);
  > |        owner = address(0);
    |    }
    |
  at /unique_chucks/8/0xb8c6ad2586bb71d518c2aaf510efe91f82022f58.sol(101)

[33mWarning[0m for UnrestrictedWrite in contract 'Pausable':
    |		require(_newOwner != address(0), "New owner cannot be address(0)");
    |		emit OwnershipTransferred(owner, _newOwner);
  > |        owner = _newOwner;
    |    }
    |}
  at /unique_chucks/8/0xb8c6ad2586bb71d518c2aaf510efe91f82022f58.sol(111)

[33mWarning[0m for UnrestrictedWrite in contract 'Pausable':
    |    */
    |    function pause() public onlyOwner whenNotPaused {
  > |        paused = true;
    |        emit Pause();
    |    }
  at /unique_chucks/8/0xb8c6ad2586bb71d518c2aaf510efe91f82022f58.sol(243)

[33mWarning[0m for UnrestrictedWrite in contract 'Pausable':
    |    */
    |    function unpause() public onlyOwner whenPaused {
  > |        paused = false;
    |        emit Unpause();
    |    }
  at /unique_chucks/8/0xb8c6ad2586bb71d518c2aaf510efe91f82022f58.sol(251)