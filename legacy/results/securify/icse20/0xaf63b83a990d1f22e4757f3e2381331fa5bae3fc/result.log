Processing contract: /unique_chucks/24/0xaf63b83a990d1f22e4757f3e2381331fa5bae3fc.sol:TokenERC20
Processing contract: /unique_chucks/24/0xaf63b83a990d1f22e4757f3e2381331fa5bae3fc.sol:multiSend
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for RepeatedCall in contract 'multiSend':
    |        for(uint i=0;i<addrs.length;i++){
    |            if(addrs[i] == address(0)) continue;
  > |            if(bcontract.balanceOf(addrs[i]) >0 || addrs[i].balance < 1 finney){ 
    |                emit cannotAirdrop(addrs[i],bcontract.balanceOf(addrs[i]),addrs[i].balance);
    |            }else{
  at /unique_chucks/24/0xaf63b83a990d1f22e4757f3e2381331fa5bae3fc.sol(20)

[31mViolation[0m for RepeatedCall in contract 'multiSend':
    |            if(addrs[i] == address(0)) continue;
    |            if(bcontract.balanceOf(addrs[i]) >0 || addrs[i].balance < 1 finney){ 
  > |                emit cannotAirdrop(addrs[i],bcontract.balanceOf(addrs[i]),addrs[i].balance);
    |            }else{
    |                bcontract.transferFrom(msg.sender,addrs[i], 100 * (10 ** uint256(18)));
  at /unique_chucks/24/0xaf63b83a990d1f22e4757f3e2381331fa5bae3fc.sol(21)

[31mViolation[0m for RepeatedCall in contract 'multiSend':
    |                emit cannotAirdrop(addrs[i],bcontract.balanceOf(addrs[i]),addrs[i].balance);
    |            }else{
  > |                bcontract.transferFrom(msg.sender,addrs[i], 100 * (10 ** uint256(18)));
    |                distributedAmount += 100;
    |            } 
  at /unique_chucks/24/0xaf63b83a990d1f22e4757f3e2381331fa5bae3fc.sol(23)

[33mWarning[0m for UnrestrictedWrite in contract 'multiSend':
    |            }else{
    |                bcontract.transferFrom(msg.sender,addrs[i], 100 * (10 ** uint256(18)));
  > |                distributedAmount += 100;
    |            } 
    |        }
  at /unique_chucks/24/0xaf63b83a990d1f22e4757f3e2381331fa5bae3fc.sol(24)