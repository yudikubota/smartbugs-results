Processing contract: /unique_chucks/22/0x78a81946f5b221b9487ac56a96871977c1a1a357.sol:Common
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/22/0x78a81946f5b221b9487ac56a96871977c1a1a357.sol:Label
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/22/0x78a81946f5b221b9487ac56a96871977c1a1a357.sol:MultiSigNode
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/22/0x78a81946f5b221b9487ac56a96871977c1a1a357.sol:MultiSigRegulator
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/22/0x78a81946f5b221b9487ac56a96871977c1a1a357.sol:MultiSigRoot
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
java.io.IOException: Timeout for /tmp/binaries_souffle9040380600810751593/mustExplicit -j 2 -F /tmp/souffle-0f6d5460-36d5-4efb-862f-757df1bc367c -D /tmp/souffle-0f6d5460-36d5-4efb-862f-757df1bc367c_OUT
	at ch.securify.analysis.AbstractDataflow.runCommand(AbstractDataflow.java:277)
	at ch.securify.analysis.AbstractDataflow.initDataflow(AbstractDataflow.java:169)
	at ch.securify.analysis.MustExplicitDataflow.<init>(MustExplicitDataflow.java:33)
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:33)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error in Securify
java.lang.RuntimeException
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:37)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error, skipping: /unique_chucks/22/0x78a81946f5b221b9487ac56a96871977c1a1a357.sol:MultiSigRoot
Processing contract: /unique_chucks/22/0x78a81946f5b221b9487ac56a96871977c1a1a357.sol:SafeMathUint256
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/22/0x78a81946f5b221b9487ac56a96871977c1a1a357.sol:SafeMathUint8
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for LockedEther in contract 'Label':
    |}
    |
  > |contract Label is Common {
    |    string public class;
    |    string public label;
  at /unique_chucks/22/0x78a81946f5b221b9487ac56a96871977c1a1a357.sol(161)

[31mViolation[0m for LockedEther in contract 'MultiSigNode':
    |
    |
  > |contract MultiSigNode is Label {
    |    using SafeMathUint8 for uint8;
    |
  at /unique_chucks/22/0x78a81946f5b221b9487ac56a96871977c1a1a357.sol(182)

[31mViolation[0m for RepeatedCall in contract 'MultiSigNode':
    |
    |                    // Notify root this attached wallet, root will set parent address (if this is node)
  > |                    MultiSigRoot(root).attachWalletOrNode(wallet);
    |                }
    |            }
  at /unique_chucks/22/0x78a81946f5b221b9487ac56a96871977c1a1a357.sol(242)

[31mViolation[0m for RepeatedCall in contract 'MultiSigNode':
    |
    |                    // Notify root to remove this wallet from list
  > |                    MultiSigRoot(root).detachWalletOrNode(wallet);
    |                }
    |            }
  at /unique_chucks/22/0x78a81946f5b221b9487ac56a96871977c1a1a357.sol(261)

[31mViolation[0m for RepeatedCall in contract 'MultiSigNode':
    |
    |        // Notify root to remove this wallet from list
  > |        MultiSigRoot(root).detachWalletOrNode(_wallet);
    |
    |        return true;
  at /unique_chucks/22/0x78a81946f5b221b9487ac56a96871977c1a1a357.sol(310)

[33mWarning[0m for RepeatedCall in contract 'MultiSigNode':
    |
    |        // Notify root this attached wallet, root will trigger attach operation (if this wallet is a contract)
  > |        MultiSigRoot(root).attachWalletOrNode(_wallet);
    |
    |        return true;
  at /unique_chucks/22/0x78a81946f5b221b9487ac56a96871977c1a1a357.sol(287)

[33mWarning[0m for UnrestrictedWrite in contract 'MultiSigNode':
    |        onlyRoot
    |    {
  > |        parent = _parent;
    |
    |        if (0 < totalWallet) {
  at /unique_chucks/22/0x78a81946f5b221b9487ac56a96871977c1a1a357.sol(230)

[33mWarning[0m for UnrestrictedWrite in contract 'MultiSigNode':
    |            detach(wallets[_index]);
    |
  > |        walletsIndex[_wallet] = _index;
    |        wallets[_index] = _wallet;
    |
  at /unique_chucks/22/0x78a81946f5b221b9487ac56a96871977c1a1a357.sol(278)

[33mWarning[0m for UnrestrictedWrite in contract 'MultiSigNode':
    |
    |        walletsIndex[_wallet] = _index;
  > |        wallets[_index] = _wallet;
    |
    |        if (!isContract(_wallet))
  at /unique_chucks/22/0x78a81946f5b221b9487ac56a96871977c1a1a357.sol(279)

[33mWarning[0m for UnrestrictedWrite in contract 'MultiSigNode':
    |
    |        if (!isContract(_wallet))
  > |            walletCount = walletCount.add(1);
    |
    |        totalWallet = totalWallet.add(1);
  at /unique_chucks/22/0x78a81946f5b221b9487ac56a96871977c1a1a357.sol(282)

[33mWarning[0m for UnrestrictedWrite in contract 'MultiSigNode':
    |            walletCount = walletCount.add(1);
    |
  > |        totalWallet = totalWallet.add(1);
    |
    |        // Notify root this attached wallet, root will trigger attach operation (if this wallet is a contract)
  at /unique_chucks/22/0x78a81946f5b221b9487ac56a96871977c1a1a357.sol(284)

[33mWarning[0m for UnrestrictedWrite in contract 'MultiSigNode':
    |
    |        if (!isContract(_wallet))
  > |            walletCount = walletCount.sub(1);
    |
    |        totalWallet = totalWallet.sub(1);
  at /unique_chucks/22/0x78a81946f5b221b9487ac56a96871977c1a1a357.sol(302)

[33mWarning[0m for UnrestrictedWrite in contract 'MultiSigNode':
    |            walletCount = walletCount.sub(1);
    |
  > |        totalWallet = totalWallet.sub(1);
    |
    |        delete wallets[index];
  at /unique_chucks/22/0x78a81946f5b221b9487ac56a96871977c1a1a357.sol(304)

[33mWarning[0m for UnrestrictedWrite in contract 'MultiSigNode':
    |        totalWallet = totalWallet.sub(1);
    |
  > |        delete wallets[index];
    |        delete walletsIndex[_wallet];
    |
  at /unique_chucks/22/0x78a81946f5b221b9487ac56a96871977c1a1a357.sol(306)

[33mWarning[0m for UnrestrictedWrite in contract 'MultiSigNode':
    |
    |        delete wallets[index];
  > |        delete walletsIndex[_wallet];
    |
    |        // Notify root to remove this wallet from list
  at /unique_chucks/22/0x78a81946f5b221b9487ac56a96871977c1a1a357.sol(307)

[33mWarning[0m for DAO in contract 'MultiSigRegulator':
    |
    |        // Perform self call to determine function details for requirement setup
  > |        (bool success, bytes memory returnData) = address(this).call.value(_value)(_data);
    |
    |        if (!success) {
  at /unique_chucks/22/0x78a81946f5b221b9487ac56a96871977c1a1a357.sol(539)

[31mViolation[0m for RepeatedCall in contract 'MultiSigRegulator':
    |    function requirement(bytes32 _labelCode, uint256 _flag, uint8 _required) private
    |    {
  > |        MultiSigRoot(root).createRequirement(_labelCode, _flag, _required);
    |    }
    |
  at /unique_chucks/22/0x78a81946f5b221b9487ac56a96871977c1a1a357.sol(559)

[33mWarning[0m for UnrestrictedWrite in contract 'MultiSigRegulator':
    |        if (msg.sender == root || !isSealed) {
    |            // Set transaction limit
  > |            transactionLimits[encodePacked(_requirementType)].upperLimit = _limit;
    |            emit TransactionLimitChanged(_requirementType, _limit);
    |        }
  at /unique_chucks/22/0x78a81946f5b221b9487ac56a96871977c1a1a357.sol(513)

[33mWarning[0m for UnrestrictedWrite in contract 'MultiSigRegulator':
    |
    |            if (dt == limit.datetime)
  > |                limit.volume = limit.volume.add(_value);
    |            else {
    |                // Reset volume on new day
  at /unique_chucks/22/0x78a81946f5b221b9487ac56a96871977c1a1a357.sol(575)

[33mWarning[0m for UnrestrictedWrite in contract 'MultiSigRegulator':
    |            else {
    |                // Reset volume on new day
  > |                limit.datetime = dt;
    |                limit.volume = _value;
    |            }
  at /unique_chucks/22/0x78a81946f5b221b9487ac56a96871977c1a1a357.sol(578)

[33mWarning[0m for UnrestrictedWrite in contract 'MultiSigRegulator':
    |                // Reset volume on new day
    |                limit.datetime = dt;
  > |                limit.volume = _value;
    |            }
    |
  at /unique_chucks/22/0x78a81946f5b221b9487ac56a96871977c1a1a357.sol(579)