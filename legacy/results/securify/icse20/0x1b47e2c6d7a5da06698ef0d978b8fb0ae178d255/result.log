Processing contract: /unique_chucks/47/0x1b47e2c6d7a5da06698ef0d978b8fb0ae178d255.sol:BasicToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/47/0x1b47e2c6d7a5da06698ef0d978b8fb0ae178d255.sol:ERC20
Processing contract: /unique_chucks/47/0x1b47e2c6d7a5da06698ef0d978b8fb0ae178d255.sol:ERC20Basic
Processing contract: /unique_chucks/47/0x1b47e2c6d7a5da06698ef0d978b8fb0ae178d255.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/47/0x1b47e2c6d7a5da06698ef0d978b8fb0ae178d255.sol:StandardToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/47/0x1b47e2c6d7a5da06698ef0d978b8fb0ae178d255.sol:YKCToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[33mWarning[0m for UnrestrictedWrite in contract 'BasicToken':
    |
    |    balances[msg.sender] = balances[msg.sender].sub(_value);
  > |    balances[_to] = balances[_to].add(_value);
    |    emit Transfer(msg.sender, _to, _value);
    |    return true;
  at /unique_chucks/47/0x1b47e2c6d7a5da06698ef0d978b8fb0ae178d255.sol(96)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |
    |    balances[msg.sender] = balances[msg.sender].sub(_value);
  > |    balances[_to] = balances[_to].add(_value);
    |    emit Transfer(msg.sender, _to, _value);
    |    return true;
  at /unique_chucks/47/0x1b47e2c6d7a5da06698ef0d978b8fb0ae178d255.sol(96)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |    require(_value <= allowed[_from][msg.sender]);
    |
  > |    balances[_from] = balances[_from].sub(_value);
    |    balances[_to] = balances[_to].add(_value);
    |    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
  at /unique_chucks/47/0x1b47e2c6d7a5da06698ef0d978b8fb0ae178d255.sol(160)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |
    |    balances[_from] = balances[_from].sub(_value);
  > |    balances[_to] = balances[_to].add(_value);
    |    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
    |    emit Transfer(_from, _to, _value);
  at /unique_chucks/47/0x1b47e2c6d7a5da06698ef0d978b8fb0ae178d255.sol(161)

[31mViolation[0m for LockedEther in contract 'YKCToken':
    | */ 
    |
  > |contract YKCToken is StandardToken { 
    |   
    |    /// Token specifics 
  at /unique_chucks/47/0x1b47e2c6d7a5da06698ef0d978b8fb0ae178d255.sol(257)

[33mWarning[0m for UnrestrictedWrite in contract 'YKCToken':
    |
    |    balances[msg.sender] = balances[msg.sender].sub(_value);
  > |    balances[_to] = balances[_to].add(_value);
    |    emit Transfer(msg.sender, _to, _value);
    |    return true;
  at /unique_chucks/47/0x1b47e2c6d7a5da06698ef0d978b8fb0ae178d255.sol(96)

[33mWarning[0m for UnrestrictedWrite in contract 'YKCToken':
    |    require(_value <= allowed[_from][msg.sender]);
    |
  > |    balances[_from] = balances[_from].sub(_value);
    |    balances[_to] = balances[_to].add(_value);
    |    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
  at /unique_chucks/47/0x1b47e2c6d7a5da06698ef0d978b8fb0ae178d255.sol(160)

[33mWarning[0m for UnrestrictedWrite in contract 'YKCToken':
    |
    |    balances[_from] = balances[_from].sub(_value);
  > |    balances[_to] = balances[_to].add(_value);
    |    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
    |    emit Transfer(_from, _to, _value);
  at /unique_chucks/47/0x1b47e2c6d7a5da06698ef0d978b8fb0ae178d255.sol(161)