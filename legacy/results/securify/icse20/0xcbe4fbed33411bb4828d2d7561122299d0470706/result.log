Processing contract: /unique_contracts/0xcbe4fbed33411bb4828d2d7561122299d0470706.sol:Address
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0xcbe4fbed33411bb4828d2d7561122299d0470706.sol:Counters
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0xcbe4fbed33411bb4828d2d7561122299d0470706.sol:ERC165
Processing contract: /unique_contracts/0xcbe4fbed33411bb4828d2d7561122299d0470706.sol:ERC721
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0xcbe4fbed33411bb4828d2d7561122299d0470706.sol:ERC721Metadata
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0xcbe4fbed33411bb4828d2d7561122299d0470706.sol:EquipGeneratorWhitelist
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0xcbe4fbed33411bb4828d2d7561122299d0470706.sol:IERC165
Processing contract: /unique_contracts/0xcbe4fbed33411bb4828d2d7561122299d0470706.sol:IERC721
Processing contract: /unique_contracts/0xcbe4fbed33411bb4828d2d7561122299d0470706.sol:IERC721Metadata
Processing contract: /unique_contracts/0xcbe4fbed33411bb4828d2d7561122299d0470706.sol:IERC721Receiver
Processing contract: /unique_contracts/0xcbe4fbed33411bb4828d2d7561122299d0470706.sol:Ownable
Processing contract: /unique_contracts/0xcbe4fbed33411bb4828d2d7561122299d0470706.sol:Pausable
Processing contract: /unique_contracts/0xcbe4fbed33411bb4828d2d7561122299d0470706.sol:PauserRole
Processing contract: /unique_contracts/0xcbe4fbed33411bb4828d2d7561122299d0470706.sol:Roles
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0xcbe4fbed33411bb4828d2d7561122299d0470706.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0xcbe4fbed33411bb4828d2d7561122299d0470706.sol:SuperPlayerGacha
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0xcbe4fbed33411bb4828d2d7561122299d0470706.sol:SuperplayerEquipmentInterface
Processing contract: /unique_contracts/0xcbe4fbed33411bb4828d2d7561122299d0470706.sol:SuperplayerEquipmentV001
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_contracts/0xcbe4fbed33411bb4828d2d7561122299d0470706.sol:SuperplayerRandomEquipmentInterface
[31mViolation[0m for LockedEther in contract 'ERC721Metadata':
    |
    |
  > |contract ERC721Metadata is ERC165, ERC721, IERC721Metadata {
    |    // Token name
    |    string private _name;
  at /unique_contracts/0xcbe4fbed33411bb4828d2d7561122299d0470706.sol(665)

[31mViolation[0m for LockedEther in contract 'EquipGeneratorWhitelist':
    | * @dev This simplifies the implementation of "user permissions".
    | */
  > |contract EquipGeneratorWhitelist is Ownable {
    |  mapping(address => string) public whitelist;
    |  mapping(string => address)  cat2address;
  at /unique_contracts/0xcbe4fbed33411bb4828d2d7561122299d0470706.sol(1012)

[31mViolation[0m for UnrestrictedWrite in contract 'EquipGeneratorWhitelist':
    | * @dev This simplifies the implementation of "user permissions".
    | */
  > |contract EquipGeneratorWhitelist is Ownable {
    |  mapping(address => string) public whitelist;
    |  mapping(string => address)  cat2address;
  at /unique_contracts/0xcbe4fbed33411bb4828d2d7561122299d0470706.sol(1012)

[33mWarning[0m for UnrestrictedWrite in contract 'EquipGeneratorWhitelist':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipTransferred(_owner, address(0));
  > |        _owner = address(0);
    |    }
    |
  at /unique_contracts/0xcbe4fbed33411bb4828d2d7561122299d0470706.sol(965)

[33mWarning[0m for UnrestrictedWrite in contract 'EquipGeneratorWhitelist':
    |        require(newOwner != address(0), "Ownable: new owner is the zero address");
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_contracts/0xcbe4fbed33411bb4828d2d7561122299d0470706.sol(982)

[33mWarning[0m for UnrestrictedWrite in contract 'EquipGeneratorWhitelist':
    | * @dev This simplifies the implementation of "user permissions".
    | */
  > |contract EquipGeneratorWhitelist is Ownable {
    |  mapping(address => string) public whitelist;
    |  mapping(string => address)  cat2address;
  at /unique_contracts/0xcbe4fbed33411bb4828d2d7561122299d0470706.sol(1012)

[33mWarning[0m for UnrestrictedWrite in contract 'EquipGeneratorWhitelist':
    |    string storage category = whitelist[addr];
    |    if (bytes(category).length != 0) {
  > |      delete cat2address[category] ;
    |      delete whitelist[addr]  ;
    |      emit WhitelistedAddressRemoved(addr);
  at /unique_contracts/0xcbe4fbed33411bb4828d2d7561122299d0470706.sol(1053)

[31mViolation[0m for RepeatedCall in contract 'SuperPlayerGacha':
    |     spIns.createEquip(msg.sender,key,equips,extraProps);
    |     //return back
  > |     msg.sender.transfer(msg.value.sub(feeForOne));
    |  }
    |
  at /unique_contracts/0xcbe4fbed33411bb4828d2d7561122299d0470706.sol(1185)

[31mViolation[0m for RepeatedCall in contract 'SuperPlayerGacha':
    |     uint[] memory equips;
    |     for (uint i=0 ;i<10;++i) {
  > |      (blockNo,  key,  equips)  = randIns.getRandomEquipment(seed+i );
    |      spIns.createEquip(msg.sender,key,equips,extraProps);
    |     }
  at /unique_contracts/0xcbe4fbed33411bb4828d2d7561122299d0470706.sol(1195)

[31mViolation[0m for RepeatedCall in contract 'SuperPlayerGacha':
    |     for (uint i=0 ;i<10;++i) {
    |      (blockNo,  key,  equips)  = randIns.getRandomEquipment(seed+i );
  > |      spIns.createEquip(msg.sender,key,equips,extraProps);
    |     }
    |     //return back
  at /unique_contracts/0xcbe4fbed33411bb4828d2d7561122299d0470706.sol(1196)

[31mViolation[0m for RepeatedCall in contract 'SuperPlayerGacha':
    |     }
    |     //return back
  > |     msg.sender.transfer(msg.value.sub(feeForTen));
    |  }
    |
  at /unique_contracts/0xcbe4fbed33411bb4828d2d7561122299d0470706.sol(1199)

[31mViolation[0m for TODAmount in contract 'SuperPlayerGacha':
    |  function withdraw( address payable to )  public onlyOwner{
    |    require(to == msg.sender); //to == msg.sender == _owner
  > |    to.transfer((address(this).balance ));
    |  }
    |
  at /unique_contracts/0xcbe4fbed33411bb4828d2d7561122299d0470706.sol(1204)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'SuperPlayerGacha':
    |     spIns.createEquip(msg.sender,key,equips,extraProps);
    |     //return back
  > |     msg.sender.transfer(msg.value.sub(feeForOne));
    |  }
    |
  at /unique_contracts/0xcbe4fbed33411bb4828d2d7561122299d0470706.sol(1185)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'SuperPlayerGacha':
    |     }
    |     //return back
  > |     msg.sender.transfer(msg.value.sub(feeForTen));
    |  }
    |
  at /unique_contracts/0xcbe4fbed33411bb4828d2d7561122299d0470706.sol(1199)

[33mWarning[0m for UnrestrictedWrite in contract 'SuperPlayerGacha':
    |    function renounceOwnership() public onlyOwner {
    |        emit OwnershipTransferred(_owner, address(0));
  > |        _owner = address(0);
    |    }
    |
  at /unique_contracts/0xcbe4fbed33411bb4828d2d7561122299d0470706.sol(965)

[33mWarning[0m for UnrestrictedWrite in contract 'SuperPlayerGacha':
    |        require(newOwner != address(0), "Ownable: new owner is the zero address");
    |        emit OwnershipTransferred(_owner, newOwner);
  > |        _owner = newOwner;
    |    }
    |}
  at /unique_contracts/0xcbe4fbed33411bb4828d2d7561122299d0470706.sol(982)

[31mViolation[0m for LockedEther in contract 'SuperplayerEquipmentV001':
    |
    |   
  > |contract SuperplayerEquipmentV001 is EquipGeneratorWhitelist,ERC721 ,ERC721Metadata("SuperPlayerEquipment","SPE") {
    |
    |  using SafeMath for uint256;
  at /unique_contracts/0xcbe4fbed33411bb4828d2d7561122299d0470706.sol(1075)

[33mWarning[0m for UnrestrictedWrite in contract 'SuperplayerEquipmentV001':
  > |// File: openzeppelin-solidity/contracts/introspection/IERC165.sol
    |
    |pragma solidity ^0.5.0;
  at /unique_contracts/0xcbe4fbed33411bb4828d2d7561122299d0470706.sol(1)

[33mWarning[0m for UnrestrictedWrite in contract 'SuperplayerEquipmentV001':
    |
    |   
  > |contract SuperplayerEquipmentV001 is EquipGeneratorWhitelist,ERC721 ,ERC721Metadata("SuperPlayerEquipment","SPE") {
    |
    |  using SafeMath for uint256;
  at /unique_contracts/0xcbe4fbed33411bb4828d2d7561122299d0470706.sol(1075)

[33mWarning[0m for UnrestrictedWrite in contract 'SuperplayerEquipmentV001':
    |      extraRandomProperties :extraRandomProps
    |    });
  > |    TotalEquipNum = TotalEquipNum.add(1);
    |    uint256 newEquipId = equips.push(newEquip).sub(1);
    |    emit Birth(newEquipId,key,/*part,rareness,*/randomProps,extraRandomProps);
  at /unique_contracts/0xcbe4fbed33411bb4828d2d7561122299d0470706.sol(1125)