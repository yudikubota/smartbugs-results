Processing contract: /unique_chucks/10/0x4d3eff43d6cb25b8d444ff02531213930fa1a06b.sol:ERC223ReceivingContract
Processing contract: /unique_chucks/10/0x4d3eff43d6cb25b8d444ff02531213930fa1a06b.sol:IRC223
Processing contract: /unique_chucks/10/0x4d3eff43d6cb25b8d444ff02531213930fa1a06b.sol:PIBC
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/10/0x4d3eff43d6cb25b8d444ff02531213930fa1a06b.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for LockedEther in contract 'PIBC':
    |}
    |
  > |contract PIBC is IRC223 {
    |    using SafeMath for uint;
    |    
  at /unique_chucks/10/0x4d3eff43d6cb25b8d444ff02531213930fa1a06b.sol(50)

[31mViolation[0m for UnrestrictedWrite in contract 'PIBC':
    |        }
    |        balances[_from] = balances[_from].sub(_value);
  > |        balances[_to] = balances[_to].add(_value);
    |        commision = _value.div(commisionRate);
    |        balances[_from] = balances[_from].sub(commision);
  at /unique_chucks/10/0x4d3eff43d6cb25b8d444ff02531213930fa1a06b.sol(99)

[31mViolation[0m for UnrestrictedWrite in contract 'PIBC':
    |        commision = _value.div(commisionRate);
    |        balances[_from] = balances[_from].sub(commision);
  > |        balances[_commisioner] = balances[_commisioner].add(commision);
    |        if(codeLength>0) {
    |            ERC223ReceivingContract receiver = ERC223ReceivingContract(_to);
  at /unique_chucks/10/0x4d3eff43d6cb25b8d444ff02531213930fa1a06b.sol(102)

[31mViolation[0m for UnrestrictedWrite in contract 'PIBC':
    |        uint _value = approved[_from][_to];
    |        ttl[msg.sender][_to] = 0;
  > |        approved[_from][_to] = 0;
    |        _transfer(_to, _from, _value);
    |        
  at /unique_chucks/10/0x4d3eff43d6cb25b8d444ff02531213930fa1a06b.sol(120)

[33mWarning[0m for UnrestrictedWrite in contract 'PIBC':
    |    function setTtl(uint ttlLimit) public {
    |        require(msg.sender == _owner);
  > |        _ttlLimit = ttlLimit;
    |    }
    |    
  at /unique_chucks/10/0x4d3eff43d6cb25b8d444ff02531213930fa1a06b.sol(138)

[33mWarning[0m for UnrestrictedWrite in contract 'PIBC':
    |    function setCommisionRate (uint _commisionRate) public {
    |        require(msg.sender == _owner);
  > |        commisionRate = _commisionRate;
    |    }
    |    
  at /unique_chucks/10/0x4d3eff43d6cb25b8d444ff02531213930fa1a06b.sol(143)

[33mWarning[0m for UnrestrictedWrite in contract 'PIBC':
    |    function setCommisioner (address commisioner) public {
    |        require(msg.sender == _owner);
  > |        _commisioner = commisioner;
    |    }
    |}
  at /unique_chucks/10/0x4d3eff43d6cb25b8d444ff02531213930fa1a06b.sol(148)