Processing contract: /unique_chucks/29/0xe69347dda5ab4df9d2cc269c53f515ffc0d40f7f.sol:ERC20
Processing contract: /unique_chucks/29/0xe69347dda5ab4df9d2cc269c53f515ffc0d40f7f.sol:Owned
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: /unique_chucks/29/0xe69347dda5ab4df9d2cc269c53f515ffc0d40f7f.sol:UnlockVideo
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for MissingInputValidation in contract 'Owned':
    |    address payable owner;
    |    address payable newOwner;
  > |    function changeOwner(address payable _newOwner) public onlyOwner {
    |        newOwner=_newOwner;
    |    }
  at /unique_chucks/29/0xe69347dda5ab4df9d2cc269c53f515ffc0d40f7f.sol(10)

[33mWarning[0m for UnrestrictedWrite in contract 'Owned':
    |    address payable newOwner;
    |    function changeOwner(address payable _newOwner) public onlyOwner {
  > |        newOwner=_newOwner;
    |    }
    |    function acceptOwnership() public {
  at /unique_chucks/29/0xe69347dda5ab4df9d2cc269c53f515ffc0d40f7f.sol(11)

[31mViolation[0m for DAOConstantGas in contract 'UnlockVideo':
    |        require(msg.value>0);
    |        uint256 deduct = msg.value*fee/100;
  > |        owner.transfer(deduct);
    |        balances[msg.sender]+=msg.value-deduct;
    |    }
  at /unique_chucks/29/0xe69347dda5ab4df9d2cc269c53f515ffc0d40f7f.sol(106)

[31mViolation[0m for TODAmount in contract 'UnlockVideo':
    |        balances[msg.sender] -= add;
    |        if (ERC20(token).balanceOf(address(this))>=bonus) ERC20(token).transfer(msg.sender, bonus);
  > |        owner.transfer(add);
    |        return true;
    |    }
  at /unique_chucks/29/0xe69347dda5ab4df9d2cc269c53f515ffc0d40f7f.sol(49)

[31mViolation[0m for TODAmount in contract 'UnlockVideo':
    |        require(msg.value>0);
    |        uint256 deduct = msg.value*fee/100;
  > |        owner.transfer(deduct);
    |        balances[msg.sender]+=msg.value-deduct;
    |    }
  at /unique_chucks/29/0xe69347dda5ab4df9d2cc269c53f515ffc0d40f7f.sol(106)

[33mWarning[0m for TODAmount in contract 'UnlockVideo':
    |        require(_amount>0 && balances[msg.sender]>=_amount);
    |        uint256 deduct = _amount*fee/100;
  > |        owner.transfer(deduct);
    |        msg.sender.transfer(_amount-deduct);
    |        return true;
  at /unique_chucks/29/0xe69347dda5ab4df9d2cc269c53f515ffc0d40f7f.sol(98)

[33mWarning[0m for TODAmount in contract 'UnlockVideo':
    |        uint256 deduct = _amount*fee/100;
    |        owner.transfer(deduct);
  > |        msg.sender.transfer(_amount-deduct);
    |        return true;
    |    }
  at /unique_chucks/29/0xe69347dda5ab4df9d2cc269c53f515ffc0d40f7f.sol(99)

[31mViolation[0m for TODReceiver in contract 'UnlockVideo':
    |        balances[msg.sender] -= add;
    |        if (ERC20(token).balanceOf(address(this))>=bonus) ERC20(token).transfer(msg.sender, bonus);
  > |        owner.transfer(add);
    |        return true;
    |    }
  at /unique_chucks/29/0xe69347dda5ab4df9d2cc269c53f515ffc0d40f7f.sol(49)

[31mViolation[0m for TODReceiver in contract 'UnlockVideo':
    |        require(_amount>0 && balances[msg.sender]>=_amount);
    |        uint256 deduct = _amount*fee/100;
  > |        owner.transfer(deduct);
    |        msg.sender.transfer(_amount-deduct);
    |        return true;
  at /unique_chucks/29/0xe69347dda5ab4df9d2cc269c53f515ffc0d40f7f.sol(98)

[31mViolation[0m for TODReceiver in contract 'UnlockVideo':
    |        require(msg.value>0);
    |        uint256 deduct = msg.value*fee/100;
  > |        owner.transfer(deduct);
    |        balances[msg.sender]+=msg.value-deduct;
    |    }
  at /unique_chucks/29/0xe69347dda5ab4df9d2cc269c53f515ffc0d40f7f.sol(106)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'UnlockVideo':
    |        require(_amount>0 && balances[msg.sender]>=_amount);
    |        uint256 deduct = _amount*fee/100;
  > |        owner.transfer(deduct);
    |        msg.sender.transfer(_amount-deduct);
    |        return true;
  at /unique_chucks/29/0xe69347dda5ab4df9d2cc269c53f515ffc0d40f7f.sol(98)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'UnlockVideo':
    |        uint256 deduct = _amount*fee/100;
    |        owner.transfer(deduct);
  > |        msg.sender.transfer(_amount-deduct);
    |        return true;
    |    }
  at /unique_chucks/29/0xe69347dda5ab4df9d2cc269c53f515ffc0d40f7f.sol(99)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'UnlockVideo':
    |        balances[msg.sender] -= add;
    |        if (ERC20(token).balanceOf(address(this))>=bonus) ERC20(token).transfer(msg.sender, bonus);
  > |        owner.transfer(add);
    |        return true;
    |    }
  at /unique_chucks/29/0xe69347dda5ab4df9d2cc269c53f515ffc0d40f7f.sol(49)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'UnlockVideo':
    |        require(msg.value>0);
    |        uint256 deduct = msg.value*fee/100;
  > |        owner.transfer(deduct);
    |        balances[msg.sender]+=msg.value-deduct;
    |    }
  at /unique_chucks/29/0xe69347dda5ab4df9d2cc269c53f515ffc0d40f7f.sol(106)

[31mViolation[0m for UnrestrictedWrite in contract 'UnlockVideo':
    |    function addVideo(bytes32 _id) public returns (bool success){
    |        require (videos[_id]==address(0x0) && balances[msg.sender]>=add);
  > |        videos[_id] = msg.sender;
    |        balances[msg.sender] -= add;
    |        if (ERC20(token).balanceOf(address(this))>=bonus) ERC20(token).transfer(msg.sender, bonus);
  at /unique_chucks/29/0xe69347dda5ab4df9d2cc269c53f515ffc0d40f7f.sol(46)

[31mViolation[0m for UnrestrictedWrite in contract 'UnlockVideo':
    |    function donateVideo(bytes32 _id) public returns (bool success){
    |        require(videos[_id]!=address(0x0) && balances[msg.sender]>=donates[videos[_id]]);
  > |        balances[videos[_id]] += donates[videos[_id]];
    |        balances[msg.sender] -= donates[videos[_id]];
    |        if (ERC20(token).balanceOf(address(this))>=bonus) ERC20(token).transfer(msg.sender, bonus);
  at /unique_chucks/29/0xe69347dda5ab4df9d2cc269c53f515ffc0d40f7f.sol(61)

[33mWarning[0m for UnrestrictedWrite in contract 'UnlockVideo':
    |    address payable newOwner;
    |    function changeOwner(address payable _newOwner) public onlyOwner {
  > |        newOwner=_newOwner;
    |    }
    |    function acceptOwnership() public {
  at /unique_chucks/29/0xe69347dda5ab4df9d2cc269c53f515ffc0d40f7f.sol(11)

[33mWarning[0m for UnrestrictedWrite in contract 'UnlockVideo':
    |    function changeAdd (uint256 _add) onlyOwner public returns (bool success){
    |        require (_add>0);
  > |        add=_add;
    |        return true;
    |    }
  at /unique_chucks/29/0xe69347dda5ab4df9d2cc269c53f515ffc0d40f7f.sol(71)

[33mWarning[0m for UnrestrictedWrite in contract 'UnlockVideo':
    |    function changeFee (uint8 _fee) onlyOwner public returns (bool success){
    |        require (_fee>0);
  > |        fee=_fee;
    |        return true;
    |    }
  at /unique_chucks/29/0xe69347dda5ab4df9d2cc269c53f515ffc0d40f7f.sol(77)

[33mWarning[0m for UnrestrictedWrite in contract 'UnlockVideo':
    |    function changeBonus (uint8 _bonus) onlyOwner public returns (bool success){
    |        require (_bonus>0);
  > |        bonus=_bonus;
    |        return true;
    |    }
  at /unique_chucks/29/0xe69347dda5ab4df9d2cc269c53f515ffc0d40f7f.sol(83)