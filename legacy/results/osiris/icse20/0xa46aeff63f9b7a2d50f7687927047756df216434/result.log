INFO:root:Contract /unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol:CryptoJingles:
INFO:symExec:Running, please wait...
INFO:symExec:	============ Results ===========
INFO:symExec:	  EVM code coverage: 	 53.8%
INFO:symExec:	  Arithmetic bugs: 	 False
INFO:symExec:	  └> Overflow bugs: 	 False
INFO:symExec:	  └> Underflow bugs: 	 False
INFO:symExec:	  └> Division bugs: 	 False
INFO:symExec:	  └> Modulo bugs:   	 False
INFO:symExec:	  └> Truncation bugs: 	 False
INFO:symExec:	  └> Signedness bugs: 	 False
INFO:symExec:	  Callstack bug: 	 False
INFO:symExec:	  Concurrency bug: 	 False
INFO:symExec:	  Time dependency bug: 	 False
INFO:symExec:	  Reentrancy bug: 	 False
INFO:symExec:	 --- 50.0627830029 seconds ---
INFO:symExec:	====== Analysis Completed ======
INFO:root:Contract /unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol:Jingle:
INFO:symExec:Running, please wait...
Traceback (most recent call last):
  File "/root/osiris/taintFlow.py", line 652, in perform_taint_analysis
    propagate_taint(taint, tainted_stack, tainted_memory, tainted_storage, instruction, current_stack, previous_block, current_block, next_blocks, arithmetic_errors, sha3_list, false_positives, strings)
  File "/root/osiris/taintFlow.py", line 421, in propagate_taint
    if arithmetic_error["instruction"].data_in[1] == 32 or arithmetic_error["instruction"].data_in[1] == 31:
  File "/root/osiris/z3/z3.py", line 302, in __nonzero__
    return self.__bool__()
  File "/root/osiris/z3/z3.py", line 309, in __bool__
    elif is_eq(self) and self.num_args() == 2:
  File "/root/osiris/z3/z3.py", line 1422, in is_eq
    return is_app_of(a, Z3_OP_EQ)
  File "/root/osiris/z3/z3.py", line 1164, in is_app_of
    return is_app(a) and a.decl().kind() == k
  File "/root/osiris/z3/z3.py", line 885, in decl
    return FuncDeclRef(Z3_get_app_decl(self.ctx_ref(), self.as_ast()), self.ctx)
  File "/root/osiris/z3/z3.py", line 280, in __init__
    Z3_inc_ref(self.ctx.ref(), self.as_ast())
  File "/root/osiris/z3/z3.py", line 177, in ref
    def ref(self):
  File "/root/osiris/symExec.py", line 2868, in handler
    raise Exception("timeout")
Exception: timeout
INFO:symExec:	============ Results ===========
INFO:symExec:	  EVM code coverage: 	 21.0%
INFO:symExec:	  Arithmetic bugs: 	 True
INFO:symExec:	  └> Overflow bugs: 	 True
/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol:Jingle:234:9
return samplesInJingle[_jingleId]
^
/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol:Jingle:233:5
function getSamplesForJingle(uint _jingleId) external view returns(uint[]) {
^
/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol:Jingle:234:9
return samplesInJingle[_jingleId]
^
INFO:symExec:	  └> Underflow bugs: 	 False
INFO:symExec:	  └> Division bugs: 	 False
INFO:symExec:	  └> Modulo bugs:   	 False
INFO:symExec:	  └> Truncation bugs: 	 False
INFO:symExec:	  └> Signedness bugs: 	 False
INFO:symExec:	  Callstack bug: 	 False
INFO:symExec:	  Concurrency bug: 	 False
INFO:symExec:	  Time dependency bug: 	 False
INFO:symExec:	  Reentrancy bug: 	 False
INFO:symExec:	 --- 50.0976231098 seconds ---
INFO:symExec:	====== Analysis Completed ======
INFO:root:Contract /unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol:Marketplace:
INFO:symExec:Running, please wait...