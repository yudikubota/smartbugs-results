{
  "contract": "0x06f26d5034189632c90d67aa04e480046a640c41",
  "tool": "smartcheck",
  "start": 1563250215.056197,
  "end": 1563250229.0645845,
  "duration": 14.008387565612793,
  "analysis": [
    {
      "name": "SOLIDITY_ADDRESS_HARDCODED",
      "patternId": "adc165",
      "severity": 1,
      "line": 89,
      "column": 31,
      "content": "0xa559c2a74407CA8B283A928E8cb561A3f977AFD7"
    },
    {
      "name": "SOLIDITY_ADDRESS_HARDCODED",
      "patternId": "adc165",
      "severity": 1,
      "line": 90,
      "column": 26,
      "content": "0xc0138acF1b97224E08Fd5E71f46FBEa71d481805"
    },
    {
      "name": "SOLIDITY_ARRAY_LENGTH_MANIPULATION",
      "patternId": "872bdd",
      "severity": 1,
      "line": 135,
      "column": 20,
      "content": "user.deposits.length-=1"
    },
    {
      "name": "SOLIDITY_DIV_MUL",
      "patternId": "09hhh1",
      "severity": 2,
      "line": 221,
      "column": 15,
      "content": "amount.mul(DIVIDENTS).div(TOTAL).mul(duration)"
    },
    {
      "name": "SOLIDITY_EXTRA_GAS_IN_LOOPS",
      "patternId": "d3j11j",
      "severity": 1,
      "line": 121,
      "column": 12,
      "content": "for(uinti=0;i<dividends.length;i++){emitDepositDividendPayed(msg.sender,i,user.deposits[i].amount,dividendsForAmountAndTime(user.deposits[i].amount,now.sub(user.deposits[i].time)),dividends[i]);}"
    },
    {
      "name": "SOLIDITY_EXTRA_GAS_IN_LOOPS",
      "patternId": "d3j11j",
      "severity": 1,
      "line": 132,
      "column": 12,
      "content": "for(i=0;i<user.deposits.length;i++){if(now>=user.deposits[i].time.add(DEPOSIT_TIME)){user.deposits[i]=user.deposits[user.deposits.length-1];user.deposits.length-=1;i-=1;}}"
    },
    {
      "name": "SOLIDITY_EXTRA_GAS_IN_LOOPS",
      "patternId": "d3j11j",
      "severity": 1,
      "line": 174,
      "column": 12,
      "content": "for(i=0;referrer!=address(0)&&i<referralPercents.length;i++){uint256refAmount=msg.value.mul(referralPercents[i]).div(TOTAL);referrer.send(refAmount);emitReferrerPayed(msg.sender,referrer,msg.value,refAmount,i);referrer=users[referrer].referrer;}"
    },
    {
      "name": "SOLIDITY_EXTRA_GAS_IN_LOOPS",
      "patternId": "d3j11j",
      "severity": 1,
      "line": 208,
      "column": 8,
      "content": "for(uinti=0;i<user.deposits.length;i++){uint256howOld=now.sub(user.deposits[i].time);uint256duration=now.sub(user.lastPayment);if(howOld>DEPOSIT_TIME){uint256overtime=howOld.sub(DEPOSIT_TIME);duration=duration.sub(overtime);}dividends[i]=dividendsForAmountAndTime(user.deposits[i].amount,duration);}"
    },
    {
      "name": "SOLIDITY_EXTRA_GAS_IN_LOOPS",
      "patternId": "d3j11j",
      "severity": 1,
      "line": 234,
      "column": 8,
      "content": "for(uinti=0;i<dividends.length;i++){dividendsSum=dividendsSum.add(dividends[i]);}"
    },
    {
      "name": "SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN",
      "patternId": "58bdd3",
      "severity": 1,
      "line": 226,
      "column": 4,
      "content": "function_bytesToAddress(bytesdata)privatepurereturns(addressaddr){assembly{addr:=mload(add(data,20))}}"
    },
    {
      "name": "SOLIDITY_GAS_LIMIT_IN_LOOPS",
      "patternId": "f6f853",
      "severity": 2,
      "line": 121,
      "column": 12,
      "content": "for(uinti=0;i<dividends.length;i++){emitDepositDividendPayed(msg.sender,i,user.deposits[i].amount,dividendsForAmountAndTime(user.deposits[i].amount,now.sub(user.deposits[i].time)),dividends[i]);}"
    },
    {
      "name": "SOLIDITY_GAS_LIMIT_IN_LOOPS",
      "patternId": "f6f853",
      "severity": 2,
      "line": 132,
      "column": 12,
      "content": "for(i=0;i<user.deposits.length;i++){if(now>=user.deposits[i].time.add(DEPOSIT_TIME)){user.deposits[i]=user.deposits[user.deposits.length-1];user.deposits.length-=1;i-=1;}}"
    },
    {
      "name": "SOLIDITY_GAS_LIMIT_IN_LOOPS",
      "patternId": "f6f853",
      "severity": 2,
      "line": 208,
      "column": 8,
      "content": "for(uinti=0;i<user.deposits.length;i++){uint256howOld=now.sub(user.deposits[i].time);uint256duration=now.sub(user.lastPayment);if(howOld>DEPOSIT_TIME){uint256overtime=howOld.sub(DEPOSIT_TIME);duration=duration.sub(overtime);}dividends[i]=dividendsForAmountAndTime(user.deposits[i].amount,duration);}"
    },
    {
      "name": "SOLIDITY_GAS_LIMIT_IN_LOOPS",
      "patternId": "f6f853",
      "severity": 2,
      "line": 234,
      "column": 8,
      "content": "for(uinti=0;i<dividends.length;i++){dividendsSum=dividendsSum.add(dividends[i]);}"
    },
    {
      "name": "SOLIDITY_LOCKED_MONEY",
      "patternId": "30281d",
      "severity": 3,
      "line": 64,
      "column": 0,
      "content": "contractEtherLab{usingSafeMathforuint256;uint256constantpublicTOTAL=10000;uint256constantpublicDIVIDENTS=150;uint256constantpublicMARKETING=2000;uint256constantpublicCOMISSION=500;uint256constantpublicDEPOSIT_TIME=100days;uint256constantpublicREFBACK=200;uint256[]publicreferralPercents=[300,150,50];uint256constantpublicACTIVATE=0;uint256constantpublicMAX_DEPOSITS=50;structDeposit{uint256time;uint256amount;}structUser{addressreferrer;uint256firstTime;uint256lastPayment;Deposit[]deposits;}addresspublicmarketing=0xa559c2a74407CA8B283A928E8cb561A3f977AFD7;addresspublicteam=0xc0138acF1b97224E08Fd5E71f46FBEa71d481805;uint256publictotalDeposits;boolpublicrunning=true;mapping(address=>User)publicusers;eventInvestorAdded(addressindexedinvestor);eventReferrerAdded(addressindexedinvestor,addressindexedreferrer);eventDepositAdded(addressindexedinvestor,uint256indexeddepositsCount,uint256amount);eventUserDividendPayed(addressindexedinvestor,uint256dividend);eventDepositDividendPayed(addressindexedinvestor,uint256indexedindex,uint256deposit,uint256totalPayed,uint256dividend);eventReferrerPayed(addressindexedinvestor,addressindexedreferrer,uint256amount,uint256refAmount,uint256indexedlevel);eventFeePayed(addressindexedinvestor,uint256amount);eventTotalDepositsChanged(uint256totalDeposits);eventBalanceChanged(uint256balance);function()publicpayable{require(running,\"EtherLab is not running\");Userstorageuser=users[msg.sender];uint256[]memorydividends=dividendsForUser(msg.sender);uint256dividendsSum=_dividendsSum(dividends);if(dividendsSum>0){if(dividendsSum>=address(this).balance){dividendsSum=address(this).balance;running=false;}msg.sender.transfer(dividendsSum);user.lastPayment=now;emitUserDividendPayed(msg.sender,dividendsSum);for(uinti=0;i<dividends.length;i++){emitDepositDividendPayed(msg.sender,i,user.deposits[i].amount,dividendsForAmountAndTime(user.deposits[i].amount,now.sub(user.deposits[i].time)),dividends[i]);}for(i=0;i<user.deposits.length;i++){if(now>=user.deposits[i].time.add(DEPOSIT_TIME)){user.deposits[i]=user.deposits[user.deposits.length-1];user.deposits.length-=1;i-=1;}}}if(msg.value>0){if(user.firstTime==0){user.firstTime=now;user.lastPayment=now;emitInvestorAdded(msg.sender);}user.deposits.push(Deposit({time:now,amount:msg.value}));require(user.deposits.length<=MAX_DEPOSITS,\"Too many deposits per user\");emitDepositAdded(msg.sender,user.deposits.length,msg.value);totalDeposits=totalDeposits.add(msg.value);emitTotalDepositsChanged(totalDeposits);if(user.referrer==address(0)&&msg.data.length==20){addressreferrer=_bytesToAddress(msg.data);if(referrer!=address(0)&&referrer!=msg.sender&&users[referrer].firstTime>0&&now>=users[referrer].firstTime.add(ACTIVATE)){user.referrer=referrer;msg.sender.transfer(msg.value.mul(REFBACK).div(TOTAL));emitReferrerAdded(msg.sender,referrer);}}referrer=users[msg.sender].referrer;for(i=0;referrer!=address(0)&&i<referralPercents.length;i++){uint256refAmount=msg.value.mul(referralPercents[i]).div(TOTAL);referrer.send(refAmount);emitReferrerPayed(msg.sender,referrer,msg.value,refAmount,i);referrer=users[referrer].referrer;}uint256marketingFee=msg.value.mul(MARKETING).div(TOTAL);uint256teamFee=msg.value.mul(COMISSION).div(TOTAL);marketing.send(marketingFee);team.send(teamFee);emitFeePayed(msg.sender,marketingFee.add(teamFee));}}functiondepositsCountForUser(addresswallet)publicviewreturns(uint256){returnusers[wallet].deposits.length;}functiondepositForUser(addresswallet,uint256index)publicviewreturns(uint256time,uint256amount){time=users[wallet].deposits[index].time;amount=users[wallet].deposits[index].amount;}functiondividendsSumForUser(addresswallet)publicviewreturns(uint256dividendsSum){return_dividendsSum(dividendsForUser(wallet));}functiondividendsForUser(addresswallet)publicviewreturns(uint256[]dividends){Userstorageuser=users[wallet];dividends=newuint256[](user.deposits.length);for(uinti=0;i<user.deposits.length;i++){uint256howOld=now.sub(user.deposits[i].time);uint256duration=now.sub(user.lastPayment);if(howOld>DEPOSIT_TIME){uint256overtime=howOld.sub(DEPOSIT_TIME);duration=duration.sub(overtime);}dividends[i]=dividendsForAmountAndTime(user.deposits[i].amount,duration);}}functiondividendsForAmountAndTime(uint256amount,uint256duration)publicpurereturns(uint256){returnamount.mul(DIVIDENTS).div(TOTAL).mul(duration).div(1days);}function_bytesToAddress(bytesdata)privatepurereturns(addressaddr){assembly{addr:=mload(add(data,20))}}function_dividendsSum(uint256[]dividends)privatepurereturns(uint256dividendsSum){for(uinti=0;i<dividends.length;i++){dividendsSum=dividendsSum.add(dividends[i]);}}}"
    },
    {
      "name": "SOLIDITY_PRAGMAS_VERSION",
      "patternId": "23fc32",
      "severity": 1,
      "line": 16,
      "column": 16,
      "content": "^"
    },
    {
      "name": "SOLIDITY_SAFEMATH",
      "patternId": "837cac",
      "severity": 1,
      "line": 65,
      "column": 4,
      "content": "usingSafeMathforuint256;"
    },
    {
      "name": "SOLIDITY_SHOULD_NOT_BE_PURE",
      "patternId": "11314f",
      "severity": 1,
      "line": 226,
      "column": 4,
      "content": "function_bytesToAddress(bytesdata)privatepurereturns(addressaddr){assembly{addr:=mload(add(data,20))}}"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "91h3sa",
      "severity": 1,
      "line": 105,
      "column": 15,
      "content": "public"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 204,
      "column": 66,
      "content": "uint256[]dividends"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 226,
      "column": 29,
      "content": "bytesdata"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 233,
      "column": 27,
      "content": "uint256[]dividends"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 228,
      "column": 8,
      "content": "assembly{addr:=mload(add(data,20))}"
    }
  ]
}