/unique_contracts/0xafb8fe439ff3dbba25e6c5058ed1246022716e6f.sol
line 305:16 no viable alternative at input 'addresspayable'
line 360:30 mismatched input 'payable' expecting {',', ')'}
line 360:45 no viable alternative at input 'account,'
line 360:45 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 360:62 mismatched input ')' expecting {';', '='}
line 361:27 extraneous input '=' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 361:38 mismatched input '[' expecting {';', '='}
line 361:46 mismatched input ']' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 361:51 extraneous input '(' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 361:59 extraneous input ')' expecting {';', '='}
line 362:23 extraneous input '=' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 362:39 mismatched input '.' expecting {';', '='}
line 362:43 extraneous input '(' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 362:51 extraneous input ')' expecting {';', '='}
line 363:30 extraneous input '=' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 363:53 mismatched input '.' expecting {';', '='}
line 363:57 extraneous input '(' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 363:65 extraneous input ')' expecting {';', '='}
line 365:24 extraneous input '(' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 365:32 extraneous input ')' expecting {';', '='}
line 366:28 mismatched input '(' expecting {';', '='}
line 366:36 mismatched input ',' expecting ')'
line 366:45 extraneous input ')' expecting {';', '='}
line 372:4 extraneous input 'function' expecting {<EOF>, 'pragma', 'import', 'contract', 'library', 'interface'}
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 53
column: 8
content: _owner=address(0)

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 206
column: 0
content: contractCryptoCardsPayrollisOwnable,ReentrancyGuard{usingSafeMathforuint256;eventPayeeAdded(addressaccount,uint256shares);eventPayeeUpdated(addressaccount,uint256sharesAdded,uint256totalShares);eventPaymentReleased(addressto,uint256amount);eventPaymentReceived(addressfrom,uint256amount);uint256private_totalShares;uint256private_totalReleased;uint256private_totalReleasedAllTime;mapping(address=>uint256)private_shares;mapping(address=>uint256)private_released;address[]private_payees;constructor()public{}function()externalpayable{emitPaymentReceived(msg.sender,msg.value);}functiontotalShares()publicviewreturns(uint256){return_totalShares;}functiontotalReleased()publicviewreturns(uint256){return_totalReleased;}functiontotalReleasedAllTime()publicviewreturns(uint256){return_totalReleasedAllTime;}functiontotalFunds()publicviewreturns(uint256){returnaddress(this).balance;}functionshares(addressaccount)publicviewreturns(uint256){return_shares[account];}functionsharePercentage(addressaccount)publicviewreturns(uint256){if(_totalShares==0||_shares[account]==0){return0;}return_shares[account].mul(100).div(_totalShares);}functionreleased(addressaccount)publicviewreturns(uint256){return_released[account];}functionavailable(addressaccount)publicviewreturns(uint256){uint256totalReceived=address(this).balance.add(_totalReleased);uint256totalCut=totalReceived.mul(_shares[account]).div(_totalShares);if(totalCut<_released[account]){return0;}returntotalCut.sub(_released[account]);}functionpayee(uint256index)publicviewreturns(address){return_payees[index];}functionrelease()externalnonReentrant{<missing ';'>addresspayable<missing ';'>account=address(uint160(msg.sender));require(_shares[account]>0,"Account not eligible for payroll");uint256payment=available(account);require(payment!=0,"No payment available for account");_release(account,payment);}functionreleaseAll()publiconlyOwner{_releaseAll();_resetAll();}functionaddNewPayee(addressaccount,uint256shares_)publiconlyOwner{require(account!=address(0),"Invalid account");require(Address.isContract(account)==false,"Account cannot be a contract");require(shares_>0,"Shares must be greater than zero");require(_shares[account]==0,"Payee already exists");require(_totalReleased==0,"Must release all existing payments first");_payees.push(account);_shares[account]=shares_;_totalShares=_totalShares.add(shares_);emitPayeeAdded(account,shares_);}functionincreasePayeeShares(addressaccount,uint256shares_)publiconlyOwner{require(account!=address(0),"Invalid account");require(shares_>0,"Shares must be greater than zero");require(_shares[account]>0,"Payee does not exist");require(_totalReleased==0,"Must release all existing payments first");_shares[account]=_shares[account].add(shares_);_totalShares=_totalShares.add(shares_);emitPayeeUpdated(account,shares_,_shares[account]);}function_release(addresspayableaccount,uint256payment)private{_released[account]=_released[account].add(payment);_totalReleased=_totalReleased.add(payment);_totalReleasedAllTime=_totalReleasedAllTime.add(payment);account.transfer(payment);emitPaymentReleased(account,payment);}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: ^

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 9
column: 12
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 172
column: 12
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 214
column: 12
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 215
column: 12
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 216
column: 12
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 218
column: 32
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 219
column: 32
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 220
column: 14
content: private

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 207
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SHOULD_NOT_BE_VIEW
patternId: 189abf
severity: 1
line: 150
column: 4
content: functionisContract(addressaccount)internalviewreturns(bool){uint256size;assembly{size:=extcodesize(account)}returnsize>0;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 360
column: 4
content: function_release(addresspayable

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 360
column: 38
content: account,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 360
column: 47
content: uint256payment)private{

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 361
column: 8
content: _released[account]=_released[

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 361
column: 39
content: account].

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 361
column: 48
content: add(payment);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 362
column: 8
content: _totalReleased=_totalReleased.

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 362
column: 40
content: add(payment);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 363
column: 8
content: _totalReleasedAllTime=_totalReleasedAllTime.

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 363
column: 54
content: add(payment);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 365
column: 8
content: account.transfer(payment);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 366
column: 8
content: emitPaymentReleased

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 366
column: 28
content: (account,payment);

SOLIDITY_VISIBILITY :13
SOLIDITY_SAFEMATH :1
SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_LOCKED_MONEY :1
SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA :8
SOLIDITY_ADDRESS_HARDCODED :1
SOLIDITY_SHOULD_NOT_BE_VIEW :1