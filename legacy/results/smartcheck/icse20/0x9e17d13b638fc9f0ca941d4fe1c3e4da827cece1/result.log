/unique_chucks/15/0x9e17d13b638fc9f0ca941d4fe1c3e4da827cece1.sol
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: c67a09
severity: 1
line: 442
column: 29
content: 0x0

ruleId: SOLIDITY_ERC20_APPROVE
patternId: af782c
severity: 2
line: 290
column: 4
content: functionapprove(address_spender,uint256_value)publicreturns(bool){if(allowanceCollection[msg.sender][_spender]>0&&_value!=0){revert("You cannot set a non-zero allowance to another non-zero, you must zero it first.");}allowanceCollection[msg.sender][_spender]=_value;emitApproval(msg.sender,_spender,_value);returntrue;}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 336
column: 4
content: functionsetKycHash(bytes32sha)publiconlyOwner{require(!isIcoComplete,"The ICO phase has ended, you can no longer set KYC hashes.");kycHashes.push(sha);}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 374
column: 4
content: functionsetKycProvider(addresswho)publiconlyOwner{regulatorApprovedKycProvider=who;}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 291
column: 8
content: if(allowanceCollection[msg.sender][_spender]>0&&_value!=0){revert("You cannot set a non-zero allowance to another non-zero, you must zero it first.");}

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 131
column: 4
content: usingSafeMathforuint256;

SOLIDITY_SAFEMATH :1
SOLIDITY_OVERPOWERED_ROLE :2
SOLIDITY_REVERT_REQUIRE :1
SOLIDITY_ADDRESS_HARDCODED :1
SOLIDITY_ERC20_APPROVE :1