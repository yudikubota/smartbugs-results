{
  "contract": "0x99b001735036d937b4a11c17a9a44f86fbddf4d0",
  "tool": "smartcheck",
  "start": 1563748905.2499545,
  "end": 1563748917.975117,
  "duration": 12.725162506103516,
  "analysis": [
    {
      "name": "SOLIDITY_ADDRESS_HARDCODED",
      "patternId": "a91b18",
      "severity": 1,
      "line": 268,
      "column": 4,
      "content": "owner=address(0)"
    },
    {
      "name": "SOLIDITY_EXTRA_GAS_IN_LOOPS",
      "patternId": "d3j11j",
      "severity": 1,
      "line": 425,
      "column": 8,
      "content": "for(uinti=0;i<_starts.length-1;i++){require(externalCall(this,0,_callDatas,_starts[i],_starts[i+1]-_starts[i]));}"
    },
    {
      "name": "SOLIDITY_EXTRA_GAS_IN_LOOPS",
      "patternId": "d3j11j",
      "severity": 1,
      "line": 671,
      "column": 8,
      "content": "for(uinti=0;i<_exchanges.length;i++){bytesmemorydata=newbytes(_datasIndexes[i+1]-_datasIndexes[i]);for(uintj=_datasIndexes[i];j<_datasIndexes[i+1];j++){data[j-_datasIndexes[i]]=_datas[j];}if(data.length==0){continue;}if(i==_exchanges.length-1&&_throughToken!=address(0)){if(_throughToken.allowance(this,_exchanges[i])==0){_throughToken.asmApprove(_exchanges[i],uint256(-1));}}else{ERC20token=_mtkn.tokens(i);if(_exchanges[i]==0){token.asmTransfer(_for,token.balanceOf(this));continue;}if(token.allowance(this,_exchanges[i])==0){token.asmApprove(_exchanges[i],uint256(-1));}}require(_exchanges[i].call(data),\"sell: exchange arbitrary call failed\");}"
    },
    {
      "name": "SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN",
      "patternId": "58bdd3",
      "severity": 1,
      "line": 129,
      "column": 4,
      "content": "functionisContract(addressaddr)internalviewreturns(boolresult){assembly{result:=gt(extcodesize(addr),0)}}"
    },
    {
      "name": "SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN",
      "patternId": "58bdd3",
      "severity": 1,
      "line": 136,
      "column": 4,
      "content": "functionhandleReturnBool()internalpurereturns(boolresult){assembly{switchreturndatasize()case0{result:=1}case32{returndatacopy(0,0,32)result:=mload(0)}default{revert(0,0)}}}"
    },
    {
      "name": "SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN",
      "patternId": "58bdd3",
      "severity": 1,
      "line": 153,
      "column": 4,
      "content": "functionhandleReturnBytes32()internalpurereturns(bytes32result){assembly{ifeq(returndatasize(),32){returndatacopy(0,0,32)result:=mload(0)}ifgt(returndatasize(),32){returndatacopy(0,64,32)result:=mload(0)}iflt(returndatasize(),32){revert(0,0)}}}"
    },
    {
      "name": "SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN",
      "patternId": "58bdd3",
      "severity": 1,
      "line": 405,
      "column": 4,
      "content": "functionexternalCall(addressdestination,uintvalue,bytesdata,uintdataOffset,uintdataLength)internalreturns(boolresult){assembly{letx:=mload(0x40)letd:=add(data,32)result:=call(sub(gas,34710),destination,value,add(d,dataOffset),dataLength,x,0)}}"
    },
    {
      "name": "SOLIDITY_GAS_LIMIT_IN_LOOPS",
      "patternId": "f6f853",
      "severity": 2,
      "line": 671,
      "column": 8,
      "content": "for(uinti=0;i<_exchanges.length;i++){bytesmemorydata=newbytes(_datasIndexes[i+1]-_datasIndexes[i]);for(uintj=_datasIndexes[i];j<_datasIndexes[i+1];j++){data[j-_datasIndexes[i]]=_datas[j];}if(data.length==0){continue;}if(i==_exchanges.length-1&&_throughToken!=address(0)){if(_throughToken.allowance(this,_exchanges[i])==0){_throughToken.asmApprove(_exchanges[i],uint256(-1));}}else{ERC20token=_mtkn.tokens(i);if(_exchanges[i]==0){token.asmTransfer(_for,token.balanceOf(this));continue;}if(token.allowance(this,_exchanges[i])==0){token.asmApprove(_exchanges[i],uint256(-1));}}require(_exchanges[i].call(data),\"sell: exchange arbitrary call failed\");}"
    },
    {
      "name": "SOLIDITY_LOCKED_MONEY",
      "patternId": "30281d",
      "severity": 3,
      "line": 355,
      "column": 0,
      "content": "contractIEtherTokenisERC20{functiondeposit()publicpayable;functionwithdraw(uint256_amount)public;}"
    },
    {
      "name": "SOLIDITY_LOCKED_MONEY",
      "patternId": "30281d",
      "severity": 3,
      "line": 361,
      "column": 0,
      "content": "contractIBancorNetwork{functionconvert(address[]_path,uint256_amount,uint256_minReturn)publicpayablereturns(uint256);functionclaimAndConvert(address[]_path,uint256_amount,uint256_minReturn)publicpayablereturns(uint256);}"
    },
    {
      "name": "SOLIDITY_LOCKED_MONEY",
      "patternId": "30281d",
      "severity": 3,
      "line": 382,
      "column": 0,
      "content": "contractIKyberNetworkProxy{functiontrade(addresssrc,uintsrcAmount,addressdest,addressdestAddress,uintmaxDestAmount,uintminConversionRate,addresswalletId)publicpayablereturns(uint);}"
    },
    {
      "name": "SOLIDITY_PRAGMAS_VERSION",
      "patternId": "23fc32",
      "severity": 1,
      "line": 1,
      "column": 16,
      "content": "^"
    },
    {
      "name": "SOLIDITY_SAFEMATH",
      "patternId": "837cac",
      "severity": 1,
      "line": 127,
      "column": 4,
      "content": "usingSafeMathforuint;"
    },
    {
      "name": "SOLIDITY_SAFEMATH",
      "patternId": "837cac",
      "severity": 1,
      "line": 399,
      "column": 4,
      "content": "usingSafeMathforuint256;"
    },
    {
      "name": "SOLIDITY_SHOULD_NOT_BE_PURE",
      "patternId": "11314f",
      "severity": 1,
      "line": 136,
      "column": 4,
      "content": "functionhandleReturnBool()internalpurereturns(boolresult){assembly{switchreturndatasize()case0{result:=1}case32{returndatacopy(0,0,32)result:=mload(0)}default{revert(0,0)}}}"
    },
    {
      "name": "SOLIDITY_SHOULD_NOT_BE_PURE",
      "patternId": "11314f",
      "severity": 1,
      "line": 153,
      "column": 4,
      "content": "functionhandleReturnBytes32()internalpurereturns(bytes32result){assembly{ifeq(returndatasize(),32){returndatacopy(0,0,32)result:=mload(0)}ifgt(returndatasize(),32){returndatacopy(0,64,32)result:=mload(0)}iflt(returndatasize(),32){revert(0,0)}}}"
    },
    {
      "name": "SOLIDITY_SHOULD_NOT_BE_VIEW",
      "patternId": "189abf",
      "severity": 1,
      "line": 129,
      "column": 4,
      "content": "functionisContract(addressaddr)internalviewreturns(boolresult){assembly{result:=gt(extcodesize(addr),0)}}"
    },
    {
      "name": "SOLIDITY_SHOULD_NOT_BE_VIEW",
      "patternId": "189abf",
      "severity": 1,
      "line": 211,
      "column": 4,
      "content": "functionasmName(address_token)internalviewreturns(bytes32){require(isContract(_token));require(_token.call(bytes4(keccak256(\"name()\"))));returnhandleReturnBytes32();}"
    },
    {
      "name": "SOLIDITY_SHOULD_NOT_BE_VIEW",
      "patternId": "189abf",
      "severity": 1,
      "line": 218,
      "column": 4,
      "content": "functionasmSymbol(address_token)internalviewreturns(bytes32){require(isContract(_token));require(_token.call(bytes4(keccak256(\"symbol()\"))));returnhandleReturnBytes32();}"
    },
    {
      "name": "SOLIDITY_TX_ORIGIN",
      "patternId": "12e802",
      "severity": 2,
      "line": 608,
      "column": 12,
      "content": "tx.origin"
    },
    {
      "name": "SOLIDITY_TX_ORIGIN",
      "patternId": "12e802",
      "severity": 2,
      "line": 646,
      "column": 12,
      "content": "tx.origin"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "83k1no",
      "severity": 1,
      "line": 173,
      "column": 23,
      "content": "call(bytes4(keccak256(\"transfer(address,uint256)\")),_to,_value)"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "83k1no",
      "severity": 1,
      "line": 180,
      "column": 23,
      "content": "call(bytes4(keccak256(\"transferFrom(address,address,uint256)\")),_from,_to,_value)"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "83k1no",
      "severity": 1,
      "line": 187,
      "column": 23,
      "content": "call(bytes4(keccak256(\"approve(address,uint256)\")),_spender,_value)"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "91h3sa",
      "severity": 1,
      "line": 590,
      "column": 15,
      "content": "public"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 100,
      "column": 70,
      "content": "uint256[]_tokenAmounts"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 104,
      "column": 64,
      "content": "ERC20[]_tokens"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 363,
      "column": 8,
      "content": "address[]_path"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 372,
      "column": 8,
      "content": "address[]_path"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 405,
      "column": 59,
      "content": "bytesdata"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 424,
      "column": 20,
      "content": "bytes_callDatas"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 424,
      "column": 38,
      "content": "uint[]_starts"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 598,
      "column": 8,
      "content": "bytes_callDatas"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 599,
      "column": 8,
      "content": "uint[]_starts"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 615,
      "column": 8,
      "content": "bytes_callDatas"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 616,
      "column": 8,
      "content": "uint[]_starts"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 633,
      "column": 8,
      "content": "address[]_exchanges"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 634,
      "column": 8,
      "content": "bytes_datas"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 635,
      "column": 8,
      "content": "uint[]_datasIndexes"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 654,
      "column": 8,
      "content": "address[]_exchanges"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 655,
      "column": 8,
      "content": "bytes_datas"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 656,
      "column": 8,
      "content": "uint[]_datasIndexes"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 131,
      "column": 8,
      "content": "assembly{result:=gt(extcodesize(addr),0)}"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 138,
      "column": 8,
      "content": "assembly{switchreturndatasize()case0{result:=1}case32{returndatacopy(0,0,32)result:=mload(0)}default{revert(0,0)}}"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 155,
      "column": 8,
      "content": "assembly{ifeq(returndatasize(),32){returndatacopy(0,0,32)result:=mload(0)}ifgt(returndatasize(),32){returndatacopy(0,64,32)result:=mload(0)}iflt(returndatasize(),32){revert(0,0)}}"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 407,
      "column": 8,
      "content": "assembly{letx:=mload(0x40)letd:=add(data,32)result:=call(sub(gas,34710),destination,value,add(d,dataOffset),dataLength,x,0)}"
    }
  ]
}