/unique_chucks/32/0xb81f5b60e186cf84ab21e43064b4defd77e96d4d.sol
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ARRAY_LENGTH_MANIPULATION
patternId: 872bdd
severity: 1
line: 1755
column: 8
content: registeredAssets.length--

ruleId: SOLIDITY_ARRAY_LENGTH_MANIPULATION
patternId: 872bdd
severity: 1
line: 1776
column: 8
content: registeredExchanges.length--

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 161
column: 4
content: functionmemberCount()constantreturns(uint){returnmembers.length;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 165
column: 4
content: functiontarget(uintid)constantreturns(address){returnactions[id].target;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 168
column: 4
content: functioncalldata(uintid)constantreturns(bytes){returnactions[id].calldata;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 171
column: 4
content: functionvalue(uintid)constantreturns(uint){returnactions[id].value;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 175
column: 4
content: functionconfirmations(uintid)constantreturns(uint){returnactions[id].confirmations;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 178
column: 4
content: functiondeadline(uintid)constantreturns(uint){returnactions[id].deadline;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 181
column: 4
content: functiontriggered(uintid)constantreturns(bool){returnactions[id].triggered;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 185
column: 4
content: functionconfirmed(uintid)constantreturns(bool){returnconfirmations(id)>=quorum;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 188
column: 4
content: functionexpired(uintid)constantreturns(bool){returnnow>deadline(id);}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 243
column: 4
content: functiongetInfo()constantreturns(uintquorum_,uintmemberCount,uintwindow_,uintactionCount_){return(quorum,members.length,window,actionCount);}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 252
column: 4
content: functiongetActionStatus(uintid)constantreturns(uintconfirmations,uintdeadline,booltriggered,addresstarget,uintvalue){return(actions[id].confirmations,actions[id].deadline,actions[id].triggered,actions[id].target,actions[id].value);}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 487
column: 4
content: functiontotalSupply()publicconstantreturns(uint);

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 488
column: 4
content: functionbalanceOf(addresstokenOwner)publicconstantreturns(uintbalance);

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 489
column: 4
content: functionallowance(addresstokenOwner,addressspender)publicconstantreturns(uintremaining);

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 576
column: 4
content: functionallowance(address_owner,address_spender)constantpublicreturns(uint){returnallowed[_owner][_spender];}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 587
column: 4
content: functionbalanceOf(address_owner)constantpublicreturns(uint){returnbalances[_owner];}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 852kwn
severity: 1
line: 1230
column: 55
content: years

ruleId: SOLIDITY_ERC20_APPROVE
patternId: af782c
severity: 2
line: 561
column: 4
content: functionapprove(address_spender,uint_value)publicreturns(bool){require(_spender!=address(0));allowed[msg.sender][_spender]=_value;emitApproval(msg.sender,_spender,_value);returntrue;}

ruleId: SOLIDITY_EXACT_TIME
patternId: 1955d9
severity: 2
line: 1967
column: 20
content: assetsToPrices[ofAssets[i]].timestamp!=now

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 156
column: 8
content: for(uinti=0;i<members.length;i++){isMember[members[i]]=true;}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 910
column: 8
content: for(uinti=0;i<ofExchanges.length;++i){require(modules.pricefeed.exchangeIsRegistered(ofExchanges[i]));var(ofExchangeAdapter,takesCustody,)=modules.pricefeed.getExchangeInformation(ofExchanges[i]);exchanges.push(Exchange({exchange:ofExchanges[i],exchangeAdapter:ofExchangeAdapter,takesCustody:takesCustody}));}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 924
column: 8
content: for(uintj=0;j<ofDefaultAssets.length;j++){require(modules.pricefeed.assetIsRegistered(ofDefaultAssets[j]));isInvestAllowed[ofDefaultAssets[j]]=true;}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 950
column: 8
content: for(uinti=0;i<ofAssets.length;++i){require(modules.pricefeed.assetIsRegistered(ofAssets[i]));isInvestAllowed[ofAssets[i]]=true;}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 962
column: 8
content: for(uinti=0;i<ofAssets.length;++i){isInvestAllowed[ofAssets[i]]=false;}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 1175
column: 8
content: for(uinti=0;i<tempOwnedAssets.length;++i){addressofAsset=tempOwnedAssets[i];uintassetHoldings=add(uint(AssetInterface(ofAsset).balanceOf(address(this))),quantityHeldInCustodyOfExchange(ofAsset));var(isRecent,assetPrice,assetDecimals)=modules.pricefeed.getPriceInfo(ofAsset);if(!isRecent){revert();}allAssetHoldings[i]=assetHoldings;allAssetPrices[i]=assetPrice;gav=add(gav,mul(assetHoldings,assetPrice)/(10**uint256(assetDecimals)));if(assetHoldings!=0||ofAsset==address(QUOTE_ASSET)||isInOpenMakeOrder[ofAsset]){ownedAssets.push(ofAsset);}else{isInAssetList[ofAsset]=false;}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 1359
column: 8
content: for(uinti=0;i<requestedAssets.length;++i){ofAsset=requestedAssets[i];require(isInAssetList[ofAsset]);for(uintj=0;j<redeemedAssets.length;j++){if(ofAsset==redeemedAssets[j]){revert();}}redeemedAssets[i]=ofAsset;uintassetHoldings=add(uint(AssetInterface(ofAsset).balanceOf(address(this))),quantityHeldInCustodyOfExchange(ofAsset));if(assetHoldings==0)continue;ownershipQuantities[i]=mul(assetHoldings,shareQuantity)/_totalSupply;if(uint(AssetInterface(ofAsset).balanceOf(address(this)))<ownershipQuantities[i]){isShutDown=true;emitErrorMessage("CRITICAL ERR: Not enough assetHoldings for owed ownershipQuantitiy");returnfalse;}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 1362
column: 12
content: for(uintj=0;j<redeemedAssets.length;j++){if(ofAsset==redeemedAssets[j]){revert();}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 1390
column: 8
content: for(uintk=0;k<requestedAssets.length;++k){ofAsset=requestedAssets[k];if(ownershipQuantities[k]==0){continue;}elseif(!AssetInterface(ofAsset).transfer(msg.sender,ownershipQuantities[k])){revert();}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 1411
column: 8
content: for(uinti;i<exchanges.length;i++){if(exchangesToOpenMakeOrders[exchanges[i].exchange][ofAsset].id==0){continue;}var(sellAsset,,sellQuantity,)=GenericExchangeInterface(exchanges[i].exchangeAdapter).getOrder(exchanges[i].exchange,exchangesToOpenMakeOrders[exchanges[i].exchange][ofAsset].id);if(sellQuantity==0){deleteexchangesToOpenMakeOrders[exchanges[i].exchange][ofAsset];}totalSellQuantity=add(totalSellQuantity,sellQuantity);if(!exchanges[i].takesCustody){totalSellQuantityInApprove+=sellQuantity;}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 1455
column: 8
content: for(uinti=0;i<exchanges.length;i++){ofExchanges[i]=exchanges[i].exchange;ofAdapters[i]=exchanges[i].exchangeAdapter;takesCustody[i]=exchanges[i].takesCustody;}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 1752
column: 8
content: for(uinti=assetIndex;i<registeredAssets.length-1;i++){registeredAssets[i]=registeredAssets[i+1];}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 1773
column: 8
content: for(uinti=exchangeIndex;i<registeredExchanges.length-1;i++){registeredExchanges[i]=registeredExchanges[i+1];}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 1794
column: 8
content: for(uinti=0;i<signatures.length;i++){if(signatures[i]==querySignature){returntrue;}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 1827
column: 8
content: for(uinti=0;i<signatures.length;i++){if(signatures[i]==querySignature){returntrue;}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 1949
column: 8
content: for(uinti;i<ofAssets.length;i++){var(price,timestamp)=getPrice(ofAssets[i]);prices[i]=price;timestamps[i]=timestamp;}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 1965
column: 8
content: for(uinti=0;i<ofAssets.length;++i){require(registrar.assetIsRegistered(ofAssets[i]));require(assetsToPrices[ofAssets[i]].timestamp!=now);assetsToPrices[ofAssets[i]].timestamp=now;assetsToPrices[ofAssets[i]].price=newPrices[i];}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 2185
column: 8
content: for(uinti;i<operators.length;i++){if(operators[i]==user){returntrue;}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 2216
column: 8
content: for(uinti;i<numStakers;i++){stakers[i]=stakeNodes[current].data.staker;amounts[i]=stakeNodes[current].data.amount;current=stakeNodes[current].next;}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 2465
column: 8
content: for(uinti=0;i<ofAssets.length;i++){uint[]memoryassetPrices=newuint[](operators.length);for(uintj=0;j<operators.length;j++){SimplePriceFeedfeed=SimplePriceFeed(operators[j]);var(price,timestamp)=feed.assetsToPrices(ofAssets[i]);if(now>add(timestamp,VALIDITY)){continue;}assetPrices[j]=price;}newPrices[i]=medianize(assetPrices);}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 2467
column: 12
content: for(uintj=0;j<operators.length;j++){SimplePriceFeedfeed=SimplePriceFeed(operators[j]);var(price,timestamp)=feed.assetsToPrices(ofAssets[i]);if(now>add(timestamp,VALIDITY)){continue;}assetPrices[j]=price;}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 2486
column: 8
content: for(uinti=0;i<unsorted.length;i++){if(unsorted[i]!=0){numValidEntries++;}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 2496
column: 8
content: for(uintj=0;j<unsorted.length;j++){uintitem=unsorted[j];if(item!=0){if(counter==0||item>=out[counter-1]){out[counter]=item;}else{uintk=0;while(item>=out[k]){k++;}for(uintl=counter;l>k;l--){out[l]=out[l-1];}out[k]=item;}counter++;}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 2560
column: 8
content: for(uinti;i<ofAssets.length;i++){if(!hasRecentPrice(ofAssets[i])){returnfalse;}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 156
column: 8
content: for(uinti=0;i<members.length;i++){isMember[members[i]]=true;}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 910
column: 8
content: for(uinti=0;i<ofExchanges.length;++i){require(modules.pricefeed.exchangeIsRegistered(ofExchanges[i]));var(ofExchangeAdapter,takesCustody,)=modules.pricefeed.getExchangeInformation(ofExchanges[i]);exchanges.push(Exchange({exchange:ofExchanges[i],exchangeAdapter:ofExchangeAdapter,takesCustody:takesCustody}));}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 924
column: 8
content: for(uintj=0;j<ofDefaultAssets.length;j++){require(modules.pricefeed.assetIsRegistered(ofDefaultAssets[j]));isInvestAllowed[ofDefaultAssets[j]]=true;}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 950
column: 8
content: for(uinti=0;i<ofAssets.length;++i){require(modules.pricefeed.assetIsRegistered(ofAssets[i]));isInvestAllowed[ofAssets[i]]=true;}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 962
column: 8
content: for(uinti=0;i<ofAssets.length;++i){isInvestAllowed[ofAssets[i]]=false;}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 1175
column: 8
content: for(uinti=0;i<tempOwnedAssets.length;++i){addressofAsset=tempOwnedAssets[i];uintassetHoldings=add(uint(AssetInterface(ofAsset).balanceOf(address(this))),quantityHeldInCustodyOfExchange(ofAsset));var(isRecent,assetPrice,assetDecimals)=modules.pricefeed.getPriceInfo(ofAsset);if(!isRecent){revert();}allAssetHoldings[i]=assetHoldings;allAssetPrices[i]=assetPrice;gav=add(gav,mul(assetHoldings,assetPrice)/(10**uint256(assetDecimals)));if(assetHoldings!=0||ofAsset==address(QUOTE_ASSET)||isInOpenMakeOrder[ofAsset]){ownedAssets.push(ofAsset);}else{isInAssetList[ofAsset]=false;}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 1359
column: 8
content: for(uinti=0;i<requestedAssets.length;++i){ofAsset=requestedAssets[i];require(isInAssetList[ofAsset]);for(uintj=0;j<redeemedAssets.length;j++){if(ofAsset==redeemedAssets[j]){revert();}}redeemedAssets[i]=ofAsset;uintassetHoldings=add(uint(AssetInterface(ofAsset).balanceOf(address(this))),quantityHeldInCustodyOfExchange(ofAsset));if(assetHoldings==0)continue;ownershipQuantities[i]=mul(assetHoldings,shareQuantity)/_totalSupply;if(uint(AssetInterface(ofAsset).balanceOf(address(this)))<ownershipQuantities[i]){isShutDown=true;emitErrorMessage("CRITICAL ERR: Not enough assetHoldings for owed ownershipQuantitiy");returnfalse;}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 1362
column: 12
content: for(uintj=0;j<redeemedAssets.length;j++){if(ofAsset==redeemedAssets[j]){revert();}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 1390
column: 8
content: for(uintk=0;k<requestedAssets.length;++k){ofAsset=requestedAssets[k];if(ownershipQuantities[k]==0){continue;}elseif(!AssetInterface(ofAsset).transfer(msg.sender,ownershipQuantities[k])){revert();}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 1411
column: 8
content: for(uinti;i<exchanges.length;i++){if(exchangesToOpenMakeOrders[exchanges[i].exchange][ofAsset].id==0){continue;}var(sellAsset,,sellQuantity,)=GenericExchangeInterface(exchanges[i].exchangeAdapter).getOrder(exchanges[i].exchange,exchangesToOpenMakeOrders[exchanges[i].exchange][ofAsset].id);if(sellQuantity==0){deleteexchangesToOpenMakeOrders[exchanges[i].exchange][ofAsset];}totalSellQuantity=add(totalSellQuantity,sellQuantity);if(!exchanges[i].takesCustody){totalSellQuantityInApprove+=sellQuantity;}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 1455
column: 8
content: for(uinti=0;i<exchanges.length;i++){ofExchanges[i]=exchanges[i].exchange;ofAdapters[i]=exchanges[i].exchangeAdapter;takesCustody[i]=exchanges[i].takesCustody;}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 1794
column: 8
content: for(uinti=0;i<signatures.length;i++){if(signatures[i]==querySignature){returntrue;}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 1827
column: 8
content: for(uinti=0;i<signatures.length;i++){if(signatures[i]==querySignature){returntrue;}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 1949
column: 8
content: for(uinti;i<ofAssets.length;i++){var(price,timestamp)=getPrice(ofAssets[i]);prices[i]=price;timestamps[i]=timestamp;}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 1965
column: 8
content: for(uinti=0;i<ofAssets.length;++i){require(registrar.assetIsRegistered(ofAssets[i]));require(assetsToPrices[ofAssets[i]].timestamp!=now);assetsToPrices[ofAssets[i]].timestamp=now;assetsToPrices[ofAssets[i]].price=newPrices[i];}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 2185
column: 8
content: for(uinti;i<operators.length;i++){if(operators[i]==user){returntrue;}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 2465
column: 8
content: for(uinti=0;i<ofAssets.length;i++){uint[]memoryassetPrices=newuint[](operators.length);for(uintj=0;j<operators.length;j++){SimplePriceFeedfeed=SimplePriceFeed(operators[j]);var(price,timestamp)=feed.assetsToPrices(ofAssets[i]);if(now>add(timestamp,VALIDITY)){continue;}assetPrices[j]=price;}newPrices[i]=medianize(assetPrices);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 2467
column: 12
content: for(uintj=0;j<operators.length;j++){SimplePriceFeedfeed=SimplePriceFeed(operators[j]);var(price,timestamp)=feed.assetsToPrices(ofAssets[i]);if(now>add(timestamp,VALIDITY)){continue;}assetPrices[j]=price;}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 2486
column: 8
content: for(uinti=0;i<unsorted.length;i++){if(unsorted[i]!=0){numValidEntries++;}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 2496
column: 8
content: for(uintj=0;j<unsorted.length;j++){uintitem=unsorted[j];if(item!=0){if(counter==0||item>=out[counter-1]){out[counter]=item;}else{uintk=0;while(item>=out[k]){k++;}for(uintl=counter;l>k;l--){out[l]=out[l-1];}out[k]=item;}counter++;}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 2560
column: 8
content: for(uinti;i<ofAssets.length;i++){if(!hasRecentPrice(ofAssets[i])){returnfalse;}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: 17f23a
severity: 1
line: 2503
column: 27
content: item>=out[k]

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: 38f6c7
severity: 2
line: 2174
column: 8
content: while(isValidNode(current)){if(staker==stakeNodes[current].data.staker){returncurrent;}current=stakeNodes[current].next;}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: 38f6c7
severity: 2
line: 2238
column: 8
content: while(isValidNode(current)){if(amount>stakeNodes[current].data.amount){break;}current=stakeNodes[current].next;}

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 122
column: 0
content: contractDSGroupisDSExec,DSNote{address[]publicmembers;uintpublicquorum;uintpublicwindow;uintpublicactionCount;mapping(uint=>Action)publicactions;mapping(uint=>mapping(address=>bool))publicconfirmedBy;mapping(address=>bool)publicisMember;eventProposed(uintid,bytescalldata);eventConfirmed(uintid,addressmember);eventTriggered(uintid);structAction{addresstarget;bytescalldata;uintvalue;uintconfirmations;uintdeadline;booltriggered;}functionDSGroup(address[]members_,uintquorum_,uintwindow_){members=members_;quorum=quorum_;window=window_;for(uinti=0;i<members.length;i++){isMember[members[i]]=true;}}functionmemberCount()constantreturns(uint){returnmembers.length;}functiontarget(uintid)constantreturns(address){returnactions[id].target;}functioncalldata(uintid)constantreturns(bytes){returnactions[id].calldata;}functionvalue(uintid)constantreturns(uint){returnactions[id].value;}functionconfirmations(uintid)constantreturns(uint){returnactions[id].confirmations;}functiondeadline(uintid)constantreturns(uint){returnactions[id].deadline;}functiontriggered(uintid)constantreturns(bool){returnactions[id].triggered;}functionconfirmed(uintid)constantreturns(bool){returnconfirmations(id)>=quorum;}functionexpired(uintid)constantreturns(bool){returnnow>deadline(id);}functiondeposit()notepayable{}functionpropose(addresstarget,bytescalldata,uintvalue)onlyMembersnotereturns(uintid){id=++actionCount;actions[id].target=target;actions[id].calldata=calldata;actions[id].value=value;actions[id].deadline=now+window;Proposed(id,calldata);}functionconfirm(uintid)onlyMembersonlyActive(id)note{assert(!confirmedBy[id][msg.sender]);confirmedBy[id][msg.sender]=true;actions[id].confirmations++;Confirmed(id,msg.sender);}functiontrigger(uintid)onlyMembersonlyActive(id)note{assert(confirmed(id));actions[id].triggered=true;exec(actions[id].target,actions[id].calldata,actions[id].value);Triggered(id);}modifieronlyMembers{assert(isMember[msg.sender]);_;}modifieronlyActive(uintid){assert(!expired(id));assert(!triggered(id));_;}functiongetInfo()constantreturns(uintquorum_,uintmemberCount,uintwindow_,uintactionCount_){return(quorum,members.length,window,actionCount);}functiongetActionStatus(uintid)constantreturns(uintconfirmations,uintdeadline,booltriggered,addresstarget,uintvalue){return(actions[id].confirmations,actions[id].deadline,actions[id].triggered,actions[id].target,actions[id].value);}}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: ^

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 67
column: 8
content: if(!tryExec(target,calldata,value)){revert();}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 1026
column: 12
content: if(!isPriceRecent){revert();}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 1032
column: 8
content: if(isInvestAllowed[request.requestAsset]&&costQuantity<=request.giveQuantity){request.status=RequestStatus.executed;require(AssetInterface(request.requestAsset).transferFrom(request.participant,address(this),costQuantity));createShares(request.participant,request.shareQuantity);if(!isInAssetList[request.requestAsset]){ownedAssets.push(request.requestAsset);isInAssetList[request.requestAsset]=true;}}else{revert();}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 1184
column: 12
content: if(!isRecent){revert();}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 1363
column: 16
content: if(ofAsset==redeemedAssets[j]){revert();}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 1395
column: 19
content: if(!AssetInterface(ofAsset).transfer(msg.sender,ownershipQuantities[k])){revert();}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 2491
column: 8
content: if(numValidEntries<minimumPriceCount){revert();}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 2624
column: 15
content: if(getQuoteAsset()==ofBase){(isRecent,referencePrice,decimal)=getInvertedPriceInfo(ofQuote);}else{revert();}

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 901eae
severity: 1
line: 1971
column: 26
content: keccak256(ofAssets,newPrices)

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 901eae
severity: 1
line: 2853
column: 12
content: keccak256("\x19Ethereum Signed Message:\n32",TERMS_AND_CONDITIONS)

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 91h3sa
severity: 1
line: 371
column: 15
content: public

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 58
column: 38
content: bytescalldata

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 64
column: 35
content: bytescalldata

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 73
column: 30
content: bytesc

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 83
column: 33
content: bytesc

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 352
column: 15
content: strings

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 442
column: 49
content: address[]requestedAssets

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 474
column: 48
content: bytes_data

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1349
column: 49
content: address[]requestedAssets

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1960
column: 27
content: address[]ofAssets

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1960
column: 47
content: uint[]newPrices

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 2126
column: 8
content: bytesdata

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 2139
column: 8
content: bytesdata

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 2416
column: 8
content: bytesdata

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 2447
column: 30
content: address[]ofAssets

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 441gim
severity: 1
line: 1017
column: 8
content: Requestrequest=requests[id]

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 441gim
severity: 1
line: 1468
column: 8
content: OpenMakeOrderorder=exchangesToOpenMakeOrders[ofExchange][ofAsset]

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 441gim
severity: 1
line: 1711
column: 8
content: Assetasset=assetInformation[ofAsset]

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 441gim
severity: 1
line: 1732
column: 8
content: Exchangeexchange=exchangeInformation[ofExchange]

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 441gim
severity: 1
line: 1809
column: 8
content: Exchangeexchange=exchangeInformation[ofExchange]

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 441gim
severity: 1
line: 1930
column: 8
content: Datadata=assetsToPrices[ofAsset]

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 111
column: 8
content: assembly{foo:=calldataload(4)bar:=calldataload(36)}

ruleId: SOLIDITY_VISIBILITY
patternId: 23rt6g
severity: 1
line: 442
column: 76
content: public

ruleId: SOLIDITY_VISIBILITY
patternId: 23rt6g
severity: 1
line: 443
column: 45
content: public

ruleId: SOLIDITY_VISIBILITY
patternId: 23rt6g
severity: 1
line: 474
column: 61
content: public

ruleId: SOLIDITY_VISIBILITY
patternId: 23rt6g
severity: 1
line: 478
column: 48
content: public

ruleId: SOLIDITY_VISIBILITY
patternId: 23rt6g
severity: 1
line: 479
column: 67
content: public

ruleId: SOLIDITY_VISIBILITY
patternId: 23rt6g
severity: 1
line: 480
column: 52
content: public

ruleId: SOLIDITY_VISIBILITY
patternId: 23rt6g
severity: 1
line: 482
column: 44
content: public

ruleId: SOLIDITY_VISIBILITY
patternId: 23rt6g
severity: 1
line: 483
column: 57
content: public

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 147
column: 4
content: functionDSGroup(address[]members_,uintquorum_,uintwindow_){members=members_;quorum=quorum_;window=window_;for(uinti=0;i<members.length;i++){isMember[members[i]]=true;}}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 161
column: 4
content: functionmemberCount()constantreturns(uint){returnmembers.length;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 165
column: 4
content: functiontarget(uintid)constantreturns(address){returnactions[id].target;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 168
column: 4
content: functioncalldata(uintid)constantreturns(bytes){returnactions[id].calldata;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 171
column: 4
content: functionvalue(uintid)constantreturns(uint){returnactions[id].value;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 175
column: 4
content: functionconfirmations(uintid)constantreturns(uint){returnactions[id].confirmations;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 178
column: 4
content: functiondeadline(uintid)constantreturns(uint){returnactions[id].deadline;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 181
column: 4
content: functiontriggered(uintid)constantreturns(bool){returnactions[id].triggered;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 185
column: 4
content: functionconfirmed(uintid)constantreturns(bool){returnconfirmations(id)>=quorum;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 188
column: 4
content: functionexpired(uintid)constantreturns(bool){returnnow>deadline(id);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 192
column: 4
content: functiondeposit()notepayable{}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 195
column: 4
content: functionpropose(addresstarget,bytescalldata,uintvalue)onlyMembersnotereturns(uintid){id=++actionCount;actions[id].target=target;actions[id].calldata=calldata;actions[id].value=value;actions[id].deadline=now+window;Proposed(id,calldata);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 210
column: 4
content: functionconfirm(uintid)onlyMembersonlyActive(id)note{assert(!confirmedBy[id][msg.sender]);confirmedBy[id][msg.sender]=true;actions[id].confirmations++;Confirmed(id,msg.sender);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 219
column: 4
content: functiontrigger(uintid)onlyMembersonlyActive(id)note{assert(confirmed(id));actions[id].triggered=true;exec(actions[id].target,actions[id].calldata,actions[id].value);Triggered(id);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 243
column: 4
content: functiongetInfo()constantreturns(uintquorum_,uintmemberCount,uintwindow_,uintactionCount_){return(quorum,members.length,window,actionCount);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 252
column: 4
content: functiongetActionStatus(uintid)constantreturns(uintconfirmations,uintdeadline,booltriggered,addresstarget,uintvalue){return(actions[id].confirmations,actions[id].deadline,actions[id].triggered,actions[id].target,actions[id].value);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 272
column: 4
content: functionnewGroup(address[]members,uintquorum,uintwindow)notereturns(DSGroupgroup){group=newDSGroup(members,quorum,window);isGroup[group]=true;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 448
column: 4
content: functiongetModules()viewreturns(address,address,address);

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 449
column: 4
content: functiongetLastRequestId()viewreturns(uint);

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 450
column: 4
content: functiongetManager()viewreturns(address);

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 453
column: 4
content: functionperformCalculations()viewreturns(uint,uint,uint,uint,uint,uint,uint);

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 454
column: 4
content: functioncalcSharePrice()viewreturns(uint);

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 603
column: 4
content: functiongetName()viewreturns(bytes32);

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 604
column: 4
content: functiongetSymbol()viewreturns(bytes8);

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 605
column: 4
content: functiongetDecimals()viewreturns(uint);

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 606
column: 4
content: functiongetCreationTime()viewreturns(uint);

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 607
column: 4
content: functiontoSmallestShareUnit(uintquantity)viewreturns(uint);

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 608
column: 4
content: functiontoWholeShareUnit(uintquantity)viewreturns(uint);

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 630
column: 4
content: functionShares(bytes32_name,bytes8_symbol,uint_decimal,uint_creationTime){name=_name;symbol=_symbol;decimal=_decimal;creationTime=_creationTime;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 662
column: 4
content: functiongetName()viewreturns(bytes32){returnname;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 663
column: 4
content: functiongetSymbol()viewreturns(bytes8){returnsymbol;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 664
column: 4
content: functiongetDecimals()viewreturns(uint){returndecimal;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 665
column: 4
content: functiongetCreationTime()viewreturns(uint){returncreationTime;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 666
column: 4
content: functiontoSmallestShareUnit(uintquantity)viewreturns(uint){returnmul(quantity,10**getDecimals());}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 667
column: 4
content: functiontoWholeShareUnit(uintquantity)viewreturns(uint){returnquantity/(10**getDecimals());}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 699
column: 4
content: functiontermsAndConditionsAreSigned(addressbyManager,uint8v,bytes32r,bytes32s)viewreturns(bool);

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 700
column: 4
content: functionisWhitelisted(addressx)viewreturns(bool);

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 701
column: 4
content: functionisCompetitionActive()viewreturns(bool);

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 705
column: 4
content: functiongetMelonAsset()viewreturns(address);

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 706
column: 4
content: functiongetRegistrantId(addressx)viewreturns(uint);

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 707
column: 4
content: functiongetRegistrantFund(addressx)viewreturns(address);

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 708
column: 4
content: functiongetCompetitionStatusOfRegistrants()viewreturns(address[],address[],bool[]);

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 709
column: 4
content: functiongetTimeTillEnd()viewreturns(uint);

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 710
column: 4
content: functiongetEtherValue(uintamount)viewreturns(uint);

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 711
column: 4
content: functioncalculatePayout(uintpayin)viewreturns(uint);

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 715
column: 4
content: functionregisterForCompetition(addressfund,uint8v,bytes32r,bytes32s)payable;

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 716
column: 4
content: functionbatchAddToWhitelist(uintmaxBuyinQuantity,address[]whitelistants);

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 717
column: 4
content: functionwithdrawMln(addressto,uintamount);

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 718
column: 4
content: functionclaimReward();

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 731
column: 4
content: functionisInvestmentPermitted(addressofParticipant,uint256giveQuantity,uint256shareQuantity)viewreturns(bool);

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 742
column: 4
content: functionisRedemptionPermitted(addressofParticipant,uint256shareQuantity,uint256receiveQuantity)viewreturns(bool);

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 778
column: 4
content: functionOwned(){owner=msg.sender;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 780
column: 4
content: functionchangeOwner(addressofNewOwner)pre_cond(isOwner()){owner=ofNewOwner;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 885
column: 4
content: functionFund(addressofManager,bytes32withName,addressofQuoteAsset,uintofManagementFee,uintofPerformanceFee,addressofCompliance,addressofRiskMgmt,addressofPriceFeed,address[]ofExchanges,address[]ofDefaultAssets)Shares(withName,"MLNF",18,now){require(ofManagementFee<10**18);require(ofPerformanceFee<10**18);isInvestAllowed[ofQuoteAsset]=true;owner=ofManager;MANAGEMENT_FEE_RATE=ofManagementFee;PERFORMANCE_FEE_RATE=ofPerformanceFee;VERSION=msg.sender;modules.compliance=ComplianceInterface(ofCompliance);modules.riskmgmt=RiskMgmtInterface(ofRiskMgmt);modules.pricefeed=CanonicalPriceFeed(ofPriceFeed);for(uinti=0;i<ofExchanges.length;++i){require(modules.pricefeed.exchangeIsRegistered(ofExchanges[i]));var(ofExchangeAdapter,takesCustody,)=modules.pricefeed.getExchangeInformation(ofExchanges[i]);exchanges.push(Exchange({exchange:ofExchanges[i],exchangeAdapter:ofExchangeAdapter,takesCustody:takesCustody}));}QUOTE_ASSET=Asset(ofQuoteAsset);ownedAssets.push(ofQuoteAsset);isInAssetList[ofQuoteAsset]=true;require(address(QUOTE_ASSET)==modules.pricefeed.getQuoteAsset());for(uintj=0;j<ofDefaultAssets.length;j++){require(modules.pricefeed.assetIsRegistered(ofDefaultAssets[j]));isInvestAllowed[ofDefaultAssets[j]]=true;}atLastUnclaimedFeeAllocation=Calculations({gav:0,managementFee:0,performanceFee:0,unclaimedFees:0,nav:0,highWaterMark:10**getDecimals(),totalSupply:_totalSupply,timestamp:now});}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1113
column: 4
content: functionaddOpenMakeOrder(addressofExchange,addressofSellAsset,uintorderId)pre_cond(msg.sender==address(this)){isInOpenMakeOrder[ofSellAsset]=true;exchangesToOpenMakeOrders[ofExchange][ofSellAsset].id=orderId;exchangesToOpenMakeOrders[ofExchange][ofSellAsset].expiresAt=add(now,ORDER_EXPIRATION_TIME);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1125
column: 4
content: functionremoveOpenMakeOrder(addressofExchange,addressofSellAsset)pre_cond(msg.sender==address(this)){deleteexchangesToOpenMakeOrders[ofExchange][ofSellAsset];}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1134
column: 4
content: functionorderUpdateHook(addressofExchange,bytes32orderId,UpdateTypeupdateType,address[2]orderAddresses,uint[3]orderValues)pre_cond(msg.sender==address(this)){if(updateType==UpdateType.make||updateType==UpdateType.take){orders.push(Order({exchangeAddress:ofExchange,orderId:orderId,updateType:updateType,makerAsset:orderAddresses[0],takerAsset:orderAddresses[1],makerQuantity:orderValues[0],takerQuantity:orderValues[1],timestamp:block.timestamp,fillTakerQuantity:orderValues[2]}));}emitOrderUpdated(ofExchange,orderId,updateType);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1168
column: 4
content: functioncalcGav()returns(uintgav){uint[]memoryallAssetHoldings=newuint[](ownedAssets.length);uint[]memoryallAssetPrices=newuint[](ownedAssets.length);address[]memorytempOwnedAssets;tempOwnedAssets=ownedAssets;deleteownedAssets;for(uinti=0;i<tempOwnedAssets.length;++i){addressofAsset=tempOwnedAssets[i];uintassetHoldings=add(uint(AssetInterface(ofAsset).balanceOf(address(this))),quantityHeldInCustodyOfExchange(ofAsset));var(isRecent,assetPrice,assetDecimals)=modules.pricefeed.getPriceInfo(ofAsset);if(!isRecent){revert();}allAssetHoldings[i]=assetHoldings;allAssetPrices[i]=assetPrice;gav=add(gav,mul(assetHoldings,assetPrice)/(10**uint256(assetDecimals)));if(assetHoldings!=0||ofAsset==address(QUOTE_ASSET)||isInOpenMakeOrder[ofAsset]){ownedAssets.push(ofAsset);}else{isInAssetList[ofAsset]=false;}}emitPortfolioContent(tempOwnedAssets,allAssetHoldings,allAssetPrices);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1221
column: 4
content: functioncalcUnclaimedFees(uintgav)viewreturns(uintmanagementFee,uintperformanceFee,uintunclaimedFees){uinttimePassed=sub(now,atLastUnclaimedFeeAllocation.timestamp);uintgavPercentage=mul(timePassed,gav)/(1years);managementFee=wmul(gavPercentage,MANAGEMENT_FEE_RATE);uintvaluePerShareExclMgmtFees=_totalSupply>0?calcValuePerShare(sub(gav,managementFee),_totalSupply):toSmallestShareUnit(1);if(valuePerShareExclMgmtFees>atLastUnclaimedFeeAllocation.highWaterMark){uintgainInSharePrice=sub(valuePerShareExclMgmtFees,atLastUnclaimedFeeAllocation.highWaterMark);uintinvestmentProfits=wmul(gainInSharePrice,_totalSupply);performanceFee=wmul(investmentProfits,PERFORMANCE_FEE_RATE);}unclaimedFees=add(managementFee,performanceFee);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1250
column: 4
content: functioncalcNav(uintgav,uintunclaimedFees)viewreturns(uintnav){nav=sub(gav,unclaimedFees);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1263
column: 4
content: functioncalcValuePerShare(uinttotalValue,uintnumShares)viewpre_cond(numShares>0)returns(uintvaluePerShare){valuePerShare=toSmallestShareUnit(totalValue)/numShares;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1283
column: 4
content: functionperformCalculations()viewreturns(uintgav,uintmanagementFee,uintperformanceFee,uintunclaimedFees,uintfeesShareQuantity,uintnav,uintsharePrice){gav=calcGav();(managementFee,performanceFee,unclaimedFees)=calcUnclaimedFees(gav);nav=calcNav(gav,unclaimedFees);feesShareQuantity=(gav==0)?0:mul(_totalSupply,unclaimedFees)/gav;uinttotalSupplyAccountingForFees=add(_totalSupply,feesShareQuantity);sharePrice=_totalSupply>0?calcValuePerShare(gav,totalSupplyAccountingForFees):toSmallestShareUnit(1);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1408
column: 4
content: functionquantityHeldInCustodyOfExchange(addressofAsset)returns(uint){uinttotalSellQuantity;uinttotalSellQuantityInApprove;for(uinti;i<exchanges.length;i++){if(exchangesToOpenMakeOrders[exchanges[i].exchange][ofAsset].id==0){continue;}var(sellAsset,,sellQuantity,)=GenericExchangeInterface(exchanges[i].exchangeAdapter).getOrder(exchanges[i].exchange,exchangesToOpenMakeOrders[exchanges[i].exchange][ofAsset].id);if(sellQuantity==0){deleteexchangesToOpenMakeOrders[exchanges[i].exchange][ofAsset];}totalSellQuantity=add(totalSellQuantity,sellQuantity);if(!exchanges[i].takesCustody){totalSellQuantityInApprove+=sellQuantity;}}if(totalSellQuantity==0){isInOpenMakeOrder[sellAsset]=false;}returnsub(totalSellQuantity,totalSellQuantityInApprove);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1434
column: 4
content: functioncalcSharePrice()viewreturns(uintsharePrice){(,,,,,sharePrice)=performCalculations();returnsharePrice;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1439
column: 4
content: functiongetModules()viewreturns(address,address,address){return(address(modules.pricefeed),address(modules.compliance),address(modules.riskmgmt));}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1447
column: 4
content: functiongetLastRequestId()viewreturns(uint){returnrequests.length-1;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1448
column: 4
content: functiongetLastOrderIndex()viewreturns(uint){returnorders.length-1;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1449
column: 4
content: functiongetManager()viewreturns(address){returnowner;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1450
column: 4
content: functiongetOwnedAssetsLength()viewreturns(uint){returnownedAssets.length;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1451
column: 4
content: functiongetExchangeInfo()viewreturns(address[],address[],bool[]){address[]memoryofExchanges=newaddress[](exchanges.length);address[]memoryofAdapters=newaddress[](exchanges.length);bool[]memorytakesCustody=newbool[](exchanges.length);for(uinti=0;i<exchanges.length;i++){ofExchanges[i]=exchanges[i].exchange;ofAdapters[i]=exchanges[i].exchangeAdapter;takesCustody[i]=exchanges[i].takesCustody;}return(ofExchanges,ofAdapters,takesCustody);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1462
column: 4
content: functionorderExpired(addressofExchange,addressofAsset)viewreturns(bool){uintexpiryTime=exchangesToOpenMakeOrders[ofExchange][ofAsset].expiresAt;require(expiryTime>0);returnblock.timestamp>=expiryTime;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1467
column: 4
content: functiongetOpenOrderInfo(addressofExchange,addressofAsset)viewreturns(uint,uint){OpenMakeOrderorder=exchangesToOpenMakeOrders[ofExchange][ofAsset];return(order.id,order.expiresAt);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1492
column: 4
content: functionisInvestmentPermitted(addressofParticipant,uint256giveQuantity,uint256shareQuantity)viewreturns(bool){returncompetitionAddress==ofParticipant;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1508
column: 4
content: functionisRedemptionPermitted(addressofParticipant,uint256shareQuantity,uint256receiveQuantity)viewreturns(bool){returncompetitionAddress==ofParticipant;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1522
column: 4
content: functionisCompetitionAllowed(addressx)viewreturns(bool){returnCompetitionInterface(competitionAddress).isWhitelisted(x)&&CompetitionInterface(competitionAddress).isCompetitionActive();}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1536
column: 4
content: functionchangeCompetitionAddress(addressofCompetition)pre_cond(isOwner()){competitionAddress=ofCompetition;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1569
column: 4
content: functionisApproveOnly()viewreturns(bool);

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1570
column: 4
content: functiongetLastOrderId(addressonExchange)viewreturns(uint);

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1571
column: 4
content: functionisActive(addressonExchange,uintid)viewreturns(bool);

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1572
column: 4
content: functiongetOwner(addressonExchange,uintid)viewreturns(address);

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1573
column: 4
content: functiongetOrder(addressonExchange,uintid)viewreturns(address,address,uint,uint);

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1574
column: 4
content: functiongetTimestamp(addressonExchange,uintid)viewreturns(uint);

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1632
column: 4
content: functionregisterAsset(addressofAsset,bytes32inputName,bytes8inputSymbol,uintinputDecimals,stringinputUrl,stringinputIpfsHash,address[2]breakInBreakOut,uint[]inputStandards,bytes4[]inputFunctionSignatures)authpre_cond(!assetInformation[ofAsset].exists){assetInformation[ofAsset].exists=true;registeredAssets.push(ofAsset);updateAsset(ofAsset,inputName,inputSymbol,inputDecimals,inputUrl,inputIpfsHash,breakInBreakOut,inputStandards,inputFunctionSignatures);assert(assetInformation[ofAsset].exists);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1669
column: 4
content: functionregisterExchange(addressofExchange,addressofExchangeAdapter,boolinputTakesCustody,bytes4[]inputFunctionSignatures)authpre_cond(!exchangeInformation[ofExchange].exists){exchangeInformation[ofExchange].exists=true;registeredExchanges.push(ofExchange);updateExchange(ofExchange,ofExchangeAdapter,inputTakesCustody,inputFunctionSignatures);assert(exchangeInformation[ofExchange].exists);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1697
column: 4
content: functionupdateAsset(addressofAsset,bytes32inputName,bytes8inputSymbol,uintinputDecimals,stringinputUrl,stringinputIpfsHash,address[2]ofBreakInBreakOut,uint[]inputStandards,bytes4[]inputFunctionSignatures)authpre_cond(assetInformation[ofAsset].exists){Assetasset=assetInformation[ofAsset];asset.name=inputName;asset.symbol=inputSymbol;asset.decimals=inputDecimals;asset.url=inputUrl;asset.ipfsHash=inputIpfsHash;asset.breakIn=ofBreakInBreakOut[0];asset.breakOut=ofBreakInBreakOut[1];asset.standards=inputStandards;asset.functionSignatures=inputFunctionSignatures;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1723
column: 4
content: functionupdateExchange(addressofExchange,addressofExchangeAdapter,boolinputTakesCustody,bytes4[]inputFunctionSignatures)authpre_cond(exchangeInformation[ofExchange].exists){Exchangeexchange=exchangeInformation[ofExchange];exchange.adapter=ofExchangeAdapter;exchange.takesCustody=inputTakesCustody;exchange.functionSignatures=inputFunctionSignatures;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1742
column: 4
content: functionremoveAsset(addressofAsset,uintassetIndex)authpre_cond(assetInformation[ofAsset].exists){require(registeredAssets[assetIndex]==ofAsset);deleteassetInformation[ofAsset];deleteregisteredAssets[assetIndex];for(uinti=assetIndex;i<registeredAssets.length-1;i++){registeredAssets[i]=registeredAssets[i+1];}registeredAssets.length--;assert(!assetInformation[ofAsset].exists);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1763
column: 4
content: functionremoveExchange(addressofExchange,uintexchangeIndex)authpre_cond(exchangeInformation[ofExchange].exists){require(registeredExchanges[exchangeIndex]==ofExchange);deleteexchangeInformation[ofExchange];deleteregisteredExchanges[exchangeIndex];for(uinti=exchangeIndex;i<registeredExchanges.length-1;i++){registeredExchanges[i]=registeredExchanges[i+1];}registeredExchanges.length--;assert(!exchangeInformation[ofExchange].exists);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1783
column: 4
content: functiongetName(addressofAsset)viewreturns(bytes32){returnassetInformation[ofAsset].name;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1784
column: 4
content: functiongetSymbol(addressofAsset)viewreturns(bytes8){returnassetInformation[ofAsset].symbol;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1785
column: 4
content: functiongetDecimals(addressofAsset)viewreturns(uint){returnassetInformation[ofAsset].decimals;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1786
column: 4
content: functionassetIsRegistered(addressofAsset)viewreturns(bool){returnassetInformation[ofAsset].exists;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1787
column: 4
content: functiongetRegisteredAssets()viewreturns(address[]){returnregisteredAssets;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1788
column: 4
content: functionassetMethodIsAllowed(addressofAsset,bytes4querySignature)returns(bool){bytes4[]memorysignatures=assetInformation[ofAsset].functionSignatures;for(uinti=0;i<signatures.length;i++){if(signatures[i]==querySignature){returntrue;}}returnfalse;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1803
column: 4
content: functionexchangeIsRegistered(addressofExchange)viewreturns(bool){returnexchangeInformation[ofExchange].exists;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1804
column: 4
content: functiongetRegisteredExchanges()viewreturns(address[]){returnregisteredExchanges;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1805
column: 4
content: functiongetExchangeInformation(addressofExchange)viewreturns(address,bool){Exchangeexchange=exchangeInformation[ofExchange];return(exchange.adapter,exchange.takesCustody);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1815
column: 4
content: functiongetExchangeFunctionSignatures(addressofExchange)viewreturns(bytes4[]){returnexchangeInformation[ofExchange].functionSignatures;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1821
column: 4
content: functionexchangeMethodIsAllowed(addressofExchange,bytes4querySignature)returns(bool){bytes4[]memorysignatures=exchangeInformation[ofExchange].functionSignatures;for(uinti=0;i<signatures.length;i++){if(signatures[i]==querySignature){returntrue;}}returnfalse;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1849
column: 4
content: functiongetQuoteAsset()viewreturns(address);

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1850
column: 4
content: functiongetLastUpdateId()viewreturns(uint);

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1852
column: 4
content: functiongetPrice(addressofAsset)viewreturns(uintprice,uinttimestamp);

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1853
column: 4
content: functiongetPrices(address[]ofAssets)viewreturns(uint[]prices,uint[]timestamps);

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1882
column: 4
content: functionSimplePriceFeed(addressofRegistrar,addressofQuoteAsset,addressofSuperFeed){registrar=CanonicalRegistrar(ofRegistrar);QUOTE_ASSET=ofQuoteAsset;superFeed=CanonicalPriceFeed(ofSuperFeed);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1914
column: 4
content: functiongetQuoteAsset()viewreturns(address){returnQUOTE_ASSET;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1915
column: 4
content: functiongetLastUpdateId()viewreturns(uint){returnupdateId;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1926
column: 4
content: functiongetPrice(addressofAsset)viewreturns(uintprice,uinttimestamp){Datadata=assetsToPrices[ofAsset];return(data.price,data.timestamp);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1943
column: 4
content: functiongetPrices(address[]ofAssets)viewreturns(uint[],uint[]){uint[]memoryprices=newuint[](ofAssets.length);uint[]memorytimestamps=newuint[](ofAssets.length);for(uinti;i<ofAssets.length;i++){var(price,timestamp)=getPrice(ofAssets[i]);prices[i]=price;timestamps[i]=timestamp;}return(prices,timestamps);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1985
column: 4
content: functionStakingPriceFeed(addressofRegistrar,addressofQuoteAsset,addressofSuperFeed)SimplePriceFeed(ofRegistrar,ofQuoteAsset,ofSuperFeed){stakingContract=OperatorStaking(ofSuperFeed);stakingToken=AssetInterface(stakingContract.stakingToken());}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 2011
column: 4
content: functionunstake(uintamount,bytesdata){stakingContract.unstake(amount,data);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 2038
column: 4
content: functionisMakePermitted(uintorderPrice,uintreferencePrice,addresssellAsset,addressbuyAsset,uintsellQuantity,uintbuyQuantity)viewreturns(bool);

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 2055
column: 4
content: functionisTakePermitted(uintorderPrice,uintreferencePrice,addresssellAsset,addressbuyAsset,uintsellQuantity,uintbuyQuantity)viewreturns(bool);

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 2166
column: 4
content: functionisValidNode(uintid)viewreturns(bool){returnid!=0&&(id==stakeNodes[0].next||stakeNodes[id].prev!=0);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 2172
column: 4
content: functionsearchNode(addressstaker)viewreturns(uint){uintcurrent=stakeNodes[0].next;while(isValidNode(current)){if(staker==stakeNodes[current].data.staker){returncurrent;}current=stakeNodes[current].next;}return0;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 2183
column: 4
content: functionisOperator(addressuser)viewreturns(bool){address[]memoryoperators=getOperators();for(uinti;i<operators.length;i++){if(operators[i]==user){returntrue;}}returnfalse;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 2193
column: 4
content: functiongetOperators()viewreturns(address[]){uintarrLength=(numOperators>numStakers)?numStakers:numOperators;address[]memoryoperators=newaddress[](arrLength);uintcurrent=stakeNodes[0].next;for(uinti;i<arrLength;i++){operators[i]=stakeNodes[current].data.staker;current=stakeNodes[current].next;}returnoperators;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 2209
column: 4
content: functiongetStakersAndAmounts()viewreturns(address[],uint[]){address[]memorystakers=newaddress[](numStakers);uint[]memoryamounts=newuint[](numStakers);uintcurrent=stakeNodes[0].next;for(uinti;i<numStakers;i++){stakers[i]=stakeNodes[current].data.staker;amounts[i]=stakeNodes[current].data.amount;current=stakeNodes[current].next;}return(stakers,amounts);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 2224
column: 4
content: functiontotalStakedFor(addressuser)viewreturns(uint){returnstakedAmounts[user];}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 2344
column: 4
content: functionCanonicalPriceFeed(addressofStakingAsset,addressofQuoteAsset,bytes32quoteAssetName,bytes8quoteAssetSymbol,uintquoteAssetDecimals,stringquoteAssetUrl,stringquoteAssetIpfsHash,address[2]quoteAssetBreakInBreakOut,uint[]quoteAssetStandards,bytes4[]quoteAssetFunctionSignatures,uint[2]updateInfo,uint[3]stakingInfo,addressofGovernance)OperatorStaking(AssetInterface(ofStakingAsset),stakingInfo[0],stakingInfo[1],stakingInfo[2])SimplePriceFeed(address(this),ofQuoteAsset,address(0)){registerAsset(ofQuoteAsset,quoteAssetName,quoteAssetSymbol,quoteAssetDecimals,quoteAssetUrl,quoteAssetIpfsHash,quoteAssetBreakInBreakOut,quoteAssetStandards,quoteAssetFunctionSignatures);INTERVAL=updateInfo[0];VALIDITY=updateInfo[1];setOwner(ofGovernance);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 2459
column: 4
content: functionpricesToCommit(address[]ofAssets)viewreturns(uint[]){address[]memoryoperators=getOperators();uint[]memorynewPrices=newuint[](ofAssets.length);for(uinti=0;i<ofAssets.length;i++){uint[]memoryassetPrices=newuint[](operators.length);for(uintj=0;j<operators.length;j++){SimplePriceFeedfeed=SimplePriceFeed(operators[j]);var(price,timestamp)=feed.assetsToPrices(ofAssets[i]);if(now>add(timestamp,VALIDITY)){continue;}assetPrices[j]=price;}newPrices[i]=medianize(assetPrices);}returnnewPrices;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 2481
column: 4
content: functionmedianize(uint[]unsorted)viewreturns(uint){uintnumValidEntries;for(uinti=0;i<unsorted.length;i++){if(unsorted[i]!=0){numValidEntries++;}}if(numValidEntries<minimumPriceCount){revert();}uintcounter;uint[]memoryout=newuint[](numValidEntries);for(uintj=0;j<unsorted.length;j++){uintitem=unsorted[j];if(item!=0){if(counter==0||item>=out[counter-1]){out[counter]=item;}else{uintk=0;while(item>=out[k]){k++;}for(uintl=counter;l>k;l--){out[l]=out[l-1];}out[k]=item;}counter++;}}uintvalue;if(counter%2==0){uintvalue1=uint(out[(counter/2)-1]);uintvalue2=uint(out[(counter/2)]);value=add(value1,value2)/2;}else{value=out[(counter-1)/2];}returnvalue;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 2526
column: 4
content: functionsetMinimumPriceCount(uintnewCount)auth{minimumPriceCount=newCount;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 2527
column: 4
content: functionenableUpdates()auth{updatesAreAllowed=true;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 2528
column: 4
content: functiondisableUpdates()auth{updatesAreAllowed=false;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 2534
column: 4
content: functiongetQuoteAsset()viewreturns(address){returnQUOTE_ASSET;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 2535
column: 4
content: functiongetInterval()viewreturns(uint){returnINTERVAL;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 2536
column: 4
content: functiongetValidity()viewreturns(uint){returnVALIDITY;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 2537
column: 4
content: functiongetLastUpdateId()viewreturns(uint){returnupdateId;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 2544
column: 4
content: functionhasRecentPrice(addressofAsset)viewpre_cond(assetIsRegistered(ofAsset))returns(boolisRecent){var(,timestamp)=getPrice(ofAsset);return(sub(now,timestamp)<=VALIDITY);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 2556
column: 4
content: functionhasRecentPrices(address[]ofAssets)viewreturns(boolareRecent){for(uinti;i<ofAssets.length;i++){if(!hasRecentPrice(ofAssets[i])){returnfalse;}}returntrue;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 2568
column: 4
content: functiongetPriceInfo(addressofAsset)viewreturns(boolisRecent,uintprice,uintassetDecimals){isRecent=hasRecentPrice(ofAsset);(price,)=getPrice(ofAsset);assetDecimals=getDecimals(ofAsset);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 2588
column: 4
content: functiongetInvertedPriceInfo(addressofAsset)viewreturns(boolisRecent,uintinvertedPrice,uintassetDecimals){uintinputPrice;(isRecent,inputPrice,assetDecimals)=getPriceInfo(ofAsset);uintquoteDecimals=getDecimals(QUOTE_ASSET);return(isRecent,mul(10**uint(quoteDecimals),10**uint(assetDecimals))/inputPrice,quoteDecimals);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 2618
column: 4
content: functiongetReferencePriceInfo(addressofBase,addressofQuote)viewreturns(boolisRecent,uintreferencePrice,uintdecimal){if(getQuoteAsset()==ofQuote){(isRecent,referencePrice,decimal)=getPriceInfo(ofBase);}elseif(getQuoteAsset()==ofBase){(isRecent,referencePrice,decimal)=getInvertedPriceInfo(ofQuote);}else{revert();}}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 2637
column: 4
content: functiongetOrderPriceInfo(addresssellAsset,addressbuyAsset,uintsellQuantity,uintbuyQuantity)viewreturns(uintorderPrice){returnmul(buyQuantity,10**uint(getDecimals(sellAsset)))/sellQuantity;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 2654
column: 4
content: functionexistsPriceOnAssetPair(addresssellAsset,addressbuyAsset)viewreturns(boolisExistent){returnhasRecentPrice(sellAsset)&&hasRecentPrice(buyAsset)&&(buyAsset==QUOTE_ASSET||sellAsset==QUOTE_ASSET)&&(buyAsset!=QUOTE_ASSET||sellAsset!=QUOTE_ASSET);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 2666
column: 4
content: functiongetPriceFeedsByOwner(address_owner)viewreturns(address[]){address[]memoryofPriceFeeds=newaddress[](numStakers);if(numStakers==0)returnofPriceFeeds;uintcurrent=stakeNodes[0].next;for(uinti;i<numStakers;i++){StakingPriceFeedstakingFeed=StakingPriceFeed(stakeNodes[current].data.staker);if(stakingFeed.owner()==_owner){ofPriceFeeds[i]=address(stakingFeed);}current=stakeNodes[current].next;}returnofPriceFeeds;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 2683
column: 4
content: functiongetHistoryLength()returns(uint){returnpriceHistory.length;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 2685
column: 4
content: functiongetHistoryAt(uintid)returns(address[],uint[],uint){address[]memoryassets=priceHistory[id].assets;uint[]memoryprices=priceHistory[id].prices;uinttimestamp=priceHistory[id].timestamp;return(assets,prices,timestamp);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 2703
column: 4
content: functionsetupFund(bytes32ofFundName,addressofQuoteAsset,uintofManagementFee,uintofPerformanceFee,addressofCompliance,addressofRiskMgmt,address[]ofExchanges,address[]ofDefaultAssets,uint8v,bytes32r,bytes32s);

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 2716
column: 4
content: functionshutDownFund(addressofFund);

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 2720
column: 4
content: functiongetNativeAsset()viewreturns(address);

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 2721
column: 4
content: functiongetFundById(uintwithId)viewreturns(address);

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 2722
column: 4
content: functiongetLastFundId()viewreturns(uint);

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 2723
column: 4
content: functiongetFundByManager(addressofManager)viewreturns(address);

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 2724
column: 4
content: functiontermsAndConditionsAreSigned(uint8v,bytes32r,bytes32s)viewreturns(boolsigned);

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 2757
column: 4
content: functionVersion(stringversionNumber,addressofGovernance,addressofMelonAsset,addressofNativeAsset,addressofCanonicalPriceFeed,addressofCompetitionCompliance){VERSION_NUMBER=versionNumber;GOVERNANCE=ofGovernance;MELON_ASSET=ofMelonAsset;NATIVE_ASSET=ofNativeAsset;CANONICAL_PRICEFEED=ofCanonicalPriceFeed;COMPLIANCE=ofCompetitionCompliance;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 2790
column: 4
content: functionsetupFund(bytes32ofFundName,addressofQuoteAsset,uintofManagementFee,uintofPerformanceFee,addressofCompliance,addressofRiskMgmt,address[]ofExchanges,address[]ofDefaultAssets,uint8v,bytes32r,bytes32s){require(!isShutDown);require(termsAndConditionsAreSigned(v,r,s));require(CompetitionCompliance(COMPLIANCE).isCompetitionAllowed(msg.sender));require(managerToFunds[msg.sender]==address(0));address[]memorymelonAsDefaultAsset=newaddress[](1);melonAsDefaultAsset[0]=MELON_ASSET;addressofFund=newFund(msg.sender,ofFundName,NATIVE_ASSET,0,0,COMPLIANCE,ofRiskMgmt,CANONICAL_PRICEFEED,ofExchanges,melonAsDefaultAsset);listOfFunds.push(ofFund);managerToFunds[msg.sender]=ofFund;emitFundUpdated(ofFund);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 2828
column: 4
content: functionshutDownFund(addressofFund)pre_cond(isShutDown||managerToFunds[msg.sender]==ofFund){Fundfund=Fund(ofFund);deletemanagerToFunds[msg.sender];fund.shutDown();emitFundUpdated(ofFund);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 2844
column: 4
content: functiontermsAndConditionsAreSigned(uint8v,bytes32r,bytes32s)viewreturns(boolsigned){returnecrecover(keccak256("\x19Ethereum Signed Message:\n32",TERMS_AND_CONDITIONS),v,r,s)==msg.sender;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 2860
column: 4
content: functiongetNativeAsset()viewreturns(address){returnNATIVE_ASSET;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 2861
column: 4
content: functiongetFundById(uintwithId)viewreturns(address){returnlistOfFunds[withId];}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 2862
column: 4
content: functiongetLastFundId()viewreturns(uint){returnlistOfFunds.length-1;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 2863
column: 4
content: functiongetFundByManager(addressofManager)viewreturns(address){returnmanagerToFunds[ofManager];}

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 306
column: 4
content: uintconstantWAD=10**18;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 307
column: 4
content: uintconstantRAY=10**27;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 502
column: 4
content: mapping(address=>uint)balances;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 503
column: 4
content: mapping(address=>mapping(address=>uint))allowed;

SOLIDITY_VISIBILITY :165
SOLIDITY_DEPRECATED_CONSTRUCTIONS :17
SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_ARRAY_LENGTH_MANIPULATION :2
SOLIDITY_REVERT_REQUIRE :8
SOLIDITY_LOCKED_MONEY :1
SOLIDITY_EXTRA_GAS_IN_LOOPS :24
SOLIDITY_UPGRADE_TO_050 :23
SOLIDITY_GAS_LIMIT_IN_LOOPS :24
SOLIDITY_USING_INLINE_ASSEMBLY :1
SOLIDITY_EXACT_TIME :1
SOLIDITY_ERC20_APPROVE :1