/unique_contracts/0xe572b13c34f50e24a74c4494f9a74141a909dd84.sol
line 249:44 extraneous input 'accounts' expecting {',', ')'}
line 284:47 extraneous input 'accounts' expecting {',', ')'}
line 881:49 no viable alternative at input '(bool))'
line 881:48 no viable alternative at input 'bool)'
line 881:50 mismatched input ',' expecting ';'
line 881:96 extraneous input ')' expecting ';'
line 999:34 mismatched input 'payable' expecting {',', ')'}
line 999:53 no viable alternative at input 'destination,'
line 999:53 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 999:69 mismatched input ')' expecting {';', '='}
line 1001:2 mismatched input 'returns' expecting {';', '='}
line 1001:16 extraneous input '{' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 1002:11 mismatched input '(' expecting {';', '='}
line 1002:35 mismatched input '(' expecting ')'
line 1002:43 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 1005:4 mismatched input '(' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 1006:13 mismatched input '(' expecting ')'
line 1006:19 extraneous input '.' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 1006:28 mismatched input '>=' expecting {';', '='}
line 1006:37 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 1011:24 extraneous input '(' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 1011:31 extraneous input ')' expecting {';', '='}
line 1014:31 mismatched input '(' expecting {';', '='}
line 1014:42 mismatched input ',' expecting ')'
line 1014:55 mismatched input ',' expecting {';', '='}
line 1014:63 mismatched input ')' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 1019:2 extraneous input 'function' expecting {<EOF>, 'pragma', 'import', 'contract', 'library', 'interface'}
line 1057:58 extraneous input 'destinations' expecting {',', ')'}
line 1057:70 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 1057:91 mismatched input 'amounts' expecting {';', '='}
line 1057:98 extraneous input ')' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 1058:21 mismatched input 'whenNotPaused' expecting {';', '='}
line 1059:2 mismatched input 'returns' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 1059:16 extraneous input '{' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 1060:11 mismatched input '(' expecting {';', '='}
line 1060:32 mismatched input '==' expecting ')'
line 1060:42 mismatched input '.' expecting {';', '='}
line 1060:49 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 1067:11 extraneous input '(' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 1067:32 mismatched input '(' expecting {';', '='}
line 1067:49 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 1072:4 extraneous input '(' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 1073:11 mismatched input '.' expecting {';', '='}
line 1073:21 mismatched input '(' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 1073:29 mismatched input '(' expecting ')'
line 1073:35 mismatched input ')' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 1073:55 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 1078:17 missing ')' at 'i'
line 1078:26 extraneous input '<' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 1078:40 mismatched input '.' expecting {';', '='}
line 1078:47 extraneous input ';' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 1078:50 mismatched input '++' expecting {';', '='}
line 1079:24 extraneous input '(' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 1079:37 mismatched input '[' expecting {';', '='}
line 1079:39 mismatched input ']' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 1079:52 mismatched input ')' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 1082:4 extraneous input 'emit' expecting {<EOF>, 'pragma', 'import', 'contract', 'library', 'interface'}
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 148
column: 8
content: _owner=address(0)

ruleId: SOLIDITY_ERC20_APPROVE
patternId: af782c
severity: 2
line: 632
column: 4
content: functionapprove(addressspender,uint256value)publicreturns(bool){_approve(msg.sender,spender,value);returntrue;}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 250
column: 4
content: for(uint8i=0;i<accounts.length;i++){addressaccount=accounts[i];if(account!=address(0)&&!_admins[account]&&account!=super.owner()){_admins[account]=true;emitAdminAdded(accounts[i]);}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 285
column: 4
content: for(uint8i=0;i<accounts.length;i++){addressaccount=accounts[i];if(account!=address(0)&&_admins[account]&&account!=super.owner()){_admins[account]=false;emitAdminRemoved(accounts[i]);}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 1044
column: 4
content: for(uint256i=0;i<values.length;i++){total=total.add(values[i]);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 250
column: 4
content: for(uint8i=0;i<accounts.length;i++){addressaccount=accounts[i];if(account!=address(0)&&!_admins[account]&&account!=super.owner()){_admins[account]=true;emitAdminAdded(accounts[i]);}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 285
column: 4
content: for(uint8i=0;i<accounts.length;i++){addressaccount=accounts[i];if(account!=address(0)&&_admins[account]&&account!=super.owner()){_admins[account]=false;emitAdminRemoved(accounts[i]);}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 1044
column: 4
content: for(uint256i=0;i<values.length;i++){total=total.add(values[i]);}

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 962
column: 0
content: contractTransferBaseisCappedTransfer{usingSafeMathforuint256;usingSafeERC20forERC20;eventTransferPerformed(addressindexedtoken,addressindexedtransferredBy,addressindexeddestination,uint256amount);eventEtherTransferPerformed(addressindexedtransferredBy,addressindexeddestination,uint256amount);functiontransferTokens(addresstoken,addressdestination,uint256amount)externalonlyAdminwhenNotPausedreturns(bool){require(checkIfValidTransfer(amount),"Access is denied.");ERC20erc20=ERC20(token);require(erc20.balanceOf(address(this))>=amount,"You don't have sufficient funds to transfer amount that large.");erc20.safeTransfer(destination,amount);emitTransferPerformed(token,msg.sender,destination,amount);returntrue;}functiontransferEthers(addresspayabledestination,uint256amount)externalonlyAdminwhenNotPausedreturns(bool){require(checkIfValidWeiTransfer<missing ';'>(amount),"Access is denied.");require(address<missing ';'>(this).balance>=amount,"You don't have sufficient funds to transfer amount that large.");destination.transfer(amount);emitEtherTransferPerformed(msg.sender,destination,amount);returntrue;}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 944
column: 2
content: functionsetCap(uint256cap,uint256weiCap)externalonlyOwnerwhenNotPausedreturns(bool){emitCapChanged(cap,weiCap,_maximumTransfer,_maximumTransferWei);_maximumTransfer=cap;_maximumTransferWei=weiCap;returntrue;}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 21
column: 16
content: >=

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 21
column: 25
content: <

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 105
column: 12
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 174
column: 10
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 218
column: 27
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 321
column: 7
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 585
column: 33
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 587
column: 54
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 589
column: 12
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 913
column: 10
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 914
column: 10
content: private

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 583
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 826
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 963
column: 2
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SHOULD_NOT_BE_VIEW
patternId: 189abf
severity: 1
line: 803
column: 4
content: functionisContract(addressaccount)internalviewreturns(bool){uint256size;assembly{size:=extcodesize(account)}returnsize>0;}

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 954
column: 41
content: (uint256,uint256)

ruleId: SOLIDITY_UNCHECKED_CALL
patternId: f39eed
severity: 3
line: 830
column: 8
content: callOptionalReturn(token,abi.encodeWithSelector(token.transfer.selector,to,value))

ruleId: SOLIDITY_UNCHECKED_CALL
patternId: f39eed
severity: 3
line: 834
column: 8
content: callOptionalReturn(token,abi.encodeWithSelector(token.transferFrom.selector,from,to,value))

ruleId: SOLIDITY_UNCHECKED_CALL
patternId: f39eed
severity: 3
line: 845
column: 8
content: callOptionalReturn(token,abi.encodeWithSelector(token.approve.selector,spender,value))

ruleId: SOLIDITY_UNCHECKED_CALL
patternId: f39eed
severity: 3
line: 850
column: 8
content: callOptionalReturn(token,abi.encodeWithSelector(token.approve.selector,spender,newAllowance))

ruleId: SOLIDITY_UNCHECKED_CALL
patternId: f39eed
severity: 3
line: 855
column: 8
content: callOptionalReturn(token,abi.encodeWithSelector(token.approve.selector,spender,newAllowance))

ruleId: SOLIDITY_UNCHECKED_CALL
patternId: f39eed
severity: 3
line: 876
column: 65
content: call(data)

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 999
column: 2
content: functiontransferEthers(addresspayable

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1057
column: 2
content: functionbulkTransfer(addresstoken,address[]calldata<missing ')'>

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 999
column: 42
content: destination,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 999
column: 55
content: uint256amount)external

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1000
column: 11
content: onlyAdminwhenNotPausedreturns

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1001
column: 9
content: (bool){require

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1002
column: 11
content: (checkIfValidWeiTransfer<missing ';'>

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1002
column: 35
content: (amount),"Access is denied.");

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1004
column: 4
content: require

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1005
column: 4
content: (address<missing ';'>

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1006
column: 13
content: (this).balance>=

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1006
column: 31
content: amount,"You don't have sufficient funds to transfer amount that large.");

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1011
column: 4
content: destination.transfer(amount);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1014
column: 4
content: emitEtherTransferPerformed

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1014
column: 31
content: (msg.sender,destination,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1014
column: 57
content: amount);returntrue;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1057
column: 58
content: destinations,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1057
column: 72
content: uint256[]calldata

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1058
column: 21
content: whenNotPausedreturns

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1059
column: 9
content: (bool){require

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1060
column: 11
content: (destinations.length==amounts.

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1060
column: 43
content: length,"Invalid operation.");

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1064
column: 4
content: uint256requiredBalance=sumOf(amounts);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1067
column: 4
content: require(checkIfValidTransfer

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1067
column: 32
content: (requiredBalance),"Access is denied.");

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1069
column: 4
content: ERC20erc20=ERC20(token);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1071
column: 4
content: require(erc20.

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1073
column: 12
content: balanceOf

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1073
column: 21
content: (address<missing ';'>

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1073
column: 29
content: (this))>=

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1073
column: 40
content: requiredBalance,"You don't have sufficient funds to transfer amount this big.");for

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1078
column: 8
content: (uint256<missing ')'>i=0;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1078
column: 24
content: i<destinations.

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1078
column: 41
content: length;i++){

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1079
column: 6
content: erc20.safeTransfer(destinations[

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1079
column: 38
content: i],

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1079
column: 42
content: amounts[i]);

SOLIDITY_VISIBILITY :37
SOLIDITY_OVERPOWERED_ROLE :1
SOLIDITY_PRAGMAS_VERSION :2
SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA :9
SOLIDITY_EXTRA_GAS_IN_LOOPS :3
SOLIDITY_ADDRESS_HARDCODED :1
SOLIDITY_GAS_LIMIT_IN_LOOPS :3
SOLIDITY_UNCHECKED_CALL :6
SOLIDITY_SHOULD_RETURN_STRUCT :1
SOLIDITY_ERC20_APPROVE :1
SOLIDITY_SAFEMATH :3
SOLIDITY_LOCKED_MONEY :1
SOLIDITY_SHOULD_NOT_BE_VIEW :1