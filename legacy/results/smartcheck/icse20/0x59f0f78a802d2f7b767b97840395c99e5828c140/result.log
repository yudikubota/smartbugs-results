/unique_contracts/0x59f0f78a802d2f7b767b97840395c99e5828c140.sol
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 101
column: 4
content: functionsplit(slicememoryself,slicememoryneedle)internalpurereturns(slicememorytoken){split(self,needle,token);}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 152
column: 4
content: functioncount(slicememoryself,slicememoryneedle)internalpurereturns(uintcnt){uintptr=findPtr(self._len,self._ptr,needle._len,needle._ptr)+needle._len;while(ptr<=self._ptr+self._len){cnt++;ptr=findPtr(self._len-(ptr-self._ptr),ptr,needle._len,needle._ptr)+needle._len;}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: 17f23a
severity: 1
line: 122
column: 23
content: ptrdata!=needledata

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: 17f23a
severity: 1
line: 154
column: 15
content: ptr<=self._ptr+self._len

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 5
column: 16
content: ^

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 13
column: 4
content: functionmemcpy(uintdest,uintsrc,uintlen)privatepure{for(;len>=32;len-=32){assembly{mstore(dest,mload(src))}dest+=32;src+=32;}uintmask=256**(32-len)-1;assembly{letsrcpart:=and(mload(src),not(mask))letdestpart:=and(mload(dest),mask)mstore(dest,or(destpart,srcpart))}}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 37
column: 4
content: functiontoString(slicememoryself)internalpurereturns(stringmemory){stringmemoryret=newstring(self._len);uintretptr;assembly{retptr:=add(ret,32)}memcpy(retptr,self._ptr,self._len);returnret;}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 51
column: 4
content: functiontoSlice(stringmemoryself)internalpurereturns(slicememory){uintptr;assembly{ptr:=add(self,0x20)}returnslice(bytes(self).length,ptr);}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 107
column: 4
content: functionfindPtr(uintselflen,uintselfptr,uintneedlelen,uintneedleptr)privatepurereturns(uint){uintptr=selfptr;uintidx;if(needlelen<=selflen){if(needlelen<=32){bytes32mask=bytes32(~(2**(8*(32-needlelen))-1));bytes32needledata;assembly{needledata:=and(mload(needleptr),mask)}uintend=selfptr+selflen-needlelen;bytes32ptrdata;assembly{ptrdata:=and(mload(ptr),mask)}while(ptrdata!=needledata){if(ptr>=end)returnselfptr+selflen;ptr++;assembly{ptrdata:=and(mload(ptr),mask)}}returnptr;}else{bytes32hash;assembly{hash:=keccak256(needleptr,needlelen)}for(idx=0;idx<=selflen-needlelen;idx++){bytes32testHash;assembly{testHash:=keccak256(ptr,needlelen)}if(hash==testHash)returnptr;ptr+=1;}}}returnselfptr+selflen;}

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 229
column: 8
content: stringlinkSet

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 230
column: 8
content: stringencryptionTypeSet

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 231
column: 8
content: stringhashValueSet

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 275
column: 49
content: string_remark1

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 276
column: 49
content: string_remark2

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 289
column: 61
content: stringlink

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 289
column: 74
content: stringencryptionType

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 289
column: 97
content: stringhashValue

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 323
column: 24
content: stringcontent

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 333
column: 24
content: stringcontent

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 344
column: 37
content: stringurl

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 16
column: 12
content: assembly{mstore(dest,mload(src))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 25
column: 8
content: assembly{letsrcpart:=and(mload(src),not(mask))letdestpart:=and(mload(dest),mask)mstore(dest,or(destpart,srcpart))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 40
column: 8
content: assembly{retptr:=add(ret,32)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 53
column: 8
content: assembly{ptr:=add(self,0x20)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 116
column: 16
content: assembly{needledata:=and(mload(needleptr),mask)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 120
column: 16
content: assembly{ptrdata:=and(mload(ptr),mask)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 126
column: 20
content: assembly{ptrdata:=and(mload(ptr),mask)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 132
column: 16
content: assembly{hash:=keccak256(needleptr,needlelen)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 136
column: 20
content: assembly{testHash:=keccak256(ptr,needlelen)}

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 188
column: 4
content: data[]dataArray;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 189
column: 4
content: uintdataNum;

SOLIDITY_VISIBILITY :2
SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN :2
SOLIDITY_UPGRADE_TO_050 :11
SOLIDITY_GAS_LIMIT_IN_LOOPS :2
SOLIDITY_USING_INLINE_ASSEMBLY :9
SOLIDITY_SHOULD_NOT_BE_PURE :4