/unique_chucks/7/0xbf8b9092e809de87932b28ffaa00d520b04359aa.sol
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 105
column: 8
content: pendingOwner=address(0)

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 123
column: 8
content: pendingOwner=address(0)

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 689
column: 4
content: functionsignatureSplit(bytes_signature)privatepurereturns(bytes32r,bytes32s,uint8v){require(_signature.length==65);assembly{r:=mload(add(_signature,32))s:=mload(add(_signature,64))v:=and(mload(add(_signature,65)),0xff)}if(v<2){v=v+27;}}

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 1090
column: 0
content: contractGameChannelisGameChannelConflict{constructor(address_serverAddress,uint128_minStake,uint128_maxStake,address_conflictResAddress,address_houseAddress,uint_gameIdCntr)publicGameChannelConflict(_serverAddress,_minStake,_maxStake,_conflictResAddress,_houseAddress,_gameIdCntr){}functioncreateGame(bytes32_playerEndHash,uint_previousGameId,uint_createBefore,bytes32_serverEndHash,bytes_serverSig)publicpayableonlyValidValueonlyValidHouseStake(activeGames+1)onlyNotPaused{uintpreviousGameId=playerGameId[msg.sender];Gamestoragegame=gameIdGame[previousGameId];require(game.status==GameStatus.ENDED);require(previousGameId==_previousGameId);require(block.timestamp<_createBefore);verifyCreateSig(msg.sender,_previousGameId,_createBefore,_serverEndHash,_serverSig);uintgameId=gameIdCntr++;playerGameId[msg.sender]=gameId;GamestoragenewGame=gameIdGame[gameId];newGame.stake=uint128(msg.value);newGame.status=GameStatus.ACTIVE;activeGames=activeGames+1;emitLogGameCreated(msg.sender,gameId,uint128(msg.value),_serverEndHash,_playerEndHash);}functionserverEndGame(uint32_roundId,uint8_gameType,uint16_num,uint_value,int_balance,bytes32_serverHash,bytes32_playerHash,uint_gameId,address_contractAddress,address_playerAddress,bytes_playerSig)publiconlyServer{verifySig(_roundId,_gameType,_num,_value,_balance,_serverHash,_playerHash,_gameId,_contractAddress,_playerSig,_playerAddress);regularEndGame(_playerAddress,_roundId,_gameType,_num,_value,_balance,_gameId,_contractAddress);}functionplayerEndGame(uint32_roundId,uint8_gameType,uint16_num,uint_value,int_balance,bytes32_serverHash,bytes32_playerHash,uint_gameId,address_contractAddress,bytes_serverSig)public{verifySig(_roundId,_gameType,_num,_value,_balance,_serverHash,_playerHash,_gameId,_contractAddress,_serverSig,serverAddress);regularEndGame(msg.sender,_roundId,_gameType,_num,_value,_balance,_gameId,_contractAddress);}functionverifyCreateSig(address_playerAddress,uint_previousGameId,uint_createBefore,bytes32_serverEndHash,bytes_serverSig)privateview{addresscontractAddress=this;bytes32hash=keccak256(abi.encodePacked(contractAddress,_playerAddress,_previousGameId,_createBefore,_serverEndHash));verify(hash,_serverSig,serverAddress);}functionregularEndGame(address_playerAddress,uint32_roundId,uint8_gameType,uint16_num,uint_value,int_balance,uint_gameId,address_contractAddress)private{uintgameId=playerGameId[_playerAddress];Gamestoragegame=gameIdGame[gameId];addresscontractAddress=this;intmaxBalance=conflictRes.maxBalance();require(_gameId==gameId);require(_roundId>0);require(-int(game.stake)<=_balance&&_balance<=maxBalance);require((_gameType==0)&&(_num==0)&&(_value==0));require(game.status==GameStatus.ACTIVE);assert(_contractAddress==contractAddress);closeGame(game,gameId,_roundId,_playerAddress,ReasonEnded.REGULAR_ENDED,_balance);}}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 448
column: 4
content: functionsetProfitTransferTimeSpan(uint_profitTransferTimeSpan)publiconlyOwneronlyValidTransferTimeSpan(_profitTransferTimeSpan){profitTransferTimeSpan=_profitTransferTimeSpan;}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 490
column: 4
content: functionsetHouseAddress(address_houseAddress)publiconlyOwner{houseAddress=_houseAddress;}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 499
column: 4
content: functionsetStakeRequirements(uint128_minStake,uint128_maxStake)publiconlyOwner{require(_minStake>0&&_minStake<=_maxStake);minStake=_minStake;maxStake=_maxStake;emitLogStakeLimitsModified(minStake,maxStake);}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: ^

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 866
column: 15
content: if(game.status==GameStatus.SERVER_INITIATED_END&&game.roundId==0){closeGame(game,gameId,0,playerAddress,ReasonEnded.REGULAR_ENDED,0);}else{revert();}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 890
column: 15
content: if(game.status==GameStatus.PLAYER_INITIATED_END&&game.roundId==0){closeGame(game,gameId,0,_playerAddress,ReasonEnded.REGULAR_ENDED,0);}else{revert();}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 988
column: 15
content: if(game.status==GameStatus.ACTIVE||(game.status==GameStatus.SERVER_INITIATED_END&&game.roundId<_roundId)){game.status=GameStatus.PLAYER_INITIATED_END;game.endInitiatedTime=block.timestamp;game.roundId=_roundId;game.gameType=_gameType;game.betNum=_num;game.betValue=_value;game.balance=_balance;game.playerSeed=_playerSeed;game.serverSeed=bytes32(0);emitLogPlayerRequestedEnd(msg.sender,gameId);}else{revert();}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 1051
column: 15
content: if(game.status==GameStatus.ACTIVE||(game.status==GameStatus.PLAYER_INITIATED_END&&game.roundId<_roundId)){game.status=GameStatus.SERVER_INITIATED_END;game.endInitiatedTime=block.timestamp;game.roundId=_roundId;game.gameType=_gameType;game.betNum=_num;game.betValue=_value;game.balance=_balance;game.serverSeed=_serverSeed;game.playerSeed=_playerSeed;emitLogServerRequestedEnd(_playerAddress,gameId);}else{revert();}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 689
column: 4
content: functionsignatureSplit(bytes_signature)privatepurereturns(bytes32r,bytes32s,uint8v){require(_signature.length==65);assembly{r:=mload(add(_signature,32))s:=mload(add(_signature,64))v:=and(mload(add(_signature,65)),0xff)}if(v<2){v=v+27;}}

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 7d54ca
severity: 1
line: 692
column: 16
content: (bytes32r,bytes32s,uint8v)

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 594
column: 8
content: bytes_sig

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 631
column: 8
content: bytes_sig

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 689
column: 28
content: bytes_signature

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 756
column: 8
content: bytes_playerSig

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 817
column: 8
content: bytes_serverSig

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1126
column: 8
content: bytes_serverSig

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1186
column: 8
content: bytes_playerSig

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1232
column: 8
content: bytes_serverSig

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1266
column: 8
content: bytes_serverSig

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 696
column: 8
content: assembly{r:=mload(add(_signature,32))s:=mload(add(_signature,64))v:=and(mload(add(_signature,65)),0xff)}

SOLIDITY_OVERPOWERED_ROLE :3
SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_REVERT_REQUIRE :4
SOLIDITY_LOCKED_MONEY :1
SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN :1
SOLIDITY_ADDRESS_HARDCODED :2
SOLIDITY_UPGRADE_TO_050 :9
SOLIDITY_USING_INLINE_ASSEMBLY :1
SOLIDITY_SHOULD_RETURN_STRUCT :1
SOLIDITY_SHOULD_NOT_BE_PURE :1