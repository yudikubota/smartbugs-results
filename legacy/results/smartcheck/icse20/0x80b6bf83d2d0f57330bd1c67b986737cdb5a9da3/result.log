/unique_chucks/33/0x80b6bf83d2d0f57330bd1c67b986737cdb5a9da3.sol
line 16:16 extraneous input 'payable' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'length', 'balance', 'memory', 'storage', 'emit', '_', 'revert', Identifier}
line 18:16 extraneous input 'payable' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'length', 'balance', 'memory', 'storage', 'emit', '_', 'revert', Identifier}
line 31:16 extraneous input 'payable' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'length', 'balance', 'memory', 'storage', 'emit', '_', 'revert', Identifier}
line 32:16 extraneous input 'payable' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'length', 'balance', 'memory', 'storage', 'emit', '_', 'revert', Identifier}
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ERC20_APPROVE
patternId: af782c
severity: 2
line: 230
column: 4
content: functionapprove(addressspender,uint256value)publicreturns(bool){require(spender!=address(0),"ERC20 approve, spender can not be 0x00");_allowed[msg.sender][spender]=value;emitApproval(msg.sender,spender,value);returntrue;}

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 28
column: 0
content: contractIPledgeForCoke{structDepositRequest{addresspayabledepositAddress;addresspayablefrom;uint256cokeAmount;uint256endBlock;bytes32billSeq;bytes32salt;}functiondeposit(DepositRequestmemoryrequest,ECStructs.ECDSASigmemoryecdsaSig)payablepublicreturns(bool);functiondepositCheck(DepositRequestmemoryrequest,ECStructs.ECDSASigmemoryecdsaSig)publicviewreturns(uint256);}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: ^

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 145
column: 12
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 172
column: 32
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 174
column: 52
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 176
column: 12
content: private

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 170
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 381
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_UNCHECKED_CALL
patternId: f39eed
severity: 3
line: 442
column: 58
content: call(data)

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 383
column: 4
content: IRequireUtilsrUtils;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 400
column: 4
content: addressteam;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 403
column: 4
content: uint256unlockNumerator;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 404
column: 4
content: uint256unlockDenominator;

SOLIDITY_VISIBILITY :4
SOLIDITY_SAFEMATH :2
SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_LOCKED_MONEY :1
SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA :4
SOLIDITY_UNCHECKED_CALL :1
SOLIDITY_ERC20_APPROVE :1