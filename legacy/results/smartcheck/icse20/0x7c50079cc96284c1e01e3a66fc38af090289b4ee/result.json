{
  "contract": "0x7c50079cc96284c1e01e3a66fc38af090289b4ee",
  "tool": "smartcheck",
  "start": 1563620465.7937205,
  "end": 1563620476.8847306,
  "duration": 11.091010093688965,
  "analysis": [
    {
      "name": "SOLIDITY_ADDRESS_HARDCODED",
      "patternId": "adc165",
      "severity": 1,
      "line": 349,
      "column": 17,
      "content": "0xBcd5B67aaeBb9765beE438e4Ce137B9aE2181898"
    },
    {
      "name": "SOLIDITY_ERC20_APPROVE",
      "patternId": "af782c",
      "severity": 2,
      "line": 141,
      "column": 2,
      "content": "functionapprove(address_spender,uint256_value)publicreturns(bool){allowed[msg.sender][_spender]=_value;emitApproval(msg.sender,_spender,_value);returntrue;}"
    },
    {
      "name": "SOLIDITY_EXTRA_GAS_IN_LOOPS",
      "patternId": "d3j11j",
      "severity": 1,
      "line": 232,
      "column": 8,
      "content": "for(uinttmpIndex=0;tmpIndex<_kycAddress.length;tmpIndex++){kycAddress[_kycAddress[tmpIndex]]=_status;emitLogKYCVerification(_kycAddress[tmpIndex],_status);}"
    },
    {
      "name": "SOLIDITY_EXTRA_GAS_IN_LOOPS",
      "patternId": "d3j11j",
      "severity": 1,
      "line": 482,
      "column": 8,
      "content": "for(uint_interator=0;_interator<_to.length;_interator++){if(kycEnabled==true){if(kycVerification.isVerified(_to[_interator])==false){revert(\"KYC Not Verified for Receiver\");}}}"
    },
    {
      "name": "SOLIDITY_EXTRA_GAS_IN_LOOPS",
      "patternId": "d3j11j",
      "severity": 1,
      "line": 495,
      "column": 8,
      "content": "for(_interator=0;_interator<_to.length;_interator++){_transfer(msg.sender,_to[_interator],_value[_interator]);}"
    },
    {
      "name": "SOLIDITY_EXTRA_GAS_IN_LOOPS",
      "patternId": "d3j11j",
      "severity": 1,
      "line": 521,
      "column": 8,
      "content": "for(uint_interator=0;_interator<_to.length;_interator++){require(transferRequestStatus[msg.sender][_signature[_interator]]==false,\"Signature already processed\");transferRequestReceiver[msg.sender][_signature[_interator]]=fundReceiver(_to[_interator],_value[_interator]);emitTransferRequested(msg.sender,_to[_interator],_value[_interator],_signature[_interator]);}"
    },
    {
      "name": "SOLIDITY_EXTRA_GAS_IN_LOOPS",
      "patternId": "d3j11j",
      "severity": 1,
      "line": 554,
      "column": 8,
      "content": "for(uint_interator=0;_interator<_from.length;_interator++){require(transferRequestStatus[_from[_interator]][_signature[_interator]]==false);fundReceivermemory_tmpHolder=transferRequestReceiver[_from[_interator]][_signature[_interator]];require(_tmpHolder._value<balances[_from[_interator]],\"Insufficient Sender Balance\");_transfer(_from[_interator],_tmpHolder._to,_tmpHolder._value);transferRequestStatus[_from[_interator]][_signature[_interator]]==true;emitTransferRequestFulfilled(_from[_interator],_tmpHolder._to,_tmpHolder._value,_signature[_interator]);}"
    },
    {
      "name": "SOLIDITY_GAS_LIMIT_IN_LOOPS",
      "patternId": "f6f853",
      "severity": 2,
      "line": 232,
      "column": 8,
      "content": "for(uinttmpIndex=0;tmpIndex<_kycAddress.length;tmpIndex++){kycAddress[_kycAddress[tmpIndex]]=_status;emitLogKYCVerification(_kycAddress[tmpIndex],_status);}"
    },
    {
      "name": "SOLIDITY_GAS_LIMIT_IN_LOOPS",
      "patternId": "f6f853",
      "severity": 2,
      "line": 482,
      "column": 8,
      "content": "for(uint_interator=0;_interator<_to.length;_interator++){if(kycEnabled==true){if(kycVerification.isVerified(_to[_interator])==false){revert(\"KYC Not Verified for Receiver\");}}}"
    },
    {
      "name": "SOLIDITY_GAS_LIMIT_IN_LOOPS",
      "patternId": "f6f853",
      "severity": 2,
      "line": 495,
      "column": 8,
      "content": "for(_interator=0;_interator<_to.length;_interator++){_transfer(msg.sender,_to[_interator],_value[_interator]);}"
    },
    {
      "name": "SOLIDITY_GAS_LIMIT_IN_LOOPS",
      "patternId": "f6f853",
      "severity": 2,
      "line": 521,
      "column": 8,
      "content": "for(uint_interator=0;_interator<_to.length;_interator++){require(transferRequestStatus[msg.sender][_signature[_interator]]==false,\"Signature already processed\");transferRequestReceiver[msg.sender][_signature[_interator]]=fundReceiver(_to[_interator],_value[_interator]);emitTransferRequested(msg.sender,_to[_interator],_value[_interator],_signature[_interator]);}"
    },
    {
      "name": "SOLIDITY_GAS_LIMIT_IN_LOOPS",
      "patternId": "f6f853",
      "severity": 2,
      "line": 554,
      "column": 8,
      "content": "for(uint_interator=0;_interator<_from.length;_interator++){require(transferRequestStatus[_from[_interator]][_signature[_interator]]==false);fundReceivermemory_tmpHolder=transferRequestReceiver[_from[_interator]][_signature[_interator]];require(_tmpHolder._value<balances[_from[_interator]],\"Insufficient Sender Balance\");_transfer(_from[_interator],_tmpHolder._to,_tmpHolder._value);transferRequestStatus[_from[_interator]][_signature[_interator]]==true;emitTransferRequestFulfilled(_from[_interator],_tmpHolder._to,_tmpHolder._value,_signature[_interator]);}"
    },
    {
      "name": "SOLIDITY_LOCKED_MONEY",
      "patternId": "30281d",
      "severity": 3,
      "line": 258,
      "column": 0,
      "content": "contractST20ETokenisOwned,BurnableToken{stringpublicname=\"SUREBANQA ENTERPRISE e-SHARE\";stringpublicsymbol=\"ST20E\";uint8publicdecimals=2;uint256publicinitialSupply=1000000*(10**uint256(decimals));uint256publictotalSupply=1000000*(10**uint256(decimals));uint256publicexternalAuthorizePurchase=0;mapping(address=>uint)publicuserLockinPeriod;mapping(address=>uint)publicuserLockinPeriodType;mapping(address=>bool)publicfrozenAccount;mapping(address=>uint8)authorizedCaller;boolpublickycEnabled=true;boolpublicauthorizedTransferOnly=true;mapping(address=>mapping(bytes32=>bool))privatetransferRequestStatus;structfundReceiver{address_to;uint_value;}mapping(address=>mapping(bytes32=>fundReceiver))privatetransferRequestReceiver;KYCVerificationpublickycVerification;eventKYCMandateUpdate(bool_kycEnabled);eventKYCContractAddressUpdate(KYCVerification_kycAddress);eventFrozenFunds(addresstarget,boolfrozen);eventAuthorizedCaller(addresscaller);eventDeAuthorizedCaller(addresscaller);eventLockinPeriodUpdated(address_guy,uint_userLockinPeriodType,uint_userLockinPeriod);eventTransferAuthorizationOverride(bool_authorize);eventTransferRequested(address_from,address_to,uint_value,bytes32_signature);eventTransferRequestFulfilled(address_from,address_to,uint_value,bytes32_signature);modifieronlyAuthCaller(){require(authorizedCaller[msg.sender]==1||msg.sender==owner);_;}modifierkycVerified(address_guy){if(kycEnabled==true){if(kycVerification.isVerified(_guy)==false){revert(\"KYC Not Verified\");}}_;}modifierfrozenVerified(address_guy){if(frozenAccount[_guy]==true){revert(\"Account is freeze\");}_;}modifiertransferAuthorized(address_guy){if(authorizedTransferOnly==true){if(authorizedCaller[msg.sender]==0||msg.sender!=owner){revert();}}_;}constructor()public{owner=msg.sender;balances[0xBcd5B67aaeBb9765beE438e4Ce137B9aE2181898]=totalSupply;authorizedCaller[msg.sender]=1;emitAuthorizedCaller(msg.sender);}functionupdateKycContractAddress(KYCVerification_kycAddress)publiconlyOwnerreturns(bool){kycVerification=_kycAddress;emitKYCContractAddressUpdate(_kycAddress);returntrue;}functionupdateKycMandate(bool_kycEnabled)publiconlyAuthCallerreturns(bool){kycEnabled=_kycEnabled;emitKYCMandateUpdate(_kycEnabled);returntrue;}functionoverrideUserLockinPeriod(address_guy,uint_userLockinPeriodType,uint_userLockinPeriod)publiconlyAuthCaller{userLockinPeriodType[_guy]=_userLockinPeriodType;userLockinPeriod[_guy]=_userLockinPeriod;emitLockinPeriodUpdated(_guy,_userLockinPeriodType,_userLockinPeriod);}functionoverrideTransferAuthorization(bool_authorize)publiconlyAuthCaller{authorizedTransferOnly=_authorize;emitTransferAuthorizationOverride(_authorize);}functionauthorizeCaller(address_caller)publiconlyOwnerreturns(bool){authorizedCaller[_caller]=1;emitAuthorizedCaller(_caller);returntrue;}functiondeAuthorizeCaller(address_caller)publiconlyOwnerreturns(bool){authorizedCaller[_caller]=0;emitDeAuthorizedCaller(_caller);returntrue;}function()payablepublic{revert();}function_transfer(address_from,address_to,uint_value)internaltransferAuthorized(msg.sender){require(_to!=0x0);require(balances[_from]>_value);require(balances[_to].add(_value)>balances[_to]);balances[_from]=balances[_from].sub(_value);balances[_to]=balances[_to].add(_value);emitTransfer(_from,_to,_value);}functionmintToken(addresstarget,uint256mintedAmount)onlyOwnerpublic{balances[target]=balances[target].add(mintedAmount);totalSupply=totalSupply.add(mintedAmount);emitTransfer(0,this,mintedAmount);emitTransfer(this,target,mintedAmount);}functionfreezeAccount(addresstarget,boolfreeze)onlyOwnerpublic{frozenAccount[target]=freeze;emitFrozenFunds(target,freeze);}functionpurchaseToken(address_receiver,uint_tokens,uint_userLockinPeriod,uint_userLockinPeriodType)onlyAuthCallerpublic{require(_tokens>0);require(initialSupply>_tokens);initialSupply=initialSupply.sub(_tokens);_transfer(owner,_receiver,_tokens);externalAuthorizePurchase=externalAuthorizePurchase.add(_tokens);if(_userLockinPeriod!=0&&_userLockinPeriodType!=0){userLockinPeriod[_receiver]=_userLockinPeriod;userLockinPeriodType[_receiver]=_userLockinPeriodType;emitLockinPeriodUpdated(_receiver,_userLockinPeriodType,_userLockinPeriod);}}functiontransfer(address_to,uint256_value)publickycVerified(msg.sender)frozenVerified(msg.sender)returns(bool){if(kycEnabled==true){if(kycVerification.isVerified(_to)==false){revert(\"KYC Not Verified for Receiver\");}}_transfer(msg.sender,_to,_value);returntrue;}functionmultiTransfer(address[]_to,uint[]_value)publickycVerified(msg.sender)frozenVerified(msg.sender)returns(bool){require(_to.length==_value.length,\"Length of Destination should be equal to value\");require(_to.length<=25,\"Max 25 Senders allowed\");for(uint_interator=0;_interator<_to.length;_interator++){if(kycEnabled==true){if(kycVerification.isVerified(_to[_interator])==false){revert(\"KYC Not Verified for Receiver\");}}}for(_interator=0;_interator<_to.length;_interator++){_transfer(msg.sender,_to[_interator],_value[_interator]);}returntrue;}functionrequestTransfer(address_to,uint_value,bytes32_signature)publicreturns(bool){require(transferRequestStatus[msg.sender][_signature]==false,\"Signature already processed\");require(balances[msg.sender]>_value,\"Insufficient Sender Balance\");transferRequestReceiver[msg.sender][_signature]=fundReceiver(_to,_value);emitTransferRequested(msg.sender,_to,_value,_signature);returntrue;}functionbatchRequestTransfer(address[]_to,uint[]_value,bytes32[]_signature)publicreturns(bool){require(_to.length==_value.length,\"Length for to, value should be equal\");require(_to.length==_signature.length,\"Length for to, signature should be equal\");for(uint_interator=0;_interator<_to.length;_interator++){require(transferRequestStatus[msg.sender][_signature[_interator]]==false,\"Signature already processed\");transferRequestReceiver[msg.sender][_signature[_interator]]=fundReceiver(_to[_interator],_value[_interator]);emitTransferRequested(msg.sender,_to[_interator],_value[_interator],_signature[_interator]);}returntrue;}functionfullTransferRequest(address_from,bytes32_signature)publiconlyAuthCallerreturns(bool){require(transferRequestStatus[_from][_signature]==false);fundReceivermemory_tmpHolder=transferRequestReceiver[_from][_signature];_transfer(_from,_tmpHolder._to,_tmpHolder._value);transferRequestStatus[_from][_signature]==true;emitTransferRequestFulfilled(_from,_tmpHolder._to,_tmpHolder._value,_signature);returntrue;}functionbatchFullTransferRequest(address[]_from,bytes32[]_signature)publiconlyAuthCallerreturns(bool){for(uint_interator=0;_interator<_from.length;_interator++){require(transferRequestStatus[_from[_interator]][_signature[_interator]]==false);fundReceivermemory_tmpHolder=transferRequestReceiver[_from[_interator]][_signature[_interator]];require(_tmpHolder._value<balances[_from[_interator]],\"Insufficient Sender Balance\");_transfer(_from[_interator],_tmpHolder._to,_tmpHolder._value);transferRequestStatus[_from[_interator]][_signature[_interator]]==true;emitTransferRequestFulfilled(_from[_interator],_tmpHolder._to,_tmpHolder._value,_signature[_interator]);}returntrue;}functiongetTransferRequestStatus(address_from,bytes32_signature)publicviewreturns(bool_status){returntransferRequestStatus[_from][_signature];}functiongetTransferRequestReceiver(address_from,bytes32_signature)publicviewreturns(address_to,uint_value){fundReceivermemory_tmpHolder=transferRequestReceiver[_from][_signature];return(_tmpHolder._to,_tmpHolder._value);}}"
    },
    {
      "name": "SOLIDITY_PRAGMAS_VERSION",
      "patternId": "23fc32",
      "severity": 1,
      "line": 1,
      "column": 16,
      "content": "^"
    },
    {
      "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
      "patternId": "5616b2",
      "severity": 1,
      "line": 282,
      "column": 49,
      "content": "private"
    },
    {
      "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
      "patternId": "5616b2",
      "severity": 1,
      "line": 289,
      "column": 57,
      "content": "private"
    },
    {
      "name": "SOLIDITY_REDUNDANT_FALLBACK_REJECT",
      "patternId": "b85a32",
      "severity": 1,
      "line": 402,
      "column": 31,
      "content": "{revert();}"
    },
    {
      "name": "SOLIDITY_REVERT_REQUIRE",
      "patternId": "c56b12",
      "severity": 1,
      "line": 317,
      "column": 10,
      "content": "if(kycVerification.isVerified(_guy)==false){revert(\"KYC Not Verified\");}"
    },
    {
      "name": "SOLIDITY_REVERT_REQUIRE",
      "patternId": "c56b12",
      "severity": 1,
      "line": 326,
      "column": 8,
      "content": "if(frozenAccount[_guy]==true){revert(\"Account is freeze\");}"
    },
    {
      "name": "SOLIDITY_REVERT_REQUIRE",
      "patternId": "c56b12",
      "severity": 1,
      "line": 337,
      "column": 12,
      "content": "if(authorizedCaller[msg.sender]==0||msg.sender!=owner){revert();}"
    },
    {
      "name": "SOLIDITY_REVERT_REQUIRE",
      "patternId": "c56b12",
      "severity": 1,
      "line": 464,
      "column": 12,
      "content": "if(kycVerification.isVerified(_to)==false){revert(\"KYC Not Verified for Receiver\");}"
    },
    {
      "name": "SOLIDITY_REVERT_REQUIRE",
      "patternId": "c56b12",
      "severity": 1,
      "line": 487,
      "column": 16,
      "content": "if(kycVerification.isVerified(_to[_interator])==false){revert(\"KYC Not Verified for Receiver\");}"
    },
    {
      "name": "SOLIDITY_SAFEMATH",
      "patternId": "837cac",
      "severity": 1,
      "line": 81,
      "column": 2,
      "content": "usingSafeMathforuint256;"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "91h3sa",
      "severity": 1,
      "line": 402,
      "column": 24,
      "content": "public"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 111,
      "column": 25,
      "content": "address[]_to"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 111,
      "column": 39,
      "content": "uint[]_value"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 230,
      "column": 36,
      "content": "address[]_kycAddress"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 478,
      "column": 27,
      "content": "address[]_to"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 478,
      "column": 41,
      "content": "uint[]_value"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 515,
      "column": 34,
      "content": "address[]_to"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 515,
      "column": 49,
      "content": "uint[]_value"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 515,
      "column": 64,
      "content": "bytes32[]_signature"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 550,
      "column": 38,
      "content": "address[]_from"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 550,
      "column": 55,
      "content": "bytes32[]_signature"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 83,
      "column": 2,
      "content": "mapping(address=>uint256)balances;"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 85,
      "column": 2,
      "content": "uint256totalSupply_;"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 276,
      "column": 4,
      "content": "mapping(address=>uint8)authorizedCaller;"
    }
  ]
}