{
  "contract": "0x5e93ba247d598ce71842a7bf495ac7763eac4dc6",
  "tool": "smartcheck",
  "start": 1563665251.923913,
  "end": 1563665262.4758434,
  "duration": 10.55193042755127,
  "analysis": [
    {
      "name": "SOLIDITY_ARRAY_LENGTH_MANIPULATION",
      "patternId": "872bdd",
      "severity": 1,
      "line": 679,
      "column": 8,
      "content": "leaves.length--"
    },
    {
      "name": "SOLIDITY_EXTRA_GAS_IN_LOOPS",
      "patternId": "d3j11j",
      "severity": 1,
      "line": 268,
      "column": 8,
      "content": "for(uinti=0;i<proof_inputs.length;i++){mul_input[0]=vk_gammaABC[m++];mul_input[1]=vk_gammaABC[m++];mul_input[2]=proof_inputs[i];assembly{success:=staticcall(sub(gas,2000),7,mul_input,0x80,add(add_input,0x40),0x60)}require(success);assembly{success:=staticcall(sub(gas,2000),6,add_input,0xc0,add_input,0x60)}require(success);}"
    },
    {
      "name": "SOLIDITY_EXTRA_GAS_IN_LOOPS",
      "patternId": "d3j11j",
      "severity": 1,
      "line": 331,
      "column": 8,
      "content": "for(uinti=0;i<input.length;i++)vk_x=Pairing.pointAdd(vk_x,Pairing.pointMul(vk.gammaABC[i+1],input[i]));"
    },
    {
      "name": "SOLIDITY_EXTRA_GAS_IN_LOOPS",
      "patternId": "d3j11j",
      "severity": 1,
      "line": 393,
      "column": 8,
      "content": "for(uint256i=0;i<in_x.length;i++){r=(r+in_x[i]+MiMCpe7(in_x[i],r,in_seed,round_count))%localQ;}"
    },
    {
      "name": "SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN",
      "patternId": "58bdd3",
      "severity": 1,
      "line": 47,
      "column": 4,
      "content": "functionpointAdd(G1Pointmemoryp1,G1Pointmemoryp2)internalviewreturns(G1Pointmemoryr){uint[4]memoryinput;input[0]=p1.X;input[1]=p1.Y;input[2]=p2.X;input[3]=p2.Y;boolsuccess;assembly{success:=staticcall(sub(gas,2000),6,input,0xc0,r,0x60)}require(success);}"
    },
    {
      "name": "SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN",
      "patternId": "58bdd3",
      "severity": 1,
      "line": 64,
      "column": 4,
      "content": "functionpointMul(G1Pointmemoryp,uints)internalviewreturns(G1Pointmemoryr){uint[3]memoryinput;input[0]=p.X;input[1]=p.Y;input[2]=s;boolsuccess;assembly{success:=staticcall(sub(gas,2000),7,input,0x80,r,0x60)}require(success);}"
    },
    {
      "name": "SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN",
      "patternId": "58bdd3",
      "severity": 1,
      "line": 356,
      "column": 4,
      "content": "functionMiMCpe7(uint256in_x,uint256in_k,uint256in_seed,uint256round_count)internalpurereturns(uint256out_x){assembly{iflt(round_count,1){revert(0,0)}letc:=mload(0x40)mstore(0x40,add(c,32))mstore(c,in_seed)letlocalQ:=0x30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001lettletafor{leti:=round_count}gt(i,0){i:=sub(i,1)}{mstore(c,keccak256(c,32))t:=addmod(addmod(in_x,mload(c),localQ),in_k,localQ)a:=mulmod(t,t,localQ)in_x:=mulmod(mulmod(a,mulmod(a,a,localQ),localQ),t,localQ)}out_x:=addmod(in_x,in_k,localQ)}}"
    },
    {
      "name": "SOLIDITY_GAS_LIMIT_IN_LOOPS",
      "patternId": "f6f853",
      "severity": 2,
      "line": 89,
      "column": 8,
      "content": "for(uinti=0;i<elements;i++){input[i*6+0]=p1[i].X;input[i*6+1]=p1[i].Y;input[i*6+2]=p2[i].X[0];input[i*6+3]=p2[i].X[1];input[i*6+4]=p2[i].Y[0];input[i*6+5]=p2[i].Y[1];}"
    },
    {
      "name": "SOLIDITY_GAS_LIMIT_IN_LOOPS",
      "patternId": "f6f853",
      "severity": 2,
      "line": 268,
      "column": 8,
      "content": "for(uinti=0;i<proof_inputs.length;i++){mul_input[0]=vk_gammaABC[m++];mul_input[1]=vk_gammaABC[m++];mul_input[2]=proof_inputs[i];assembly{success:=staticcall(sub(gas,2000),7,mul_input,0x80,add(add_input,0x40),0x60)}require(success);assembly{success:=staticcall(sub(gas,2000),6,add_input,0xc0,add_input,0x60)}require(success);}"
    },
    {
      "name": "SOLIDITY_GAS_LIMIT_IN_LOOPS",
      "patternId": "f6f853",
      "severity": 2,
      "line": 331,
      "column": 8,
      "content": "for(uinti=0;i<input.length;i++)vk_x=Pairing.pointAdd(vk_x,Pairing.pointMul(vk.gammaABC[i+1],input[i]));"
    },
    {
      "name": "SOLIDITY_GAS_LIMIT_IN_LOOPS",
      "patternId": "f6f853",
      "severity": 2,
      "line": 393,
      "column": 8,
      "content": "for(uint256i=0;i<in_x.length;i++){r=(r+in_x[i]+MiMCpe7(in_x[i],r,in_seed,round_count))%localQ;}"
    },
    {
      "name": "SOLIDITY_LOCKED_MONEY",
      "patternId": "30281d",
      "severity": 3,
      "line": 628,
      "column": 0,
      "content": "contractMixer{usingMerkleTreeforMerkleTree.Data;uintconstantpublicAMOUNT=0.01ether;uint256[14]vk;uint256[]gammaABC;mapping(uint256=>bool)publicnullifiers;mapping(address=>uint256[])publicpendingDeposits;MerkleTree.Datainternaltree;eventCommitmentAdded(addressindexed_fundingWallet,uint256_leaf);eventLeafAdded(uint256_leaf,uint256_leafIndex);eventDepositWithdrawn(uint256_nullifier);constructor(uint256[14]memoryin_vk,uint256[]memoryin_gammaABC)public{vk=in_vk;gammaABC=in_gammaABC;}functiongetRoot()publicviewreturns(uint256){returntree.getRoot();}functioncommit(uint256leaf,addressfundingWallet)publicpayable{require(leaf>0,\"null leaf\");pendingDeposits[fundingWallet].push(leaf);emitCommitmentAdded(fundingWallet,leaf);if(msg.value>0)fundCommitment();}functionfundCommitment()private{require(msg.value==AMOUNT,\"wrong value\");uint256[]storageleaves=pendingDeposits[msg.sender];require(leaves.length>0,\"commitment must be sent first\");uint256leaf=leaves[leaves.length-1];leaves.length--;(,uint256leafIndex)=tree.insert(leaf);emitLeafAdded(leaf,leafIndex);}function()externalpayable{fundCommitment();}functionmakeLeafHash(uint256nullifier_secret,addresswallet_address)externalpurereturns(uint256){bytes32digest=sha256(abi.encodePacked(nullifier_secret,uint256(wallet_address)));uint256mask=uint256(-1)>>4;returnuint256(digest)&mask;}functionmakeNullifierHash(uint256nullifier_secret)externalpurereturns(uint256){uint256[]memoryvals=newuint256[](2);vals[0]=nullifier_secret;vals[1]=nullifier_secret;returnMiMC.Hash(vals,0);}functiongetMerklePath(uint256leafIndex)externalviewreturns(uint256[15]memoryout_path){out_path=tree.getMerkleProof(leafIndex);}functionisSpent(uint256nullifier)publicviewreturns(bool){returnnullifiers[nullifier];}functionverifyProof(uint256in_root,addressin_wallet_address,uint256in_nullifier,uint256[8]memoryproof)publicviewreturns(bool){uint256[]memorysnark_input=newuint256[](3);snark_input[0]=in_root;snark_input[1]=uint256(in_wallet_address);snark_input[2]=in_nullifier;returnVerifier.verify(vk,gammaABC,proof,snark_input);}functionwithdraw(addresspayablein_withdraw_address,uint256in_nullifier,uint256[8]memoryproof)public{uintstartGas=gasleft();require(!nullifiers[in_nullifier],\"Nullifier used\");require(verifyProof<missing ';'>(getRoot(),in_withdraw_address,in_nullifier,proof),\"Proof verification failed\");nullifiers[in_nullifier]=true;emitDepositWithdrawn(in_nullifier);uintgasUsed=startGas-gasleft()+57700;uintrelayerRefund=gasUsed*tx.gasprice;if(relayerRefund>AMOUNT/20)relayerRefund=AMOUNT/20;in_withdraw_address.transfer(AMOUNT-relayerRefund);msg.sender.transfer(relayerRefund);}"
    },
    {
      "name": "SOLIDITY_PRAGMAS_VERSION",
      "patternId": "23fc32",
      "severity": 1,
      "line": 5,
      "column": 16,
      "content": "^"
    },
    {
      "name": "SOLIDITY_SHOULD_NOT_BE_PURE",
      "patternId": "11314f",
      "severity": 1,
      "line": 356,
      "column": 4,
      "content": "functionMiMCpe7(uint256in_x,uint256in_k,uint256in_seed,uint256round_count)internalpurereturns(uint256out_x){assembly{iflt(round_count,1){revert(0,0)}letc:=mload(0x40)mstore(0x40,add(c,32))mstore(c,in_seed)letlocalQ:=0x30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001lettletafor{leti:=round_count}gt(i,0){i:=sub(i,1)}{mstore(c,keccak256(c,32))t:=addmod(addmod(in_x,mload(c),localQ),in_k,localQ)a:=mulmod(t,t,localQ)in_x:=mulmod(mulmod(a,mulmod(a,a,localQ),localQ),t,localQ)}out_x:=addmod(in_x,in_k,localQ)}}"
    },
    {
      "name": "SOLIDITY_SHOULD_NOT_BE_VIEW",
      "patternId": "189abf",
      "severity": 1,
      "line": 47,
      "column": 4,
      "content": "functionpointAdd(G1Pointmemoryp1,G1Pointmemoryp2)internalviewreturns(G1Pointmemoryr){uint[4]memoryinput;input[0]=p1.X;input[1]=p1.Y;input[2]=p2.X;input[3]=p2.Y;boolsuccess;assembly{success:=staticcall(sub(gas,2000),6,input,0xc0,r,0x60)}require(success);}"
    },
    {
      "name": "SOLIDITY_SHOULD_NOT_BE_VIEW",
      "patternId": "189abf",
      "severity": 1,
      "line": 64,
      "column": 4,
      "content": "functionpointMul(G1Pointmemoryp,uints)internalviewreturns(G1Pointmemoryr){uint[3]memoryinput;input[0]=p.X;input[1]=p.Y;input[2]=s;boolsuccess;assembly{success:=staticcall(sub(gas,2000),7,input,0x80,r,0x60)}require(success);}"
    },
    {
      "name": "SOLIDITY_SHOULD_NOT_BE_VIEW",
      "patternId": "189abf",
      "severity": 1,
      "line": 82,
      "column": 4,
      "content": "functionpairing(G1Point[]memoryp1,G2Point[]memoryp2)internalviewreturns(bool){require(p1.length==p2.length);uintelements=p1.length;uintinputSize=elements*6;uint[]memoryinput=newuint[](inputSize);for(uinti=0;i<elements;i++){input[i*6+0]=p1[i].X;input[i*6+1]=p1[i].Y;input[i*6+2]=p2[i].X[0];input[i*6+3]=p2[i].X[1];input[i*6+4]=p2[i].Y[0];input[i*6+5]=p2[i].Y[1];}uint[1]memoryout;boolsuccess;assembly{success:=staticcall(sub(gas,2000),8,add(input,0x20),mul(inputSize,0x20),out,0x20)}require(success);returnout[0]!=0;}"
    },
    {
      "name": "SOLIDITY_SHOULD_NOT_BE_VIEW",
      "patternId": "189abf",
      "severity": 1,
      "line": 250,
      "column": 4,
      "content": "functionverify(uint256[14]memoryin_vk,uint256[]memoryvk_gammaABC,uint256[8]memoryin_proof,uint256[]memoryproof_inputs)internalviewreturns(bool){require(((vk_gammaABC.length/2)-1)==proof_inputs.length);uint256[3]memorymul_input;uint256[4]memoryadd_input;boolsuccess;uintm=2;add_input[0]=vk_gammaABC[0];add_input[1]=vk_gammaABC[1];for(uinti=0;i<proof_inputs.length;i++){mul_input[0]=vk_gammaABC[m++];mul_input[1]=vk_gammaABC[m++];mul_input[2]=proof_inputs[i];assembly{success:=staticcall(sub(gas,2000),7,mul_input,0x80,add(add_input,0x40),0x60)}require(success);assembly{success:=staticcall(sub(gas,2000),6,add_input,0xc0,add_input,0x60)}require(success);}uint[24]memoryinput=[in_proof[0],in_proof[1],in_proof[2],in_proof[3],in_proof[4],in_proof[5],in_vk[0],negateY(in_vk[1]),in_vk[2],in_vk[3],in_vk[4],in_vk[5],add_input[0],negateY(add_input[1]),in_vk[6],in_vk[7],in_vk[8],in_vk[9],in_proof[6],negateY(in_proof[7]),in_vk[10],in_vk[11],in_vk[12],in_vk[13]];uint[1]memoryout;assembly{success:=staticcall(sub(gas,2000),8,input,768,out,0x20)}require(success);returnout[0]!=0;}"
    },
    {
      "name": "SOLIDITY_SHOULD_RETURN_STRUCT",
      "patternId": "83hf3l",
      "severity": 1,
      "line": 483,
      "column": 16,
      "content": "(uint256new_root,uint256offset)"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 56,
      "column": 8,
      "content": "assembly{success:=staticcall(sub(gas,2000),6,input,0xc0,r,0x60)}"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 72,
      "column": 8,
      "content": "assembly{success:=staticcall(sub(gas,2000),7,input,0x80,r,0x60)}"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 100,
      "column": 8,
      "content": "assembly{success:=staticcall(sub(gas,2000),8,add(input,0x20),mul(inputSize,0x20),out,0x20)}"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 273,
      "column": 12,
      "content": "assembly{success:=staticcall(sub(gas,2000),7,mul_input,0x80,add(add_input,0x40),0x60)}"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 279,
      "column": 12,
      "content": "assembly{success:=staticcall(sub(gas,2000),6,add_input,0xc0,add_input,0x60)}"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 305,
      "column": 8,
      "content": "assembly{success:=staticcall(sub(gas,2000),8,input,768,out,0x20)}"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 359,
      "column": 8,
      "content": "assembly{iflt(round_count,1){revert(0,0)}letc:=mload(0x40)mstore(0x40,add(c,32))mstore(c,in_seed)letlocalQ:=0x30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001lettletafor{leti:=round_count}gt(i,0){i:=sub(i,1)}{mstore(c,keccak256(c,32))t:=addmod(addmod(in_x,mload(c),localQ),in_k,localQ)a:=mulmod(t,t,localQ)in_x:=mulmod(mulmod(a,mulmod(a,a,localQ),localQ),t,localQ)}out_x:=addmod(in_x,in_k,localQ)}"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": 910067,
      "severity": 1,
      "line": 744,
      "column": 4,
      "content": "functionwithdraw(addresspayable"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 634,
      "column": 4,
      "content": "uint256[14]vk;"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 635,
      "column": 4,
      "content": "uint256[]gammaABC;"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 745,
      "column": 24,
      "content": "in_withdraw_address,"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 746,
      "column": 8,
      "content": "uint256in_nullifier,"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 747,
      "column": 8,
      "content": "uint256[8]memoryproof)public{"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 751,
      "column": 8,
      "content": "uintstartGas=gasleft();"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 752,
      "column": 8,
      "content": "require"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 752,
      "column": 15,
      "content": "(!nullifiers[in_nullifier],\"Nullifier used\");require"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 753,
      "column": 15,
      "content": "(verifyProof<missing ';'>"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 753,
      "column": 27,
      "content": "(getRoot(),in_withdraw_address,"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 753,
      "column": 60,
      "content": "in_nullifier,proof),\"Proof verification failed\");"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 755,
      "column": 8,
      "content": "nullifiers[in_nullifier]=true;"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 756,
      "column": 8,
      "content": "emitDepositWithdrawn"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 756,
      "column": 29,
      "content": "(in_nullifier);"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 758,
      "column": 8,
      "content": "uintgasUsed=startGas-gasleft()+57700;"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 759,
      "column": 8,
      "content": "uintrelayerRefund=gasUsed*tx.gasprice;"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 760,
      "column": 10,
      "content": "(relayerRefund>AMOUNT/20)"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 760,
      "column": 38,
      "content": "relayerRefund=AMOUNT/20;"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 761,
      "column": 8,
      "content": "in_withdraw_address.transfer(AMOUNT-"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 761,
      "column": 46,
      "content": "relayerRefund);"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 762,
      "column": 8,
      "content": "msg.sender.transfer(relayerRefund);"
    }
  ]
}