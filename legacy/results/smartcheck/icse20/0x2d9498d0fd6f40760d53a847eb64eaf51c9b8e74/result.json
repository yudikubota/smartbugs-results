{
  "contract": "0x2d9498d0fd6f40760d53a847eb64eaf51c9b8e74",
  "tool": "smartcheck",
  "start": 1563719083.948822,
  "end": 1563719091.5856655,
  "duration": 7.63684344291687,
  "analysis": [
    {
      "name": "SOLIDITY_DEPRECATED_CONSTRUCTIONS",
      "patternId": "28fa69",
      "severity": 1,
      "line": 96,
      "column": 2,
      "content": "functionbalanceOf(TokenStoragestorageself,address_owner)constantreturns(uint256balance){returnself.balances[_owner];}"
    },
    {
      "name": "SOLIDITY_DEPRECATED_CONSTRUCTIONS",
      "patternId": "28fa69",
      "severity": 1,
      "line": 116,
      "column": 2,
      "content": "functionallowance(TokenStoragestorageself,address_owner,address_spender)constantreturns(uint256remaining){returnself.allowed[_owner][_spender];}"
    },
    {
      "name": "SOLIDITY_DEPRECATED_CONSTRUCTIONS",
      "patternId": "28fa69",
      "severity": 1,
      "line": 130,
      "column": 2,
      "content": "functiontimes(uint256a,uint256b)constantreturns(boolerr,uint256res){assembly{res:=mul(a,b)jumpi(allGood,or(iszero(b),eq(div(res,b),a)))err:=1res:=0allGood:}if(err)Err(\"times func overflow\");}"
    },
    {
      "name": "SOLIDITY_DEPRECATED_CONSTRUCTIONS",
      "patternId": "28fa69",
      "severity": 1,
      "line": 148,
      "column": 2,
      "content": "functiondividedBy(uint256a,uint256b)constantreturns(boolerr,uint256res){assembly{jumpi(e,iszero(b))res:=div(a,b)mstore(add(mload(0x40),0x20),res)return(mload(0x40),0x40)e:}Err(\"tried to divide by zero\");return(true,0);}"
    },
    {
      "name": "SOLIDITY_DEPRECATED_CONSTRUCTIONS",
      "patternId": "28fa69",
      "severity": 1,
      "line": 166,
      "column": 2,
      "content": "functionplus(uint256a,uint256b)constantreturns(boolerr,uint256res){assembly{res:=add(a,b)jumpi(allGood,and(eq(sub(res,b),a),gt(res,b)))err:=1res:=0allGood:}if(err)Err(\"plus func overflow\");}"
    },
    {
      "name": "SOLIDITY_DEPRECATED_CONSTRUCTIONS",
      "patternId": "28fa69",
      "severity": 1,
      "line": 184,
      "column": 2,
      "content": "functionminus(uint256a,uint256b)constantreturns(boolerr,uint256res){assembly{res:=sub(a,b)jumpi(allGood,eq(and(eq(add(res,b),a),or(lt(res,a),eq(res,a))),1))err:=1res:=0allGood:}if(err)Err(\"minus func underflow\");}"
    },
    {
      "name": "SOLIDITY_DEPRECATED_CONSTRUCTIONS",
      "patternId": "28fa69",
      "severity": 1,
      "line": 213,
      "column": 3,
      "content": "functiontotalSupply()constantreturns(uint){returntoken.totalSupply;}"
    },
    {
      "name": "SOLIDITY_DEPRECATED_CONSTRUCTIONS",
      "patternId": "28fa69",
      "severity": 1,
      "line": 217,
      "column": 3,
      "content": "functionbalanceOf(addresswho)constantreturns(uint){returntoken.balanceOf(who);}"
    },
    {
      "name": "SOLIDITY_DEPRECATED_CONSTRUCTIONS",
      "patternId": "28fa69",
      "severity": 1,
      "line": 221,
      "column": 3,
      "content": "functionallowance(addressowner,addressspender)constantreturns(uint){returntoken.allowance(owner,spender);}"
    },
    {
      "name": "SOLIDITY_ERC20_APPROVE",
      "patternId": "af782c",
      "severity": 2,
      "line": 244,
      "column": 3,
      "content": "functionapprove(addressspender,uintvalue)returns(boolok){returntoken.approve(spender,value);}"
    },
    {
      "name": "SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN",
      "patternId": "58bdd3",
      "severity": 1,
      "line": 130,
      "column": 2,
      "content": "functiontimes(uint256a,uint256b)constantreturns(boolerr,uint256res){assembly{res:=mul(a,b)jumpi(allGood,or(iszero(b),eq(div(res,b),a)))err:=1res:=0allGood:}if(err)Err(\"times func overflow\");}"
    },
    {
      "name": "SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN",
      "patternId": "58bdd3",
      "severity": 1,
      "line": 166,
      "column": 2,
      "content": "functionplus(uint256a,uint256b)constantreturns(boolerr,uint256res){assembly{res:=add(a,b)jumpi(allGood,and(eq(sub(res,b),a),gt(res,b)))err:=1res:=0allGood:}if(err)Err(\"plus func overflow\");}"
    },
    {
      "name": "SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN",
      "patternId": "58bdd3",
      "severity": 1,
      "line": 184,
      "column": 2,
      "content": "functionminus(uint256a,uint256b)constantreturns(boolerr,uint256res){assembly{res:=sub(a,b)jumpi(allGood,eq(and(eq(add(res,b),a),or(lt(res,a),eq(res,a))),1))err:=1res:=0allGood:}if(err)Err(\"minus func underflow\");}"
    },
    {
      "name": "SOLIDITY_PRAGMAS_VERSION",
      "patternId": "23fc32",
      "severity": 1,
      "line": 1,
      "column": 16,
      "content": "^"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 131,
      "column": 4,
      "content": "assembly{res:=mul(a,b)jumpi(allGood,or(iszero(b),eq(div(res,b),a)))err:=1res:=0allGood:}"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 149,
      "column": 4,
      "content": "assembly{jumpi(e,iszero(b))res:=div(a,b)mstore(add(mload(0x40),0x20),res)return(mload(0x40),0x40)e:}"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 167,
      "column": 4,
      "content": "assembly{res:=add(a,b)jumpi(allGood,and(eq(sub(res,b),a),gt(res,b)))err:=1res:=0allGood:}"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 185,
      "column": 4,
      "content": "assembly{res:=sub(a,b)jumpi(allGood,eq(and(eq(add(res,b),a),or(lt(res,a),eq(res,a))),1))err:=1res:=0allGood:}"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": 910067,
      "severity": 1,
      "line": 31,
      "column": 2,
      "content": "functioninit(TokenStoragestorageself,uint256_initial_supply){self.totalSupply=_initial_supply;self.balances[msg.sender]=_initial_supply;}"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": 910067,
      "severity": 1,
      "line": 41,
      "column": 2,
      "content": "functiontransfer(TokenStoragestorageself,address_to,uint256_value)returns(boolsuccess){boolerr;uint256balance;(err,balance)=self.balances[msg.sender].minus(_value);if(err){ErrorMsg(\"Balance too low for transfer\");returnfalse;}self.balances[msg.sender]=balance;self.balances[_to]=self.balances[_to]+_value;Transfer(msg.sender,_to,_value);returntrue;}"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": 910067,
      "severity": 1,
      "line": 63,
      "column": 2,
      "content": "functiontransferFrom(TokenStoragestorageself,address_from,address_to,uint256_value)returns(boolsuccess){var_allowance=self.allowed[_from][msg.sender];boolerr;uint256balanceOwner;uint256balanceSpender;(err,balanceOwner)=self.balances[_from].minus(_value);if(err){ErrorMsg(\"Balance too low for transfer\");returnfalse;}(err,balanceSpender)=_allowance.minus(_value);if(err){ErrorMsg(\"Transfer exceeds allowance\");returnfalse;}self.balances[_from]=balanceOwner;self.allowed[_from][msg.sender]=balanceSpender;self.balances[_to]=self.balances[_to]+_value;Transfer(_from,_to,_value);returntrue;}"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": 910067,
      "severity": 1,
      "line": 96,
      "column": 2,
      "content": "functionbalanceOf(TokenStoragestorageself,address_owner)constantreturns(uint256balance){returnself.balances[_owner];}"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": 910067,
      "severity": 1,
      "line": 105,
      "column": 2,
      "content": "functionapprove(TokenStoragestorageself,address_spender,uint256_value)returns(boolsuccess){self.allowed[msg.sender][_spender]=_value;Approval(msg.sender,_spender,_value);returntrue;}"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": 910067,
      "severity": 1,
      "line": 116,
      "column": 2,
      "content": "functionallowance(TokenStoragestorageself,address_owner,address_spender)constantreturns(uint256remaining){returnself.allowed[_owner][_spender];}"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": 910067,
      "severity": 1,
      "line": 130,
      "column": 2,
      "content": "functiontimes(uint256a,uint256b)constantreturns(boolerr,uint256res){assembly{res:=mul(a,b)jumpi(allGood,or(iszero(b),eq(div(res,b),a)))err:=1res:=0allGood:}if(err)Err(\"times func overflow\");}"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": 910067,
      "severity": 1,
      "line": 148,
      "column": 2,
      "content": "functiondividedBy(uint256a,uint256b)constantreturns(boolerr,uint256res){assembly{jumpi(e,iszero(b))res:=div(a,b)mstore(add(mload(0x40),0x20),res)return(mload(0x40),0x40)e:}Err(\"tried to divide by zero\");return(true,0);}"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": 910067,
      "severity": 1,
      "line": 166,
      "column": 2,
      "content": "functionplus(uint256a,uint256b)constantreturns(boolerr,uint256res){assembly{res:=add(a,b)jumpi(allGood,and(eq(sub(res,b),a),gt(res,b)))err:=1res:=0allGood:}if(err)Err(\"plus func overflow\");}"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": 910067,
      "severity": 1,
      "line": 184,
      "column": 2,
      "content": "functionminus(uint256a,uint256b)constantreturns(boolerr,uint256res){assembly{res:=sub(a,b)jumpi(allGood,eq(and(eq(add(res,b),a),or(lt(res,a),eq(res,a))),1))err:=1res:=0allGood:}if(err)Err(\"minus func underflow\");}"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": 910067,
      "severity": 1,
      "line": 209,
      "column": 3,
      "content": "functionETHCONEarlyBirdToken(){token.init(INITIAL_SUPPLY);}"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": 910067,
      "severity": 1,
      "line": 213,
      "column": 3,
      "content": "functiontotalSupply()constantreturns(uint){returntoken.totalSupply;}"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": 910067,
      "severity": 1,
      "line": 217,
      "column": 3,
      "content": "functionbalanceOf(addresswho)constantreturns(uint){returntoken.balanceOf(who);}"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": 910067,
      "severity": 1,
      "line": 221,
      "column": 3,
      "content": "functionallowance(addressowner,addressspender)constantreturns(uint){returntoken.allowance(owner,spender);}"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": 910067,
      "severity": 1,
      "line": 225,
      "column": 3,
      "content": "functiontransfer(addressto,uintvalue)returns(boolok){if(token.balanceOf(to)==0){returntoken.transfer(to,value);}else{ErrorMsg(\"Recipient already has token\");returnfalse;}}"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": 910067,
      "severity": 1,
      "line": 235,
      "column": 3,
      "content": "functiontransferFrom(addressfrom,addressto,uintvalue)returns(boolok){if(token.balanceOf(to)==0){returntoken.transferFrom(from,to,value);}else{ErrorMsg(\"Recipient already has token\");returnfalse;}}"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": 910067,
      "severity": 1,
      "line": 244,
      "column": 3,
      "content": "functionapprove(addressspender,uintvalue)returns(boolok){returntoken.approve(spender,value);}"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 200,
      "column": 3,
      "content": "ERC20Lib.TokenStoragetoken;"
    }
  ]
}