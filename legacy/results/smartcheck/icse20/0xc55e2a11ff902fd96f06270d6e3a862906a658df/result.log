/unique_chucks/35/0xc55e2a11ff902fd96f06270d6e3a862906a658df.sol
line 64:12 extraneous input 'payable' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 66:12 extraneous input 'payable' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 78:16 extraneous input 'payable' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'length', 'balance', 'memory', 'storage', 'emit', '_', 'revert', Identifier}
line 89:16 extraneous input 'payable' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'length', 'balance', 'memory', 'storage', 'emit', '_', 'revert', Identifier}
line 115:39 mismatched input 'payable' expecting {',', ')'}
line 115:51 no viable alternative at input 'addr)'
line 115:51 extraneous input ')' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 115:63 mismatched input 'public' expecting {';', '='}
line 116:26 extraneous input '=' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 120:4 extraneous input 'function' expecting {<EOF>, 'pragma', 'import', 'contract', 'library', 'interface'}
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ARRAY_LENGTH_MANIPULATION
patternId: 872bdd
severity: 1
line: 108
column: 8
content: addresses.length=1

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 41
column: 0
content: contractMyEtherFund{usingMyEtherFundControlforMyEtherFundControl.data;addresspublicowner;uintconstantpublicMIN_INVEST=10000000000000000wei;uintpubliccurrentInterest=3;uintpublicdepositAmount;uintpublicpaidAmount;uintpublicround=1;uintpubliclastPaymentDate;uintpublicadvertisingCommission=10;uintpublicdevCommission=5;uintpublicprofitThreshold=2;addresspayablepublicdevAddress;addresspayablepublicadvertiserAddress;address[]publicaddresses;mapping(address=>Investor)publicinvestors;boolpublicpause;structTopInvestor{addresspayableaddr;uintdeposit;uintfrom;}structInvestor{uintid;uintdeposit;uintdeposits;uintpaidOut;uintdate;addresspayablereferrer;}eventInvest(addressindexedaddr,uintamount,addressreferrer);eventPayout(addressindexedaddr,uintamount,stringeventType,addressfrom);eventNextRoundStarted(uintindexedround,uintdate,uintdeposit);eventPerseusUpdate(addressaddr,stringeventType);TopInvestorpublictop_investor;MyEtherFundControl.dataprivatemyEtherFundControl;modifieronlyOwner{if(msg.sender==owner)_;}constructor()public{owner=msg.sender;devAddress=msg.sender;advertiserAddress=msg.sender;addresses.length=1;myEtherFundControl.min=30ether;myEtherFundControl.max=500ether;}functionsetAdvertiserAddr(addresspayableaddr)onlyOwnerpublic{advertiserAddress=addr;}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: ^

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 98
column: 28
content: private

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 115
column: 4
content: functionsetAdvertiserAddr(addresspayable

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 115
column: 47
content: addr)onlyOwnerpublic{

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 116
column: 8
content: advertiserAddress=addr;

SOLIDITY_VISIBILITY :3
SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_ARRAY_LENGTH_MANIPULATION :1
SOLIDITY_LOCKED_MONEY :1
SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA :1