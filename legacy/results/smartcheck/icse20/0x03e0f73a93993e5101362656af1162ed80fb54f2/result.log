/unique_chucks/10/0x03e0f73a93993e5101362656af1162ed80fb54f2.sol
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: c67a09
severity: 1
line: 513
column: 23
content: 0x0

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: c67a09
severity: 1
line: 869
column: 50
content: 0x0

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: c67a09
severity: 1
line: 870
column: 50
content: 0x0

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: c67a09
severity: 1
line: 871
column: 50
content: 0x0

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: c67a09
severity: 1
line: 872
column: 50
content: 0x0

ruleId: SOLIDITY_ARRAY_LENGTH_MANIPULATION
patternId: 872bdd
severity: 1
line: 603
column: 8
content: addresses.length--

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 625
column: 8
content: for(uinti=0;i<addressList.length;i++){if(addressMap[addressList[i]].pos==0){returnfalse;}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 46
column: 8
content: for(uinti=0;i<len;i++){avg+=arr[i];}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 56
column: 8
content: for(i=0;i<len;i++){item=arr[i];s=item>avg?item-avg:avg-item;cvs+=mul(s,s);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 346
column: 8
content: for(uinti=0;i<size;i++){submitRinghash(ringminerList[i],ringhashList[i]);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 625
column: 8
content: for(uinti=0;i<addressList.length;i++){if(addressMap[addressList[i]].pos==0){returnfalse;}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 820
column: 8
content: for(uinti=0;i<len;i+=6){addressowner=address(batch[i]);addressprevOwner=address(batch[(i+len-6)%len]);ERC20token=ERC20(address(batch[i+1]));if(owner!=prevOwner){require(token.transferFrom(owner,prevOwner,uint(batch[i+2])));}if(owner!=feeRecipient){bytes32item=batch[i+3];if(item!=0){require(token.transferFrom(owner,feeRecipient,uint(item)));}item=batch[i+4];if(item!=0){require(lrc.transferFrom(feeRecipient,owner,uint(item)));}item=batch[i+5];if(item!=0){require(lrc.transferFrom(owner,feeRecipient,uint(item)));}}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 1586
column: 8
content: for(uinti=0;i<ringSize;i++){uint[7]memoryuintArgs=uintArgsList[i];Ordermemoryorder=Order(addressList[i][0],addressList[i][1],addressList[(i+1)%ringSize][1],uintArgs[0],uintArgs[1],uintArgs[5],buyNoMoreThanAmountBList[i],uint8ArgsList[i][0]);bytes32orderHash=calculateOrderHash(order,uintArgs[2],uintArgs[3],uintArgs[4]);verifySignature(order.owner,orderHash,vList[i],rList[i],sList[i]);validateOrder(order,uintArgs[2],uintArgs[3],uintArgs[4]);orders[i]=OrderState(order,orderHash,uint8ArgsList[i][1],Rate(uintArgs[6],order.amountB),0,0,0,0,0);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: 17f23a
severity: 1
line: 782
column: 15
content: addr!=0x0&&count<max

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 295
column: 0
content: contractRinghashRegistry{usingMathBytes32forbytes32[];usingMathUint8foruint8[];uintpublicblocksToLive;structSubmission{addressringminer;uintblock;}mapping(bytes32=>Submission)submissions;eventRinghashSubmitted(addressindexed_ringminer,bytes32indexed_ringhash);functionRinghashRegistry(uint_blocksToLive)public{require(_blocksToLive>0);blocksToLive=_blocksToLive;}function()payablepublic{revert();}functionsubmitRinghash(addressringminer,bytes32ringhash)public{require(canSubmit(ringhash,ringminer));submissions[ringhash]=Submission(ringminer,block.number);RinghashSubmitted(ringminer,ringhash);}functionbatchSubmitRinghash(address[]ringminerList,bytes32[]ringhashList)external{uintsize=ringminerList.length;require(size>0);require(size==ringhashList.length);for(uinti=0;i<size;i++){submitRinghash(ringminerList[i],ringhashList[i]);}}functioncalculateRinghash(uintringSize,uint8[]vList,bytes32[]rList,bytes32[]sList)privatepurereturns(bytes32){require(ringSize==vList.length-1&&(ringSize==rList.length-1&&(ringSize==sList.length-1)));returnkeccak256(vList.xorReduce(ringSize),rList.xorReduce(ringSize),sList.xorReduce(ringSize));}functioncomputeAndGetRinghashInfo(uintringSize,addressringminer,uint8[]vList,bytes32[]rList,bytes32[]sList)externalviewreturns(bytes32ringhash,bool[2]attributes){ringhash=calculateRinghash(ringSize,vList,rList,sList);attributes[0]=canSubmit(ringhash,ringminer);attributes[1]=isReserved(ringhash,ringminer);}functioncanSubmit(bytes32ringhash,addressringminer)publicviewreturns(bool){require(ringminer!=0x0);Submissionmemorysubmission=submissions[ringhash];addressminer=submission.ringminer;return(miner==0x0||(submission.block+blocksToLive<block.number)||(miner==ringminer));}functionisReserved(bytes32ringhash,addressringminer)publicviewreturns(bool){Submissionmemorysubmission=submissions[ringhash];return(submission.block+blocksToLive>=block.number&&(submission.ringminer==ringminer));}}

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 520
column: 0
content: contractTokenRegistryisClaimable{address[]publicaddresses;mapping(address=>TokenInfo)addressMap;mapping(string=>address)symbolMap;uint8publicconstantTOKEN_STANDARD_ERC20=0;uint8publicconstantTOKEN_STANDARD_ERC223=1;structTokenInfo{uintpos;uint8standard;stringsymbol;}eventTokenRegistered(addressaddr,stringsymbol);eventTokenUnregistered(addressaddr,stringsymbol);function()payablepublic{revert();}functionregisterToken(addressaddr,stringsymbol)externalonlyOwner{registerStandardToken(addr,symbol,TOKEN_STANDARD_ERC20);}functionregisterStandardToken(addressaddr,stringsymbol,uint8standard)publiconlyOwner{require(0x0!=addr);require(bytes(symbol).length>0);require(0x0==symbolMap[symbol]);require(0==addressMap[addr].pos);require(standard<=TOKEN_STANDARD_ERC223);addresses.push(addr);symbolMap[symbol]=addr;addressMap[addr]=TokenInfo(addresses.length,standard,symbol);TokenRegistered(addr,symbol);}functionunregisterToken(addressaddr,stringsymbol)externalonlyOwner{require(addr!=0x0);require(symbolMap[symbol]==addr);deletesymbolMap[symbol];uintpos=addressMap[addr].pos;require(pos!=0);deleteaddressMap[addr];addresslastToken=addresses[addresses.length-1];if(addr!=lastToken){addresses[pos-1]=lastToken;addressMap[lastToken].pos=pos;}addresses.length--;TokenUnregistered(addr,symbol);}functionisTokenRegisteredBySymbol(stringsymbol)publicviewreturns(bool){returnsymbolMap[symbol]!=0x0;}functionisTokenRegistered(addressaddr)publicviewreturns(bool){returnaddressMap[addr].pos!=0;}functionareAllTokensRegistered(address[]addressList)externalviewreturns(bool){for(uinti=0;i<addressList.length;i++){if(addressMap[addressList[i]].pos==0){returnfalse;}}returntrue;}functiongetTokenStandard(addressaddr)publicviewreturns(uint8){TokenInfomemoryinfo=addressMap[addr];require(info.pos!=0);returninfo.standard;}functiongetAddressBySymbol(stringsymbol)externalviewreturns(address){returnsymbolMap[symbol];}functiongetTokens(uintstart,uintcount)publicviewreturns(address[]addressList){uintnum=addresses.length;if(start>=num){return;}uintend=start+count;if(end>num){end=num;}if(start==num){return;}addressList=newaddress[](end-start);for(uinti=start;i<end;i++){addressList[i-start]=addresses[i];}}}

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 864
column: 0
content: contractLoopringProtocolImplisLoopringProtocol{usingMathUintforuint;addresspubliclrcTokenAddress=0x0;addresspublictokenRegistryAddress=0x0;addresspublicringhashRegistryAddress=0x0;addresspublicdelegateAddress=0x0;uintpublicmaxRingSize=0;uint64publicringIndex=0;uintpublicrateRatioCVSThreshold=0;uintpublicconstantRATE_RATIO_SCALE=10000;uint64publicconstantENTERED_MASK=1<<63;mapping(bytes32=>uint)publiccancelledOrFilled;mapping(address=>uint)publiccutoffs;structRate{uintamountS;uintamountB;}structOrder{addressowner;addresstokenS;addresstokenB;uintamountS;uintamountB;uintlrcFee;boolbuyNoMoreThanAmountB;uint8marginSplitPercentage;}structOrderState{Orderorder;bytes32orderHash;uint8feeSelection;Raterate;uintfillAmountS;uintlrcReward;uintlrcFee;uintsplitS;uintsplitB;}functionLoopringProtocolImpl(address_lrcTokenAddress,address_tokenRegistryAddress,address_ringhashRegistryAddress,address_delegateAddress,uint_maxRingSize,uint_rateRatioCVSThreshold)public{require(0x0!=_lrcTokenAddress);require(0x0!=_tokenRegistryAddress);require(0x0!=_ringhashRegistryAddress);require(0x0!=_delegateAddress);require(_maxRingSize>1);require(_rateRatioCVSThreshold>0);lrcTokenAddress=_lrcTokenAddress;tokenRegistryAddress=_tokenRegistryAddress;ringhashRegistryAddress=_ringhashRegistryAddress;delegateAddress=_delegateAddress;maxRingSize=_maxRingSize;rateRatioCVSThreshold=_rateRatioCVSThreshold;}function()payablepublic{revert();}functionsubmitRing(address[2][]addressList,uint[7][]uintArgsList,uint8[2][]uint8ArgsList,bool[]buyNoMoreThanAmountBList,uint8[]vList,bytes32[]rList,bytes32[]sList,addressringminer,addressfeeRecipient)public{require(ringIndex&ENTERED_MASK!=ENTERED_MASK);ringIndex|=ENTERED_MASK;uintringSize=addressList.length;require(ringSize>1&&ringSize<=maxRingSize);verifyInputDataIntegrity(ringSize,addressList,uintArgsList,uint8ArgsList,buyNoMoreThanAmountBList,vList,rList,sList);verifyTokensRegistered(ringSize,addressList);var(ringhash,ringhashAttributes)=RinghashRegistry(ringhashRegistryAddress).computeAndGetRinghashInfo(ringSize,ringminer,vList,rList,sList);require(ringhashAttributes[0]);verifySignature(ringminer,ringhash,vList[ringSize],rList[ringSize],sList[ringSize]);OrderState[]memoryorders=assembleOrders(addressList,uintArgsList,uint8ArgsList,buyNoMoreThanAmountBList,vList,rList,sList);if(feeRecipient==0x0){feeRecipient=ringminer;}handleRing(ringSize,ringhash,orders,ringminer,feeRecipient,ringhashAttributes[1]);ringIndex=(ringIndex^ENTERED_MASK)+1;}functioncancelOrder(address[3]addresses,uint[7]orderValues,boolbuyNoMoreThanAmountB,uint8marginSplitPercentage,uint8v,bytes32r,bytes32s)external{uintcancelAmount=orderValues[6];require(cancelAmount>0);Ordermemoryorder=Order(addresses[0],addresses[1],addresses[2],orderValues[0],orderValues[1],orderValues[5],buyNoMoreThanAmountB,marginSplitPercentage);require(msg.sender==order.owner);bytes32orderHash=calculateOrderHash(order,orderValues[2],orderValues[3],orderValues[4]);verifySignature(order.owner,orderHash,v,r,s);cancelledOrFilled[orderHash]=cancelledOrFilled[orderHash].add(cancelAmount);OrderCancelled(orderHash,cancelAmount);}functionsetCutoff(uintcutoff)external{uintt=(cutoff==0||cutoff>=block.timestamp)?block.timestamp:cutoff;require(cutoffs[msg.sender]<t);cutoffs[msg.sender]=t;CutoffTimestampChanged(msg.sender,t);}functionverifyRingHasNoSubRing(uintringSize,OrderState[]orders)privatepure{for(uinti=0;i<ringSize-1;i++){addresstokenS=orders[i].order.tokenS;for(uintj=i+1;j<ringSize;j++){require(tokenS!=orders[j].order.tokenS);}}}functionverifyTokensRegistered(uintringSize,address[2][]addressList)privateview{address[]memorytokens=newaddress[](ringSize);for(uinti=0;i<ringSize;i++){tokens[i]=addressList[i][1];}require(TokenRegistry(tokenRegistryAddress).areAllTokensRegistered(tokens));}functionhandleRing(uintringSize,bytes32ringhash,OrderState[]orders,addressminer,addressfeeRecipient,boolisRinghashReserved)private{uint64_ringIndex=ringIndex^ENTERED_MASK;address_lrcTokenAddress=lrcTokenAddress;TokenTransferDelegatedelegate=TokenTransferDelegate(delegateAddress);verifyRingHasNoSubRing(ringSize,orders);verifyMinerSuppliedFillRates(ringSize,orders);scaleRingBasedOnHistoricalRecords(delegate,ringSize,orders);calculateRingFillAmount(ringSize,orders);calculateRingFees(delegate,ringSize,orders,feeRecipient,_lrcTokenAddress);var(orderHashList,amountsList)=settleRing(delegate,ringSize,orders,feeRecipient,_lrcTokenAddress);RingMined(_ringIndex,ringhash,miner,feeRecipient,isRinghashReserved,orderHashList,amountsList);}functionsettleRing(TokenTransferDelegatedelegate,uintringSize,OrderState[]orders,addressfeeRecipient,address_lrcTokenAddress)privatereturns(bytes32[]memoryorderHashList,uint[6][]memoryamountsList){bytes32[]memorybatch=newbytes32[](ringSize*6);orderHashList=newbytes32[](ringSize);amountsList=newuint[6][](ringSize);uintp=0;for(uinti=0;i<ringSize;i++){OrderStatememorystate=orders[i];Ordermemoryorder=state.order;uintprevSplitB=orders[(i+ringSize-1)%ringSize].splitB;uintnextFillAmountS=orders[(i+1)%ringSize].fillAmountS;batch[p]=bytes32(order.owner);batch[p+1]=bytes32(order.tokenS);batch[p+2]=bytes32(state.fillAmountS-prevSplitB);batch[p+3]=bytes32(prevSplitB+state.splitS);batch[p+4]=bytes32(state.lrcReward);batch[p+5]=bytes32(state.lrcFee);p+=6;if(order.buyNoMoreThanAmountB){cancelledOrFilled[state.orderHash]+=nextFillAmountS;}else{cancelledOrFilled[state.orderHash]+=state.fillAmountS;}orderHashList[i]=state.orderHash;amountsList[i][0]=state.fillAmountS+state.splitS;amountsList[i][1]=nextFillAmountS-state.splitB;amountsList[i][2]=state.lrcReward;amountsList[i][3]=state.lrcFee;amountsList[i][4]=state.splitS;amountsList[i][5]=state.splitB;}delegate.batchTransferToken(_lrcTokenAddress,feeRecipient,batch);}functionverifyMinerSuppliedFillRates(uintringSize,OrderState[]orders)privateview{uint[]memoryrateRatios=newuint[](ringSize);uint_rateRatioScale=RATE_RATIO_SCALE;for(uinti=0;i<ringSize;i++){uints1b0=orders[i].rate.amountS.mul(orders[i].order.amountB);uints0b1=orders[i].order.amountS.mul(orders[i].rate.amountB);require(s1b0<=s0b1);rateRatios[i]=_rateRatioScale.mul(s1b0)/s0b1;}uintcvs=MathUint.cvsquare(rateRatios,_rateRatioScale);require(cvs<=rateRatioCVSThreshold);}functioncalculateRingFees(TokenTransferDelegatedelegate,uintringSize,OrderState[]orders,addressfeeRecipient,address_lrcTokenAddress)privateview{boolcheckedMinerLrcSpendable=false;uintminerLrcSpendable=0;uint8_marginSplitPercentageBase=MARGIN_SPLIT_PERCENTAGE_BASE;uintnextFillAmountS;for(uinti=0;i<ringSize;i++){OrderStatememorystate=orders[i];uintlrcReceiable=0;if(state.lrcFee==0){state.feeSelection=FEE_SELECT_MARGIN_SPLIT;state.order.marginSplitPercentage=_marginSplitPercentageBase;}else{uintlrcSpendable=getSpendable(delegate,_lrcTokenAddress,state.order.owner);if(state.order.tokenS==_lrcTokenAddress){lrcSpendable-=state.fillAmountS;}if(state.order.tokenB==_lrcTokenAddress){nextFillAmountS=orders[(i+1)%ringSize].fillAmountS;lrcReceiable=nextFillAmountS;}uintlrcTotal=lrcSpendable+lrcReceiable;if(lrcTotal<state.lrcFee){state.lrcFee=lrcTotal;state.order.marginSplitPercentage=_marginSplitPercentageBase;}if(state.lrcFee==0){state.feeSelection=FEE_SELECT_MARGIN_SPLIT;}}if(state.feeSelection==FEE_SELECT_LRC){if(lrcReceiable>0){if(lrcReceiable>=state.lrcFee){state.splitB=state.lrcFee;state.lrcFee=0;}else{state.splitB=lrcReceiable;state.lrcFee-=lrcReceiable;}}}elseif(state.feeSelection==FEE_SELECT_MARGIN_SPLIT){if(!checkedMinerLrcSpendable&&minerLrcSpendable<state.lrcFee){checkedMinerLrcSpendable=true;minerLrcSpendable=getSpendable(delegate,_lrcTokenAddress,feeRecipient);}if(minerLrcSpendable>=state.lrcFee){nextFillAmountS=orders[(i+1)%ringSize].fillAmountS;uintsplit;if(state.order.buyNoMoreThanAmountB){split=(nextFillAmountS.mul(state.order.amountS)/state.order.amountB).sub(state.fillAmountS);}else{split=nextFillAmountS.sub(state.fillAmountS.mul(state.order.amountB)/state.order.amountS);}if(state.order.marginSplitPercentage!=_marginSplitPercentageBase){split=split.mul(state.order.marginSplitPercentage)/_marginSplitPercentageBase;}if(state.order.buyNoMoreThanAmountB){state.splitS=split;}else{state.splitB=split;}if(split>0){minerLrcSpendable-=state.lrcFee;state.lrcReward=state.lrcFee;}}state.lrcFee=0;}else{revert();}}}functioncalculateRingFillAmount(uintringSize,OrderState[]orders)privatepure{uintsmallestIdx=0;uinti;uintj;for(i=0;i<ringSize;i++){j=(i+1)%ringSize;smallestIdx=calculateOrderFillAmount(orders[i],orders[j],i,j,smallestIdx);}for(i=0;i<smallestIdx;i++){calculateOrderFillAmount(orders[i],orders[(i+1)%ringSize],0,0,0);}}functioncalculateOrderFillAmount(OrderStatestate,OrderStatenext,uinti,uintj,uintsmallestIdx)privatepurereturns(uintnewSmallestIdx){newSmallestIdx=smallestIdx;uintfillAmountB=state.fillAmountS.mul(state.rate.amountB)/state.rate.amountS;if(state.order.buyNoMoreThanAmountB){if(fillAmountB>state.order.amountB){fillAmountB=state.order.amountB;state.fillAmountS=fillAmountB.mul(state.rate.amountS)/state.rate.amountB;newSmallestIdx=i;}state.lrcFee=state.order.lrcFee.mul(fillAmountB)/state.order.amountB;}else{state.lrcFee=state.order.lrcFee.mul(state.fillAmountS)/state.order.amountS;}if(fillAmountB<=next.fillAmountS){next.fillAmountS=fillAmountB;}else{newSmallestIdx=j;}}functionscaleRingBasedOnHistoricalRecords(TokenTransferDelegatedelegate,uintringSize,OrderState[]orders)privateview{for(uinti=0;i<ringSize;i++){OrderStatememorystate=orders[i];Ordermemoryorder=state.order;uintamount;if(order.buyNoMoreThanAmountB){amount=order.amountB.tolerantSub(cancelledOrFilled[state.orderHash]);order.amountS=amount.mul(order.amountS)/order.amountB;order.lrcFee=amount.mul(order.lrcFee)/order.amountB;order.amountB=amount;}else{amount=order.amountS.tolerantSub(cancelledOrFilled[state.orderHash]);order.amountB=amount.mul(order.amountB)/order.amountS;order.lrcFee=amount.mul(order.lrcFee)/order.amountS;order.amountS=amount;}require(order.amountS>0);require(order.amountB>0);uintavailableAmountS=getSpendable(delegate,order.tokenS,order.owner);require(availableAmountS>0);state.fillAmountS=(order.amountS<availableAmountS?order.amountS:availableAmountS);}}functiongetSpendable(TokenTransferDelegatedelegate,addresstokenAddress,addresstokenOwner)privateviewreturns(uint){ERC20token=ERC20(tokenAddress);uintallowance=token.allowance(tokenOwner,address(delegate));uintbalance=token.balanceOf(tokenOwner);return(allowance<balance?allowance:balance);}functionverifyInputDataIntegrity(uintringSize,address[2][]addressList,uint[7][]uintArgsList,uint8[2][]uint8ArgsList,bool[]buyNoMoreThanAmountBList,uint8[]vList,bytes32[]rList,bytes32[]sList)privatepure{require(ringSize==addressList.length);require(ringSize==uintArgsList.length);require(ringSize==uint8ArgsList.length);require(ringSize==buyNoMoreThanAmountBList.length);require(ringSize+1==vList.length);require(ringSize+1==rList.length);require(ringSize+1==sList.length);for(uinti=0;i<ringSize;i++){require(uintArgsList[i][6]>0);require(uint8ArgsList[i][1]<=FEE_SELECT_MAX_VALUE);}}functionassembleOrders(address[2][]addressList,uint[7][]uintArgsList,uint8[2][]uint8ArgsList,bool[]buyNoMoreThanAmountBList,uint8[]vList,bytes32[]rList,bytes32[]sList)privateviewreturns(OrderState[]memoryorders){uintringSize=addressList.length;orders=newOrderState[](ringSize);for(uinti=0;i<ringSize;i++){uint[7]memoryuintArgs=uintArgsList[i];Ordermemoryorder=Order(addressList[i][0],addressList[i][1],addressList[(i+1)%ringSize][1],uintArgs[0],uintArgs[1],uintArgs[5],buyNoMoreThanAmountBList[i],uint8ArgsList[i][0]);bytes32orderHash=calculateOrderHash(order,uintArgs[2],uintArgs[3],uintArgs[4]);verifySignature(order.owner,orderHash,vList[i],rList[i],sList[i]);validateOrder(order,uintArgs[2],uintArgs[3],uintArgs[4]);orders[i]=OrderState(order,orderHash,uint8ArgsList[i][1],Rate(uintArgs[6],order.amountB),0,0,0,0,0);}}functionvalidateOrder(Orderorder,uinttimestamp,uintttl,uintsalt)privateview{require(order.owner!=0x0);require(order.tokenS!=0x0);require(order.tokenB!=0x0);require(order.amountS!=0);require(order.amountB!=0);require(timestamp<=block.timestamp);require(timestamp>cutoffs[order.owner]);require(ttl!=0);require(timestamp+ttl>block.timestamp);require(salt!=0);require(order.marginSplitPercentage<=MARGIN_SPLIT_PERCENTAGE_BASE);}functioncalculateOrderHash(Orderorder,uinttimestamp,uintttl,uintsalt)privateviewreturns(bytes32){returnkeccak256(address(this),order.owner,order.tokenS,order.tokenB,order.amountS,order.amountB,timestamp,ttl,salt,order.lrcFee,order.buyNoMoreThanAmountB,order.marginSplitPercentage);}functionverifySignature(addresssigner,bytes32hash,uint8v,bytes32r,bytes32s)privatepure{require(signer==ecrecover(keccak256("\x19Ethereum Signed Message:\n32",hash),v,r,s));}}

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 699
column: 36
content: private

ruleId: SOLIDITY_REDUNDANT_FALLBACK_REJECT
patternId: b85a32
severity: 1
line: 324
column: 31
content: {revert();}

ruleId: SOLIDITY_REDUNDANT_FALLBACK_REJECT
patternId: b85a32
severity: 1
line: 548
column: 31
content: {revert();}

ruleId: SOLIDITY_REDUNDANT_FALLBACK_REJECT
patternId: b85a32
severity: 1
line: 725
column: 31
content: {revert();}

ruleId: SOLIDITY_REDUNDANT_FALLBACK_REJECT
patternId: b85a32
severity: 1
line: 981
column: 31
content: {revert();}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 1367
column: 19
content: if(state.feeSelection==FEE_SELECT_MARGIN_SPLIT){if(!checkedMinerLrcSpendable&&minerLrcSpendable<state.lrcFee){checkedMinerLrcSpendable=true;minerLrcSpendable=getSpendable(delegate,_lrcTokenAddress,feeRecipient);}if(minerLrcSpendable>=state.lrcFee){nextFillAmountS=orders[(i+1)%ringSize].fillAmountS;uintsplit;if(state.order.buyNoMoreThanAmountB){split=(nextFillAmountS.mul(state.order.amountS)/state.order.amountB).sub(state.fillAmountS);}else{split=nextFillAmountS.sub(state.fillAmountS.mul(state.order.amountB)/state.order.amountS);}if(state.order.marginSplitPercentage!=_marginSplitPercentageBase){split=split.mul(state.order.marginSplitPercentage)/_marginSplitPercentageBase;}if(state.order.buyNoMoreThanAmountB){state.splitS=split;}else{state.splitB=split;}if(split>0){minerLrcSpendable-=state.lrcFee;state.lrcReward=state.lrcFee;}}state.lrcFee=0;}else{revert();}

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 7d54ca
severity: 1
line: 1250
column: 15
content: (bytes32[]memoryorderHashList,uint[6][]memoryamountsList)

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 901eae
severity: 1
line: 366
column: 15
content: keccak256(vList.xorReduce(ringSize),rList.xorReduce(ringSize),sList.xorReduce(ringSize))

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 901eae
severity: 1
line: 1663
column: 15
content: keccak256(address(this),order.owner,order.tokenS,order.tokenB,order.amountS,order.amountB,timestamp,ttl,salt,order.lrcFee,order.buyNoMoreThanAmountB,order.marginSplitPercentage)

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 901eae
severity: 1
line: 1691
column: 16
content: keccak256("\x19Ethereum Signed Message:\n32",hash)

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 91h3sa
severity: 1
line: 324
column: 24
content: public

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 91h3sa
severity: 1
line: 548
column: 24
content: public

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 91h3sa
severity: 1
line: 725
column: 24
content: public

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 91h3sa
severity: 1
line: 981
column: 24
content: public

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 35
column: 8
content: uint[]arr

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 180
column: 8
content: address[2][]addressList

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 181
column: 8
content: uint[7][]uintArgsList

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 182
column: 8
content: uint8[2][]uint8ArgsList

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 183
column: 8
content: bool[]buyNoMoreThanAmountBList

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 184
column: 8
content: uint8[]vList

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 185
column: 8
content: bytes32[]rList

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 186
column: 8
content: bytes32[]sList

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 248
column: 8
content: bytes32[]arr

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 278
column: 8
content: uint8[]arr

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 353
column: 8
content: uint8[]vList

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 354
column: 8
content: bytes32[]rList

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 355
column: 8
content: bytes32[]sList

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 562
column: 8
content: stringsymbol

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 606
column: 39
content: stringsymbol

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 656
column: 17
content: address[]addressList

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1013
column: 8
content: address[2][]addressList

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1014
column: 8
content: uint[7][]uintArgsList

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1015
column: 8
content: uint8[2][]uint8ArgsList

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1016
column: 8
content: bool[]buyNoMoreThanAmountBList

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1017
column: 8
content: uint8[]vList

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1018
column: 8
content: bytes32[]rList

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1019
column: 8
content: bytes32[]sList

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1156
column: 8
content: OrderState[]orders

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1171
column: 8
content: address[2][]addressList

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1189
column: 8
content: OrderState[]orders

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1245
column: 8
content: OrderState[]orders

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1292
column: 8
content: OrderState[]orders

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1312
column: 8
content: OrderState[]orders

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1418
column: 8
content: OrderState[]orders

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1448
column: 8
content: OrderStatestate

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1449
column: 8
content: OrderStatenext

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1490
column: 8
content: OrderState[]orders

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1545
column: 8
content: address[2][]addressList

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1546
column: 8
content: uint[7][]uintArgsList

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1547
column: 8
content: uint8[2][]uint8ArgsList

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1548
column: 8
content: bool[]buyNoMoreThanAmountBList

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1549
column: 8
content: uint8[]vList

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1550
column: 8
content: bytes32[]rList

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1551
column: 8
content: bytes32[]sList

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1572
column: 8
content: address[2][]addressList

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1573
column: 8
content: uint[7][]uintArgsList

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1574
column: 8
content: uint8[2][]uint8ArgsList

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1575
column: 8
content: bool[]buyNoMoreThanAmountBList

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1576
column: 8
content: uint8[]vList

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1577
column: 8
content: bytes32[]rList

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1578
column: 8
content: bytes32[]sList

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1632
column: 8
content: Orderorder

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1654
column: 8
content: Orderorder

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 303
column: 4
content: mapping(bytes32=>Submission)submissions;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 522
column: 4
content: mapping(address=>TokenInfo)addressMap;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 523
column: 4
content: mapping(string=>address)symbolMap;

SOLIDITY_VISIBILITY :3
SOLIDITY_ARRAY_LENGTH_MANIPULATION :1
SOLIDITY_REVERT_REQUIRE :1
SOLIDITY_LOCKED_MONEY :3
SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA :1
SOLIDITY_EXTRA_GAS_IN_LOOPS :1
SOLIDITY_ADDRESS_HARDCODED :5
SOLIDITY_UPGRADE_TO_050 :56
SOLIDITY_GAS_LIMIT_IN_LOOPS :7
SOLIDITY_SHOULD_RETURN_STRUCT :1
SOLIDITY_REDUNDANT_FALLBACK_REJECT :4