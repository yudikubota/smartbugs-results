{
  "contract": "0xf07426acc1c52061f786e8efe820704350513cf8",
  "tool": "smartcheck",
  "start": 1563711831.8207142,
  "end": 1563711841.5997229,
  "duration": 9.779008626937866,
  "analysis": [
    {
      "name": "SOLIDITY_ADDRESS_HARDCODED",
      "patternId": "a91b18",
      "severity": 1,
      "line": 165,
      "column": 30,
      "content": "balances[address(0)]"
    },
    {
      "name": "SOLIDITY_ERC20_APPROVE",
      "patternId": "af782c",
      "severity": 2,
      "line": 183,
      "column": 4,
      "content": "functionapprove(addressspender,uinttokens)publicreturns(boolsuccess){allowed[msg.sender][spender]=tokens*decimal_price;emitApproval(msg.sender,spender,tokens*decimal_price);returntrue;}"
    },
    {
      "name": "SOLIDITY_EXTRA_GAS_IN_LOOPS",
      "patternId": "d3j11j",
      "severity": 1,
      "line": 131,
      "column": 12,
      "content": "for(uintstart=0;start<presale_detail.length;start++){if(presale_detail[start].endDate>=_startdate){revert(\"Another Sale is running\");}}"
    },
    {
      "name": "SOLIDITY_EXTRA_GAS_IN_LOOPS",
      "patternId": "d3j11j",
      "severity": 1,
      "line": 204,
      "column": 8,
      "content": "for(uinti=0;i<presale_detail.length;i++){if(now>=presale_detail[i].startDate&&now<=presale_detail[i].endDate){if(_token*decimal_price<=presale_detail[i].pretoken){uint256payment=_token*presale_detail[i].price;if(payment==amount){presale_detail[i].pretoken-=_token*decimal_price;balances[_account]=safeAdd(balances[_account],_token*decimal_price);total_earning+=payment;total_purchase_token+=_token*decimal_price;total_sale_token+=_token*decimal_price;}else{revert(\"Invalid amount\");}return;}else{revert();}}}"
    },
    {
      "name": "SOLIDITY_GAS_LIMIT_IN_LOOPS",
      "patternId": "f6f853",
      "severity": 2,
      "line": 131,
      "column": 12,
      "content": "for(uintstart=0;start<presale_detail.length;start++){if(presale_detail[start].endDate>=_startdate){revert(\"Another Sale is running\");}}"
    },
    {
      "name": "SOLIDITY_GAS_LIMIT_IN_LOOPS",
      "patternId": "f6f853",
      "severity": 2,
      "line": 204,
      "column": 8,
      "content": "for(uinti=0;i<presale_detail.length;i++){if(now>=presale_detail[i].startDate&&now<=presale_detail[i].endDate){if(_token*decimal_price<=presale_detail[i].pretoken){uint256payment=_token*presale_detail[i].price;if(payment==amount){presale_detail[i].pretoken-=_token*decimal_price;balances[_account]=safeAdd(balances[_account],_token*decimal_price);total_earning+=payment;total_purchase_token+=_token*decimal_price;total_sale_token+=_token*decimal_price;}else{revert(\"Invalid amount\");}return;}else{revert();}}}"
    },
    {
      "name": "SOLIDITY_LOCKED_MONEY",
      "patternId": "30281d",
      "severity": 3,
      "line": 54,
      "column": 0,
      "content": "contractErgoPostTokenisERC20Interface,Owned,SafeMath{stringpublicsymbol;stringpublicname;uint8publicdecimals;uinttotalsupply;uintinitialBalance;uintpublicreserved;uintpublicteam;uintpublicico;uintpublicbounty;uintpublictotal_presale_token;uintpublictotal_crowdsale_token;uintpublictotal_sale_token;uintpublictotal_purchase_token;uintpublictotal_earning;uintdecimal_price;structpresale{uintstartDate;uintendDate;uintpretoken;uintprice;}structcrowdsale{uintcrowd_startdate;uintcrowd_enddate;uintcrowd_token;uintprice;}presale[]publicpresale_detail;crowdsalepubliccrowdsale_detail;mapping(address=>uint)balances;mapping(address=>mapping(address=>uint))allowed;constructor()public{symbol=\"EPT\";name=\"ErgoPostToken\";decimals=18;decimal_price=1000000000000000000;initialBalance=3000000000*decimal_price;balances[owner]=initialBalance;totalsupply+=initialBalance;reserved=totalsupply*25/100;team=totalsupply*8/100;ico=totalsupply*65/100;bounty=totalsupply*2/100;owner=msg.sender;}eventOwnershipTransferred(addressindexedpreviousOwner,addressindexednewOwner);modifieronlyOwner(){require(msg.sender==owner);_;}functiontransferOwnership(addressnewOwner)publiconlyOwner{require(newOwner!=address(0));emitOwnershipTransferred(owner,newOwner);owner=newOwner;uint_value=balances[msg.sender];balances[msg.sender]-=_value;balances[newOwner]+=_value;emitTransfer(msg.sender,newOwner,_value);}functionstart_presale(uint_startdate,uint_enddate,uinttoken_for_presale,uintprice)publiconlyOwner{if(_startdate<=_enddate&&_startdate>now&&token_for_presale<ico){for(uintstart=0;start<presale_detail.length;start++){if(presale_detail[start].endDate>=_startdate){revert(\"Another Sale is running\");}}presalememoryp=presale(_startdate,_enddate,token_for_presale*decimal_price,price);presale_detail.push(p);total_presale_token+=token_for_presale*decimal_price;balances[owner]-=token_for_presale*decimal_price;total_crowdsale_token=ico-total_presale_token;crowdsale_detail.crowd_token=total_crowdsale_token;}else{revert(\"Presale not set\");}}functionstart_crowdsale(uint_startdate,uint_enddate,uint_price)publiconlyOwner{if(_startdate<=_enddate&&_startdate>now){crowdsale_detail.crowd_startdate=_startdate;crowdsale_detail.crowd_enddate=_enddate;crowdsale_detail.price=_price;balances[owner]-=total_crowdsale_token;}else{revert(\"Crowdasale not set\");}}functiontotalSupply()publicviewreturns(uint){returntotalsupply-balances[address(0)];}functionbalanceOf(addresstokenOwner)publicviewreturns(uintbalance){returnbalances[tokenOwner];}functiontransfer(addressto,uinttokens)publiconlyOwnerreturns(boolsuccess){balances[msg.sender]=safeSub(balances[msg.sender],tokens*decimal_price);balances[to]=safeAdd(balances[to],tokens*decimal_price);total_sale_token+=tokens*decimal_price;emitTransfer(msg.sender,to,tokens*decimal_price);returntrue;}functionapprove(addressspender,uinttokens)publicreturns(boolsuccess){allowed[msg.sender][spender]=tokens*decimal_price;emitApproval(msg.sender,spender,tokens*decimal_price);returntrue;}functiontransferFrom(addressfrom,addressto,uinttokens)publicreturns(boolsuccess){balances[from]=safeSub(balances[from],tokens*decimal_price);allowed[from][msg.sender]=safeSub(allowed[from][msg.sender],tokens*decimal_price);balances[to]=safeAdd(balances[to],tokens*decimal_price);emitTransfer(from,to,tokens*decimal_price);returntrue;}functionallowance(addresstokenOwner,addressspender)publicviewreturns(uintremaining){returnallowed[tokenOwner][spender];}functionpurchase(address_account,uint256_token,uintamount)publicpayable{for(uinti=0;i<presale_detail.length;i++){if(now>=presale_detail[i].startDate&&now<=presale_detail[i].endDate){if(_token*decimal_price<=presale_detail[i].pretoken){uint256payment=_token*presale_detail[i].price;if(payment==amount){presale_detail[i].pretoken-=_token*decimal_price;balances[_account]=safeAdd(balances[_account],_token*decimal_price);total_earning+=payment;total_purchase_token+=_token*decimal_price;total_sale_token+=_token*decimal_price;}else{revert(\"Invalid amount\");}return;}else{revert();}}}if(now>=crowdsale_detail.crowd_startdate&&now<=crowdsale_detail.crowd_enddate){require(_token<total_crowdsale_token);uint256payment_for_crowdsale=_token*crowdsale_detail.price;if(payment_for_crowdsale==amount){balances[_account]=safeAdd(balances[_account],_token*decimal_price);if(crowdsale_detail.crowd_token>0){crowdsale_detail.crowd_token-=_token*decimal_price;total_earning+=payment_for_crowdsale;total_purchase_token+=_token*decimal_price;total_sale_token+=_token*decimal_price;}else{revert(\"Check available token balances\");}}else{revert(\"Invalid amount\");}}else{revert(\"Sale is not started\");}emitTransfer(address(0),_account,_token*decimal_price);}functionpay_from_bounty(uinttokens,addressto)publiconlyOwnerreturns(boolsuccess){bounty=safeSub(bounty,tokens*decimal_price);balances[owner]-=tokens*decimal_price;balances[to]=safeAdd(balances[to],tokens*decimal_price);total_sale_token+=tokens*decimal_price;emitTransfer(msg.sender,to,tokens*decimal_price);returntrue;}functionpay_from_reserved(uinttokens,addressto)publiconlyOwnerreturns(boolsuccess){reserved=safeSub(reserved,tokens*decimal_price);balances[owner]-=tokens*decimal_price;balances[to]=safeAdd(balances[to],tokens*decimal_price);total_sale_token+=tokens*decimal_price;emitTransfer(msg.sender,to,tokens*decimal_price);returntrue;}functionpay_from_team(uinttokens,addressto)publiconlyOwnerreturns(boolsuccess){team=safeSub(team,tokens*decimal_price);balances[owner]-=tokens*decimal_price;balances[to]=safeAdd(balances[to],tokens*decimal_price);total_sale_token+=tokens*decimal_price;emitTransfer(msg.sender,to,tokens*decimal_price);returntrue;}functionget_contrct_balance()publicviewreturns(uint256){returnaddress(this).balance;}functionethTransfer(addresspayableto,uintvalue_in_eth)onlyOwnerpublicreturns<missing ';'>(boolsuccess){uint256contractblc=address(this).balance;contractblc-=value_in_eth;uintwi=1000000000000000000;uintfinalamt=value_in_eth*wi;to.transfer(finalamt);returntrue;}"
    },
    {
      "name": "SOLIDITY_PRAGMAS_VERSION",
      "patternId": "23fc32",
      "severity": 1,
      "line": 1,
      "column": 16,
      "content": "^"
    },
    {
      "name": "SOLIDITY_REVERT_REQUIRE",
      "patternId": "c56b12",
      "severity": 1,
      "line": 130,
      "column": 8,
      "content": "if(_startdate<=_enddate&&_startdate>now&&token_for_presale<ico){for(uintstart=0;start<presale_detail.length;start++){if(presale_detail[start].endDate>=_startdate){revert(\"Another Sale is running\");}}presalememoryp=presale(_startdate,_enddate,token_for_presale*decimal_price,price);presale_detail.push(p);total_presale_token+=token_for_presale*decimal_price;balances[owner]-=token_for_presale*decimal_price;total_crowdsale_token=ico-total_presale_token;crowdsale_detail.crowd_token=total_crowdsale_token;}else{revert(\"Presale not set\");}"
    },
    {
      "name": "SOLIDITY_REVERT_REQUIRE",
      "patternId": "c56b12",
      "severity": 1,
      "line": 133,
      "column": 16,
      "content": "if(presale_detail[start].endDate>=_startdate){revert(\"Another Sale is running\");}"
    },
    {
      "name": "SOLIDITY_REVERT_REQUIRE",
      "patternId": "c56b12",
      "severity": 1,
      "line": 152,
      "column": 8,
      "content": "if(_startdate<=_enddate&&_startdate>now){crowdsale_detail.crowd_startdate=_startdate;crowdsale_detail.crowd_enddate=_enddate;crowdsale_detail.price=_price;balances[owner]-=total_crowdsale_token;}else{revert(\"Crowdasale not set\");}"
    },
    {
      "name": "SOLIDITY_REVERT_REQUIRE",
      "patternId": "c56b12",
      "severity": 1,
      "line": 206,
      "column": 16,
      "content": "if(_token*decimal_price<=presale_detail[i].pretoken){uint256payment=_token*presale_detail[i].price;if(payment==amount){presale_detail[i].pretoken-=_token*decimal_price;balances[_account]=safeAdd(balances[_account],_token*decimal_price);total_earning+=payment;total_purchase_token+=_token*decimal_price;total_sale_token+=_token*decimal_price;}else{revert(\"Invalid amount\");}return;}else{revert();}"
    },
    {
      "name": "SOLIDITY_REVERT_REQUIRE",
      "patternId": "c56b12",
      "severity": 1,
      "line": 208,
      "column": 20,
      "content": "if(payment==amount){presale_detail[i].pretoken-=_token*decimal_price;balances[_account]=safeAdd(balances[_account],_token*decimal_price);total_earning+=payment;total_purchase_token+=_token*decimal_price;total_sale_token+=_token*decimal_price;}else{revert(\"Invalid amount\");}"
    },
    {
      "name": "SOLIDITY_REVERT_REQUIRE",
      "patternId": "c56b12",
      "severity": 1,
      "line": 226,
      "column": 8,
      "content": "if(now>=crowdsale_detail.crowd_startdate&&now<=crowdsale_detail.crowd_enddate){require(_token<total_crowdsale_token);uint256payment_for_crowdsale=_token*crowdsale_detail.price;if(payment_for_crowdsale==amount){balances[_account]=safeAdd(balances[_account],_token*decimal_price);if(crowdsale_detail.crowd_token>0){crowdsale_detail.crowd_token-=_token*decimal_price;total_earning+=payment_for_crowdsale;total_purchase_token+=_token*decimal_price;total_sale_token+=_token*decimal_price;}else{revert(\"Check available token balances\");}}else{revert(\"Invalid amount\");}}else{revert(\"Sale is not started\");}"
    },
    {
      "name": "SOLIDITY_REVERT_REQUIRE",
      "patternId": "c56b12",
      "severity": 1,
      "line": 229,
      "column": 12,
      "content": "if(payment_for_crowdsale==amount){balances[_account]=safeAdd(balances[_account],_token*decimal_price);if(crowdsale_detail.crowd_token>0){crowdsale_detail.crowd_token-=_token*decimal_price;total_earning+=payment_for_crowdsale;total_purchase_token+=_token*decimal_price;total_sale_token+=_token*decimal_price;}else{revert(\"Check available token balances\");}}else{revert(\"Invalid amount\");}"
    },
    {
      "name": "SOLIDITY_REVERT_REQUIRE",
      "patternId": "c56b12",
      "severity": 1,
      "line": 231,
      "column": 16,
      "content": "if(crowdsale_detail.crowd_token>0){crowdsale_detail.crowd_token-=_token*decimal_price;total_earning+=payment_for_crowdsale;total_purchase_token+=_token*decimal_price;total_sale_token+=_token*decimal_price;}else{revert(\"Check available token balances\");}"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": 910067,
      "severity": 1,
      "line": 287,
      "column": 4,
      "content": "functionethTransfer(addresspayable"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 59,
      "column": 4,
      "content": "uinttotalsupply;"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 60,
      "column": 4,
      "content": "uintinitialBalance;"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 70,
      "column": 4,
      "content": "uintdecimal_price;"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 92,
      "column": 4,
      "content": "mapping(address=>uint)balances;"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 93,
      "column": 4,
      "content": "mapping(address=>mapping(address=>uint))allowed;"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 287,
      "column": 41,
      "content": "to,"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 287,
      "column": 45,
      "content": "uintvalue_in_eth)"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 287,
      "column": 88,
      "content": "(boolsuccess){"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 288,
      "column": 8,
      "content": "uint256contractblc=address(this).balance;"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 289,
      "column": 8,
      "content": "contractblc-=value_in_eth;"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 290,
      "column": 8,
      "content": "uintwi=1000000000000000000;"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 291,
      "column": 8,
      "content": "uintfinalamt=value_in_eth*wi;"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 292,
      "column": 8,
      "content": "to.transfer(finalamt);"
    }
  ]
}