/unique_chucks/21/0xa15c784319fa96d3e36cfe97fbadd89ec704a8dc.sol
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_CALL_WITHOUT_DATA
patternId: om991k
severity: 2
line: 98
column: 23
content: call.value(_ether)()

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 187b5a
severity: 1
line: 838
column: 23
content: sha3

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 187b5a
severity: 1
line: 850
column: 26
content: sha3

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 187b5a
severity: 1
line: 874
column: 24
content: sha3

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 187b5a
severity: 1
line: 888
column: 24
content: sha3

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 187b5a
severity: 1
line: 890
column: 36
content: sha3

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 187b5a
severity: 1
line: 1012
column: 24
content: sha3

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 187b5a
severity: 1
line: 1057
column: 20
content: sha3

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 187b5a
severity: 1
line: 1082
column: 30
content: sha3

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 187b5a
severity: 1
line: 1094
column: 23
content: sha3

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 49bd2a
severity: 1
line: 40
column: 33
content: throw

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 49bd2a
severity: 1
line: 51
column: 19
content: throw

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 49bd2a
severity: 1
line: 62
column: 19
content: throw

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 49bd2a
severity: 1
line: 68
column: 19
content: throw

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 49bd2a
severity: 1
line: 98
column: 45
content: throw

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 49bd2a
severity: 1
line: 150
column: 22
content: throw

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 49bd2a
severity: 1
line: 313
column: 43
content: throw

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 49bd2a
severity: 1
line: 319
column: 37
content: throw

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 49bd2a
severity: 1
line: 385
column: 38
content: throw

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 49bd2a
severity: 1
line: 767
column: 22
content: throw

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 49bd2a
severity: 1
line: 775
column: 58
content: throw

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 49bd2a
severity: 1
line: 782
column: 56
content: throw

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 49bd2a
severity: 1
line: 788
column: 44
content: throw

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 49bd2a
severity: 1
line: 794
column: 40
content: throw

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 76
column: 4
content: functionversion()publicconstantreturns(string){returnVERSION;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 80
column: 4
content: functioncontractBalance()publicconstantreturns(uint){returnthis.balance;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 143
column: 4
content: functionversion()publicconstantreturns(string){returnVERSION;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 148
column: 4
content: functionassert(boolassertion)internalconstant{if(!assertion)throw;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 156
column: 4
content: functioncmp(uinta,uintb,bool_sym)internalconstantreturns(bool){return(a!=b)&&((a<b)!=_sym);}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 164
column: 4
content: functioncmpEq(uinta,uintb,bool_sym)internalconstantreturns(bool){return(a==b)||((a<b)!=_sym);}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 188
column: 4
content: functionsafeMul(uinta,uintb)internalconstantreturns(uint){uintc=a*b;assert(a==0||c/a==b);returnc;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 195
column: 4
content: functionsafeSub(uinta,uintb)internalconstantreturns(uint){assert(b<=a);returna-b;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 201
column: 4
content: functionsafeAdd(uinta,uintb)internalconstantreturns(uint){uintc=a+b;assert(c>=a&&c>=b);returnc;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 338
column: 4
content: functionversion()publicconstantreturns(string){returnVERSION;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 342
column: 4
content: functionbalanceOf(address_addr)publicconstantreturns(uint){returnbalance[_addr];}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 435
column: 4
content: functionversion()internalconstantreturns(string){returnVERSION;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 440
column: 4
content: functionexists(CLLstorageself)internalconstantreturns(bool){if(self.cll[HEAD][PREV]!=HEAD||self.cll[HEAD][NEXT]!=HEAD)returntrue;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 449
column: 4
content: functionsizeOf(CLLstorageself)internalconstantreturns(uintr){uinti=step(self,HEAD,NEXT);while(i!=HEAD){i=step(self,i,NEXT);r++;}return;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 459
column: 4
content: functiongetNode(CLLstorageself,uintn)internalconstantreturns(uint[2]){return[self.cll[n][PREV],self.cll[n][NEXT]];}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 466
column: 4
content: functionstep(CLLstorageself,uintn,boold)internalconstantreturns(uint){returnself.cll[n][d];}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 476
column: 4
content: functionseek(CLLstorageself,uinta,uintb,boold)internalconstantreturns(uintr){r=step(self,a,d);while((b!=r)&&((b<r)!=d))r=self.cll[r][d];return;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 529
column: 4
content: functionversion()internalconstantreturns(string){returnVERSION;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 534
column: 4
content: functionexists(CLLstorageself,intn)internalconstantreturns(bool){if(self.cll[HEAD][PREV]!=HEAD||self.cll[HEAD][NEXT]!=HEAD)returntrue;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 539
column: 4
content: functionsizeOf(CLLstorageself)internalconstantreturns(uintr){inti=step(self,HEAD,NEXT);while(i!=HEAD){i=step(self,i,NEXT);r++;}return;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 549
column: 4
content: functiongetNode(CLLstorageself,intn)internalconstantreturns(int[2]){return[self.cll[n][PREV],self.cll[n][NEXT]];}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 556
column: 4
content: functionstep(CLLstorageself,intn,boold)internalconstantreturns(int){returnself.cll[n][d];}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 566
column: 4
content: functionseek(CLLstorageself,inta,intb,boold)internalconstantreturns(intr){r=step(self,a,d);while((b!=r)&&((b<r)!=d))r=self.cll[r][d];return;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 706
column: 4
content: functionspread(bool_side)publicconstantreturns(uint);

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 711
column: 4
content: functiongetAmount(uint_price,address_trader)publicconstantreturns(uint);

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 716
column: 4
content: functiongetPriceVolume(uint_price)publicconstantreturns(uint);

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 721
column: 4
content: functiongetBook()publicconstantreturns(uint[]);

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 824
column: 4
content: functionversion()publicconstantreturns(string){returnVERSION;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 828
column: 4
content: functionetherBalanceOf(address_addr)publicconstantreturns(uint){returnetherBalance[_addr];}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 832
column: 4
content: functionspread(bool_side)publicconstantreturns(uint){returnpriceBook.step(HEAD,_side);}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 836
column: 4
content: functiongetAmount(uint_price,address_trader)publicconstantreturns(uint){returnamounts[sha3(_price,_trader)];}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 841
column: 4
content: functionsizeOf(uintl)constantreturns(uints){if(l==0)returnpriceBook.sizeOf();returnorderFIFOs[l].sizeOf();}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 846
column: 4
content: functiongetPriceVolume(uint_price)publicconstantreturns(uintv_){uintn=orderFIFOs[_price].step(HEAD,NEXT);while(n!=HEAD){v_+=amounts[sha3(_price,address(n))];n=orderFIFOs[_price].step(n,NEXT);}return;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 856
column: 4
content: functiongetBook()publicconstantreturns(uint[]){uinti;uintp=priceBook.step(MINNUM,NEXT);uint[]memoryvolumes=newuint[](priceBook.sizeOf()*2-2);while(p<MAXNUM){volumes[i++]=p;volumes[i++]=getPriceVolume(p);p=priceBook.step(p,NEXT);}returnvolumes;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 869
column: 4
content: functionnumOrdersOf(address_addr)publicconstantreturns(uint){uintc;uintp=MINNUM;while(p<MAXNUM){if(amounts[sha3(p,_addr)]>0)c++;p=priceBook.step(p,NEXT);}returnc;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 880
column: 4
content: functiongetOpenOrdersOf(address_addr)publicconstantreturns(uint[]){uinti;uintc;uintp=MINNUM;uint[]memoryopen=newuint[](numOrdersOf(_addr)*2);p=MINNUM;while(p<MAXNUM){if(amounts[sha3(p,_addr)]>0){open[i++]=p;open[i++]=amounts[sha3(p,_addr)];}p=priceBook.step(p,NEXT);}returnopen;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 897
column: 4
content: functiongetNode(uint_list,uint_node)publicconstantreturns(uint[2]){return[orderFIFOs[_list].cll[_node][PREV],orderFIFOs[_list].cll[_node][NEXT]];}

ruleId: SOLIDITY_ERC20_APPROVE
patternId: af782c
severity: 2
line: 380
column: 4
content: functionapprove(address_spender,uint256_value)externalcanEnterreturns(boolsuccess){if(balance[msg.sender]==0)throw;allowance[msg.sender][_spender]=_value;Approval(msg.sender,_spender,_value);returntrue;}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: 17f23a
severity: 1
line: 451
column: 15
content: i!=HEAD

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: 17f23a
severity: 1
line: 480
column: 16
content: (b!=r)&&((b<r)!=d)

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: 17f23a
severity: 1
line: 541
column: 15
content: i!=HEAD

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: 17f23a
severity: 1
line: 570
column: 16
content: (b!=r)&&((b<r)!=d)

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: 17f23a
severity: 1
line: 849
column: 15
content: n!=HEAD

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: 17f23a
severity: 1
line: 861
column: 15
content: p<MAXNUM

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: 17f23a
severity: 1
line: 873
column: 15
content: p<MAXNUM

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: 17f23a
severity: 1
line: 887
column: 15
content: p<MAXNUM

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: 38f6c7
severity: 2
line: 1005
column: 8
content: while(tmsg.tradeAmount>0&&cmpEq(tmsg.price,bestPrice,!tmsg.side)&&msg.gas>MINGAS){maker=address(orderFIFOs[bestPrice].step(HEAD,NEXT));orderHash=sha3(bestPrice,maker);if(tmsg.tradeAmount<amounts[orderHash]){amounts[orderHash]=safeSub(amounts[orderHash],tmsg.tradeAmount);takeAmount=tmsg.tradeAmount;tmsg.tradeAmount=0;}else{takeAmount=amounts[orderHash];tmsg.tradeAmount=safeSub(tmsg.tradeAmount,takeAmount);closeOrder(bestPrice,maker);}takeEther=safeMul(bestPrice,takeAmount);tmsg.etherBalance+=takeEther*sign;tmsg.balance-=takeAmount*sign;if(tmsg.side){if(msg.sender==maker){tmsg.balance+=takeAmount;}else{balance[maker]+=takeAmount;}}else{if(msg.sender==maker){tmsg.etherBalance+=takeEther;}else{etherBalance[maker]+=takeEther;}}bestPrice=spread(!tmsg.side);Sale(bestPrice,takeAmount,msg.sender,maker);}

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 632
column: 0
content: contractITTInterface{usingLibCLLuforLibCLLu.CLL;stringconstantVERSION="ITT 0.3.6\nERC20 0.2.3-o0ragman0o\nMath 0.0.1\nBase 0.1.1\n";uintconstantHEAD=0;uintconstantMINNUM=uint(1);uintconstantMAXNUM=2**128;uintconstantMINPRICE=uint(1);uintconstantNEG=uint(-1);boolconstantPREV=false;boolconstantNEXT=true;boolconstantBID=false;boolconstantASK=true;uintconstantMINGAS=100000;structTradeMessage{boolmake;boolside;uintprice;uinttradeAmount;uintbalance;uintetherBalance;}boolpublictrading;mapping(address=>uint)etherBalance;mapping(uint=>LibCLLu.CLL)orderFIFOs;mapping(bytes32=>uint)amounts;LibCLLu.CLLpriceBook=orderFIFOs[0];eventAsk(uintindexedprice,uintamount,addressindexedtrader);eventBid(uintindexedprice,uintamount,addressindexedtrader);eventSale(uintindexedprice,uintamount,addressindexedbuyer,addressindexedseller);eventTrading(booltrading);functionspread(bool_side)publicconstantreturns(uint);functiongetAmount(uint_price,address_trader)publicconstantreturns(uint);functiongetPriceVolume(uint_price)publicconstantreturns(uint);functiongetBook()publicconstantreturns(uint[]);functionbuy(uint_bidPrice,uint_amount,bool_make)payablereturns(bool);functionsell(uint_askPrice,uint_amount,bool_make)externalreturns(bool);functionwithdraw(uint_ether)externalreturns(boolsuccess_);functioncancel(uint_price)externalreturns(bool);functionsetTrading(bool_trading)externalreturns(bool);}

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 758
column: 0
content: contractITTisERC20Token,ITTInterface{modifierisTrading(){if(!trading)throw;_;}modifierisValidBuy(uint_bidPrice,uint_amount){if((etherBalance[msg.sender]+msg.value)<(_amount*_bidPrice)||_amount==0||_amount>totalSupply||_bidPrice<=MINPRICE||_bidPrice>=MAXNUM)throw;_;}modifierisValidSell(uint_askPrice,uint_amount){if(_amount>balance[msg.sender]||_amount==0||_askPrice<MINPRICE||_askPrice>MAXNUM)throw;_;}modifierhasEther(address_member,uint_ether){if(etherBalance[_member]<_ether)throw;_;}modifierhasBalance(address_member,uint_amount){if(balance[_member]<_amount)throw;_;}functionITT(uint_totalSupply,uint8_decimalPlaces,string_symbol,string_name)ERC20Token(_totalSupply,_decimalPlaces,_symbol,_name){priceBook.cll[HEAD][PREV]=MINPRICE;priceBook.cll[MINPRICE][PREV]=MAXNUM;priceBook.cll[HEAD][NEXT]=MAXNUM;priceBook.cll[MAXNUM][NEXT]=MINPRICE;trading=true;balance[owner]=totalSupply;}functionversion()publicconstantreturns(string){returnVERSION;}functionetherBalanceOf(address_addr)publicconstantreturns(uint){returnetherBalance[_addr];}functionspread(bool_side)publicconstantreturns(uint){returnpriceBook.step(HEAD,_side);}functiongetAmount(uint_price,address_trader)publicconstantreturns(uint){returnamounts[sha3(_price,_trader)];}functionsizeOf(uintl)constantreturns(uints){if(l==0)returnpriceBook.sizeOf();returnorderFIFOs[l].sizeOf();}functiongetPriceVolume(uint_price)publicconstantreturns(uintv_){uintn=orderFIFOs[_price].step(HEAD,NEXT);while(n!=HEAD){v_+=amounts[sha3(_price,address(n))];n=orderFIFOs[_price].step(n,NEXT);}return;}functiongetBook()publicconstantreturns(uint[]){uinti;uintp=priceBook.step(MINNUM,NEXT);uint[]memoryvolumes=newuint[](priceBook.sizeOf()*2-2);while(p<MAXNUM){volumes[i++]=p;volumes[i++]=getPriceVolume(p);p=priceBook.step(p,NEXT);}returnvolumes;}functionnumOrdersOf(address_addr)publicconstantreturns(uint){uintc;uintp=MINNUM;while(p<MAXNUM){if(amounts[sha3(p,_addr)]>0)c++;p=priceBook.step(p,NEXT);}returnc;}functiongetOpenOrdersOf(address_addr)publicconstantreturns(uint[]){uinti;uintc;uintp=MINNUM;uint[]memoryopen=newuint[](numOrdersOf(_addr)*2);p=MINNUM;while(p<MAXNUM){if(amounts[sha3(p,_addr)]>0){open[i++]=p;open[i++]=amounts[sha3(p,_addr)];}p=priceBook.step(p,NEXT);}returnopen;}functiongetNode(uint_list,uint_node)publicconstantreturns(uint[2]){return[orderFIFOs[_list].cll[_node][PREV],orderFIFOs[_list].cll[_node][NEXT]];}functionbuy(uint_bidPrice,uint_amount,bool_make)payablecanEnterisTradingisValidBuy(_bidPrice,_amount)returns(bool){trade(_bidPrice,_amount,BID,_make);returntrue;}functionsell(uint_askPrice,uint_amount,bool_make)externalcanEnterisTradingisValidSell(_askPrice,_amount)returns(bool){trade(_askPrice,_amount,ASK,_make);returntrue;}functionwithdraw(uint_ether)externalcanEnterhasEther(msg.sender,_ether)returns(boolsuccess_){etherBalance[msg.sender]-=_ether;safeSend(msg.sender,_ether);success_=true;}functioncancel(uint_price)externalcanEnterreturns(bool){TradeMessagememorytmsg;tmsg.price=_price;tmsg.balance=balance[msg.sender];tmsg.etherBalance=etherBalance[msg.sender];cancelIntl(tmsg);balance[msg.sender]=tmsg.balance;etherBalance[msg.sender]=tmsg.etherBalance;returntrue;}functionsetTrading(bool_trading)externalonlyOwnercanEnterreturns(bool){trading=_trading;Trading(true);returntrue;}functiontrade(uint_price,uint_amount,bool_side,bool_make)internal{TradeMessagememorytmsg;tmsg.price=_price;tmsg.tradeAmount=_amount;tmsg.side=_side;tmsg.make=_make;tmsg.balance=balance[msg.sender];tmsg.etherBalance=etherBalance[msg.sender]+msg.value;take(tmsg);make(tmsg);balance[msg.sender]=tmsg.balance;etherBalance[msg.sender]=tmsg.etherBalance;}functiontake(TradeMessagetmsg)internal{addressmaker;bytes32orderHash;uinttakeAmount;uinttakeEther;uintsign=tmsg.side?uint(1):uint(-1);uintbestPrice=spread(!tmsg.side);while(tmsg.tradeAmount>0&&cmpEq(tmsg.price,bestPrice,!tmsg.side)&&msg.gas>MINGAS){maker=address(orderFIFOs[bestPrice].step(HEAD,NEXT));orderHash=sha3(bestPrice,maker);if(tmsg.tradeAmount<amounts[orderHash]){amounts[orderHash]=safeSub(amounts[orderHash],tmsg.tradeAmount);takeAmount=tmsg.tradeAmount;tmsg.tradeAmount=0;}else{takeAmount=amounts[orderHash];tmsg.tradeAmount=safeSub(tmsg.tradeAmount,takeAmount);closeOrder(bestPrice,maker);}takeEther=safeMul(bestPrice,takeAmount);tmsg.etherBalance+=takeEther*sign;tmsg.balance-=takeAmount*sign;if(tmsg.side){if(msg.sender==maker){tmsg.balance+=takeAmount;}else{balance[maker]+=takeAmount;}}else{if(msg.sender==maker){tmsg.etherBalance+=takeEther;}else{etherBalance[maker]+=takeEther;}}bestPrice=spread(!tmsg.side);Sale(bestPrice,takeAmount,msg.sender,maker);}}functionmake(TradeMessagetmsg)internal{bytes32orderHash;if(tmsg.tradeAmount==0||!tmsg.make||msg.gas<MINGAS)return;orderHash=sha3(tmsg.price,msg.sender);if(amounts[orderHash]!=0){cancelIntl(tmsg);}if(!orderFIFOs[tmsg.price].exists()){priceBook.insert(priceBook.seek(HEAD,tmsg.price,tmsg.side),tmsg.price,!tmsg.side);}amounts[orderHash]=tmsg.tradeAmount;orderFIFOs[tmsg.price].push(uint(msg.sender),PREV);if(tmsg.side){tmsg.balance-=tmsg.tradeAmount;Ask(tmsg.price,tmsg.tradeAmount,msg.sender);}else{tmsg.etherBalance-=tmsg.tradeAmount*tmsg.price;Bid(tmsg.price,tmsg.tradeAmount,msg.sender);}}functioncancelIntl(TradeMessagetmsg)internal{uintamount=amounts[sha3(tmsg.price,msg.sender)];if(amount==0)return;if(tmsg.price>spread(BID))tmsg.balance+=amount;elsetmsg.etherBalance+=tmsg.price*amount;closeOrder(tmsg.price,msg.sender);}functioncloseOrder(uint_price,address_trader)internal{orderFIFOs[_price].remove(uint(_trader));if(!orderFIFOs[_price].exists()){priceBook.remove(_price);}deleteamounts[sha3(_price,_trader)];}}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 960
column: 4
content: functionsetTrading(bool_trading)externalonlyOwnercanEnterreturns(bool){trading=_trading;Trading(true);returntrue;}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 18
column: 16
content: ^

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 121
column: 16
content: ^

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 40
column: 8
content: if(msg.sender!=owner)throw;

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 51
column: 8
content: if(mutex)throw;elsemutex=true;

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 62
column: 8
content: if(mutex)throw;

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 68
column: 8
content: if(mutex)throw;

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 98
column: 8
content: if(!_recipient.call.value(_ether)())throw;

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 150
column: 6
content: if(!assertion)throw;

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 313
column: 8
content: if(_amount>balance[msg.sender])throw;

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 318
column: 8
content: if(_amount>allowance[_from][msg.sender]||_amount>balance[_from])throw;

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 385
column: 8
content: if(balance[msg.sender]==0)throw;

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 767
column: 8
content: if(!trading)throw;

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 773
column: 8
content: if((etherBalance[msg.sender]+msg.value)<(_amount*_bidPrice)||_amount==0||_amount>totalSupply||_bidPrice<=MINPRICE||_bidPrice>=MAXNUM)throw;

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 781
column: 8
content: if(_amount>balance[msg.sender]||_amount==0||_askPrice<MINPRICE||_askPrice>MAXNUM)throw;

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 788
column: 8
content: if(etherBalance[_member]<_ether)throw;

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 794
column: 8
content: if(balance[_member]<_amount)throw;

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 83k1no
severity: 1
line: 98
column: 23
content: call.value(_ether)()

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 76
column: 48
content: string

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 143
column: 48
content: string

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 338
column: 47
content: string

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 435
column: 50
content: string

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 529
column: 50
content: string

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 721
column: 48
content: uint[]

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 824
column: 47
content: string

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 856
column: 48
content: uint[]

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 880
column: 69
content: uint[]

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 74
column: 4
content: functionBase(){owner=msg.sender;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 325
column: 4
content: functionERC20Token(uint_supply,uint8_decimalPlaces,string_symbol,string_name){totalSupply=_supply;decimalPlaces=_decimalPlaces;symbol=_symbol;name=_name;balance[msg.sender]=totalSupply;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 729
column: 4
content: functionbuy(uint_bidPrice,uint_amount,bool_make)payablereturns(bool);

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 800
column: 4
content: functionITT(uint_totalSupply,uint8_decimalPlaces,string_symbol,string_name)ERC20Token(_totalSupply,_decimalPlaces,_symbol,_name){priceBook.cll[HEAD][PREV]=MINPRICE;priceBook.cll[MINPRICE][PREV]=MAXNUM;priceBook.cll[HEAD][NEXT]=MAXNUM;priceBook.cll[MAXNUM][NEXT]=MINPRICE;trading=true;balance[owner]=totalSupply;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 841
column: 4
content: functionsizeOf(uintl)constantreturns(uints){if(l==0)returnpriceBook.sizeOf();returnorderFIFOs[l].sizeOf();}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 912
column: 4
content: functionbuy(uint_bidPrice,uint_amount,bool_make)payablecanEnterisTradingisValidBuy(_bidPrice,_amount)returns(bool){trade(_bidPrice,_amount,BID,_make);returntrue;}

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 24
column: 4
content: stringconstantVERSION="Base 0.1.1 \n";

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 28
column: 4
content: boolmutex;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 128
column: 4
content: stringconstantVERSION="Math 0.0.1 \n";

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 129
column: 4
content: uintconstantNULL=0;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 130
column: 4
content: boolconstantLT=false;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 131
column: 4
content: boolconstantGT=true;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 133
column: 4
content: uintconstantiTRUE=1;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 134
column: 4
content: uintconstantiFALSE=0;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 135
column: 4
content: uintconstantiPOS=1;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 136
column: 4
content: uintconstantiZERO=0;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 137
column: 4
content: uintconstantiNEG=uint(-1);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 239
column: 4
content: stringconstantVERSION="ERC20 0.2.3-o0ragman0o\nMath 0.0.1\nBase 0.1.1\n";

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 249
column: 4
content: mapping(address=>uint)balance;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 423
column: 4
content: stringconstantVERSION="LibCLLu 0.3.1";

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 424
column: 4
content: uintconstantNULL=0;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 425
column: 4
content: uintconstantHEAD=NULL;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 426
column: 4
content: boolconstantPREV=false;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 427
column: 4
content: boolconstantNEXT=true;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 517
column: 4
content: stringconstantVERSION="LibCLLi 0.3.1";

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 518
column: 4
content: intconstantNULL=0;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 519
column: 4
content: intconstantHEAD=NULL;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 520
column: 4
content: boolconstantPREV=false;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 521
column: 4
content: boolconstantNEXT=true;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 639
column: 4
content: stringconstantVERSION="ITT 0.3.6\nERC20 0.2.3-o0ragman0o\nMath 0.0.1\nBase 0.1.1\n";

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 640
column: 4
content: uintconstantHEAD=0;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 641
column: 4
content: uintconstantMINNUM=uint(1);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 643
column: 4
content: uintconstantMAXNUM=2**128;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 644
column: 4
content: uintconstantMINPRICE=uint(1);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 645
column: 4
content: uintconstantNEG=uint(-1);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 646
column: 4
content: boolconstantPREV=false;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 647
column: 4
content: boolconstantNEXT=true;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 648
column: 4
content: boolconstantBID=false;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 649
column: 4
content: boolconstantASK=true;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 652
column: 4
content: uintconstantMINGAS=100000;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 672
column: 4
content: mapping(address=>uint)etherBalance;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 678
column: 4
content: mapping(uint=>LibCLLu.CLL)orderFIFOs;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 683
column: 4
content: mapping(bytes32=>uint)amounts;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 686
column: 4
content: LibCLLu.CLLpriceBook=orderFIFOs[0];

SOLIDITY_VISIBILITY :44
SOLIDITY_OVERPOWERED_ROLE :1
SOLIDITY_DEPRECATED_CONSTRUCTIONS :60
SOLIDITY_PRAGMAS_VERSION :2
SOLIDITY_REVERT_REQUIRE :14
SOLIDITY_LOCKED_MONEY :2
SOLIDITY_UPGRADE_TO_050 :10
SOLIDITY_GAS_LIMIT_IN_LOOPS :9
SOLIDITY_CALL_WITHOUT_DATA :1
SOLIDITY_ERC20_APPROVE :1