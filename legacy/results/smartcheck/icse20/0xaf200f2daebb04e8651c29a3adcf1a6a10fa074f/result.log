/unique_chucks/42/0xaf200f2daebb04e8651c29a3adcf1a6a10fa074f.sol
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 368
column: 19
content: (address(0))

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 388
column: 19
content: (address(0))

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 611
column: 4
content: functionisPayFeeSafe(address_addr)privatereturns(bool_isImplemented){bytes32sig=bytes4(keccak256("payFee(uint256)"));assembly{letx:=mload(0x40)mstore(x,sig)mstore(add(x,0x04),1)let_success:=call(20000,_addr,0,x,0x24,x,0x0)_isImplemented:=_success}}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 639
column: 4
content: functionisGetLastModifiedNonceSafe(address_addr)privatereturns(bool_isImplemented){bytes32sig=bytes4(keccak256("getLastModifiedNonce(uint256)"));assembly{letx:=mload(0x40)mstore(x,sig)mstore(add(x,0x04),1)let_success:=call(20000,_addr,0,x,0x24,x,0x0)_isImplemented:=_success}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: 17f23a
severity: 1
line: 422
column: 15
content: low<high

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 504
column: 0
content: contractMintibleIisERC721{functiongetLastModifiedNonce(uint256_id)publicviewreturns(uint);functionpayFee(uint256_id)publicpayable;}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: ^

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 406
column: 12
content: private

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 397
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 361
column: 4
content: functionrecover(bytes32hash,bytessig)internalpurereturns(address){bytes32r;bytes32s;uint8v;if(sig.length!=65){return(address(0));}assembly{r:=mload(add(sig,32))s:=mload(add(sig,64))v:=byte(0,mload(add(sig,96)))}if(v<27){v+=27;}if(v!=27&&v!=28){return(address(0));}else{returnecrecover(hash,v,r,s);}}

ruleId: SOLIDITY_SHOULD_NOT_BE_VIEW
patternId: 189abf
severity: 1
line: 329
column: 4
content: functionisContract(addressaddr)internalviewreturns(bool){uint256size;assembly{size:=extcodesize(addr)}returnsize>0;}

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 361
column: 35
content: bytessig

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 418
column: 42
content: uint32[]_odds

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 447
column: 29
content: uint256[]_arr

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 447
column: 98
content: uint256[]

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 456
column: 31
content: uint256[]_arr

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 456
column: 100
content: uint32[]

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 465
column: 31
content: uint256[]_arr

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 465
column: 100
content: uint64[]

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 496
column: 8
content: bytes_data

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 538
column: 8
content: bytes_signature

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 582
column: 48
content: bytes_signature

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 601
column: 66
content: bytes_signature

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 375
column: 8
content: assembly{r:=mload(add(sig,32))s:=mload(add(sig,64))v:=byte(0,mload(add(sig,96)))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 617
column: 8
content: assembly{letx:=mload(0x40)mstore(x,sig)mstore(add(x,0x04),1)let_success:=call(20000,_addr,0,x,0x24,x,0x0)_isImplemented:=_success}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 645
column: 8
content: assembly{letx:=mload(0x40)mstore(x,sig)mstore(add(x,0x04),1)let_success:=call(20000,_addr,0,x,0x24,x,0x0)_isImplemented:=_success}

SOLIDITY_SAFEMATH :1
SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_LOCKED_MONEY :1
SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN :2
SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA :1
SOLIDITY_ADDRESS_HARDCODED :2
SOLIDITY_UPGRADE_TO_050 :12
SOLIDITY_GAS_LIMIT_IN_LOOPS :1
SOLIDITY_USING_INLINE_ASSEMBLY :3
SOLIDITY_SHOULD_NOT_BE_VIEW :1
SOLIDITY_SHOULD_NOT_BE_PURE :1