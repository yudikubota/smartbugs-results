/unique_contracts/0x8eb75e93b56451f054d2ba60593d62173565dd53.sol
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 42
column: 4
content: owner=address(0)

ruleId: SOLIDITY_ARRAY_LENGTH_MANIPULATION
patternId: 872bdd
severity: 1
line: 461
column: 8
content: sendersStack_.length-=1

ruleId: SOLIDITY_DIV_MUL
patternId: 09hhh1
severity: 2
line: 709
column: 33
content: returnAmount.mul(changeFee).div(ONE_HUNDRED_PERCRENTS.sub(changeFee)).mul(refferalFee)

ruleId: SOLIDITY_ERC20_APPROVE
patternId: af782c
severity: 2
line: 349
column: 2
content: functionapprove(address_spender,uint256_value)publicreturns(bool){allowed[msg.sender][_spender]=_value;emitApproval(msg.sender,_spender,_value);returntrue;}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 511
column: 8
content: for(uinti=0;i<tokens.length;i++){tokenAmounts[i]=tokens[i].balanceOf(this).mul(_amount).div(totalSupply_);}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 530
column: 8
content: for(uinti=0;i<_tokens.length;i++){for(uintj=0;j<i;j++){require(_tokens[i]!=_tokens[j],"unbundleSome: should not unbundle same token multiple times");}uint256tokenAmount=_tokens[i].balanceOf(this).mul(_value).div(totalSupply);_tokens[i].checkedTransfer(_beneficiary,tokenAmount);}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 542
column: 8
content: for(uinti=0;i<tokens.length;i++){uint256prevBalance=tokens[i].balanceOf(this);tokens[i].transferFrom(msg.sender,this,_tokenAmounts[i]);require(tokens[i].balanceOf(this)==prevBalance.add(_tokenAmounts[i]),"Invalid token behavior");}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 579
column: 8
content: for(uinti=0;i<tokens.length;i++){_balances[i]=tokens[i].balanceOf(this);}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 586
column: 8
content: for(uinti=0;i<tokens.length;i++){_decimals[i]=DetailedERC20(tokens[i]).decimals();}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 610
column: 8
content: for(uinti=0;i<tokens.length;i++){require(_weights[i]!=0,"The _weights array should not contains zeros");require(weights[tokens[i]]==0,"The _tokens array have duplicates");weights[tokens[i]]=_weights[i];if(minimalWeight==0||minimalWeight<_weights[i]){minimalWeight=_weights[i];}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 658
column: 8
content: for(uinti=0;i<tokens.length;i++){_weights[i]=weights[tokens[i]];}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 511
column: 8
content: for(uinti=0;i<tokens.length;i++){tokenAmounts[i]=tokens[i].balanceOf(this).mul(_amount).div(totalSupply_);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 530
column: 8
content: for(uinti=0;i<_tokens.length;i++){for(uintj=0;j<i;j++){require(_tokens[i]!=_tokens[j],"unbundleSome: should not unbundle same token multiple times");}uint256tokenAmount=_tokens[i].balanceOf(this).mul(_value).div(totalSupply);_tokens[i].checkedTransfer(_beneficiary,tokenAmount);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 542
column: 8
content: for(uinti=0;i<tokens.length;i++){uint256prevBalance=tokens[i].balanceOf(this);tokens[i].transferFrom(msg.sender,this,_tokenAmounts[i]);require(tokens[i].balanceOf(this)==prevBalance.add(_tokenAmounts[i]),"Invalid token behavior");}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 579
column: 8
content: for(uinti=0;i<tokens.length;i++){_balances[i]=tokens[i].balanceOf(this);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 586
column: 8
content: for(uinti=0;i<tokens.length;i++){_decimals[i]=DetailedERC20(tokens[i]).decimals();}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 610
column: 8
content: for(uinti=0;i<tokens.length;i++){require(_weights[i]!=0,"The _weights array should not contains zeros");require(weights[tokens[i]]==0,"The _tokens array have duplicates");weights[tokens[i]]=_weights[i];if(minimalWeight==0||minimalWeight<_weights[i]){minimalWeight=_weights[i];}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 658
column: 8
content: for(uinti=0;i<tokens.length;i++){_weights[i]=weights[tokens[i]];}

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 600
column: 0
content: contractMultiTokenisIMultiToken,BasicMultiToken{usingCheckedERC20forERC20;uintinLendingMode;uint256internalminimalWeight;mapping(address=>uint256)publicweights;functioninit(ERC20[]_tokens,uint256[]_weights,string_name,string_symbol,uint8_decimals)public{super.init(_tokens,_name,_symbol,_decimals);require(_weights.length==tokens.length,"Lenghts of _tokens and _weights array should be equal");for(uinti=0;i<tokens.length;i++){require(_weights[i]!=0,"The _weights array should not contains zeros");require(weights[tokens[i]]==0,"The _tokens array have duplicates");weights[tokens[i]]=_weights[i];if(minimalWeight==0||minimalWeight<_weights[i]){minimalWeight=_weights[i];}}}functioninit2(ERC20[]_tokens,uint256[]_weights,string_name,string_symbol,uint8_decimals)public{init(_tokens,_weights,_name,_symbol,_decimals);}functiongetReturn(address_fromToken,address_toToken,uint256_amount)publicviewreturns(uint256returnAmount){if(weights[_fromToken]>0&&weights[_toToken]>0&&_fromToken!=_toToken){uint256fromBalance=ERC20(_fromToken).balanceOf(this);uint256toBalance=ERC20(_toToken).balanceOf(this);returnAmount=_amount.mul(toBalance).mul(weights[_fromToken]).div(_amount.mul(weights[_fromToken]).div(minimalWeight).add(fromBalance));}}functionchange(address_fromToken,address_toToken,uint256_amount,uint256_minReturn)publicreturns(uint256returnAmount){require(inLendingMode==0);returnAmount=getReturn(_fromToken,_toToken,_amount);require(returnAmount>0,"The return amount is zero");require(returnAmount>=_minReturn,"The return amount is less than _minReturn value");ERC20(_fromToken).checkedTransferFrom(msg.sender,this,_amount);ERC20(_toToken).checkedTransfer(msg.sender,returnAmount);emitChange(_fromToken,_toToken,msg.sender,_amount,returnAmount);}functionlend(address_to,ERC20_token,uint256_amount,address_target,bytes_data)publicpayable{inLendingMode+=1;super.lend(_to,_token,_amount,_target,_data);inLendingMode-=1;}functionallWeights()publicviewreturns(uint256[]_weights){_weights=newuint256[](tokens.length);for(uinti=0;i<tokens.length;i++){_weights[i]=weights[tokens[i]];}}functionallTokensDecimalsBalancesWeights()publicviewreturns(ERC20[]_tokens,uint8[]_decimals,uint256[]_balances,uint256[]_weights){(_tokens,_decimals,_balances)=allTokensDecimalsBalances();_weights=allWeights();}}

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 672
column: 0
content: contractFeeMultiTokenisOwnable,MultiToken{usingCheckedERC20forERC20;uint256publicconstantONE_HUNDRED_PERCRENTS=1000000;uint256publiclendFee;uint256publicchangeFee;uint256publicrefferalFee;functioninit(ERC20[]_tokens,uint256[]_weights,string_name,string_symbol,uint8)public{super.init(_tokens,_weights,_name,_symbol,18);}functionsetLendFee(uint256_lendFee)publiconlyOwner{require(_lendFee<=30000,"setLendFee: fee should be not greater than 3%");lendFee=_lendFee;}functionsetChangeFee(uint256_changeFee)publiconlyOwner{require(_changeFee<=30000,"setChangeFee: fee should be not greater than 3%");changeFee=_changeFee;}functionsetRefferalFee(uint256_refferalFee)publiconlyOwner{require(_refferalFee<=500000,"setChangeFee: fee should be not greater than 50% of changeFee");refferalFee=_refferalFee;}functiongetReturn(address_fromToken,address_toToken,uint256_amount)publicviewreturns(uint256returnAmount){returnAmount=super.getReturn(_fromToken,_toToken,_amount).mul(ONE_HUNDRED_PERCRENTS.sub(changeFee)).div(ONE_HUNDRED_PERCRENTS);}functionchange(address_fromToken,address_toToken,uint256_amount,uint256_minReturn)publicreturns(uint256returnAmount){returnAmount=changeWithRef(_fromToken,_toToken,_amount,_minReturn,0);}functionchangeWithRef(address_fromToken,address_toToken,uint256_amount,uint256_minReturn,address_ref)publicreturns(uint256returnAmount){returnAmount=super.change(_fromToken,_toToken,_amount,_minReturn);uint256refferalAmount=returnAmount.mul(changeFee).div(ONE_HUNDRED_PERCRENTS.sub(changeFee)).mul(refferalFee).div(ONE_HUNDRED_PERCRENTS);ERC20(_toToken).checkedTransfer(_ref,refferalAmount);}functionlend(address_to,ERC20_token,uint256_amount,address_target,bytes_data)publicpayable{uint256prevBalance=_token.balanceOf(this);super.lend(_to,_token,_amount,_target,_data);require(_token.balanceOf(this)>=prevBalance.mul(ONE_HUNDRED_PERCRENTS.add(lendFee)).div(ONE_HUNDRED_PERCRENTS),"lend: tokens must be returned with lend fee");}}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 684
column: 4
content: functionsetLendFee(uint256_lendFee)publiconlyOwner{require(_lendFee<=30000,"setLendFee: fee should be not greater than 3%");lendFee=_lendFee;}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 689
column: 4
content: functionsetChangeFee(uint256_changeFee)publiconlyOwner{require(_changeFee<=30000,"setChangeFee: fee should be not greater than 3%");changeFee=_changeFee;}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 694
column: 4
content: functionsetRefferalFee(uint256_refferalFee)publiconlyOwner{require(_refferalFee<=500000,"setChangeFee: fee should be not greater than 50% of changeFee");refferalFee=_refferalFee;}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: ^

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 154
column: 4
content: usingSafeMathforuint;

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 261
column: 2
content: usingSafeMathforuint256;

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 183
column: 45
content: ERC20[]

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 184
column: 47
content: uint8[]

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 185
column: 47
content: uint256[]

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 186
column: 61
content: ERC20[]

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 186
column: 70
content: uint8[]

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 186
column: 79
content: uint256[]

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 188
column: 70
content: uint256[]_tokenAmounts

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 192
column: 64
content: ERC20[]_tokens

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 204
column: 46
content: uint256[]_weights

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 205
column: 68
content: ERC20[]_tokens

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 205
column: 85
content: uint8[]_decimals

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 205
column: 104
content: uint256[]_balances

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 205
column: 125
content: uint256[]_weights

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 437
column: 14
content: string_name

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 437
column: 28
content: string_symbol

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 457
column: 57
content: bytes_data

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 465
column: 58
content: bytes_data

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 490
column: 18
content: ERC20[]_tokens

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 490
column: 35
content: string_name

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 490
column: 49
content: string_symbol

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 503
column: 70
content: uint256[]_tokenAmounts

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 521
column: 64
content: ERC20[]_tokens

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 539
column: 60
content: uint256[]_tokenAmounts

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 556
column: 79
content: bytes_data

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 573
column: 45
content: ERC20[]_tokens

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 577
column: 47
content: uint256[]_balances

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 584
column: 47
content: uint8[]_decimals

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 591
column: 61
content: ERC20[]_tokens

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 591
column: 78
content: uint8[]_decimals

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 591
column: 97
content: uint256[]_balances

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 607
column: 18
content: ERC20[]_tokens

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 607
column: 35
content: uint256[]_weights

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 607
column: 55
content: string_name

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 607
column: 69
content: string_symbol

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 620
column: 19
content: ERC20[]_tokens

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 620
column: 36
content: uint256[]_weights

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 620
column: 56
content: string_name

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 620
column: 70
content: string_symbol

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 648
column: 79
content: bytes_data

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 656
column: 46
content: uint256[]_weights

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 663
column: 68
content: ERC20[]_tokens

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 663
column: 85
content: uint8[]_decimals

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 663
column: 104
content: uint256[]_balances

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 663
column: 125
content: uint256[]_weights

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 680
column: 18
content: ERC20[]_tokens

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 680
column: 35
content: uint256[]_weights

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 680
column: 55
content: string_name

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 680
column: 69
content: string_symbol

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 716
column: 79
content: bytes_data

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 263
column: 2
content: mapping(address=>uint256)balances;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 265
column: 2
content: uint256totalSupply_;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 603
column: 4
content: uintinLendingMode;

SOLIDITY_VISIBILITY :3
SOLIDITY_SAFEMATH :2
SOLIDITY_OVERPOWERED_ROLE :3
SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_ARRAY_LENGTH_MANIPULATION :1
SOLIDITY_LOCKED_MONEY :2
SOLIDITY_EXTRA_GAS_IN_LOOPS :7
SOLIDITY_ADDRESS_HARDCODED :1
SOLIDITY_UPGRADE_TO_050 :49
SOLIDITY_GAS_LIMIT_IN_LOOPS :7
SOLIDITY_DIV_MUL :1
SOLIDITY_ERC20_APPROVE :1