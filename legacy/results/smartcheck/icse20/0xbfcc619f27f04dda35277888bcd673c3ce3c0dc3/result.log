/unique_chucks/35/0xbfcc619f27f04dda35277888bcd673c3ce3c0dc3.sol
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ERC20_APPROVE
patternId: af782c
severity: 2
line: 199
column: 2
content: functionapprove(address_spender,uint256_value)publicreturns(boolsuccess){allowance[msg.sender][_spender]=_value;returntrue;}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 80
column: 3
content: for(uint256i=0;i<coordinatorAccountCount;i++)if(coordinatorAccountIndex[i]==coordinator){for(uint256j=i;j<coordinatorAccountCount-1;j++)coordinatorAccountIndex[j]=coordinatorAccountIndex[j+1];coordinatorAccountCount--;deletecoordinatorAccountIndex[coordinatorAccountCount];i=coordinatorAccountCount;}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 82
column: 5
content: for(uint256j=i;j<coordinatorAccountCount-1;j++)coordinatorAccountIndex[j]=coordinatorAccountIndex[j+1];

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 94
column: 3
content: for(uint256i=0;i<coordinatorAccountCount;i++)if(coordinatorAccountIndex[i]==msg.sender){found=true;i=coordinatorAccountCount;}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 111
column: 3
content: for(uint256i=0;(!found)&&(i<coordinatorAccountCount);i++)if(coordinatorAccountIndex[i]==msg.sender){found=true;i=coordinatorAccountCount;}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 119
column: 3
content: for(i=0;i<coordinatorAccountCount;i++)if(coordinatorAgreeForEmission[coordinatorAccountIndex[i]]>=value_)agree++;

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 125
column: 3
content: for(i=0;i<coordinatorAccountCount;i++)if(coordinatorAgreeForEmission[coordinatorAccountIndex[i]]>=value_)coordinatorAgreeForEmission[coordinatorAccountIndex[i]]-=value_;

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 16
column: 1
content: contractMetalExchangeToken{stringpublicstandard='Token 0.1';stringpublicname;stringpublicsymbol;addresspublicowner;uint8publicdecimals;uint256publictotalSupply;boolpublicnameLocked=false;boolpublicsymbolLocked=false;boolpublicownerLocked=false;uint256publicunholdTime;mapping(address=>uint256)publicbalanceOf;mapping(address=>uint256)publicholdBalanceOf;mapping(address=>mapping(address=>uint256))publicallowance;mapping(address=>uint256)publiccoordinatorAgreeForEmission;mapping(uint256=>address)publiccoordinatorAccountIndex;uint256publiccoordinatorAccountCount;uint256publicminCoordinatorCount;eventTransfer(addressindexedfrom,addressindexedto,uint256value);eventEmission(uint256value);eventHold(addressindexedfrom,uint256value);eventUnhold(addressindexedfrom,uint256value);eventBurn(addressindexedfrom,uint256value);modifiercanUnhold(){if(block.timestamp>=unholdTime)_;}modifiercanHold(){if(block.timestamp<unholdTime)_;}functionMetalExchangeToken()public{owner=msg.sender;totalSupply=40000000000;balanceOf[owner]=totalSupply;name='MetalExchangeToken';symbol='MET';decimals=4;unholdTime=0;coordinatorAccountCount=0;minCoordinatorCount=2;}functionaddCoordinator(addressnewCoordinator)public{if(msg.sender!=owner)revert();coordinatorAccountIndex[coordinatorAccountCount]=newCoordinator;coordinatorAgreeForEmission[newCoordinator]=0;coordinatorAccountCount++;}functionremoveCoordinator(addresscoordinator)public{if(msg.sender!=owner)revert();deletecoordinatorAgreeForEmission[coordinator];for(uint256i=0;i<coordinatorAccountCount;i++)if(coordinatorAccountIndex[i]==coordinator){for(uint256j=i;j<coordinatorAccountCount-1;j++)coordinatorAccountIndex[j]=coordinatorAccountIndex[j+1];coordinatorAccountCount--;deletecoordinatorAccountIndex[coordinatorAccountCount];i=coordinatorAccountCount;}}functioncoordinatorSetAgreeForEmission(uint256value_)public{boolfound=false;for(uint256i=0;i<coordinatorAccountCount;i++)if(coordinatorAccountIndex[i]==msg.sender){found=true;i=coordinatorAccountCount;}if(!found)revert();coordinatorAgreeForEmission[msg.sender]=value_;emit(value_);}functionemit(uint256value_)private{if(value_<=0)revert();boolfound=false;if(msg.sender==owner)found=true;for(uint256i=0;(!found)&&(i<coordinatorAccountCount);i++)if(coordinatorAccountIndex[i]==msg.sender){found=true;i=coordinatorAccountCount;}if(!found)revert();uint256agree=0;for(i=0;i<coordinatorAccountCount;i++)if(coordinatorAgreeForEmission[coordinatorAccountIndex[i]]>=value_)agree++;if(agree<minCoordinatorCount)revert();for(i=0;i<coordinatorAccountCount;i++)if(coordinatorAgreeForEmission[coordinatorAccountIndex[i]]>=value_)coordinatorAgreeForEmission[coordinatorAccountIndex[i]]-=value_;balanceOf[owner]+=value_;totalSupply+=value_;Emission(value_);}functionlockName()public{if(msg.sender!=owner)revert();if(nameLocked)revert();nameLocked=true;}functionchangeName(stringnew_name)public{if(msg.sender!=owner)revert();if(nameLocked)revert();name=new_name;}functionlockSymbol()public{if(msg.sender!=owner)revert();if(symbolLocked)revert();symbolLocked=true;}functionchangeSymbol(stringnew_symbol)public{if(msg.sender!=owner)revert();if(symbolLocked)revert();symbol=new_symbol;}functionlockOwner()public{if(msg.sender!=owner)revert();if(ownerLocked)revert();ownerLocked=true;}functionchangeOwner(addressnew_owner)public{if(msg.sender!=owner)revert();if(ownerLocked)revert();owner=new_owner;}functionhold(uint256_value)canHoldpayablepublic{if(balanceOf[msg.sender]<_value)revert();if(holdBalanceOf[msg.sender]+_value<holdBalanceOf[msg.sender])revert();balanceOf[msg.sender]-=_value;holdBalanceOf[msg.sender]+=_value;Hold(msg.sender,_value);}functionunhold(uint256_value)canUnholdpayablepublic{if(holdBalanceOf[msg.sender]<_value)revert();if(balanceOf[msg.sender]+_value<balanceOf[msg.sender])revert();holdBalanceOf[msg.sender]-=_value;balanceOf[msg.sender]+=_value;Unhold(msg.sender,_value);}functiontransfer(address_to,uint256_value)payablepublic{if(_to==0x0)revert();if(balanceOf[msg.sender]<_value)revert();if(balanceOf[_to]+_value<balanceOf[_to])revert();balanceOf[msg.sender]-=_value;balanceOf[_to]+=_value;Transfer(msg.sender,_to,_value);}functionapprove(address_spender,uint256_value)publicreturns(boolsuccess){allowance[msg.sender][_spender]=_value;returntrue;}functionapproveAndCall(address_spender,uint256_value,bytes_extraData)publicreturns(boolsuccess){tokenRecipientspender=tokenRecipient(_spender);if(approve(_spender,_value)){spender.receiveApproval(msg.sender,_value,this,_extraData);returntrue;}}functiontransferFrom(address_from,address_to,uint256_value)publicreturns(boolsuccess){if(_to==0x0)revert();if(balanceOf[_from]<_value)revert();if(balanceOf[_to]+_value<balanceOf[_to])revert();if(_value>allowance[_from][msg.sender])revert();balanceOf[_from]-=_value;balanceOf[_to]+=_value;allowance[_from][msg.sender]-=_value;Transfer(_from,_to,_value);returntrue;}functionburn(uint256_value)publicreturns(boolsuccess){if(balanceOf[msg.sender]<_value)revert();balanceOf[msg.sender]-=_value;totalSupply-=_value;Burn(msg.sender,_value);returntrue;}functionburnFrom(address_from,uint256_value)publicreturns(boolsuccess){if(balanceOf[_from]<_value)revert();if(_value>allowance[_from][msg.sender])revert();balanceOf[_from]-=_value;totalSupply-=_value;Burn(_from,_value);returntrue;}}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: ^

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 70
column: 3
content: if(msg.sender!=owner)revert();

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 78
column: 3
content: if(msg.sender!=owner)revert();

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 99
column: 3
content: if(!found)revert();

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 107
column: 3
content: if(value_<=0)revert();

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 116
column: 3
content: if(!found)revert();

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 123
column: 3
content: if(agree<minCoordinatorCount)revert();

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 135
column: 3
content: if(msg.sender!=owner)revert();

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 136
column: 3
content: if(nameLocked)revert();

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 141
column: 3
content: if(msg.sender!=owner)revert();

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 142
column: 3
content: if(nameLocked)revert();

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 147
column: 3
content: if(msg.sender!=owner)revert();

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 148
column: 3
content: if(symbolLocked)revert();

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 153
column: 3
content: if(msg.sender!=owner)revert();

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 154
column: 3
content: if(symbolLocked)revert();

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 159
column: 3
content: if(msg.sender!=owner)revert();

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 160
column: 3
content: if(ownerLocked)revert();

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 165
column: 3
content: if(msg.sender!=owner)revert();

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 166
column: 3
content: if(ownerLocked)revert();

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 172
column: 3
content: if(balanceOf[msg.sender]<_value)revert();

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 173
column: 3
content: if(holdBalanceOf[msg.sender]+_value<holdBalanceOf[msg.sender])revert();

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 181
column: 3
content: if(holdBalanceOf[msg.sender]<_value)revert();

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 182
column: 3
content: if(balanceOf[msg.sender]+_value<balanceOf[msg.sender])revert();

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 190
column: 3
content: if(_to==0x0)revert();

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 191
column: 3
content: if(balanceOf[msg.sender]<_value)revert();

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 192
column: 3
content: if(balanceOf[_to]+_value<balanceOf[_to])revert();

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 219
column: 3
content: if(_to==0x0)revert();

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 220
column: 3
content: if(balanceOf[_from]<_value)revert();

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 221
column: 3
content: if(balanceOf[_to]+_value<balanceOf[_to])revert();

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 222
column: 3
content: if(_value>allowance[_from][msg.sender])revert();

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 231
column: 3
content: if(balanceOf[msg.sender]<_value)revert();

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 239
column: 3
content: if(balanceOf[_from]<_value)revert();

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 240
column: 3
content: if(_value>allowance[_from][msg.sender])revert();

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 2
column: 99
content: bytes_extraData

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 140
column: 22
content: stringnew_name

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 152
column: 24
content: stringnew_symbol

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 207
column: 60
content: bytes_extraData

SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_REVERT_REQUIRE :32
SOLIDITY_LOCKED_MONEY :1
SOLIDITY_EXTRA_GAS_IN_LOOPS :6
SOLIDITY_UPGRADE_TO_050 :4
SOLIDITY_ERC20_APPROVE :1