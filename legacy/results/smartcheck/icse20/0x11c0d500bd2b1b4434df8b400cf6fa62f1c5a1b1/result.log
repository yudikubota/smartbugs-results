/unique_chucks/24/0x11c0d500bd2b1b4434df8b400cf6fa62f1c5a1b1.sol
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 5
column: 0
content: contractECF{usingSafeMathforuint256;stringpublicname;stringpublicsymbol;uint8publicdecimals;uint256publictotalSupply;addresspublicowner;mapping(address=>uint256)publicbalanceOf;mapping(address=>mapping(address=>uint256))publicallowance;mapping(address=>uint256)publicfreezeOf;eventTransfer(addressindexedfrom,addressindexedto,uint256value);eventBurn(addressindexedfrom,uint256value);eventApproval(addressindexedtokenOwner,addressindexedspender,uinttokens);eventFreeze(addressindexedfrom,uint256value);eventUnfreeze(addressindexedfrom,uint256value);constructor(uint256initialSupply,stringtokenName,stringtokenSymbol,uint8uintDecimal)public{decimals=uintDecimal;totalSupply=initialSupply*10**uint256(uintDecimal);balanceOf[msg.sender]=totalSupply;name=tokenName;symbol=tokenSymbol;owner=msg.sender;}modifieronlyOwner{require(msg.sender==owner);_;}functiontransferOwnership(addressnewOwner)onlyOwnerpublic{require(newOwner!=address(0));owner=newOwner;}function_transfer(address_from,address_to,uint_value)internal{require(_to!=0x0);require(balanceOf[_from]>=_value);require(balanceOf[_to]+_value>balanceOf[_to]);uintpreviousBalances=balanceOf[_from]+balanceOf[_to];balanceOf[_from]=balanceOf[_from].sub(_value);balanceOf[_to]=balanceOf[_to].add(_value);emitTransfer(_from,_to,_value);assert(balanceOf[_from]+balanceOf[_to]==previousBalances);}functiontransfer(address_to,uint256_value)public{_transfer(msg.sender,_to,_value);}functiontransferFrom(address_from,address_to,uint256_value)publicreturns(boolsuccess){require(_value<=allowance[_from][msg.sender]);allowance[_from][msg.sender]=allowance[_from][msg.sender].sub(_value);_transfer(_from,_to,_value);returntrue;}functionapprove(address_spender,uint256_value)publicreturns(boolsuccess){allowance[msg.sender][_spender]=_value;emitApproval(msg.sender,_spender,_value);returntrue;}functionapproveAndCall(address_spender,uint256_value,bytes_extraData)publicreturns(boolsuccess){tokenRecipientspender=tokenRecipient(_spender);if(approve(_spender,_value)){spender.receiveApproval(msg.sender,_value,this,_extraData);returntrue;}}functionburn(uint256_value)publicreturns(boolsuccess){require(balanceOf[msg.sender]>=_value);balanceOf[msg.sender]=balanceOf[msg.sender].sub(_value);totalSupply=totalSupply.sub(_value);emitBurn(msg.sender,_value);returntrue;}functionburnFrom(address_from,uint256_value)publicreturns(boolsuccess){require(balanceOf[_from]>=_value);require(_value<=allowance[_from][msg.sender]);balanceOf[_from]=balanceOf[_from].sub(_value);allowance[_from][msg.sender]=allowance[_from][msg.sender].sub(_value);totalSupply=totalSupply.sub(_value);emitBurn(_from,_value);returntrue;}functionmintToken(addresstarget,uint256mintedAmount)publiconlyOwner{balanceOf[target]=balanceOf[target].add(mintedAmount);totalSupply=totalSupply.add(mintedAmount);emitTransfer(0,owner,mintedAmount);emitTransfer(owner,target,mintedAmount);}functionfreeze(addresstarget,uint256_value)onlyOwnerpublicreturns(boolsuccess){if(balanceOf[target]<_value)revert();if(_value<=0)revert();balanceOf[target]=balanceOf[target].sub(_value);freezeOf[target]=freezeOf[target].add(_value);emitFreeze(target,_value);returntrue;}functionunfreeze(addresstarget,uint256_value)onlyOwnerpublicreturns(boolsuccess){if(freezeOf[target]<_value)revert();if(_value<=0)revert();freezeOf[target]=freezeOf[target].sub(_value);balanceOf[target]=balanceOf[target].add(_value);emitUnfreeze(target,_value);returntrue;}function()payablepublic{}}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: ^

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 173
column: 8
content: if(balanceOf[target]<_value)revert();

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 174
column: 2
content: if(_value<=0)revert();

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 182
column: 8
content: if(freezeOf[target]<_value)revert();

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 183
column: 2
content: if(_value<=0)revert();

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 6
column: 1
content: usingSafeMathforuint256;

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 91h3sa
severity: 1
line: 191
column: 20
content: public

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 38
column: 39
content: stringtokenName

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 38
column: 57
content: stringtokenSymbol

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 126
column: 62
content: bytes_extraData

SOLIDITY_SAFEMATH :1
SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_REVERT_REQUIRE :4
SOLIDITY_LOCKED_MONEY :1
SOLIDITY_UPGRADE_TO_050 :4