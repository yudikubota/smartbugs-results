{
  "contract": "0xca1699f27e47cc577ed24a7cdc54676350e08510",
  "tool": "smartcheck",
  "start": 1563508142.1479113,
  "end": 1563508152.6357062,
  "duration": 10.487794876098633,
  "analysis": [
    {
      "name": "SOLIDITY_ADDRESS_HARDCODED",
      "patternId": "adc165",
      "severity": 1,
      "line": 59,
      "column": 37,
      "content": "0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE"
    },
    {
      "name": "SOLIDITY_ADDRESS_HARDCODED",
      "patternId": "b140cd",
      "severity": 1,
      "line": 438,
      "column": 34,
      "content": "0x3F"
    },
    {
      "name": "SOLIDITY_ADDRESS_HARDCODED",
      "patternId": "b140cd",
      "severity": 1,
      "line": 516,
      "column": 35,
      "content": "0xf7"
    },
    {
      "name": "SOLIDITY_ADDRESS_HARDCODED",
      "patternId": "b140cd",
      "severity": 1,
      "line": 517,
      "column": 35,
      "content": "0xf6"
    },
    {
      "name": "SOLIDITY_ADDRESS_HARDCODED",
      "patternId": "b140cd",
      "severity": 1,
      "line": 521,
      "column": 30,
      "content": "0x7f"
    },
    {
      "name": "SOLIDITY_ADDRESS_HARDCODED",
      "patternId": "b140cd",
      "severity": 1,
      "line": 525,
      "column": 39,
      "content": "0x80"
    },
    {
      "name": "SOLIDITY_ADDRESS_HARDCODED",
      "patternId": "b140cd",
      "severity": 1,
      "line": 525,
      "column": 65,
      "content": "0xb7"
    },
    {
      "name": "SOLIDITY_ADDRESS_HARDCODED",
      "patternId": "b140cd",
      "severity": 1,
      "line": 526,
      "column": 39,
      "content": "0x7f"
    },
    {
      "name": "SOLIDITY_ADDRESS_HARDCODED",
      "patternId": "b140cd",
      "severity": 1,
      "line": 530,
      "column": 44,
      "content": "0xb9"
    },
    {
      "name": "SOLIDITY_ADDRESS_HARDCODED",
      "patternId": "b140cd",
      "severity": 1,
      "line": 534,
      "column": 38,
      "content": "0xf9"
    },
    {
      "name": "SOLIDITY_ADDRESS_HARDCODED",
      "patternId": "b140cd",
      "severity": 1,
      "line": 538,
      "column": 31,
      "content": "0x1"
    },
    {
      "name": "SOLIDITY_ADDRESS_HARDCODED",
      "patternId": "b140cd",
      "severity": 1,
      "line": 542,
      "column": 32,
      "content": "0x7f"
    },
    {
      "name": "SOLIDITY_ADDRESS_HARDCODED",
      "patternId": "b140cd",
      "severity": 1,
      "line": 546,
      "column": 41,
      "content": "0x80"
    },
    {
      "name": "SOLIDITY_ADDRESS_HARDCODED",
      "patternId": "b140cd",
      "severity": 1,
      "line": 546,
      "column": 69,
      "content": "0xb7"
    },
    {
      "name": "SOLIDITY_ADDRESS_HARDCODED",
      "patternId": "b140cd",
      "severity": 1,
      "line": 547,
      "column": 41,
      "content": "0x7f"
    },
    {
      "name": "SOLIDITY_ADDRESS_HARDCODED",
      "patternId": "b140cd",
      "severity": 1,
      "line": 551,
      "column": 36,
      "content": "0xb9"
    },
    {
      "name": "SOLIDITY_ADDRESS_HARDCODED",
      "patternId": "b140cd",
      "severity": 1,
      "line": 555,
      "column": 39,
      "content": "0xf8"
    },
    {
      "name": "SOLIDITY_ADDRESS_HARDCODED",
      "patternId": "b140cd",
      "severity": 1,
      "line": 559,
      "column": 39,
      "content": "0xf8"
    },
    {
      "name": "SOLIDITY_ADDRESS_HARDCODED",
      "patternId": "b140cd",
      "severity": 1,
      "line": 563,
      "column": 38,
      "content": "0x94"
    },
    {
      "name": "SOLIDITY_DEPRECATED_CONSTRUCTIONS",
      "patternId": "187b5a",
      "severity": 1,
      "line": 469,
      "column": 28,
      "content": "sha3"
    },
    {
      "name": "SOLIDITY_DEPRECATED_CONSTRUCTIONS",
      "patternId": "187b5a",
      "severity": 1,
      "line": 487,
      "column": 31,
      "content": "sha3"
    },
    {
      "name": "SOLIDITY_DEPRECATED_CONSTRUCTIONS",
      "patternId": "187b5a",
      "severity": 1,
      "line": 507,
      "column": 25,
      "content": "sha3"
    },
    {
      "name": "SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN",
      "patternId": "58bdd3",
      "severity": 1,
      "line": 442,
      "column": 4,
      "content": "functionverifyMerkleProof(uintseedHash,uintoffset)pureprivatereturns(bytes32blockHash,bytes32uncleHash){uintscratchBuf1;assembly{scratchBuf1:=mload(0x40)}uintuncleHeaderLength;uintblobLength;uintshift;uinthashSlot;for(;;offset+=blobLength){assembly{blobLength:=and(calldataload(sub(offset,30)),0xffff)}if(blobLength==0){break;}assembly{shift:=and(calldataload(sub(offset,28)),0xffff)}require(shift+32<=blobLength,\"Shift bounds check.\");offset+=4;assembly{hashSlot:=calldataload(add(offset,shift))}require(hashSlot==0,\"Non-empty hash slot.\");assembly{calldatacopy(scratchBuf1,offset,blobLength)mstore(add(scratchBuf1,shift),seedHash)seedHash:=sha3(scratchBuf1,blobLength)uncleHeaderLength:=blobLength}}uncleHash=bytes32(seedHash);uintscratchBuf2=scratchBuf1+uncleHeaderLength;uintunclesLength;assembly{unclesLength:=and(calldataload(sub(offset,28)),0xffff)}uintunclesShift;assembly{unclesShift:=and(calldataload(sub(offset,26)),0xffff)}require(unclesShift+uncleHeaderLength<=unclesLength,\"Shift bounds check.\");offset+=6;assembly{calldatacopy(scratchBuf2,offset,unclesLength)}memcpy(scratchBuf2+unclesShift,scratchBuf1,uncleHeaderLength);assembly{seedHash:=sha3(scratchBuf2,unclesLength)}offset+=unclesLength;assembly{blobLength:=and(calldataload(sub(offset,30)),0xffff)shift:=and(calldataload(sub(offset,28)),0xffff)}require(shift+32<=blobLength,\"Shift bounds check.\");offset+=4;assembly{hashSlot:=calldataload(add(offset,shift))}require(hashSlot==0,\"Non-empty hash slot.\");assembly{calldatacopy(scratchBuf1,offset,blobLength)mstore(add(scratchBuf1,shift),seedHash)blockHash:=sha3(scratchBuf1,blobLength)}}"
    },
    {
      "name": "SOLIDITY_OVERPOWERED_ROLE",
      "patternId": "j83hf7",
      "severity": 2,
      "line": 144,
      "column": 4,
      "content": "functionsetSecretSigner(addressnewSecretSigner)externalonlyOwner{secretSigner=newSecretSigner;}"
    },
    {
      "name": "SOLIDITY_OVERPOWERED_ROLE",
      "patternId": "j83hf7",
      "severity": 2,
      "line": 149,
      "column": 4,
      "content": "functionsetCroupier(addressnewCroupier)externalonlyOwner{croupier=newCroupier;}"
    },
    {
      "name": "SOLIDITY_OVERPOWERED_ROLE",
      "patternId": "j83hf7",
      "severity": 2,
      "line": 154,
      "column": 4,
      "content": "functionsetMaxProfit(uint_maxProfit)publiconlyOwner{require(_maxProfit<MAX_AMOUNT,\"maxProfit should be a sane number.\");maxProfit=_maxProfit;}"
    },
    {
      "name": "SOLIDITY_PRAGMAS_VERSION",
      "patternId": "23fc32",
      "severity": 1,
      "line": 1,
      "column": 16,
      "content": "^"
    },
    {
      "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
      "patternId": "5616b2",
      "severity": 1,
      "line": 63,
      "column": 12,
      "content": "private"
    },
    {
      "name": "SOLIDITY_SHOULD_NOT_BE_PURE",
      "patternId": "11314f",
      "severity": 1,
      "line": 442,
      "column": 4,
      "content": "functionverifyMerkleProof(uintseedHash,uintoffset)pureprivatereturns(bytes32blockHash,bytes32uncleHash){uintscratchBuf1;assembly{scratchBuf1:=mload(0x40)}uintuncleHeaderLength;uintblobLength;uintshift;uinthashSlot;for(;;offset+=blobLength){assembly{blobLength:=and(calldataload(sub(offset,30)),0xffff)}if(blobLength==0){break;}assembly{shift:=and(calldataload(sub(offset,28)),0xffff)}require(shift+32<=blobLength,\"Shift bounds check.\");offset+=4;assembly{hashSlot:=calldataload(add(offset,shift))}require(hashSlot==0,\"Non-empty hash slot.\");assembly{calldatacopy(scratchBuf1,offset,blobLength)mstore(add(scratchBuf1,shift),seedHash)seedHash:=sha3(scratchBuf1,blobLength)uncleHeaderLength:=blobLength}}uncleHash=bytes32(seedHash);uintscratchBuf2=scratchBuf1+uncleHeaderLength;uintunclesLength;assembly{unclesLength:=and(calldataload(sub(offset,28)),0xffff)}uintunclesShift;assembly{unclesShift:=and(calldataload(sub(offset,26)),0xffff)}require(unclesShift+uncleHeaderLength<=unclesLength,\"Shift bounds check.\");offset+=6;assembly{calldatacopy(scratchBuf2,offset,unclesLength)}memcpy(scratchBuf2+unclesShift,scratchBuf1,uncleHeaderLength);assembly{seedHash:=sha3(scratchBuf2,unclesLength)}offset+=unclesLength;assembly{blobLength:=and(calldataload(sub(offset,30)),0xffff)shift:=and(calldataload(sub(offset,28)),0xffff)}require(shift+32<=blobLength,\"Shift bounds check.\");offset+=4;assembly{hashSlot:=calldataload(add(offset,shift))}require(hashSlot==0,\"Non-empty hash slot.\");assembly{calldatacopy(scratchBuf1,offset,blobLength)mstore(add(scratchBuf1,shift),seedHash)blockHash:=sha3(scratchBuf1,blobLength)}}"
    },
    {
      "name": "SOLIDITY_SHOULD_NOT_BE_PURE",
      "patternId": "11314f",
      "severity": 1,
      "line": 570,
      "column": 4,
      "content": "functionmemcpy(uintdest,uintsrc,uintlen)pureprivate{for(;len>=32;len-=32){assembly{mstore(dest,mload(src))}dest+=32;src+=32;}uintmask=256**(32-len)-1;assembly{letsrcpart:=and(mload(src),not(mask))letdestpart:=and(mload(dest),mask)mstore(dest,or(destpart,srcpart))}}"
    },
    {
      "name": "SOLIDITY_SHOULD_NOT_BE_VIEW",
      "patternId": "189abf",
      "severity": 1,
      "line": 513,
      "column": 4,
      "content": "functionrequireCorrectReceipt(uintoffset)viewprivate{uintleafHeaderByte;assembly{leafHeaderByte:=byte(0,calldataload(offset))}require(leafHeaderByte>=0xf7,\"Receipt leaf longer than 55 bytes.\");offset+=leafHeaderByte-0xf6;uintpathHeaderByte;assembly{pathHeaderByte:=byte(0,calldataload(offset))}if(pathHeaderByte<=0x7f){offset+=1;}else{require(pathHeaderByte>=0x80&&pathHeaderByte<=0xb7,\"Path is an RLP string.\");offset+=pathHeaderByte-0x7f;}uintreceiptStringHeaderByte;assembly{receiptStringHeaderByte:=byte(0,calldataload(offset))}require(receiptStringHeaderByte==0xb9,\"Receipt string is always at least 256 bytes long, but less than 64k.\");offset+=3;uintreceiptHeaderByte;assembly{receiptHeaderByte:=byte(0,calldataload(offset))}require(receiptHeaderByte==0xf9,\"Receipt is always at least 256 bytes long, but less than 64k.\");offset+=3;uintstatusByte;assembly{statusByte:=byte(0,calldataload(offset))}require(statusByte==0x1,\"Status should be success.\");offset+=1;uintcumGasHeaderByte;assembly{cumGasHeaderByte:=byte(0,calldataload(offset))}if(cumGasHeaderByte<=0x7f){offset+=1;}else{require(cumGasHeaderByte>=0x80&&cumGasHeaderByte<=0xb7,\"Cumulative gas is an RLP string.\");offset+=cumGasHeaderByte-0x7f;}uintbloomHeaderByte;assembly{bloomHeaderByte:=byte(0,calldataload(offset))}require(bloomHeaderByte==0xb9,\"Bloom filter is always 256 bytes long.\");offset+=256+3;uintlogsListHeaderByte;assembly{logsListHeaderByte:=byte(0,calldataload(offset))}require(logsListHeaderByte==0xf8,\"Logs list is less than 256 bytes long.\");offset+=2;uintlogEntryHeaderByte;assembly{logEntryHeaderByte:=byte(0,calldataload(offset))}require(logEntryHeaderByte==0xf8,\"Log entry is less than 256 bytes long.\");offset+=2;uintaddressHeaderByte;assembly{addressHeaderByte:=byte(0,calldataload(offset))}require(addressHeaderByte==0x94,\"Address is 20 bytes long.\");uintlogAddress;assembly{logAddress:=and(calldataload(sub(offset,11)),0xffffffffffffffffffffffffffffffffffffffff)}require(logAddress==uint(address(this)));}"
    },
    {
      "name": "SOLIDITY_SHOULD_RETURN_STRUCT",
      "patternId": "7d54ca",
      "severity": 1,
      "line": 410,
      "column": 93,
      "content": "(uintwinAmount,uintjackpotFee)"
    },
    {
      "name": "SOLIDITY_SHOULD_RETURN_STRUCT",
      "patternId": "7d54ca",
      "severity": 1,
      "line": 442,
      "column": 80,
      "content": "(bytes32blockHash,bytes32uncleHash)"
    },
    {
      "name": "SOLIDITY_UNCHECKED_CALL",
      "patternId": "f39eed",
      "severity": 3,
      "line": 170,
      "column": 8,
      "content": "sendFunds(beneficiary,withdrawAmount,withdrawAmount)"
    },
    {
      "name": "SOLIDITY_UNCHECKED_CALL",
      "patternId": "f39eed",
      "severity": 3,
      "line": 377,
      "column": 8,
      "content": "sendFunds(gambler,diceWin+jackpotWin==0?1wei:diceWin+jackpotWin,diceWin)"
    },
    {
      "name": "SOLIDITY_UNCHECKED_CALL",
      "patternId": "f39eed",
      "severity": 3,
      "line": 406,
      "column": 8,
      "content": "sendFunds(bet.gambler,amount,amount)"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "91h3sa",
      "severity": 1,
      "line": 140,
      "column": 16,
      "content": "public"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 444,
      "column": 27,
      "content": "assembly{scratchBuf1:=mload(0x40)}"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 453,
      "column": 12,
      "content": "assembly{blobLength:=and(calldataload(sub(offset,30)),0xffff)}"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 459,
      "column": 12,
      "content": "assembly{shift:=and(calldataload(sub(offset,28)),0xffff)}"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 463,
      "column": 12,
      "content": "assembly{hashSlot:=calldataload(add(offset,shift))}"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 466,
      "column": 12,
      "content": "assembly{calldatacopy(scratchBuf1,offset,blobLength)mstore(add(scratchBuf1,shift),seedHash)seedHash:=sha3(scratchBuf1,blobLength)uncleHeaderLength:=blobLength}"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 479,
      "column": 27,
      "content": "assembly{unclesLength:=and(calldataload(sub(offset,28)),0xffff)}"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 480,
      "column": 27,
      "content": "assembly{unclesShift:=and(calldataload(sub(offset,26)),0xffff)}"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 484,
      "column": 8,
      "content": "assembly{calldatacopy(scratchBuf2,offset,unclesLength)}"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 487,
      "column": 8,
      "content": "assembly{seedHash:=sha3(scratchBuf2,unclesLength)}"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 492,
      "column": 8,
      "content": "assembly{blobLength:=and(calldataload(sub(offset,30)),0xffff)shift:=and(calldataload(sub(offset,28)),0xffff)}"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 499,
      "column": 8,
      "content": "assembly{hashSlot:=calldataload(add(offset,shift))}"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 502,
      "column": 8,
      "content": "assembly{calldatacopy(scratchBuf1,offset,blobLength)mstore(add(scratchBuf1,shift),seedHash)blockHash:=sha3(scratchBuf1,blobLength)}"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 514,
      "column": 29,
      "content": "assembly{leafHeaderByte:=byte(0,calldataload(offset))}"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 519,
      "column": 29,
      "content": "assembly{pathHeaderByte:=byte(0,calldataload(offset))}"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 529,
      "column": 38,
      "content": "assembly{receiptStringHeaderByte:=byte(0,calldataload(offset))}"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 533,
      "column": 32,
      "content": "assembly{receiptHeaderByte:=byte(0,calldataload(offset))}"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 537,
      "column": 25,
      "content": "assembly{statusByte:=byte(0,calldataload(offset))}"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 541,
      "column": 31,
      "content": "assembly{cumGasHeaderByte:=byte(0,calldataload(offset))}"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 550,
      "column": 30,
      "content": "assembly{bloomHeaderByte:=byte(0,calldataload(offset))}"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 554,
      "column": 33,
      "content": "assembly{logsListHeaderByte:=byte(0,calldataload(offset))}"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 558,
      "column": 33,
      "content": "assembly{logEntryHeaderByte:=byte(0,calldataload(offset))}"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 562,
      "column": 32,
      "content": "assembly{addressHeaderByte:=byte(0,calldataload(offset))}"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 565,
      "column": 25,
      "content": "assembly{logAddress:=and(calldataload(sub(offset,11)),0xffffffffffffffffffffffffffffffffffffffff)}"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 573,
      "column": 12,
      "content": "assembly{mstore(dest,mload(src))}"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 579,
      "column": 8,
      "content": "assembly{letsrcpart:=and(mload(src),not(mask))letdestpart:=and(mload(dest),mask)mstore(dest,or(destpart,srcpart))}"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 8,
      "column": 4,
      "content": "uintconstantHOUSE_EDGE_PERCENT=1;"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 9,
      "column": 4,
      "content": "uintconstantHOUSE_EDGE_MINIMUM_AMOUNT=0.0003ether;"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 13,
      "column": 4,
      "content": "uintconstantMIN_JACKPOT_BET=0.1ether;"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 16,
      "column": 4,
      "content": "uintconstantJACKPOT_MODULO=1000;"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 17,
      "column": 4,
      "content": "uintconstantJACKPOT_FEE=0.001ether;"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 20,
      "column": 4,
      "content": "uintconstantMIN_BET=0.01ether;"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 21,
      "column": 4,
      "content": "uintconstantMAX_AMOUNT=300000ether;"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 32,
      "column": 4,
      "content": "uintconstantMAX_MODULO=100;"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 44,
      "column": 4,
      "content": "uintconstantMAX_MASK_MODULO=40;"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 47,
      "column": 4,
      "content": "uintconstantMAX_BET_MASK=2**MAX_MASK_MODULO;"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 55,
      "column": 4,
      "content": "uintconstantBET_EXPIRATION_BLOCKS=250;"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 59,
      "column": 4,
      "content": "addressconstantDUMMY_ADDRESS=0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE;"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 96,
      "column": 4,
      "content": "mapping(uint=>Bet)bets;"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 436,
      "column": 4,
      "content": "uintconstantPOPCNT_MULT=0x0000000000002000000000100000000008000000000400000000020000000001;"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 437,
      "column": 4,
      "content": "uintconstantPOPCNT_MASK=0x0001041041041041041041041041041041041041041041041041041041041041;"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 438,
      "column": 4,
      "content": "uintconstantPOPCNT_MODULO=0x3F;"
    }
  ]
}