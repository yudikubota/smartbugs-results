/unique_chucks/8/0xf5c7231632aa9b344093d82deb864fa1c00b8bde.sol
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 131
column: 4
content: functionexecute(address_target,bytesmemory_data,uint_src,uint_session)publicpayablenoteauthlogicAuth(_target)returns(bytesmemoryresponse){emitLogExecute(_target,_src,_session);assembly{letsucceeded:=delegatecall(sub(gas,5000),_target,add(_data,0x20),mload(_data),0,0)letsize:=returndatasizeresponse:=mload(0x40)mstore(0x40,add(response,and(add(add(size,0x20),0x1f),not(0x1f))))mstore(response,size)returndatacopy(add(response,0x20),0,size)switchiszero(succeeded)case1{revert(add(response,0x20),size)}}}

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 110
column: 0
content: contractUserWalletisUserAuth,UserNote{eventLogExecute(addresstarget,uintsrcNum,uintsessionNum);constructor()public{registry=msg.sender;owner=msg.sender;}function()externalpayable{}functionexecute(address_target,bytesmemory_data,uint_src,uint_session)publicpayablenoteauthlogicAuth(_target)returns(bytesmemoryresponse){emitLogExecute(_target,_src,_session);assembly{letsucceeded:=delegatecall(sub(gas,5000),_target,add(_data,0x20),mload(_data),0,0)letsize:=returndatasizeresponse:=mload(0x40)mstore(0x40,add(response,and(add(add(size,0x20),0x1f),not(0x1f))))mstore(response,size)returndatacopy(add(response,0x20),0,size)switchiszero(succeeded)case1{revert(add(response,0x20),size)}}}}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: ^

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 90
column: 8
content: assembly{foo:=calldataload(4)bar:=calldataload(36)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 151
column: 8
content: assembly{letsucceeded:=delegatecall(sub(gas,5000),_target,add(_data,0x20),mload(_data),0,0)letsize:=returndatasizeresponse:=mload(0x40)mstore(0x40,add(response,and(add(add(size,0x20),0x1f),not(0x1f))))mstore(response,size)returndatacopy(add(response,0x20),0,size)switchiszero(succeeded)case1{revert(add(response,0x20),size)}}

SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_LOCKED_MONEY :1
SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN :1
SOLIDITY_USING_INLINE_ASSEMBLY :2