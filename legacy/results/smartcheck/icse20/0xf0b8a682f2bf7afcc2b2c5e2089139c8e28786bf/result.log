/unique_chucks/31/0xf0b8a682f2bf7afcc2b2c5e2089139c8e28786bf.sol
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 742
column: 4
content: owner=address(0)

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 903
column: 4
content: addressaffiliate=address(0)

ruleId: SOLIDITY_DIV_MUL
patternId: 09hhh1
severity: 2
line: 684
column: 24
content: _purchasedTokenAmount.div(1000000).mul(deals[dealIndex].rewardRatePpm)

ruleId: SOLIDITY_DIV_MUL
patternId: 09hhh1
severity: 2
line: 1030
column: 10
content: ((_value+_dec-1)/_dec)*_dec

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 329
column: 4
content: for(uinti=0;i<dealsCount;i++){if(deals[i].dealId==_dealId){returni;}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 558
column: 4
content: for(uinti=0;i<dealsCount;i++){if(canBeCancelledByMerchant(i)){cancelDealByMerchant(i);emitDealCancelled(deals[i].dealId,deals[i].daysOfCancellation,msg.sender);}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 920
column: 4
content: for(uint256i=0;i<stages.length;i++){_times[i]=stages[i].time;_rates[i]=stages[i].rate;_minInvs[i]=stages[i].rate;_maxInvs[i]=stages[i].rate;}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 938
column: 4
content: for(uint256i=0;i<_timesAndRates.length/4;i++){require(uint64(_timesAndRates[(i*4)+3])==0||uint64(_timesAndRates[(i*4)+2])<=uint64(_timesAndRates[(i*4)+3]),"Maximum should be higher than minimum, or 0");stages.push(Stage(uint32(_timesAndRates[i*4]),uint64(_timesAndRates[(i*4)+1]),uint64(_timesAndRates[(i*4)+2]),uint64(_timesAndRates[(i*4)+3])));if(i>0){require(stages[i-1].time<stages[i].time,"Starting time should be higher than previous stage starting time.");require(stages[i-1].rate>stages[i].rate,"rate can not be higher than previous stage rate.");}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 972
column: 4
content: for(uinti=1;i<stages.length;i++){if(_now<stages[i].time)returnstages[i-1].rate;}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 994
column: 4
content: for(uinti=1;i<stages.length;i++){if(_now<stages[i].time)returnstages[i-1].minInv;}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 1014
column: 4
content: for(uinti=1;i<stages.length;i++){if(_now<stages[i].time)returnstages[i-1].maxInv;}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 920
column: 4
content: for(uint256i=0;i<stages.length;i++){_times[i]=stages[i].time;_rates[i]=stages[i].rate;_minInvs[i]=stages[i].rate;_maxInvs[i]=stages[i].rate;}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 834
column: 2
content: functionsetMinInvestmentAtStage(uint32_stage,uint256_value)onlyOwnerpublic{require(_stage<stages.length,"Stage does not exist");require(_value!=getMinInvAtStage(_stage),"That is the current minimum investment");require(getMaxInvAtStage(_stage)==0||_value<=getMaxInvAtStage(_stage),"Minimum should be lower than the maximum investment when it is not 0");stages[_stage].minInv=_value;}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 841
column: 2
content: functionsetMaxInvestmentAtStage(uint32_stage,uint256_value)onlyOwnerpublic{require(_stage<stages.length,"Stage does not exist");require(_value!=getMaxInvAtStage(_stage),"That is the current minimum investment");require(_value==0||_value>=getMinInvAtStage(_stage),"Maximum should be either 0, or higher than the minimum investment");stages[_stage].maxInv=_value;}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: ^

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 185
column: 2
content: usingSafeMathforuint;

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 765
column: 2
content: usingSafeMathforuint256;

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 56
column: 67
content: uint[]

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 376
column: 84
content: uint[]

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 386
column: 94
content: uint[]

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 810
column: 4
content: uint256[]_timesAndRates

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 915
column: 44
content: uint256[]_times

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 915
column: 62
content: uint256[]_rates

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 915
column: 80
content: uint256[]_minInvs

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 915
column: 100
content: uint256[]_maxInvs

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 932
column: 23
content: uint256[]_timesAndRates

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 785
column: 2
content: Stage[]stages;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 787
column: 2
content: mapping(address=>uint256)invested;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 789
column: 2
content: addresswallet;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 790
column: 2
content: addresstoken;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 791
column: 2
content: addresssigner;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 792
column: 2
content: uint32saleEndTime;

SOLIDITY_VISIBILITY :6
SOLIDITY_SAFEMATH :2
SOLIDITY_OVERPOWERED_ROLE :2
SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_EXTRA_GAS_IN_LOOPS :7
SOLIDITY_ADDRESS_HARDCODED :2
SOLIDITY_UPGRADE_TO_050 :9
SOLIDITY_GAS_LIMIT_IN_LOOPS :1
SOLIDITY_DIV_MUL :2