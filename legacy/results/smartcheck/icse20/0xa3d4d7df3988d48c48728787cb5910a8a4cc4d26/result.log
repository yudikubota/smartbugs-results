/unique_chucks/11/0xa3d4d7df3988d48c48728787cb5910a8a4cc4d26.sol
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 187b5a
severity: 1
line: 160
column: 20
content: sha3

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 187b5a
severity: 1
line: 241
column: 76
content: sha3

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 187b5a
severity: 1
line: 241
column: 200
content: sha3

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 49bd2a
severity: 1
line: 92
column: 21
content: throw

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 49bd2a
severity: 1
line: 113
column: 8
content: throw

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 47
column: 2
content: functiongetAccountID(addressuser)constantreturns(uint){returnaccountIDs[user];}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 51
column: 2
content: functiongetAccount(uintaccountID)constantreturns(address){returnaccounts[accountID].user;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 75
column: 2
content: functiongetFunds(addressuser,boolonlyAvailable)constantreturns(int){if(accountIDs[user]>0){if(onlyAvailable==false){returnaccounts[accountIDs[user]].capital;}else{returnaccounts[accountIDs[user]].capital+getMaxLossAfterTrade(user,0,0,0,0);}}else{return0;}}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 87
column: 2
content: functiongetFundsAndAvailable(addressuser)constantreturns(int,int){return(getFunds(user,false),getFunds(user,true));}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 118
column: 2
content: functiongetMarketMakers()constantreturns(string,string,string,string,string,string){string[]memoryservers=newstring[](6);for(uinti=1;i<=numMarketMakers;i++){servers[i-1]=marketMakers[i].server;}return(servers[0],servers[1],servers[2],servers[3],servers[4],servers[5]);}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 126
column: 2
content: functiongetMarketMakerFunds()constantreturns(int,int,int,int,int,int){int[]memoryfunds=newint[](6);for(uinti=1;i<=numMarketMakers;i++){funds[i-1]=getFunds(marketMakers[i].user,false);}return(funds[0],funds[1],funds[2],funds[3],funds[4],funds[5]);}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 134
column: 2
content: functiongetOptionChain(uintoptionChainID)constantreturns(uint,string,uint,uint,bytes32,address){return(optionChains[optionChainID].expiration,optionChains[optionChainID].underlying,optionChains[optionChainID].margin,optionChains[optionChainID].realityID,optionChains[optionChainID].factHash,optionChains[optionChainID].ethAddr);}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 138
column: 2
content: functiongetMarket(addressuser)constantreturns(uint[],int[],int[],int[]){uint[]memoryoptionIDs=newuint[](60);int[]memorystrikes=newint[](60);int[]memorypositions=newint[](60);int[]memorycashes=newint[](60);uintz=0;for(intoptionChainID=int(numOptionChains)-1;optionChainID>=0&&z<60;optionChainID--){if(optionChains[uint(optionChainID)].expired==false){for(uintoptionID=0;optionID<optionChains[uint(optionChainID)].numOptions;optionID++){optionIDs[z]=uint(optionChainID)*1000+optionID;strikes[z]=optionChains[uint(optionChainID)].options[optionID].strike;positions[z]=optionChains[uint(optionChainID)].positions[user].positions[optionID];cashes[z]=optionChains[uint(optionChainID)].positions[user].cash;z++;}}}return(optionIDs,strikes,positions,cashes);}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 186
column: 2
content: functiongetMoneyness(intstrike,uintsettlement,uintmargin)constantreturns(int){if(strike>=0){if(settlement>uint(strike)){if(settlement-uint(strike)<margin){returnint(settlement-uint(strike));}else{returnint(margin);}}else{return0;}}else{if(settlement<uint(-strike)){if(uint(-strike)-settlement<margin){returnint(uint(-strike)-settlement);}else{returnint(margin);}}else{return0;}}}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 240
column: 2
content: functionorderMatchTest(uintoptionChainID,uintoptionID,uintprice,intsize,uintorderID,uintblockExpires,addressaddr,addresssender,intmatchSize)constantreturns(bool){if(block.number<=blockExpires&&((size>0&&matchSize<0&&orderFills[sha3(optionChainID,optionID,price,size,orderID,blockExpires)]-matchSize<=size)||(size<0&&matchSize>0&&orderFills[sha3(optionChainID,optionID,price,size,orderID,blockExpires)]-matchSize>=size))&&getFunds(addr,false)+getMaxLossAfterTrade(addr,optionChainID,optionID,-matchSize,matchSize*int(price))>0&&getFunds(sender,false)+getMaxLossAfterTrade(sender,optionChainID,optionID,matchSize,-matchSize*int(price))>0){returntrue;}returnfalse;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 266
column: 2
content: functiongetMaxLossAfterTrade(addressuser,uintoptionChainID,uintoptionID,intpositionChange,intcashChange)constantreturns(int){inttotalMaxLoss=0;for(uinti=0;i<numOptionChains;i++){if(optionChains[i].positions[user].expired==false&&optionChains[i].numOptions>0){boolmaxLossInitialized=false;intmaxLoss=0;for(uints=0;s<optionChains[i].numOptions;s++){intpnl=optionChains[i].positions[user].cash/1000000000000000000;if(i==optionChainID){pnl+=cashChange/1000000000000000000;}uintsettlement=0;if(optionChains[i].options[s].strike<0){settlement=uint(-optionChains[i].options[s].strike);}else{settlement=uint(optionChains[i].options[s].strike);}pnl+=moneySumAtSettlement(user,optionChainID,optionID,positionChange,i,settlement);if(pnl<maxLoss||maxLossInitialized==false){maxLossInitialized=true;maxLoss=pnl;}pnl=optionChains[i].positions[user].cash/1000000000000000000;if(i==optionChainID){pnl+=cashChange/1000000000000000000;}settlement=0;if(optionChains[i].options[s].strike<0){if(uint(-optionChains[i].options[s].strike)>optionChains[i].margin){settlement=uint(-optionChains[i].options[s].strike)-optionChains[i].margin;}else{settlement=0;}}else{settlement=uint(optionChains[i].options[s].strike)+optionChains[i].margin;}pnl+=moneySumAtSettlement(user,optionChainID,optionID,positionChange,i,settlement);if(pnl<maxLoss){maxLoss=pnl;}}totalMaxLoss+=maxLoss;}}returntotalMaxLoss;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 324
column: 2
content: functionmin(uinta,uintb)constantreturns(uint){if(a<b){returna;}else{returnb;}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 101
column: 8
content: for(uinti=2;i<=numMarketMakers;i++){if(getFunds(marketMakers[i].user,false)<=funds&&(marketMakerID==0||getFunds(marketMakers[i].user,false)<getFunds(marketMakers[marketMakerID].user,false))){marketMakerID=i;}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 120
column: 4
content: for(uinti=1;i<=numMarketMakers;i++){servers[i-1]=marketMakers[i].server;}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 128
column: 4
content: for(uinti=1;i<=numMarketMakers;i++){funds[i-1]=getFunds(marketMakers[i].user,false);}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 146
column: 8
content: for(uintoptionID=0;optionID<optionChains[uint(optionChainID)].numOptions;optionID++){optionIDs[z]=uint(optionChainID)*1000+optionID;strikes[z]=optionChains[uint(optionChainID)].options[optionID].strike;positions[z]=optionChains[uint(optionChainID)].positions[user].positions[optionID];cashes[z]=optionChains[uint(optionChainID)].positions[user].cash;z++;}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 170
column: 12
content: for(uintoptionID=0;optionID<optionChains[optionChainID].numOptions;optionID++){intmoneyness=getMoneyness(optionChains[optionChainID].options[optionID].strike,uint(value),optionChains[optionChainID].margin);result+=moneyness*optionChains[optionChainID].positions[accounts[accountID].user].positions[optionID]/1000000000000000000;}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 215
column: 6
content: for(uinti=0;i<numOptionChains&&optionChainID>=6;i++){if(optionChains[i].expired==true||optionChains[i].numPositions==0||optionChains[i].numOptions==0){optionChainID=i;}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 229
column: 6
content: for(i=0;i<strikes.length;i++){if(optionChains[optionChainID].numOptions<10){uintoptionID=optionChains[optionChainID].numOptions++;Optionoption=optionChains[optionChainID].options[i];option.strike=strikes[i];optionChains[optionChainID].options[i]=option;}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 268
column: 4
content: for(uinti=0;i<numOptionChains;i++){if(optionChains[i].positions[user].expired==false&&optionChains[i].numOptions>0){boolmaxLossInitialized=false;intmaxLoss=0;for(uints=0;s<optionChains[i].numOptions;s++){intpnl=optionChains[i].positions[user].cash/1000000000000000000;if(i==optionChainID){pnl+=cashChange/1000000000000000000;}uintsettlement=0;if(optionChains[i].options[s].strike<0){settlement=uint(-optionChains[i].options[s].strike);}else{settlement=uint(optionChains[i].options[s].strike);}pnl+=moneySumAtSettlement(user,optionChainID,optionID,positionChange,i,settlement);if(pnl<maxLoss||maxLossInitialized==false){maxLossInitialized=true;maxLoss=pnl;}pnl=optionChains[i].positions[user].cash/1000000000000000000;if(i==optionChainID){pnl+=cashChange/1000000000000000000;}settlement=0;if(optionChains[i].options[s].strike<0){if(uint(-optionChains[i].options[s].strike)>optionChains[i].margin){settlement=uint(-optionChains[i].options[s].strike)-optionChains[i].margin;}else{settlement=0;}}else{settlement=uint(optionChains[i].options[s].strike)+optionChains[i].margin;}pnl+=moneySumAtSettlement(user,optionChainID,optionID,positionChange,i,settlement);if(pnl<maxLoss){maxLoss=pnl;}}totalMaxLoss+=maxLoss;}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 272
column: 8
content: for(uints=0;s<optionChains[i].numOptions;s++){intpnl=optionChains[i].positions[user].cash/1000000000000000000;if(i==optionChainID){pnl+=cashChange/1000000000000000000;}uintsettlement=0;if(optionChains[i].options[s].strike<0){settlement=uint(-optionChains[i].options[s].strike);}else{settlement=uint(optionChains[i].options[s].strike);}pnl+=moneySumAtSettlement(user,optionChainID,optionID,positionChange,i,settlement);if(pnl<maxLoss||maxLossInitialized==false){maxLossInitialized=true;maxLoss=pnl;}pnl=optionChains[i].positions[user].cash/1000000000000000000;if(i==optionChainID){pnl+=cashChange/1000000000000000000;}settlement=0;if(optionChains[i].options[s].strike<0){if(uint(-optionChains[i].options[s].strike)>optionChains[i].margin){settlement=uint(-optionChains[i].options[s].strike)-optionChains[i].margin;}else{settlement=0;}}else{settlement=uint(optionChains[i].options[s].strike)+optionChains[i].margin;}pnl+=moneySumAtSettlement(user,optionChainID,optionID,positionChange,i,settlement);if(pnl<maxLoss){maxLoss=pnl;}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 315
column: 4
content: for(uintj=0;j<optionChains[i].numOptions;j++){pnl+=optionChains[i].positions[user].positions[j]*getMoneyness(optionChains[i].options[j].strike,settlement,optionChains[i].margin)/1000000000000000000;if(i==optionChainID&&j==optionID){pnl+=positionChange*getMoneyness(optionChains[i].options[j].strike,settlement,optionChains[i].margin)/1000000000000000000;}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 229
column: 6
content: for(i=0;i<strikes.length;i++){if(optionChains[optionChainID].numOptions<10){uintoptionID=optionChains[optionChainID].numOptions++;Optionoption=optionChains[optionChainID].options[i];option.strike=strikes[i];optionChains[optionChainID].options[i]=option;}}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 92
column: 4
content: if(msg.value>0)throw;

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 107
column: 6
content: if(marketMakerID>0){marketMakerIDs[marketMakers[marketMakerID].user]=0;marketMakers[marketMakerID].user=msg.sender;marketMakers[marketMakerID].server=server;marketMakerIDs[msg.sender]=marketMakerID;}else{throw;}

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 441gim
severity: 1
line: 232
column: 10
content: Optionoption=optionChains[optionChainID].options[i]

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 44
column: 2
content: functionMarket(){}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 47
column: 2
content: functiongetAccountID(addressuser)constantreturns(uint){returnaccountIDs[user];}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 51
column: 2
content: functiongetAccount(uintaccountID)constantreturns(address){returnaccounts[accountID].user;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 55
column: 2
content: functionaddFunds(){if(accountIDs[msg.sender]>0){accounts[accountIDs[msg.sender]].capital+=int(msg.value);}else{uintaccountID=++numAccounts;accounts[accountID].user=msg.sender;accounts[accountID].capital+=int(msg.value);accountIDs[msg.sender]=accountID;}}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 66
column: 2
content: functionwithdrawFunds(uintamount){if(accountIDs[msg.sender]>0){if(int(amount)<=getFunds(msg.sender,true)&&int(amount)>0){accounts[accountIDs[msg.sender]].capital-=int(amount);msg.sender.send(amount);}}}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 75
column: 2
content: functiongetFunds(addressuser,boolonlyAvailable)constantreturns(int){if(accountIDs[user]>0){if(onlyAvailable==false){returnaccounts[accountIDs[user]].capital;}else{returnaccounts[accountIDs[user]].capital+getMaxLossAfterTrade(user,0,0,0,0);}}else{return0;}}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 87
column: 2
content: functiongetFundsAndAvailable(addressuser)constantreturns(int,int){return(getFunds(user,false),getFunds(user,true));}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 91
column: 2
content: functionmarketMaker(stringserver){if(msg.value>0)throw;if(marketMakerIDs[msg.sender]>0){marketMakers[marketMakerIDs[msg.sender]].server=server;}else{intfunds=getFunds(marketMakers[i].user,false);uintmarketMakerID=0;if(numMarketMakers<6){marketMakerID=++numMarketMakers;}else{for(uinti=2;i<=numMarketMakers;i++){if(getFunds(marketMakers[i].user,false)<=funds&&(marketMakerID==0||getFunds(marketMakers[i].user,false)<getFunds(marketMakers[marketMakerID].user,false))){marketMakerID=i;}}}if(marketMakerID>0){marketMakerIDs[marketMakers[marketMakerID].user]=0;marketMakers[marketMakerID].user=msg.sender;marketMakers[marketMakerID].server=server;marketMakerIDs[msg.sender]=marketMakerID;}else{throw;}}}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 118
column: 2
content: functiongetMarketMakers()constantreturns(string,string,string,string,string,string){string[]memoryservers=newstring[](6);for(uinti=1;i<=numMarketMakers;i++){servers[i-1]=marketMakers[i].server;}return(servers[0],servers[1],servers[2],servers[3],servers[4],servers[5]);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 126
column: 2
content: functiongetMarketMakerFunds()constantreturns(int,int,int,int,int,int){int[]memoryfunds=newint[](6);for(uinti=1;i<=numMarketMakers;i++){funds[i-1]=getFunds(marketMakers[i].user,false);}return(funds[0],funds[1],funds[2],funds[3],funds[4],funds[5]);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 134
column: 2
content: functiongetOptionChain(uintoptionChainID)constantreturns(uint,string,uint,uint,bytes32,address){return(optionChains[optionChainID].expiration,optionChains[optionChainID].underlying,optionChains[optionChainID].margin,optionChains[optionChainID].realityID,optionChains[optionChainID].factHash,optionChains[optionChainID].ethAddr);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 138
column: 2
content: functiongetMarket(addressuser)constantreturns(uint[],int[],int[],int[]){uint[]memoryoptionIDs=newuint[](60);int[]memorystrikes=newint[](60);int[]memorypositions=newint[](60);int[]memorycashes=newint[](60);uintz=0;for(intoptionChainID=int(numOptionChains)-1;optionChainID>=0&&z<60;optionChainID--){if(optionChains[uint(optionChainID)].expired==false){for(uintoptionID=0;optionID<optionChains[uint(optionChainID)].numOptions;optionID++){optionIDs[z]=uint(optionChainID)*1000+optionID;strikes[z]=optionChains[uint(optionChainID)].options[optionID].strike;positions[z]=optionChains[uint(optionChainID)].positions[user].positions[optionID];cashes[z]=optionChains[uint(optionChainID)].positions[user].cash;z++;}}}return(optionIDs,strikes,positions,cashes);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 158
column: 2
content: functionexpire(uintaccountID,uintoptionChainID,uint8v,bytes32r,bytes32s,bytes32value){if(optionChains[optionChainID].expired==false){if(ecrecover(sha3(optionChains[optionChainID].factHash,value),v,r,s)==optionChains[optionChainID].ethAddr){uintlastAccount=numAccounts;if(accountID==0){accountID=1;}else{lastAccount=accountID;}for(accountID=accountID;accountID<=lastAccount;accountID++){if(optionChains[optionChainID].positions[accounts[accountID].user].expired==false){intresult=optionChains[optionChainID].positions[accounts[accountID].user].cash/1000000000000000000;for(uintoptionID=0;optionID<optionChains[optionChainID].numOptions;optionID++){intmoneyness=getMoneyness(optionChains[optionChainID].options[optionID].strike,uint(value),optionChains[optionChainID].margin);result+=moneyness*optionChains[optionChainID].positions[accounts[accountID].user].positions[optionID]/1000000000000000000;}accounts[accountID].capital=accounts[accountID].capital+result;optionChains[optionChainID].positions[accounts[accountID].user].expired=true;optionChains[optionChainID].numPositionsExpired++;}}if(optionChains[optionChainID].numPositionsExpired==optionChains[optionChainID].numPositions){optionChains[optionChainID].expired=true;}}}}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 186
column: 2
content: functiongetMoneyness(intstrike,uintsettlement,uintmargin)constantreturns(int){if(strike>=0){if(settlement>uint(strike)){if(settlement-uint(strike)<margin){returnint(settlement-uint(strike));}else{returnint(margin);}}else{return0;}}else{if(settlement<uint(-strike)){if(uint(-strike)-settlement<margin){returnint(uint(-strike)-settlement);}else{returnint(margin);}}else{return0;}}}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 210
column: 2
content: functionaddOptionChain(uintexpiration,stringunderlying,uintmargin,uintrealityID,bytes32factHash,addressethAddr,int[]strikes){uintoptionChainID=6;if(numOptionChains<6){optionChainID=numOptionChains++;}else{for(uinti=0;i<numOptionChains&&optionChainID>=6;i++){if(optionChains[i].expired==true||optionChains[i].numPositions==0||optionChains[i].numOptions==0){optionChainID=i;}}}if(optionChainID<6){deleteoptionChains[optionChainID];optionChains[optionChainID].expiration=expiration;optionChains[optionChainID].underlying=underlying;optionChains[optionChainID].margin=margin;optionChains[optionChainID].realityID=realityID;optionChains[optionChainID].factHash=factHash;optionChains[optionChainID].ethAddr=ethAddr;for(i=0;i<strikes.length;i++){if(optionChains[optionChainID].numOptions<10){uintoptionID=optionChains[optionChainID].numOptions++;Optionoption=optionChains[optionChainID].options[i];option.strike=strikes[i];optionChains[optionChainID].options[i]=option;}}}}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 240
column: 2
content: functionorderMatchTest(uintoptionChainID,uintoptionID,uintprice,intsize,uintorderID,uintblockExpires,addressaddr,addresssender,intmatchSize)constantreturns(bool){if(block.number<=blockExpires&&((size>0&&matchSize<0&&orderFills[sha3(optionChainID,optionID,price,size,orderID,blockExpires)]-matchSize<=size)||(size<0&&matchSize>0&&orderFills[sha3(optionChainID,optionID,price,size,orderID,blockExpires)]-matchSize>=size))&&getFunds(addr,false)+getMaxLossAfterTrade(addr,optionChainID,optionID,-matchSize,matchSize*int(price))>0&&getFunds(sender,false)+getMaxLossAfterTrade(sender,optionChainID,optionID,matchSize,-matchSize*int(price))>0){returntrue;}returnfalse;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 247
column: 2
content: functionorderMatch(uintoptionChainID,uintoptionID,uintprice,intsize,uintorderID,uintblockExpires,addressaddr,uint8v,bytes32r,bytes32s,intmatchSize){bytes32hash=sha256(optionChainID,optionID,price,size,orderID,blockExpires);if(ecrecover(hash,v,r,s)==addr&&block.number<=blockExpires&&((size>0&&matchSize<0&&orderFills[hash]-matchSize<=size)||(size<0&&matchSize>0&&orderFills[hash]-matchSize>=size))&&getFunds(addr,false)+getMaxLossAfterTrade(addr,optionChainID,optionID,-matchSize,matchSize*int(price))>0&&getFunds(msg.sender,false)+getMaxLossAfterTrade(msg.sender,optionChainID,optionID,matchSize,-matchSize*int(price))>0){if(optionChains[optionChainID].positions[msg.sender].hasPosition==false){optionChains[optionChainID].positions[msg.sender].hasPosition=true;optionChains[optionChainID].numPositions++;}if(optionChains[optionChainID].positions[addr].hasPosition==false){optionChains[optionChainID].positions[addr].hasPosition=true;optionChains[optionChainID].numPositions++;}optionChains[optionChainID].positions[msg.sender].positions[optionID]+=matchSize;optionChains[optionChainID].positions[msg.sender].cash-=matchSize*int(price);optionChains[optionChainID].positions[addr].positions[optionID]-=matchSize;optionChains[optionChainID].positions[addr].cash+=matchSize*int(price);orderFills[hash]-=matchSize;}}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 266
column: 2
content: functiongetMaxLossAfterTrade(addressuser,uintoptionChainID,uintoptionID,intpositionChange,intcashChange)constantreturns(int){inttotalMaxLoss=0;for(uinti=0;i<numOptionChains;i++){if(optionChains[i].positions[user].expired==false&&optionChains[i].numOptions>0){boolmaxLossInitialized=false;intmaxLoss=0;for(uints=0;s<optionChains[i].numOptions;s++){intpnl=optionChains[i].positions[user].cash/1000000000000000000;if(i==optionChainID){pnl+=cashChange/1000000000000000000;}uintsettlement=0;if(optionChains[i].options[s].strike<0){settlement=uint(-optionChains[i].options[s].strike);}else{settlement=uint(optionChains[i].options[s].strike);}pnl+=moneySumAtSettlement(user,optionChainID,optionID,positionChange,i,settlement);if(pnl<maxLoss||maxLossInitialized==false){maxLossInitialized=true;maxLoss=pnl;}pnl=optionChains[i].positions[user].cash/1000000000000000000;if(i==optionChainID){pnl+=cashChange/1000000000000000000;}settlement=0;if(optionChains[i].options[s].strike<0){if(uint(-optionChains[i].options[s].strike)>optionChains[i].margin){settlement=uint(-optionChains[i].options[s].strike)-optionChains[i].margin;}else{settlement=0;}}else{settlement=uint(optionChains[i].options[s].strike)+optionChains[i].margin;}pnl+=moneySumAtSettlement(user,optionChainID,optionID,positionChange,i,settlement);if(pnl<maxLoss){maxLoss=pnl;}}totalMaxLoss+=maxLoss;}}returntotalMaxLoss;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 324
column: 2
content: functionmin(uinta,uintb)constantreturns(uint){if(a<b){returna;}else{returnb;}}

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 26
column: 2
content: mapping(uint=>OptionChain)optionChains;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 27
column: 2
content: uintnumOptionChains;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 32
column: 2
content: mapping(bytes32=>int)orderFills;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 37
column: 2
content: mapping(uint=>MarketMaker)marketMakers;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 39
column: 2
content: mapping(address=>uint)marketMakerIDs;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 40
column: 2
content: mapping(uint=>Account)accounts;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 42
column: 2
content: mapping(address=>uint)accountIDs;

SOLIDITY_VISIBILITY :26
SOLIDITY_DEPRECATED_CONSTRUCTIONS :17
SOLIDITY_REVERT_REQUIRE :2
SOLIDITY_EXTRA_GAS_IN_LOOPS :10
SOLIDITY_UPGRADE_TO_050 :1
SOLIDITY_GAS_LIMIT_IN_LOOPS :1