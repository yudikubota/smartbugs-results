/unique_contracts/0xac6072986e985aabe7804695ec2d8970cf7541a2.sol
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 112
column: 55
content: 0x1

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 207
column: 54
content: 0x1

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 730
column: 34
content: 0x19

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 765
column: 37
content: 0x19

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 605
column: 8
content: addresslastOwner=address(0)

ruleId: SOLIDITY_ERC20_FUNCTIONS_ALWAYS_RETURN_FALSE
patternId: b180ca
severity: 2
line: 78
column: 4
content: functiontransferToken(addresstoken,addressreceiver,uint256amount)internalreturns(booltransferred){bytesmemorydata=abi.encodeWithSignature("transfer(address,uint256)",receiver,amount);assembly{letsuccess:=call(sub(gas,10000),token,0,add(data,0x20),mload(data),0,0)letptr:=mload(0x40)returndatacopy(ptr,0,returndatasize)switchreturndatasizecase0{transferred:=success}case0x20{transferred:=iszero(or(iszero(success),iszero(mload(ptr))))}default{transferred:=0}}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 228
column: 8
content: for(uint256i=0;i<_owners.length;i++){addressowner=_owners[i];require(owner!=0&&owner!=SENTINEL_OWNERS,"Invalid owner address provided");require(owners[owner]==0,"Duplicate owner address provided");owners[currentOwner]=owner;currentOwner=owner;}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: k4o1l4
severity: 1
line: 183
column: 8
content: while(currentModule!=SENTINEL_MODULES){currentModule=modules[currentModule];moduleCount++;}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: k4o1l4
severity: 1
line: 192
column: 8
content: while(currentModule!=SENTINEL_MODULES){array[moduleCount]=currentModule;currentModule=modules[currentModule];moduleCount++;}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: k4o1l4
severity: 1
line: 352
column: 8
content: while(currentOwner!=SENTINEL_OWNERS){array[index]=currentOwner;currentOwner=owners[currentOwner];index++;}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 47acc2
severity: 1
line: 661
column: 4
content: functionrequiredTxGas(addressto,uint256value,bytesdata,Enum.Operationoperation)publicauthorizedreturns(uint256){uint256startGas=gasleft();require(execute(to,value,data,operation,gasleft()));uint256requiredGas=startGas-gasleft();revert(string(abi.encodePacked(requiredGas)));}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 41
column: 4
content: functionexecuteCall(addressto,uint256value,bytesdata,uint256txGas)internalreturns(boolsuccess){assembly{success:=call(txGas,to,value,add(data,0x20),mload(data),0,0)}}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 51
column: 4
content: functionexecuteDelegateCall(addressto,bytesdata,uint256txGas)internalreturns(boolsuccess){assembly{success:=delegatecall(txGas,to,add(data,0x20),mload(data),0,0)}}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 61
column: 4
content: functionexecuteCreate(bytesdata)internalreturns(addressnewContract){assembly{newContract:=create(0,add(data,0x20),mload(data))}}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 78
column: 4
content: functiontransferToken(addresstoken,addressreceiver,uint256amount)internalreturns(booltransferred){bytesmemorydata=abi.encodeWithSignature("transfer(address,uint256)",receiver,amount);assembly{letsuccess:=call(sub(gas,10000),token,0,add(data,0x20),mload(data),0,0)letptr:=mload(0x40)returndatacopy(ptr,0,returndatasize)switchreturndatasizecase0{transferred:=success}case0x20{transferred:=iszero(or(iszero(success),iszero(mload(ptr))))}default{transferred:=0}}}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 438
column: 4
content: functionsignatureSplit(bytessignatures,uint256pos)internalpurereturns(uint8v,bytes32r,bytes32s){assembly{letsignaturePos:=mul(0x41,pos)r:=mload(add(signatures,add(signaturePos,0x20)))s:=mload(add(signatures,add(signaturePos,0x40)))v:=and(mload(add(signatures,add(signaturePos,0x41))),0xff)}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 228
column: 8
content: for(uint256i=0;i<_owners.length;i++){addressowner=_owners[i];require(owner!=0&&owner!=SENTINEL_OWNERS,"Invalid owner address provided");require(owners[owner]==0,"Duplicate owner address provided");owners[currentOwner]=owner;currentOwner=owner;}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: 17f23a
severity: 1
line: 183
column: 14
content: currentModule!=SENTINEL_MODULES

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: 17f23a
severity: 1
line: 192
column: 14
content: currentModule!=SENTINEL_MODULES

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: 17f23a
severity: 1
line: 352
column: 14
content: currentOwner!=SENTINEL_OWNERS

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 11
column: 0
content: contractEtherPaymentFallback{function()externalpayable{}}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: ^

ruleId: SOLIDITY_SEND
patternId: 430636
severity: 1
line: 582
column: 29
content: send(amount)

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 438
column: 4
content: functionsignatureSplit(bytessignatures,uint256pos)internalpurereturns(uint8v,bytes32r,bytes32s){assembly{letsignaturePos:=mul(0x41,pos)r:=mload(add(signatures,add(signaturePos,0x20)))s:=mload(add(signatures,add(signaturePos,0x40)))v:=and(mload(add(signatures,add(signaturePos,0x41))),0xff)}}

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 7d54ca
severity: 1
line: 441
column: 16
content: (uint8v,bytes32r,bytes32s)

ruleId: SOLIDITY_TX_ORIGIN
patternId: 12e802
severity: 2
line: 579
column: 58
content: tx.origin

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 26
column: 48
content: bytesdata

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 41
column: 52
content: bytesdata

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 51
column: 45
content: bytesdata

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 61
column: 27
content: bytesdata

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 116
column: 38
content: bytesdata

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 163
column: 66
content: bytesdata

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 178
column: 17
content: address[]

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 216
column: 25
content: address[]_owners

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 345
column: 17
content: address[]

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 368
column: 23
content: address[]_owners

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 368
column: 74
content: bytesdata

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 421
column: 8
content: bytesmessageSignature

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 438
column: 28
content: bytessignatures

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 471
column: 8
content: bytes_data

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 472
column: 8
content: bytes_signature

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 511
column: 19
content: address[]_owners

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 511
column: 70
content: bytesdata

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 534
column: 8
content: bytesdata

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 541
column: 8
content: bytessignatures

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 596
column: 47
content: bytesdata

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 596
column: 59
content: bytessignatures

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 661
column: 54
content: bytesdata

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 690
column: 25
content: bytes_data

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 703
column: 30
content: bytes_data

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 703
column: 43
content: bytes_signature

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 720
column: 8
content: bytesmessage

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 749
column: 8
content: bytesdata

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 760
column: 17
content: bytes

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 783
column: 8
content: bytesdata

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 46
column: 8
content: assembly{success:=call(txGas,to,value,add(data,0x20),mload(data),0,0)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 56
column: 8
content: assembly{success:=delegatecall(txGas,to,add(data,0x20),mload(data),0,0)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 66
column: 8
content: assembly{newContract:=create(0,add(data,0x20),mload(data))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 88
column: 8
content: assembly{letsuccess:=call(sub(gas,10000),token,0,add(data,0x20),mload(data),0,0)letptr:=mload(0x40)returndatacopy(ptr,0,returndatasize)switchreturndatasizecase0{transferred:=success}case0x20{transferred:=iszero(or(iszero(success),iszero(mload(ptr))))}default{transferred:=0}}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 447
column: 8
content: assembly{letsignaturePos:=mul(0x41,pos)r:=mload(add(signatures,add(signaturePos,0x20)))s:=mload(add(signatures,add(signaturePos,0x40)))v:=and(mload(add(signatures,add(signaturePos,0x41))),0xff)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 619
column: 16
content: assembly{contractSignature:=add(add(signatures,s),0x20)}

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 210
column: 4
content: uint256ownerCount;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 380
column: 4
content: addressmasterCopy;

SOLIDITY_VISIBILITY :2
SOLIDITY_ERC20_FUNCTIONS_ALWAYS_RETURN_FALSE :1
SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN :6
SOLIDITY_EXTRA_GAS_IN_LOOPS :4
SOLIDITY_ADDRESS_HARDCODED :5
SOLIDITY_UPGRADE_TO_050 :29
SOLIDITY_GAS_LIMIT_IN_LOOPS :4
SOLIDITY_SHOULD_RETURN_STRUCT :1
SOLIDITY_TX_ORIGIN :1
SOLIDITY_SHOULD_NOT_BE_PURE :1
SOLIDITY_LOCKED_MONEY :1
SOLIDITY_SEND :1
SOLIDITY_USING_INLINE_ASSEMBLY :6