{
  "contract": "0xbc2afc039d2bfa67d582ac181dab5be17ec91f82",
  "tool": "smartcheck",
  "start": 1563461716.930867,
  "end": 1563461734.0341477,
  "duration": 17.103280782699585,
  "analysis": [
    {
      "name": "SOLIDITY_ADDRESS_HARDCODED",
      "patternId": "b140cd",
      "severity": 1,
      "line": 1431,
      "column": 27,
      "content": "0x80ac58cd"
    },
    {
      "name": "SOLIDITY_ADDRESS_HARDCODED",
      "patternId": "b140cd",
      "severity": 1,
      "line": 1431,
      "column": 56,
      "content": "0x01ffc9a7"
    },
    {
      "name": "SOLIDITY_ADDRESS_HARDCODED",
      "patternId": "a91b18",
      "severity": 1,
      "line": 382,
      "column": 4,
      "content": "owner=address(0)"
    },
    {
      "name": "SOLIDITY_ADDRESS_HARDCODED",
      "patternId": "a91b18",
      "severity": 1,
      "line": 425,
      "column": 12,
      "content": "userToAddress[addressToUser[msg.sender]]=address(0)"
    },
    {
      "name": "SOLIDITY_ADDRESS_HARDCODED",
      "patternId": "a91b18",
      "severity": 1,
      "line": 1124,
      "column": 8,
      "content": "approved[_father]=address(0)"
    },
    {
      "name": "SOLIDITY_ADDRESS_HARDCODED",
      "patternId": "a91b18",
      "severity": 1,
      "line": 1125,
      "column": 8,
      "content": "approved[_mother]=address(0)"
    },
    {
      "name": "SOLIDITY_ADDRESS_HARDCODED",
      "patternId": "a91b18",
      "severity": 1,
      "line": 1267,
      "column": 31,
      "content": "balances[address(0)]"
    },
    {
      "name": "SOLIDITY_ADDRESS_HARDCODED",
      "patternId": "a91b18",
      "severity": 1,
      "line": 1355,
      "column": 8,
      "content": "approved[_tokenId]=address(0)"
    },
    {
      "name": "SOLIDITY_ARRAY_LENGTH_MANIPULATION",
      "patternId": "872bdd",
      "severity": 1,
      "line": 1804,
      "column": 8,
      "content": "pepes.length-=1"
    },
    {
      "name": "SOLIDITY_DEPRECATED_CONSTRUCTIONS",
      "patternId": "28fa69",
      "severity": 1,
      "line": 1295,
      "column": 4,
      "content": "functiontokenOfOwnerByIndex(address_owner,uint256_index)publicconstantreturns(uint256tokenId){require(_index<balances[_owner]);returnwallets[_owner][_index];}"
    },
    {
      "name": "SOLIDITY_DEPRECATED_CONSTRUCTIONS",
      "patternId": "28fa69",
      "severity": 1,
      "line": 1935,
      "column": 4,
      "content": "functiongetChallengeNumber()publicconstantreturns(bytes32){returnchallengeNumber;}"
    },
    {
      "name": "SOLIDITY_DEPRECATED_CONSTRUCTIONS",
      "patternId": "28fa69",
      "severity": 1,
      "line": 1943,
      "column": 4,
      "content": "functiongetMiningDifficulty()publicconstantreturns(uint){return_MAXIMUM_TARGET.div(difficulty);}"
    },
    {
      "name": "SOLIDITY_DEPRECATED_CONSTRUCTIONS",
      "patternId": "28fa69",
      "severity": 1,
      "line": 1951,
      "column": 4,
      "content": "functiongetMiningTarget()publicconstantreturns(uint256){returndifficulty;}"
    },
    {
      "name": "SOLIDITY_DEPRECATED_CONSTRUCTIONS",
      "patternId": "28fa69",
      "severity": 1,
      "line": 1959,
      "column": 4,
      "content": "functiongetMiningReward()publicconstantreturns(uint256){returnbaseMiningReward;}"
    },
    {
      "name": "SOLIDITY_DIV_MUL",
      "patternId": "09hhh1",
      "severity": 2,
      "line": 2052,
      "column": 40,
      "content": "difficulty.div(TARGET_DIVISOR).mul(excess_block_pct_extra)"
    },
    {
      "name": "SOLIDITY_DIV_MUL",
      "patternId": "09hhh1",
      "severity": 2,
      "line": 2057,
      "column": 40,
      "content": "difficulty.div(TARGET_DIVISOR).mul(shortage_block_pct_extra)"
    },
    {
      "name": "SOLIDITY_ERC20_APPROVE",
      "patternId": "af782c",
      "severity": 2,
      "line": 1637,
      "column": 2,
      "content": "functionapprove(address_spender,uint256_value)publicreturns(bool){allowed[msg.sender][_spender]=_value;emitApproval(msg.sender,_spender,_value);returntrue;}"
    },
    {
      "name": "SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN",
      "patternId": "58bdd3",
      "severity": 1,
      "line": 16,
      "column": 4,
      "content": "functionbreed(uint256[2]mother,uint256[2]father,uint256seed)internalviewreturns(uint256[2]memOffset){assembly{memOffset:=mload(0x40)mstore(0x40,add(memOffset,64))mstore(0x0,seed)mstore(0x20,timestamp)lethash:=keccak256(0,64)functionshiftR(value,offset)->result{result:=div(value,exp(2,offset))}functionprocessSide(fatherSrc,motherSrc,rngSrc)->result{{{ifeq(and(rngSrc,0x1),0){lettemp:=fatherSrcfatherSrc:=motherSrcmotherSrc:=temp}rngSrc:=shiftR(rngSrc,1)}letmask:=0letcap:=0letcrossoverLen:=and(rngSrc,0x7f)rngSrc:=shiftR(rngSrc,7)letcrossoverPos:=crossoverLenletcrossoverPosLeading1:=1for{}and(lt(crossoverPos,256),lt(cap,4)){crossoverLen:=and(rngSrc,0x7f)rngSrc:=shiftR(rngSrc,7)crossoverPos:=add(crossoverPos,crossoverLen)cap:=add(cap,1)}{mask:=sub(crossoverPosLeading1,1)crossoverPosLeading1:=mul(1,exp(2,crossoverPos))mask:=xor(mask,sub(crossoverPosLeading1,1))result:=or(result,and(mask,fatherSrc))lettemp:=fatherSrcfatherSrc:=motherSrcmotherSrc:=temp}mask:=not(sub(crossoverPosLeading1,1))result:=or(result,and(mask,fatherSrc))mstore(0x0,rngSrc)mstore(0x20,0x434f4c4c454354205045504553204f4e2043525950544f50455045532e494f21)letmutations:=and(and(and(keccak256(0,32),keccak256(1,33)),and(keccak256(2,34),keccak256(3,35))),keccak256(0,36))result:=xor(result,mutations)}}{letrelativeFatherSideLoc:=mul(and(hash,0x1),0x20)letrelativeMotherSideLoc:=mul(and(hash,0x2),0x10)hash:=div(hash,4)mstore(memOffset,processSide(mload(add(father,relativeFatherSideLoc)),mload(add(mother,relativeMotherSideLoc)),hash))relativeFatherSideLoc:=xor(relativeFatherSideLoc,0x20)relativeMotherSideLoc:=xor(relativeMotherSideLoc,0x20)mstore(0x0,seed)mstore(0x20,not(timestamp))hash:=keccak256(0,64)mstore(add(memOffset,0x20),processSide(mload(add(father,relativeFatherSideLoc)),mload(add(mother,relativeMotherSideLoc)),hash))}}}"
    },
    {
      "name": "SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN",
      "patternId": "58bdd3",
      "severity": 1,
      "line": 293,
      "column": 4,
      "content": "functionrandomDNA(uint256seed)internalpurereturns(uint256[2]memOffset){assembly{memOffset:=mload(0x40)mstore(0x40,add(memOffset,64))mstore(0x0,seed)mstore(0x20,0x434f4c4c454354205045504553204f4e2043525950544f50455045532e494f21){lethash:=keccak256(0,64)mstore(memOffset,hash)hash:=keccak256(0,32)mstore(add(memOffset,32),hash)}}}"
    },
    {
      "name": "SOLIDITY_OVERPOWERED_ROLE",
      "patternId": "j83hf7",
      "severity": 2,
      "line": 457,
      "column": 4,
      "content": "functionsetBeneficiary(address_beneficiary)publiconlyOwner{beneficiary=_beneficiary;}"
    },
    {
      "name": "SOLIDITY_OVERPOWERED_ROLE",
      "patternId": "j83hf7",
      "severity": 2,
      "line": 477,
      "column": 4,
      "content": "functionsetAffiliateSetter(address_setter)publiconlyOwner{canSetAffiliate[_setter]=true;}"
    },
    {
      "name": "SOLIDITY_OVERPOWERED_ROLE",
      "patternId": "j83hf7",
      "severity": 2,
      "line": 1059,
      "column": 4,
      "content": "functionsetMiner(address_miner)publiconlyOwner{require(miner==address(0));miner=_miner;}"
    },
    {
      "name": "SOLIDITY_OVERPOWERED_ROLE",
      "patternId": "j83hf7",
      "severity": 2,
      "line": 1769,
      "column": 4,
      "content": "functionsetMiner(address_miner)publiconlyOwner{require(miner==address(0));miner=_miner;}"
    },
    {
      "name": "SOLIDITY_PRAGMAS_VERSION",
      "patternId": "23fc32",
      "severity": 1,
      "line": 1,
      "column": 16,
      "content": "^"
    },
    {
      "name": "SOLIDITY_PRAGMAS_VERSION",
      "patternId": "23fc32",
      "severity": 1,
      "line": 6,
      "column": 16,
      "content": "^"
    },
    {
      "name": "SOLIDITY_PRAGMAS_VERSION",
      "patternId": "23fc32",
      "severity": 1,
      "line": 407,
      "column": 16,
      "content": "^"
    },
    {
      "name": "SOLIDITY_PRAGMAS_VERSION",
      "patternId": "23fc32",
      "severity": 1,
      "line": 441,
      "column": 16,
      "content": "^"
    },
    {
      "name": "SOLIDITY_PRAGMAS_VERSION",
      "patternId": "23fc32",
      "severity": 1,
      "line": 465,
      "column": 16,
      "content": "^"
    },
    {
      "name": "SOLIDITY_PRAGMAS_VERSION",
      "patternId": "23fc32",
      "severity": 1,
      "line": 525,
      "column": 16,
      "content": "^"
    },
    {
      "name": "SOLIDITY_PRAGMAS_VERSION",
      "patternId": "23fc32",
      "severity": 1,
      "line": 686,
      "column": 16,
      "content": "^"
    },
    {
      "name": "SOLIDITY_PRAGMAS_VERSION",
      "patternId": "23fc32",
      "severity": 1,
      "line": 799,
      "column": 16,
      "content": "^"
    },
    {
      "name": "SOLIDITY_PRAGMAS_VERSION",
      "patternId": "23fc32",
      "severity": 1,
      "line": 916,
      "column": 16,
      "content": "^"
    },
    {
      "name": "SOLIDITY_PRAGMAS_VERSION",
      "patternId": "23fc32",
      "severity": 1,
      "line": 1713,
      "column": 16,
      "content": "^"
    },
    {
      "name": "SOLIDITY_PRAGMAS_VERSION",
      "patternId": "23fc32",
      "severity": 1,
      "line": 1742,
      "column": 16,
      "content": "^"
    },
    {
      "name": "SOLIDITY_PRAGMAS_VERSION",
      "patternId": "23fc32",
      "severity": 1,
      "line": 1827,
      "column": 16,
      "content": "^"
    },
    {
      "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
      "patternId": "5616b2",
      "severity": 1,
      "line": 971,
      "column": 34,
      "content": "private"
    },
    {
      "name": "SOLIDITY_REVERT_REQUIRE",
      "patternId": "c56b12",
      "severity": 1,
      "line": 757,
      "column": 12,
      "content": "if(!pepeContract.cozyTime(auction.pepeId,_cozyCandidate,_pepeReceiver)){revert();}"
    },
    {
      "name": "SOLIDITY_REVERT_REQUIRE",
      "patternId": "c56b12",
      "severity": 1,
      "line": 762,
      "column": 12,
      "content": "if(!pepeContract.cozyTime(_cozyCandidate,auction.pepeId,_pepeReceiver)){revert();}"
    },
    {
      "name": "SOLIDITY_REVERT_REQUIRE",
      "patternId": "c56b12",
      "severity": 1,
      "line": 768,
      "column": 8,
      "content": "if(!pepeContract.transfer(auction.seller,_pepeId)){revert();}"
    },
    {
      "name": "SOLIDITY_REVERT_REQUIRE",
      "patternId": "c56b12",
      "severity": 1,
      "line": 1986,
      "column": 8,
      "content": "if(uint256(digest)>testTarget)revert();"
    },
    {
      "name": "SOLIDITY_REVERT_REQUIRE",
      "patternId": "c56b12",
      "severity": 1,
      "line": 1999,
      "column": 8,
      "content": "if(digest!=challengeDigest)revert();"
    },
    {
      "name": "SOLIDITY_REVERT_REQUIRE",
      "patternId": "c56b12",
      "severity": 1,
      "line": 2001,
      "column": 8,
      "content": "if(uint256(digest)>difficulty)revert();"
    },
    {
      "name": "SOLIDITY_REVERT_REQUIRE",
      "patternId": "c56b12",
      "severity": 1,
      "line": 2005,
      "column": 8,
      "content": "if(solution!=0x0)revert();"
    },
    {
      "name": "SOLIDITY_SAFEMATH",
      "patternId": "837cac",
      "severity": 1,
      "line": 1529,
      "column": 2,
      "content": "usingSafeMathforuint256;"
    },
    {
      "name": "SOLIDITY_SAFEMATH",
      "patternId": "837cac",
      "severity": 1,
      "line": 1840,
      "column": 4,
      "content": "usingSafeMathforuint;"
    },
    {
      "name": "SOLIDITY_SHOULD_NOT_BE_PURE",
      "patternId": "11314f",
      "severity": 1,
      "line": 293,
      "column": 4,
      "content": "functionrandomDNA(uint256seed)internalpurereturns(uint256[2]memOffset){assembly{memOffset:=mload(0x40)mstore(0x40,add(memOffset,64))mstore(0x0,seed)mstore(0x20,0x434f4c4c454354205045504553204f4e2043525950544f50455045532e494f21){lethash:=keccak256(0,64)mstore(memOffset,hash)hash:=keccak256(0,32)mstore(add(memOffset,32),hash)}}}"
    },
    {
      "name": "SOLIDITY_SHOULD_NOT_BE_VIEW",
      "patternId": "189abf",
      "severity": 1,
      "line": 16,
      "column": 4,
      "content": "functionbreed(uint256[2]mother,uint256[2]father,uint256seed)internalviewreturns(uint256[2]memOffset){assembly{memOffset:=mload(0x40)mstore(0x40,add(memOffset,64))mstore(0x0,seed)mstore(0x20,timestamp)lethash:=keccak256(0,64)functionshiftR(value,offset)->result{result:=div(value,exp(2,offset))}functionprocessSide(fatherSrc,motherSrc,rngSrc)->result{{{ifeq(and(rngSrc,0x1),0){lettemp:=fatherSrcfatherSrc:=motherSrcmotherSrc:=temp}rngSrc:=shiftR(rngSrc,1)}letmask:=0letcap:=0letcrossoverLen:=and(rngSrc,0x7f)rngSrc:=shiftR(rngSrc,7)letcrossoverPos:=crossoverLenletcrossoverPosLeading1:=1for{}and(lt(crossoverPos,256),lt(cap,4)){crossoverLen:=and(rngSrc,0x7f)rngSrc:=shiftR(rngSrc,7)crossoverPos:=add(crossoverPos,crossoverLen)cap:=add(cap,1)}{mask:=sub(crossoverPosLeading1,1)crossoverPosLeading1:=mul(1,exp(2,crossoverPos))mask:=xor(mask,sub(crossoverPosLeading1,1))result:=or(result,and(mask,fatherSrc))lettemp:=fatherSrcfatherSrc:=motherSrcmotherSrc:=temp}mask:=not(sub(crossoverPosLeading1,1))result:=or(result,and(mask,fatherSrc))mstore(0x0,rngSrc)mstore(0x20,0x434f4c4c454354205045504553204f4e2043525950544f50455045532e494f21)letmutations:=and(and(and(keccak256(0,32),keccak256(1,33)),and(keccak256(2,34),keccak256(3,35))),keccak256(0,36))result:=xor(result,mutations)}}{letrelativeFatherSideLoc:=mul(and(hash,0x1),0x20)letrelativeMotherSideLoc:=mul(and(hash,0x2),0x10)hash:=div(hash,4)mstore(memOffset,processSide(mload(add(father,relativeFatherSideLoc)),mload(add(mother,relativeMotherSideLoc)),hash))relativeFatherSideLoc:=xor(relativeFatherSideLoc,0x20)relativeMotherSideLoc:=xor(relativeMotherSideLoc,0x20)mstore(0x0,seed)mstore(0x20,not(timestamp))hash:=keccak256(0,64)mstore(add(memOffset,0x20),processSide(mload(add(father,relativeFatherSideLoc)),mload(add(mother,relativeMotherSideLoc)),hash))}}}"
    },
    {
      "name": "SOLIDITY_SHOULD_NOT_BE_VIEW",
      "patternId": "189abf",
      "severity": 1,
      "line": 1499,
      "column": 4,
      "content": "functionisContract(address_address)internalviewreturns(bool){uintsize;assembly{size:=extcodesize(_address)}returnsize>0;}"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 1467,
      "column": 85,
      "content": "bytes_data"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 27,
      "column": 8,
      "content": "assembly{memOffset:=mload(0x40)mstore(0x40,add(memOffset,64))mstore(0x0,seed)mstore(0x20,timestamp)lethash:=keccak256(0,64)functionshiftR(value,offset)->result{result:=div(value,exp(2,offset))}functionprocessSide(fatherSrc,motherSrc,rngSrc)->result{{{ifeq(and(rngSrc,0x1),0){lettemp:=fatherSrcfatherSrc:=motherSrcmotherSrc:=temp}rngSrc:=shiftR(rngSrc,1)}letmask:=0letcap:=0letcrossoverLen:=and(rngSrc,0x7f)rngSrc:=shiftR(rngSrc,7)letcrossoverPos:=crossoverLenletcrossoverPosLeading1:=1for{}and(lt(crossoverPos,256),lt(cap,4)){crossoverLen:=and(rngSrc,0x7f)rngSrc:=shiftR(rngSrc,7)crossoverPos:=add(crossoverPos,crossoverLen)cap:=add(cap,1)}{mask:=sub(crossoverPosLeading1,1)crossoverPosLeading1:=mul(1,exp(2,crossoverPos))mask:=xor(mask,sub(crossoverPosLeading1,1))result:=or(result,and(mask,fatherSrc))lettemp:=fatherSrcfatherSrc:=motherSrcmotherSrc:=temp}mask:=not(sub(crossoverPosLeading1,1))result:=or(result,and(mask,fatherSrc))mstore(0x0,rngSrc)mstore(0x20,0x434f4c4c454354205045504553204f4e2043525950544f50455045532e494f21)letmutations:=and(and(and(keccak256(0,32),keccak256(1,33)),and(keccak256(2,34),keccak256(3,35))),keccak256(0,36))result:=xor(result,mutations)}}{letrelativeFatherSideLoc:=mul(and(hash,0x1),0x20)letrelativeMotherSideLoc:=mul(and(hash,0x2),0x10)hash:=div(hash,4)mstore(memOffset,processSide(mload(add(father,relativeFatherSideLoc)),mload(add(mother,relativeMotherSideLoc)),hash))relativeFatherSideLoc:=xor(relativeFatherSideLoc,0x20)relativeMotherSideLoc:=xor(relativeMotherSideLoc,0x20)mstore(0x0,seed)mstore(0x20,not(timestamp))hash:=keccak256(0,64)mstore(add(memOffset,0x20),processSide(mload(add(father,relativeFatherSideLoc)),mload(add(mother,relativeMotherSideLoc)),hash))}}"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 296,
      "column": 8,
      "content": "assembly{memOffset:=mload(0x40)mstore(0x40,add(memOffset,64))mstore(0x0,seed)mstore(0x20,0x434f4c4c454354205045504553204f4e2043525950544f50455045532e494f21){lethash:=keccak256(0,64)mstore(memOffset,hash)hash:=keccak256(0,32)mstore(add(memOffset,32),hash)}}"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 1531,
      "column": 2,
      "content": "mapping(address=>uint256)balances;"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 1533,
      "column": 2,
      "content": "uint256totalSupply_;"
    }
  ]
}