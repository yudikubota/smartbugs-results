/unique_chucks/2/0xcbd49182346421d3b410b04aeb1789346da6ce43.sol
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 41
column: 8
content: newOwner=address(0)

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 62
column: 8
content: newOwner=address(0)

ruleId: SOLIDITY_ARRAY_LENGTH_MANIPULATION
patternId: 872bdd
severity: 1
line: 319
column: 8
content: lockupInfo[_holder].length-=1

ruleId: SOLIDITY_ERC20_APPROVE
patternId: af782c
severity: 2
line: 267
column: 4
content: functionapprove(address_spender,uint256_value)publicwhenNotPausedreturns(bool){allowed[msg.sender][_spender]=_value;emitApproval(msg.sender,_spender,_value);returntrue;}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 209
column: 8
content: for(uint256i=0;i<_toList.length;i++){transfer(_toList[i],_valueList[i]);}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 221
column: 8
content: for(uint256i=0;i<_toList.length;i++){distribute(_toList[i],_valueList[i]);lockupAsTermOfMonth(_toList[i],_dateIndex[i],_valueList[i],_termOfMonthList[i]);}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 233
column: 12
content: for(uint256idx=0;idx<lockupInfo[_holder].length;idx++){lockedBalance=lockedBalance.add(lockupInfo[_holder][idx].lockupBalance);}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 243
column: 12
content: for(uint256idx=0;idx<lockupInfo[_holder].length;idx++){if(lockupInfo[_holder][idx].releaseTime<=now){unlockedBalance=unlockedBalance.add(lockupInfo[_holder][idx].lockupBalance);}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 435
column: 8
content: for(uint256idx=0;idx<lockupInfo[_holder].length;idx++){if(lockupInfo[_holder][idx].releaseTime<=now){if(_unlock(_holder,idx)){idx-=1;}}}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 47acc2
severity: 1
line: 59
column: 4
content: functionacceptOwnership()publiconlyNewOwnerreturns(bool){emitOwnershipTransferred(owner,newOwner);owner=newOwner;newOwner=address(0);}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 47acc2
severity: 1
line: 331
column: 4
content: functionunlock(address_holder,uint256_idx)publiconlyOwnerreturns(bool){_unlock(_holder,_idx);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 209
column: 8
content: for(uint256i=0;i<_toList.length;i++){transfer(_toList[i],_valueList[i]);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 221
column: 8
content: for(uint256i=0;i<_toList.length;i++){distribute(_toList[i],_valueList[i]);lockupAsTermOfMonth(_toList[i],_dateIndex[i],_valueList[i],_termOfMonthList[i]);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 233
column: 12
content: for(uint256idx=0;idx<lockupInfo[_holder].length;idx++){lockedBalance=lockedBalance.add(lockupInfo[_holder][idx].lockupBalance);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 243
column: 12
content: for(uint256idx=0;idx<lockupInfo[_holder].length;idx++){if(lockupInfo[_holder][idx].releaseTime<=now){unlockedBalance=unlockedBalance.add(lockupInfo[_holder][idx].lockupBalance);}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 435
column: 8
content: for(uint256idx=0;idx<lockupInfo[_holder].length;idx++){if(lockupInfo[_holder][idx].releaseTime<=now){if(_unlock(_holder,idx)){idx-=1;}}}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: ^

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 205
column: 8
content: if(_toList.length!=_valueList.length){revert();}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 217
column: 8
content: if((_toList.length!=_valueList.length)||(_valueList.length!=_termOfMonthList.length)){revert();}

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 107
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 353
column: 78
content: (bool,uint256,uint256,uint256,uint256)

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 165
column: 8
content: assembly{letptr:=mload(0x40)calldatacopy(ptr,0,calldatasize)letresult:=delegatecall(gas,impl,ptr,calldatasize,0,0)letsize:=returndatasizereturndatacopy(ptr,0,size)switchresultcase0{revert(ptr,size)}default{return(ptr,size)}}

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 130
column: 4
content: addressimplementation;

SOLIDITY_VISIBILITY :1
SOLIDITY_SAFEMATH :1
SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_ARRAY_LENGTH_MANIPULATION :1
SOLIDITY_REVERT_REQUIRE :2
SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN :2
SOLIDITY_EXTRA_GAS_IN_LOOPS :5
SOLIDITY_ADDRESS_HARDCODED :2
SOLIDITY_GAS_LIMIT_IN_LOOPS :5
SOLIDITY_USING_INLINE_ASSEMBLY :1
SOLIDITY_SHOULD_RETURN_STRUCT :1
SOLIDITY_ERC20_APPROVE :1