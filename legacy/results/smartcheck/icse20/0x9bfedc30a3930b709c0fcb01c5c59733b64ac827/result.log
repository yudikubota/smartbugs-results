/unique_chucks/7/0x9bfedc30a3930b709c0fcb01c5c59733b64ac827.sol
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 326
column: 4
content: owner=address(0)

ruleId: SOLIDITY_ERC20_APPROVE
patternId: af782c
severity: 2
line: 208
column: 2
content: functionapprove(address_spender,uint256_value)publicreturns(bool){allowed[msg.sender][_spender]=_value;emitApproval(msg.sender,_spender,_value);returntrue;}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 573
column: 8
content: for(uint256i=0;i<lockReason[_of].length;i++){amount=amount.add(tokensLocked(_of,lockReason[_of][i]));}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 619
column: 8
content: for(uint256i=0;i<lockReason[_of].length;i++){lockedTokens=tokensUnlockable(_of,lockReason[_of][i]);if(lockedTokens>0){unlockableTokens=unlockableTokens.add(lockedTokens);locked[_of][lockReason[_of][i]].claimed=true;emitUnlocked(_of,lockReason[_of][i],lockedTokens);}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 637
column: 8
content: for(uint256i=0;i<lockReason[_of].length;i++){unlockableTokens=unlockableTokens.add(tokensUnlockable(_of,lockReason[_of][i]));}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 573
column: 8
content: for(uint256i=0;i<lockReason[_of].length;i++){amount=amount.add(tokensLocked(_of,lockReason[_of][i]));}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 619
column: 8
content: for(uint256i=0;i<lockReason[_of].length;i++){lockedTokens=tokensUnlockable(_of,lockReason[_of][i]);if(lockedTokens>0){unlockableTokens=unlockableTokens.add(lockedTokens);locked[_of][lockReason[_of][i]].claimed=true;emitUnlocked(_of,lockReason[_of][i],lockedTokens);}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 637
column: 8
content: for(uint256i=0;i<lockReason[_of].length;i++){unlockableTokens=unlockableTokens.add(tokensUnlockable(_of,lockReason[_of][i]));}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 4
column: 16
content: ^

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 22
column: 16
content: ^

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 78
column: 16
content: ^

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 130
column: 16
content: ^

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 157
column: 16
content: ^

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 284
column: 16
content: ^

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 350
column: 16
content: ^

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 477
column: 16
content: ^

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 88
column: 2
content: usingSafeMathforuint256;

SOLIDITY_SAFEMATH :1
SOLIDITY_PRAGMAS_VERSION :8
SOLIDITY_EXTRA_GAS_IN_LOOPS :3
SOLIDITY_ADDRESS_HARDCODED :1
SOLIDITY_GAS_LIMIT_IN_LOOPS :3
SOLIDITY_ERC20_APPROVE :1