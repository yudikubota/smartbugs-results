/unique_chucks/14/0x29c317dccc79ef77ef04bb7e9a852926050bc92d.sol
line 74:28 mismatched input 'payable' expecting {',', ')'}
line 74:42 no viable alternative at input '_owner,'
line 74:42 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 74:56 mismatched input ')' expecting {';', '='}
line 74:78 mismatched input ';' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 158:16 extraneous input 'payable' expecting {',', ')'}
line 158:36 no viable alternative at input '_parentToken,'
line 158:36 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 159:33 mismatched input ',' expecting {';', '='}
line 160:15 extraneous input 'memory' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 160:32 mismatched input ',' expecting {';', '='}
line 161:27 mismatched input ',' expecting {';', '='}
line 162:15 extraneous input 'memory' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 162:34 mismatched input ',' expecting {';', '='}
line 164:4 mismatched input ')' expecting {';', '='}
line 165:21 extraneous input '=' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 165:41 mismatched input '(' expecting {';', '='}
line 165:56 extraneous input ';' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 167:17 extraneous input '=' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 168:15 extraneous input '=' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 169:20 extraneous input '=' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 169:33 mismatched input '(' expecting {';', '='}
line 169:47 extraneous input ';' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 171:25 extraneous input '=' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 172:22 extraneous input '=' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 172:29 mismatched input '.' expecting {';', '='}
line 172:36 mismatched input ';' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 180:4 extraneous input 'uint' expecting {<EOF>, 'pragma', 'import', 'contract', 'library', 'interface'}
line 638:16 mismatched input 'payable' expecting {',', ')'}
line 638:36 no viable alternative at input '_parentToken,'
line 638:36 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 639:27 mismatched input ',' expecting {';', '='}
line 640:15 extraneous input 'memory' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 640:32 mismatched input ',' expecting {';', '='}
line 641:27 mismatched input ',' expecting {';', '='}
line 642:15 extraneous input 'memory' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 642:34 mismatched input ',' expecting {';', '='}
line 644:4 mismatched input ')' expecting {';', '='}
line 644:35 extraneous input '{' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 645:20 extraneous input 'newToken' expecting {';', '='}
line 655:33 extraneous input '(' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 655:37 mismatched input '.' expecting {';', '='}
line 655:44 mismatched input ')' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 656:23 mismatched input ';' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 658:2 extraneous input '}' expecting {<EOF>, 'pragma', 'import', 'contract', 'library', 'interface'}
line 668:12 extraneous input 'payable' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 672:16 extraneous input 'payable' expecting {',', ')'}
line 672:36 no viable alternative at input '_parentToken,'
line 672:36 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 673:33 mismatched input ',' expecting {';', '='}
line 674:15 extraneous input 'memory' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 674:32 mismatched input ',' expecting {';', '='}
line 675:27 mismatched input ',' expecting {';', '='}
line 676:15 extraneous input 'memory' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 676:34 mismatched input ',' expecting {';', '='}
line 677:30 mismatched input ',' expecting {';', '='}
line 678:16 extraneous input 'payable' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 679:4 mismatched input ')' expecting {';', '='}
line 679:24 extraneous input '(' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 680:21 mismatched input ',' expecting {';', '='}
line 681:20 extraneous input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 682:28 mismatched input ',' expecting {';', '='}
line 683:18 extraneous input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 684:21 mismatched input ',' expecting {';', '='}
line 685:20 extraneous input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 687:4 mismatched input ')' expecting {';', '='}
line 688:19 extraneous input '=' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 691:4 extraneous input 'function' expecting {<EOF>, 'pragma', 'import', 'contract', 'library', 'interface'}
line 712:16 mismatched input 'payable' expecting {',', ')'}
line 712:36 no viable alternative at input '_parentToken,'
line 712:36 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 713:27 mismatched input ',' expecting {';', '='}
line 714:15 extraneous input 'memory' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 714:32 mismatched input ',' expecting {';', '='}
line 715:27 mismatched input ',' expecting {';', '='}
line 716:15 extraneous input 'memory' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 716:34 mismatched input ',' expecting {';', '='}
line 718:4 mismatched input ')' expecting {';', '='}
line 718:47 extraneous input '{' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 719:32 extraneous input 'newToken' expecting {';', '='}
line 730:33 extraneous input '(' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 730:37 mismatched input '.' expecting {';', '='}
line 730:44 mismatched input ')' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 731:23 mismatched input ';' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 733:0 extraneous input '}' expecting {<EOF>, 'pragma', 'import', 'contract', 'library', 'interface'}
line 791:12 extraneous input 'payable' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 803:47 extraneous input 'payable' expecting {',', ')'}
line 803:67 no viable alternative at input '_nectarToken)'
line 803:67 extraneous input ')' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 803:76 extraneous input '{' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 805:20 extraneous input '=' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 806:27 mismatched input '=' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 814:4 extraneous input 'function' expecting {<EOF>, 'pragma', 'import', 'contract', 'library', 'interface'}
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: adc165
severity: 1
line: 767
column: 43
content: 0xCc80C051057B774cD75067Dc48f8987C4Eb97A5e

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: adc165
severity: 1
line: 768
column: 44
content: 0x8936131A81F29205EeDDec486f401A8A0aFAb15A

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 47
column: 0
content: contractTokenController{functionproxyPayment(address_owner)publicpayablereturns(bool);functiononTransfer(address_from,address_to,uint_amount)publicreturns(bool);functiononApprove(address_owner,address_spender,uint_amount)publicreturns(bool);functiononBurn(addresspayable_owner,uint_amount)publicreturns(bool);}

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 88
column: 0
content: contractMiniMeTokenisControlled{stringpublicname;uint8publicdecimals;stringpublicsymbol;stringpublicversion='EFX_0.1';structCheckpoint{uint128fromBlock;uint128value;}MiniMeTokenpublicparentToken;uintpublicparentSnapShotBlock;uintpubliccreationBlock;mapping(address=>Checkpoint[])balances;mapping(address=>mapping(address=>uint256))allowed;Checkpoint[]totalSupplyHistory;boolpublictransfersEnabled;Checkpoint[]totalPledgedFeesHistory;MiniMeTokenFactorypublictokenFactory;constructor(address_tokenFactory,address<missing ')'>payable_parentToken,uint_parentSnapShotBlock,stringmemory_tokenName,uint8_decimalUnits,stringmemory_tokenSymbol,bool_transfersEnabled)public{tokenFactory=MiniMeTokenFactory(_tokenFactory);name=_tokenName;decimals=_decimalUnits;symbol=_tokenSymbol;parentToken=MiniMeToken(_parentToken);parentSnapShotBlock=_parentSnapShotBlock;transfersEnabled=_transfersEnabled;creationBlock=block.number;}

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 625
column: 0
content: contractMiniMeTokenFactory{functioncreateCloneToken(addresspayable_parentToken,uint_snapshotBlock,stringmemory_tokenName,uint8_decimalUnits,stringmemory_tokenSymbol,bool_transfersEnabled)publicreturns(MiniMeToken){MiniMeTokennewToken=newMiniMeToken(address(this),_parentToken,_snapshotBlock,_tokenName,_decimalUnits,_tokenSymbol,_transfersEnabled);newToken.changeController(msg.sender);returnnewToken;}

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 666
column: 0
content: contractDestructibleMiniMeTokenisMiniMeToken{addresspayablepublicterminator;constructor(address_tokenFactory,address<missing ')'>payable_parentToken,uint_parentSnapShotBlock,stringmemory_tokenName,uint8_decimalUnits,stringmemory_tokenSymbol,bool_transfersEnabled,addresspayable_terminator)publicMiniMeToken(_tokenFactory,_parentToken,_parentSnapShotBlock,_tokenName,_decimalUnits,_tokenSymbol,_transfersEnabled){terminator=_terminator;}

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 699
column: 0
content: contractDestructibleMiniMeTokenFactory{functioncreateDestructibleCloneToken(addresspayable_parentToken,uint_snapshotBlock,stringmemory_tokenName,uint8_decimalUnits,stringmemory_tokenSymbol,bool_transfersEnabled)publicreturns(DestructibleMiniMeToken){DestructibleMiniMeTokennewToken=newDestructibleMiniMeToken(address(this),_parentToken,_snapshotBlock,_tokenName,_decimalUnits,_tokenSymbol,_transfersEnabled,msg.sender);newToken.changeController(msg.sender);returnnewToken;}

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 765
column: 0
content: contractTokenListingManagerisOwnable{addresspublicconstantNECTAR_TOKEN=0xCc80C051057B774cD75067Dc48f8987C4Eb97A5e;addresspublicconstantTOKEN_FACTORY=0x8936131A81F29205EeDDec486f401A8A0aFAb15A;uintpublicconstantMAX_CANDIDATES=20;structTokenProposal{address[]consideredTokens;uintstartBlock;uintstartTime;uintduration;DestructibleMiniMeTokenvotingToken;uint[]yesVotes;uintcriteria;uintextraData;boolconcluded;mapping(address=>mapping(address=>uint256))votesForToken;}TokenProposal[]publictokenBatches;DestructibleMiniMeTokenFactorypublictokenFactory;addresspayablepublicnectarToken;mapping(address=>bool)publicadmins;mapping(address=>bool)publicisWinner;mapping(address=>uint256)publicwinningVotes;mapping(address=>uint)publicproposalWhenTokenWon;modifieronlyAdmins(){require(isAdmin(msg.sender));_;}constructor(address_tokenFactory,address<missing ')'>payable_nectarToken)public{tokenFactory=DestructibleMiniMeTokenFactory(_tokenFactory);nectarToken=_nectarToken;admins[msg.sender]=true;}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: ^

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 74
column: 4
content: functiononBurn(addresspayable

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 156
column: 4
content: constructor(address_tokenFactory,address<missing ')'>payable

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 637
column: 4
content: functioncreateCloneToken(addresspayable

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 670
column: 4
content: constructor(address_tokenFactory,address<missing ')'>payable

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 711
column: 4
content: functioncreateDestructibleCloneToken(addresspayable

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 803
column: 4
content: constructor(address_tokenFactory,address<missing ')'>payable

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 74
column: 36
content: _owner,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 74
column: 44
content: uint_amount)publicreturns

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 74
column: 72
content: (bool);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 122
column: 4
content: mapping(address=>Checkpoint[])balances;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 125
column: 4
content: mapping(address=>mapping(address=>uint256))allowed;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 128
column: 4
content: Checkpoint[]totalSupplyHistory;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 134
column: 4
content: Checkpoint[]totalPledgedFeesHistory;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 158
column: 24
content: _parentToken,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 159
column: 8
content: uint_parentSnapShotBlock,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 160
column: 8
content: stringmemory_tokenName,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 161
column: 8
content: uint8_decimalUnits,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 162
column: 8
content: stringmemory_tokenSymbol,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 163
column: 8
content: bool_transfersEnabled)public{

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 165
column: 8
content: tokenFactory=MiniMeTokenFactory

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 165
column: 41
content: (_tokenFactory);name=_tokenName;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 167
column: 8
content: decimals=_decimalUnits;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 168
column: 8
content: symbol=_tokenSymbol;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 169
column: 8
content: parentToken=MiniMeToken

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 169
column: 33
content: (_parentToken);parentSnapShotBlock=_parentSnapShotBlock;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 171
column: 8
content: transfersEnabled=_transfersEnabled;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 172
column: 8
content: creationBlock=block.

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 172
column: 30
content: number;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 638
column: 24
content: _parentToken,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 639
column: 8
content: uint_snapshotBlock,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 640
column: 8
content: stringmemory_tokenName,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 641
column: 8
content: uint8_decimalUnits,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 642
column: 8
content: stringmemory_tokenSymbol,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 643
column: 8
content: bool_transfersEnabled)publicreturns

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 644
column: 21
content: (MiniMeToken){MiniMeTokennewToken=newMiniMeToken(address(this),_parentToken,_snapshotBlock,_tokenName,_decimalUnits,_tokenSymbol,_transfersEnabled);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 655
column: 8
content: newToken.changeController(msg.

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 655
column: 38
content: sender);return

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 656
column: 15
content: newToken;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 672
column: 24
content: _parentToken,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 673
column: 8
content: uint_parentSnapShotBlock,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 674
column: 8
content: stringmemory_tokenName,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 675
column: 8
content: uint8_decimalUnits,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 676
column: 8
content: stringmemory_tokenSymbol,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 677
column: 8
content: bool_transfersEnabled,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 678
column: 8
content: addresspayable_terminator)public

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 679
column: 13
content: MiniMeToken(_tokenFactory,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 681
column: 8
content: _parentToken,_parentSnapShotBlock,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 683
column: 8
content: _tokenName,_decimalUnits,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 685
column: 8
content: _tokenSymbol,_transfersEnabled){

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 688
column: 8
content: terminator=_terminator;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 712
column: 24
content: _parentToken,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 713
column: 8
content: uint_snapshotBlock,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 714
column: 8
content: stringmemory_tokenName,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 715
column: 8
content: uint8_decimalUnits,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 716
column: 8
content: stringmemory_tokenSymbol,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 717
column: 8
content: bool_transfersEnabled)publicreturns

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 718
column: 21
content: (DestructibleMiniMeToken){DestructibleMiniMeTokennewToken=newDestructibleMiniMeToken(address(this),_parentToken,_snapshotBlock,_tokenName,_decimalUnits,_tokenSymbol,_transfersEnabled,msg.sender);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 730
column: 8
content: newToken.changeController(msg.

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 730
column: 38
content: sender);return

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 731
column: 15
content: newToken;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 805
column: 8
content: nectarToken=_nectarToken;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 806
column: 8
content: admins[msg.sender]=true;

SOLIDITY_VISIBILITY :62
SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_LOCKED_MONEY :6
SOLIDITY_ADDRESS_HARDCODED :2