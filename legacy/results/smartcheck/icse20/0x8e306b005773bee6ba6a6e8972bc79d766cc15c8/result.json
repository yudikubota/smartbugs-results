{
  "contract": "0x8e306b005773bee6ba6a6e8972bc79d766cc15c8",
  "tool": "smartcheck",
  "start": 1563474381.4552124,
  "end": 1563474389.5232828,
  "duration": 8.068070411682129,
  "analysis": [
    {
      "name": "SOLIDITY_EXTRA_GAS_IN_LOOPS",
      "patternId": "d3j11j",
      "severity": 1,
      "line": 79,
      "column": 4,
      "content": "for(uint256i=32;i<=_proof.length;i+=32){assembly{proofElement:=mload(add(_proof,i))}if(computedHash<proofElement){computedHash=keccak256(computedHash,proofElement);}else{computedHash=keccak256(proofElement,computedHash);}}"
    },
    {
      "name": "SOLIDITY_SAFEMATH",
      "patternId": "837cac",
      "severity": 1,
      "line": 104,
      "column": 4,
      "content": "usingSafeMathforuint256;"
    },
    {
      "name": "SOLIDITY_SHOULD_NOT_BE_PURE",
      "patternId": "11314f",
      "severity": 1,
      "line": 72,
      "column": 2,
      "content": "functionverifyProof(bytes_proof,bytes32_root,bytes32_leaf)publicpurereturns(bool){if(_proof.length%32!=0)returnfalse;bytes32proofElement;bytes32computedHash=_leaf;for(uint256i=32;i<=_proof.length;i+=32){assembly{proofElement:=mload(add(_proof,i))}if(computedHash<proofElement){computedHash=keccak256(computedHash,proofElement);}else{computedHash=keccak256(proofElement,computedHash);}}returncomputedHash==_root;}"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "901eae",
      "severity": 1,
      "line": 87,
      "column": 23,
      "content": "keccak256(computedHash,proofElement)"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "901eae",
      "severity": 1,
      "line": 90,
      "column": 23,
      "content": "keccak256(proofElement,computedHash)"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 72,
      "column": 23,
      "content": "bytes_proof"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 80,
      "column": 6,
      "content": "assembly{proofElement:=mload(add(_proof,i))}"
    }
  ]
}