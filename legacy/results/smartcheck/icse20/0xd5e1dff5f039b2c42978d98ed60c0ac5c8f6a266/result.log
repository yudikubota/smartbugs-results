/unique_chucks/14/0xd5e1dff5f039b2c42978d98ed60c0ac5c8f6a266.sol
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: adc165
severity: 1
line: 557
column: 50
content: 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: adc165
severity: 1
line: 559
column: 54
content: 0x818E6FECD516Ecc3849DAf6845e3EC868087B755

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: adc165
severity: 1
line: 1305
column: 42
content: 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 234
column: 48
content: 0x19

ruleId: SOLIDITY_ARRAY_LENGTH_MANIPULATION
patternId: 872bdd
severity: 1
line: 1032
column: 8
content: config.guardians.length--

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 574
column: 8
content: for(uint16i=0;i<tokens.length;i++){syncPrice(tokens[i]);}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 878
column: 8
content: for(uinti=0;i<_modules.length;i++){if(!modules[_modules[i]].exists){returnfalse;}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 917
column: 8
content: for(uinti=0;i<_methods.length;i++){authorised[_contract][_methods[i]]=true;}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 929
column: 8
content: for(uinti=0;i<_methods.length;i++){authorised[_contract][_methods[i]]=false;}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 952
column: 8
content: for(uinti=0;i<_methods.length;i++){if(!authorised[_contract][_methods[i]]){returnfalse;}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 1053
column: 8
content: for(uint256i=0;i<config.guardians.length;i++){guardians[i]=config.guardians[i];}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 1141
column: 8
content: for(uinti=0;i<_signatures.length;i++){whitelistedMethods[_wallet][_dapp][_contract][_signatures[i]]=_authorized;}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 1202
column: 8
content: for(uint256i=0;i<_modules.length;i++){require(authorised[_modules[i]]==false,"BW: module is already added");authorised[_modules[i]]=true;Module(_modules[i]).init(this);emitAuthorisedModule(_modules[i],true);}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 351
column: 4
content: functionfunctionPrefix(bytes_data)internalpurereturns(bytes4prefix){require(_data.length>=4,"RM: Invalid functionPrefix");assembly{prefix:=mload(add(_data,0x20))}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 574
column: 8
content: for(uint16i=0;i<tokens.length;i++){syncPrice(tokens[i]);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 878
column: 8
content: for(uinti=0;i<_modules.length;i++){if(!modules[_modules[i]].exists){returnfalse;}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 917
column: 8
content: for(uinti=0;i<_methods.length;i++){authorised[_contract][_methods[i]]=true;}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 929
column: 8
content: for(uinti=0;i<_methods.length;i++){authorised[_contract][_methods[i]]=false;}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 952
column: 8
content: for(uinti=0;i<_methods.length;i++){if(!authorised[_contract][_methods[i]]){returnfalse;}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 1053
column: 8
content: for(uint256i=0;i<config.guardians.length;i++){guardians[i]=config.guardians[i];}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 1141
column: 8
content: for(uinti=0;i<_signatures.length;i++){whitelistedMethods[_wallet][_dapp][_contract][_signatures[i]]=_authorized;}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 1202
column: 8
content: for(uint256i=0;i<_modules.length;i++){require(authorised[_modules[i]]==false,"BW: module is already added");authorised[_modules[i]]=true;Module(_modules[i]).init(this);emitAuthorisedModule(_modules[i],true);}

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 600
column: 0
content: contractKyberNetwork{functiongetExpectedRate(ERC20src,ERC20dest,uintsrcQty)publicviewreturns(uintexpectedRate,uintslippageRate);functiontrade(ERC20src,uintsrcAmount,ERC20dest,addressdestAddress,uintmaxDestAmount,uintminConversionRate,addresswalletId)publicpayablereturns(uint);}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: ^

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 370
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 554
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 1307
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 276
column: 4
content: functionrecoverSigner(bytes32_signedHash,bytes_signatures,uint_index)internalpurereturns(address){uint8v;bytes32r;bytes32s;assembly{r:=mload(add(_signatures,add(0x20,mul(0x41,_index))))s:=mload(add(_signatures,add(0x40,mul(0x41,_index))))v:=and(mload(add(_signatures,add(0x41,mul(0x41,_index)))),0xff)}require(v==27||v==28);returnecrecover(_signedHash,v,r,s);}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 337
column: 4
content: functionverifyData(address_wallet,bytes_data)privatepurereturns(bool){require(_data.length>=36,"RM: Invalid dataWallet");addressdataWallet;assembly{dataWallet:=mload(add(_data,0x24))}returndataWallet==_wallet;}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 351
column: 4
content: functionfunctionPrefix(bytes_data)internalpurereturns(bytes4prefix){require(_data.length>=4,"RM: Invalid functionPrefix");assembly{prefix:=mload(add(_data,0x20))}}

ruleId: SOLIDITY_SHOULD_NOT_BE_VIEW
patternId: 189abf
severity: 1
line: 1588
column: 4
content: functionvalidateSignatures(BaseWallet_wallet,bytes_data,bytes32_signHash,bytes_signatures)internalviewreturns(bool){addresssigner=recoverSigner(_signHash,_signatures,0);if(functionPrefix(_data)==CALL_CONTRACT_PREFIX){if(_data.length<68){returnfalse;}addressdapp;assembly{dapp:=mload(add(_data,0x44))}returndapp==signer;}else{returnisOwner(_wallet,signer);}}

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 91h3sa
severity: 1
line: 1270
column: 15
content: public

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 149
column: 55
content: bytes_data

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 159
column: 52
content: bytes_data

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 159
column: 84
content: bytes_signatures

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 222
column: 8
content: bytes_data

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 276
column: 48
content: bytes_signatures

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 337
column: 41
content: bytes_data

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 351
column: 28
content: bytes_data

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 573
column: 35
content: ERC20[]tokens

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1491
column: 8
content: bytes4[]_signatures

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1512
column: 78
content: bytes_data

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1547
column: 69
content: bytes_data

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1588
column: 52
content: bytes_data

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1588
column: 84
content: bytes_signatures

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1607
column: 55
content: bytes_data

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 284
column: 8
content: assembly{r:=mload(add(_signatures,add(0x20,mul(0x41,_index))))s:=mload(add(_signatures,add(0x40,mul(0x41,_index))))v:=and(mload(add(_signatures,add(0x41,mul(0x41,_index)))),0xff)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 341
column: 8
content: assembly{dataWallet:=mload(add(_data,0x24))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 354
column: 8
content: assembly{prefix:=mload(add(_data,0x20))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 1279
column: 16
content: assembly{calldatacopy(0,0,calldatasize())letresult:=staticcall(gas,module,0,calldatasize(),0,0)returndatacopy(0,0,returndatasize())switchresultcase0{revert(0,returndatasize())}default{return(0,returndatasize())}}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 1597
column: 12
content: assembly{dapp:=mload(add(_data,0x44))}

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1299
column: 4
content: bytes32constantNAME="DappManager";

SOLIDITY_VISIBILITY :1
SOLIDITY_SAFEMATH :3
SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_ARRAY_LENGTH_MANIPULATION :1
SOLIDITY_LOCKED_MONEY :1
SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN :1
SOLIDITY_EXTRA_GAS_IN_LOOPS :8
SOLIDITY_ADDRESS_HARDCODED :4
SOLIDITY_UPGRADE_TO_050 :15
SOLIDITY_GAS_LIMIT_IN_LOOPS :8
SOLIDITY_USING_INLINE_ASSEMBLY :5
SOLIDITY_SHOULD_NOT_BE_VIEW :1
SOLIDITY_SHOULD_NOT_BE_PURE :3