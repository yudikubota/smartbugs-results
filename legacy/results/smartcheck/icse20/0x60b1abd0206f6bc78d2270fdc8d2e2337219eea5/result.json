{
  "contract": "0x60b1abd0206f6bc78d2270fdc8d2e2337219eea5",
  "tool": "smartcheck",
  "start": 1563332709.2553332,
  "end": 1563332727.605006,
  "duration": 18.34967279434204,
  "analysis": [
    {
      "name": "SOLIDITY_DEPRECATED_CONSTRUCTIONS",
      "patternId": "28fa69",
      "severity": 1,
      "line": 4,
      "column": 2,
      "content": "functionmul(uint256a,uint256b)internalconstantreturns(uint256){uint256c=a*b;assert(a==0||c/a==b);returnc;}"
    },
    {
      "name": "SOLIDITY_DEPRECATED_CONSTRUCTIONS",
      "patternId": "28fa69",
      "severity": 1,
      "line": 10,
      "column": 2,
      "content": "functiondiv(uint256a,uint256b)internalconstantreturns(uint256){uint256c=a/b;returnc;}"
    },
    {
      "name": "SOLIDITY_DEPRECATED_CONSTRUCTIONS",
      "patternId": "28fa69",
      "severity": 1,
      "line": 17,
      "column": 2,
      "content": "functionsub(uint256a,uint256b)internalconstantreturns(uint256){assert(b<=a);returna-b;}"
    },
    {
      "name": "SOLIDITY_DEPRECATED_CONSTRUCTIONS",
      "patternId": "28fa69",
      "severity": 1,
      "line": 22,
      "column": 2,
      "content": "functionadd(uint256a,uint256b)internalconstantreturns(uint256){uint256c=a+b;assert(c>=a);returnc;}"
    },
    {
      "name": "SOLIDITY_DEPRECATED_CONSTRUCTIONS",
      "patternId": "28fa69",
      "severity": 1,
      "line": 63,
      "column": 3,
      "content": "functionqueryOwnerAddr()publicconstantreturns(address){returnowner;}"
    },
    {
      "name": "SOLIDITY_PRAGMAS_VERSION",
      "patternId": "23fc32",
      "severity": 1,
      "line": 1,
      "column": 16,
      "content": "^"
    },
    {
      "name": "SOLIDITY_SAFEMATH",
      "patternId": "837cac",
      "severity": 1,
      "line": 30,
      "column": 4,
      "content": "usingSafeMathforuint256;"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": 910067,
      "severity": 1,
      "line": 43,
      "column": 4,
      "content": "constructor(uint256initialSupply,stringtokenName,stringtokenSymbol,addressalphaAddr,addressbetaAddr){totalSupply=initialSupply*10**uint256(decimals);name=tokenName;symbol=tokenSymbol;betaAddress=betaAddr;alphaAddress=alphaAddr;owner=msg.sender;balanceOf[alphaAddress]=totalSupply;balanceOf[betaAddress]=0;}"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": 910067,
      "severity": 1,
      "line": 77,
      "column": 4,
      "content": "functiontransferToBetaAddress(addressto,uint256value)onlyGame{require(to==betaAddress);_transfer(msg.sender,to,value);}"
    }
  ]
}