/unique_chucks/25/0x882d80d3a191859d64477eb78cca46599307ec1c.sol
line 1244:27 extraneous input '_tokens' expecting {',', ')'}
line 1245:27 extraneous input '_quantities' expecting {',', ')'}
line 1245:38 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 1246:21 mismatched input ',' expecting {';', '='}
line 1248:4 mismatched input ')' expecting {';', '='}
line 1251:4 mismatched input '{' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 1256:15 extraneous input '(' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 1257:23 mismatched input '>' expecting {';', '='}
line 1262:15 extraneous input '(' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 1263:23 mismatched input '==' expecting {';', '='}
line 1263:44 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 1267:21 missing ')' at 'i'
line 1267:30 extraneous input '<' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 1267:45 mismatched input '++' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 1268:31 mismatched input '>' expecting ')'
line 1269:24 mismatched input '(' expecting {';', '='}
line 1270:30 mismatched input ',' expecting ')'
line 1271:31 mismatched input '[' expecting {';', '='}
line 1271:33 mismatched input ']' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 1272:25 extraneous input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 1274:16 extraneous input ')' expecting {';', '='}
line 1276:8 extraneous input '}' expecting {<EOF>, 'pragma', 'import', 'contract', 'library', 'interface'}
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 123
column: 8
content: _owner=address(0)

ruleId: SOLIDITY_ARRAY_LENGTH_MANIPULATION
patternId: 872bdd
severity: 1
line: 405
column: 8
content: A.length--

ruleId: SOLIDITY_ARRAY_LENGTH_MANIPULATION
patternId: 872bdd
severity: 1
line: 424
column: 8
content: A.length--

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 222
column: 8
content: for(uint256i=0;i<A.length;i++){newAddresses[i]=A[i];}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 289
column: 8
content: for(uint256i=0;i<A.length;i++){includeMap[i]=true;count++;}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 293
column: 8
content: for(uint256j=0;j<B.length;j++){if(!contains(A,B[j])){includeMap[A.length+j]=true;count++;}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 301
column: 8
content: for(uint256m=0;m<A.length;m++){if(includeMap[m]){newAddresses[k]=A[m];k++;}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 307
column: 8
content: for(uint256n=0;n<B.length;n++){if(includeMap[A.length+n]){newAddresses[k]=B[n];k++;}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 452
column: 8
content: for(uint256i=0;i<A.length-1;i++){for(uint256j=i+1;j<A.length;j++){if(A[i]==A[j]){returntrue;}}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 453
column: 12
content: for(uint256j=i+1;j<A.length;j++){if(A[i]==A[j]){returntrue;}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 472
column: 8
content: for(uint256i=0;i<A.length;i++){if(A[i]!=B[i]){returnfalse;}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 492
column: 8
content: for(uint256i=0;i<indexArray.length;i++){array[i]=A[indexArray[i]];}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 163
column: 8
content: for(uint256i=0;i<length;i++){if(A[i]==a){return(i,true);}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 205
column: 8
content: for(uint256i=0;i<aLength;i++){newAddresses[i]=A[i];}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 208
column: 8
content: for(uint256j=0;j<bLength;j++){newAddresses[aLength+j]=B[j];}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 222
column: 8
content: for(uint256i=0;i<A.length;i++){newAddresses[i]=A[i];}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 237
column: 8
content: for(uint256i=0;i<length;i++){A.push(B[i]);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 252
column: 8
content: for(uint256i=0;i<length;i++){if(contains(B,A[i])){includeMap[i]=true;newLength++;}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 260
column: 8
content: for(uint256k=0;k<length;k++){if(includeMap[k]){newAddresses[j]=A[k];j++;}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 289
column: 8
content: for(uint256i=0;i<A.length;i++){includeMap[i]=true;count++;}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 293
column: 8
content: for(uint256j=0;j<B.length;j++){if(!contains(A,B[j])){includeMap[A.length+j]=true;count++;}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 301
column: 8
content: for(uint256m=0;m<A.length;m++){if(includeMap[m]){newAddresses[k]=A[m];k++;}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 307
column: 8
content: for(uint256n=0;n<B.length;n++){if(includeMap[A.length+n]){newAddresses[k]=B[n];k++;}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 327
column: 8
content: for(uint256i=0;i<length;i++){addresse=A[i];if(!contains(B,e)){includeMap[i]=true;count++;}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 336
column: 8
content: for(uint256k=0;k<length;k++){if(includeMap[k]){newAddresses[j]=A[k];j++;}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 472
column: 8
content: for(uint256i=0;i<A.length;i++){if(A[i]!=B[i]){returnfalse;}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 492
column: 8
content: for(uint256i=0;i<indexArray.length;i++){array[i]=A[indexArray[i]];}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 601
column: 4
content: functionsetTimeLockPeriod(uint256_timeLockPeriod)externalonlyOwner{require(_timeLockPeriod>timeLockPeriod,"TimeLockUpgrade: New period must be greater than existing");timeLockPeriod=_timeLockPeriod;}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 3
column: 16
content: ^

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 71
column: 16
content: ^

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 79
column: 12
content: private

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 388
column: 8
content: if(!isIn){revert();}else{(address[]memory_A,)=pop(A,index);return_A;}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 398
column: 8
content: if(index>=length){revert("Error: index out of bounds");}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 416
column: 8
content: if(index>=length){revert("Error: index out of bounds");}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 435
column: 8
content: if(!isIn){revert("Error: entry not found");}else{sPopCheap(A,index);return;}

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 532
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 653
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 789
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 1183
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 1112
column: 4
content: functioncheckSuccess()privatepurereturns(bool){uint256returnValue=0;assembly{switchreturndatasizecase0x0{returnValue:=1}case0x20{returndatacopy(0x0,0x0,0x20)returnValue:=mload(0x0)}default{}}returnreturnValue==1;}

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 161
column: 74
content: (uint256,bool)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 185
column: 81
content: (uint256,bool)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 366
column: 16
content: (address[]memory,address)

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 1121
column: 8
content: assembly{switchreturndatasizecase0x0{returnValue:=1}case0x20{returndatacopy(0x0,0x0,0x20)returnValue:=mload(0x0)}default{}}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1243
column: 4
content: functionbatchTransfer(address[]calldata_tokens,uint256[]calldata<missing ')'>

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1245
column: 27
content: _quantities,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1246
column: 8
content: address_from,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1247
column: 8
content: address_to)external

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1250
column: 8
content: onlyAuthorized{

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1253
column: 8
content: uint256tokenCount=_tokens.length;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1256
column: 8
content: require(tokenCount>0,"TransferProxy.batchTransfer: Tokens must not be empty");

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1262
column: 8
content: require(tokenCount==

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1263
column: 26
content: _quantities.length,"TransferProxy.batchTransfer: Tokens and quantities lengths mismatch");for

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1267
column: 12
content: (uint256<missing ')'>i=0;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1267
column: 28
content: i<tokenCount;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1267
column: 44
content: i++){if

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1268
column: 15
content: (_quantities[i]>0){transfer

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1269
column: 24
content: (_tokens[i],_quantities[

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1271
column: 32
content: i],

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1272
column: 20
content: _from,_to);

SOLIDITY_VISIBILITY :16
SOLIDITY_OVERPOWERED_ROLE :1
SOLIDITY_PRAGMAS_VERSION :2
SOLIDITY_ARRAY_LENGTH_MANIPULATION :2
SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA :1
SOLIDITY_EXTRA_GAS_IN_LOOPS :9
SOLIDITY_ADDRESS_HARDCODED :1
SOLIDITY_GAS_LIMIT_IN_LOOPS :15
SOLIDITY_SHOULD_RETURN_STRUCT :3
SOLIDITY_SHOULD_NOT_BE_PURE :1
SOLIDITY_SAFEMATH :4
SOLIDITY_REVERT_REQUIRE :4
SOLIDITY_USING_INLINE_ASSEMBLY :1