/unique_contracts/0xc9ef94f7b7dd045cce2b0cab7ac3075d6b49f4b3.sol
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: c67a09
severity: 1
line: 100
column: 28
content: 0x0

ruleId: SOLIDITY_ARRAY_LENGTH_MANIPULATION
patternId: 872bdd
severity: 1
line: 35
column: 8
content: addresses.length=1

ruleId: SOLIDITY_ARRAY_LENGTH_MANIPULATION
patternId: 872bdd
severity: 1
line: 182
column: 12
content: addresses.length-=1

ruleId: SOLIDITY_DIV_MUL
patternId: 09hhh1
severity: 2
line: 98
column: 27
content: (msg.value/100)*3

ruleId: SOLIDITY_DIV_MUL
patternId: 09hhh1
severity: 2
line: 167
column: 15
content: depositors[addr].deposit/100*4*(now-depositors[addr].date)

ruleId: SOLIDITY_DIV_MUL
patternId: 09hhh1
severity: 2
line: 167
column: 15
content: depositors[addr].deposit/100*4

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 45
column: 8
content: for(uinti=0;i<_addr.length;i++){uintid=addresses.length;if(depositors[_addr[i]].deposit==0){addresses.push(_addr[i]);depAmount+=_deposit[i];}depositors[_addr[i]]=Depositor(id,_deposit[i],1,_date[i],_referrer[i]);emitDeposit(_addr[i],_deposit[i],_referrer[i]);}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 125
column: 8
content: for(uintidx=addresses.length-removal-1;idx>=1&&txs<MASS_LIMIT;idx--){addressaddr=addresses[idx];if(depositors[addr].date+20hours>now){continue;}amount=getDividendsAmount(addr);depositors[addr].date=now;if(address(this).balance<amount){pause=true;return;}if(addr.send(amount)){emitPayout(addr,amount,"Payout",0);}txs++;}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 170
column: 4
content: functiontransferBytestoAddress(bytesbyt)privatepurereturns(addressaddr){assembly{addr:=mload(add(byt,20))}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 45
column: 8
content: for(uinti=0;i<_addr.length;i++){uintid=addresses.length;if(depositors[_addr[i]].deposit==0){addresses.push(_addr[i]);depAmount+=_deposit[i];}depositors[_addr[i]]=Depositor(id,_deposit[i],1,_date[i],_referrer[i]);emitDeposit(_addr[i],_deposit[i],_referrer[i]);}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: ^

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 170
column: 4
content: functiontransferBytestoAddress(bytesbyt)privatepurereturns(addressaddr){assembly{addr:=mload(add(byt,20))}}

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 91h3sa
severity: 1
line: 58
column: 23
content: public

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 43
column: 27
content: address[]_addr

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 43
column: 44
content: uint[]_deposit

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 43
column: 61
content: uint[]_date

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 43
column: 75
content: address[]_referrer

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 170
column: 36
content: bytesbyt

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 171
column: 8
content: assembly{addr:=mload(add(byt,20))}

SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_ARRAY_LENGTH_MANIPULATION :2
SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN :1
SOLIDITY_EXTRA_GAS_IN_LOOPS :2
SOLIDITY_ADDRESS_HARDCODED :1
SOLIDITY_UPGRADE_TO_050 :6
SOLIDITY_GAS_LIMIT_IN_LOOPS :1
SOLIDITY_USING_INLINE_ASSEMBLY :1
SOLIDITY_DIV_MUL :3
SOLIDITY_SHOULD_NOT_BE_PURE :1