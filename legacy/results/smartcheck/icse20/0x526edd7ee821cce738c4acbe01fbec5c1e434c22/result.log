/unique_chucks/26/0x526edd7ee821cce738c4acbe01fbec5c1e434c22.sol
line 23:27 mismatched input 'payable' expecting {',', ')'}
line 23:43 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 23:60 extraneous input ')' expecting {';', '='}
line 65:46 extraneous input 'payable' expecting {',', ')'}
line 65:65 no viable alternative at input 'withdraw_to)'
line 65:65 extraneous input ')' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 65:80 mismatched input 'public' expecting {';', '='}
line 66:15 mismatched input '(' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 66:23 mismatched input '(' expecting ')'
line 66:29 extraneous input '.' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 66:38 mismatched input '>=' expecting {';', '='}
line 66:47 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 67:28 extraneous input '(' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 67:35 extraneous input ')' expecting {';', '='}
line 68:21 mismatched input '(' expecting {';', '='}
line 68:33 mismatched input ',' expecting ')'
line 68:41 extraneous input ')' expecting {';', '='}
line 70:0 extraneous input '}' expecting {<EOF>, 'pragma', 'import', 'contract', 'library', 'interface'}
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 3
column: 0
content: contractDepositContract{MainDepositContractpublic_main_contract;uint256public_user_id;constructor(uint256user_id)public{_user_id=user_id;_main_contract=MainDepositContract(msg.sender);}function()externalpayable{_main_contract.log_deposit.value(msg.value)(_user_id);}}

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 17
column: 0
content: contractMainDepositContract{mapping(uint256=>DepositContract)public_deposit_contracts;mapping(address=>bool)public_owners;address_management_address;eventDeposit(uint256_user_id,uint256_amount);eventWithdraw(addresspayable<missing ';'>_address,uint256_amount);modifier_onlyOwners(){require(_owners[msg.sender],'Sender is not an owner');_;}modifier_onlyManager(){require(_owners[msg.sender]||msg.sender==_management_address,'Sender is nether a manager nor owner');_;}constructor()public{_owners[msg.sender]=true;_management_address=msg.sender;}functionadd_owner(addressowner_address)_onlyOwnerspublic{require(!_owners[owner_address],'This address is already an owner');_owners[owner_address]=true;}functionremove_owner(addressowner_address)_onlyOwnerspublic{require(_owners[owner_address],'This address is not an owner');_owners[owner_address]=false;}functionset_management_address(addressmanagement_address)_onlyOwnerspublic{_management_address=management_address;}functioncreate_deposit_address(uint256user_id)_onlyManagerpublicreturns(DepositContractcreated_contract){DepositContractc=newDepositContract(user_id);_deposit_contracts[user_id]=c;returnc;}functionlog_deposit(uint256user_id)publicpayable{require(address(_deposit_contracts[user_id])==msg.sender,'Sender is not a deployed deposit contract');emitDeposit(user_id,msg.value);}functionwithdraw(uint256amount,address<missing ')'>payablewithdraw_to)_onlyManagerpublic{require(address<missing ';'>(this).balance>=amount,'Not enough balance');withdraw_to.transfer(amount);emitWithdraw(withdraw_to,amount);}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: ^

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 65
column: 4
content: functionwithdraw(uint256amount,address<missing ')'>payable

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 20
column: 4
content: address_management_address;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 23
column: 35
content: _address,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 23
column: 45
content: uint256_amount);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 65
column: 54
content: withdraw_to)_onlyManagerpublic{

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 66
column: 8
content: require

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 66
column: 15
content: (address<missing ';'>

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 66
column: 23
content: (this).balance>=

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 66
column: 41
content: amount,'Not enough balance');

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 67
column: 8
content: withdraw_to.transfer(amount);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 68
column: 8
content: emitWithdraw

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 68
column: 21
content: (withdraw_to,amount);

SOLIDITY_VISIBILITY :12
SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_LOCKED_MONEY :2