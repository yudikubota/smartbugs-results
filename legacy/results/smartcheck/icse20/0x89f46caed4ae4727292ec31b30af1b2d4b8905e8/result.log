/unique_chucks/13/0x89f46caed4ae4727292ec31b30af1b2d4b8905e8.sol
line 51:12 extraneous input 'payable' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'length', 'balance', 'memory', 'storage', 'emit', '_', 'revert', Identifier}
line 411:12 extraneous input 'payable' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'length', 'balance', 'memory', 'storage', 'emit', '_', 'revert', Identifier}
line 791:12 extraneous input 'payable' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'length', 'balance', 'memory', 'storage', 'emit', '_', 'revert', Identifier}
line 1162:14 extraneous input 'payable' expecting {',', ')'}
line 1162:29 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 1164:4 mismatched input ')' expecting {';', '='}
line 1166:20 extraneous input 'storage' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 1167:6 extraneous input '=' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 1167:9 mismatched input '.' expecting {';', '='}
line 1167:11 extraneous input ';' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 1169:9 extraneous input '=' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 1169:12 mismatched input '.' expecting {';', '='}
line 1169:17 extraneous input ';' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 1171:16 extraneous input '=' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 1171:19 mismatched input '.' expecting {';', '='}
line 1171:31 extraneous input ';' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 1173:10 extraneous input '=' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 1173:13 mismatched input '.' expecting {';', '='}
line 1173:19 mismatched input ';' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 1176:2 extraneous input 'function' expecting {<EOF>, 'pragma', 'import', 'contract', 'library', 'interface'}
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 727
column: 20
content: 0x5555

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 728
column: 13
content: 0x3333

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 728
column: 35
content: 0x3333

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 729
column: 25
content: 0x0f0f

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 730
column: 16
content: 0x0101

ruleId: SOLIDITY_DIV_MUL
patternId: 09hhh1
severity: 2
line: 453
column: 47
content: HANDLE_BET_COST*100/MIN_WIN_PERCENT*100

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 160
column: 2
content: functioncount(bytesmemoryb,bytesmemorysub)internalpurereturns(uinttimes){inti=index(b,sub,0);while(i!=-1){times++;i=index(b,sub,uint(i)+sub.length);}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 239
column: 6
content: for(uintk=0;k<len;k++){b[uint(i)+k]=newb;}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 435
column: 4
content: for(uinti=0;i<len;i++){if(symbols[sc.indexes[i]]!=symbol){returnfalse;}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: 17f23a
severity: 1
line: 162
column: 11
content: i!=-1

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: 17f23a
severity: 1
line: 233
column: 11
content: true

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 1027
column: 0
content: contractCasinoisAccessibility{usingPaymentLibforPaymentLib.Payment;usingRollGameLibforRollGameLib.Game;usingSlotGameLibforSlotGameLib.Game;bytes32privateconstantJACKPOT_LOG_MSG="casino.jackpot";bytes32privateconstantWITHDRAW_LOG_MSG="casino.withdraw";bytesprivateconstantJACKPOT_NONCE="jackpot";uintprivateconstantMIN_JACKPOT_MAGIC=3333;uintprivateconstantMAX_JACKPOT_MAGIC=333333333;SlotGameLib.Gamepublicslot;RollGameLib.Gamepublicroll;enumGame{Slot,Roll}uintpublicextraJackpot;uintpublicjackpotMagic;modifierslotBetsWasHandled(){require(slot.lockedInBets==0,"casino.slot: all bets should be handled");_;}eventLogPayment(addressindexedbeneficiary,uintamount,bytes32indexedmessage);eventLogFailedPayment(addressindexedbeneficiary,uintamount,bytes32indexedmessage);eventLogJactpot(addressindexedbeneficiary,uintamount,bytes32hostSeed,bytes32clientSeed,uintjackpotMagic);eventLogSlotNewBet(bytes32indexedhostSeedHash,addressindexedgambler,uintamount,addressindexedreferrer);eventLogSlotHandleBet(bytes32indexedhostSeedHash,addressindexedgambler,bytes32hostSeed,bytes32clientSeed,bytessymbols,uintmultiplierNum,uintmultiplierDen,uintamount,uintwinnings);eventLogSlotRefundBet(bytes32indexedhostSeedHash,addressindexedgambler,uintamount);eventLogRollNewBet(bytes32indexedhostSeedHash,uint8t,addressindexedgambler,uintamount,uintmask,uintrollUnder,addressindexedreferrer);eventLogRollRefundBet(bytes32indexedhostSeedHash,uint8t,addressindexedgambler,uintamount);eventLogRollHandleBet(bytes32indexedhostSeedHash,uint8t,addressindexedgambler,bytes32hostSeed,bytes32clientSeed,uintroll,uintmultiplierNum,uintmultiplierDen,uintamount,uintwinnings);constructor()public{jackpotMagic=MIN_JACKPOT_MAGIC;slot.minBetAmount=SlotGameLib.MinBetAmount();slot.maxBetAmount=SlotGameLib.MinBetAmount();roll.minBetAmount=RollGameLib.MinBetAmount();roll.maxBetAmount=RollGameLib.MinBetAmount();}function()externalpayable{}functionrollPlaceBet(RollGameLib.Typet,uint16mask,uint8rollUnder,addressreferrer,uintsigExpirationBlock,bytes32hostSeedHash,uint8v,bytes32r,bytes32s)externalpayable{roll.placeBet(t,mask,rollUnder,referrer,sigExpirationBlock,hostSeedHash,v,r,s);}functionrollBet(bytes32hostSeedHash)externalviewreturns(RollGameLib.Typet,uintamount,uintmask,uintrollUnder,uintblockNumber,addresspayablegambler,boolexist){RollGameLib.Betstorageb=roll.bets[hostSeedHash];t=b.t;amount=b.amount;mask=b.mask;rollUnder=b.rollUnder;blockNumber=b.blockNumber;gambler=b.gambler;exist=b.exist;}

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 444
column: 7
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 446
column: 7
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 447
column: 10
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 448
column: 10
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 449
column: 7
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 450
column: 7
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 451
column: 7
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 452
column: 7
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 453
column: 7
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 744
column: 7
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 745
column: 7
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 746
column: 7
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 747
column: 10
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 748
column: 10
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 749
column: 10
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 750
column: 10
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 751
column: 7
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 752
column: 7
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 753
column: 7
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 754
column: 7
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 1032
column: 10
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 1033
column: 10
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 1034
column: 8
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 1035
column: 7
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 1036
column: 7
content: private

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 404
column: 2
content: usingSafeMathforuint;

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 405
column: 2
content: usingSafeMathforuint128;

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 739
column: 2
content: usingSafeMathforuint;

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 740
column: 2
content: usingSafeMathforuint128;

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 74
column: 2
content: functionindex(bytesmemoryb,bytesmemorysubb,uintstart)internalpurereturns(int){uintlensubb=subb.length;uinthashsubb;uintptrb;assembly{hashsubb:=keccak256(add(subb,0x20),lensubb)ptrb:=add(b,0x20)}for(uintlenb=b.length;start<lenb;start++){if(start+lensubb>lenb){return-1;}boolfound;assembly{found:=eq(keccak256(add(ptrb,start),lensubb),hashsubb)}if(found){returnint(start);}}return-1;}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 168
column: 2
content: functionequals(bytesmemoryb,bytesmemorya)internalpurereturns(boolequal){if(b.length!=a.length){returnfalse;}uintlen=b.length;assembly{equal:=eq(keccak256(add(b,0x20),len),keccak256(add(a,0x20),len))}}

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 773
column: 50
content: (uint,uint)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 778
column: 55
content: (uint,uint)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 802
column: 12
content: (uintrnd,NumberLib.Numbermemorymultiplier)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 1156
column: 12
content: (RollGameLib.Typet,uintamount,uintmask,uintrollUnder,uintblockNumber,addresspayable

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 79
column: 4
content: assembly{hashsubb:=keccak256(add(subb,0x20),lensubb)ptrb:=add(b,0x20)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 89
column: 6
content: assembly{found:=eq(keccak256(add(ptrb,start),lensubb),hashsubb)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 175
column: 4
content: assembly{equal:=eq(keccak256(add(b,0x20),len),keccak256(add(a,0x20),len))}

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1162
column: 22
content: gambler,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1163
column: 6
content: boolexist){

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1166
column: 4
content: RollGameLib.Betstorageb=roll.bets[hostSeedHash];

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1167
column: 4
content: t=b.

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1167
column: 10
content: t;amount=b.amount;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1169
column: 4
content: mask=b.

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1169
column: 13
content: mask;rollUnder=b.rollUnder;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1171
column: 4
content: blockNumber=b.

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1171
column: 20
content: blockNumber;gambler=b.gambler;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1173
column: 4
content: exist=b.

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1173
column: 14
content: exist;

SOLIDITY_VISIBILITY :11
SOLIDITY_SAFEMATH :4
SOLIDITY_LOCKED_MONEY :1
SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN :1
SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA :25
SOLIDITY_ADDRESS_HARDCODED :5
SOLIDITY_GAS_LIMIT_IN_LOOPS :4
SOLIDITY_USING_INLINE_ASSEMBLY :3
SOLIDITY_DIV_MUL :1
SOLIDITY_SHOULD_RETURN_STRUCT :4
SOLIDITY_SHOULD_NOT_BE_PURE :2