/unique_chucks/19/0x688dde13bd594a9030feefe6fa39cb353b7351c7.sol
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: adc165
severity: 1
line: 92
column: 22
content: 0x657Eb3CE439CA61e58FF6Cb106df2e962C5e7890

ruleId: SOLIDITY_ERC20_APPROVE
patternId: af782c
severity: 2
line: 127
column: 4
content: functionapprove(address_spender,uint256_amount)publicreturns(boolsuccess){require(!lockstatus,"Token is locked now");require(_spender!=0x0,"Address can not be 0x0");require(balances[msg.sender]>=_amount,"Balance does not have enough tokens");require(!locked[msg.sender],"Sender address is locked");allowed[msg.sender][_spender]=_amount;emitApproval(msg.sender,_spender,_amount);returntrue;}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 234
column: 4
content: functionsetUpgradeAgent(addressagent)externalonlyOwner{require(agent!=0x0,"Upgrade agent can not be zero");require(totalUpgraded==0,"Token are upgrading");upgradeAgent=UpgradeAgent(agent);require(upgradeAgent.isUpgradeAgent(),"The address is not upgrade agent");require(upgradeAgent.oldAddress()==address(this),"This is not right agent");emitUpgradeAgentSet(upgradeAgent);}

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 56
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 91h3sa
severity: 1
line: 171
column: 16
content: public

SOLIDITY_SAFEMATH :1
SOLIDITY_OVERPOWERED_ROLE :1
SOLIDITY_ADDRESS_HARDCODED :1
SOLIDITY_UPGRADE_TO_050 :1
SOLIDITY_ERC20_APPROVE :1