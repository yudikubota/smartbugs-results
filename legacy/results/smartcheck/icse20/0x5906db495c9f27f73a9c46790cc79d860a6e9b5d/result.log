/unique_chucks/33/0x5906db495c9f27f73a9c46790cc79d860a6e9b5d.sol
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 699
column: 8
content: for(uinti=0;i<transactions.length;i++){if(transactions[i].sender==_address||transactions[i].receiver==_address)count++;}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 708
column: 8
content: for(uintj=0;j<transactions.length;j++){if(transactions[j].sender==_address||transactions[j].receiver==_address)transactionIDs[count++]=j;}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 55
column: 4
content: functioncreateDispute(uint_choices,bytesmemory_extraData)publicrequireArbitrationFee(_extraData)payablereturns(uintdisputeID){}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 65
column: 4
content: functionappealPeriod(uint_disputeID)publicviewreturns(uintstart,uintend){}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 699
column: 8
content: for(uinti=0;i<transactions.length;i++){if(transactions[i].sender==_address||transactions[i].receiver==_address)count++;}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 708
column: 8
content: for(uintj=0;j<transactions.length;j++){if(transactions[j].sender==_address||transactions[j].receiver==_address)transactionIDs[count++]=j;}

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 36
column: 0
content: contractArbitrator{enumDisputeStatus{Waiting,Appealable,Solved}modifierrequireArbitrationFee(bytesmemory_extraData){require(msg.value>=arbitrationCost(_extraData),"Not enough ETH to cover arbitration costs.");_;}modifierrequireAppealFee(uint_disputeID,bytesmemory_extraData){require(msg.value>=appealCost(_disputeID,_extraData),"Not enough ETH to cover appeal costs.");_;}eventDisputeCreation(uintindexed_disputeID,Arbitrableindexed_arbitrable);eventAppealPossible(uintindexed_disputeID,Arbitrableindexed_arbitrable);eventAppealDecision(uintindexed_disputeID,Arbitrableindexed_arbitrable);functioncreateDispute(uint_choices,bytesmemory_extraData)publicrequireArbitrationFee(_extraData)payablereturns(uintdisputeID){}functionarbitrationCost(bytesmemory_extraData)publicviewreturns(uintfee);functionappeal(uint_disputeID,bytesmemory_extraData)publicrequireAppealFee(_disputeID,_extraData)payable{emitAppealDecision(_disputeID,Arbitrable(msg.sender));}functionappealCost(uint_disputeID,bytesmemory_extraData)publicviewreturns(uintfee);functionappealPeriod(uint_disputeID)publicviewreturns(uintstart,uintend){}functiondisputeStatus(uint_disputeID)publicviewreturns(DisputeStatusstatus);functioncurrentRuling(uint_disputeID)publicviewreturns(uintruling);}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 112
column: 4
content: functionsetArbitrationPrice(uint_arbitrationPrice)publiconlyOwner{arbitrationPrice=_arbitrationPrice;}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: ^

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 286
column: 16
content: if(now-appealDisputes[_disputeID].rulingTime>timeOut)super._giveRuling(_disputeID,disputes[_disputeID].ruling);elserevert("Time out time has not passed yet.");

ruleId: SOLIDITY_UNCHECKED_CALL
patternId: f39eed
severity: 3
line: 163
column: 19
content: send(dispute.fee)

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 120
column: 29
content: bytes_extraData

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 129
column: 41
content: bytes_extraData

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 139
column: 42
content: bytes_extraData

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 224
column: 8
content: bytes_arbitratorExtraData

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 263
column: 37
content: bytes_extraData

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 305
column: 41
content: bytes_extraData

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 428
column: 8
content: bytes_arbitratorExtraData

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 445
column: 8
content: string_metaEvidence

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 613
column: 49
content: string_evidence

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 697
column: 79
content: uint[]transactionIDs

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 87
column: 4
content: uintarbitrationPrice;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 88
column: 4
content: uintconstantNOT_PAYABLE_VALUE=(2**256-2)/2;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 343
column: 4
content: uint8constantAMOUNT_OF_CHOICES=2;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 344
column: 4
content: uint8constantSENDER_WINS=1;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 345
column: 4
content: uint8constantRECEIVER_WINS=2;

SOLIDITY_VISIBILITY :5
SOLIDITY_OVERPOWERED_ROLE :1
SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_REVERT_REQUIRE :1
SOLIDITY_LOCKED_MONEY :1
SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN :2
SOLIDITY_EXTRA_GAS_IN_LOOPS :2
SOLIDITY_UPGRADE_TO_050 :10
SOLIDITY_GAS_LIMIT_IN_LOOPS :2
SOLIDITY_UNCHECKED_CALL :1