/unique_chucks/4/0xd79b3d20bf9e9d54c4da992fda0b52861fb67575.sol
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 1152
column: 31
content: 0x01

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 1157
column: 28
content: 0x01

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 3875
column: 55
content: 0x9f40b779

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 1596
column: 8
content: warriorToOwner[_tokenId]=address(0)

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 1616
column: 12
content: warriorToApproved[_tokenId]=address(0)

ruleId: SOLIDITY_ARRAY_LENGTH_MANIPULATION
patternId: 872bdd
severity: 1
line: 1608
column: 8
content: ownedTokens[_from].length--

ruleId: SOLIDITY_DIV_MUL
patternId: 09hhh1
severity: 2
line: 703
column: 21
content: int256(BONUS_DATA%(100**(_setBonusIndex+1))/(100**_setBonusIndex))*PRECISION

ruleId: SOLIDITY_DIV_MUL
patternId: 09hhh1
severity: 2
line: 707
column: 21
content: int256(BONUS_DATA%(100**(_setBonusIndex+1))/(100**_setBonusIndex))*PRECISION

ruleId: SOLIDITY_DIV_MUL
patternId: 09hhh1
severity: 2
line: 710
column: 21
content: int256(BONUS_DATA%(100**(_setBonusIndex+1))/(100**_setBonusIndex))*PRECISION

ruleId: SOLIDITY_DIV_MUL
patternId: 09hhh1
severity: 2
line: 714
column: 21
content: int256(BONUS_DATA%(100**(_setBonusIndex+1))/(100**_setBonusIndex))*PRECISION

ruleId: SOLIDITY_DIV_MUL
patternId: 09hhh1
severity: 2
line: 718
column: 21
content: int256(BONUS_DATA%(100**(_setBonusIndex+1))/(100**_setBonusIndex))*PRECISION

ruleId: SOLIDITY_DIV_MUL
patternId: 09hhh1
severity: 2
line: 1274
column: 22
content: uint256(_value)*(LEVEL_BONUSES%(100**(_level+1))/(100**_level))

ruleId: SOLIDITY_DIV_MUL
patternId: 09hhh1
severity: 2
line: 1300
column: 10
content: _applyLevelBonus(damage,_unpackLevelValue(packedWarrior))*(PRECISION+crit*critMultiplier/(100*PRECISION))

ruleId: SOLIDITY_DIV_MUL
patternId: 09hhh1
severity: 2
line: 1355
column: 21
content: _pvpCycle*_pvpInterval/_expandInterval*25

ruleId: SOLIDITY_DIV_MUL
patternId: 09hhh1
severity: 2
line: 3859
column: 40
content: totalPriceChange*int256(_secondsPassed/PRICE_CHANGE_TIME_STEP*PRICE_CHANGE_TIME_STEP)

ruleId: SOLIDITY_DIV_MUL
patternId: 09hhh1
severity: 2
line: 3859
column: 66
content: _secondsPassed/PRICE_CHANGE_TIME_STEP*PRICE_CHANGE_TIME_STEP

ruleId: SOLIDITY_ERC20_APPROVE
patternId: af782c
severity: 2
line: 1762
column: 4
content: functionapprove(address_to,uint256_tokenId)externalwhenNotPaused{require(_owns(msg.sender,_tokenId));require(warriors[_tokenId].action==IDLE);_approve(_tokenId,_to);Approval(msg.sender,_to,_tokenId);}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 2281
column: 8
content: for(uint256i=0;i<GROUP_SIZE;i++){warriorId=_warriorIds[i];tournamentData[i]=_packPVPData(warriorId,warriors[warriorId]);}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 2295
column: 8
content: for(uint256i=0;i<GROUP_SIZE;i++){warriors[_warriorIds[i]].action=uint16(TOURNAMENT_BATTLE);}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 2319
column: 8
content: for(uint256i=0;i<GROUP_SIZE;i++){require(_isReadyToTournament(warriors[_warriorIds[i]]));}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 2341
column: 8
content: for(uint256i=0;i<GROUP_SIZE;i++){warriors[CryptoUtils._unpackWarriorId(warriorIds,i)].action=uint16(IDLE);}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 2553
column: 8
content: for(uint256i=0;i<_warriorIds.length;i++){_setWarriorData(warriorsData,warriors[_warriorIds[i]],i*stepSize);}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 3983
column: 8
content: for(uint32i=0;i<tokenIds.length;i++){tokenId=tokenIds[i];AuctionBase.Auctionstorageauction=tokenIdToAuction[tokenId];require(_isOnAuction(auction));_setTokenData(auctionData,auction,tokenId,i*stepSize);}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 1106
column: 4
content: function_computeCombinedParams(uint256[]memorypackedWarriors)internalpurereturns(int256totalHp,int256totalDamage,int256maxArmor,int256maxDodge,int256maxPenetration){uint256length=packedWarriors.length;int256hp;int256armor;int256dodge;int256penetration;uint256warriorAuras;uint256petAuras;(warriorAuras,petAuras)=_getAurasData(packedWarriors);uint256packedWarrior;for(uint256i=0;i<length;i++){packedWarrior=packedWarriors[i];totalDamage+=getDamage(packedWarrior,warriorAuras,petAuras);penetration=getPenetration(packedWarrior,warriorAuras,petAuras);maxPenetration=maxPenetration>penetration?maxPenetration:penetration;(hp,armor,dodge)=_getProtectionParams(packedWarrior,warriorAuras,petAuras);totalHp+=hp;maxArmor=maxArmor>armor?maxArmor:armor;maxDodge=maxDodge>dodge?maxDodge:dodge;}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 1063
column: 8
content: for(uint256i=0;i<length;i++){packedIds+=(MAX_ID_SIZE**i)*_unpackIdValue(packedWarriors[i]);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 1120
column: 8
content: for(uint256i=0;i<length;i++){packedWarrior=packedWarriors[i];totalDamage+=getDamage(packedWarrior,warriorAuras,petAuras);penetration=getPenetration(packedWarrior,warriorAuras,petAuras);maxPenetration=maxPenetration>penetration?maxPenetration:penetration;(hp,armor,dodge)=_getProtectionParams(packedWarrior,warriorAuras,petAuras);totalHp+=hp;maxArmor=maxArmor>armor?maxArmor:armor;maxDodge=maxDodge>dodge?maxDodge:dodge;}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 1141
column: 8
content: for(uint256i=0;i<length;i++){packedWarrior=packedWarriors[i];warriorAuras=enableAura(warriorAuras,(_unpackAuraValue(packedWarrior)));petAuras=enableAura(petAuras,(_getPetAura(_unpackPetData(_unpackPetValue(packedWarrior)))));}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 1182
column: 8
content: for(i=0;i<length;i++){(damage1,penetration1)=_unpackAttackParams(combinedWarriors[i]);while(results[i]<BATTLES_PER_CONTENDER_SUM){if(exp==0||exp>73){hash=uint256(keccak256(block.blockhash(_getTargetBlock(_targetBlock-i)),uint256(damage1)+now));exp=0;}randomIndex=(_random(i+1<length?i+1:i,length,hash,1000*10**exp,10**exp));result=getTournamentBattleResult(damage1,penetration1,combinedWarriors[i],combinedWarriors[randomIndex],hash%(1000*10**exp)/10**exp);results[result==1?i:randomIndex]+=101;results[result==1?randomIndex:i]+=100;if(results[randomIndex]>=BATTLES_PER_CONTENDER_SUM){if(randomIndex<length-1){_swapValues(combinedWarriors,results,randomIndex,length-1);}length--;}exp++;}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 1208
column: 8
content: for(i=0;i<length;i++){results[i]=results[i]%100;}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 1416
column: 8
content: for(index=0;index<matchingCount;index++){warriorId=matchingIds[index];rating1=int256(_unpackRatingValue(warriorId));ratingRange=int256(getRatingRange(_unpackCycleValue(warriorId)+_skipCycles,_pvpInterval,_expandInterval));if(index>pairIndex&&isMatching(rating1,int256(_unpackRatingValue(matchingIds[index-1])),ratingRange)){_swapPair(matchingIds,pairIndex,index-1,pairIndex+1,index);pairIndex+=2;}elseif(index+1<matchingCount&&isMatching(rating1,int256(_unpackRatingValue(matchingIds[index+1])),ratingRange)){_swapPair(matchingIds,pairIndex,index,pairIndex+1,index+1);pairIndex+=2;index++;}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 1902
column: 8
content: for(uint256i=0;i<length;i++){for(j=i+1;j<length;j++){if(_warriorIds[i]==_warriorIds[j])returnfalse;}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 2069
column: 8
content: for(index=0;index<length;index++){DataTypes.Warriorstoragewarrior=warriors[_warriorIds[index]];require(warrior.identity!=0&&warrior.action==PVE_BATTLE&&warrior.cooldownEndBlock<=blockNumber);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 2081
column: 8
content: for(index=0;index<length;index++){_triggerPVEFinish(_warriorIds[index]);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 2268
column: 8
content: for(uint256i=0;i<length;i++){if(!_ownerApproved(_claimant,_warriorIds[i]))returnfalse;}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 2348
column: 8
content: for(uint256i=0;i<length;i++){_setIDLE(packedContenders[i]);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 2485
column: 8
content: for(uint256i=0;i<length;i++){_createWarrior(recoveryData[i*5],owners[i],recoveryData[i*5+1],recoveryData[i*5+2],recoveryData[i*5+3],recoveryData[i*5+4]);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 2553
column: 8
content: for(uint256i=0;i<_warriorIds.length;i++){_setWarriorData(warriorsData,warriors[_warriorIds[i]],i*stepSize);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 2579
column: 8
content: for(uint256i=0;i<lenght;i++){owners[i]=warriorToOwner[_warriorIds[i]];}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 3065
column: 8
content: for(uint256i=0;i<length;i++){owners[i]=warriorToOwner[CryptoUtils._unpackIdValue(pvpData[i])];}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 3170
column: 5
content: for(uint256i=0;i<length;i++){index=indexOf(warriorIds[i]);cycles[i]=index>=0?uint32(CryptoUtils._unpackCycleValue(pvpQueue[uint32(index)])+skipCycles):0;}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 3386
column: 8
content: for(uint256i=0;i<length;i++){_warriorsData[i]=tournamentQueue[i*DATA_SIZE];}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 3419
column: 8
content: for(uint256i=0;i<length;i++){failedBooty+=_grandTournamentBooty(_warriorsData[i],_currentBank,_results[i]*contenderCut,totalBattles);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 3433
column: 8
content: for(uint256i=0;i<length;i++){warriorsData[i]=uint256(warriorToOwner[CryptoUtils._unpackWarriorId(warriorsData[i],0)]);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 3649
column: 8
content: for(uint256i=0;i<length;i++){parameters[i]=_settings[i];}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 3666
column: 8
content: for(uint256i=0;i<length;i++){soulCounter[owners[i]]=souls[i];ritualTimeBlock[owners[i]]=blocks[i];}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 3983
column: 8
content: for(uint32i=0;i<tokenIds.length;i++){tokenId=tokenIds[i];AuctionBase.Auctionstorageauction=tokenIdToAuction[tokenId];require(_isOnAuction(auction));_setTokenData(auctionData,auction,tokenId,i*stepSize);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: 17f23a
severity: 1
line: 1184
column: 18
content: results[i]<BATTLES_PER_CONTENDER_SUM

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: 17f23a
severity: 1
line: 1371
column: 15
content: i<=j

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: 17f23a
severity: 1
line: 1372
column: 19
content: arr[uint256(i)]<pivot

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: 17f23a
severity: 1
line: 1373
column: 19
content: pivot<arr[uint256(j)]

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 37
column: 0
content: contractPVPInterface{functionisPVPProvider()externalpurereturns(bool);functionaddTournamentContender(address_owner,uint256[]_tournamentData)externalpayable;functiongetTournamentThresholdFee()publicviewreturns(uint256);functionaddPVPContender(address_owner,uint256_packedWarrior)externalpayable;functiongetPVPEntranceFee(uint256_levelPoints)externalviewreturns(uint256);}

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 2498
column: 0
content: contractCryptoWarriorCoreisCoreRecovery{functionCryptoWarriorCore()public{paused=true;adminAddress=msg.sender;issuerAddress=msg.sender;bankAddress=msg.sender;}function()externalpayable{require(false);}functionunpause()publiconlyAdminwhenPaused{require(address(saleAuction)!=address(0));require(address(sanctuary)!=address(0));require(address(battleProvider)!=address(0));require(newContractAddress==address(0));super.unpause();}functiongetBeneficiary()externalviewreturns(address){returnbankAddress;}functionisPVPListener()publicpurereturns(bool){returntrue;}functiongetWarriors(uint256[]_warriorIds)externalviewreturns(uint256[]memorywarriorsData,uint256stepSize){stepSize=6;warriorsData=newuint256[](_warriorIds.length*stepSize);for(uint256i=0;i<_warriorIds.length;i++){_setWarriorData(warriorsData,warriors[_warriorIds[i]],i*stepSize);}}functiongetWarriorsFromIndex(uint256indexFrom,uint256count)externalviewreturns(uint256[]memorywarriorsData,uint256stepSize){stepSize=6;uint256lenght=(warriors.length-indexFrom>=count?count:warriors.length-indexFrom);warriorsData=newuint256[](lenght*stepSize);for(uint256i=0;i<lenght;i++){_setWarriorData(warriorsData,warriors[indexFrom+i],i*stepSize);}}functiongetWarriorOwners(uint256[]_warriorIds)externalviewreturns(address[]memoryowners){uint256lenght=_warriorIds.length;owners=newaddress[](lenght);for(uint256i=0;i<lenght;i++){owners[i]=warriorToOwner[_warriorIds[i]];}}function_setWarriorData(uint256[]memorywarriorsData,DataTypes.Warriorstoragewarrior,uint256id)internalview{warriorsData[id]=uint256(warrior.identity);warriorsData[id+1]=uint256(warrior.cooldownEndBlock);warriorsData[id+2]=uint256(warrior.level);warriorsData[id+3]=uint256(warrior.rating);warriorsData[id+4]=uint256(warrior.action);warriorsData[id+5]=uint256(warrior.dungeonIndex);}functiongetWarrior(uint256_id)externalviewreturns(uint256identity,uint256cooldownEndBlock,uint256level,uint256rating,uint256action,uint256dungeonIndex){DataTypes.Warriorstoragewarrior=warriors[_id];identity=uint256(warrior.identity);cooldownEndBlock=uint256(warrior.cooldownEndBlock);level=uint256(warrior.level);rating=uint256(warrior.rating);action=uint256(warrior.action);dungeonIndex=uint256(warrior.dungeonIndex);}}

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 3207
column: 0
content: contractTournamentisPVP{uint256internalconstantGROUP_SIZE=5;uint256internalconstantDATA_SIZE=2;uint256internalconstantTHRESHOLD=300;uint256[160]publictournamentQueue;uint256internaltournamentEntranceFeeCut=100;uint256publictournamentOwnersCut;uint256publictournamentIncentiveCut;eventTournamentNewContender(addressowner,uint256warriorIds,uint256entranceFee);eventTournamentFinished(uint256[]owners,uint32[]results,uint256tournamentBank);functionTournament(uint256_pvpCut,uint256_tournamentBankCut,uint256_pvpMaxIncentiveCut,uint256_tournamentOwnersCut,uint256_tournamentIncentiveCut)publicPVP(_pvpCut,_tournamentBankCut,_pvpMaxIncentiveCut){require((_tournamentOwnersCut+_tournamentIncentiveCut)<=10000);tournamentOwnersCut=_tournamentOwnersCut;tournamentIncentiveCut=_tournamentIncentiveCut;}function_computeTournamentIncentiveReward(uint256_currentBank,uint256_incentiveCut)internalpurereturns(uint256){return_currentBank*_incentiveCut/10000;}function_computeTournamentContenderCut(uint256_incentiveCut)internalviewreturns(uint256){return10000-tournamentOwnersCut-_incentiveCut;}function_computeTournamentBeneficiaryFee(uint256_currentBank)internalviewreturns(uint256){return_currentBank*tournamentOwnersCut/10000;}functionsetTournamentEntranceFeeCut(uint256_cut)externalonlyOwner{require(_cut<=10000);require(tournamentQueueSize==0);tournamentEntranceFeeCut=_cut;}functiongetTournamentEntranceFee()externalviewreturns(uint256){returncurrentTournamentBank*tournamentEntranceFeeCut/10000;}functiongetTournamentThresholdFee()publicviewreturns(uint256){returncurrentTournamentBank*tournamentEntranceFeeCut*(10000-THRESHOLD)/10000/10000;}functionmaxTournamentContenders()publicviewreturns(uint256){returntournamentQueue.length/DATA_SIZE;}functioncanFinishTournament()externalviewreturns(bool){returntournamentEndBlock<=block.number&&tournamentQueueSize>0;}function_triggerNewTournamentContender(address_owner,uint256[]memory_tournamentData,uint256_fee)internal{currentTournamentBank+=_fee;uint256packedWarriorIds=CryptoUtils._packWarriorIds(_tournamentData);uint256combinedWarrior=CryptoUtils._combineWarriors(_tournamentData);uint256size=tournamentQueueSize++*DATA_SIZE;tournamentQueue[size++]=packedWarriorIds;tournamentQueue[size++]=combinedWarrior;warriorToOwner[CryptoUtils._unpackWarriorId(packedWarriorIds,0)]=_owner;TournamentNewContender(_owner,packedWarriorIds,_fee);}functionaddTournamentContender(address_owner,uint256[]_tournamentData)externalpayableTournamentNotPaused{require(msg.sender==address(pvpListener));require(_owner!=address(0));require(pvpBattleFee==0||currentTournamentBank>0);uint256fee=getTournamentThresholdFee();require(msg.value>=fee);require(ownerToBooty[_owner]==0);require(_tournamentData.length==GROUP_SIZE);require(tournamentQueueSize<maxTournamentContenders());require(block.number>=getTournamentAdmissionBlock());require(block.number<=tournamentEndBlock);_triggerNewTournamentContender(_owner,_tournamentData,fee);}functiongetCombinedWarriors()internalviewreturns(uint256[]memorywarriorsData){uint256length=tournamentQueueSize;warriorsData=newuint256[](length);for(uint256i=0;i<length;i++){warriorsData[i]=tournamentQueue[i*DATA_SIZE+1];}returnwarriorsData;}functiongetTournamentState()externalviewreturns(uint256contendersCount,uint256bank,uint256admissionStartBlock,uint256endBlock,uint256incentiveReward){contendersCount=tournamentQueueSize;bank=currentTournamentBank;admissionStartBlock=getTournamentAdmissionBlock();endBlock=tournamentEndBlock;incentiveReward=_computeTournamentIncentiveReward(bank,_computeIncentiveCut(bank,tournamentIncentiveCut));}function_repackToCombinedIds(uint256[]memory_warriorsData)internalview{uint256length=_warriorsData.length;for(uint256i=0;i<length;i++){_warriorsData[i]=tournamentQueue[i*DATA_SIZE];}}function_computeTournamentBooty(uint256_currentBank,uint256_contenderResult,uint256_totalBattles)internalpurereturns(uint256){return_currentBank*_contenderResult/_totalBattles;}function_grandTournamentBooty(uint256_warriorIds,uint256_currentBank,uint256_contenderResult,uint256_totalBattles)internalreturns(uint256){uint256warriorId=CryptoUtils._unpackWarriorId(_warriorIds,0);addressowner=warriorToOwner[warriorId];uint256booty=_computeTournamentBooty(_currentBank,_contenderResult,_totalBattles);returnsendBooty(owner,booty);}function_grandTournamentRewards(uint256_currentBank,uint256[]memory_warriorsData,uint32[]memory_results)internalreturns(uint256){uint256length=_warriorsData.length;uint256totalBattles=CryptoUtils._getTournamentBattles(length)*10000;uint256incentiveCut=_computeIncentiveCut(_currentBank,tournamentIncentiveCut);uint256contenderCut=_computeTournamentContenderCut(incentiveCut);uint256failedBooty=0;for(uint256i=0;i<length;i++){failedBooty+=_grandTournamentBooty(_warriorsData[i],_currentBank,_results[i]*contenderCut,totalBattles);}failedBooty+=sendBooty(pvpListener.getBeneficiary(),_computeTournamentBeneficiaryFee(_currentBank));if(failedBooty>0){totalBooty+=failedBooty;}return_computeTournamentIncentiveReward(_currentBank,incentiveCut);}function_repackToWarriorOwners(uint256[]memorywarriorsData)internalview{uint256length=warriorsData.length;for(uint256i=0;i<length;i++){warriorsData[i]=uint256(warriorToOwner[CryptoUtils._unpackWarriorId(warriorsData[i],0)]);}}function_triggerFinishTournament()internalreturns(uint256){uint256[]memorywarriorsData=getCombinedWarriors();uint32[]memoryresults=CryptoUtils.getTournamentBattleResults(warriorsData,tournamentEndBlock-1);_repackToCombinedIds(warriorsData);pvpListener.tournamentFinished(warriorsData);tournamentQueueSize=0;_scheduleTournament();uint256currentBank=currentTournamentBank;currentTournamentBank=0;uint256incentiveReward=_grandTournamentRewards(currentBank,warriorsData,results);currentTournamentBank=nextTournamentBank;nextTournamentBank=0;_repackToWarriorOwners(warriorsData);TournamentFinished(warriorsData,results,currentBank);returnincentiveReward;}functionfinishTournament()externalTournamentNotPaused{require(tournamentEndBlock<=block.number);require(tournamentQueueSize>0);uint256incentiveReward=_triggerFinishTournament();safeSend(msg.sender,incentiveReward);}functionremoveAllTournamentContenders()externalonlyOwnerTournamentPaused{uint256length=tournamentQueueSize;uint256warriorId;uint256failedBooty;uint256i;uint256fee;uint256bank=currentTournamentBank;uint256[]memorywarriorsData=newuint256[](length);for(i=0;i<length;i++){warriorsData[i]=tournamentQueue[i*DATA_SIZE];}pvpListener.tournamentFinished(warriorsData);currentTournamentBank=0;tournamentQueueSize=0;for(i=length-1;i>=0;i--){warriorId=CryptoUtils._unpackWarriorId(warriorsData[i],0);fee=bank-(bank*10000/(tournamentEntranceFeeCut*(10000-THRESHOLD)/10000+10000));failedBooty+=sendBooty(warriorToOwner[warriorId],fee);bank-=fee;}currentTournamentBank=bank;totalBooty+=failedBooty;}}

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 3873
column: 0
content: contractSaleClockAuctionisPausable,AuctionBase{bytes4constantInterfaceSignature_ERC721=bytes4(0x9f40b779);boolpublicisSaleClockAuction=true;uint256publicminerSaleCount;uint256[5]publiclastMinerSalePrices;functionSaleClockAuction(address_nftAddress,uint256_cut)public{require(_cut<=10000);ownerCut=_cut;ERC721candidateContract=ERC721(_nftAddress);require(candidateContract.supportsInterface(InterfaceSignature_ERC721));require(candidateContract.getBeneficiary()!=address(0));nonFungibleContract=candidateContract;}functioncancelAuction(uint256_tokenId)external{AuctionBase.Auctionstorageauction=tokenIdToAuction[_tokenId];require(_isOnAuction(auction));addressseller=auction.seller;require(msg.sender==seller);_cancelAuction(_tokenId,seller);}functioncancelAuctionWhenPaused(uint256_tokenId)whenPausedonlyOwnerexternal{AuctionBase.Auctionstorageauction=tokenIdToAuction[_tokenId];require(_isOnAuction(auction));_cancelAuction(_tokenId,auction.seller);}functiongetCurrentPrice(uint256_tokenId)externalviewreturns(uint256){AuctionBase.Auctionstorageauction=tokenIdToAuction[_tokenId];require(_isOnAuction(auction));return_currentPrice(auction);}functioncreateAuction(uint256_tokenId,uint256_startingPrice,uint256_endingPrice,uint256_duration,address_seller)whenNotPausedexternal{require(_startingPrice==uint256(uint128(_startingPrice)));require(_endingPrice==uint256(uint128(_endingPrice)));require(_duration==uint256(uint64(_duration)));require(msg.sender==address(nonFungibleContract));_escrow(_seller,_tokenId);AuctionBase.Auctionmemoryauction=Auction(_seller,uint128(_startingPrice),uint128(_endingPrice),uint64(_duration),uint64(now));_addAuction(_tokenId,auction);}functionbid(uint256_tokenId)whenNotPausedexternalpayable{addressseller=tokenIdToAuction[_tokenId].seller;uint256price=_bid(_tokenId,msg.value);_transfer(msg.sender,_tokenId);if(seller==nonFungibleContract.getBeneficiary()){lastMinerSalePrices[minerSaleCount%5]=price;minerSaleCount++;}}functionaverageMinerSalePrice()externalviewreturns(uint256){uint256sum=0;for(uint256i=0;i<5;i++){sum+=lastMinerSalePrices[i];}returnsum/5;}functiongetAuctionsById(uint32[]tokenIds)externalviewreturns(uint256[]memoryauctionData,uint32stepSize){stepSize=6;auctionData=newuint256[](tokenIds.length*stepSize);uint32tokenId;for(uint32i=0;i<tokenIds.length;i++){tokenId=tokenIds[i];AuctionBase.Auctionstorageauction=tokenIdToAuction[tokenId];require(_isOnAuction(auction));_setTokenData(auctionData,auction,tokenId,i*stepSize);}}functiongetAuctions(uint32fromIndex,uint32count)externalviewreturns(uint256[]memoryauctionData,uint32stepSize){stepSize=6;if(count==0){AuctionBase.Auctionstorageauction=tokenIdToAuction[fromIndex];require(_isOnAuction(auction));auctionData=newuint256[](1*stepSize);_setTokenData(auctionData,auction,fromIndex,count);return(auctionData,stepSize);}else{uint256totalWarriors=nonFungibleContract.totalSupply();if(totalWarriors==0){return(newuint256[](0),stepSize);}else{uint32totalSize=0;uint32tokenId;uint32size=0;auctionData=newuint256[](count*stepSize);for(tokenId=0;tokenId<totalWarriors&&size<count;tokenId++){AuctionBase.Auctionstorageauction1=tokenIdToAuction[tokenId];if(_isOnAuction(auction1)){totalSize++;if(totalSize>fromIndex){_setTokenData(auctionData,auction1,tokenId,size++*stepSize);}}}if(size<count){size*=stepSize;uint256[]memoryrepack=newuint256[](size);for(tokenId=0;tokenId<size;tokenId++){repack[tokenId]=auctionData[tokenId];}return(repack,stepSize);}return(auctionData,stepSize);}}}functiongetAuction(uint256_tokenId)externalviewreturns(addressseller,uint256startingPrice,uint256endingPrice,uint256duration,uint256startedAt){Auctionstorageauction=tokenIdToAuction[_tokenId];require(_isOnAuction(auction));return(auction.seller,auction.startingPrice,auction.endingPrice,auction.duration,auction.startedAt);}function_setTokenData(uint256[]memoryauctionData,AuctionBase.Auctionstorageauction,uint32tokenId,uint32index)internalview{auctionData[index]=uint256(tokenId);auctionData[index+1]=uint256(auction.seller);auctionData[index+2]=uint256(auction.startingPrice);auctionData[index+3]=uint256(auction.endingPrice);auctionData[index+4]=uint256(auction.duration);auctionData[index+5]=uint256(auction.startedAt);}}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 118
column: 4
content: functionsetAdmin(address_newAdmin)external{require(msg.sender==adminAddress||msg.sender==bankAddress);require(_newAdmin!=address(0));adminAddress=_newAdmin;}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 2785
column: 4
content: functionsetPVPEntranceFee(uint256value)externalonlyOwner{require(pvpQueueSize==0);pvpBattleFee=value;}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 3282
column: 4
content: functionsetTournamentEntranceFeeCut(uint256_cut)externalonlyOwner{require(_cut<=10000);require(tournamentQueueSize==0);tournamentEntranceFeeCut=_cut;}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 3547
column: 4
content: functionsetSecondsPerBlock(uint256secs)externalonlyOwner{secondsPerBlock=secs;}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 3739
column: 4
content: functionsetRitualFee(uint256_pveRitualFee)externalonlyOwner{require(_pveRitualFee>RITUAL_COMPENSATION);ritualFee=_pveRitualFee;}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: ^

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 7d54ca
severity: 1
line: 770
column: 87
content: (uint256,uint256)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 7d54ca
severity: 1
line: 789
column: 112
content: (uint256,uint256,uint256)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 7d54ca
severity: 1
line: 1084
column: 4
content: (int256hp,int256armor,int256dodge)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 7d54ca
severity: 1
line: 1090
column: 79
content: (int256damage,int256penetration)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 7d54ca
severity: 1
line: 1107
column: 4
content: (int256totalHp,int256totalDamage,int256maxArmor,int256maxDodge,int256maxPenetration)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 7d54ca
severity: 1
line: 1134
column: 81
content: (uint256warriorAuras,uint256petAuras)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 7d54ca
severity: 1
line: 1277
column: 115
content: (int256hp,int256armor,int256dodge)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 7d54ca
severity: 1
line: 1347
column: 25
content: (int256totalHp1,int256totalHp2)

ruleId: SOLIDITY_UINT_CANT_BE_NEGATIVE
patternId: 11ca45b
severity: 3
line: 3509
column: 28
content: i>=0

ruleId: SOLIDITY_UINT_CANT_BE_NEGATIVE
patternId: d48ac4
severity: 2
line: 3509
column: 28
content: i>=0

ruleId: SOLIDITY_UNCHECKED_CALL
patternId: f39eed
severity: 3
line: 3021
column: 18
content: sendBooty(warriorToOwner[CryptoUtils._unpackIdValue(packedWarrior)],_computePVPReward(booty,contendersCut))

ruleId: SOLIDITY_UNCHECKED_CALL
patternId: f39eed
severity: 3
line: 3026
column: 23
content: sendBooty(pvpListener.getBeneficiary(),_computePVPBeneficiaryFee(sessionBooty))

ruleId: SOLIDITY_UNCHECKED_CALL
patternId: f39eed
severity: 3
line: 3200
column: 24
content: sendBooty(owner,_getPVPFeeByLevel(CryptoUtils._unpackLevelValue(warriorData)))

ruleId: SOLIDITY_UNCHECKED_CALL
patternId: f39eed
severity: 3
line: 3424
column: 23
content: sendBooty(pvpListener.getBeneficiary(),_computeTournamentBeneficiaryFee(_currentBank))

ruleId: SOLIDITY_UNCHECKED_CALL
patternId: f39eed
severity: 3
line: 3515
column: 24
content: sendBooty(warriorToOwner[warriorId],fee)

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 901eae
severity: 1
line: 836
column: 31
content: keccak256(block.blockhash(_targetBlock),_heroIdentity,block.coinbase,block.difficulty)

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 901eae
severity: 1
line: 1188
column: 35
content: keccak256(block.blockhash(_getTargetBlock(_targetBlock-i)),uint256(damage1)+now)

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 901eae
severity: 1
line: 1451
column: 31
content: keccak256(block.blockhash(_getTargetBlock(_targetBlock)),hash)

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 53
column: 25
content: uint256[]warriorData

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 55
column: 32
content: uint256[]packedContenders

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 2242
column: 25
content: uint256[]warriorsData

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 2303
column: 33
content: uint256[]_warriorIds

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 2354
column: 32
content: uint256[]packedContenders

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 3641
column: 53
content: uint32[]_settings

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 3777
column: 43
content: Auction_auction

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1540
column: 4
content: DataTypes.Warrior[]warriors;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1548
column: 4
content: mapping(address=>uint256)ownersTokenCount;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1660
column: 4
content: bytes4constantInterfaceSignature_ERC165=bytes4(keccak256('supportsInterface(bytes4)'));

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1663
column: 4
content: bytes4constantInterfaceSignature_ERC721=bytes4(keccak256('name()'))^bytes4(keccak256('symbol()'))^bytes4(keccak256('totalSupply()'))^bytes4(keccak256('balanceOf(address)'))^bytes4(keccak256('ownerOf(uint256)'))^bytes4(keccak256('approve(address,uint256)'))^bytes4(keccak256('transfer(address,uint256)'))^bytes4(keccak256('transferFrom(address,address,uint256)'))^bytes4(keccak256('tokensOfOwner(address)'));

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 3875
column: 4
content: bytes4constantInterfaceSignature_ERC721=bytes4(0x9f40b779);

SOLIDITY_VISIBILITY :5
SOLIDITY_OVERPOWERED_ROLE :5
SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_ARRAY_LENGTH_MANIPULATION :1
SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN :1
SOLIDITY_EXTRA_GAS_IN_LOOPS :6
SOLIDITY_ADDRESS_HARDCODED :5
SOLIDITY_UPGRADE_TO_050 :10
SOLIDITY_GAS_LIMIT_IN_LOOPS :26
SOLIDITY_UNCHECKED_CALL :5
SOLIDITY_DIV_MUL :10
SOLIDITY_SHOULD_RETURN_STRUCT :8
SOLIDITY_ERC20_APPROVE :1
SOLIDITY_LOCKED_MONEY :4
SOLIDITY_UINT_CANT_BE_NEGATIVE :2