/unique_contracts/0x58f6b8d0a80e2c1a394d0c01445721c1b7df5139.sol
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 150
column: 4
content: for(uint8round=1;round<=MAXROUNDS;round++){for(uint8i=1;i<=10;i++){if(_tokens[i-1]>0){uint8rand=_getRandom(pseudoRandoms,(round-1)*10+i);uint8threshold=(FLIPPINESS+round*FLIPPINESSROUNDBONUS);if(rand<threshold||round==MAXROUNDS){_flip(_commit,round,cryptogsContract,_tokens,i-1,_opponent,whosTurn);}}}whosTurn=!whosTurn;}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 47acc2
severity: 1
line: 299
column: 2
content: functionapprove(address_to,uint256_tokenId)publicreturns(bool){}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: ^

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 901eae
severity: 1
line: 107
column: 22
content: keccak256(_commit,_sender,_token1,_token2,_token3,_token4,_token5)

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 901eae
severity: 1
line: 125
column: 51
content: keccak256(_commit,msg.sender,_token1,_token2,_token3,_token4,_token5)

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 901eae
severity: 1
line: 126
column: 50
content: keccak256(_commit,_opponent,_token6,_token7,_token8,_token9,_token10)

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 901eae
severity: 1
line: 190
column: 23
content: keccak256(_reveal,block.blockhash(max(block1,block2)))

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 901eae
severity: 1
line: 220
column: 51
content: keccak256(_commit,msg.sender,_token1,_token2,_token3,_token4,_token5)

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 901eae
severity: 1
line: 221
column: 50
content: keccak256(_commit,_opponent,_token6,_token7,_token8,_token9,_token10)

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 901eae
severity: 1
line: 272
column: 51
content: keccak256(_commit,msg.sender,_token1,_token2,_token3,_token4,_token5)

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 86
column: 2
content: functiononTransferStack(address_sender,uint_token1,uint_token2,uint_token3,uint_token4,uint_token5,bytes32_commit){require(msg.sender==cryptogsAddress);require(commitReceipt[_commit][_sender]==0);require(stacksTransferred[_commit]<2);stacksTransferred[_commit]++;NFTcryptogsContract=NFT(cryptogsAddress);require(cryptogsContract.tokenIndexToOwner(_token1)==address(this));require(cryptogsContract.tokenIndexToOwner(_token2)==address(this));require(cryptogsContract.tokenIndexToOwner(_token3)==address(this));require(cryptogsContract.tokenIndexToOwner(_token4)==address(this));require(cryptogsContract.tokenIndexToOwner(_token5)==address(this));bytes32receipt=keccak256(_commit,_sender,_token1,_token2,_token3,_token4,_token5);commitReceipt[_commit][_sender]=receipt;commitBlock[_commit][_sender]=uint32(block.number);TransferStack(_commit,_sender,receipt,now,_token1,_token2,_token3,_token4,_token5);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 123
column: 2
content: functiongenerateGame(bytes32_commit,bytes32_reveal,address_opponent,uint_token1,uint_token2,uint_token3,uint_token4,uint_token5,uint_token6,uint_token7,uint_token8,uint_token9,uint_token10){require(commitReceipt[_commit][msg.sender]==keccak256(_commit,msg.sender,_token1,_token2,_token3,_token4,_token5));require(commitReceipt[_commit][_opponent]==keccak256(_commit,_opponent,_token6,_token7,_token8,_token9,_token10));require(uint32(block.number)>commitBlock[_commit][msg.sender]);require(uint32(block.number)>commitBlock[_commit][_opponent]);require(_commit==keccak256(_reveal));require(stacksTransferred[_commit]==2);_generateGame(_commit,_reveal,_opponent,[_token1,_token2,_token3,_token4,_token5,_token6,_token7,_token8,_token9,_token10]);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 218
column: 2
content: functiondrainGame(bytes32_commit,bytes32_secret,address_opponent,uint_token1,uint_token2,uint_token3,uint_token4,uint_token5,uint_token6,uint_token7,uint_token8,uint_token9,uint_token10){require(commitReceipt[_commit][msg.sender]==keccak256(_commit,msg.sender,_token1,_token2,_token3,_token4,_token5));require(commitReceipt[_commit][_opponent]==keccak256(_commit,_opponent,_token6,_token7,_token8,_token9,_token10));require(uint32(block.number)>commitBlock[_commit][msg.sender]+BLOCKTIMEOUT);require(uint32(block.number)>commitBlock[_commit][_opponent]+BLOCKTIMEOUT);require(_commit==keccak256(keccak256(_secret)));require(stacksTransferred[_commit]==2);_drainGame(_commit,_opponent,[_token1,_token2,_token3,_token4,_token5,_token6,_token7,_token8,_token9,_token10]);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 270
column: 2
content: functionrevokeStack(bytes32_commit,uint_token1,uint_token2,uint_token3,uint_token4,uint_token5){require(commitReceipt[_commit][msg.sender]==keccak256(_commit,msg.sender,_token1,_token2,_token3,_token4,_token5));require(stacksTransferred[_commit]==1);stacksTransferred[_commit]=0;NFTcryptogsContract=NFT(cryptogsAddress);cryptogsContract.transfer(msg.sender,_token1);cryptogsContract.transfer(msg.sender,_token2);cryptogsContract.transfer(msg.sender,_token3);cryptogsContract.transfer(msg.sender,_token4);cryptogsContract.transfer(msg.sender,_token5);bytes32previousReceipt=commitReceipt[_commit][msg.sender];deletecommitReceipt[_commit][msg.sender];RevokeStack(_commit,msg.sender,now,_token1,_token2,_token3,_token4,_token5,previousReceipt);}

SOLIDITY_VISIBILITY :4
SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN :1
SOLIDITY_EXTRA_GAS_IN_LOOPS :1
SOLIDITY_UPGRADE_TO_050 :7