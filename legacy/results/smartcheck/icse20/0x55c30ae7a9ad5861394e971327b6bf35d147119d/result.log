/unique_contracts/0x55c30ae7a9ad5861394e971327b6bf35d147119d.sol
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 119
column: 4
content: functionsetMinBalance(uintminimumBalanceInWei)onlyOwner{minBalanceForAccounts=minimumBalanceInWei;}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 379
column: 4
content: functionsetPrices(uint256newSellPrice,uint256newBuyPrice)onlyOwner{sellPrice=newSellPrice;buyPrice=newBuyPrice;}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 383
column: 4
content: functionsetUsersCanTrade(booltrade)onlyOwner{usersCanTrade=trade;}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 386
column: 4
content: functionsetCanTrade(addressaddr,booltrade)onlyOwner{canTrade[addr]=trade;}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 425
column: 4
content: functionsetAdmin(addressaddr,boolenabled)onlyOwner{admin[addr]=enabled;}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 429
column: 4
content: functionsetICO(boolenabled)onlyOwner{ico=enabled;}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: ^

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 392
column: 8
content: if(!usersCanTrade&&!canTrade[msg.sender])revert();

ruleId: SOLIDITY_SEND
patternId: 430636
severity: 1
line: 412
column: 27
content: send(revenue)

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 6
column: 4
content: functionowned(){owner=msg.sender;admins[msg.sender]=true;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 21
column: 4
content: functiontransferOwnership(addressnewOwner)onlyOwner{owner=newOwner;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 24
column: 4
content: functionmakeAdmin(addressnewAdmin,boolisAdmin)onlyOwner{admins[newAdmin]=isAdmin;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 30
column: 4
content: functionreceiveApproval(address_from,uint256_value,address_token,bytes_extraData);

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 88
column: 4
content: functionETD(){uint256initialSupply=20000000000000000000000000;balanceOf[msg.sender]=initialSupply;totalSupply=initialSupply;name="EthereumDiamond";symbol="ETD";decimals=18;minBalanceForAccounts=1000000000000000;usersCanTrade=false;usersCanUnfreeze=false;admin[msg.sender]=true;canTrade[msg.sender]=true;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 108
column: 4
content: functionincreaseTotalSupply(addresstarget,uint256increaseBy)onlyOwner{balanceOf[target]+=increaseBy;totalSupply+=increaseBy;Transfer(0,owner,increaseBy);Transfer(owner,target,increaseBy);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 115
column: 4
content: functionusersCanUnFreeze(boolcan){usersCanUnfreeze=can;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 119
column: 4
content: functionsetMinBalance(uintminimumBalanceInWei)onlyOwner{minBalanceForAccounts=minimumBalanceInWei;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 128
column: 4
content: functiontransferAndFreeze(addresstarget,uint256amount)onlyAdmin{_transfer(msg.sender,target,amount);freeze(target,true);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 151
column: 4
content: functionfreeze(addresstarget,boolfroze){if(froze||(!froze&&!usersCanUnfreeze)){require(admin[msg.sender]);}_freeze(target,froze);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 183
column: 4
content: functiontransfer(address_to,uint256_value)notICO{require(!frozen[msg.sender]);if(msg.sender.balance<minBalanceForAccounts){sell((minBalanceForAccounts-msg.sender.balance)*sellPrice);}_transfer(msg.sender,_to,_value);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 210
column: 4
content: functionreward(address_to,uint256_value,boollocked,stringdata){require(_to!=0x0);require(!frozen[msg.sender]);if(msg.sender.balance<minBalanceForAccounts){sell((minBalanceForAccounts-msg.sender.balance)*sellPrice);}if(!locked){_transfer(msg.sender,_to,_value);}else{require(balanceOf[msg.sender]>=_value);require(totalLockedRewardsOf[_to]+_value>totalLockedRewardsOf[_to]);balanceOf[msg.sender]-=_value;totalLockedRewardsOf[_to]+=_value;lockedRewardsOf[_to][msg.sender]+=_value;if(userRewardCount[_to][msg.sender]==0){userRewarderCount[_to]+=1;userRewarders[_to][userRewarderCount[_to]]=msg.sender;}userRewardCount[_to][msg.sender]+=1;totalRewardIssuedOut[msg.sender]+=_value;Transfer(msg.sender,_to,_value);}Reward(msg.sender,_to,_value,data,now);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 245
column: 4
content: functiontransferReward(address_to,uint256_value){require(!frozen[msg.sender]);require(lockedRewardsOf[msg.sender][_to]>=_value);require(totalLockedRewardsOf[msg.sender]>=_value);if(msg.sender.balance<minBalanceForAccounts){sell((minBalanceForAccounts-msg.sender.balance)*sellPrice);}totalLockedRewardsOf[msg.sender]-=_value;lockedRewardsOf[msg.sender][_to]-=_value;balanceOf[_to]+=_value;Transfer(msg.sender,_to,_value);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 267
column: 4
content: functionunlockReward(addressaddr,uint256_value){require(totalLockedRewardsOf[addr]>_value);require(lockedRewardsOf[addr][msg.sender]>=_value);if(_value==0)_value=lockedRewardsOf[addr][msg.sender];if(msg.sender.balance<minBalanceForAccounts){sell((minBalanceForAccounts-msg.sender.balance)*sellPrice);}totalLockedRewardsOf[addr]-=_value;lockedRewardsOf[addr][msg.sender]-=_value;balanceOf[addr]+=_value;Unlock(addr,msg.sender,_value);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 291
column: 4
content: functiontransferFrom(address_from,address_to,uint256_value)returns(boolsuccess){require(!frozen[_from]);require(_value<=allowance[_from][msg.sender]);allowance[_from][msg.sender]-=_value;_transfer(_from,_to,_value);returntrue;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 307
column: 4
content: functionapprove(address_spender,uint256_value)returns(boolsuccess){allowance[msg.sender][_spender]=_value;returntrue;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 322
column: 4
content: functionapproveAndCall(address_spender,uint256_value,bytes_extraData)onlyOwnerreturns(boolsuccess){tokenRecipientspender=tokenRecipient(_spender);if(approve(_spender,_value)){spender.receiveApproval(msg.sender,_value,this,_extraData);returntrue;}}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 338
column: 4
content: functionburn(uint256_value)onlyOwnerreturns(boolsuccess){require(balanceOf[msg.sender]>=_value);balanceOf[msg.sender]-=_value;totalSupply-=_value;Burn(msg.sender,_value);returntrue;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 354
column: 4
content: functionburnFrom(address_from,uint256_value)returns(boolsuccess){require(balanceOf[_from]>=_value);require(_value<=allowance[_from][msg.sender]);balanceOf[_from]-=_value;allowance[_from][msg.sender]-=_value;totalSupply-=_value;Burn(_from,_value);returntrue;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 379
column: 4
content: functionsetPrices(uint256newSellPrice,uint256newBuyPrice)onlyOwner{sellPrice=newSellPrice;buyPrice=newBuyPrice;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 383
column: 4
content: functionsetUsersCanTrade(booltrade)onlyOwner{usersCanTrade=trade;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 386
column: 4
content: functionsetCanTrade(addressaddr,booltrade)onlyOwner{canTrade[addr]=trade;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 391
column: 4
content: functionbuy()payablereturns(uint256amount){if(!usersCanTrade&&!canTrade[msg.sender])revert();amount=msg.value*buyPrice;require(balanceOf[this]>=amount);balanceOf[msg.sender]+=amount;balanceOf[this]-=amount;Transfer(this,msg.sender,amount);returnamount;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 403
column: 4
content: functionsell(uint256amount)returns(uintrevenue){require(!frozen[msg.sender]);if(!usersCanTrade&&!canTrade[msg.sender]){require(minBalanceForAccounts>amount/sellPrice);}require(balanceOf[msg.sender]>=amount);balanceOf[this]+=amount;balanceOf[msg.sender]-=amount;revenue=amount/sellPrice;require(msg.sender.send(revenue));Transfer(msg.sender,this,amount);returnrevenue;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 417
column: 4
content: function()payable{}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 420
column: 4
content: functionwithdraw(addresstarget,uint256amount)onlyOwner{target.transfer(amount);Withdrawn(target,amount);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 425
column: 4
content: functionsetAdmin(addressaddr,boolenabled)onlyOwner{admin[addr]=enabled;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 429
column: 4
content: functionsetICO(boolenabled)onlyOwner{ico=enabled;}

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 39
column: 4
content: uint256minBalanceForAccounts;

SOLIDITY_VISIBILITY :29
SOLIDITY_OVERPOWERED_ROLE :6
SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_REVERT_REQUIRE :1
SOLIDITY_SEND :1