/unique_chucks/39/0xfd31fa7ac6f91506c984aa51147cbc0c87cee2a2.sol
line 71:28 mismatched input 'payable' expecting {',', ')'}
line 71:42 no viable alternative at input '_owner,'
line 71:42 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 71:56 mismatched input ')' expecting {';', '='}
line 71:78 mismatched input ';' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 155:16 extraneous input 'payable' expecting {',', ')'}
line 155:36 no viable alternative at input '_parentToken,'
line 155:36 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 156:33 mismatched input ',' expecting {';', '='}
line 157:15 extraneous input 'memory' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 157:32 mismatched input ',' expecting {';', '='}
line 158:27 mismatched input ',' expecting {';', '='}
line 159:15 extraneous input 'memory' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 159:34 mismatched input ',' expecting {';', '='}
line 161:4 mismatched input ')' expecting {';', '='}
line 162:21 extraneous input '=' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 162:41 mismatched input '(' expecting {';', '='}
line 162:56 extraneous input ';' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 164:17 extraneous input '=' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 165:15 extraneous input '=' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 166:20 extraneous input '=' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 166:33 mismatched input '(' expecting {';', '='}
line 166:47 extraneous input ';' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 168:25 extraneous input '=' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 169:22 extraneous input '=' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 169:29 mismatched input '.' expecting {';', '='}
line 169:36 mismatched input ';' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 177:4 extraneous input 'uint' expecting {<EOF>, 'pragma', 'import', 'contract', 'library', 'interface'}
line 635:16 mismatched input 'payable' expecting {',', ')'}
line 635:36 no viable alternative at input '_parentToken,'
line 635:36 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 636:27 mismatched input ',' expecting {';', '='}
line 637:15 extraneous input 'memory' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 637:32 mismatched input ',' expecting {';', '='}
line 638:27 mismatched input ',' expecting {';', '='}
line 639:15 extraneous input 'memory' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 639:34 mismatched input ',' expecting {';', '='}
line 641:4 mismatched input ')' expecting {';', '='}
line 641:35 extraneous input '{' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 642:20 extraneous input 'newToken' expecting {';', '='}
line 652:33 extraneous input '(' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 652:37 mismatched input '.' expecting {';', '='}
line 652:44 mismatched input ')' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 653:23 mismatched input ';' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 655:2 extraneous input '}' expecting {<EOF>, 'pragma', 'import', 'contract', 'library', 'interface'}
line 664:12 extraneous input 'payable' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 668:16 extraneous input 'payable' expecting {',', ')'}
line 668:36 no viable alternative at input '_parentToken,'
line 668:36 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 669:33 mismatched input ',' expecting {';', '='}
line 670:15 extraneous input 'memory' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 670:32 mismatched input ',' expecting {';', '='}
line 671:27 mismatched input ',' expecting {';', '='}
line 672:15 extraneous input 'memory' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 672:34 mismatched input ',' expecting {';', '='}
line 673:30 mismatched input ',' expecting {';', '='}
line 674:16 extraneous input 'payable' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 675:4 mismatched input ')' expecting {';', '='}
line 675:24 extraneous input '(' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 676:21 mismatched input ',' expecting {';', '='}
line 677:20 extraneous input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 678:28 mismatched input ',' expecting {';', '='}
line 679:18 extraneous input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 680:21 mismatched input ',' expecting {';', '='}
line 681:20 extraneous input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 683:4 mismatched input ')' expecting {';', '='}
line 684:19 extraneous input '=' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 687:4 extraneous input 'function' expecting {<EOF>, 'pragma', 'import', 'contract', 'library', 'interface'}
line 707:16 mismatched input 'payable' expecting {',', ')'}
line 707:36 no viable alternative at input '_parentToken,'
line 707:36 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 708:27 mismatched input ',' expecting {';', '='}
line 709:15 extraneous input 'memory' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 709:32 mismatched input ',' expecting {';', '='}
line 710:27 mismatched input ',' expecting {';', '='}
line 711:15 extraneous input 'memory' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 711:34 mismatched input ',' expecting {';', '='}
line 713:4 mismatched input ')' expecting {';', '='}
line 713:47 extraneous input '{' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 714:32 extraneous input 'newToken' expecting {';', '='}
line 725:33 extraneous input '(' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 725:37 mismatched input '.' expecting {';', '='}
line 725:44 mismatched input ')' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 726:23 mismatched input ';' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 728:0 extraneous input '}' expecting {<EOF>, 'pragma', 'import', 'contract', 'library', 'interface'}
line 789:12 extraneous input 'payable' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 801:47 extraneous input 'payable' expecting {',', ')'}
line 801:67 no viable alternative at input '_nectarToken)'
line 801:67 extraneous input ')' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 801:76 extraneous input '{' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 803:20 extraneous input '=' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 804:27 mismatched input '=' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 812:4 extraneous input 'function' expecting {<EOF>, 'pragma', 'import', 'contract', 'library', 'interface'}
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: adc165
severity: 1
line: 764
column: 43
content: 0xCc80C051057B774cD75067Dc48f8987C4Eb97A5e

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: adc165
severity: 1
line: 765
column: 38
content: 0x9EdCf4f838Ed4f2A05085Bd3d67ADFdE5620d940

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: adc165
severity: 1
line: 766
column: 44
content: 0x8936131A81F29205EeDDec486f401A8A0aFAb15A

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 44
column: 0
content: contractTokenController{functionproxyPayment(address_owner)publicpayablereturns(bool);functiononTransfer(address_from,address_to,uint_amount)publicreturns(bool);functiononApprove(address_owner,address_spender,uint_amount)publicreturns(bool);functiononBurn(addresspayable_owner,uint_amount)publicreturns(bool);}

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 85
column: 0
content: contractMiniMeTokenisControlled{stringpublicname;uint8publicdecimals;stringpublicsymbol;stringpublicversion='EFX_0.1';structCheckpoint{uint128fromBlock;uint128value;}MiniMeTokenpublicparentToken;uintpublicparentSnapShotBlock;uintpubliccreationBlock;mapping(address=>Checkpoint[])balances;mapping(address=>mapping(address=>uint256))allowed;Checkpoint[]totalSupplyHistory;boolpublictransfersEnabled;Checkpoint[]totalPledgedFeesHistory;MiniMeTokenFactorypublictokenFactory;constructor(address_tokenFactory,address<missing ')'>payable_parentToken,uint_parentSnapShotBlock,stringmemory_tokenName,uint8_decimalUnits,stringmemory_tokenSymbol,bool_transfersEnabled)public{tokenFactory=MiniMeTokenFactory(_tokenFactory);name=_tokenName;decimals=_decimalUnits;symbol=_tokenSymbol;parentToken=MiniMeToken(_parentToken);parentSnapShotBlock=_parentSnapShotBlock;transfersEnabled=_transfersEnabled;creationBlock=block.number;}

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 622
column: 0
content: contractMiniMeTokenFactory{functioncreateCloneToken(addresspayable_parentToken,uint_snapshotBlock,stringmemory_tokenName,uint8_decimalUnits,stringmemory_tokenSymbol,bool_transfersEnabled)publicreturns(MiniMeToken){MiniMeTokennewToken=newMiniMeToken(address(this),_parentToken,_snapshotBlock,_tokenName,_decimalUnits,_tokenSymbol,_transfersEnabled);newToken.changeController(msg.sender);returnnewToken;}

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 662
column: 0
content: contractDestructibleMiniMeTokenisMiniMeToken{addresspayablepublicterminator;constructor(address_tokenFactory,address<missing ')'>payable_parentToken,uint_parentSnapShotBlock,stringmemory_tokenName,uint8_decimalUnits,stringmemory_tokenSymbol,bool_transfersEnabled,addresspayable_terminator)publicMiniMeToken(_tokenFactory,_parentToken,_parentSnapShotBlock,_tokenName,_decimalUnits,_tokenSymbol,_transfersEnabled){terminator=_terminator;}

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 694
column: 0
content: contractDestructibleMiniMeTokenFactory{functioncreateDestructibleCloneToken(addresspayable_parentToken,uint_snapshotBlock,stringmemory_tokenName,uint8_decimalUnits,stringmemory_tokenSymbol,bool_transfersEnabled)publicreturns(DestructibleMiniMeToken){DestructibleMiniMeTokennewToken=newDestructibleMiniMeToken(address(this),_parentToken,_snapshotBlock,_tokenName,_decimalUnits,_tokenSymbol,_transfersEnabled,msg.sender);newToken.changeController(msg.sender);returnnewToken;}

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 762
column: 0
content: contractOneTimeListingManagerisOwnable{addresspublicconstantNECTAR_TOKEN=0xCc80C051057B774cD75067Dc48f8987C4Eb97A5e;addresspublicconstantDUD_EVT=0x9EdCf4f838Ed4f2A05085Bd3d67ADFdE5620d940;addresspublicconstantTOKEN_FACTORY=0x8936131A81F29205EeDDec486f401A8A0aFAb15A;uintpublicconstantMAX_CANDIDATES=20;structTokenProposal{address[]consideredTokens;uintstartBlock;uintstartTime;uintduration;DestructibleMiniMeTokenvotingToken;uint[]yesVotes;uintcriteria;uintextraData;boolconcluded;mapping(address=>mapping(address=>uint256))votesForToken;}TokenProposal[]publictokenBatches;DestructibleMiniMeTokenFactorypublictokenFactory;addresspayablepublicnectarToken;mapping(address=>bool)publicadmins;mapping(address=>bool)publicisWinner;mapping(address=>uint256)publicwinningVotes;mapping(address=>uint)publicproposalWhenTokenWon;modifieronlyAdmins(){require(isAdmin(msg.sender));_;}constructor(address_tokenFactory,address<missing ')'>payable_nectarToken)public{tokenFactory=DestructibleMiniMeTokenFactory(_tokenFactory);nectarToken=_nectarToken;admins[msg.sender]=true;}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: ^

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 71
column: 4
content: functiononBurn(addresspayable

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 153
column: 4
content: constructor(address_tokenFactory,address<missing ')'>payable

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 634
column: 4
content: functioncreateCloneToken(addresspayable

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 666
column: 4
content: constructor(address_tokenFactory,address<missing ')'>payable

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 706
column: 4
content: functioncreateDestructibleCloneToken(addresspayable

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 801
column: 4
content: constructor(address_tokenFactory,address<missing ')'>payable

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 71
column: 36
content: _owner,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 71
column: 44
content: uint_amount)publicreturns

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 71
column: 72
content: (bool);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 119
column: 4
content: mapping(address=>Checkpoint[])balances;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 122
column: 4
content: mapping(address=>mapping(address=>uint256))allowed;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 125
column: 4
content: Checkpoint[]totalSupplyHistory;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 131
column: 4
content: Checkpoint[]totalPledgedFeesHistory;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 155
column: 24
content: _parentToken,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 156
column: 8
content: uint_parentSnapShotBlock,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 157
column: 8
content: stringmemory_tokenName,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 158
column: 8
content: uint8_decimalUnits,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 159
column: 8
content: stringmemory_tokenSymbol,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 160
column: 8
content: bool_transfersEnabled)public{

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 162
column: 8
content: tokenFactory=MiniMeTokenFactory

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 162
column: 41
content: (_tokenFactory);name=_tokenName;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 164
column: 8
content: decimals=_decimalUnits;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 165
column: 8
content: symbol=_tokenSymbol;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 166
column: 8
content: parentToken=MiniMeToken

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 166
column: 33
content: (_parentToken);parentSnapShotBlock=_parentSnapShotBlock;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 168
column: 8
content: transfersEnabled=_transfersEnabled;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 169
column: 8
content: creationBlock=block.

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 169
column: 30
content: number;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 635
column: 24
content: _parentToken,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 636
column: 8
content: uint_snapshotBlock,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 637
column: 8
content: stringmemory_tokenName,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 638
column: 8
content: uint8_decimalUnits,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 639
column: 8
content: stringmemory_tokenSymbol,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 640
column: 8
content: bool_transfersEnabled)publicreturns

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 641
column: 21
content: (MiniMeToken){MiniMeTokennewToken=newMiniMeToken(address(this),_parentToken,_snapshotBlock,_tokenName,_decimalUnits,_tokenSymbol,_transfersEnabled);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 652
column: 8
content: newToken.changeController(msg.

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 652
column: 38
content: sender);return

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 653
column: 15
content: newToken;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 668
column: 24
content: _parentToken,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 669
column: 8
content: uint_parentSnapShotBlock,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 670
column: 8
content: stringmemory_tokenName,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 671
column: 8
content: uint8_decimalUnits,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 672
column: 8
content: stringmemory_tokenSymbol,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 673
column: 8
content: bool_transfersEnabled,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 674
column: 8
content: addresspayable_terminator)public

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 675
column: 13
content: MiniMeToken(_tokenFactory,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 677
column: 8
content: _parentToken,_parentSnapShotBlock,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 679
column: 8
content: _tokenName,_decimalUnits,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 681
column: 8
content: _tokenSymbol,_transfersEnabled){

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 684
column: 8
content: terminator=_terminator;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 707
column: 24
content: _parentToken,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 708
column: 8
content: uint_snapshotBlock,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 709
column: 8
content: stringmemory_tokenName,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 710
column: 8
content: uint8_decimalUnits,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 711
column: 8
content: stringmemory_tokenSymbol,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 712
column: 8
content: bool_transfersEnabled)publicreturns

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 713
column: 21
content: (DestructibleMiniMeToken){DestructibleMiniMeTokennewToken=newDestructibleMiniMeToken(address(this),_parentToken,_snapshotBlock,_tokenName,_decimalUnits,_tokenSymbol,_transfersEnabled,msg.sender);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 725
column: 8
content: newToken.changeController(msg.

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 725
column: 38
content: sender);return

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 726
column: 15
content: newToken;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 803
column: 8
content: nectarToken=_nectarToken;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 804
column: 8
content: admins[msg.sender]=true;

SOLIDITY_VISIBILITY :62
SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_LOCKED_MONEY :6
SOLIDITY_ADDRESS_HARDCODED :3