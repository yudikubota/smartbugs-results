/unique_chucks/28/0xac3a018b22677a52c4a5c5aabca551898abc49d1.sol
line 27:9 extraneous input 'payable' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 29:9 extraneous input 'payable' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 108:26 mismatched input 'payable' expecting {',', ')'}
line 108:42 no viable alternative at input 'receiver)'
line 108:42 extraneous input ')' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 108:51 extraneous input '{' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 109:9 mismatched input '(' expecting {';', '='}
line 109:20 mismatched input '==' expecting ')'
line 109:27 extraneous input ')' expecting {';', '='}
line 110:14 extraneous input '(' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 110:23 extraneous input ')' expecting {';', '='}
line 113:1 extraneous input 'event' expecting {<EOF>, 'pragma', 'import', 'contract', 'library', 'interface'}
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ERC20_APPROVE
patternId: af782c
severity: 2
line: 75
column: 1
content: functionapprove(addressspender,uinttokens)publicreturns(boolsuccess){allowed[msg.sender][spender]=tokens;emitApproval(msg.sender,spender,tokens);returntrue;}

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 15
column: 0
content: contractHomesCoinisERC20Interface{stringpublicsymbol;stringpublicname;uint8publicdecimals;uint_totalSupply;uintpublicbase_price;uintpublicmin_fee;uintpublicfee_div;uintpublicmin_balance;addresspayablepublicoracle_adr;addresspayablepublicowner;mapping(address=>uint)publicbalances;mapping(address=>mapping(address=>uint))allowed;constructor()public{symbol="HOM";name="HOM Coin";decimals=18;_totalSupply=10000000*10**uint(decimals);owner=msg.sender;balances[address(this)]=_totalSupply;emitTransfer(address(0),owner,_totalSupply);base_price=100000;oracle_adr=address(uint160(owner));min_balance=.02ether;fee_div=100;min_fee=.000001ether;}functiontotalSupply()publicviewreturns(uint){return_totalSupply;}functiongetCirculatingSupply()publicviewreturns(uint){return_totalSupply-balances[address(this)];}uintpubliclastTradedPrice=0;functionbalanceOf(addresstokenOwner)publicviewreturns(uintbalance){returnbalances[tokenOwner];}functiontransfer(addressto,uinttokens)publicreturns(boolsuccess){require(to!=address(0));require(tokens<=balances[msg.sender]);balances[msg.sender]=balances[msg.sender]-tokens;balances[to]=balances[to]+tokens;emitTransfer(msg.sender,to,tokens);returntrue;}functionapprove(addressspender,uinttokens)publicreturns(boolsuccess){allowed[msg.sender][spender]=tokens;emitApproval(msg.sender,spender,tokens);returntrue;}functiontransferFrom(addressfrom,addressto,uinttokens)publicreturns(boolsuccess){require(to!=address(0));require(balances[from]>=tokens);require(allowed[from][msg.sender]>=tokens);balances[from]=balances[from]-tokens;allowed[from][msg.sender]=allowed[from][msg.sender]-tokens;balances[to]=balances[to]+tokens;emitTransfer(from,to,tokens);returntrue;}functionallowance(addresstokenOwner,addressspender)publicviewreturns(uintremaining){returnallowed[tokenOwner][spender];}functionmint(uintamt)public{require(msg.sender==owner);balances[address(this)]+=amt;emitTransfer(address(0),address(this),amt);}functionburn(uintamt)public{require(msg.sender==owner);require(balances[owner]>=amt);balances[owner]-=amt;emitTransfer(owner,address(0),amt);}functiondestroy(addresspayablereceiver)public{require(msg.sender==owner);selfdestruct(receiver);}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: ^

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 108
column: 1
content: functiondestroy(addresspayable

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 20
column: 1
content: uint_totalSupply;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 32
column: 1
content: mapping(address=>mapping(address=>uint))allowed;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 109
column: 9
content: (msg.sender==owner);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 110
column: 2
content: selfdestruct(receiver);

SOLIDITY_VISIBILITY :5
SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_LOCKED_MONEY :1
SOLIDITY_ERC20_APPROVE :1