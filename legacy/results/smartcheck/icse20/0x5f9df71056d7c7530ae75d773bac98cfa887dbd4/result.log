/unique_chucks/21/0x5f9df71056d7c7530ae75d773bac98cfa887dbd4.sol
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 328
column: 4
content: functionnihilumBalanceOf(addressaccount)publicconstantreturns(uint256){varnewNihilum=totalNihilum.sub(accounts[account].lastNihilum);varproduct=accounts[account].balance.mul(newNihilum);if(totalSupply<=0)return0;if(account==owner)return0;returnproduct.div(totalSupply);}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 314
column: 12
content: for(uinti=lastUnpaidIteration;i<=totalShareholders;i++){uint256currentBalance=balanceOf[shareholders[i]];lastUnpaidIteration=i;if(currentBalance>0&&nihilumBalanceOf(shareholders[i])>0&&!accounts[shareholders[i]].isClaiming&&msg.gas>2000){accounts[shareholders[i]].isClaiming=true;shareholders[i].transfer(nihilumBalanceOf(shareholders[i]));accounts[shareholders[i]].lastNihilum=totalNihilum;accounts[shareholders[i]].isClaiming=false;}}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: ^

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 171
column: 12
content: private

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 264
column: 8
content: if(_allowManualTokensGeneration){balanceOf[msg.sender]+=numTokens;accounts[msg.sender].balance=accounts[msg.sender].balance.add(numTokens);Transfer(0,msg.sender,numTokens);}else{revert();}

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 206
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_TRANSFER_IN_LOOP
patternId: 8jdj43
severity: 2
line: 314
column: 12
content: for(uinti=lastUnpaidIteration;i<=totalShareholders;i++){uint256currentBalance=balanceOf[shareholders[i]];lastUnpaidIteration=i;if(currentBalance>0&&nihilumBalanceOf(shareholders[i])>0&&!accounts[shareholders[i]].isClaiming&&msg.gas>2000){accounts[shareholders[i]].isClaiming=true;shareholders[i].transfer(nihilumBalanceOf(shareholders[i]));accounts[shareholders[i]].lastNihilum=totalNihilum;accounts[shareholders[i]].isClaiming=false;}}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 290
column: 8
content: functionwhitelist(addressuserAddress)onlyOwner{accounts[userAddress].whitelisted=true;}

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 173
column: 4
content: mapping(address=>bool)registeredShareholders;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 174
column: 4
content: mapping(uint=>address)shareholders;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 187
column: 4
content: mapping(address=>Account)accounts;

SOLIDITY_VISIBILITY :4
SOLIDITY_SAFEMATH :1
SOLIDITY_DEPRECATED_CONSTRUCTIONS :1
SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_REVERT_REQUIRE :1
SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA :1
SOLIDITY_EXTRA_GAS_IN_LOOPS :1
SOLIDITY_TRANSFER_IN_LOOP :1