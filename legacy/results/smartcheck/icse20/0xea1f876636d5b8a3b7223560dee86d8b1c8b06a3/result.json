{
  "contract": "0xea1f876636d5b8a3b7223560dee86d8b1c8b06a3",
  "tool": "smartcheck",
  "start": 1563724972.8966815,
  "end": 1563724979.8690255,
  "duration": 6.972343921661377,
  "analysis": [
    {
      "name": "SOLIDITY_ADDRESS_HARDCODED",
      "patternId": "a91b18",
      "severity": 1,
      "line": 38,
      "column": 4,
      "content": "newOwner=address(0)"
    },
    {
      "name": "SOLIDITY_DIV_MUL",
      "patternId": "09hhh1",
      "severity": 2,
      "line": 226,
      "column": 66,
      "content": "_amount.div(100).mul(_releaseRate)"
    },
    {
      "name": "SOLIDITY_ERC20_APPROVE",
      "patternId": "af782c",
      "severity": 2,
      "line": 202,
      "column": 4,
      "content": "functionapprove(address_spender,uint256_value)publicwhenNotPausedreturns(bool){allowed[msg.sender][_spender]=_value;emitApproval(msg.sender,_spender,_value);returntrue;}"
    },
    {
      "name": "SOLIDITY_EXTRA_GAS_IN_LOOPS",
      "patternId": "d3j11j",
      "severity": 1,
      "line": 302,
      "column": 4,
      "content": "for(;lockupInfo[_holder].releaseTime<=now;){if(lockupInfo[_holder].lockupBalance<=lockupInfo[_holder].unlockAmountPerRound){releaseAmount=releaseAmount.add(lockupInfo[_holder].lockupBalance);deletelockupInfo[_holder];locks[_holder]=false;break;}else{releaseAmount=releaseAmount.add(lockupInfo[_holder].unlockAmountPerRound);lockupInfo[_holder].lockupBalance=lockupInfo[_holder].lockupBalance.sub(lockupInfo[_holder].unlockAmountPerRound);lockupInfo[_holder].releaseTime=lockupInfo[_holder].releaseTime.add(lockupInfo[_holder].termOfRound);}}"
    },
    {
      "name": "SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN",
      "patternId": "47acc2",
      "severity": 1,
      "line": 57,
      "column": 4,
      "content": "functionacceptOwnership()publiconlyNewOwnerreturns(bool){emitOwnershipTransferred(owner,newOwner);owner=newOwner;}"
    },
    {
      "name": "SOLIDITY_LOCKED_MONEY",
      "patternId": "30281d",
      "severity": 3,
      "line": 105,
      "column": 0,
      "content": "contractGoMoneyisERC20,Ownable,Pausable{uint128internalMONTH=30*24*3600;usingSafeMathforuint256;structLockupInfo{uint256releaseTime;uint256termOfRound;uint256unlockAmountPerRound;uint256lockupBalance;}stringpublicname;stringpublicsymbol;uint8publicdecimals;uint256internalinitialSupply;uint256internaltotalSupply_;mapping(address=>uint256)internalbalances;mapping(address=>bool)internallocks;mapping(address=>bool)publicfrozen;mapping(address=>mapping(address=>uint256))internalallowed;mapping(address=>LockupInfo)internallockupInfo;eventUnlock(addressindexedholder,uint256value);eventLock(addressindexedholder,uint256value);eventBurn(addressindexedowner,uint256value);eventMint(uint256value);eventFreeze(addressindexedholder);eventUnfreeze(addressindexedholder);modifiernotFrozen(address_holder){require(!frozen[_holder]);_;}constructor()public{name=\"GoMoney\";symbol=\"GOM\";decimals=0;initialSupply=10000000000;totalSupply_=10000000000;balances[owner]=totalSupply_;emitTransfer(address(0),owner,totalSupply_);}function()publicpayable{revert();}functiontotalSupply()publicviewreturns(uint256){returntotalSupply_;}function_transfer(address_from,address_to,uint_value)internal{require(_to!=address(0));require(_value<=balances[_from]);require(_value<=allowed[_from][msg.sender]);balances[_from]=balances[_from].sub(_value);balances[_to]=balances[_to].add(_value);allowed[_from][msg.sender]=allowed[_from][msg.sender].sub(_value);emitTransfer(_from,_to,_value);}functiontransfer(address_to,uint256_value)publicwhenNotPausednotFrozen(msg.sender)returns(bool){if(locks[msg.sender]){autoUnlock(msg.sender);}require(_to!=address(0));require(_value<=balances[msg.sender]);balances[msg.sender]=balances[msg.sender].sub(_value);balances[_to]=balances[_to].add(_value);emitTransfer(msg.sender,_to,_value);returntrue;}functionbalanceOf(address_holder)publicviewreturns(uint256balance){returnbalances[_holder]+lockupInfo[_holder].lockupBalance;}functiontransferFrom(address_from,address_to,uint256_value)publicwhenNotPausednotFrozen(_from)returns(bool){if(locks[_from]){autoUnlock(_from);}require(_to!=address(0));require(_value<=balances[_from]);require(_value<=allowed[_from][msg.sender]);_transfer(_from,_to,_value);returntrue;}functionapprove(address_spender,uint256_value)publicwhenNotPausedreturns(bool){allowed[msg.sender][_spender]=_value;emitApproval(msg.sender,_spender,_value);returntrue;}functionapproveAndCall(address_spender,uint256_value,bytes_extraData)publicreturns(boolsuccess){require(isContract(_spender));TokenRecipientspender=TokenRecipient(_spender);if(approve(_spender,_value)){spender.receiveApproval(msg.sender,_value,this,_extraData);returntrue;}}functionallowance(address_holder,address_spender)publicviewreturns(uint256){returnallowed[_holder][_spender];}functionlock(address_holder,uint256_amount,uint256_releaseStart,uint256_termOfRound,uint256_releaseRate)publiconlyOwnerreturns(bool){require(locks[_holder]==false);require(balances[_holder]>=_amount);balances[_holder]=balances[_holder].sub(_amount);lockupInfo[_holder]=LockupInfo(_releaseStart,_termOfRound,_amount.div(100).mul(_releaseRate),_amount);locks[_holder]=true;emitLock(_holder,_amount);returntrue;}functionunlock(address_holder)publiconlyOwnerreturns(bool){require(locks[_holder]==true);uint256releaseAmount=lockupInfo[_holder].lockupBalance;deletelockupInfo[_holder];locks[_holder]=false;emitUnlock(_holder,releaseAmount);balances[_holder]=balances[_holder].add(releaseAmount);returntrue;}functionfreezeAccount(address_holder)publiconlyOwnerreturns(bool){require(!frozen[_holder]);frozen[_holder]=true;emitFreeze(_holder);returntrue;}functionunfreezeAccount(address_holder)publiconlyOwnerreturns(bool){require(frozen[_holder]);frozen[_holder]=false;emitUnfreeze(_holder);returntrue;}functiongetNowTime()publicviewreturns(uint256){returnnow;}functionshowLockState(address_holder)publicviewreturns(bool,uint256,uint256,uint256,uint256){return(locks[_holder],lockupInfo[_holder].lockupBalance,lockupInfo[_holder].releaseTime,lockupInfo[_holder].termOfRound,lockupInfo[_holder].unlockAmountPerRound);}functionburn(uint256_value)publiconlyOwnerreturns(boolsuccess){require(_value<=balances[msg.sender]);addressburner=msg.sender;balances[burner]=balances[burner].sub(_value);totalSupply_=totalSupply_.sub(_value);emitBurn(burner,_value);returntrue;}functionmint(uint256_amount)onlyOwnerpublicreturns(bool){totalSupply_=totalSupply_.add(_amount);balances[owner]=balances[owner].add(_amount);emitTransfer(address(0),owner,_amount);returntrue;}functionisContract(addressaddr)internalviewreturns(bool){uintsize;assembly{size:=extcodesize(addr)}returnsize>0;}functionautoUnlock(address_holder)internalreturns(bool){if(lockupInfo[_holder].releaseTime<=now){returnreleaseTimeLock(_holder);}returnfalse;}functionreleaseTimeLock(address_holder)internalreturns(bool){require(locks[_holder]);uint256releaseAmount=0;for(;lockupInfo[_holder].releaseTime<=now;){if(lockupInfo[_holder].lockupBalance<=lockupInfo[_holder].unlockAmountPerRound){releaseAmount=releaseAmount.add(lockupInfo[_holder].lockupBalance);deletelockupInfo[_holder];locks[_holder]=false;break;}else{releaseAmount=releaseAmount.add(lockupInfo[_holder].unlockAmountPerRound);lockupInfo[_holder].lockupBalance=lockupInfo[_holder].lockupBalance.sub(lockupInfo[_holder].unlockAmountPerRound);lockupInfo[_holder].releaseTime=lockupInfo[_holder].releaseTime.add(lockupInfo[_holder].termOfRound);}}emitUnlock(_holder,releaseAmount);balances[_holder]=balances[_holder].add(releaseAmount);returntrue;}}"
    },
    {
      "name": "SOLIDITY_PRAGMAS_VERSION",
      "patternId": "23fc32",
      "severity": 1,
      "line": 1,
      "column": 16,
      "content": "^"
    },
    {
      "name": "SOLIDITY_REDUNDANT_FALLBACK_REJECT",
      "patternId": "b85a32",
      "severity": 1,
      "line": 150,
      "column": 31,
      "content": "{revert();}"
    },
    {
      "name": "SOLIDITY_SAFEMATH",
      "patternId": "837cac",
      "severity": 1,
      "line": 107,
      "column": 4,
      "content": "usingSafeMathforuint256;"
    },
    {
      "name": "SOLIDITY_SHOULD_NOT_BE_VIEW",
      "patternId": "189abf",
      "severity": 1,
      "line": 284,
      "column": 4,
      "content": "functionisContract(addressaddr)internalviewreturns(bool){uintsize;assembly{size:=extcodesize(addr)}returnsize>0;}"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "91h3sa",
      "severity": 1,
      "line": 150,
      "column": 16,
      "content": "public"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 208,
      "column": 62,
      "content": "bytes_extraData"
    }
  ]
}