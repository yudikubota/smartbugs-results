/unique_chucks/16/0x5534abcc97d3b5c279b3dceb53b59d0a93ef0a77.sol
line 193:136 extraneous input 'x' expecting {',', ')'}
line 206:52 extraneous input '_datasource' expecting {',', ')'}
line 206:63 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 206:81 mismatched input '_arg' expecting {';', '='}
line 206:85 extraneous input ')' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 206:96 extraneous input 'payable' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 206:121 extraneous input '_id' expecting ')'
line 206:125 mismatched input ';' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 208:65 extraneous input '_datasource' expecting {',', ')'}
line 208:76 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 208:94 mismatched input '_arg' expecting {';', '='}
line 208:98 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 208:114 mismatched input ')' expecting {';', '='}
line 208:150 extraneous input '_id' expecting ')'
line 208:154 mismatched input ';' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 209:66 extraneous input '_datasource' expecting {',', ')'}
line 209:77 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 209:94 mismatched input '_argN' expecting {';', '='}
line 209:99 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 209:115 mismatched input ')' expecting {';', '='}
line 209:151 extraneous input '_id' expecting ')'
line 209:155 mismatched input ';' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 210:66 extraneous input '_datasource' expecting {',', ')'}
line 210:77 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 210:95 mismatched input '_arg1' expecting {';', '='}
line 210:100 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 210:118 mismatched input '_arg2' expecting {';', '='}
line 210:123 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 210:139 mismatched input ')' expecting {';', '='}
line 210:175 extraneous input '_id' expecting ')'
line 210:179 mismatched input ';' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 1497:26 mismatched input 'payable' expecting {',', ')'}
line 1497:36 no viable alternative at input 'to,'
line 1497:36 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 1497:48 mismatched input ')' expecting {';', '='}
line 1497:68 extraneous input '{' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 1498:10 mismatched input '.' expecting {';', '='}
line 1498:19 extraneous input '(' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 1498:25 extraneous input ')' expecting {';', '='}
line 1500:4 extraneous input 'function' expecting {<EOF>, 'pragma', 'import', 'contract', 'library', 'interface'}
line 1622:16 extraneous input 'payable' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'length', 'balance', 'memory', 'storage', 'emit', '_', 'revert', Identifier}
line 1638:41 mismatched input 'payable' expecting {',', ')'}
line 1638:53 no viable alternative at input 'user)'
line 1638:53 extraneous input ')' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 1638:73 mismatched input 'returns' expecting {';', '='}
line 1638:89 extraneous input 'id' expecting ')'
line 1638:92 extraneous input '{' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 1640:20 extraneous input '=' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 1640:33 mismatched input '(' expecting {';', '='}
line 1640:68 mismatched input ',' expecting ')'
line 1640:74 mismatched input ',' expecting {';', '='}
line 1643:4 extraneous input 'function' expecting {<EOF>, 'pragma', 'import', 'contract', 'library', 'interface'}
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: adc165
severity: 1
line: 484
column: 24
content: 0x1d3B2638a7cC9f2CB3D298A3DA7a90B67E5506ed

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: adc165
severity: 1
line: 485
column: 40
content: 0x1d3B2638a7cC9f2CB3D298A3DA7a90B67E5506ed

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: adc165
severity: 1
line: 489
column: 24
content: 0xc03A2615D5efaf5F49F60B7BB6583eaec212fdf1

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: adc165
severity: 1
line: 490
column: 40
content: 0xc03A2615D5efaf5F49F60B7BB6583eaec212fdf1

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: adc165
severity: 1
line: 494
column: 24
content: 0xB7A07BcF2Ba2f2703b24C0691b5278999C59AC7e

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: adc165
severity: 1
line: 495
column: 40
content: 0xB7A07BcF2Ba2f2703b24C0691b5278999C59AC7e

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: adc165
severity: 1
line: 499
column: 24
content: 0x146500cfd35B22E4A392Fe0aDc06De1a1368Ed48

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: adc165
severity: 1
line: 500
column: 40
content: 0x146500cfd35B22E4A392Fe0aDc06De1a1368Ed48

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: adc165
severity: 1
line: 504
column: 24
content: 0xa2998EFD205FB9D4B4963aFb70778D6354ad3A41

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: adc165
severity: 1
line: 505
column: 40
content: 0xa2998EFD205FB9D4B4963aFb70778D6354ad3A41

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: adc165
severity: 1
line: 509
column: 24
content: 0x6f485C8BF6fc43eA212E93BBF8ce046C7f1cb475

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: adc165
severity: 1
line: 510
column: 40
content: 0x6f485C8BF6fc43eA212E93BBF8ce046C7f1cb475

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: adc165
severity: 1
line: 513
column: 24
content: 0x20e12A1F859B3FeaE5Fb2A0A32C18F5a65555bBF

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: adc165
severity: 1
line: 514
column: 40
content: 0x20e12A1F859B3FeaE5Fb2A0A32C18F5a65555bBF

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: adc165
severity: 1
line: 517
column: 24
content: 0x51efaF4c8B3C9AfBD5aB9F4bbC82784Ab6ef8fAA

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: adc165
severity: 1
line: 518
column: 40
content: 0x51efaF4c8B3C9AfBD5aB9F4bbC82784Ab6ef8fAA

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 368
column: 29
content: 0xFF

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 371
column: 29
content: 0xFFFF

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 374
column: 29
content: 0xFFFFFFFF

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 377
column: 29
content: 0xFFFFFFFFFFFFFFFF

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 435
column: 35
content: 0x00

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 436
column: 37
content: 0x30

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 437
column: 37
content: 0xF0

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 438
column: 38
content: 0x01

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 439
column: 38
content: 0x40

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 440
column: 40
content: 0x10

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 1289
column: 53
content: 0x20

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 1293
column: 80
content: 0x20

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 1326
column: 21
content: 0xFE

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 82
column: 8
content: _owner=address(0)

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 1446
column: 19
content: (false,address(0))

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 1479
column: 19
content: (false,address(0))

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 1080
column: 12
content: for(uinti=0;i<h.length;i++){if(h[i]==n[0]){subindex=1;while(subindex<n.length&&(i+subindex)<h.length&&h[i+subindex]==n[subindex]){subindex++;}if(subindex==n.length){returnint(i);}}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 1117
column: 8
content: for(i=0;i<_ba.length;i++){babcde[k++]=_ba[i];}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 1120
column: 8
content: for(i=0;i<_bb.length;i++){babcde[k++]=_bb[i];}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 1123
column: 8
content: for(i=0;i<_bc.length;i++){babcde[k++]=_bc[i];}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 1126
column: 8
content: for(i=0;i<_bd.length;i++){babcde[k++]=_bd[i];}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 1129
column: 8
content: for(i=0;i<_be.length;i++){babcde[k++]=_be[i];}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 1143
column: 8
content: for(uinti=0;i<bresult.length;i++){if((uint(uint8(bresult[i]))>=48)&&(uint(uint8(bresult[i]))<=57)){if(decimals){if(_b==0)break;else_b--;}mint*=10;mint+=uint(uint8(bresult[i]))-48;}elseif(uint(uint8(bresult[i]))==46){require(!decimals,'More than one decimal encountered in string!');decimals=true;}else{revert("Non-numeral character encountered in string!");}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 1172
column: 8
content: for(uinti=0;i<bresult.length;i++){if((uint(uint8(bresult[i]))>=48)&&(uint(uint8(bresult[i]))<=57)){if(decimals){if(_b==0){break;}else{_b--;}}mint*=10;mint+=uint(uint8(bresult[i]))-48;}elseif(uint(uint8(bresult[i]))==46){decimals=true;}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 1217
column: 8
content: for(uinti=0;i<_arr.length;i++){buf.encodeString(_arr[i]);}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 1229
column: 8
content: for(uinti=0;i<_arr.length;i++){buf.encodeBytes(_arr[i]);}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: k4o1l4
severity: 1
line: 1083
column: 20
content: while(subindex<n.length&&(i+subindex)<h.length&&h[i+subindex]==n[subindex]){subindex++;}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 1006
column: 4
content: functiongetCodeSize(address_addr)viewinternalreturns(uint_size){assembly{_size:=extcodesize(_addr)}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 1055
column: 8
content: for(uinti=0;i<minLength;i++){if(a[i]<b[i]){return-1;}elseif(a[i]>b[i]){return1;}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 1080
column: 12
content: for(uinti=0;i<h.length;i++){if(h[i]==n[0]){subindex=1;while(subindex<n.length&&(i+subindex)<h.length&&h[i+subindex]==n[subindex]){subindex++;}if(subindex==n.length){returnint(i);}}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 1117
column: 8
content: for(i=0;i<_ba.length;i++){babcde[k++]=_ba[i];}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 1120
column: 8
content: for(i=0;i<_bb.length;i++){babcde[k++]=_bb[i];}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 1123
column: 8
content: for(i=0;i<_bc.length;i++){babcde[k++]=_bc[i];}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 1126
column: 8
content: for(i=0;i<_bd.length;i++){babcde[k++]=_bd[i];}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 1129
column: 8
content: for(i=0;i<_be.length;i++){babcde[k++]=_be[i];}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 1143
column: 8
content: for(uinti=0;i<bresult.length;i++){if((uint(uint8(bresult[i]))>=48)&&(uint(uint8(bresult[i]))<=57)){if(decimals){if(_b==0)break;else_b--;}mint*=10;mint+=uint(uint8(bresult[i]))-48;}elseif(uint(uint8(bresult[i]))==46){require(!decimals,'More than one decimal encountered in string!');decimals=true;}else{revert("Non-numeral character encountered in string!");}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 1172
column: 8
content: for(uinti=0;i<bresult.length;i++){if((uint(uint8(bresult[i]))>=48)&&(uint(uint8(bresult[i]))<=57)){if(decimals){if(_b==0){break;}else{_b--;}}mint*=10;mint+=uint(uint8(bresult[i]))-48;}elseif(uint(uint8(bresult[i]))==46){decimals=true;}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 1217
column: 8
content: for(uinti=0;i<_arr.length;i++){buf.encodeString(_arr[i]);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 1229
column: 8
content: for(uinti=0;i<_arr.length;i++){buf.encodeBytes(_arr[i]);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 1544
column: 8
content: for(i=0;i<stop;i++){if(b[i]=="."){if(b.length-i>3){stop=i+3;dotted=0;}elsedotted-=b.length-i-1;}else{uintc=uint(uint8(b[i]));if(c>=48&&c<=57){result=result*10+(c-48);}}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: 17f23a
severity: 1
line: 1083
column: 26
content: subindex<n.length&&(i+subindex)<h.length&&h[i+subindex]==n[subindex]

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: 17f23a
severity: 1
line: 1402
column: 15
content: i<(32+_fromOffset+_length)

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 196
column: 0
content: contractOraclizeI{addresspubliccbAddress;functionsetProofType(byte_proofType)external;functionsetCustomGasPrice(uint_gasPrice)external;functiongetPrice(stringmemory_datasource)publicreturns(uint_dsprice);functionrandomDS_getSessionPubKeyHash()externalviewreturns(bytes32_sessionKeyHash);functiongetPrice(stringmemory_datasource,uint_gasLimit)publicreturns(uint_dsprice);functionqueryN(uint_timestamp,stringmemory_datasource,bytesmemory_argN)publicpayablereturns(bytes32_id);functionquery(uint_timestamp,stringcalldata<missing ')'>_datasource,stringcalldata_arg)externalpayablereturns<missing ';'>(bytes32_id);functionquery2(uint_timestamp,stringmemory_datasource,stringmemory_arg1,stringmemory_arg2)publicpayablereturns(bytes32_id);functionquery_withGasLimit(uint_timestamp,stringcalldata<missing ')'>_datasource,stringcalldata_arg,uint_gasLimit)externalpayablereturns(bytes32_id);functionqueryN_withGasLimit(uint_timestamp,stringcalldata<missing ')'>_datasource,bytescalldata_argN,uint_gasLimit)externalpayablereturns(bytes32_id);functionquery2_withGasLimit(uint_timestamp,stringcalldata<missing ')'>_datasource,stringcalldata_arg1,stringcalldata_arg2,uint_gasLimit)externalpayablereturns(bytes32_id);}

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 1495
column: 0
content: contractPoolisOwnable{function()externalpayable{}functionsend(addresspayableto,uintvalue)publiconlyOwner{to.transfer(value);}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 189
column: 16
content: >=

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 189
column: 25
content: <

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 38
column: 12
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 357
column: 10
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 358
column: 10
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 359
column: 10
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 360
column: 10
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 361
column: 10
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 362
column: 10
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 363
column: 10
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 1638
column: 55
content: private

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 1151
column: 19
content: if(uint(uint8(bresult[i]))==46){require(!decimals,'More than one decimal encountered in string!');decimals=true;}else{revert("Non-numeral character encountered in string!");}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 1562
column: 8
content: if(msg.sender!=oraclize_cbAddress())revert();

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 1508
column: 4
content: usingSafeMathforuint;

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 244
column: 4
content: functioninit(buffermemory_buf,uint_capacity)internalpure{uintcapacity=_capacity;if(capacity%32!=0){capacity+=32-(capacity%32);}_buf.capacity=capacity;assembly{letptr:=mload(0x40)mstore(_buf,ptr)mstore(ptr,0)mstore(0x40,add(ptr,capacity))}}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 278
column: 4
content: functionappend(buffermemory_buf,bytesmemory_data)internalpurereturns(buffermemory_buffer){if(_data.length+_buf.buf.length>_buf.capacity){resize(_buf,max(_buf.capacity,_data.length)*2);}uintdest;uintsrc;uintlen=_data.length;assembly{letbufptr:=mload(_buf)letbuflen:=mload(bufptr)dest:=add(add(bufptr,buflen),32)mstore(bufptr,add(buflen,mload(_data)))src:=add(_data,32)}for(;len>=32;len-=32){assembly{mstore(dest,mload(src))}dest+=32;src+=32;}uintmask=256**(32-len)-1;assembly{letsrcpart:=and(mload(src),not(mask))letdestpart:=and(mload(dest),mask)mstore(dest,or(destpart,srcpart))}return_buf;}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 316
column: 4
content: functionappend(buffermemory_buf,uint8_data)internalpure{if(_buf.buf.length+1>_buf.capacity){resize(_buf,_buf.capacity*2);}assembly{letbufptr:=mload(_buf)letbuflen:=mload(bufptr)letdest:=add(add(bufptr,buflen),32)mstore8(dest,_data)mstore(bufptr,add(buflen,1))}}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 337
column: 4
content: functionappendInt(buffermemory_buf,uint_data,uint_len)internalpurereturns(buffermemory_buffer){if(_len+_buf.buf.length>_buf.capacity){resize(_buf,max(_buf.capacity,_len)*2);}uintmask=256**_len-1;assembly{letbufptr:=mload(_buf)letbuflen:=mload(bufptr)letdest:=add(add(bufptr,buflen),_len)mstore(dest,or(and(mload(dest),not(mask)),_data))mstore(bufptr,add(buflen,_len))}return_buf;}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 1397
column: 4
content: functioncopyBytes(bytesmemory_from,uint_fromOffset,uint_length,bytesmemory_to,uint_toOffset)internalpurereturns(bytesmemory_copiedBytes){uintminLength=_length+_toOffset;require(_to.length>=minLength);uinti=32+_fromOffset;uintj=32+_toOffset;while(i<(32+_fromOffset+_length)){assembly{lettmp:=mload(add(_from,i))mstore(add(_to,j),tmp)}i+=32;j+=32;}return_to;}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 1484
column: 4
content: functionsafeMemoryCleaner()internalpure{assembly{letfmem:=mload(0x40)codecopy(fmem,codesize,sub(msize,fmem))}}

ruleId: SOLIDITY_SHOULD_NOT_BE_VIEW
patternId: 189abf
severity: 1
line: 1006
column: 4
content: functiongetCodeSize(address_addr)viewinternalreturns(uint_size){assembly{_size:=extcodesize(_addr)}}

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 1416
column: 95
content: (bool_success,address_recoveredAddress)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 1441
column: 75
content: (bool_success,address_recoveredAddress)

ruleId: SOLIDITY_UNCHECKED_CALL
patternId: f39eed
severity: 3
line: 525
column: 8
content: __callback(_myid,_result,newbytes(0))

ruleId: SOLIDITY_UNCHECKED_CALL
patternId: f39eed
severity: 3
line: 1635
column: 13
content: send(msg.sender,pool.balance())

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 250
column: 8
content: assembly{letptr:=mload(0x40)mstore(_buf,ptr)mstore(ptr,0)mstore(0x40,add(ptr,capacity))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 285
column: 8
content: assembly{letbufptr:=mload(_buf)letbuflen:=mload(bufptr)dest:=add(add(bufptr,buflen),32)mstore(bufptr,add(buflen,mload(_data)))src:=add(_data,32)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 293
column: 12
content: assembly{mstore(dest,mload(src))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 300
column: 8
content: assembly{letsrcpart:=and(mload(src),not(mask))letdestpart:=and(mload(dest),mask)mstore(dest,or(destpart,srcpart))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 320
column: 8
content: assembly{letbufptr:=mload(_buf)letbuflen:=mload(bufptr)letdest:=add(add(bufptr,buflen),32)mstore8(dest,_data)mstore(bufptr,add(buflen,1))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 342
column: 8
content: assembly{letbufptr:=mload(_buf)letbuflen:=mload(bufptr)letdest:=add(add(bufptr,buflen),_len)mstore(dest,or(and(mload(dest),not(mask)),_data))mstore(bufptr,add(buflen,_len))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 1244
column: 8
content: assembly{mstore(unonce,0x20)mstore(add(unonce,0x20),xor(blockhash(sub(number,1)),xor(coinbase,timestamp)))mstore(sessionKeyHash,0x20)mstore(add(sessionKeyHash,0x20),sessionKeyHash_bytes32)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 1256
column: 8
content: assembly{mstore(add(delay,0x20),_delay)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 1264
column: 8
content: assembly{letx:=mload(add(delay_bytes8,0x20))mstore8(add(delay_bytes8_left,0x27),div(x,0x100000000000000000000000000000000000000000000000000000000000000))mstore8(add(delay_bytes8_left,0x26),div(x,0x1000000000000000000000000000000000000000000000000000000000000))mstore8(add(delay_bytes8_left,0x25),div(x,0x10000000000000000000000000000000000000000000000000000000000))mstore8(add(delay_bytes8_left,0x24),div(x,0x100000000000000000000000000000000000000000000000000000000))mstore8(add(delay_bytes8_left,0x23),div(x,0x1000000000000000000000000000000000000000000000000000000))mstore8(add(delay_bytes8_left,0x22),div(x,0x10000000000000000000000000000000000000000000000000000))mstore8(add(delay_bytes8_left,0x21),div(x,0x100000000000000000000000000000000000000000000000000))mstore8(add(delay_bytes8_left,0x20),div(x,0x1000000000000000000000000000000000000000000000000))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 1294
column: 8
content: assembly{sigr:=mload(add(sigr_,32))sigs:=mload(add(sigs_,32))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 1403
column: 12
content: assembly{lettmp:=mload(add(_from,i))mstore(add(_to,j),tmp)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 1427
column: 8
content: assembly{letsize:=mload(0x40)mstore(size,_hash)mstore(add(size,32),_v)mstore(add(size,64),_r)mstore(add(size,96),_s)ret:=call(3000,1,0,size,128,size,32)addr:=mload(size)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 1453
column: 8
content: assembly{r:=mload(add(_sig,32))s:=mload(add(_sig,64))v:=byte(0,mload(add(_sig,96)))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 1485
column: 8
content: assembly{letfmem:=mload(0x40)codecopy(fmem,codesize,sub(msize,fmem))}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 206
column: 4
content: functionquery(uint_timestamp,stringcalldata<missing ')'>

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 208
column: 4
content: functionquery_withGasLimit(uint_timestamp,stringcalldata<missing ')'>

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 209
column: 4
content: functionqueryN_withGasLimit(uint_timestamp,stringcalldata<missing ')'>

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 210
column: 4
content: functionquery2_withGasLimit(uint_timestamp,stringcalldata<missing ')'>

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1497
column: 4
content: functionsend(addresspayable

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1638
column: 4
content: function_liquidationRequest(addresspayable

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 206
column: 52
content: _datasource,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 206
column: 65
content: stringcalldata

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 206
column: 112
content: (bytes32_id);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 208
column: 65
content: _datasource,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 208
column: 78
content: stringcalldata

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 208
column: 94
content: _arg,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 208
column: 100
content: uint_gasLimit)externalpayablereturns

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 208
column: 141
content: (bytes32_id);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 209
column: 66
content: _datasource,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 209
column: 79
content: bytescalldata

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 209
column: 94
content: _argN,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 209
column: 101
content: uint_gasLimit)externalpayablereturns

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 209
column: 142
content: (bytes32_id);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 210
column: 66
content: _datasource,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 210
column: 79
content: stringcalldata

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 210
column: 95
content: _arg1,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 210
column: 102
content: stringcalldata

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 210
column: 118
content: _arg2,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 210
column: 125
content: uint_gasLimit)externalpayablereturns

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 210
column: 166
content: (bytes32_id);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 428
column: 4
content: OraclizeIoraclize;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 429
column: 4
content: OraclizeAddrResolverIOAR;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 431
column: 4
content: uintconstantday=60*60*24;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 432
column: 4
content: uintconstantweek=60*60*24*7;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 433
column: 4
content: uintconstantmonth=60*60*24*30;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 435
column: 4
content: byteconstantproofType_NONE=0x00;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 436
column: 4
content: byteconstantproofType_Ledger=0x30;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 437
column: 4
content: byteconstantproofType_Native=0xF0;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 438
column: 4
content: byteconstantproofStorage_IPFS=0x01;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 439
column: 4
content: byteconstantproofType_Android=0x40;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 440
column: 4
content: byteconstantproofType_TLSNotary=0x10;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 442
column: 4
content: stringoraclize_network_name;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 443
column: 4
content: uint8constantnetworkID_auto=0;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 444
column: 4
content: uint8constantnetworkID_morden=2;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 445
column: 4
content: uint8constantnetworkID_mainnet=1;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 446
column: 4
content: uint8constantnetworkID_testnet=2;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 447
column: 4
content: uint8constantnetworkID_consensys=161;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 449
column: 4
content: mapping(bytes32=>bytes32)oraclize_randomDS_args;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 450
column: 4
content: mapping(bytes32=>bool)oraclize_randomDS_sessionKeysHashVerified;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1497
column: 34
content: to,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1497
column: 38
content: uintvalue)public

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1497
column: 57
content: onlyOwner{to.

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1498
column: 11
content: transfer(value);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1507
column: 4
content: uintconstantORACLIZE_GASLIMIT=300000;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1509
column: 4
content: IERC20WBTC;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1512
column: 4
content: mapping(address=>Deposit)deposits;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1521
column: 4
content: mapping(bytes32=>Transaction)queries;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1638
column: 80
content: (bytes32id){id=oraclize_query("URL","json(https://api.binance.com/api/v3/ticker/price?symbol=BTCUSDT).price",ORACLIZE_GASLIMIT);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1640
column: 8
content: queries[id]=Transaction

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1640
column: 33
content: (TransactionType.LiquidqtionRequest,user,0);

SOLIDITY_VISIBILITY :56
SOLIDITY_PRAGMAS_VERSION :2
SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN :1
SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA :9
SOLIDITY_EXTRA_GAS_IN_LOOPS :11
SOLIDITY_ADDRESS_HARDCODED :32
SOLIDITY_GAS_LIMIT_IN_LOOPS :14
SOLIDITY_UNCHECKED_CALL :2
SOLIDITY_SHOULD_RETURN_STRUCT :2
SOLIDITY_SHOULD_NOT_BE_PURE :6
SOLIDITY_SAFEMATH :1
SOLIDITY_REVERT_REQUIRE :2
SOLIDITY_LOCKED_MONEY :2
SOLIDITY_USING_INLINE_ASSEMBLY :14
SOLIDITY_SHOULD_NOT_BE_VIEW :1