{
  "contract": "0x80dd619abf9bf9a084cdeead09525e3a02d521bf",
  "tool": "smartcheck",
  "start": 1563511003.5271575,
  "end": 1563511011.5618997,
  "duration": 8.0347421169281,
  "analysis": [
    {
      "name": "SOLIDITY_EXTRA_GAS_IN_LOOPS",
      "patternId": "d3j11j",
      "severity": 1,
      "line": 61,
      "column": 8,
      "content": "for(uint16i=32;i<=proof.length;i+=32){assembly{sibling:=mload(add(proof,i))}if(index&(uint16(1)<<(i/32-1))==0){root=sha256(abi.encodePacked(root,sibling));}else{root=sha256(abi.encodePacked(sibling,root));}}"
    },
    {
      "name": "SOLIDITY_PRAGMAS_VERSION",
      "patternId": "23fc32",
      "severity": 1,
      "line": 1,
      "column": 16,
      "content": "^"
    },
    {
      "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
      "patternId": "5616b2",
      "severity": 1,
      "line": 4,
      "column": 12,
      "content": "private"
    },
    {
      "name": "SOLIDITY_SHOULD_NOT_BE_VIEW",
      "patternId": "189abf",
      "severity": 1,
      "line": 50,
      "column": 4,
      "content": "functionverifyDocument(bytes32docHash,bytesmerkleProof,uint16index)externalviewreturns(bool){require(merkleProof.length>=32,\"The Merkle Proof given is too short! It must be atleast 32 bytes in size.\");require(merkleProof.length<=512,\"The Merkle Proof given is too long! It can be upto only 512 bytes as the Merkle Tree is allowed a maximum depth of 16 under conventions of this contract.\");require(merkleProof.length%32==0,\"The Merkle Proof given is not a multiple of 32 bytes! It must be a sequence of 32-byte SHA2-256 hashes each representing the sibling at every non-root level starting from leaf level in the Merkle Tree.\");bytes32root=docHash;bytes32sibling;bytesmemoryproof=merkleProof;for(uint16i=32;i<=proof.length;i+=32){assembly{sibling:=mload(add(proof,i))}if(index&(uint16(1)<<(i/32-1))==0){root=sha256(abi.encodePacked(root,sibling));}else{root=sha256(abi.encodePacked(sibling,root));}}returnisSignedMerkleRoot[root];}"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 62,
      "column": 12,
      "content": "assembly{sibling:=mload(add(proof,i))}"
    }
  ]
}