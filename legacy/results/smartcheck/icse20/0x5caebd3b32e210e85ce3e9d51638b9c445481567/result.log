/unique_chucks/8/0x5caebd3b32e210e85ce3e9d51638b9c445481567.sol
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 27
column: 48
content: 0x80ac58cd

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 41
column: 58
content: 0x780e9d63

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 49
column: 56
content: 0x5b5e139f

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 140
column: 46
content: 0x01ffc9a7

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 178
column: 28
content: 0xffffffff

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 285
column: 45
content: 0x150b7a02

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 321
column: 44
content: 0x150b7a02

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 952
column: 19
content: 0xffffffffffffffffffffffffffffffff

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 954
column: 40
content: 0x100000000000000000000000000000000

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 956
column: 19
content: 0xffffffffffffffff

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 958
column: 40
content: 0x10000000000000000

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 960
column: 19
content: 0xffffffff

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 962
column: 40
content: 0x100000000

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 964
column: 19
content: 0xffff

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 966
column: 40
content: 0x10000

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 968
column: 19
content: 0xff

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 1030
column: 20
content: 0x80

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 1032
column: 26
content: 0xE0

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 1034
column: 26
content: 0xF0

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 1036
column: 26
content: 0xF8

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 1038
column: 26
content: 0xFC

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 1123
column: 16
content: 0x80

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 1125
column: 22
content: 0xE0

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 1127
column: 22
content: 0xF0

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 1174
column: 16
content: 0x80

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 1177
column: 22
content: 0xE0

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 1178
column: 22
content: 0x1F

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 1180
column: 22
content: 0xF0

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 1181
column: 22
content: 0x0F

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 1184
column: 22
content: 0x07

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 1195
column: 35
content: 0xFF

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 1196
column: 20
content: 0xC0

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 1196
column: 28
content: 0x80

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 1200
column: 36
content: 0x3F

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 559
column: 6
content: tokenApprovals[_tokenId]=address(0)

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 582
column: 4
content: tokenOwner[_tokenId]=address(0)

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 847
column: 4
content: owner=address(0)

ruleId: SOLIDITY_ARRAY_LENGTH_MANIPULATION
patternId: 872bdd
severity: 1
line: 755
column: 4
content: ownedTokens[_from].length--

ruleId: SOLIDITY_ARRAY_LENGTH_MANIPULATION
patternId: 872bdd
severity: 1
line: 800
column: 4
content: allTokens.length--

ruleId: SOLIDITY_ERC20_APPROVE
patternId: af782c
severity: 2
line: 371
column: 2
content: functionapprove(address_to,uint256_tokenId)public{addressowner=ownerOf(_tokenId);require(_to!=owner);require(msg.sender==owner||isApprovedForAll(owner,msg.sender));tokenApprovals[_tokenId]=_to;emitApproval(owner,_to,_tokenId);}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 1564
column: 8
content: for(uinti=0;i<parts.length;i++)length+=parts[i]._len;

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 1571
column: 8
content: for(i=0;i<parts.length;i++){memcpy(retptr,parts[i]._ptr,parts[i]._len);retptr+=parts[i]._len;if(i<parts.length-1){memcpy(retptr,self._ptr,self._len);retptr+=self._len;}}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 1153
column: 4
content: functionnextRune(slicememoryself)internalpurereturns(slicememoryret){nextRune(self,ret);}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 1211
column: 4
content: functionkeccak(slicememoryself)internalpurereturns(bytes32ret){assembly{ret:=keccak256(mload(add(self,32)),mload(self))}}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 1471
column: 4
content: functionsplit(slicememoryself,slicememoryneedle)internalpurereturns(slicememorytoken){split(self,needle,token);}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 1507
column: 4
content: functionrsplit(slicememoryself,slicememoryneedle)internalpurereturns(slicememorytoken){rsplit(self,needle,token);}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 1517
column: 4
content: functioncount(slicememoryself,slicememoryneedle)internalpurereturns(uintcnt){uintptr=findPtr(self._len,self._ptr,needle._len,needle._ptr)+needle._len;while(ptr<=self._ptr+self._len){cnt++;ptr=findPtr(self._len-(ptr-self._ptr),ptr,needle._len,needle._ptr)+needle._len;}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 1564
column: 8
content: for(uinti=0;i<parts.length;i++)length+=parts[i]._len;

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 1571
column: 8
content: for(i=0;i<parts.length;i++){memcpy(retptr,parts[i]._ptr,parts[i]._len);retptr+=parts[i]._len;if(i<parts.length-1){memcpy(retptr,self._ptr,self._len);retptr+=self._len;}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: 17f23a
severity: 1
line: 1345
column: 23
content: ptrdata!=needledata

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: 17f23a
severity: 1
line: 1385
column: 23
content: ptrdata!=needledata

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: 17f23a
severity: 1
line: 1397
column: 23
content: ptr>=selfptr

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: 17f23a
severity: 1
line: 1519
column: 15
content: ptr<=self._ptr+self._len

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: ^

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 321
column: 9
content: private

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 316
column: 2
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 911
column: 4
content: functionmemcpy(uintdest,uintsrc,uintlen)privatepure{for(;len>=32;len-=32){assembly{mstore(dest,mload(src))}dest+=32;src+=32;}uintmask=256**(32-len)-1;assembly{letsrcpart:=and(mload(src),not(mask))letdestpart:=and(mload(dest),mask)mstore(dest,or(destpart,srcpart))}}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 935
column: 4
content: functiontoSlice(stringmemoryself)internalpurereturns(slicememory){uintptr;assembly{ptr:=add(self,0x20)}returnslice(bytes(self).length,ptr);}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 981
column: 4
content: functiontoSliceB32(bytes32self)internalpurereturns(slicememoryret){assembly{letptr:=mload(0x40)mstore(0x40,add(ptr,0x20))mstore(ptr,self)mstore(add(ret,0x20),ptr)}ret._len=len(self);}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 1006
column: 4
content: functiontoString(slicememoryself)internalpurereturns(stringmemory){stringmemoryret=newstring(self._len);uintretptr;assembly{retptr:=add(ret,32)}memcpy(retptr,self._ptr,self._len);returnret;}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 1023
column: 4
content: functionlen(slicememoryself)internalpurereturns(uintl){uintptr=self._ptr-31;uintend=ptr+self._len;for(l=0;ptr<end;l++){uint8b;assembly{b:=and(mload(ptr),0xFF)}if(b<0x80){ptr+=1;}elseif(b<0xE0){ptr+=2;}elseif(b<0xF0){ptr+=3;}elseif(b<0xF8){ptr+=4;}elseif(b<0xFC){ptr+=5;}else{ptr+=6;}}}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 1064
column: 4
content: functioncompare(slicememoryself,slicememoryother)internalpurereturns(int){uintshortest=self._len;if(other._len<self._len)shortest=other._len;uintselfptr=self._ptr;uintotherptr=other._ptr;for(uintidx=0;idx<shortest;idx+=32){uinta;uintb;assembly{a:=mload(selfptr)b:=mload(otherptr)}if(a!=b){uint256mask=uint256(-1);if(shortest<32){mask=~(2**(8*(32-shortest+idx))-1);}uint256diff=(a&mask)-(b&mask);if(diff!=0)returnint(diff);}selfptr+=32;otherptr+=32;}returnint(self._len)-int(other._len);}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 1111
column: 4
content: functionnextRune(slicememoryself,slicememoryrune)internalpurereturns(slicememory){rune._ptr=self._ptr;if(self._len==0){rune._len=0;returnrune;}uintl;uintb;assembly{b:=and(mload(sub(mload(add(self,32)),31)),0xFF)}if(b<0x80){l=1;}elseif(b<0xE0){l=2;}elseif(b<0xF0){l=3;}else{l=4;}if(l>self._len){rune._len=self._len;self._ptr+=self._len;self._len=0;returnrune;}self._ptr+=l;self._len-=l;rune._len=l;returnrune;}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 1162
column: 4
content: functionord(slicememoryself)internalpurereturns(uintret){if(self._len==0){return0;}uintword;uintlength;uintdivisor=2**248;assembly{word:=mload(mload(add(self,32)))}uintb=word/divisor;if(b<0x80){ret=b;length=1;}elseif(b<0xE0){ret=b&0x1F;length=2;}elseif(b<0xF0){ret=b&0x0F;length=3;}else{ret=b&0x07;length=4;}if(length>self._len){return0;}for(uinti=1;i<length;i++){divisor=divisor/256;b=(word/divisor)&0xFF;if(b&0xC0!=0x80){return0;}ret=(ret*64)|(b&0x3F);}returnret;}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 1211
column: 4
content: functionkeccak(slicememoryself)internalpurereturns(bytes32ret){assembly{ret:=keccak256(mload(add(self,32)),mload(self))}}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 1223
column: 4
content: functionstartsWith(slicememoryself,slicememoryneedle)internalpurereturns(bool){if(self._len<needle._len){returnfalse;}if(self._ptr==needle._ptr){returntrue;}boolequal;assembly{letlength:=mload(needle)letselfptr:=mload(add(self,0x20))letneedleptr:=mload(add(needle,0x20))equal:=eq(keccak256(selfptr,length),keccak256(needleptr,length))}returnequal;}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 1249
column: 4
content: functionbeyond(slicememoryself,slicememoryneedle)internalpurereturns(slicememory){if(self._len<needle._len){returnself;}boolequal=true;if(self._ptr!=needle._ptr){assembly{letlength:=mload(needle)letselfptr:=mload(add(self,0x20))letneedleptr:=mload(add(needle,0x20))equal:=eq(keccak256(selfptr,length),keccak256(needleptr,length))}}if(equal){self._len-=needle._len;self._ptr+=needle._len;}returnself;}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 1278
column: 4
content: functionendsWith(slicememoryself,slicememoryneedle)internalpurereturns(bool){if(self._len<needle._len){returnfalse;}uintselfptr=self._ptr+self._len-needle._len;if(selfptr==needle._ptr){returntrue;}boolequal;assembly{letlength:=mload(needle)letneedleptr:=mload(add(needle,0x20))equal:=eq(keccak256(selfptr,length),keccak256(needleptr,length))}returnequal;}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 1306
column: 4
content: functionuntil(slicememoryself,slicememoryneedle)internalpurereturns(slicememory){if(self._len<needle._len){returnself;}uintselfptr=self._ptr+self._len-needle._len;boolequal=true;if(selfptr!=needle._ptr){assembly{letlength:=mload(needle)letneedleptr:=mload(add(needle,0x20))equal:=eq(keccak256(selfptr,length),keccak256(needleptr,length))}}if(equal){self._len-=needle._len;}returnself;}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 1330
column: 4
content: functionfindPtr(uintselflen,uintselfptr,uintneedlelen,uintneedleptr)privatepurereturns(uint){uintptr=selfptr;uintidx;if(needlelen<=selflen){if(needlelen<=32){bytes32mask=bytes32(~(2**(8*(32-needlelen))-1));bytes32needledata;assembly{needledata:=and(mload(needleptr),mask)}uintend=selfptr+selflen-needlelen;bytes32ptrdata;assembly{ptrdata:=and(mload(ptr),mask)}while(ptrdata!=needledata){if(ptr>=end)returnselfptr+selflen;ptr++;assembly{ptrdata:=and(mload(ptr),mask)}}returnptr;}else{bytes32hash;assembly{hash:=keccak256(needleptr,needlelen)}for(idx=0;idx<=selflen-needlelen;idx++){bytes32testHash;assembly{testHash:=keccak256(ptr,needlelen)}if(hash==testHash)returnptr;ptr+=1;}}}returnselfptr+selflen;}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 1371
column: 4
content: functionrfindPtr(uintselflen,uintselfptr,uintneedlelen,uintneedleptr)privatepurereturns(uint){uintptr;if(needlelen<=selflen){if(needlelen<=32){bytes32mask=bytes32(~(2**(8*(32-needlelen))-1));bytes32needledata;assembly{needledata:=and(mload(needleptr),mask)}ptr=selfptr+selflen-needlelen;bytes32ptrdata;assembly{ptrdata:=and(mload(ptr),mask)}while(ptrdata!=needledata){if(ptr<=selfptr)returnselfptr;ptr--;assembly{ptrdata:=and(mload(ptr),mask)}}returnptr+needlelen;}else{bytes32hash;assembly{hash:=keccak256(needleptr,needlelen)}ptr=selfptr+(selflen-needlelen);while(ptr>=selfptr){bytes32testHash;assembly{testHash:=keccak256(ptr,needlelen)}if(hash==testHash)returnptr+needlelen;ptr-=1;}}}returnselfptr;}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 1542
column: 4
content: functionconcat(slicememoryself,slicememoryother)internalpurereturns(stringmemory){stringmemoryret=newstring(self._len+other._len);uintretptr;assembly{retptr:=add(ret,32)}memcpy(retptr,self._ptr,self._len);memcpy(retptr+self._len,other._ptr,other._len);returnret;}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 1559
column: 4
content: functionjoin(slicememoryself,slice[]memoryparts)internalpurereturns(stringmemory){if(parts.length==0)return"";uintlength=self._len*(parts.length-1);for(uinti=0;i<parts.length;i++)length+=parts[i]._len;stringmemoryret=newstring(length);uintretptr;assembly{retptr:=add(ret,32)}for(i=0;i<parts.length;i++){memcpy(retptr,parts[i]._ptr,parts[i]._len);retptr+=parts[i]._len;if(i<parts.length-1){memcpy(retptr,self._ptr,self._len);retptr+=self._len;}}returnret;}

ruleId: SOLIDITY_SHOULD_NOT_BE_VIEW
patternId: 189abf
severity: 1
line: 259
column: 2
content: functionisContract(address_account)internalviewreturns(bool){uint256size;assembly{size:=extcodesize(_account)}returnsize>0;}

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 92
column: 4
content: bytes_data

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 122
column: 59
content: string

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 304
column: 4
content: bytes_data

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 482
column: 4
content: bytes_data

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 598
column: 4
content: bytes_data

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 644
column: 14
content: string_name

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 644
column: 28
content: string_symbol

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 674
column: 59
content: string

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 722
column: 42
content: string_uri

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1724
column: 36
content: string_metadata

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1765
column: 73
content: uint[]

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1769
column: 74
content: uint[]

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1773
column: 73
content: uint[]

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 914
column: 12
content: assembly{mstore(dest,mload(src))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 923
column: 8
content: assembly{letsrcpart:=and(mload(src),not(mask))letdestpart:=and(mload(dest),mask)mstore(dest,or(destpart,srcpart))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 937
column: 8
content: assembly{ptr:=add(self,0x20)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 983
column: 8
content: assembly{letptr:=mload(0x40)mstore(0x40,add(ptr,0x20))mstore(ptr,self)mstore(add(ret,0x20),ptr)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 1009
column: 8
content: assembly{retptr:=add(ret,32)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 1029
column: 12
content: assembly{b:=and(mload(ptr),0xFF)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 1074
column: 12
content: assembly{a:=mload(selfptr)b:=mload(otherptr)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 1122
column: 8
content: assembly{b:=and(mload(sub(mload(add(self,32)),31)),0xFF)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 1172
column: 8
content: assembly{word:=mload(mload(add(self,32)))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 1212
column: 8
content: assembly{ret:=keccak256(mload(add(self,32)),mload(self))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 1233
column: 8
content: assembly{letlength:=mload(needle)letselfptr:=mload(add(self,0x20))letneedleptr:=mload(add(needle,0x20))equal:=eq(keccak256(selfptr,length),keccak256(needleptr,length))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 1256
column: 12
content: assembly{letlength:=mload(needle)letselfptr:=mload(add(self,0x20))letneedleptr:=mload(add(needle,0x20))equal:=eq(keccak256(selfptr,length),keccak256(needleptr,length))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 1290
column: 8
content: assembly{letlength:=mload(needle)letneedleptr:=mload(add(needle,0x20))equal:=eq(keccak256(selfptr,length),keccak256(needleptr,length))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 1314
column: 12
content: assembly{letlength:=mload(needle)letneedleptr:=mload(add(needle,0x20))equal:=eq(keccak256(selfptr,length),keccak256(needleptr,length))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 1339
column: 16
content: assembly{needledata:=and(mload(needleptr),mask)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 1343
column: 16
content: assembly{ptrdata:=and(mload(ptr),mask)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 1349
column: 20
content: assembly{ptrdata:=and(mload(ptr),mask)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 1355
column: 16
content: assembly{hash:=keccak256(needleptr,needlelen)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 1359
column: 20
content: assembly{testHash:=keccak256(ptr,needlelen)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 1379
column: 16
content: assembly{needledata:=and(mload(needleptr),mask)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 1383
column: 16
content: assembly{ptrdata:=and(mload(ptr),mask)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 1389
column: 20
content: assembly{ptrdata:=and(mload(ptr),mask)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 1395
column: 16
content: assembly{hash:=keccak256(needleptr,needlelen)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 1399
column: 20
content: assembly{testHash:=keccak256(ptr,needlelen)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 1545
column: 8
content: assembly{retptr:=add(ret,32)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 1569
column: 8
content: assembly{retptr:=add(ret,32)}

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1588
column: 4
content: addressfactory;

SOLIDITY_VISIBILITY :1
SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_ARRAY_LENGTH_MANIPULATION :2
SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN :5
SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA :1
SOLIDITY_EXTRA_GAS_IN_LOOPS :2
SOLIDITY_ADDRESS_HARDCODED :37
SOLIDITY_UPGRADE_TO_050 :13
SOLIDITY_GAS_LIMIT_IN_LOOPS :6
SOLIDITY_SHOULD_NOT_BE_PURE :17
SOLIDITY_ERC20_APPROVE :1
SOLIDITY_SAFEMATH :1
SOLIDITY_USING_INLINE_ASSEMBLY :26
SOLIDITY_SHOULD_NOT_BE_VIEW :1