/unique_chucks/8/0xac99580f92eb7a91daff30de133f93ad82b5070a.sol
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: adc165
severity: 1
line: 74
column: 48
content: 0xd0396aAEcb5547776852aB8682Ba72E1209b536d

ruleId: SOLIDITY_DIV_MUL
patternId: 09hhh1
severity: 2
line: 189
column: 35
content: deposit.amount.mul(userActualPercent).div(PERCENTS_DIVIDER).mul(timeDiff)

ruleId: SOLIDITY_DIV_MUL
patternId: 09hhh1
severity: 2
line: 202
column: 36
content: contractBalance.div(BALANCE_STEP).mul(STEP_MULTIPLIER)

ruleId: SOLIDITY_DIV_MUL
patternId: 09hhh1
severity: 2
line: 216
column: 37
content: timeDiff.div(TIME_STEP).mul(STEP_MULTIPLIER)

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 161
column: 8
content: for(uint256i=0;i<user.depositsCount;i++){if(deposits[user.deposits[i]].payed<deposits[user.deposits[i]].amount.mul(MAXIMUM_RETURN_PERCENT).div(PERCENTS_DIVIDER)){uint256depositId=user.deposits[i];Depositstoragedeposit=deposits[depositId];uint256depositDividends=getDepositDividends(depositId,msg.sender);userDividends=userDividends.add(depositDividends);deposits[depositId].payed=deposit.payed.add(depositDividends);deposits[depositId].timestamp=now;}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 227
column: 8
content: for(uint256i=0;i<user.depositsCount;i++){if(deposits[user.deposits[i]].payed<deposits[user.deposits[i]].amount.mul(MAXIMUM_RETURN_PERCENT).div(PERCENTS_DIVIDER)){userDividends=userDividends.add(getDepositDividends(user.deposits[i],userAddress));}}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 240
column: 4
content: functionbytesToAddress(bytesdata)privatepurereturns(addressaddr){assembly{addr:=mload(add(data,20))}}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: ^

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 59
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 240
column: 4
content: functionbytesToAddress(bytesdata)privatepurereturns(addressaddr){assembly{addr:=mload(add(data,20))}}

ruleId: SOLIDITY_UNCHECKED_CALL
patternId: f39eed
severity: 3
line: 143
column: 26
content: send(marketingAmount)

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 91h3sa
severity: 1
line: 98
column: 15
content: public

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 236
column: 71
content: uint256[]

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 240
column: 28
content: bytesdata

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 241
column: 8
content: assembly{addr:=mload(add(data,20))}

SOLIDITY_SAFEMATH :1
SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN :1
SOLIDITY_EXTRA_GAS_IN_LOOPS :2
SOLIDITY_ADDRESS_HARDCODED :1
SOLIDITY_UPGRADE_TO_050 :3
SOLIDITY_USING_INLINE_ASSEMBLY :1
SOLIDITY_UNCHECKED_CALL :1
SOLIDITY_DIV_MUL :3
SOLIDITY_SHOULD_NOT_BE_PURE :1