/unique_chucks/6/0xe44a021cbc34cb4124e0f5deb2a1c8a63acd1d07.sol
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ERC20_APPROVE
patternId: af782c
severity: 2
line: 160
column: 4
content: functionapprove(addressspender,uint256value)publicreturns(bool){require(spender!=address(0));_allowed[msg.sender][spender]=value;emitApproval(msg.sender,spender,value);returntrue;}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 522
column: 8
content: for(uint256i=0;i<lockReason[who].length;i++){amount=amount.add(tokensLocked(who,lockReason[who][i]));}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 586
column: 8
content: for(uint256i=0;i<lockReason[account].length;i++){lockedTokens=tokensUnlockable(account,lockReason[account][i]);if(lockedTokens>0){unlockableTokens=unlockableTokens.add(lockedTokens);locked[account][lockReason[account][i]].claimed=true;emitUnlocked(account,lockReason[account][i],lockedTokens);}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 608
column: 8
content: for(uint256i=0;i<lockReason[account].length;i++){unlockableTokens=unlockableTokens.add(tokensUnlockable(account,lockReason[account][i]));}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 522
column: 8
content: for(uint256i=0;i<lockReason[who].length;i++){amount=amount.add(tokensLocked(who,lockReason[who][i]));}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 586
column: 8
content: for(uint256i=0;i<lockReason[account].length;i++){lockedTokens=tokensUnlockable(account,lockReason[account][i]);if(lockedTokens>0){unlockableTokens=unlockableTokens.add(lockedTokens);locked[account][lockReason[account][i]].claimed=true;emitUnlocked(account,lockReason[account][i],lockedTokens);}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 608
column: 8
content: for(uint256i=0;i<lockReason[account].length;i++){unlockableTokens=unlockableTokens.add(tokensUnlockable(account,lockReason[account][i]));}

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 109
column: 33
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 111
column: 54
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 113
column: 12
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 623
column: 11
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 624
column: 11
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 625
column: 10
content: private

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 107
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 627
column: 17
content: stringname

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 627
column: 30
content: stringsymbol

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 636
column: 41
content: string

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 643
column: 43
content: string

SOLIDITY_SAFEMATH :1
SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA :6
SOLIDITY_EXTRA_GAS_IN_LOOPS :3
SOLIDITY_UPGRADE_TO_050 :4
SOLIDITY_GAS_LIMIT_IN_LOOPS :3
SOLIDITY_ERC20_APPROVE :1