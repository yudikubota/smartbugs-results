/unique_contracts/0x356b5ee3dd72c380132d803a689f02bf3abc2c3d.sol
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ERC20_APPROVE
patternId: af782c
severity: 2
line: 136
column: 2
content: functionapprove(address_spender,uint256_value)publicreturns(bool){allowed[msg.sender][_spender]=_value;Approval(msg.sender,_spender,_value);returntrue;}

ruleId: SOLIDITY_ERC20_APPROVE
patternId: af782c
severity: 2
line: 266
column: 2
content: functionapprove(address_spender,uint256_value)publicwhenNotPausedreturns(bool){returnsuper.approve(_spender,_value);}

ruleId: SOLIDITY_ERC20_APPROVE
patternId: af782c
severity: 2
line: 387
column: 4
content: functionapprove(addressspender,uint256value)publicreturns(bool){super.approve(spender,value);if(isListener())listener.onTokenApproval(msg.sender,spender,value);returntrue;}

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 393
column: 0
content: contractYTNisHoldable,MintableToken,BurnableToken{usingSafeMathforuint256;enumStates{PreOrder,ProofOfConcept,DAICO,Final}Statespublicstate;stringpublicsymbol='YTN';stringpublicname='YouToken';uint256publicdecimals=18;uint256publiccap;uint256publicproofOfConceptCap;uint256publicDAICOCap;functionYTN(uint256_proofOfConceptCap,uint256_DAICOCap)public{proofOfConceptCap=_proofOfConceptCap;DAICOCap=_DAICOCap;setState(uint(States.PreOrder));}function()publicpayable{revert();}functionsetState(uint_state)publiconlyOwner{require(uint(state)<=_state&&uint(States.Final)>=_state);state=States(_state);if(state==States.PreOrder||state==States.ProofOfConcept){cap=proofOfConceptCap;}if(state==States.DAICO){cap=DAICOCap+totalSupply_;pause();}if(state==States.Final){finishMinting();unpause();}}functionmint(address_to,uint256_amount)onlyOwnercanMintpublicreturns(bool){require(totalSupply_.add(_amount)<=cap);returnsuper.mint(_to,_amount);}}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 411
column: 4
content: functionsetState(uint_state)publiconlyOwner{require(uint(state)<=_state&&uint(States.Final)>=_state);state=States(_state);if(state==States.PreOrder||state==States.ProofOfConcept){cap=proofOfConceptCap;}if(state==States.DAICO){cap=DAICOCap+totalSupply_;pause();}if(state==States.Final){finishMinting();unpause();}}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: ^

ruleId: SOLIDITY_REDUNDANT_FALLBACK_REJECT
patternId: b85a32
severity: 1
line: 408
column: 30
content: {revert();}

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 59
column: 2
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 394
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 91h3sa
severity: 1
line: 408
column: 15
content: public

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 60
column: 2
content: mapping(address=>uint256)balances;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 61
column: 2
content: uint256totalSupply_;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 338
column: 4
content: mapping(address=>uint256)holders;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 339
column: 4
content: mapping(address=>bool)allowTransfer;

SOLIDITY_VISIBILITY :4
SOLIDITY_SAFEMATH :2
SOLIDITY_OVERPOWERED_ROLE :1
SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_LOCKED_MONEY :1
SOLIDITY_UPGRADE_TO_050 :1
SOLIDITY_REDUNDANT_FALLBACK_REJECT :1
SOLIDITY_ERC20_APPROVE :3