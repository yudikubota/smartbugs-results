/unique_chucks/35/0xc5ce7d9f2e38c8ca4434e3da4a9b2ee5c8abfb8f.sol
line 73:16 extraneous input 'payable' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'length', 'balance', 'memory', 'storage', 'emit', '_', 'revert', Identifier}
line 81:12 extraneous input 'payable' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 82:12 extraneous input 'payable' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 104:16 no viable alternative at input 'addresspayable'
line 109:77 mismatched input 'payable' expecting {',', ')'}
line 109:89 mismatched input ')' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 112:17 extraneous input ':=' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 112:25 mismatched input '(' expecting {';', '='}
line 112:29 mismatched input '(' expecting ')'
line 112:34 mismatched input ',' expecting ')'
line 114:4 extraneous input '}' expecting {<EOF>, 'pragma', 'import', 'contract', 'library', 'interface'}
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: adc165
severity: 1
line: 82
column: 40
content: 0x947fEa6f44e8b514DfE2f1Bb8bc2a86FD493874f

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 49
column: 0
content: contractETH_8{usingSafeMathforuint256;uint256constantpublicONE_HUNDRED_PERCENTS=10000;uint256[]publicDAILY_INTEREST=[111,133,222,333,444];uint256[]publicREFERRAL_AMOUNT_CLASS=[1ether,10ether,20ether];uint256publicMARKETING_AND_TEAM_FEE=1000;uint256publicreferralPercents=1000;uint256constantpublicMAX_DIVIDEND_RATE=25000;uint256constantpublicMINIMUM_DEPOSIT=100finney;uint256publicwave=0;uint256publictotalInvest=0;uint256publictotalDividend=0;uint256publicwaiting=0;uint256publicdailyLimit=10ether;uint256publicdailyTotalInvest=0;structDeposit{uint256amount;uint256withdrawedRate;uint256lastPayment;}structUser{addresspayablereferrer;uint256referralAmount;boolisInvestor;Deposit[]deposits;uint256interest;uint256dividend;}addresspayablepublicowner;addresspayablepublicteamWallet=0x947fEa6f44e8b514DfE2f1Bb8bc2a86FD493874f;mapping(uint256=>mapping(address=>User))publicusers;eventInvestorAdded(addressindexedinvestor);eventReferrerAdded(addressindexedinvestor,addressindexedreferrer);eventDepositAdded(addressindexedinvestor,uint256indexeddepositsCount,uint256amount);eventUserDividendPayed(addressindexedinvestor,uint256dividend);eventFeePayed(addressindexedinvestor,uint256amount);eventBalanceChanged(uint256balance);eventNewWave();constructor()public{owner=msg.sender;}function()externalpayable{if(msg.value==0){withdrawDividends(msg.sender);return;}<missing ';'>addresspayable<missing ';'>newReferrer=_bytesToAddress(msg.data);doInvest(msg.sender,msg.value,newReferrer);}function_bytesToAddress(bytesmemorydata)privatepurereturns(addresspayableaddr){assembly{addr:=mload(add<missing ';'>(data,20))<missing ';'>}

ruleId: SOLIDITY_MSGVALUE_EQUALS_ZERO
patternId: 1df89a
severity: 1
line: 98
column: 11
content: msg.value==0

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: ^

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 50
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 109
column: 85
content: addr){assembly{

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 112
column: 12
content: addr:=mload

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 112
column: 25
content: (add<missing ';'>

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 112
column: 29
content: (data,20))<missing ';'>

SOLIDITY_VISIBILITY :4
SOLIDITY_MSGVALUE_EQUALS_ZERO :1
SOLIDITY_SAFEMATH :1
SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_LOCKED_MONEY :1
SOLIDITY_ADDRESS_HARDCODED :1