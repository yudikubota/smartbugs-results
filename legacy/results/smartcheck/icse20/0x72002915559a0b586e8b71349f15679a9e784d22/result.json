{
  "contract": "0x72002915559a0b586e8b71349f15679a9e784d22",
  "tool": "smartcheck",
  "start": 1563507754.5438697,
  "end": 1563507761.7002258,
  "duration": 7.1563560962677,
  "analysis": [
    {
      "name": "SOLIDITY_DEPRECATED_CONSTRUCTIONS",
      "patternId": "49bd2a",
      "severity": 1,
      "line": 26,
      "column": 6,
      "content": "throw"
    },
    {
      "name": "SOLIDITY_EXTRA_GAS_IN_LOOPS",
      "patternId": "d3j11j",
      "severity": 1,
      "line": 55,
      "column": 2,
      "content": "for(uint8i=0;i<_to.length;i++){assert((Token(_tokenAddr).transfer(_to[i],_value[i]))==true);}"
    },
    {
      "name": "SOLIDITY_GAS_LIMIT_IN_LOOPS",
      "patternId": "f6f853",
      "severity": 2,
      "line": 55,
      "column": 2,
      "content": "for(uint8i=0;i<_to.length;i++){assert((Token(_tokenAddr).transfer(_to[i],_value[i]))==true);}"
    },
    {
      "name": "SOLIDITY_PRAGMAS_VERSION",
      "patternId": "23fc32",
      "severity": 1,
      "line": 1,
      "column": 16,
      "content": "^"
    },
    {
      "name": "SOLIDITY_REVERT_REQUIRE",
      "patternId": "c56b12",
      "severity": 1,
      "line": 25,
      "column": 4,
      "content": "if(msg.sender!=owner){throw;}"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": 910067,
      "severity": 1,
      "line": 16,
      "column": 2,
      "content": "functionOwnable(){owner=\"0x1428452bff9f56D194F63d910cb16E745b9ee048\";}"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": 910067,
      "severity": 1,
      "line": 36,
      "column": 2,
      "content": "functiontransferOwnership(addressnewOwner)onlyOwner{if(newOwner!=address(0)){owner=newOwner;}}"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": 910067,
      "severity": 1,
      "line": 45,
      "column": 2,
      "content": "functiontransfer(addressto,uintvalue)returns(bool);"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": 910067,
      "severity": 1,
      "line": 50,
      "column": 4,
      "content": "functionmultisend(address_tokenAddr,address[]_to,uint256[]_value)returns(bool_success){assert(_to.length==_value.length);assert(_to.length<=150);for(uint8i=0;i<_to.length;i++){assert((Token(_tokenAddr).transfer(_to[i],_value[i]))==true);}returntrue;}"
    }
  ]
}