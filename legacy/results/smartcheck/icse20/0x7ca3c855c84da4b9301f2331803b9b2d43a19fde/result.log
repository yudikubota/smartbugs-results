/unique_chucks/27/0x7ca3c855c84da4b9301f2331803b9b2d43a19fde.sol
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_DIV_MUL
patternId: 09hhh1
severity: 2
line: 75
column: 26
content: invested[msg.sender]*percentage/100*(block.number-atBlock[msg.sender])

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 35
column: 0
content: contractUp104{addresssupport=msg.sender;uintpublicprizeFund;addresspubliclastInvestor;uintpubliclastInvestedAt;uintpublictotalInvestors;uintpublictotalInvested;mapping(address=>uint)publicinvested;mapping(address=>uint)publicatBlock;mapping(address=>address)publicreferrers;functionbytesToAddress(bytessource)internalpurereturns(addressparsedAddress){assembly{parsedAddress:=mload(add(source,0x14))}returnparsedAddress;}function()externalpayable{require(msg.value==0||msg.value>=0.001ether);prizeFund+=msg.value*7/100;uinttransferAmount;support.transfer(msg.value/10);if(invested[msg.sender]!=0){uintmax=(address(this).balance-prizeFund)*9/10;uintpercentage=referrers[msg.sender]==0x0?4:5;uintamount=invested[msg.sender]*percentage/100*(block.number-atBlock[msg.sender])/5900;if(amount>max){amount=max;}transferAmount+=amount;}else{totalInvestors++;}if(lastInvestor==msg.sender&&block.number>=lastInvestedAt+42){transferAmount+=prizeFund;prizeFund=0;}if(msg.value>0){if(invested[msg.sender]==0&&msg.data.length==20){addressreferrerAddress=bytesToAddress(bytes(msg.data));require(referrerAddress!=msg.sender);if(invested[referrerAddress]>0){referrers[msg.sender]=referrerAddress;}}if(referrers[msg.sender]!=0x0){referrers[msg.sender].transfer(msg.value/10);}lastInvestor=msg.sender;lastInvestedAt=block.number;}atBlock[msg.sender]=block.number;invested[msg.sender]+=msg.value;totalInvested+=msg.value;if(transferAmount>0){msg.sender.transfer(transferAmount);}}}

ruleId: SOLIDITY_MSGVALUE_EQUALS_ZERO
patternId: 1df89a
severity: 1
line: 60
column: 16
content: msg.value==0

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: ^

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 51
column: 4
content: functionbytesToAddress(bytessource)internalpurereturns(addressparsedAddress){assembly{parsedAddress:=mload(add(source,0x14))}returnparsedAddress;}

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 51
column: 28
content: bytessource

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 52
column: 8
content: assembly{parsedAddress:=mload(add(source,0x14))}

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 36
column: 4
content: addresssupport=msg.sender;

SOLIDITY_VISIBILITY :1
SOLIDITY_MSGVALUE_EQUALS_ZERO :1
SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_LOCKED_MONEY :1
SOLIDITY_UPGRADE_TO_050 :1
SOLIDITY_USING_INLINE_ASSEMBLY :1
SOLIDITY_DIV_MUL :1
SOLIDITY_SHOULD_NOT_BE_PURE :1