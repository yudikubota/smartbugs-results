/unique_chucks/16/0x4019440bbe5882915db9f2cae972a518db346c62.sol
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: adc165
severity: 1
line: 1026
column: 50
content: 0xEF68e7C694F40c8202821eDF525dE3782458639f

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: adc165
severity: 1
line: 1027
column: 50
content: 0xaD3407deDc56A1F69389Edc191b770F0c935Ea37

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: adc165
severity: 1
line: 1028
column: 50
content: 0x7b126ab811f278f288bf1d62d47334351dA20d1d

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: adc165
severity: 1
line: 1029
column: 50
content: 0xC897816C1A6DB4A2923b7D75d9B812e2f62cF504

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: c67a09
severity: 1
line: 385
column: 64
content: 0x0

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: c67a09
severity: 1
line: 629
column: 23
content: 0x0

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: c67a09
severity: 1
line: 1428
column: 39
content: 0x0

ruleId: SOLIDITY_ARRAY_LENGTH_MANIPULATION
patternId: 872bdd
severity: 1
line: 470
column: 16
content: participantIds.length-=1

ruleId: SOLIDITY_ARRAY_LENGTH_MANIPULATION
patternId: 872bdd
severity: 1
line: 707
column: 8
content: addresses.length--

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 398
column: 8
content: for(uinti=0;i<participantIds.length;i++){deleteparticipantMap[participantIds[i]];}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 414
column: 8
content: for(uinti=0;i<participantIds.length;i++){Participantstoragep=participantMap[participantIds[i]];p.owner=newOwner;}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 715
column: 8
content: for(uinti=0;i<addressList.length;i++){if(addressMap[addressList[i]].pos==0){returnfalse;}}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 534
column: 4
content: functionstringToBytes12(stringstr)internalpurereturns(bytes12result){assembly{result:=mload(add(str,32))}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 76
column: 8
content: for(uinti=0;i<len;i++){avg+=arr[i];}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 86
column: 8
content: for(i=0;i<len;i++){item=arr[i];s=item>avg?item-avg:avg-item;cvs+=mul(s,s);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 398
column: 8
content: for(uinti=0;i<participantIds.length;i++){deleteparticipantMap[participantIds[i]];}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 414
column: 8
content: for(uinti=0;i<participantIds.length;i++){Participantstoragep=participantMap[participantIds[i]];p.owner=newOwner;}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 467
column: 8
content: for(uinti=0;i<len;i++){if(participantId==participantIds[i]){participantIds[i]=participantIds[len-1];participantIds.length-=1;}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 715
column: 8
content: for(uinti=0;i<addressList.length;i++){if(addressMap[addressList[i]].pos==0){returnfalse;}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 920
column: 8
content: for(uinti=0;i<len;i+=7){addressowner=address(batch[i]);addressprevOwner=address(batch[(i+len-7)%len]);ERC20token=ERC20(address(batch[i+1]));if(owner!=prevOwner){require(token.transferFrom(owner,prevOwner,uint(batch[i+2])));}uintlrcReward=uint(batch[i+4]);if(lrcReward!=0&&minerFeeRecipient!=owner){require(lrc.transferFrom(minerFeeRecipient,owner,lrcReward));}splitPayFee(token,uint(batch[i+3]),owner,minerFeeRecipient,address(batch[i+6]),walletSplitPercentage);splitPayFee(lrc,uint(batch[i+5]),owner,minerFeeRecipient,address(batch[i+6]),walletSplitPercentage);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: 17f23a
severity: 1
line: 880
column: 15
content: addr!=0x0&&count<max

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 636
column: 0
content: contractTokenRegistryisClaimable{usingAddressUtilforaddress;addresstokenMintAddr;address[]publicaddresses;mapping(address=>TokenInfo)addressMap;mapping(string=>address)symbolMap;structTokenInfo{uintpos;stringsymbol;}eventTokenRegistered(addressaddr,stringsymbol);eventTokenUnregistered(addressaddr,stringsymbol);function()payablepublic{revert();}functionTokenRegistry(address_tokenMintAddr)public{require(_tokenMintAddr.isContract());tokenMintAddr=_tokenMintAddr;}functionregisterToken(addressaddr,stringsymbol)externalonlyOwner{registerTokenInternal(addr,symbol);}functionregisterMintedToken(addressaddr,stringsymbol)external{require(msg.sender==tokenMintAddr);registerTokenInternal(addr,symbol);}functionunregisterToken(addressaddr,stringsymbol)externalonlyOwner{require(addr!=0x0);require(symbolMap[symbol]==addr);deletesymbolMap[symbol];uintpos=addressMap[addr].pos;require(pos!=0);deleteaddressMap[addr];addresslastToken=addresses[addresses.length-1];if(addr!=lastToken){addresses[pos-1]=lastToken;addressMap[lastToken].pos=pos;}addresses.length--;emitTokenUnregistered(addr,symbol);}functionareAllTokensRegistered(address[]addressList)externalviewreturns(bool){for(uinti=0;i<addressList.length;i++){if(addressMap[addressList[i]].pos==0){returnfalse;}}returntrue;}functiongetAddressBySymbol(stringsymbol)externalviewreturns(address){returnsymbolMap[symbol];}functionisTokenRegisteredBySymbol(stringsymbol)publicviewreturns(bool){returnsymbolMap[symbol]!=0x0;}functionisTokenRegistered(addressaddr)publicviewreturns(bool){returnaddressMap[addr].pos!=0;}functiongetTokens(uintstart,uintcount)publicviewreturns(address[]addressList){uintnum=addresses.length;if(start>=num){return;}uintend=start+count;if(end>num){end=num;}if(start==num){return;}addressList=newaddress[](end-start);for(uinti=start;i<end;i++){addressList[i-start]=addresses[i];}}functionregisterTokenInternal(addressaddr,stringsymbol)internal{require(0x0!=addr);require(bytes(symbol).length>0);require(0x0==symbolMap[symbol]);require(0==addressMap[addr].pos);addresses.push(addr);symbolMap[symbol]=addr;addressMap[addr]=TokenInfo(addresses.length,symbol);emitTokenRegistered(addr,symbol);}}

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 1018
column: 0
content: contractLoopringProtocolImplisLoopringProtocol{usingAddressUtilforaddress;usingMathBytes32forbytes32[];usingMathUintforuint;usingMathUint8foruint8[];addresspubliclrcTokenAddress=0xEF68e7C694F40c8202821eDF525dE3782458639f;addresspublictokenRegistryAddress=0xaD3407deDc56A1F69389Edc191b770F0c935Ea37;addresspublicdelegateAddress=0x7b126ab811f278f288bf1d62d47334351dA20d1d;addresspublicnameRegistryAddress=0xC897816C1A6DB4A2923b7D75d9B812e2f62cF504;uint64publicringIndex=0;uint8publicwalletSplitPercentage=20;uintpublicconstantrateRatioCVSThreshold=62500;uintpublicconstantMAX_RING_SIZE=16;uintpublicconstantRATE_RATIO_SCALE=10000;uint64publicconstantENTERED_MASK=1<<63;mapping(bytes32=>uint)publiccancelledOrFilled;mapping(bytes32=>uint)publiccancelled;mapping(address=>uint)publiccutoffs;mapping(address=>mapping(bytes20=>uint))publictradingPairCutoffs;structRate{uintamountS;uintamountB;}structOrder{addressowner;addresstokenS;addresstokenB;addressauthAddr;uintvalidSince;uintvalidUntil;uintamountS;uintamountB;uintlrcFee;boolbuyNoMoreThanAmountB;uintwalletId;uint8marginSplitPercentage;}structOrderState{Orderorder;bytes32orderHash;boolmarginSplitAsFee;Raterate;uintfillAmountS;uintlrcReward;uintlrcFee;uintsplitS;uintsplitB;}structRingParams{address[3][]addressList;uint[7][]uintArgsList;uint8[1][]uint8ArgsList;bool[]buyNoMoreThanAmountBList;uint8[]vList;bytes32[]rList;bytes32[]sList;uintminerId;uintringSize;uint16feeSelections;addressringMiner;addressfeeRecipient;bytes32ringHash;}function()payablepublic{revert();}functioncancelOrder(address[4]addresses,uint[7]orderValues,boolbuyNoMoreThanAmountB,uint8marginSplitPercentage,uint8v,bytes32r,bytes32s)external{uintcancelAmount=orderValues[6];require(cancelAmount>0);Ordermemoryorder=Order(addresses[0],addresses[1],addresses[2],addresses[3],orderValues[2],orderValues[3],orderValues[0],orderValues[1],orderValues[4],buyNoMoreThanAmountB,orderValues[5],marginSplitPercentage);require(msg.sender==order.owner);bytes32orderHash=calculateOrderHash(order);verifySignature(order.owner,orderHash,v,r,s);cancelled[orderHash]=cancelled[orderHash].add(cancelAmount);cancelledOrFilled[orderHash]=cancelledOrFilled[orderHash].add(cancelAmount);emitOrderCancelled(orderHash,cancelAmount);}functioncancelAllOrdersByTradingPair(addresstoken1,addresstoken2,uintcutoff)external{uintt=(cutoff==0||cutoff>=block.timestamp)?block.timestamp:cutoff;bytes20tokenPair=bytes20(token1)^bytes20(token2);require(tradingPairCutoffs[msg.sender][tokenPair]<t);tradingPairCutoffs[msg.sender][tokenPair]=t;emitOrdersCancelled(msg.sender,token1,token2,t);}functioncancelAllOrders(uintcutoff)external{uintt=(cutoff==0||cutoff>=block.timestamp)?block.timestamp:cutoff;require(cutoffs[msg.sender]<t);cutoffs[msg.sender]=t;emitAllOrdersCancelled(msg.sender,t);}functionsubmitRing(address[3][]addressList,uint[7][]uintArgsList,uint8[1][]uint8ArgsList,bool[]buyNoMoreThanAmountBList,uint8[]vList,bytes32[]rList,bytes32[]sList,uintminerId,uint16feeSelections)public{require(ringIndex&ENTERED_MASK!=ENTERED_MASK);ringIndex|=ENTERED_MASK;RingParamsmemoryparams=RingParams(addressList,uintArgsList,uint8ArgsList,buyNoMoreThanAmountBList,vList,rList,sList,minerId,addressList.length,feeSelections,0x0,0x0,0x0);verifyInputDataIntegrity(params);updateFeeRecipient(params);OrderState[]memoryorders=assembleOrders(params);verifyRingSignatures(params);verifyTokensRegistered(params);handleRing(params,orders);ringIndex=(ringIndex^ENTERED_MASK)+1;}functionverifyRingHasNoSubRing(uintringSize,OrderState[]orders)privatepure{for(uinti=0;i<ringSize-1;i++){addresstokenS=orders[i].order.tokenS;for(uintj=i+1;j<ringSize;j++){require(tokenS!=orders[j].order.tokenS);}}}functionverifyRingSignatures(RingParamsparams)privatepure{uintj;for(uinti=0;i<params.ringSize;i++){j=i+params.ringSize;verifySignature(params.addressList[i][2],params.ringHash,params.vList[j],params.rList[j],params.sList[j]);}if(params.ringMiner!=0x0){j++;verifySignature(params.ringMiner,params.ringHash,params.vList[j],params.rList[j],params.sList[j]);}}functionverifyTokensRegistered(RingParamsparams)privateview{address[]memorytokens=newaddress[](params.ringSize);for(uinti=0;i<params.ringSize;i++){tokens[i]=params.addressList[i][1];}require(TokenRegistry(tokenRegistryAddress).areAllTokensRegistered(tokens));}functionupdateFeeRecipient(RingParamsparams)privateview{if(params.minerId==0){params.feeRecipient=msg.sender;}else{(params.feeRecipient,params.ringMiner)=NameRegistry(nameRegistryAddress).getParticipantById(params.minerId);if(params.feeRecipient==0x0){params.feeRecipient=msg.sender;}}uintsigSize=params.ringSize*2;if(params.ringMiner!=0x0){sigSize+=1;}require(sigSize==params.vList.length);require(sigSize==params.rList.length);require(sigSize==params.sList.length);}functionhandleRing(RingParamsparams,OrderState[]orders)private{uint64_ringIndex=ringIndex^ENTERED_MASK;address_lrcTokenAddress=lrcTokenAddress;TokenTransferDelegatedelegate=TokenTransferDelegate(delegateAddress);verifyRingHasNoSubRing(params.ringSize,orders);verifyMinerSuppliedFillRates(params.ringSize,orders);scaleRingBasedOnHistoricalRecords(delegate,params.ringSize,orders);calculateRingFillAmount(params.ringSize,orders);calculateRingFees(delegate,params.ringSize,orders,params.feeRecipient,_lrcTokenAddress);bytes32[]memoryorderHashList;uint[6][]memoryamountsList;(orderHashList,amountsList)=settleRing(delegate,params.ringSize,orders,params.feeRecipient,_lrcTokenAddress);emitRingMined(_ringIndex,params.ringHash,params.ringMiner,params.feeRecipient,orderHashList,amountsList);}functionsettleRing(TokenTransferDelegatedelegate,uintringSize,OrderState[]orders,addressfeeRecipient,address_lrcTokenAddress)privatereturns(bytes32[]memoryorderHashList,uint[6][]memoryamountsList){bytes32[]memorybatch=newbytes32[](ringSize*7);orderHashList=newbytes32[](ringSize);amountsList=newuint[6][](ringSize);uintp=0;for(uinti=0;i<ringSize;i++){OrderStatememorystate=orders[i];Ordermemoryorder=state.order;uintprevSplitB=orders[(i+ringSize-1)%ringSize].splitB;uintnextFillAmountS=orders[(i+1)%ringSize].fillAmountS;batch[p]=bytes32(order.owner);batch[p+1]=bytes32(order.tokenS);batch[p+2]=bytes32(state.fillAmountS-prevSplitB);batch[p+3]=bytes32(prevSplitB+state.splitS);batch[p+4]=bytes32(state.lrcReward);batch[p+5]=bytes32(state.lrcFee);if(order.walletId!=0){batch[p+6]=bytes32(NameRegistry(nameRegistryAddress).getFeeRecipientById(order.walletId));}else{batch[p+6]=bytes32(0x0);}p+=7;if(order.buyNoMoreThanAmountB){cancelledOrFilled[state.orderHash]+=nextFillAmountS;}else{cancelledOrFilled[state.orderHash]+=state.fillAmountS;}orderHashList[i]=state.orderHash;amountsList[i][0]=state.fillAmountS+state.splitS;amountsList[i][1]=nextFillAmountS-state.splitB;amountsList[i][2]=state.lrcReward;amountsList[i][3]=state.lrcFee;amountsList[i][4]=state.splitS;amountsList[i][5]=state.splitB;}delegate.batchTransferToken(_lrcTokenAddress,feeRecipient,walletSplitPercentage,batch);}functionverifyMinerSuppliedFillRates(uintringSize,OrderState[]orders)privateview{uint[]memoryrateRatios=newuint[](ringSize);uint_rateRatioScale=RATE_RATIO_SCALE;for(uinti=0;i<ringSize;i++){uints1b0=orders[i].rate.amountS.mul(orders[i].order.amountB);uints0b1=orders[i].order.amountS.mul(orders[i].rate.amountB);require(s1b0<=s0b1);rateRatios[i]=_rateRatioScale.mul(s1b0)/s0b1;}uintcvs=MathUint.cvsquare(rateRatios,_rateRatioScale);require(cvs<=rateRatioCVSThreshold);}functioncalculateRingFees(TokenTransferDelegatedelegate,uintringSize,OrderState[]orders,addressfeeRecipient,address_lrcTokenAddress)privateview{boolcheckedMinerLrcSpendable=false;uintminerLrcSpendable=0;uint8_marginSplitPercentageBase=MARGIN_SPLIT_PERCENTAGE_BASE;uintnextFillAmountS;for(uinti=0;i<ringSize;i++){OrderStatememorystate=orders[i];uintlrcReceiable=0;if(state.lrcFee==0){state.marginSplitAsFee=true;state.order.marginSplitPercentage=_marginSplitPercentageBase;}else{uintlrcSpendable=getSpendable(delegate,_lrcTokenAddress,state.order.owner);if(state.order.tokenS==_lrcTokenAddress){lrcSpendable-=state.fillAmountS;}if(state.order.tokenB==_lrcTokenAddress){nextFillAmountS=orders[(i+1)%ringSize].fillAmountS;lrcReceiable=nextFillAmountS;}uintlrcTotal=lrcSpendable+lrcReceiable;if(lrcTotal<state.lrcFee){state.lrcFee=lrcTotal;state.order.marginSplitPercentage=_marginSplitPercentageBase;}if(state.lrcFee==0){state.marginSplitAsFee=true;}}if(!state.marginSplitAsFee){if(lrcReceiable>0){if(lrcReceiable>=state.lrcFee){state.splitB=state.lrcFee;state.lrcFee=0;}else{state.splitB=lrcReceiable;state.lrcFee-=lrcReceiable;}}}else{if(!checkedMinerLrcSpendable&&minerLrcSpendable<state.lrcFee){checkedMinerLrcSpendable=true;minerLrcSpendable=getSpendable(delegate,_lrcTokenAddress,feeRecipient);}if(minerLrcSpendable>=state.lrcFee){nextFillAmountS=orders[(i+1)%ringSize].fillAmountS;uintsplit;if(state.order.buyNoMoreThanAmountB){split=(nextFillAmountS.mul(state.order.amountS)/state.order.amountB).sub(state.fillAmountS);}else{split=nextFillAmountS.sub(state.fillAmountS.mul(state.order.amountB)/state.order.amountS);}if(state.order.marginSplitPercentage!=_marginSplitPercentageBase){split=split.mul(state.order.marginSplitPercentage)/_marginSplitPercentageBase;}if(state.order.buyNoMoreThanAmountB){state.splitS=split;}else{state.splitB=split;}if(split>0){minerLrcSpendable-=state.lrcFee;state.lrcReward=state.lrcFee;}}state.lrcFee=0;}}}functioncalculateRingFillAmount(uintringSize,OrderState[]orders)privatepure{uintsmallestIdx=0;uinti;uintj;for(i=0;i<ringSize;i++){j=(i+1)%ringSize;smallestIdx=calculateOrderFillAmount(orders[i],orders[j],i,j,smallestIdx);}for(i=0;i<smallestIdx;i++){calculateOrderFillAmount(orders[i],orders[(i+1)%ringSize],0,0,0);}}functioncalculateOrderFillAmount(OrderStatestate,OrderStatenext,uinti,uintj,uintsmallestIdx)privatepurereturns(uintnewSmallestIdx){newSmallestIdx=smallestIdx;uintfillAmountB=state.fillAmountS.mul(state.rate.amountB)/state.rate.amountS;if(state.order.buyNoMoreThanAmountB){if(fillAmountB>state.order.amountB){fillAmountB=state.order.amountB;state.fillAmountS=fillAmountB.mul(state.rate.amountS)/state.rate.amountB;newSmallestIdx=i;}state.lrcFee=state.order.lrcFee.mul(fillAmountB)/state.order.amountB;}else{state.lrcFee=state.order.lrcFee.mul(state.fillAmountS)/state.order.amountS;}if(fillAmountB<=next.fillAmountS){next.fillAmountS=fillAmountB;}else{newSmallestIdx=j;}}functionscaleRingBasedOnHistoricalRecords(TokenTransferDelegatedelegate,uintringSize,OrderState[]orders)privateview{for(uinti=0;i<ringSize;i++){OrderStatememorystate=orders[i];Ordermemoryorder=state.order;uintamount;if(order.buyNoMoreThanAmountB){amount=order.amountB.tolerantSub(cancelledOrFilled[state.orderHash]);order.amountS=amount.mul(order.amountS)/order.amountB;order.lrcFee=amount.mul(order.lrcFee)/order.amountB;order.amountB=amount;}else{amount=order.amountS.tolerantSub(cancelledOrFilled[state.orderHash]);order.amountB=amount.mul(order.amountB)/order.amountS;order.lrcFee=amount.mul(order.lrcFee)/order.amountS;order.amountS=amount;}require(order.amountS>0);require(order.amountB>0);uintavailableAmountS=getSpendable(delegate,order.tokenS,order.owner);require(availableAmountS>0);state.fillAmountS=(order.amountS<availableAmountS?order.amountS:availableAmountS);}}functiongetSpendable(TokenTransferDelegatedelegate,addresstokenAddress,addresstokenOwner)privateviewreturns(uint){ERC20token=ERC20(tokenAddress);uintallowance=token.allowance(tokenOwner,address(delegate));uintbalance=token.balanceOf(tokenOwner);return(allowance<balance?allowance:balance);}functionverifyInputDataIntegrity(RingParamsparams)privatepure{require(params.ringSize==params.addressList.length);require(params.ringSize==params.uintArgsList.length);require(params.ringSize==params.uint8ArgsList.length);require(params.ringSize==params.buyNoMoreThanAmountBList.length);for(uinti=0;i<params.ringSize;i++){require(params.uintArgsList[i][5]>0);}require(params.ringSize>1&&params.ringSize<=MAX_RING_SIZE);}functionassembleOrders(RingParamsparams)privateviewreturns(OrderState[]memoryorders){orders=newOrderState[](params.ringSize);for(uinti=0;i<params.ringSize;i++){Ordermemoryorder=Order(params.addressList[i][0],params.addressList[i][1],params.addressList[(i+1)%params.ringSize][1],params.addressList[i][2],params.uintArgsList[i][2],params.uintArgsList[i][3],params.uintArgsList[i][0],params.uintArgsList[i][1],params.uintArgsList[i][4],params.buyNoMoreThanAmountBList[i],params.uintArgsList[i][6],params.uint8ArgsList[i][0]);validateOrder(order);bytes32orderHash=calculateOrderHash(order);verifySignature(order.owner,orderHash,params.vList[i],params.rList[i],params.sList[i]);boolmarginSplitAsFee=(params.feeSelections&(uint16(1)<<i))>0;orders[i]=OrderState(order,orderHash,marginSplitAsFee,Rate(params.uintArgsList[i][5],order.amountB),0,0,0,0,0);params.ringHash^=orderHash;}params.ringHash=keccak256(params.ringHash,params.minerId,params.feeSelections);}functionvalidateOrder(Orderorder)privateview{require(order.owner!=0x0);require(order.tokenS!=0x0);require(order.tokenB!=0x0);require(order.amountS!=0);require(order.amountB!=0);require(order.marginSplitPercentage<=MARGIN_SPLIT_PERCENTAGE_BASE);require(order.validSince<=block.timestamp);require(order.validUntil>block.timestamp);bytes20tradingPair=bytes20(order.tokenS)^bytes20(order.tokenB);require(order.validSince>tradingPairCutoffs[order.owner][tradingPair]);require(order.validSince>cutoffs[order.owner]);}functioncalculateOrderHash(Orderorder)privateviewreturns(bytes32){returnkeccak256(address(this),order.owner,order.tokenS,order.tokenB,order.authAddr,order.amountS,order.amountB,order.validSince,order.validUntil,order.lrcFee,order.buyNoMoreThanAmountB,order.walletId,order.marginSplitPercentage);}functionverifySignature(addresssigner,bytes32hash,uint8v,bytes32r,bytes32s)privatepure{require(signer==ecrecover(keccak256("\x19Ethereum Signed Message:\n32",hash),v,r,s));}functiongetTradingPairCutoffs(addressorderOwner,addresstoken1,addresstoken2)publicviewreturns(uint){bytes20tokenPair=bytes20(token1)^bytes20(token2);returntradingPairCutoffs[orderOwner][tokenPair];}}

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 804
column: 36
content: private

ruleId: SOLIDITY_REDUNDANT_FALLBACK_REJECT
patternId: b85a32
severity: 1
line: 659
column: 31
content: {revert();}

ruleId: SOLIDITY_REDUNDANT_FALLBACK_REJECT
patternId: b85a32
severity: 1
line: 830
column: 31
content: {revert();}

ruleId: SOLIDITY_REDUNDANT_FALLBACK_REJECT
patternId: b85a32
severity: 1
line: 1146
column: 31
content: {revert();}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 534
column: 4
content: functionstringToBytes12(stringstr)internalpurereturns(bytes12result){assembly{result:=mload(add(str,32))}}

ruleId: SOLIDITY_SHOULD_NOT_BE_VIEW
patternId: 189abf
severity: 1
line: 139
column: 4
content: functionisContract(addressaddr)internalviewreturns(bool){if(addr==0x0){returnfalse;}else{uintsize;assembly{size:=extcodesize(addr)}returnsize>0;}}

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 7d54ca
severity: 1
line: 1404
column: 16
content: (bytes32[]memoryorderHashList,uint[6][]memoryamountsList)

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 901eae
severity: 1
line: 1766
column: 26
content: keccak256(params.ringHash,params.minerId,params.feeSelections)

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 901eae
severity: 1
line: 1795
column: 15
content: keccak256(address(this),order.owner,order.tokenS,order.tokenB,order.authAddr,order.amountS,order.amountB,order.validSince,order.validUntil,order.lrcFee,order.buyNoMoreThanAmountB,order.walletId,order.marginSplitPercentage)

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 901eae
severity: 1
line: 1824
column: 16
content: keccak256("\x19Ethereum Signed Message:\n32",hash)

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 91h3sa
severity: 1
line: 659
column: 24
content: public

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 91h3sa
severity: 1
line: 830
column: 24
content: public

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 91h3sa
severity: 1
line: 1146
column: 24
content: public

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 19
column: 8
content: uint8[]arr

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 65
column: 8
content: uint[]arr

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 111
column: 8
content: bytes32[]arr

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 312
column: 8
content: address[3][]addressList

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 313
column: 8
content: uint[7][]uintArgsList

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 314
column: 8
content: uint8[1][]uint8ArgsList

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 315
column: 8
content: bool[]buyNoMoreThanAmountBList

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 316
column: 8
content: uint8[]vList

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 317
column: 8
content: bytes32[]rList

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 318
column: 8
content: bytes32[]sList

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 526
column: 25
content: stringname

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 534
column: 29
content: stringstr

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 729
column: 39
content: stringsymbol

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 749
column: 17
content: address[]addressList

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 769
column: 8
content: stringsymbol

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1216
column: 8
content: address[3][]addressList

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1217
column: 8
content: uint[7][]uintArgsList

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1218
column: 8
content: uint8[1][]uint8ArgsList

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1219
column: 8
content: bool[]buyNoMoreThanAmountBList

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1220
column: 8
content: uint8[]vList

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1221
column: 8
content: bytes32[]rList

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1222
column: 8
content: bytes32[]sList

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1264
column: 8
content: OrderState[]orders

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1279
column: 34
content: RingParamsparams

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1305
column: 36
content: RingParamsparams

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1319
column: 32
content: RingParamsparams

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1344
column: 8
content: RingParamsparams

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1345
column: 8
content: OrderState[]orders

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1399
column: 8
content: OrderState[]orders

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1456
column: 8
content: OrderState[]orders

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1476
column: 8
content: OrderState[]orders

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1580
column: 8
content: OrderState[]orders

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1610
column: 8
content: OrderStatestate

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1611
column: 8
content: OrderStatenext

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1652
column: 8
content: OrderState[]orders

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1705
column: 38
content: RingParamsparams

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1722
column: 28
content: RingParamsparams

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1773
column: 27
content: Orderorder

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1790
column: 32
content: Orderorder

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 539
column: 8
content: assembly{result:=mload(add(str,32))}

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 638
column: 4
content: addresstokenMintAddr;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 640
column: 4
content: mapping(address=>TokenInfo)addressMap;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 641
column: 4
content: mapping(string=>address)symbolMap;

SOLIDITY_VISIBILITY :3
SOLIDITY_ARRAY_LENGTH_MANIPULATION :2
SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN :1
SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA :1
SOLIDITY_EXTRA_GAS_IN_LOOPS :3
SOLIDITY_ADDRESS_HARDCODED :7
SOLIDITY_UPGRADE_TO_050 :45
SOLIDITY_GAS_LIMIT_IN_LOOPS :8
SOLIDITY_SHOULD_RETURN_STRUCT :1
SOLIDITY_REDUNDANT_FALLBACK_REJECT :3
SOLIDITY_SHOULD_NOT_BE_PURE :1
SOLIDITY_LOCKED_MONEY :2
SOLIDITY_USING_INLINE_ASSEMBLY :1
SOLIDITY_SHOULD_NOT_BE_VIEW :1