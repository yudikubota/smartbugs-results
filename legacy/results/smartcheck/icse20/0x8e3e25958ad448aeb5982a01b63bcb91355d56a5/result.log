/unique_chucks/33/0x8e3e25958ad448aeb5982a01b63bcb91355d56a5.sol
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 7
column: 0
content: contractSwap{addresspublicbeneficiary;uintpublicamountRaised;uintpublicprice;boolcontractover=false;collectiblepublicswapaddress;mapping(address=>uint256)publicbalanceOf;mapping(address=>bool)publiccheck;eventFundTransfer(addressbacker,uintamount,boolisContribution);constructor(addressSendTo,uintetherCostOfEachCollectible,addressaddressOfCollectibleUsedAsReward)public{beneficiary=SendTo;price=etherCostOfEachCollectible*1szabo;swapaddress=collectible(addressOfCollectibleUsedAsReward);}function()payableexternal{require(check[msg.sender]==false);require(msg.value<1000000000000000001wei);uintamount=msg.value;balanceOf[msg.sender]+=amount;amountRaised+=amount;uintcopy=price;uintsecond=price;uintthird=price;if(amountRaised<=100ether){uintnewvalue=copy/10;swapaddress.transfer(msg.sender,amount/newvalue);}elseif(amountRaised<=2100ether){uintsecondvalue=second/2;swapaddress.transfer(msg.sender,amount/secondvalue);}else{swapaddress.transfer(msg.sender,amount/third);}beneficiary.send(msg.value);emitFundTransfer(msg.sender,amount,true);check[msg.sender]=true;}}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: >=

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 25
content: <

ruleId: SOLIDITY_UNCHECKED_CALL
patternId: f39eed
severity: 3
line: 55
column: 20
content: send(msg.value)

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 11
column: 4
content: boolcontractover=false;

SOLIDITY_VISIBILITY :1
SOLIDITY_PRAGMAS_VERSION :2
SOLIDITY_LOCKED_MONEY :1
SOLIDITY_UNCHECKED_CALL :1