/unique_chucks/40/0xe779444d1b48ce941e9482e9dceb89ee7570b01c.sol
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 494
column: 46
content: 0x01ffc9a7

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 532
column: 28
content: 0xffffffff

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 595
column: 58
content: 0xd5c368b6

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 792
column: 53
content: 0x81624e24

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 45
column: 4
content: owner=address(0)

ruleId: SOLIDITY_ARRAY_LENGTH_MANIPULATION
patternId: 872bdd
severity: 1
line: 559
column: 8
content: _sendersStack.length-=1

ruleId: SOLIDITY_DIV_MUL
patternId: 09hhh1
severity: 2
line: 851
column: 16
content: amount.mul(_weights[fromToken]).div(_minimalWeight).add(fromBalance).mul(_weights[toToken])

ruleId: SOLIDITY_DIV_MUL
patternId: 09hhh1
severity: 2
line: 918
column: 33
content: returnAmount.mul(_changeFee).div(TOTAL_PERCRENTS.sub(_changeFee)).mul(_referralFee)

ruleId: SOLIDITY_ERC20_APPROVE
patternId: af782c
severity: 2
line: 372
column: 2
content: functionapprove(address_spender,uint256_value)publicreturns(bool){allowed[msg.sender][_spender]=_value;emitApproval(msg.sender,_spender,_value);returntrue;}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 678
column: 8
content: for(uinti=0;i<_tokens.length;i++){tokenAmounts[i]=_tokens[i].balanceOf(this).mul(amount).div(totalSupply_);}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 712
column: 8
content: for(uinti=0;i<_tokens.length;i++){require(tokenAmounts[i]!=0,"Token amount should be non-zero");_tokens[i].checkedTransferFrom(msg.sender,this,tokenAmounts[i]);}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 732
column: 8
content: for(uinti=0;i<someTokens.length;i++){for(uintj=0;j<i;j++){require(someTokens[i]!=someTokens[j],"unbundleSome: should not unbundle same token multiple times");}uint256tokenAmount=someTokens[i].balanceOf(this).mul(value).div(totalSupply);someTokens[i].checkedTransfer(beneficiary,tokenAmount);}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 833
column: 8
content: for(uinti=0;i<tokens.length;i++){require(tokenWeights[i]!=0,"The tokenWeights array should not contains zeros");require(_weights[tokens[i]]==0,"The tokens array have duplicates");_weights[tokens[i]]=tokenWeights[i];if(minimalWeight==0||tokenWeights[i]<minimalWeight){minimalWeight=tokenWeights[i];}}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 176
column: 4
content: functionisContract(addressaddr)internalviewreturns(boolresult){assembly{result:=gt(extcodesize(addr),0)}}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 183
column: 4
content: functionhandleReturnBool()internalpurereturns(boolresult){assembly{switchreturndatasize()case0{result:=1}case32{returndatacopy(0,0,32)result:=mload(0)}default{revert(0,0)}}}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 200
column: 4
content: functionhandleReturnBytes32()internalpurereturns(bytes32result){assembly{switcheq(returndatasize(),32)case1{returndatacopy(0,0,32)result:=mload(0)}switchgt(returndatasize(),32)case1{returndatacopy(0,64,32)result:=mload(0)}switchlt(returndatasize(),32)case1{revert(0,0)}}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 678
column: 8
content: for(uinti=0;i<_tokens.length;i++){tokenAmounts[i]=_tokens[i].balanceOf(this).mul(amount).div(totalSupply_);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 712
column: 8
content: for(uinti=0;i<_tokens.length;i++){require(tokenAmounts[i]!=0,"Token amount should be non-zero");_tokens[i].checkedTransferFrom(msg.sender,this,tokenAmounts[i]);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 732
column: 8
content: for(uinti=0;i<someTokens.length;i++){for(uintj=0;j<i;j++){require(someTokens[i]!=someTokens[j],"unbundleSome: should not unbundle same token multiple times");}uint256tokenAmount=someTokens[i].balanceOf(this).mul(value).div(totalSupply);someTokens[i].checkedTransfer(beneficiary,tokenAmount);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 833
column: 8
content: for(uinti=0;i<tokens.length;i++){require(tokenWeights[i]!=0,"The tokenWeights array should not contains zeros");require(_weights[tokens[i]]==0,"The tokens array have duplicates");_weights[tokens[i]]=tokenWeights[i];if(minimalWeight==0||tokenWeights[i]<minimalWeight){minimalWeight=tokenWeights[i];}}

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 755
column: 0
content: contractFeeBasicMultiTokenisOwnable,BasicMultiToken{usingCheckedERC20forERC20;uint256constantpublicTOTAL_PERCRENTS=1000000;uint256internal_lendFee;functionlendFee()publicviewreturns(uint256){return_lendFee;}functionsetLendFee(uint256theLendFee)publiconlyOwner{require(theLendFee<=30000,"setLendFee: fee should be not greater than 3%");_lendFee=theLendFee;}functionlend(addressto,ERC20token,uint256amount,addresstarget,bytesdata)publicpayable{uint256expectedBalance=token.balanceOf(this).mul(TOTAL_PERCRENTS.add(_lendFee)).div(TOTAL_PERCRENTS);super.lend(to,token,amount,target,data);require(token.balanceOf(this)>=expectedBalance,"lend: tokens must be returned with lend fee");}}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 765
column: 4
content: functionsetLendFee(uint256theLendFee)publiconlyOwner{require(theLendFee<=30000,"setLendFee: fee should be not greater than 3%");_lendFee=theLendFee;}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 898
column: 4
content: functionsetChangeFee(uint256theChangeFee)publiconlyOwner{require(theChangeFee<=30000,"setChangeFee: fee should be not greater than 3%");_changeFee=theChangeFee;}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 903
column: 4
content: functionsetReferralFee(uint256theReferralFee)publiconlyOwner{require(theReferralFee<=500000,"setReferralFee: fee should be not greater than 50% of changeFee");_referralFee=theReferralFee;}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: ^

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 548
column: 18
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 616
column: 12
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 617
column: 9
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 618
column: 9
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 809
column: 32
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 811
column: 9
content: private

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 174
column: 4
content: usingSafeMathforuint;

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 285
column: 2
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 183
column: 4
content: functionhandleReturnBool()internalpurereturns(boolresult){assembly{switchreturndatasize()case0{result:=1}case32{returndatacopy(0,0,32)result:=mload(0)}default{revert(0,0)}}}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 200
column: 4
content: functionhandleReturnBytes32()internalpurereturns(bytes32result){assembly{switcheq(returndatasize(),32)case1{returndatacopy(0,0,32)result:=mload(0)}switchgt(returndatasize(),32)case1{returndatacopy(0,64,32)result:=mload(0)}switchlt(returndatasize(),32)case1{revert(0,0)}}}

ruleId: SOLIDITY_SHOULD_NOT_BE_VIEW
patternId: 189abf
severity: 1
line: 176
column: 4
content: functionisContract(addressaddr)internalviewreturns(boolresult){assembly{result:=gt(extcodesize(addr),0)}}

ruleId: SOLIDITY_SHOULD_NOT_BE_VIEW
patternId: 189abf
severity: 1
line: 263
column: 4
content: functionasmName(addresstoken)internalviewreturns(bytes32){require(isContract(token));require(token.call(bytes4(keccak256("name()"))));returnhandleReturnBytes32();}

ruleId: SOLIDITY_SHOULD_NOT_BE_VIEW
patternId: 189abf
severity: 1
line: 270
column: 4
content: functionasmSymbol(addresstoken)internalviewreturns(bytes32){require(isContract(token));require(token.call(bytes4(keccak256("symbol()"))));returnhandleReturnBytes32();}

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 83k1no
severity: 1
line: 225
column: 22
content: call(bytes4(keccak256("transfer(address,uint256)")),to,value)

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 83k1no
severity: 1
line: 232
column: 22
content: call(bytes4(keccak256("transferFrom(address,address,uint256)")),from,to,value)

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 83k1no
severity: 1
line: 239
column: 22
content: call(bytes4(keccak256("approve(address,uint256)")),spender,value)

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 70
column: 41
content: string

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 458
column: 14
content: string_name

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 458
column: 28
content: string_symbol

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 555
column: 55
content: bytesdata

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 563
column: 56
content: bytesdata

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 585
column: 70
content: uint256[]_tokenAmounts

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 589
column: 64
content: ERC20[]_tokens

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 639
column: 18
content: ERC20[]tokens

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 639
column: 34
content: stringtheName

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 639
column: 50
content: stringtheSymbol

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 670
column: 68
content: uint256[]tokenAmounts

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 688
column: 62
content: ERC20[]someTokens

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 708
column: 58
content: uint256[]tokenAmounts

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 723
column: 59
content: ERC20[]someTokens

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 743
column: 75
content: bytesdata

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 770
column: 75
content: bytesdata

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 828
column: 18
content: ERC20[]tokens

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 828
column: 34
content: uint256[]tokenWeights

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 828
column: 58
content: stringtheName

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 828
column: 74
content: stringtheSymbol

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 929
column: 18
content: ERC20[]tokens

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 929
column: 34
content: uint256[]tokenWeights

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 929
column: 58
content: stringtheName

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 929
column: 74
content: stringtheSymbol

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 937
column: 41
content: string

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 178
column: 8
content: assembly{result:=gt(extcodesize(addr),0)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 185
column: 8
content: assembly{switchreturndatasize()case0{result:=1}case32{returndatacopy(0,0,32)result:=mload(0)}default{revert(0,0)}}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 202
column: 8
content: assembly{switcheq(returndatasize(),32)case1{returndatacopy(0,0,32)result:=mload(0)}switchgt(returndatasize(),32)case1{returndatacopy(0,64,32)result:=mload(0)}switchlt(returndatasize(),32)case1{revert(0,0)}}

SOLIDITY_OVERPOWERED_ROLE :3
SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_ARRAY_LENGTH_MANIPULATION :1
SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN :3
SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA :6
SOLIDITY_EXTRA_GAS_IN_LOOPS :4
SOLIDITY_ADDRESS_HARDCODED :5
SOLIDITY_UPGRADE_TO_050 :28
SOLIDITY_GAS_LIMIT_IN_LOOPS :4
SOLIDITY_DIV_MUL :2
SOLIDITY_SHOULD_NOT_BE_PURE :2
SOLIDITY_ERC20_APPROVE :1
SOLIDITY_SAFEMATH :2
SOLIDITY_LOCKED_MONEY :1
SOLIDITY_USING_INLINE_ASSEMBLY :3
SOLIDITY_SHOULD_NOT_BE_VIEW :3