/unique_chucks/2/0xffe04344f48e7ca2ee5e25bf557ac88b1b769cb3.sol
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: adc165
severity: 1
line: 134
column: 59
content: 0x630CC4c83fCc1121feD041126227d25Bbeb51959

ruleId: SOLIDITY_ERC20_APPROVE
patternId: af782c
severity: 2
line: 95
column: 1
content: functionapprove(address_spender,uint256_value)publicreturns(bool){allowed[msg.sender][_spender]=_value;emitApproval(msg.sender,_spender,_value);returntrue;}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 47acc2
severity: 1
line: 188
column: 1
content: functionsetMaxLockPeriod(uint256_maxLockPeriod)publicreturns(bool){maxLockPeriod=_maxLockPeriod;}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 47acc2
severity: 1
line: 195
column: 1
content: functionsafeLock(uint256_amount,uint256_bn)publicreturns(bool){require(_amount<=balances[msg.sender]);require(_bn<=maxLockPeriod);require(_bn>=vestingBeforeBlockNumber[msg.sender]);require(_amount>=vestingAmount[msg.sender]);vestingAmount[msg.sender]=_amount;vestingBeforeBlockNumber[msg.sender]=_bn;}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 11
column: 16
content: ^

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 174
column: 3
content: if(balances[msg.sender]<_value)revert();

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 175
column: 3
content: if(balances[msg.sender]<=vestingAmount[msg.sender])revert();

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 176
column: 3
content: if(balances[msg.sender].sub(_value)<vestingAmount[msg.sender])revert();

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 220
column: 3
content: if(balances[_from]<_value)revert();

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 221
column: 3
content: if(balances[_from]<=vestingAmount[_from])revert();

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 222
column: 3
content: if(balances[_from].sub(_value)<vestingAmount[_from])revert();

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 54
column: 1
content: usingSafeMathforuint256;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 56
column: 1
content: mapping(address=>uint256)balances;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 58
column: 1
content: uint256totalSupply_;

SOLIDITY_VISIBILITY :2
SOLIDITY_SAFEMATH :1
SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_REVERT_REQUIRE :6
SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN :2
SOLIDITY_ADDRESS_HARDCODED :1
SOLIDITY_ERC20_APPROVE :1