/unique_chucks/28/0x729e895e186b7fbd34485d496415bb2f42629b71.sol
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_BALANCE_EQUALITY
patternId: 5094ad
severity: 1
line: 988
column: 17
content: requests[_requestId].payee.balance==0

ruleId: SOLIDITY_BALANCE_EQUALITY
patternId: 5094ad
severity: 1
line: 991
column: 21
content: subPayees[_requestId][i].balance==0

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 333
column: 2
content: functionbalanceOf(addresswho)publicconstantreturns(uint256);

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 517
column: 2
content: functionallowance(addressowner,addressspender)publicconstantreturns(uint256);

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 528
column: 2
content: functionallowance(addressowner,addressspender)publicconstantreturns(uint256);

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 924
column: 8
content: for(uint8i=0;subPayees[_requestId][i].addr!=address(0);i=i.add(1)){}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 971
column: 8
content: for(uint8i=0;subPayees[_requestId][i].addr!=address(0);i=i.add(1)){balance=balance.add(subPayees[_requestId][i].balance);}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 990
column: 8
content: for(uint8i=0;isNull&&subPayees[_requestId][i].addr!=address(0);i=i.add(1)){isNull=subPayees[_requestId][i].balance==0;}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 1009
column: 8
content: for(uint8i=0;subPayees[_requestId][i].addr!=address(0);i=i.add(1)){expectedAmount=expectedAmount.add(subPayees[_requestId][i].expectedAmount);}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 1044
column: 8
content: for(uint8i=0;subPayees[_requestId][i].addr!=address(0);i=i.add(1)){if(subPayees[_requestId][i].addr==_address){returni+1;}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 1115
column: 8
content: for(uint8i=1;i<_payees.length;i=i.add(1)){require(_payees[i]!=0,"payee should not be 0");subPayees[_requestId][i-1]=Payee(_payees[i],_expectedAmounts[i],0);emitNewSubPayee(_requestId,_payees[i]);}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 1266
column: 8
content: for(uint8i=0;i<_additionalAmounts.length;i=i.add(1)){if(_additionalAmounts[i]!=0){requestCore.updateExpectedAmount(_requestId,i,_additionalAmounts[i].toInt256Safe());}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 1298
column: 8
content: for(uint8i=0;i<_subtractAmounts.length;i=i.add(1)){if(_subtractAmounts[i]!=0){require(requestCore.getPayeeExpectedAmount(_requestId,i)>=_subtractAmounts[i].toInt256Safe(),"subtract should equal or be lower than amount expected");requestCore.updateExpectedAmount(_requestId,i,-_subtractAmounts[i].toInt256Safe());}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 1335
column: 8
content: for(uint8i=0;i<_expectedAmounts.length;i=i.add(1)){require(_expectedAmounts[i]>=0,"expected amounts should be positive");totalExpectedAmounts=totalExpectedAmounts.add(_expectedAmounts[i]);}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 1641
column: 8
content: for(uint8j=0;j<_payeesPaymentAddress.length;j=j.add(1)){payeesPaymentAddress[requestId][j]=_payeesPaymentAddress[j];}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 1799
column: 8
content: for(uint8i=0;i<_expectedAmounts.length;i=i.add(1)){totalExpectedAmounts=totalExpectedAmounts.add(_expectedAmounts[i]);}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 1866
column: 8
content: for(uint8j=0;j<_payeesPaymentAddress.length;j=j.add(1)){payeesPaymentAddress[requestId][j]=_payeesPaymentAddress[j];}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 1900
column: 8
content: for(uint8i=0;i<_payeeAmounts.length;i=i.add(1)){if(_payeeAmounts[i]!=0){requestCore.updateBalance(_requestId,i,_payeeAmounts[i].toInt256Safe());addressaddressToPay;if(payeesPaymentAddress[_requestId][i]==0){addressToPay=requestCore.getPayeeAddress(_requestId,i);}else{addressToPay=payeesPaymentAddress[_requestId][i];}fundOrderInternal(msg.sender,addressToPay,_payeeAmounts[i]);}}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 161
column: 4
content: functionextractAddress(bytesdata,uintoffset)internalpurereturns(addressm){require(offset>=0&&offset+20<=data.length,"offset value should be in the correct range");assembly{m:=and(mload(add(data,add(20,offset))),0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF)}}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 183
column: 4
content: functionextractBytes32(bytesdata,uintoffset)internalpurereturns(bytes32bs){require(offset>=0&&offset+32<=data.length,"offset value should be in the correct range");assembly{bs:=mload(add(data,add(32,offset)))}}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 1059
column: 4
content: functionextractBytes32(bytes_data,uintoffset)publicpurereturns(bytes32bs){require(offset>=0&&offset+32<=_data.length,"offset value should be in the correct range");assembly{bs:=mload(add(_data,add(32,offset)))}}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 1090
column: 4
content: functionextractAddress(bytes_data,uintoffset)internalpurereturns(addressm){require(offset>=0&&offset+20<=_data.length,"offset value should be in the correct range");assembly{m:=and(mload(add(_data,add(20,offset))),0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF)}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 1266
column: 8
content: for(uint8i=0;i<_additionalAmounts.length;i=i.add(1)){if(_additionalAmounts[i]!=0){requestCore.updateExpectedAmount(_requestId,i,_additionalAmounts[i].toInt256Safe());}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 1298
column: 8
content: for(uint8i=0;i<_subtractAmounts.length;i=i.add(1)){if(_subtractAmounts[i]!=0){require(requestCore.getPayeeExpectedAmount(_requestId,i)>=_subtractAmounts[i].toInt256Safe(),"subtract should equal or be lower than amount expected");requestCore.updateExpectedAmount(_requestId,i,-_subtractAmounts[i].toInt256Safe());}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 1335
column: 8
content: for(uint8i=0;i<_expectedAmounts.length;i=i.add(1)){require(_expectedAmounts[i]>=0,"expected amounts should be positive");totalExpectedAmounts=totalExpectedAmounts.add(_expectedAmounts[i]);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 1641
column: 8
content: for(uint8j=0;j<_payeesPaymentAddress.length;j=j.add(1)){payeesPaymentAddress[requestId][j]=_payeesPaymentAddress[j];}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 1799
column: 8
content: for(uint8i=0;i<_expectedAmounts.length;i=i.add(1)){totalExpectedAmounts=totalExpectedAmounts.add(_expectedAmounts[i]);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 1866
column: 8
content: for(uint8j=0;j<_payeesPaymentAddress.length;j=j.add(1)){payeesPaymentAddress[requestId][j]=_payeesPaymentAddress[j];}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 1900
column: 8
content: for(uint8i=0;i<_payeeAmounts.length;i=i.add(1)){if(_payeeAmounts[i]!=0){requestCore.updateBalance(_requestId,i,_payeeAmounts[i].toInt256Safe());addressaddressToPay;if(payeesPaymentAddress[_requestId][i]==0){addressToPay=requestCore.getPayeeAddress(_requestId,i);}else{addressToPay=payeesPaymentAddress[_requestId][i];}fundOrderInternal(msg.sender,addressToPay,_payeeAmounts[i]);}}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 373
column: 4
content: functionsetRateFees(uint256_rateFeesNumerator,uint256_rateFeesDenominator)externalonlyOwner{rateFeesNumerator=_rateFeesNumerator;rateFeesDenominator=_rateFeesDenominator;emitUpdateRateFees(rateFeesNumerator,rateFeesDenominator);}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 386
column: 4
content: functionsetMaxCollectable(uint256_newMaxFees)externalonlyOwner{maxFees=_newMaxFees;emitUpdateMaxFees(maxFees);}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 398
column: 4
content: functionsetRequestBurnerContract(address_requestBurnerContract)externalonlyOwner{requestBurnerContract=_requestBurnerContract;}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: ^

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 345
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 548
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 1179
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 1386
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 1574
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 161
column: 4
content: functionextractAddress(bytesdata,uintoffset)internalpurereturns(addressm){require(offset>=0&&offset+20<=data.length,"offset value should be in the correct range");assembly{m:=and(mload(add(data,add(20,offset))),0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF)}}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 183
column: 4
content: functionextractBytes32(bytesdata,uintoffset)internalpurereturns(bytes32bs){require(offset>=0&&offset+32<=data.length,"offset value should be in the correct range");assembly{bs:=mload(add(data,add(32,offset)))}}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 203
column: 4
content: functionupdateBytes20inBytes(bytesdata,uintoffset,bytes20b)internalpure{require(offset>=0&&offset+20<=data.length,"offset value should be in the correct range");assembly{letm:=mload(add(data,add(20,offset)))m:=and(m,0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000)m:=or(m,div(b,0x1000000000000000000000000))mstore(add(data,add(20,offset)),m)}}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 1059
column: 4
content: functionextractBytes32(bytes_data,uintoffset)publicpurereturns(bytes32bs){require(offset>=0&&offset+32<=_data.length,"offset value should be in the correct range");assembly{bs:=mload(add(_data,add(32,offset)))}}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 1090
column: 4
content: functionextractAddress(bytes_data,uintoffset)internalpurereturns(addressm){require(offset>=0&&offset+20<=_data.length,"offset value should be in the correct range");assembly{m:=and(mload(add(_data,add(20,offset))),0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF)}}

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 7d54ca
severity: 1
line: 1332
column: 15
content: (bytes32requestId,uint256collectedFees)

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 161
column: 28
content: bytesdata

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 183
column: 28
content: bytesdata

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 203
column: 34
content: bytesdata

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 225
column: 27
content: bytesdata

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 228
column: 17
content: string

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1059
column: 28
content: bytes_data

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1090
column: 28
content: bytes_data

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1110
column: 47
content: address[]_payees

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1110
column: 66
content: int256[]_expectedAmounts

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1130
column: 27
content: bytesdata

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1133
column: 17
content: string

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1251
column: 50
content: uint256[]_additionalAmounts

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1284
column: 48
content: uint256[]_subtractAmounts

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1327
column: 8
content: address[]_payeesIdAddress

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1328
column: 8
content: int256[]_expectedAmounts

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1329
column: 8
content: string_data

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1412
column: 8
content: bytesrequestData

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1413
column: 8
content: address[]payeesPaymentAddress

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1415
column: 8
content: bytessignature

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1460
column: 8
content: bytesrequestData

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1461
column: 8
content: bytespayeesPaymentAddress

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1463
column: 8
content: bytessignature

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1496
column: 8
content: bytesrequestData

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1497
column: 8
content: bytespayeesPaymentAddress

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1523
column: 8
content: bytesrequestData

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1524
column: 8
content: address[]payeesPaymentAddress

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1767
column: 8
content: address[]_payeesIdAddress

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1768
column: 8
content: int256[]_expectedAmounts

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1770
column: 8
content: uint256[]_payeeAmounts

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1771
column: 8
content: uint256[]_additionals

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1772
column: 8
content: string_data

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1827
column: 8
content: bytes_requestData

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1828
column: 8
content: address[]_payeesPaymentAddress

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1829
column: 8
content: uint256[]_payeeAmounts

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1830
column: 8
content: uint256[]_additionals

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1889
column: 8
content: uint256[]_payeeAmounts

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1930
column: 8
content: uint256[]_payeeAmounts

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1931
column: 8
content: uint256[]_additionals

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 169
column: 8
content: assembly{m:=and(mload(add(data,add(20,offset))),0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 191
column: 8
content: assembly{bs:=mload(add(data,add(32,offset)))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 210
column: 8
content: assembly{letm:=mload(add(data,add(20,offset)))m:=and(m,0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000)m:=or(m,div(b,0x1000000000000000000000000))mstore(add(data,add(20,offset)),m)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 1067
column: 8
content: assembly{bs:=mload(add(_data,add(32,offset)))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 1098
column: 8
content: assembly{m:=and(mload(add(_data,add(20,offset))),0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF)}

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 591
column: 4
content: mapping(bytes32=>Request)requests;

SOLIDITY_VISIBILITY :1
SOLIDITY_SAFEMATH :5
SOLIDITY_OVERPOWERED_ROLE :3
SOLIDITY_DEPRECATED_CONSTRUCTIONS :3
SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN :4
SOLIDITY_EXTRA_GAS_IN_LOOPS :13
SOLIDITY_UPGRADE_TO_050 :38
SOLIDITY_GAS_LIMIT_IN_LOOPS :7
SOLIDITY_USING_INLINE_ASSEMBLY :5
SOLIDITY_SHOULD_RETURN_STRUCT :1
SOLIDITY_BALANCE_EQUALITY :2
SOLIDITY_SHOULD_NOT_BE_PURE :5