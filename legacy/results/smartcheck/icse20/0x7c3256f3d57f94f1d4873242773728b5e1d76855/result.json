{
  "contract": "0x7c3256f3d57f94f1d4873242773728b5e1d76855",
  "tool": "smartcheck",
  "start": 1563778588.4051912,
  "end": 1563778597.041794,
  "duration": 8.636602878570557,
  "analysis": [
    {
      "name": "SOLIDITY_ADDRESS_HARDCODED",
      "patternId": "c67a09",
      "severity": 1,
      "line": 108,
      "column": 36,
      "content": "0x0"
    },
    {
      "name": "SOLIDITY_ADDRESS_HARDCODED",
      "patternId": "c67a09",
      "severity": 1,
      "line": 136,
      "column": 35,
      "content": "0x0"
    },
    {
      "name": "SOLIDITY_ADDRESS_HARDCODED",
      "patternId": "c67a09",
      "severity": 1,
      "line": 139,
      "column": 47,
      "content": "0x0"
    },
    {
      "name": "SOLIDITY_ADDRESS_HARDCODED",
      "patternId": "c67a09",
      "severity": 1,
      "line": 145,
      "column": 31,
      "content": "0x0"
    },
    {
      "name": "SOLIDITY_GAS_LIMIT_IN_LOOPS",
      "patternId": "f6f853",
      "severity": 2,
      "line": 197,
      "column": 8,
      "content": "for(uint256i=0;i<bcodesLen;i++){if(revealBonusCodes[currentPeriod][bcodes[currentPeriod][i]].prefix!=winnerBcode.prefix){continue;}BonusCodememorythisBonusCode=revealBonusCodes[currentPeriod][bcodes[currentPeriod][i]];if(thisBonusCode.addr==winnerBcode.addr&&thisBonusCode.orderId==winnerBcode.orderId){balanceOf[winnerBcode.addr]=balanceOf[winnerBcode.addr].safeAdd(halfBonusPool);}else{uint256bonusAmount=halfBonusPool.safeMul(thisBonusCode.nums.safeMul(stake).safeDiv(sideTotalAmount[currentPeriod][winnerBcode.prefix]));balanceOf[thisBonusCode.addr]=balanceOf[thisBonusCode.addr].safeAdd(bonusAmount);}}"
    },
    {
      "name": "SOLIDITY_GAS_LIMIT_IN_LOOPS",
      "patternId": "17f23a",
      "severity": 1,
      "line": 180,
      "column": 15,
      "content": "lt<=rt"
    },
    {
      "name": "SOLIDITY_LOCKED_MONEY",
      "patternId": "30281d",
      "severity": 3,
      "line": 38,
      "column": 0,
      "content": "contractFIHisRevealPrivilege{usingSafeMathforuint256;uint256constantwithdrawalFee=0.05ether;uint256constantstake=0.01ether;uint256publicbonusCodeNonce;uint16publiccurrentPeriod;uint256bonusPool;uint256publicteamBonus;structBonusCode{uint8prefix;uint256orderId;uint256code;uint256nums;uint256period;addressaddr;}mapping(address=>uint256)balanceOf;mapping(address=>bool)publicallowance;mapping(uint16=>BonusCode)publicrevealResultPerPeriod;mapping(uint16=>uint256)revealBonusPerPeriod;mapping(address=>BonusCode[])revealInfoByAddr;mapping(uint16=>uint256)gameBonusPerPeriod;mapping(uint16=>mapping(address=>uint256))invitedBonus;mapping(address=>address)invitedRelations;mapping(uint16=>mapping(uint8=>uint256))sideTotalAmount;mapping(uint16=>mapping(uint256=>BonusCode))publicrevealBonusCodes;mapping(uint16=>uint256[])bcodes;eventBet(uint16_currentPeriod,uint256_orderId,uint256_code,address_from);eventDeposit(address_from,address_to,uint256_amount);eventReveal(uint16_currentPeriod,uint256_orderId,uint256_prefix,uint256_code,address_addr,uint256_winnerBonus);eventWithdrawal(address_to,uint256_amount);constructor()public{owner=msg.sender;isAdmin[owner]=true;currentPeriod=1;bonusCodeNonce=0;bonusPool=0;teamBonus=0;gameBonusPerPeriod[currentPeriod]=0;}functiondeposit(address_to)payablepublic{require(msg.value>0);if(msg.sender!=_to){require(msg.sender==delegateAddr,\"deposit can only from self-address or delegated address\");allowance[_to]=true;}balanceOf[_to]=SafeMath.safeAdd(balanceOf[_to],msg.value);emitDeposit(msg.sender,_to,msg.value);}functionbet(address_from,address_invitedAddr,uint256_amount,uint8_fType)public{require(stake<=_amount&&_amount<=balanceOf[_from],\"amount should more than stake and less or equal to balance\");if(msg.sender!=_from){require(msg.sender==delegateAddr&&allowance[_from]==true,\"permission rejected\");}if(_invitedAddr!=address(0x0)){require(_from!=_invitedAddr,\"bet _from is not equals _invitedAddr\");}balanceOf[_from]=balanceOf[_from].safeSub(_amount);sideTotalAmount[currentPeriod][_fType]=sideTotalAmount[currentPeriod][_fType].safeAdd(_amount);uint256currentAmount=_amount;uint256gameBonusPercentVal=_amount.safeMul(20).safeDiv(100);uint256teamBonusPercentVal=_amount.safeMul(15).safeDiv(100);uint256bonusPoolPercentVal=_amount.safeMul(50).safeDiv(100);gameBonusPerPeriod[currentPeriod]=gameBonusPerPeriod[currentPeriod].safeAdd(gameBonusPercentVal);currentAmount=currentAmount.safeSub(gameBonusPercentVal);teamBonus=teamBonus.safeAdd(teamBonusPercentVal);currentAmount=currentAmount.safeSub(teamBonusPercentVal);bonusPool=bonusPool.safeAdd(bonusPoolPercentVal);currentAmount=currentAmount.safeSub(bonusPoolPercentVal);uint256bonusLevelOne=_amount.safeMul(10).safeDiv(100);uint256bonusLevelTwo=_amount.safeMul(5).safeDiv(100);if(_invitedAddr!=address(0x0)){invitedRelations[_from]=_invitedAddr;}if(invitedRelations[_from]!=address(0x0)){addressfa=invitedRelations[_from];invitedBonus[currentPeriod][fa]=invitedBonus[currentPeriod][fa].safeAdd(bonusLevelOne);balanceOf[fa]=balanceOf[fa].safeAdd(bonusLevelOne);currentAmount=currentAmount.safeSub(bonusLevelOne);addressgfa=invitedRelations[fa];if(gfa!=address(0x0)){invitedBonus[currentPeriod][gfa]=invitedBonus[currentPeriod][gfa].safeAdd(bonusLevelTwo);balanceOf[gfa]=balanceOf[gfa].safeAdd(bonusLevelTwo);currentAmount=currentAmount.safeSub(bonusLevelTwo);}}assert(currentAmount>=0);bonusPool=bonusPool.safeAdd(currentAmount);uint256oId=block.timestamp;BonusCodememorybc=BonusCode({orderId:oId,prefix:_fType,code:bonusCodeNonce,nums:_amount.safeDiv(stake),addr:_from,period:currentPeriod});revealBonusCodes[currentPeriod][bonusCodeNonce]=bc;bcodes[currentPeriod].push(bonusCodeNonce);emitBet(currentPeriod,oId,bonusCodeNonce,_from);bonusCodeNonce=bonusCodeNonce.safeAdd(_amount.safeDiv(stake));}eventDebug(uint256winnerIndex,uint256bcodesLen,uint256pos);functionreveal(stringmemory_seed)publiconlyAdmins{uint256winner=uint256(keccak256(abi.encodePacked(_seed,msg.sender,block.timestamp)))%bonusCodeNonce;uint256lt=0;uint256rt=bcodes[currentPeriod].length-1;require(lt<=rt,\"bcodes length is not correct\");uint256pos=lt;while(lt<=rt){uint256mid=lt+(rt-lt)/2;if(bcodes[currentPeriod][mid]<=winner){pos=mid;lt=mid+1;}else{rt=mid-1;}}emitDebug(winner,bcodes[currentPeriod].length,pos);uint256halfBonusPool=bonusPool.safeMul(50).safeDiv(100);BonusCodememorywinnerBcode=revealBonusCodes[currentPeriod][bcodes[currentPeriod][pos]];uint256bcodesLen=bcodes[currentPeriod].length;for(uint256i=0;i<bcodesLen;i++){if(revealBonusCodes[currentPeriod][bcodes[currentPeriod][i]].prefix!=winnerBcode.prefix){continue;}BonusCodememorythisBonusCode=revealBonusCodes[currentPeriod][bcodes[currentPeriod][i]];if(thisBonusCode.addr==winnerBcode.addr&&thisBonusCode.orderId==winnerBcode.orderId){balanceOf[winnerBcode.addr]=balanceOf[winnerBcode.addr].safeAdd(halfBonusPool);}else{uint256bonusAmount=halfBonusPool.safeMul(thisBonusCode.nums.safeMul(stake).safeDiv(sideTotalAmount[currentPeriod][winnerBcode.prefix]));balanceOf[thisBonusCode.addr]=balanceOf[thisBonusCode.addr].safeAdd(bonusAmount);}}revealBonusPerPeriod[currentPeriod]=halfBonusPool;revealResultPerPeriod[currentPeriod]=winnerBcode;revealInfoByAddr[winnerBcode.addr].push(winnerBcode);currentPeriod++;bonusPool=0;bonusCodeNonce=0;gameBonusPerPeriod[currentPeriod]=0;emitReveal(currentPeriod-1,winnerBcode.orderId,winnerBcode.prefix,winnerBcode.code,winnerBcode.addr,halfBonusPool);}functionwithdrawal(address_from,address<missing ')'>payable_to,uint256_amount)public{if(msg.sender!=_from){require(allowance[_from]==true&&msg.sender==delegateAddr,\"permission rejected\");}"
    },
    {
      "name": "SOLIDITY_PRAGMAS_VERSION",
      "patternId": "23fc32",
      "severity": 1,
      "line": 1,
      "column": 16,
      "content": "^"
    },
    {
      "name": "SOLIDITY_SAFEMATH",
      "patternId": "837cac",
      "severity": 1,
      "line": 39,
      "column": 4,
      "content": "usingSafeMathforuint256;"
    },
    {
      "name": "SOLIDITY_UINT_CANT_BE_NEGATIVE",
      "patternId": "d48ac4",
      "severity": 2,
      "line": 151,
      "column": 15,
      "content": "currentAmount>=0"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": 910067,
      "severity": 1,
      "line": 224,
      "column": 4,
      "content": "functionwithdrawal(address_from,address<missing ')'>payable"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 7,
      "column": 4,
      "content": "addressowner;"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 42,
      "column": 4,
      "content": "uint256constantwithdrawalFee=0.05ether;"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 43,
      "column": 4,
      "content": "uint256constantstake=0.01ether;"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 47,
      "column": 4,
      "content": "uint256bonusPool;"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 60,
      "column": 4,
      "content": "mapping(address=>uint256)balanceOf;"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 64,
      "column": 4,
      "content": "mapping(uint16=>uint256)revealBonusPerPeriod;"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 66,
      "column": 4,
      "content": "mapping(address=>BonusCode[])revealInfoByAddr;"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 68,
      "column": 4,
      "content": "mapping(uint16=>uint256)gameBonusPerPeriod;"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 70,
      "column": 4,
      "content": "mapping(uint16=>mapping(address=>uint256))invitedBonus;"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 71,
      "column": 4,
      "content": "mapping(address=>address)invitedRelations;"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 73,
      "column": 4,
      "content": "mapping(uint16=>mapping(uint8=>uint256))sideTotalAmount;"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 75,
      "column": 4,
      "content": "mapping(uint16=>uint256[])bcodes;"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 224,
      "column": 55,
      "content": "_to,"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 224,
      "column": 60,
      "content": "uint256_amount)public{if"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 226,
      "column": 11,
      "content": "(msg.sender!=_from){"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 227,
      "column": 12,
      "content": "require(allowance["
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 227,
      "column": 30,
      "content": "_from]==true&&"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 227,
      "column": 48,
      "content": "msg.sender==delegateAddr,\"permission rejected\");"
    }
  ]
}