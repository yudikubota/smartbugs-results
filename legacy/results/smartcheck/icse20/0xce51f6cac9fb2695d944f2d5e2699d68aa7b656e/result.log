/unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 187b5a
severity: 1
line: 13
column: 15
content: sha3

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 187b5a
severity: 1
line: 13
column: 20
content: sha3

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 187b5a
severity: 1
line: 23
column: 15
content: sha3

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 187b5a
severity: 1
line: 23
column: 20
content: sha3

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 187b5a
severity: 1
line: 23
column: 25
content: sha3

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 187b5a
severity: 1
line: 43
column: 20
content: sha3

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 187b5a
severity: 1
line: 45
column: 24
content: sha3

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 187b5a
severity: 1
line: 52
column: 20
content: sha3

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 187b5a
severity: 1
line: 113
column: 20
content: sha3

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 187b5a
severity: 1
line: 113
column: 25
content: sha3

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 187b5a
severity: 1
line: 114
column: 36
content: sha3

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 5
column: 4
content: functioneccVerify(bytes32hash,uint8curve,bytes32r,bytes32s)constantreturns(addresspublicKey){publicKey=ecrecover(hash,curve,r,s);}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 11
column: 4
content: functioncalcBindedBlindHash3(stringkey,addressreceiver)constantreturns(bytes32lock){lock=sha3(sha3(key),receiver);}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 16
column: 4
content: functioncalcBindedBlindHash256(stringkey,addressreceiver)constantreturns(bytes32lock){lock=sha256(sha256(key),receiver);}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 21
column: 4
content: functioncalcDoubleBindedBlindHash3(stringkey,addresscaller,addressreceiver)constantreturns(bytes32lock){lock=sha3(sha3(sha3(key),caller),receiver);}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 26
column: 4
content: functioncalcDoubleBindedBlindHash256(stringkey,addresscaller,addressreceiver)constantreturns(bytes32lock){lock=sha256(sha256(sha256(key),caller),receiver);}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 31
column: 4
content: functionhash_sha256(stringkey,uintrounds)constantreturns(bytes32sha256_hash){if(rounds==0)rounds=1;sha256_hash=sha256(key);for(uinti=0;i<rounds-1;i++){sha256_hash=sha256(sha256_hash);}}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 40
column: 4
content: functionhash_sha3(stringkey,uintrounds)constantreturns(bytes32sha3_hash){if(rounds==0)rounds=1;sha3_hash=sha3(key);for(uinti=0;i<rounds-1;i++){sha3_hash=sha3(sha3_hash);}}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 49
column: 4
content: functionhash_ripemd160(stringkey,uintrounds)constantreturns(bytes32r160_hash){if(rounds==0)rounds=1;r160_hash=sha3(key);for(uinti=0;i<rounds-1;i++){r160_hash=ripemd160(r160_hash);}}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 104
column: 4
content: functionsetLock(bytes32_lock,string_protocol)onlyOwner{require(_lock!=0x0&&lock!=_lock);lock=_lock;didProve=false;if(bytes(_protocol).length>0)protocol=_protocol;logEvent();}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: ^

ruleId: SOLIDITY_SEND
patternId: 430636
severity: 1
line: 131
column: 30
content: send(this.balance)

ruleId: SOLIDITY_SEND
patternId: 430636
severity: 1
line: 139
column: 20
content: send(value)

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 5
column: 4
content: functioneccVerify(bytes32hash,uint8curve,bytes32r,bytes32s)constantreturns(addresspublicKey){publicKey=ecrecover(hash,curve,r,s);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 11
column: 4
content: functioncalcBindedBlindHash3(stringkey,addressreceiver)constantreturns(bytes32lock){lock=sha3(sha3(key),receiver);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 16
column: 4
content: functioncalcBindedBlindHash256(stringkey,addressreceiver)constantreturns(bytes32lock){lock=sha256(sha256(key),receiver);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 21
column: 4
content: functioncalcDoubleBindedBlindHash3(stringkey,addresscaller,addressreceiver)constantreturns(bytes32lock){lock=sha3(sha3(sha3(key),caller),receiver);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 26
column: 4
content: functioncalcDoubleBindedBlindHash256(stringkey,addresscaller,addressreceiver)constantreturns(bytes32lock){lock=sha256(sha256(sha256(key),caller),receiver);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 31
column: 4
content: functionhash_sha256(stringkey,uintrounds)constantreturns(bytes32sha256_hash){if(rounds==0)rounds=1;sha256_hash=sha256(key);for(uinti=0;i<rounds-1;i++){sha256_hash=sha256(sha256_hash);}}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 40
column: 4
content: functionhash_sha3(stringkey,uintrounds)constantreturns(bytes32sha3_hash){if(rounds==0)rounds=1;sha3_hash=sha3(key);for(uinti=0;i<rounds-1;i++){sha3_hash=sha3(sha3_hash);}}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 49
column: 4
content: functionhash_ripemd160(stringkey,uintrounds)constantreturns(bytes32r160_hash){if(rounds==0)rounds=1;r160_hash=sha3(key);for(uinti=0;i<rounds-1;i++){r160_hash=ripemd160(r160_hash);}}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 66
column: 4
content: functionowned(){owner=msg.sender;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 100
column: 4
content: functionLocksmith(){owner=msg.sender;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 104
column: 4
content: functionsetLock(bytes32_lock,string_protocol)onlyOwner{require(_lock!=0x0&&lock!=_lock);lock=_lock;didProve=false;if(bytes(_protocol).length>0)protocol=_protocol;logEvent();}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 112
column: 4
content: functionunlock(stringkey,addressreceiver,bytes32newLock,string_protocol){bytes32k=sha3(sha3(key),msg.sender);if(uint(receiver)>0)k=sha3(k,receiver);if(k==lock){if(uint(receiver)>0)owner=receiver;elseowner=msg.sender;Unlock(msg.sender,key,lock);proofs[m_proofs].prover=msg.sender;proofs[m_proofs].receiver=(uint(receiver)==0?msg.sender:receiver);proofs[m_proofs].key=key;proofs[m_proofs].lock=lock;m_proofs++;lock=newLock;didProve=(uint(newLock)==0);if(bytes(_protocol).length>0)protocol=_protocol;if(this.balance>0)require(owner.send(this.balance));}logEvent();}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 136
column: 4
content: functionsendTo(address_to,uintvalue)onlyOwner{require(didProve);require(this.balance>=value&&value>0);require(_to.send(value));logEvent();}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 147
column: 4
content: functionkill()onlyOwner{require(didProve);selfdestruct(owner);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 152
column: 4
content: function()payable{require(msg.value>0);Deposit(msg.sender,msg.value);}

SOLIDITY_VISIBILITY :15
SOLIDITY_OVERPOWERED_ROLE :1
SOLIDITY_DEPRECATED_CONSTRUCTIONS :19
SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_SEND :2