/unique_chucks/28/0x844a23f03b15eec241f376a2a95148c78c092a9f.sol
line 99:33 mismatched input 'payable' expecting {',', ')'}
line 99:44 no viable alternative at input '_to)'
line 99:44 extraneous input ')' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 99:54 extraneous input ';' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 100:62 extraneous input '_data' expecting {',', ')'}
line 293:33 mismatched input 'payable' expecting {',', ')'}
line 293:44 no viable alternative at input '_to)'
line 293:44 extraneous input ')' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 293:55 extraneous input '{' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 294:25 mismatched input '(' expecting {';', '='}
line 294:45 mismatched input ',' expecting ')'
line 294:58 extraneous input ')' expecting {';', '='}
line 296:31 extraneous input '(' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 296:35 extraneous input ')' expecting {';', '='}
line 310:4 extraneous input 'function' expecting {<EOF>, 'pragma', 'import', 'contract', 'library', 'interface'}
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 185
column: 28
content: 0xFFFFFFFFFFFFFF

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 156
column: 54
content: (msg.sender,address(0),amount)

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 179
column: 0
content: contractAacCreationisSegmentedTransfer{uintpublicpriceToMint;uintconstantUID_MAX=0xFFFFFFFFFFFFFF;addresspublicehrtContractAddress;LinkDependencypubliccoloredEhrtContract;LinkDependencypublicexternalTokensContract;AacInterfacepublicaacContract;mapping(address=>bool)publicallowedToLink;modifiercanOperate(uint_uid){addressowner=aacContract.ownerOf(_uid);require(msg.sender==owner||msg.sender==aacContract.getApproved(_uid)||aacContract.isApprovedForAll(owner,msg.sender),"Not authorized to operate for this AAC");_;}functionupdateAacContract(address_newAddress)externalonlyOwner{aacContract=AacInterface(_newAddress);}functionupdateEhrtContractAddress(address_newAddress)externalonlyOwner{ehrtContractAddress=_newAddress;}functionupdateColoredEhrtContractAddress(address_newAddress)externalonlyOwner{coloredEhrtContract=LinkDependency(_newAddress);}functionupdateExternalTokensContractAddress(address_newAddress)externalonlyOwner{externalTokensContract=LinkDependency(_newAddress);}functionchangeAacPrice(uint_newPrice)externalonlyOwner{priceToMint=_newPrice;}functionwhitelistLinker(address_linker,bool_isAllowed)externalonlyOwner{allowedToLink[_linker]=_isAllowed;}functionmint()external{segmentedTransfer(ehrtContractAddress,priceToMint);aacContract.mintAndSend(msg.sender);}functionmintAndSend(addresspayable_to)external{segmentedTransfer(ehrtContractAddress,priceToMint);aacContract.mintAndSend(_to);}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 121
column: 4
content: functionsetLockContract(address_lockAddress)externalonlyOwner{lockContract=LockedTokenManager(_lockAddress);}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 133
column: 4
content: functionsetPercentages(uint_burned,uint_locked,uint_transferLocked,uint_lockMonths)externalonlyOwner{require(_burned+_locked+_transferLocked<=100);percentageBurned=_burned;percentageLocked=_locked;percentageTransferredThenLocked=_transferLocked;lockMonths=_lockMonths;}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: >=

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 25
content: <

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 99
column: 4
content: functionmintAndSend(addresspayable

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 293
column: 4
content: functionmintAndSend(addresspayable

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 17
column: 4
content: addressowner;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 185
column: 4
content: uintconstantUID_MAX=0xFFFFFFFFFFFFFF;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 294
column: 25
content: (ehrtContractAddress,priceToMint);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 296
column: 8
content: aacContract.mintAndSend(_to);

SOLIDITY_VISIBILITY :6
SOLIDITY_OVERPOWERED_ROLE :2
SOLIDITY_PRAGMAS_VERSION :2
SOLIDITY_LOCKED_MONEY :1
SOLIDITY_ADDRESS_HARDCODED :2