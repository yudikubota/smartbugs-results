/unique_chucks/10/0xee52d73202bdd9d3a87c8ec001ad27c0d6502e33.sol
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 268
column: 4
content: owner=address(0)

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 430
column: 8
content: for(uinti=0;i<_starts.length-1;i++){require(externalCall(this,0,_callDatas,_starts[i],_starts[i+1]-_starts[i]));}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 663
column: 8
content: for(uinti=0;i<_exchanges.length;i++){bytesmemorydata=newbytes(_datasIndexes[i+1]-_datasIndexes[i]);for(uintj=_datasIndexes[i];j<_datasIndexes[i+1];j++){data[j-_datasIndexes[i]]=_datas[j];}if(_throughToken!=address(0)&&_values[i]==0){if(_throughToken.allowance(this,_exchanges[i])==0){_throughToken.asmApprove(_exchanges[i],uint256(-1));}require(_exchanges[i].call(data),"buy: exchange arbitrary call failed");}else{require(_exchanges[i].call.value(_values[i])(data),"buy: exchange arbitrary call failed");}}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 129
column: 4
content: functionisContract(addressaddr)internalviewreturns(boolresult){assembly{result:=gt(extcodesize(addr),0)}}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 136
column: 4
content: functionhandleReturnBool()internalpurereturns(boolresult){assembly{switchreturndatasize()case0{result:=1}case32{returndatacopy(0,0,32)result:=mload(0)}default{revert(0,0)}}}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 153
column: 4
content: functionhandleReturnBytes32()internalpurereturns(bytes32result){assembly{ifeq(returndatasize(),32){returndatacopy(0,0,32)result:=mload(0)}ifgt(returndatasize(),32){returndatacopy(0,64,32)result:=mload(0)}iflt(returndatasize(),32){revert(0,0)}}}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 405
column: 4
content: functionexternalCall(addressdestination,uintvalue,bytesdata,uintdataOffset,uintdataLength)internalreturns(boolresult){assembly{letx:=mload(0x40)letd:=add(data,32)result:=call(sub(gas,34710),destination,value,add(d,dataOffset),dataLength,x,0)}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 663
column: 8
content: for(uinti=0;i<_exchanges.length;i++){bytesmemorydata=newbytes(_datasIndexes[i+1]-_datasIndexes[i]);for(uintj=_datasIndexes[i];j<_datasIndexes[i+1];j++){data[j-_datasIndexes[i]]=_datas[j];}if(_throughToken!=address(0)&&_values[i]==0){if(_throughToken.allowance(this,_exchanges[i])==0){_throughToken.asmApprove(_exchanges[i],uint256(-1));}require(_exchanges[i].call(data),"buy: exchange arbitrary call failed");}else{require(_exchanges[i].call.value(_values[i])(data),"buy: exchange arbitrary call failed");}}

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 355
column: 0
content: contractIEtherTokenisERC20{functiondeposit()publicpayable;functionwithdraw(uint256_amount)public;}

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 361
column: 0
content: contractIBancorNetwork{functionconvert(address[]_path,uint256_amount,uint256_minReturn)publicpayablereturns(uint256);functionclaimAndConvert(address[]_path,uint256_amount,uint256_minReturn)publicpayablereturns(uint256);}

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 382
column: 0
content: contractIKyberNetworkProxy{functiontrade(addresssrc,uintsrcAmount,addressdest,addressdestAddress,uintmaxDestAmount,uintminConversionRate,addresswalletId)publicpayablereturns(uint);}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: ^

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 127
column: 4
content: usingSafeMathforuint;

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 399
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 136
column: 4
content: functionhandleReturnBool()internalpurereturns(boolresult){assembly{switchreturndatasize()case0{result:=1}case32{returndatacopy(0,0,32)result:=mload(0)}default{revert(0,0)}}}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 153
column: 4
content: functionhandleReturnBytes32()internalpurereturns(bytes32result){assembly{ifeq(returndatasize(),32){returndatacopy(0,0,32)result:=mload(0)}ifgt(returndatasize(),32){returndatacopy(0,64,32)result:=mload(0)}iflt(returndatasize(),32){revert(0,0)}}}

ruleId: SOLIDITY_SHOULD_NOT_BE_VIEW
patternId: 189abf
severity: 1
line: 129
column: 4
content: functionisContract(addressaddr)internalviewreturns(boolresult){assembly{result:=gt(extcodesize(addr),0)}}

ruleId: SOLIDITY_SHOULD_NOT_BE_VIEW
patternId: 189abf
severity: 1
line: 211
column: 4
content: functionasmName(address_token)internalviewreturns(bytes32){require(isContract(_token));require(_token.call(bytes4(keccak256("name()"))));returnhandleReturnBytes32();}

ruleId: SOLIDITY_SHOULD_NOT_BE_VIEW
patternId: 189abf
severity: 1
line: 218
column: 4
content: functionasmSymbol(address_token)internalviewreturns(bytes32){require(isContract(_token));require(_token.call(bytes4(keccak256("symbol()"))));returnhandleReturnBytes32();}

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 83k1no
severity: 1
line: 173
column: 23
content: call(bytes4(keccak256("transfer(address,uint256)")),_to,_value)

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 83k1no
severity: 1
line: 180
column: 23
content: call(bytes4(keccak256("transferFrom(address,address,uint256)")),_from,_to,_value)

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 83k1no
severity: 1
line: 187
column: 23
content: call(bytes4(keccak256("approve(address,uint256)")),_spender,_value)

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 48
column: 70
content: uint256[]_tokenAmounts

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 52
column: 64
content: ERC20[]_tokens

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 363
column: 8
content: address[]_path

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 372
column: 8
content: address[]_path

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 405
column: 59
content: bytesdata

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 425
column: 8
content: bytes_callDatas

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 426
column: 8
content: uint[]_starts

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 579
column: 8
content: bytes_callDatas

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 580
column: 8
content: uint[]_starts

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 616
column: 8
content: bytes_callDatas

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 617
column: 8
content: uint[]_starts

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 652
column: 8
content: address[]_exchanges

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 653
column: 8
content: bytes_datas

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 654
column: 8
content: uint[]_datasIndexes

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 655
column: 8
content: uint256[]_values

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 131
column: 8
content: assembly{result:=gt(extcodesize(addr),0)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 138
column: 8
content: assembly{switchreturndatasize()case0{result:=1}case32{returndatacopy(0,0,32)result:=mload(0)}default{revert(0,0)}}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 155
column: 8
content: assembly{ifeq(returndatasize(),32){returndatacopy(0,0,32)result:=mload(0)}ifgt(returndatasize(),32){returndatacopy(0,64,32)result:=mload(0)}iflt(returndatasize(),32){revert(0,0)}}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 407
column: 8
content: assembly{letx:=mload(0x40)letd:=add(data,32)result:=call(sub(gas,34710),destination,value,add(d,dataOffset),dataLength,x,0)}

SOLIDITY_SAFEMATH :2
SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_LOCKED_MONEY :3
SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN :4
SOLIDITY_EXTRA_GAS_IN_LOOPS :2
SOLIDITY_ADDRESS_HARDCODED :1
SOLIDITY_UPGRADE_TO_050 :18
SOLIDITY_GAS_LIMIT_IN_LOOPS :1
SOLIDITY_USING_INLINE_ASSEMBLY :4
SOLIDITY_SHOULD_NOT_BE_VIEW :3
SOLIDITY_SHOULD_NOT_BE_PURE :2