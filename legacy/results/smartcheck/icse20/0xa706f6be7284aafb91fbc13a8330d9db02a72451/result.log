/unique_chucks/19/0xa706f6be7284aafb91fbc13a8330d9db02a72451.sol
line 13:10 extraneous input 'payable' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 66:37 mismatched input 'payable' expecting {',', ')'}
line 66:53 no viable alternative at input 'newOwner)'
line 66:53 extraneous input ')' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 66:72 mismatched input '{' expecting {';', '='}
line 67:22 extraneous input '(' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 67:31 extraneous input ')' expecting {';', '='}
line 74:2 extraneous input 'function' expecting {<EOF>, 'pragma', 'import', 'contract', 'library', 'interface'}
line 130:16 extraneous input 'payable' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'length', 'balance', 'memory', 'storage', 'emit', '_', 'revert', Identifier}
line 171:30 mismatched input 'payable' expecting {',', ')'}
line 171:46 no viable alternative at input '_address,'
line 171:46 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 171:69 mismatched input ')' expecting {';', '='}
line 172:23 mismatched input '==' expecting ')'
line 172:32 mismatched input ')' expecting {';', '='}
line 173:15 extraneous input '(' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 173:31 mismatched input '>=' expecting {';', '='}
line 173:50 mismatched input ')' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 174:23 extraneous input '=' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 174:39 mismatched input '.' expecting {';', '='}
line 174:43 extraneous input '(' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 174:60 extraneous input ')' expecting {';', '='}
line 175:19 extraneous input '(' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 175:25 mismatched input '(' expecting {';', '='}
line 175:34 mismatched input ',' expecting ')'
line 175:52 mismatched input ')' expecting {';', '='}
line 176:23 mismatched input '(' expecting {';', '='}
line 176:32 mismatched input ',' expecting ')'
line 176:50 extraneous input ')' expecting {';', '='}
line 178:8 extraneous input 'else' expecting {<EOF>, 'pragma', 'import', 'contract', 'library', 'interface'}
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 59
column: 4
content: _owner=address(0)

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 12
column: 0
content: contractOwnable{addresspayablepublic_owner;eventOwnershipTransferred(addressindexedpreviousOwner,addressindexednewOwner);constructor()internal{_owner=tx.origin;emitOwnershipTransferred(address(0),_owner);}functionowner()publicviewreturns(address){return_owner;}modifieronlyOwner(){require(isOwner());_;}functionisOwner()publicviewreturns(bool){returnmsg.sender==_owner;}functionrenounceOwnership()publiconlyOwner{emitOwnershipTransferred(_owner,address(0));_owner=address(0);}functiontransferOwnership(addresspayablenewOwner)publiconlyOwner{_transferOwnership(newOwner);}

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 127
column: 0
content: contractPayeeShareisOwnable{structPayee{addresspayablepayee;uintpayeePercentage;}Payee[]publicpayees;stringpublicconstantcreatedBy="AssetSplit.org - the guys who cut the pizza";IERC20TokenpublictokenContract;boolprocessingPayout=false;uint256publicpayeePartsLeft=100;uint256publicpayeePartsToSell=0;uint256publicpayeePricePerPart=0;uint256publiclockedToken;uint256publiclockedTokenTime;uint256minTokenTransfer=1;usingSafeMathforuint256;eventTokenPayout(addressreceiver,uint256value,stringmemberOf);eventEtherPayout(addressreceiver,uint256value,stringmemberOf);eventPayeeAdded(addresspayee,uint256partsPerFull);eventLockedTokensUnlocked();constructor(address_tokenContract,uint256_lockedToken,uint256_lockedTokenTime)public{tokenContract=IERC20Token(_tokenContract);lockedToken=_lockedToken;lockedTokenTime=_lockedTokenTime;}functiongetPayeeLenght()publicviewreturns(uint256){returnpayees.length;}functiongetLockedToken()publicviewreturns(uint256){returnlockedToken;}functionaddPayee(addresspayable_address,uint_payeePercentage)publicpayable{if(msg.sender==_owner){require(payeePartsLeft>=_payeePercentage);payeePartsLeft=payeePartsLeft.sub(_payeePercentage);payees.push(Payee(_address,_payeePercentage));emitPayeeAdded(_address,_payeePercentage);}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: >

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 25
content: <

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 150
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_TX_ORIGIN
patternId: 12e802
severity: 2
line: 25
column: 13
content: tx.origin

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 66
column: 2
content: functiontransferOwnership(addresspayable

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 171
column: 4
content: functionaddPayee(addresspayable

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 67
column: 4
content: _transferOwnership(newOwner);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 140
column: 4
content: boolprocessingPayout=false;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 148
column: 4
content: uint256minTokenTransfer=1;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 171
column: 38
content: _address,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 171
column: 48
content: uint_payeePercentage)publicpayable{if

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 172
column: 11
content: (msg.sender==_owner){

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 173
column: 8
content: require(payeePartsLeft>=

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 173
column: 34
content: _payeePercentage);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 174
column: 8
content: payeePartsLeft=payeePartsLeft.

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 174
column: 40
content: sub(_payeePercentage);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 175
column: 8
content: payees.push(Payee

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 175
column: 25
content: (_address,_payeePercentage));

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 176
column: 8
content: emitPayeeAdded

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 176
column: 23
content: (_address,_payeePercentage);

SOLIDITY_VISIBILITY :16
SOLIDITY_SAFEMATH :1
SOLIDITY_PRAGMAS_VERSION :2
SOLIDITY_LOCKED_MONEY :2
SOLIDITY_ADDRESS_HARDCODED :1
SOLIDITY_TX_ORIGIN :1