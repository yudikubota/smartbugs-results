/unique_chucks/24/0xdf72825a01e3fdca0295cf31ceb9004c5a0c58da.sol
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: adc165
severity: 1
line: 862
column: 35
content: 0x8dd5fbce2f6a956c3022ba3663759011dd51e73e

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 170
column: 4
content: pendingOwner=address(0)

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: c67a09
severity: 1
line: 180
column: 15
content: 0x0

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: c67a09
severity: 1
line: 695
column: 107
content: 0x0

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: c67a09
severity: 1
line: 708
column: 87
content: 0x0

ruleId: SOLIDITY_DIV_MUL
patternId: 09hhh1
severity: 2
line: 910
column: 27
content: (block.timestamp.sub(lastTimeWithdraw[_address]).sub((block.timestamp.sub(lastTimeWithdraw[_address])).mod(1days))).mul(deposit[_address].div(30))

ruleId: SOLIDITY_DIV_MUL
patternId: 09hhh1
severity: 2
line: 959
column: 36
content: (block.timestamp.sub(lastTimeWithdraw[msg.sender]).sub((block.timestamp.sub(lastTimeWithdraw[msg.sender])).mod(1days))).mul(deposit[msg.sender].div(30))

ruleId: SOLIDITY_DIV_MUL
patternId: 09hhh1
severity: 2
line: 998
column: 32
content: (block.timestamp.sub(lastTimeWithdraw[msg.sender]).sub((block.timestamp.sub(lastTimeWithdraw[msg.sender])).mod(1days))).mul(deposit[msg.sender].div(30))

ruleId: SOLIDITY_ERC20_APPROVE
patternId: af782c
severity: 2
line: 426
column: 2
content: functionapprove(address_spender,uint256_value)publicreturns(bool){approveAllArgs(_spender,_value,msg.sender);returntrue;}

ruleId: SOLIDITY_ERC20_APPROVE
patternId: af782c
severity: 2
line: 531
column: 4
content: functionapprove(addressspender,uint256value)publicreturns(bool){if(delegate==address(0)){returnsuper.approve(spender,value);}else{returndelegate.delegateApprove(spender,value,msg.sender);}}

ruleId: SOLIDITY_ERC20_APPROVE
patternId: af782c
severity: 2
line: 633
column: 2
content: functionapprove(address_spender,uint256_value)publicwhenNotPausedreturns(bool){returnsuper.approve(_spender,_value);}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 267
column: 4
content: functionsetAllowance(addresstokenHolder,addressspender,uint256value)publiconlyOwner{allowanceOf[tokenHolder][spender]=value;}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 285
column: 4
content: functionsetBalance(addressaddr,uint256value)publiconlyOwner{balanceOf[addr]=value;}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 304
column: 2
content: functionsetBalanceSheet(addresssheet)externalonlyOwner{balances=BalanceSheet(sheet);balances.claimOwnership();}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 393
column: 2
content: functionsetAllowanceSheet(addresssheet)externalonlyOwner{allowances=AllowanceSheet(sheet);allowances.claimOwnership();}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 580
column: 4
content: functionsetDelegatedFrom(addressaddr)onlyOwnerpublic{delegatedFrom=addr;}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 677
column: 4
content: functionsetLists(AddressList_canReceiveMintWhiteList,AddressList_canBurnWhiteList,AddressList_blackList,AddressList_noFeesList)onlyOwnerpublic{canReceiveMintWhiteList=_canReceiveMintWhiteList;canBurnWhiteList=_canBurnWhiteList;blackList=_blackList;noFeesList=_noFeesList;}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: ^

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 866
column: 9
content: private

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 1001
column: 8
content: if(amountToWithdraw==0){revert();}

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 255
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 273
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 298
column: 2
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SEND
patternId: 430636
severity: 1
line: 230
column: 17
content: send(this.balance)

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 178
column: 25
content: string_name

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 684
column: 24
content: string_name

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 684
column: 38
content: string_symbol

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 302
column: 2
content: uint256totalSupply_;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 858
column: 4
content: addressowner;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 870
column: 4
content: mapping(address=>uint)deposit;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 874
column: 4
content: mapping(address=>uint)withdrawn;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 878
column: 4
content: mapping(address=>uint)lastTimeWithdraw;

SOLIDITY_VISIBILITY :5
SOLIDITY_SAFEMATH :3
SOLIDITY_OVERPOWERED_ROLE :6
SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_REVERT_REQUIRE :1
SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA :1
SOLIDITY_SEND :1
SOLIDITY_ADDRESS_HARDCODED :5
SOLIDITY_UPGRADE_TO_050 :3
SOLIDITY_DIV_MUL :3
SOLIDITY_ERC20_APPROVE :3