/unique_chucks/6/0xdee34cd48d77183b3e70f4f9ea2718c89bfefeb4.sol
line 527:40 extraneous input '_signature' expecting {',', ')'}
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 54
column: 8
content: _owner=address(0)

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 413
column: 19
content: (address(0))

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 433
column: 19
content: (address(0))

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 453
column: 0
content: contractMCHPrimeisOperatorRole,DJTBase{uint128publicprimeFee;uint256publicprimeTerm;uint256publicallowedUpdateBuffer;mapping(address=>uint256)publicaddressToExpiredAt;addresspublicvalidater;eventPrimeFeeUpdated(uint128PrimeFeeUpdated);eventPrimeTermAdded(addressuser,uint256expiredAt,uint256at);eventPrimeTermUpdated(uint256primeTerm);eventAllowedUpdateBufferUpdated(uint256allowedUpdateBuffer);eventExpiredAtUpdated(addressuser,uint256expiredAt,uint256at);constructor()public{primeFee=0.1ether;primeTerm=30days;allowedUpdateBuffer=5days;}functionsetValidater(address_varidater)externalonlyOwner(){validater=_varidater;}functionupdatePrimeFee(uint128_newPrimeFee)externalonlyOwner(){primeFee=_newPrimeFee;emitPrimeFeeUpdated(primeFee);}functionupdatePrimeTerm(uint256_newPrimeTerm)externalonlyOwner(){primeTerm=_newPrimeTerm;emitPrimeTermUpdated(primeTerm);}functionupdateAllowedUpdateBuffer(uint256_newAllowedUpdateBuffer)externalonlyOwner(){allowedUpdateBuffer=_newAllowedUpdateBuffer;emitAllowedUpdateBufferUpdated(allowedUpdateBuffer);}functionupdateExpiredAt(address_user,uint256_expiredAt)externalonlyOperator(){addressToExpiredAt[_user]=_expiredAt;emitExpiredAtUpdated(_user,_expiredAt,block.timestamp);}functionbuyPrimeRights(bytescalldata_signature)externalwhenNotPaused()payable{require(msg.value==primeFee,"not enough eth");require(canUpdateNow(msg.sender),"unable to update");require(validateSig(_signature,bytes32(uint256(msg.sender))),"invalid signature");uint256_now=block.timestamp;uint256expiredAt=addressToExpiredAt[msg.sender];if(expiredAt<=_now){addressToExpiredAt[msg.sender]=_now.add(primeTerm);}elseif(expiredAt<=_now.add(allowedUpdateBuffer)){addressToExpiredAt[msg.sender]=expiredAt.add(primeTerm);}emitPrimeTermAdded(msg.sender,addressToExpiredAt[msg.sender],_now);}functioncanUpdateNow(address_user)publicviewreturns(bool){uint256_now=block.timestamp;uint256expiredAt=addressToExpiredAt[_user];if(expiredAt<=_now){returntrue;}if(expiredAt<=_now.add(allowedUpdateBuffer)){returntrue;}returnfalse;}functionvalidateSig(bytesmemory_signature,bytes32_message)privateviewreturns(bool){require(validater!=address(0));addresssigner=ECDSA.recover(ECDSA.toEthSignedMessageHash(_message),_signature);return(signer==validater);}}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: ^

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 11
column: 12
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 161
column: 15
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 205
column: 9
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 327
column: 12
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 364
column: 15
content: private

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 353
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 406
column: 4
content: functionrecover(bytes32hash,bytesmemorysignature)internalpurereturns(address){bytes32r;bytes32s;uint8v;if(signature.length!=65){return(address(0));}assembly{r:=mload(add(signature,0x20))s:=mload(add(signature,0x40))v:=byte(0,mload(add(signature,0x60)))}if(v<27){v+=27;}if(v!=27&&v!=28){return(address(0));}else{returnecrecover(hash,v,r,s);}}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 420
column: 8
content: assembly{r:=mload(add(signature,0x20))s:=mload(add(signature,0x40))v:=byte(0,mload(add(signature,0x60)))}

SOLIDITY_SAFEMATH :1
SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_LOCKED_MONEY :1
SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA :5
SOLIDITY_ADDRESS_HARDCODED :3
SOLIDITY_USING_INLINE_ASSEMBLY :1
SOLIDITY_SHOULD_NOT_BE_PURE :1