/unique_chucks/24/0x4c44d51cf0d35172fce9d69e2beac728de980e9d.sol
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 720
column: 4
content: addresspubliclrcTokenAddress=address(0);

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 721
column: 4
content: addresspublictokenRegistryAddress=address(0);

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 722
column: 4
content: addresspublicringhashRegistryAddress=address(0);

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 723
column: 4
content: addresspublicdelegateAddress=address(0);

ruleId: SOLIDITY_ARRAY_LENGTH_MANIPULATION
patternId: 872bdd
severity: 1
line: 299
column: 16
content: tokens.length--

ruleId: SOLIDITY_ARRAY_LENGTH_MANIPULATION
patternId: 872bdd
severity: 1
line: 410
column: 16
content: versions.length-=1

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 25
column: 2
content: functionmul(uint256a,uint256b)internalconstantreturns(uint256){uint256c=a*b;assert(a==0||c/a==b);returnc;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 31
column: 2
content: functiondiv(uint256a,uint256b)internalconstantreturns(uint256){uint256c=a/b;returnc;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 38
column: 2
content: functionsub(uint256a,uint256b)internalconstantreturns(uint256){assert(b<=a);returna-b;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 43
column: 2
content: functionadd(uint256a,uint256b)internalconstantreturns(uint256){uint256c=a+b;assert(c>=a);returnc;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 56
column: 2
content: functionmax64(uint64a,uint64b)internalconstantreturns(uint64){returna>=b?a:b;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 60
column: 2
content: functionmin64(uint64a,uint64b)internalconstantreturns(uint64){returna<b?a:b;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 64
column: 2
content: functionmax256(uint256a,uint256b)internalconstantreturns(uint256){returna>=b?a:b;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 68
column: 2
content: functionmin256(uint256a,uint256b)internalconstantreturns(uint256){returna<b?a:b;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 80
column: 2
content: functionbalanceOf(addresswho)constantreturns(uint256);

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 90
column: 2
content: functionallowance(addressowner,addressspender)constantreturns(uint256);

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 140
column: 4
content: functiontolerantSub(uintx,uinty)internalconstantreturns(uintz){if(x>=y)z=x-y;elsez=0;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 147
column: 4
content: functionnext(uinti,uintsize)internalconstantreturns(uint){return(i+1)%size;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 151
column: 4
content: functionprev(uinti,uintsize)internalconstantreturns(uint){return(i+size-1)%size;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 157
column: 4
content: functioncvsquare(uint[]arr,uintscale)internalconstantreturns(uint){uintlen=arr.length;require(len>1);require(scale>0);uintavg=0;for(uinti=0;i<len;i++){avg+=arr[i];}avg=avg.div(len);if(avg==0){return0;}uintcvs=0;for(i=0;i<len;i++){uintsub=0;if(arr[i]>avg){sub=arr[i]-avg;}else{sub=avg-arr[i];}cvs+=sub.mul(sub);}returncvs.mul(scale).div(avg).mul(scale).div(avg).div(len-1);}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 198
column: 4
content: functionxorReduce(uint8[]arr,uintlen)internalconstantreturns(uint8res){res=arr[0];for(uinti=1;i<len;i++){res^=arr[i];}}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 220
column: 4
content: functioncheck(boolcondition,stringmessage)internalconstant{if(!condition){error(message);}}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 226
column: 4
content: functionerror(stringmessage)internalconstant{Error(message);revert();}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 237
column: 4
content: functionxorReduce(bytes32[]arr,uintlen)internalconstantreturns(bytes32res){res=arr[0];for(uinti=1;i<len;i++){res=xorOp(res,arr[i]);}}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 251
column: 4
content: functionxorOp(bytes32bs1,bytes32bs2)internalconstantreturns(bytes32res){bytesmemorytemp=newbytes(32);for(uinti=0;i<32;i++){temp[i]=bs1[i]^bs2[i];}stringmemorystr=string(temp);assembly{res:=mload(add(str,32))}}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 305
column: 4
content: functionisTokenRegisteredBySymbol(stringsymbol)publicconstantreturns(bool){returntokenSymbolMap[symbol]!=address(0);}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 313
column: 4
content: functionisTokenRegistered(address_token)publicconstantreturns(bool){for(uinti=0;i<tokens.length;i++){if(tokens[i]==_token){returntrue;}}returnfalse;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 327
column: 4
content: functiongetAddressBySymbol(stringsymbol)publicconstantreturns(address){returntokenSymbolMap[symbol];}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 420
column: 4
content: functiongetSpendable(addresstokenAddress,address_owner)isVersioned(msg.sender)constantreturns(uint){vartoken=ERC20(tokenAddress);returntoken.allowance(_owner,address(this)).min256(token.balanceOf(_owner));}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 461
column: 4
content: functiongetVersions()constantreturns(address[]){returnversions;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 529
column: 4
content: functioncanSubmit(bytes32ringhash,addressringminer)publicconstantreturns(bool){varsubmission=submissions[ringhash];return(submission.ringminer==address(0)||(submission.block+blocksToLive<block.number)||(submission.ringminer==ringminer));}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 545
column: 4
content: functionringhashFound(bytes32ringhash)publicconstantreturns(bool){returnsubmissions[ringhash].ringminer!=address(0);}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 555
column: 4
content: functioncalculateRinghash(uintringSize,uint8[]vList,bytes32[]rList,bytes32[]sList)publicconstantreturns(bytes32){ErrorLib.check(ringSize==vList.length-1&&(ringSize==rList.length-1)&&(ringSize==sList.length-1),"invalid ring data");returnkeccak256(vList.xorReduce(ringSize),rList.xorReduce(ringSize),sList.xorReduce(ringSize));}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 1091
column: 4
content: functionverifyRingHasNoSubRing(Ringring)internalconstant{uintringSize=ring.orders.length;for(uinti=0;i<ringSize-1;i++){addresstokenS=ring.orders[i].order.tokenS;for(uintj=i+1;j<ringSize;j++){ErrorLib.check(tokenS!=ring.orders[j].order.tokenS,"found sub-ring");}}}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 1108
column: 4
content: functionverifyTokensRegistered(address[2][]addressList)internalconstant{varregistryContract=TokenRegistry(tokenRegistryAddress);for(uinti=0;i<addressList.length;i++){ErrorLib.check(registryContract.isTokenRegistered(addressList[i][1]),"token not registered");}}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 1249
column: 4
content: functionverifyMinerSuppliedFillRates(Ringring)internalconstant{varorders=ring.orders;uintringSize=orders.length;uint[]memoryrateRatios=newuint[](ringSize);for(uinti=0;i<ringSize;i++){uints1b0=orders[i].rate.amountS.mul(orders[i].order.amountB);uints0b1=orders[i].order.amountS.mul(orders[i].rate.amountB);ErrorLib.check(s1b0<=s0b1,"miner supplied exchange rate provides invalid discount");rateRatios[i]=RATE_RATIO_SCALE.mul(s1b0).div(s0b1);}uintcvs=UintLib.cvsquare(rateRatios,RATE_RATIO_SCALE);ErrorLib.check(cvs<=rateRatioCVSThreshold,"miner supplied exchange rate is not evenly discounted");}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 1277
column: 4
content: functioncalculateRingFees(Ringring)internalconstant{uintminerLrcSpendable=getLRCSpendable(ring.feeRecepient);uintringSize=ring.orders.length;for(uinti=0;i<ringSize;i++){varstate=ring.orders[i];varnext=ring.orders[i.next(ringSize)];if(state.feeSelection==FEE_SELECT_LRC){uintlrcSpendable=getLRCSpendable(state.order.owner);if(lrcSpendable<state.lrcFee){ErrorLib.check(!ring.throwIfLRCIsInsuffcient,"order LRC balance insuffcient");state.lrcFee=lrcSpendable;minerLrcSpendable+=lrcSpendable;}}elseif(state.feeSelection==FEE_SELECT_MARGIN_SPLIT){if(minerLrcSpendable>=state.lrcFee){if(state.order.buyNoMoreThanAmountB){uintsplitS=next.fillAmountS.mul(state.order.amountS).div(state.order.amountB).sub(state.fillAmountS);state.splitS=splitS.mul(state.order.marginSplitPercentage).div(MARGIN_SPLIT_PERCENTAGE_BASE);}else{uintsplitB=next.fillAmountS.sub(state.fillAmountS.mul(state.order.amountB).div(state.order.amountS));state.splitB=splitB.mul(state.order.marginSplitPercentage).div(MARGIN_SPLIT_PERCENTAGE_BASE);}if(state.splitS>0||state.splitB>0){minerLrcSpendable=minerLrcSpendable.sub(state.lrcFee);state.lrcReward=state.lrcFee;}state.lrcFee=0;}}else{ErrorLib.error("unsupported fee selection value");}}}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 1347
column: 4
content: functioncalculateRingFillAmount(Ringring)internalconstant{uintringSize=ring.orders.length;uintsmallestIdx=0;uinti;uintj;for(i=0;i<ringSize;i++){j=i.next(ringSize);uintres=calculateOrderFillAmount(ring.orders[i],ring.orders[j]);if(res==1){smallestIdx=i;}elseif(res==2){smallestIdx=j;}}for(i=0;i<smallestIdx;i++){j=i.next(ringSize);calculateOrderFillAmount(ring.orders[i],ring.orders[j]);}}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 1383
column: 4
content: functioncalculateOrderFillAmount(OrderStatestate,OrderStatenext)internalconstantreturns(uintwhichIsSmaller){uintfillAmountB=state.fillAmountS.mul(state.rate.amountB).div(state.rate.amountS);if(state.order.buyNoMoreThanAmountB){if(fillAmountB>state.order.amountB){fillAmountB=state.order.amountB;state.fillAmountS=fillAmountB.mul(state.rate.amountS).div(state.rate.amountB);whichIsSmaller=1;}}state.lrcFee=state.order.lrcFee.mul(state.fillAmountS).div(state.order.amountS);if(fillAmountB<=next.fillAmountS){next.fillAmountS=fillAmountB;}else{whichIsSmaller=2;}}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 1426
column: 4
content: functionscaleRingBasedOnHistoricalRecords(Ringring)internalconstant{uintringSize=ring.orders.length;for(uinti=0;i<ringSize;i++){varstate=ring.orders[i];varorder=state.order;if(order.buyNoMoreThanAmountB){uintamountB=order.amountB.sub(filled[state.orderHash]).tolerantSub(cancelled[state.orderHash]);order.amountS=amountB.mul(order.amountS).div(order.amountB);order.lrcFee=amountB.mul(order.lrcFee).div(order.amountB);order.amountB=amountB;}else{uintamountS=order.amountS.sub(filled[state.orderHash]).tolerantSub(cancelled[state.orderHash]);order.amountB=amountS.mul(order.amountB).div(order.amountS);order.lrcFee=amountS.mul(order.lrcFee).div(order.amountS);order.amountS=amountS;}ErrorLib.check(order.amountS>0,"amountS is zero");ErrorLib.check(order.amountB>0,"amountB is zero");state.fillAmountS=order.amountS.min256(state.availableAmountS);}}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 1468
column: 4
content: functiongetSpendable(addresstokenAddress,addresstokenOwner)internalconstantreturns(uint){returnTokenTransferDelegate(delegateAddress).getSpendable(tokenAddress,tokenOwner);}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 1485
column: 4
content: functiongetLRCSpendable(addresstokenOwner)internalconstantreturns(uint){returngetSpendable(lrcTokenAddress,tokenOwner);}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 1494
column: 4
content: functionverifyInputDataIntegrity(uintringSize,address[2][]addressList,uint[7][]uintArgsList,uint8[2][]uint8ArgsList,bool[]buyNoMoreThanAmountBList,uint8[]vList,bytes32[]rList,bytes32[]sList)internalconstant{ErrorLib.check(ringSize==addressList.length,"ring data is inconsistent - addressList");ErrorLib.check(ringSize==uintArgsList.length,"ring data is inconsistent - uintArgsList");ErrorLib.check(ringSize==uint8ArgsList.length,"ring data is inconsistent - uint8ArgsList");ErrorLib.check(ringSize==buyNoMoreThanAmountBList.length,"ring data is inconsistent - buyNoMoreThanAmountBList");ErrorLib.check(ringSize+1==vList.length,"ring data is inconsistent - vList");ErrorLib.check(ringSize+1==rList.length,"ring data is inconsistent - rList");ErrorLib.check(ringSize+1==sList.length,"ring data is inconsistent - sList");for(uinti=0;i<ringSize;i++){ErrorLib.check(uintArgsList[i][6]>0,"order rateAmountS is zero");ErrorLib.check(uint8ArgsList[i][1]<=FEE_SELECT_MAX_VALUE,"invalid order fee selection");}}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 1558
column: 4
content: functionassembleOrders(uintringSize,address[2][]addressList,uint[7][]uintArgsList,uint8[2][]uint8ArgsList,bool[]buyNoMoreThanAmountBList,uint8[]vList,bytes32[]rList,bytes32[]sList)internalconstantreturns(OrderState[]){varorders=newOrderState[](ringSize);for(uinti=0;i<ringSize;i++){uintj=i.next(ringSize);varorder=Order(addressList[i][0],addressList[i][1],addressList[j][1],uintArgsList[i][0],uintArgsList[i][1],uintArgsList[i][2],uintArgsList[i][3],uintArgsList[i][4],uintArgsList[i][5],buyNoMoreThanAmountBList[i],uint8ArgsList[i][0],vList[i],rList[i],sList[i]);bytes32orderHash=calculateOrderHash(order);verifySignature(order.owner,orderHash,order.v,order.r,order.s);validateOrder(order);orders[i]=OrderState(order,orderHash,uint8ArgsList[i][1],Rate(uintArgsList[i][6],order.amountB),getSpendable(order.tokenS,order.owner),0,0,0,0,0);ErrorLib.check(orders[i].availableAmountS>0,"order spendable amountS is zero");}returnorders;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 1629
column: 4
content: functionvalidateOrder(Orderorder)internalconstant{ErrorLib.check(order.owner!=address(0),"invalid order owner");ErrorLib.check(order.tokenS!=address(0),"invalid order tokenS");ErrorLib.check(order.tokenB!=address(0),"invalid order tokenB");ErrorLib.check(order.amountS>0,"invalid order amountS");ErrorLib.check(order.amountB>0,"invalid order amountB");ErrorLib.check(order.timestamp<=block.timestamp,"order is too early to match");ErrorLib.check(order.timestamp>cutoffs[order.owner],"order is cut off");ErrorLib.check(order.ttl>0,"order ttl is 0");ErrorLib.check(order.timestamp+order.ttl>block.timestamp,"order is expired");ErrorLib.check(order.salt>0,"invalid order salt");ErrorLib.check(order.marginSplitPercentage<=MARGIN_SPLIT_PERCENTAGE_BASE,"invalid order marginSplitPercentage");}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 1690
column: 4
content: functioncalculateOrderHash(Orderorder)internalconstantreturns(bytes32){returnkeccak256(address(this),order.owner,order.tokenS,order.tokenB,order.amountS,order.amountB,order.timestamp,order.ttl,order.salt,order.lrcFee,order.buyNoMoreThanAmountB,order.marginSplitPercentage);}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 1712
column: 4
content: functionverifySignature(addresssigner,bytes32hash,uint8v,bytes32r,bytes32s)internalconstant{addressaddr=ecrecover(keccak256("\x19Ethereum Signed Message:\n32",hash),v,r,s);ErrorLib.check(signer==addr,"invalid signature");}

ruleId: SOLIDITY_DIV_MUL
patternId: 09hhh1
severity: 2
line: 190
column: 15
content: cvs.mul(scale).div(avg).mul(scale)

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 296
column: 8
content: for(uinti=0;i<tokens.length;i++){if(tokens[i]==_token){tokens[i]==tokens[tokens.length-1];tokens.length--;break;}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 319
column: 8
content: for(uinti=0;i<tokens.length;i++){if(tokens[i]==_token){returntrue;}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 1113
column: 8
content: for(uinti=0;i<addressList.length;i++){ErrorLib.check(registryContract.isTokenRegistered(addressList[i][1]),"token not registered");}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 251
column: 4
content: functionxorOp(bytes32bs1,bytes32bs2)internalconstantreturns(bytes32res){bytesmemorytemp=newbytes(32);for(uinti=0;i<32;i++){temp[i]=bs1[i]^bs2[i];}stringmemorystr=string(temp);assembly{res:=mload(add(str,32))}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 169
column: 8
content: for(uinti=0;i<len;i++){avg+=arr[i];}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 180
column: 8
content: for(i=0;i<len;i++){uintsub=0;if(arr[i]>avg){sub=arr[i]-avg;}else{sub=avg-arr[i];}cvs+=sub.mul(sub);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 296
column: 8
content: for(uinti=0;i<tokens.length;i++){if(tokens[i]==_token){tokens[i]==tokens[tokens.length-1];tokens.length--;break;}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 319
column: 8
content: for(uinti=0;i<tokens.length;i++){if(tokens[i]==_token){returntrue;}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 407
column: 8
content: for(uinti=0;i<length;i++){if(versions[i]==addr){versions[i]=versions[length-1];versions.length-=1;break;}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 1113
column: 8
content: for(uinti=0;i<addressList.length;i++){ErrorLib.check(registryContract.isTokenRegistered(addressList[i][1]),"token not registered");}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 1182
column: 8
content: for(uinti=0;i<ringSize;i++){varstate=ring.orders[i];varprev=ring.orders[i.prev(ringSize)];varnext=ring.orders[i.next(ringSize)];delegate.transferToken(state.order.tokenS,state.order.owner,prev.order.owner,state.fillAmountS-prev.splitB);if(prev.splitB+state.splitS>0){delegate.transferToken(state.order.tokenS,state.order.owner,ring.feeRecepient,prev.splitB+state.splitS);}if(state.lrcReward>0){delegate.transferToken(lrcTokenAddress,ring.feeRecepient,state.order.owner,state.lrcReward);}if(state.lrcFee>0){delegate.transferToken(lrcTokenAddress,state.order.owner,ring.feeRecepient,state.lrcFee);}if(state.order.buyNoMoreThanAmountB){filled[state.orderHash]+=next.fillAmountS;}else{filled[state.orderHash]+=state.fillAmountS;}OrderFilled(ringIndex,block.timestamp,block.number,ring.ringhash,prev.orderHash,state.orderHash,next.orderHash,state.fillAmountS+state.splitS,next.fillAmountS-state.splitB,state.lrcReward,state.lrcFee);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 1257
column: 8
content: for(uinti=0;i<ringSize;i++){uints1b0=orders[i].rate.amountS.mul(orders[i].order.amountB);uints0b1=orders[i].order.amountS.mul(orders[i].rate.amountB);ErrorLib.check(s1b0<=s0b1,"miner supplied exchange rate provides invalid discount");rateRatios[i]=RATE_RATIO_SCALE.mul(s1b0).div(s0b1);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 1284
column: 8
content: for(uinti=0;i<ringSize;i++){varstate=ring.orders[i];varnext=ring.orders[i.next(ringSize)];if(state.feeSelection==FEE_SELECT_LRC){uintlrcSpendable=getLRCSpendable(state.order.owner);if(lrcSpendable<state.lrcFee){ErrorLib.check(!ring.throwIfLRCIsInsuffcient,"order LRC balance insuffcient");state.lrcFee=lrcSpendable;minerLrcSpendable+=lrcSpendable;}}elseif(state.feeSelection==FEE_SELECT_MARGIN_SPLIT){if(minerLrcSpendable>=state.lrcFee){if(state.order.buyNoMoreThanAmountB){uintsplitS=next.fillAmountS.mul(state.order.amountS).div(state.order.amountB).sub(state.fillAmountS);state.splitS=splitS.mul(state.order.marginSplitPercentage).div(MARGIN_SPLIT_PERCENTAGE_BASE);}else{uintsplitB=next.fillAmountS.sub(state.fillAmountS.mul(state.order.amountB).div(state.order.amountS));state.splitB=splitB.mul(state.order.marginSplitPercentage).div(MARGIN_SPLIT_PERCENTAGE_BASE);}if(state.splitS>0||state.splitB>0){minerLrcSpendable=minerLrcSpendable.sub(state.lrcFee);state.lrcReward=state.lrcFee;}state.lrcFee=0;}}else{ErrorLib.error("unsupported fee selection value");}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 1356
column: 8
content: for(i=0;i<ringSize;i++){j=i.next(ringSize);uintres=calculateOrderFillAmount(ring.orders[i],ring.orders[j]);if(res==1){smallestIdx=i;}elseif(res==2){smallestIdx=j;}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 1432
column: 8
content: for(uinti=0;i<ringSize;i++){varstate=ring.orders[i];varorder=state.order;if(order.buyNoMoreThanAmountB){uintamountB=order.amountB.sub(filled[state.orderHash]).tolerantSub(cancelled[state.orderHash]);order.amountS=amountB.mul(order.amountS).div(order.amountB);order.lrcFee=amountB.mul(order.lrcFee).div(order.amountB);order.amountB=amountB;}else{uintamountS=order.amountS.sub(filled[state.orderHash]).tolerantSub(cancelled[state.orderHash]);order.amountB=amountS.mul(order.amountB).div(order.amountS);order.lrcFee=amountS.mul(order.lrcFee).div(order.amountS);order.amountS=amountS;}ErrorLib.check(order.amountS>0,"amountS is zero");ErrorLib.check(order.amountB>0,"amountB is zero");state.fillAmountS=order.amountS.min256(state.availableAmountS);}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 18
column: 16
content: ^

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 727
column: 12
content: private

ruleId: SOLIDITY_REDUNDANT_FALLBACK_REJECT
patternId: b85a32
severity: 1
line: 872
column: 4
content: {revert();}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 358
column: 8
content: if(versioned[addr]==0){revert();}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 365
column: 8
content: if(versioned[addr]>0){revert();}

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 138
column: 4
content: usingSafeMathforuint;

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 713
column: 4
content: usingSafeMathforuint;

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 901eae
severity: 1
line: 571
column: 15
content: keccak256(vList.xorReduce(ringSize),rList.xorReduce(ringSize),sList.xorReduce(ringSize))

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 901eae
severity: 1
line: 1695
column: 15
content: keccak256(address(this),order.owner,order.tokenS,order.tokenB,order.amountS,order.amountB,order.timestamp,order.ttl,order.salt,order.lrcFee,order.buyNoMoreThanAmountB,order.marginSplitPercentage)

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 901eae
severity: 1
line: 1722
column: 12
content: keccak256("\x19Ethereum Signed Message:\n32",hash)

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 158
column: 8
content: uint[]arr

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 199
column: 8
content: uint8[]arr

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 220
column: 35
content: stringmessage

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 226
column: 19
content: stringmessage

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 238
column: 8
content: bytes32[]arr

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 279
column: 43
content: string_symbol

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 290
column: 45
content: string_symbol

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 305
column: 39
content: stringsymbol

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 327
column: 32
content: stringsymbol

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 508
column: 8
content: uint8[]vList

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 509
column: 8
content: bytes32[]rList

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 510
column: 8
content: bytes32[]sList

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 557
column: 8
content: uint8[]vList

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 558
column: 8
content: bytes32[]rList

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 559
column: 8
content: bytes32[]sList

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 668
column: 8
content: address[2][]addressList

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 669
column: 8
content: uint[7][]uintArgsList

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 670
column: 8
content: uint8[2][]uint8ArgsList

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 671
column: 8
content: bool[]buyNoMoreThanAmountBList

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 672
column: 8
content: uint8[]vList

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 673
column: 8
content: bytes32[]rList

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 674
column: 8
content: bytes32[]sList

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 906
column: 8
content: address[2][]addressList

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 907
column: 8
content: uint[7][]uintArgsList

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 908
column: 8
content: uint8[2][]uint8ArgsList

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 909
column: 8
content: bool[]buyNoMoreThanAmountBList

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 910
column: 8
content: uint8[]vList

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 911
column: 8
content: bytes32[]rList

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 912
column: 8
content: bytes32[]sList

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1091
column: 36
content: Ringring

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1108
column: 36
content: address[2][]addressList

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1123
column: 8
content: OrderState[]orders

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1176
column: 24
content: Ringring

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1249
column: 42
content: Ringring

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1277
column: 31
content: Ringring

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1347
column: 37
content: Ringring

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1384
column: 8
content: OrderStatestate

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1385
column: 8
content: OrderStatenext

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1426
column: 47
content: Ringring

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1496
column: 8
content: address[2][]addressList

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1497
column: 8
content: uint[7][]uintArgsList

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1498
column: 8
content: uint8[2][]uint8ArgsList

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1499
column: 8
content: bool[]buyNoMoreThanAmountBList

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1500
column: 8
content: uint8[]vList

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1501
column: 8
content: bytes32[]rList

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1502
column: 8
content: bytes32[]sList

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1560
column: 8
content: address[2][]addressList

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1561
column: 8
content: uint[7][]uintArgsList

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1562
column: 8
content: uint8[2][]uint8ArgsList

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1563
column: 8
content: bool[]buyNoMoreThanAmountBList

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1564
column: 8
content: uint8[]vList

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1565
column: 8
content: bytes32[]rList

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1566
column: 8
content: bytes32[]sList

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1570
column: 17
content: OrderState[]

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 264
column: 8
content: assembly{res:=mload(add(str,32))}

ruleId: SOLIDITY_VAR
patternId: d28aa7
severity: 2
line: 1019
column: 8
content: varorder=Order(addresses[0],addresses[1],addresses[2],orderValues[0],orderValues[1],orderValues[2],orderValues[3],orderValues[4],orderValues[5],buyNoMoreThanAmountB,marginSplitPercentage,v,r,s)

ruleId: SOLIDITY_VAR
patternId: d28aa7
severity: 2
line: 1577
column: 12
content: varorder=Order(addressList[i][0],addressList[i][1],addressList[j][1],uintArgsList[i][0],uintArgsList[i][1],uintArgsList[i][2],uintArgsList[i][3],uintArgsList[i][4],uintArgsList[i][5],buyNoMoreThanAmountBList[i],uint8ArgsList[i][0],vList[i],rList[i],sList[i])

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 80
column: 2
content: functionbalanceOf(addresswho)constantreturns(uint256);

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 81
column: 2
content: functiontransfer(addressto,uint256value)returns(bool);

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 90
column: 2
content: functionallowance(addressowner,addressspender)constantreturns(uint256);

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 91
column: 2
content: functiontransferFrom(addressfrom,addressto,uint256value)returns(bool);

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 92
column: 2
content: functionapprove(addressspender,uint256value)returns(bool);

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 108
column: 2
content: functionOwnable(){owner=msg.sender;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 126
column: 2
content: functiontransferOwnership(addressnewOwner)onlyOwner{if(newOwner!=address(0)){owner=newOwner;}}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 387
column: 4
content: functionaddVersion(addressaddr)onlyOwnernotVersioned(addr){versioned[addr]=++lastVersion;versions.push(addr);VersionAdded(addr,lastVersion);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 398
column: 4
content: functionremoveVersion(addressaddr)onlyOwnerisVersioned(addr){require(versioned[addr]>0);uintversion=versioned[addr];deleteversioned[addr];uintlength=versions.length;for(uinti=0;i<length;i++){if(versions[i]==addr){versions[i]=versions[length-1];versions.length-=1;break;}}VersionRemoved(addr,version);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 420
column: 4
content: functiongetSpendable(addresstokenAddress,address_owner)isVersioned(msg.sender)constantreturns(uint){vartoken=ERC20(tokenAddress);returntoken.allowance(_owner,address(this)).min256(token.balanceOf(_owner));}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 444
column: 4
content: functiontransferToken(addresstoken,addressfrom,addressto,uintvalue)isVersioned(msg.sender)returns(bool){if(from==to){returnfalse;}else{returnERC20(token).transferFrom(from,to,value);}}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 461
column: 4
content: functiongetVersions()constantreturns(address[]){returnversions;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 870
column: 4
content: function()payable{revert();}

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 277
column: 4
content: mapping(string=>address)tokenSymbolMap;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 348
column: 4
content: uintlastVersion=0;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 484
column: 4
content: mapping(bytes32=>Submission)submissions;

SOLIDITY_VISIBILITY :16
SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_ARRAY_LENGTH_MANIPULATION :2
SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN :1
SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA :1
SOLIDITY_EXTRA_GAS_IN_LOOPS :3
SOLIDITY_ADDRESS_HARDCODED :4
SOLIDITY_UPGRADE_TO_050 :57
SOLIDITY_GAS_LIMIT_IN_LOOPS :11
SOLIDITY_DIV_MUL :1
SOLIDITY_REDUNDANT_FALLBACK_REJECT :1
SOLIDITY_SAFEMATH :2
SOLIDITY_DEPRECATED_CONSTRUCTIONS :41
SOLIDITY_REVERT_REQUIRE :2
SOLIDITY_VAR :2
SOLIDITY_USING_INLINE_ASSEMBLY :1