{
  "contract": "0x8af4dfc5c55ef2d3bce511e4c14d631253533540",
  "tool": "smartcheck",
  "start": 1563553221.1364625,
  "end": 1563553231.4776156,
  "duration": 10.341153144836426,
  "analysis": [
    {
      "name": "SOLIDITY_DEPRECATED_CONSTRUCTIONS",
      "patternId": "28fa69",
      "severity": 1,
      "line": 27,
      "column": 4,
      "content": "functiontotalSupply()publicconstantreturns(uint);"
    },
    {
      "name": "SOLIDITY_DEPRECATED_CONSTRUCTIONS",
      "patternId": "28fa69",
      "severity": 1,
      "line": 29,
      "column": 4,
      "content": "functionbalanceOf(addresstokenOwner)publicconstantreturns(uintbalance);"
    },
    {
      "name": "SOLIDITY_DEPRECATED_CONSTRUCTIONS",
      "patternId": "28fa69",
      "severity": 1,
      "line": 31,
      "column": 4,
      "content": "functionallowance(addresstokenOwner,addressspender)publicconstantreturns(uintremaining);"
    },
    {
      "name": "SOLIDITY_EXTRA_GAS_IN_LOOPS",
      "patternId": "d3j11j",
      "severity": 1,
      "line": 263,
      "column": 8,
      "content": "for(uint16n=0;n<tokens_.length;n++){addresstoken=tokens_[n];require(token!=address(0));uinttokenAmount=tokens[token][msg.sender];if(tokenAmount==0){continue;}if(!ERC20(token).approve(newExchange,tokenAmount)){revert();}tokens[token][msg.sender]=0;newExchange.depositTokenForUser(token,tokenAmount,msg.sender);}"
    },
    {
      "name": "SOLIDITY_GAS_LIMIT_IN_LOOPS",
      "patternId": "f6f853",
      "severity": 2,
      "line": 263,
      "column": 8,
      "content": "for(uint16n=0;n<tokens_.length;n++){addresstoken=tokens_[n];require(token!=address(0));uinttokenAmount=tokens[token][msg.sender];if(tokenAmount==0){continue;}if(!ERC20(token).approve(newExchange,tokenAmount)){revert();}tokens[token][msg.sender]=0;newExchange.depositTokenForUser(token,tokenAmount,msg.sender);}"
    },
    {
      "name": "SOLIDITY_REDUNDANT_FALLBACK_REJECT",
      "patternId": "b85a32",
      "severity": 1,
      "line": 87,
      "column": 30,
      "content": "{revert(\"Cannot send ETH directly to the Contract\");}"
    },
    {
      "name": "SOLIDITY_REVERT_REQUIRE",
      "patternId": "c56b12",
      "severity": 1,
      "line": 101,
      "column": 8,
      "content": "if(feeMake_>feeMake)revert(\"New fee cannot be higher than the old one\");"
    },
    {
      "name": "SOLIDITY_REVERT_REQUIRE",
      "patternId": "c56b12",
      "severity": 1,
      "line": 106,
      "column": 8,
      "content": "if(feeTake_>feeTake)revert(\"New fee cannot be higher than the old one\");"
    },
    {
      "name": "SOLIDITY_REVERT_REQUIRE",
      "patternId": "c56b12",
      "severity": 1,
      "line": 121,
      "column": 8,
      "content": "if(tokens[0][msg.sender]<amount)revert(\"Cannot withdraw more than you have\");"
    },
    {
      "name": "SOLIDITY_REVERT_REQUIRE",
      "patternId": "c56b12",
      "severity": 1,
      "line": 130,
      "column": 8,
      "content": "if(token==0)revert(\"Cannot deposit ETH with depositToken method\");"
    },
    {
      "name": "SOLIDITY_REVERT_REQUIRE",
      "patternId": "c56b12",
      "severity": 1,
      "line": 131,
      "column": 8,
      "content": "if(!ERC20(token).transferFrom(msg.sender,this,amount))revert(\"You didn't call approve method on Token contract\");"
    },
    {
      "name": "SOLIDITY_REVERT_REQUIRE",
      "patternId": "c56b12",
      "severity": 1,
      "line": 137,
      "column": 8,
      "content": "if(token==0)revert(\"Cannot withdraw ETH with withdrawToken method\");"
    },
    {
      "name": "SOLIDITY_REVERT_REQUIRE",
      "patternId": "c56b12",
      "severity": 1,
      "line": 138,
      "column": 8,
      "content": "if(tokens[token][msg.sender]<amount)revert(\"Cannot withdraw more than you have\");"
    },
    {
      "name": "SOLIDITY_REVERT_REQUIRE",
      "patternId": "c56b12",
      "severity": 1,
      "line": 140,
      "column": 8,
      "content": "if(!ERC20(token).transfer(msg.sender,amount))revert(\"Error while transfering tokens\");"
    },
    {
      "name": "SOLIDITY_REVERT_REQUIRE",
      "patternId": "c56b12",
      "severity": 1,
      "line": 157,
      "column": 8,
      "content": "if(!((orders[user][hash]||ecrecover(keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\",hash)),v,r,s)==user)&&block.number<=expires&&SafeMath.add(orderFills[user][hash],amount)<=amountGet))revert(\"Validation error or order expired or not enough volume to trade\");"
    },
    {
      "name": "SOLIDITY_REVERT_REQUIRE",
      "patternId": "c56b12",
      "severity": 1,
      "line": 187,
      "column": 8,
      "content": "if(!(orders[msg.sender][hash]||ecrecover(keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\",hash)),v,r,s)==msg.sender))revert(\"Validation error\");"
    },
    {
      "name": "SOLIDITY_REVERT_REQUIRE",
      "patternId": "c56b12",
      "severity": 1,
      "line": 222,
      "column": 8,
      "content": "if(!ERC20(_token).transferFrom(msg.sender,this,_amount)){revert();}"
    },
    {
      "name": "SOLIDITY_REVERT_REQUIRE",
      "patternId": "c56b12",
      "severity": 1,
      "line": 243,
      "column": 12,
      "content": "if(nextContract_==address(this)){revert();}"
    },
    {
      "name": "SOLIDITY_REVERT_REQUIRE",
      "patternId": "c56b12",
      "severity": 1,
      "line": 271,
      "column": 12,
      "content": "if(!ERC20(token).approve(newExchange,tokenAmount)){revert();}"
    },
    {
      "name": "SOLIDITY_SAFEMATH",
      "patternId": "837cac",
      "severity": 1,
      "line": 44,
      "column": 4,
      "content": "usingSafeMathforuint;"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "91h3sa",
      "severity": 1,
      "line": 87,
      "column": 15,
      "content": "public"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 192,
      "column": 26,
      "content": "address[]tokens_"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 262,
      "column": 49,
      "content": "address[]tokens_"
    }
  ]
}