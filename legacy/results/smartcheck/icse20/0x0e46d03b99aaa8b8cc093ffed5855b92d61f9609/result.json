{
  "contract": "0x0e46d03b99aaa8b8cc093ffed5855b92d61f9609",
  "tool": "smartcheck",
  "start": 1563588915.100953,
  "end": 1563588922.7655916,
  "duration": 7.664638519287109,
  "analysis": [
    {
      "name": "SOLIDITY_ADDRESS_HARDCODED",
      "patternId": "c67a09",
      "severity": 1,
      "line": 31,
      "column": 34,
      "content": "0x0"
    },
    {
      "name": "SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN",
      "patternId": "58bdd3",
      "severity": 1,
      "line": 40,
      "column": 4,
      "content": "functionget(uint256entryId,uint32chunkIndex)publicviewreturns(bytesmemoryresult){require(entries[entryId].uploaded);address_addr=entries[entryId].data[chunkIndex];assembly{letsize:=extcodesize(_addr)result:=mload(0x40)mstore(0x40,add(result,and(add(add(size,0x20),0x1f),not(0x1f))))mstore(result,size)extcodecopy(_addr,add(result,0x20),0,size)}}"
    },
    {
      "name": "SOLIDITY_PRAGMAS_VERSION",
      "patternId": "23fc32",
      "severity": 1,
      "line": 1,
      "column": 16,
      "content": "^"
    },
    {
      "name": "SOLIDITY_SHOULD_NOT_BE_VIEW",
      "patternId": "189abf",
      "severity": 1,
      "line": 40,
      "column": 4,
      "content": "functionget(uint256entryId,uint32chunkIndex)publicviewreturns(bytesmemoryresult){require(entries[entryId].uploaded);address_addr=entries[entryId].data[chunkIndex];assembly{letsize:=extcodesize(_addr)result:=mload(0x40)mstore(0x40,add(result,and(add(add(size,0x20),0x1f),not(0x1f))))mstore(result,size)extcodecopy(_addr,add(result,0x20),0,size)}}"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 26,
      "column": 8,
      "content": "assembly{letlength:=mload(data)mstore(data,0x58600c8038038082843982f3)result:=create(0,add(data,20),add(12,length))}"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 43,
      "column": 8,
      "content": "assembly{letsize:=extcodesize(_addr)result:=mload(0x40)mstore(0x40,add(result,and(add(add(size,0x20),0x1f),not(0x1f))))mstore(result,size)extcodecopy(_addr,add(result,0x20),0,size)}"
    }
  ]
}