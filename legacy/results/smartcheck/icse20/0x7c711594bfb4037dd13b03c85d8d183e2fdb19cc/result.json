{
  "contract": "0x7c711594bfb4037dd13b03c85d8d183e2fdb19cc",
  "tool": "smartcheck",
  "start": 1563700737.7559946,
  "end": 1563700747.081258,
  "duration": 9.325263500213623,
  "analysis": [
    {
      "name": "SOLIDITY_EXTRA_GAS_IN_LOOPS",
      "patternId": "d3j11j",
      "severity": 1,
      "line": 487,
      "column": 8,
      "content": "for(uint256i=0;i<orderData0x.length/352;i++){assembly{maker:=mload(add(orderData0x,add(mul(i,352),32)))taker:=mload(add(orderData0x,add(mul(i,352),64)))makerToken:=mload(add(orderData0x,add(mul(i,352),96)))takerToken:=mload(add(orderData0x,add(mul(i,352),128)))feeRecipient:=mload(add(orderData0x,add(mul(i,352),160)))makerTokenAmount:=mload(add(orderData0x,add(mul(i,352),192)))takerTokenAmount:=mload(add(orderData0x,add(mul(i,352),224)))makerFee:=mload(add(orderData0x,add(mul(i,352),256)))takerFee:=mload(add(orderData0x,add(mul(i,352),288)))expirationTimestampInSec:=mload(add(orderData0x,add(mul(i,352),320)))salt:=mload(add(orderData0x,add(mul(i,352),352)))}orderAddresses[i]=[maker,taker,makerToken,takerToken,feeRecipient];orderValues[i]=[makerTokenAmount,takerTokenAmount,makerFee,takerFee,expirationTimestampInSec,salt];}"
    },
    {
      "name": "SOLIDITY_EXTRA_GAS_IN_LOOPS",
      "patternId": "d3j11j",
      "severity": 1,
      "line": 532,
      "column": 8,
      "content": "for(uint256i=0;i<signatures.length/65;i++){uint8v;bytes32r;bytes32s;assembly{r:=mload(add(signatures,add(mul(i,65),32)))s:=mload(add(signatures,add(mul(i,65),64)))v:=mload(add(signatures,add(mul(i,65),65)))}if(v<27){v=v+27;}vs[i]=v;rs[i]=r;ss[i]=s;}"
    },
    {
      "name": "SOLIDITY_EXTRA_GAS_IN_LOOPS",
      "patternId": "d3j11j",
      "severity": 1,
      "line": 602,
      "column": 8,
      "content": "for(uint256i=0;i<orderAddresses0x.length;i++){require(orderAddresses0x[i][2]==orderAddresses0x[0][2],\"makerToken must be the same for each order\");summations[0]=summations[0].add(orderValues0x[i][1]);summations[1]=summations[1].add(orderValues0x[i][0]);if(summations[3]>0&&orderAddresses0x[i][4]!=address(0)&&orderValues0x[i][3]>0){if(summations[3]>=orderValues0x[i][1]){summations[2]=summations[2].add(orderValues0x[i][3]);summations[3]=summations[3].sub(orderValues0x[i][1]);}else{summations[2]=summations[2].add(_safeGetPartialAmountFloor(summations[3],orderValues0x[i][1],orderValues0x[i][3]));summations[3]=0;}}}"
    },
    {
      "name": "SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN",
      "patternId": "58bdd3",
      "severity": 1,
      "line": 54,
      "column": 4,
      "content": "functioneip20Transfer(addresstoken,addressto,uint256value)internalreturns(boolresult){NonCompliantEIP20(token).transfer(to,value);assembly{switchreturndatasize()case0{result:=not(0)}case32{returndatacopy(0,0,32)result:=mload(0)}default{revert(0,0)}}require(result,\"eip20Transfer failed\");}"
    },
    {
      "name": "SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN",
      "patternId": "58bdd3",
      "severity": 1,
      "line": 80,
      "column": 4,
      "content": "functioneip20TransferFrom(addresstoken,addressfrom,addressto,uint256value)internalreturns(boolresult){NonCompliantEIP20(token).transferFrom(from,to,value);assembly{switchreturndatasize()case0{result:=not(0)}case32{returndatacopy(0,0,32)result:=mload(0)}default{revert(0,0)}}require(result,\"eip20TransferFrom failed\");}"
    },
    {
      "name": "SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN",
      "patternId": "58bdd3",
      "severity": 1,
      "line": 107,
      "column": 4,
      "content": "functioneip20Approve(addresstoken,addressspender,uint256value)internalreturns(boolresult){NonCompliantEIP20(token).approve(spender,value);assembly{switchreturndatasize()case0{result:=not(0)}case32{returndatacopy(0,0,32)result:=mload(0)}default{revert(0,0)}}require(result,\"eip20Approve failed\");}"
    },
    {
      "name": "SOLIDITY_GAS_LIMIT_IN_LOOPS",
      "patternId": "f6f853",
      "severity": 2,
      "line": 602,
      "column": 8,
      "content": "for(uint256i=0;i<orderAddresses0x.length;i++){require(orderAddresses0x[i][2]==orderAddresses0x[0][2],\"makerToken must be the same for each order\");summations[0]=summations[0].add(orderValues0x[i][1]);summations[1]=summations[1].add(orderValues0x[i][0]);if(summations[3]>0&&orderAddresses0x[i][4]!=address(0)&&orderValues0x[i][3]>0){if(summations[3]>=orderValues0x[i][1]){summations[2]=summations[2].add(orderValues0x[i][3]);summations[3]=summations[3].sub(orderValues0x[i][1]);}else{summations[2]=summations[2].add(_safeGetPartialAmountFloor(summations[3],orderValues0x[i][1],orderValues0x[i][3]));summations[3]=0;}}}"
    },
    {
      "name": "SOLIDITY_OVERPOWERED_ROLE",
      "patternId": "j83hf7",
      "severity": 2,
      "line": 550,
      "column": 4,
      "content": "functionset0xExchange(address_exchange)publiconlyOwner{exchangeContract=_exchange;}"
    },
    {
      "name": "SOLIDITY_OVERPOWERED_ROLE",
      "patternId": "j83hf7",
      "severity": 2,
      "line": 558,
      "column": 4,
      "content": "functionsetZRXToken(address_zrxToken)publiconlyOwner{zrxTokenContract=_zrxToken;}"
    },
    {
      "name": "SOLIDITY_OVERPOWERED_ROLE",
      "patternId": "j83hf7",
      "severity": 2,
      "line": 566,
      "column": 4,
      "content": "functionset0xTokenProxy(address_proxy)publiconlyOwner{tokenTransferProxyContract=_proxy;}"
    },
    {
      "name": "SOLIDITY_REDUNDANT_FALLBACK_REJECT",
      "patternId": "b85a32",
      "severity": 1,
      "line": 426,
      "column": 17,
      "content": "{revert();}"
    },
    {
      "name": "SOLIDITY_REVERT_REQUIRE",
      "patternId": "c56b12",
      "severity": 1,
      "line": 452,
      "column": 8,
      "content": "if(sourceTokenUsedAmount<sourceTokenAmountToUse){revert(\"BZxTo0x::take0xTrade: sourceTokenUsedAmount < sourceTokenAmountToUse\");}"
    },
    {
      "name": "SOLIDITY_SAFEMATH",
      "patternId": "837cac",
      "severity": 1,
      "line": 314,
      "column": 4,
      "content": "usingSafeMathforuint256;"
    },
    {
      "name": "SOLIDITY_SAFEMATH",
      "patternId": "837cac",
      "severity": 1,
      "line": 408,
      "column": 4,
      "content": "usingSafeMathforuint256;"
    },
    {
      "name": "SOLIDITY_SHOULD_NOT_BE_PURE",
      "patternId": "11314f",
      "severity": 1,
      "line": 466,
      "column": 4,
      "content": "functiongetOrderValuesFromData(bytesmemoryorderData0x)publicpurereturns(address[5][]memoryorderAddresses,uint256[6][]memoryorderValues){addressmaker;addresstaker;addressmakerToken;addresstakerToken;addressfeeRecipient;uint256makerTokenAmount;uint256takerTokenAmount;uint256makerFee;uint256takerFee;uint256expirationTimestampInSec;uint256salt;orderAddresses=newaddress[5][](orderData0x.length/352);orderValues=newuint256[6][](orderData0x.length/352);for(uint256i=0;i<orderData0x.length/352;i++){assembly{maker:=mload(add(orderData0x,add(mul(i,352),32)))taker:=mload(add(orderData0x,add(mul(i,352),64)))makerToken:=mload(add(orderData0x,add(mul(i,352),96)))takerToken:=mload(add(orderData0x,add(mul(i,352),128)))feeRecipient:=mload(add(orderData0x,add(mul(i,352),160)))makerTokenAmount:=mload(add(orderData0x,add(mul(i,352),192)))takerTokenAmount:=mload(add(orderData0x,add(mul(i,352),224)))makerFee:=mload(add(orderData0x,add(mul(i,352),256)))takerFee:=mload(add(orderData0x,add(mul(i,352),288)))expirationTimestampInSec:=mload(add(orderData0x,add(mul(i,352),320)))salt:=mload(add(orderData0x,add(mul(i,352),352)))}orderAddresses[i]=[maker,taker,makerToken,takerToken,feeRecipient];orderValues[i]=[makerTokenAmount,takerTokenAmount,makerFee,takerFee,expirationTimestampInSec,salt];}}"
    },
    {
      "name": "SOLIDITY_SHOULD_NOT_BE_PURE",
      "patternId": "11314f",
      "severity": 1,
      "line": 520,
      "column": 4,
      "content": "functiongetSignatureParts(bytesmemorysignatures)publicpurereturns(uint8[]memoryvs,bytes32[]memoryrs,bytes32[]memoryss){vs=newuint8[](signatures.length/65);rs=newbytes32[](signatures.length/65);ss=newbytes32[](signatures.length/65);for(uint256i=0;i<signatures.length/65;i++){uint8v;bytes32r;bytes32s;assembly{r:=mload(add(signatures,add(mul(i,65),32)))s:=mload(add(signatures,add(mul(i,65),64)))v:=mload(add(signatures,add(mul(i,65),65)))}if(v<27){v=v+27;}vs[i]=v;rs[i]=r;ss[i]=s;}}"
    },
    {
      "name": "SOLIDITY_SHOULD_RETURN_STRUCT",
      "patternId": "83hf3l",
      "severity": 1,
      "line": 438,
      "column": 16,
      "content": "(addressdestTokenAddress,uint256destTokenAmount,uint256sourceTokenUsedAmount)"
    },
    {
      "name": "SOLIDITY_SHOULD_RETURN_STRUCT",
      "patternId": "83hf3l",
      "severity": 1,
      "line": 470,
      "column": 16,
      "content": "(address[5][]memoryorderAddresses,uint256[6][]memoryorderValues)"
    },
    {
      "name": "SOLIDITY_SHOULD_RETURN_STRUCT",
      "patternId": "83hf3l",
      "severity": 1,
      "line": 524,
      "column": 16,
      "content": "(uint8[]memoryvs,bytes32[]memoryrs,bytes32[]memoryss)"
    },
    {
      "name": "SOLIDITY_SHOULD_RETURN_STRUCT",
      "patternId": "83hf3l",
      "severity": 1,
      "line": 597,
      "column": 16,
      "content": "(uint256sourceTokenUsedAmount,uint256destTokenAmount)"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 63,
      "column": 8,
      "content": "assembly{switchreturndatasize()case0{result:=not(0)}case32{returndatacopy(0,0,32)result:=mload(0)}default{revert(0,0)}}"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 90,
      "column": 8,
      "content": "assembly{switchreturndatasize()case0{result:=not(0)}case32{returndatacopy(0,0,32)result:=mload(0)}default{revert(0,0)}}"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 116,
      "column": 8,
      "content": "assembly{switchreturndatasize()case0{result:=not(0)}case32{returndatacopy(0,0,32)result:=mload(0)}default{revert(0,0)}}"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 488,
      "column": 12,
      "content": "assembly{maker:=mload(add(orderData0x,add(mul(i,352),32)))taker:=mload(add(orderData0x,add(mul(i,352),64)))makerToken:=mload(add(orderData0x,add(mul(i,352),96)))takerToken:=mload(add(orderData0x,add(mul(i,352),128)))feeRecipient:=mload(add(orderData0x,add(mul(i,352),160)))makerTokenAmount:=mload(add(orderData0x,add(mul(i,352),192)))takerTokenAmount:=mload(add(orderData0x,add(mul(i,352),224)))makerFee:=mload(add(orderData0x,add(mul(i,352),256)))takerFee:=mload(add(orderData0x,add(mul(i,352),288)))expirationTimestampInSec:=mload(add(orderData0x,add(mul(i,352),320)))salt:=mload(add(orderData0x,add(mul(i,352),352)))}"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 536,
      "column": 12,
      "content": "assembly{r:=mload(add(signatures,add(mul(i,65),32)))s:=mload(add(signatures,add(mul(i,65),64)))v:=mload(add(signatures,add(mul(i,65),65)))}"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": 910067,
      "severity": 1,
      "line": 280,
      "column": 4,
      "content": "functionfillOrder(address[5]calldataorderAddresses,uint256[6]calldata<missing ')'>"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": 910067,
      "severity": 1,
      "line": 291,
      "column": 4,
      "content": "functionfillOrdersUpTo(address[5][]calldataorderAddresses,uint256[6][]calldata<missing ')'>"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 282,
      "column": 30,
      "content": "orderValues,"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 283,
      "column": 10,
      "content": "uint256fillTakerTokenAmount,"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 284,
      "column": 10,
      "content": "boolshouldThrowOnInsufficientBalanceOrAllowance,"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 285,
      "column": 10,
      "content": "uint8v,"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 286,
      "column": 10,
      "content": "bytes32r,"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 287,
      "column": 10,
      "content": "bytes32s)externalreturns"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 289,
      "column": 18,
      "content": "(uint256filledTakerTokenAmount);"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 293,
      "column": 30,
      "content": "orderValues,"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 294,
      "column": 8,
      "content": "uint256fillTakerTokenAmount,"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 295,
      "column": 8,
      "content": "boolshouldThrowOnInsufficientBalanceOrAllowance,"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 296,
      "column": 8,
      "content": "uint8[]calldata"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 296,
      "column": 25,
      "content": "v,"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 297,
      "column": 8,
      "content": "bytes32[]calldata"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 297,
      "column": 27,
      "content": "r,"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 298,
      "column": 8,
      "content": "bytes32[]calldata"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 300,
      "column": 16,
      "content": "(uint256);"
    }
  ]
}