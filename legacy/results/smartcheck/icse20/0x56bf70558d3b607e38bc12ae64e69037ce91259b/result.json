{
  "contract": "0x56bf70558d3b607e38bc12ae64e69037ce91259b",
  "tool": "smartcheck",
  "start": 1563715916.96518,
  "end": 1563715925.4256759,
  "duration": 8.460495948791504,
  "analysis": [
    {
      "name": "SOLIDITY_ADDRESS_HARDCODED",
      "patternId": "b140cd",
      "severity": 1,
      "line": 546,
      "column": 32,
      "content": "0xf47261b0"
    },
    {
      "name": "SOLIDITY_ADDRESS_HARDCODED",
      "patternId": "b140cd",
      "severity": 1,
      "line": 546,
      "column": 62,
      "content": "0xf47261b0"
    },
    {
      "name": "SOLIDITY_EXTRA_GAS_IN_LOOPS",
      "patternId": "d3j11j",
      "severity": 1,
      "line": 608,
      "column": 8,
      "content": "for(uint256i=0;i<orders0x.length;i++){if(i>0)orders0x[i].makerAssetData=orders0x[0].makerAssetData;if(takerAssetRemaining>0&&orders0x[i].takerFee>0){if(takerAssetRemaining>=orders0x[i].takerAssetAmount){zrxTokenAmount=zrxTokenAmount.add(orders0x[i].takerFee);takerAssetRemaining=takerAssetRemaining.sub(orders0x[i].takerAssetAmount);}else{zrxTokenAmount=zrxTokenAmount.add(_safeGetPartialAmountFloor(takerAssetRemaining,orders0x[i].takerAssetAmount,orders0x[i].takerFee));takerAssetRemaining=0;}}}"
    },
    {
      "name": "SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN",
      "patternId": "58bdd3",
      "severity": 1,
      "line": 55,
      "column": 4,
      "content": "functioneip20Transfer(addresstoken,addressto,uint256value)internalreturns(boolresult){NonCompliantEIP20(token).transfer(to,value);assembly{switchreturndatasize()case0{result:=not(0)}case32{returndatacopy(0,0,32)result:=mload(0)}default{revert(0,0)}}require(result,\"eip20Transfer failed\");}"
    },
    {
      "name": "SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN",
      "patternId": "58bdd3",
      "severity": 1,
      "line": 81,
      "column": 4,
      "content": "functioneip20TransferFrom(addresstoken,addressfrom,addressto,uint256value)internalreturns(boolresult){NonCompliantEIP20(token).transferFrom(from,to,value);assembly{switchreturndatasize()case0{result:=not(0)}case32{returndatacopy(0,0,32)result:=mload(0)}default{revert(0,0)}}require(result,\"eip20TransferFrom failed\");}"
    },
    {
      "name": "SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN",
      "patternId": "58bdd3",
      "severity": 1,
      "line": 108,
      "column": 4,
      "content": "functioneip20Approve(addresstoken,addressspender,uint256value)internalreturns(boolresult){NonCompliantEIP20(token).approve(spender,value);assembly{switchreturndatasize()case0{result:=not(0)}case32{returndatacopy(0,0,32)result:=mload(0)}default{revert(0,0)}}require(result,\"eip20Approve failed\");}"
    },
    {
      "name": "SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN",
      "patternId": "58bdd3",
      "severity": 1,
      "line": 523,
      "column": 4,
      "content": "functiongetV2Tokens(ExchangeV2Interface.OrderV2memoryorder)publicpurereturns(addressmakerTokenAddress,addresstakerTokenAddress){bytesmemorymakerAssetData=order.makerAssetData;bytesmemorytakerAssetData=order.takerAssetData;bytes4makerProxyID;bytes4takerProxyID;assembly{makerProxyID:=mload(add(makerAssetData,32))takerProxyID:=mload(add(takerAssetData,32))makerTokenAddress:=mload(add(makerAssetData,36))takerTokenAddress:=mload(add(takerAssetData,36))}require(makerProxyID==0xf47261b0&&takerProxyID==0xf47261b0,\"BZxTo0xV2::getV2Tokens: 0x V2 orders must use ERC20 tokens\");}"
    },
    {
      "name": "SOLIDITY_GAS_LIMIT_IN_LOOPS",
      "patternId": "f6f853",
      "severity": 2,
      "line": 608,
      "column": 8,
      "content": "for(uint256i=0;i<orders0x.length;i++){if(i>0)orders0x[i].makerAssetData=orders0x[0].makerAssetData;if(takerAssetRemaining>0&&orders0x[i].takerFee>0){if(takerAssetRemaining>=orders0x[i].takerAssetAmount){zrxTokenAmount=zrxTokenAmount.add(orders0x[i].takerFee);takerAssetRemaining=takerAssetRemaining.sub(orders0x[i].takerAssetAmount);}else{zrxTokenAmount=zrxTokenAmount.add(_safeGetPartialAmountFloor(takerAssetRemaining,orders0x[i].takerAssetAmount,orders0x[i].takerFee));takerAssetRemaining=0;}}}"
    },
    {
      "name": "SOLIDITY_OVERPOWERED_ROLE",
      "patternId": "j83hf7",
      "severity": 2,
      "line": 549,
      "column": 4,
      "content": "functionset0xV2Exchange(address_exchange)publiconlyOwner{exchangeV2Contract=_exchange;}"
    },
    {
      "name": "SOLIDITY_OVERPOWERED_ROLE",
      "patternId": "j83hf7",
      "severity": 2,
      "line": 557,
      "column": 4,
      "content": "functionsetZRXToken(address_zrxToken)publiconlyOwner{zrxTokenContract=_zrxToken;}"
    },
    {
      "name": "SOLIDITY_OVERPOWERED_ROLE",
      "patternId": "j83hf7",
      "severity": 2,
      "line": 565,
      "column": 4,
      "content": "functionset0xTokenProxy(address_proxy)publiconlyOwner{erc20ProxyContract=_proxy;}"
    },
    {
      "name": "SOLIDITY_REDUNDANT_FALLBACK_REJECT",
      "patternId": "b85a32",
      "severity": 1,
      "line": 465,
      "column": 17,
      "content": "{revert();}"
    },
    {
      "name": "SOLIDITY_REVERT_REQUIRE",
      "patternId": "c56b12",
      "severity": 1,
      "line": 495,
      "column": 8,
      "content": "if(sourceTokenUsedAmount<sourceTokenAmountToUse){revert(\"BZxTo0xV2::take0xTrade: sourceTokenUsedAmount < sourceTokenAmountToUse\");}"
    },
    {
      "name": "SOLIDITY_SAFEMATH",
      "patternId": "837cac",
      "severity": 1,
      "line": 344,
      "column": 4,
      "content": "usingSafeMathforuint256;"
    },
    {
      "name": "SOLIDITY_SAFEMATH",
      "patternId": "837cac",
      "severity": 1,
      "line": 438,
      "column": 4,
      "content": "usingSafeMathforuint256;"
    },
    {
      "name": "SOLIDITY_SHOULD_NOT_BE_PURE",
      "patternId": "11314f",
      "severity": 1,
      "line": 523,
      "column": 4,
      "content": "functiongetV2Tokens(ExchangeV2Interface.OrderV2memoryorder)publicpurereturns(addressmakerTokenAddress,addresstakerTokenAddress){bytesmemorymakerAssetData=order.makerAssetData;bytesmemorytakerAssetData=order.takerAssetData;bytes4makerProxyID;bytes4takerProxyID;assembly{makerProxyID:=mload(add(makerAssetData,32))takerProxyID:=mload(add(takerAssetData,32))makerTokenAddress:=mload(add(makerAssetData,36))takerTokenAddress:=mload(add(takerAssetData,36))}require(makerProxyID==0xf47261b0&&takerProxyID==0xf47261b0,\"BZxTo0xV2::getV2Tokens: 0x V2 orders must use ERC20 tokens\");}"
    },
    {
      "name": "SOLIDITY_SHOULD_RETURN_STRUCT",
      "patternId": "83hf3l",
      "severity": 1,
      "line": 478,
      "column": 16,
      "content": "(addressdestTokenAddress,uint256destTokenAmount,uint256sourceTokenUsedAmount)"
    },
    {
      "name": "SOLIDITY_SHOULD_RETURN_STRUCT",
      "patternId": "83hf3l",
      "severity": 1,
      "line": 527,
      "column": 16,
      "content": "(addressmakerTokenAddress,addresstakerTokenAddress)"
    },
    {
      "name": "SOLIDITY_SHOULD_RETURN_STRUCT",
      "patternId": "83hf3l",
      "severity": 1,
      "line": 604,
      "column": 16,
      "content": "(uint256sourceTokenUsedAmount,uint256destTokenAmount)"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 64,
      "column": 8,
      "content": "assembly{switchreturndatasize()case0{result:=not(0)}case32{returndatacopy(0,0,32)result:=mload(0)}default{revert(0,0)}}"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 91,
      "column": 8,
      "content": "assembly{switchreturndatasize()case0{result:=not(0)}case32{returndatacopy(0,0,32)result:=mload(0)}default{revert(0,0)}}"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 117,
      "column": 8,
      "content": "assembly{switchreturndatasize()case0{result:=not(0)}case32{returndatacopy(0,0,32)result:=mload(0)}default{revert(0,0)}}"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 537,
      "column": 8,
      "content": "assembly{makerProxyID:=mload(add(makerAssetData,32))takerProxyID:=mload(add(takerAssetData,32))makerTokenAddress:=mload(add(makerAssetData,36))takerTokenAddress:=mload(add(takerAssetData,36))}"
    }
  ]
}