{
  "contract": "0x17114e96d507e478f738a5ad864f8c996c529fc7",
  "tool": "smartcheck",
  "start": 1563792098.4309762,
  "end": 1563792108.952179,
  "duration": 10.521202802658081,
  "analysis": [
    {
      "name": "SOLIDITY_ADDRESS_HARDCODED",
      "patternId": "a91b18",
      "severity": 1,
      "line": 196,
      "column": 4,
      "content": "owner=address(0)"
    },
    {
      "name": "SOLIDITY_EXTRA_GAS_IN_LOOPS",
      "patternId": "d3j11j",
      "severity": 1,
      "line": 318,
      "column": 8,
      "content": "for(uinti=0;i<_starts.length-1;i++){bytesmemorydata=subbytes(_callDatas,_starts[i],_starts[i+1]-_starts[i]);require(address(this).call(data));}"
    },
    {
      "name": "SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN",
      "patternId": "47acc2",
      "severity": 1,
      "line": 301,
      "column": 4,
      "content": "functionsubbytes(bytes_data,uint_start,uint_length)privatepurereturns(bytes){bytesmemoryresult=newbytes(_length);uintfrom;uintto;assembly{from:=add(_data,_start)to:=result}memcpy(to,from,_length);}"
    },
    {
      "name": "SOLIDITY_LOCKED_MONEY",
      "patternId": "30281d",
      "severity": 3,
      "line": 242,
      "column": 0,
      "content": "contractIBancorNetwork{functionconvert(address[]_path,uint256_amount,uint256_minReturn)publicpayablereturns(uint256);functionclaimAndConvert(address[]_path,uint256_amount,uint256_minReturn)publicpayablereturns(uint256);}"
    },
    {
      "name": "SOLIDITY_LOCKED_MONEY",
      "patternId": "30281d",
      "severity": 3,
      "line": 262,
      "column": 0,
      "content": "contractIKyberNetworkProxy{functiontrade(addresssrc,uintsrcAmount,addressdest,addressdestAddress,uintmaxDestAmount,uintminConversionRate,addresswalletId)publicpayablereturns(uint);}"
    },
    {
      "name": "SOLIDITY_LOCKED_MONEY",
      "patternId": "30281d",
      "severity": 3,
      "line": 449,
      "column": 0,
      "content": "contractMultiBuyerisMultiChanger{functionbuy(IMultiToken_mtkn,uint256_minimumReturn,bytes_callDatas,uint[]_starts)publicpayable{change(_callDatas,_starts);uintmtknTotalSupply=_mtkn.totalSupply();uint256bestAmount=uint256(-1);for(uinti=_mtkn.tokensCount();i>0;i--){ERC20token=_mtkn.tokens(i-1);if(token.allowance(this,_mtkn)==0){token.approve(_mtkn,uint256(-1));}uint256amount=mtknTotalSupply.mul(token.balanceOf(this)).div(token.balanceOf(_mtkn));if(amount<bestAmount){bestAmount=amount;}}require(bestAmount>=_minimumReturn,\"buy: return value is too low\");_mtkn.bundle(msg.sender,bestAmount);}functionbuyFirstTokens(IMultiToken_mtkn,bytes_callDatas,uint[]_starts)publicpayable{change(_callDatas,_starts);uinttokensCount=_mtkn.tokensCount();uint256[]memoryamounts=newuint256[](tokensCount);for(uinti=0;i<tokensCount;i++){ERC20token=_mtkn.tokens(i);amounts[i]=token.balanceOf(this);if(token.allowance(this,_mtkn)==0){token.approve(_mtkn,uint256(-1));}}_mtkn.bundleFirstTokens(msg.sender,msg.value.mul(1000),amounts);}}"
    },
    {
      "name": "SOLIDITY_PRAGMAS_VERSION",
      "patternId": "23fc32",
      "severity": 1,
      "line": 1,
      "column": 16,
      "content": "^"
    },
    {
      "name": "SOLIDITY_SAFEMATH",
      "patternId": "837cac",
      "severity": 1,
      "line": 279,
      "column": 4,
      "content": "usingSafeMathforuint256;"
    },
    {
      "name": "SOLIDITY_SHOULD_NOT_BE_PURE",
      "patternId": "11314f",
      "severity": 1,
      "line": 282,
      "column": 4,
      "content": "functionmemcpy(uintdest,uintsrc,uintlen)privatepure{for(;len>=32;len-=32){assembly{mstore(dest,mload(src))}dest+=32;src+=32;}uintmask=256**(32-len)-1;assembly{letsrcpart:=and(mload(src),not(mask))letdestpart:=and(mload(dest),mask)mstore(dest,or(destpart,srcpart))}}"
    },
    {
      "name": "SOLIDITY_SHOULD_NOT_BE_PURE",
      "patternId": "11314f",
      "severity": 1,
      "line": 301,
      "column": 4,
      "content": "functionsubbytes(bytes_data,uint_start,uint_length)privatepurereturns(bytes){bytesmemoryresult=newbytes(_length);uintfrom;uintto;assembly{from:=add(_data,_start)to:=result}memcpy(to,from,_length);}"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 46,
      "column": 45,
      "content": "ERC20[]"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 47,
      "column": 47,
      "content": "uint8[]"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 48,
      "column": 47,
      "content": "uint256[]"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 49,
      "column": 61,
      "content": "ERC20[]"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 49,
      "column": 70,
      "content": "uint8[]"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 49,
      "column": 79,
      "content": "uint256[]"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 51,
      "column": 70,
      "content": "uint256[]_tokenAmounts"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 55,
      "column": 64,
      "content": "ERC20[]_tokens"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 70,
      "column": 46,
      "content": "uint256[]_weights"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 71,
      "column": 68,
      "content": "ERC20[]_tokens"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 71,
      "column": 85,
      "content": "uint8[]_decimals"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 71,
      "column": 104,
      "content": "uint256[]_balances"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 71,
      "column": 125,
      "content": "uint256[]_weights"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 244,
      "column": 8,
      "content": "address[]_path"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 253,
      "column": 8,
      "content": "address[]_path"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 301,
      "column": 22,
      "content": "bytes_data"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 301,
      "column": 83,
      "content": "bytes"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 313,
      "column": 8,
      "content": "bytes_callDatas"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 314,
      "column": 8,
      "content": "uint[]_starts"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 453,
      "column": 8,
      "content": "bytes_callDatas"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 454,
      "column": 8,
      "content": "uint[]_starts"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 481,
      "column": 8,
      "content": "bytes_callDatas"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 482,
      "column": 8,
      "content": "uint[]_starts"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 285,
      "column": 12,
      "content": "assembly{mstore(dest,mload(src))}"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 294,
      "column": 8,
      "content": "assembly{letsrcpart:=and(mload(src),not(mask))letdestpart:=and(mload(dest),mask)mstore(dest,or(destpart,srcpart))}"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 305,
      "column": 8,
      "content": "assembly{from:=add(_data,_start)to:=result}"
    }
  ]
}