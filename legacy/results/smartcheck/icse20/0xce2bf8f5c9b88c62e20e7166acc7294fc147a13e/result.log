/unique_chucks/28/0xce2bf8f5c9b88c62e20e7166acc7294fc147a13e.sol
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 1173
column: 57
content: 0x7b8e3514

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 1177
column: 52
content: 0x3fd3c997

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 1181
column: 58
content: 0x4ac14782

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 1185
column: 64
content: 0x4d0ae546

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 1189
column: 56
content: 0x297bb70b

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 1193
column: 65
content: 0x50dde190

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 1197
column: 51
content: 0xd46b02c3

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 1201
column: 58
content: 0x4f9559b1

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 1205
column: 48
content: 0x2ac12622

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 1209
column: 62
content: 0xeea086ba

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 1213
column: 58
content: 0xbfc8bfce

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 1217
column: 57
content: 0x64a3bc15

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 1221
column: 49
content: 0xb4be83d5

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 1225
column: 58
content: 0x3e228bae

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 1229
column: 45
content: 0x288cdc91

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 1233
column: 54
content: 0x60704108

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 1237
column: 53
content: 0xc75e0a81

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 1241
column: 54
content: 0x7e9d74dc

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 1245
column: 57
content: 0x93634702

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 1249
column: 56
content: 0xe5fa431b

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 1253
column: 65
content: 0xa3e20380

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 1257
column: 57
content: 0x7e1d9808

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 1261
column: 66
content: 0xdd1c7d18

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 1265
column: 51
content: 0x3c28d861

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 1269
column: 50
content: 0xd9bfa73e

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 1273
column: 44
content: 0x8da5cb5b

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 1277
column: 47
content: 0x3683ef8e

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 1281
column: 49
content: 0x82c174d0

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 1285
column: 59
content: 0xc585bb93

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 1289
column: 71
content: 0x77fcce68

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 1293
column: 51
content: 0x642f2eaf

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 1297
column: 57
content: 0xf2fde38b

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 2011
column: 8
content: for(uint256i=0;i<requirementsAchievedLength;i+=1){require(requirementsAchieved[i],"AT_LEAST_ONE_REQUIREMENT_NOT_ACHIEVED");}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: 17f23a
severity: 1
line: 1950
column: 15
content: index<takerAssetDataLength

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: ^

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 1940
column: 15
content: if(proxyId==ERC721_DATA_ID){index=68;}else{revert("UNSUPPORTED_ASSET_PROXY");}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 1965
column: 19
content: if(dataId==FILLED_TIMES_DATA_ID){index+=36;}else{revert("UNSUPPORTED_METHOD");}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 186
column: 4
content: functionhashOrder(Ordermemoryorder)internalpurereturns(bytes32result){bytes32schemaHash=EIP712_ORDER_SCHEMA_HASH;bytes32makerAssetDataHash=keccak256(order.makerAssetData);bytes32takerAssetDataHash=keccak256(order.takerAssetData);assembly{letpos1:=sub(order,32)letpos2:=add(order,320)letpos3:=add(order,352)lettemp1:=mload(pos1)lettemp2:=mload(pos2)lettemp3:=mload(pos3)mstore(pos1,schemaHash)mstore(pos2,makerAssetDataHash)mstore(pos3,takerAssetDataHash)result:=keccak256(pos1,416)mstore(pos1,temp1)mstore(pos2,temp2)mstore(pos3,temp3)}returnresult;}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 940
column: 4
content: functionexchangeCalldataload(uint256offset)internalpurereturns(bytes32value){assembly{letexchangeTxPtr:=calldataload(0x44)letexchangeCalldataOffset:=add(exchangeTxPtr,add(0x24,offset))value:=calldataload(exchangeCalldataOffset)}returnvalue;}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 963
column: 4
content: functionloadTakerAssetDataFromOrder()internalpurereturns(uint256takerAssetAmount,bytesmemorytakerAssetData){assembly{takerAssetData:=mload(0x40)letexchangeCalldataOffset:=add(0x28,calldataload(0x44))letorderOffset:=add(exchangeCalldataOffset,calldataload(exchangeCalldataOffset))takerAssetAmount:=calldataload(add(orderOffset,160))lettakerAssetDataOffset:=add(orderOffset,calldataload(add(orderOffset,352)))lettakerAssetDataLength:=calldataload(takerAssetDataOffset)mstore(0x40,add(takerAssetData,and(add(add(takerAssetDataLength,0x20),0x1f),not(0x1f))))mstore(takerAssetData,takerAssetDataLength)calldatacopy(add(takerAssetData,32),add(takerAssetDataOffset,32),takerAssetDataLength)}return(takerAssetAmount,takerAssetData);}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 992
column: 4
content: functionloadSignatureFromExchangeCalldata()internalpurereturns(bytesmemorysignature){assembly{signature:=mload(0x40)letexchangeCalldataOffset:=add(0x28,calldataload(0x44))letsignatureOffset:=add(exchangeCalldataOffset,calldataload(add(exchangeCalldataOffset,0x40)))letsignatureLength:=calldataload(signatureOffset)mstore(0x40,add(signature,and(add(add(signatureLength,0x20),0x1f),not(0x1f))))mstore(signature,signatureLength)calldatacopy(add(signature,32),add(signatureOffset,32),signatureLength)}returnsignature;}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 1332
column: 4
content: functionrawAddress(bytesmemoryinput)internalpurereturns(uint256memoryAddress){assembly{memoryAddress:=input}returnmemoryAddress;}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 1346
column: 4
content: functioncontentAddress(bytesmemoryinput)internalpurereturns(uint256memoryAddress){assembly{memoryAddress:=add(input,32)}returnmemoryAddress;}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 1361
column: 4
content: functionmemCopy(uint256dest,uint256source,uint256length)internalpure{if(length<32){assembly{letmask:=sub(exp(256,sub(32,length)),1)lets:=and(mload(source),not(mask))letd:=and(mload(dest),mask)mstore(dest,or(s,d))}}else{if(source==dest){return;}if(source>dest){assembly{length:=sub(length,32)letsEnd:=add(source,length)letdEnd:=add(dest,length)letlast:=mload(sEnd)for{}lt(source,sEnd){}{mstore(dest,mload(source))source:=add(source,32)dest:=add(dest,32)}mstore(dEnd,last)}}else{assembly{length:=sub(length,32)letsEnd:=add(source,length)letdEnd:=add(dest,length)letfirst:=mload(source)for{}slt(dest,dEnd){}{mstore(dEnd,mload(sEnd))sEnd:=sub(sEnd,32)dEnd:=sub(dEnd,32)}mstore(dest,first)}}}}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 1503
column: 4
content: functionsliceDestructive(bytesmemoryb,uint256from,uint256to)internalpurereturns(bytesmemoryresult){require(from<=to,"FROM_LESS_THAN_TO_REQUIRED");require(to<b.length,"TO_LESS_THAN_LENGTH_REQUIRED");assembly{result:=add(b,from)mstore(result,sub(to,from))}returnresult;}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 1532
column: 4
content: functionpopLastByte(bytesmemoryb)internalpurereturns(bytes1result){require(b.length>0,"GREATER_THAN_ZERO_LENGTH_REQUIRED");result=b[b.length-1];assembly{letnewLen:=sub(mload(b),1)mstore(b,newLen)}returnresult;}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 1556
column: 4
content: functionpopLast20Bytes(bytesmemoryb)internalpurereturns(addressresult){require(b.length>=20,"GREATER_OR_EQUAL_TO_20_LENGTH_REQUIRED");result=readAddress(b,b.length-20);assembly{letnewLen:=sub(mload(b),20)mstore(b,newLen)}returnresult;}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 1599
column: 4
content: functionreadAddress(bytesmemoryb,uint256index)internalpurereturns(addressresult){require(b.length>=index+20,"GREATER_OR_EQUAL_TO_20_LENGTH_REQUIRED");index+=20;assembly{result:=and(mload(add(b,index)),0xffffffffffffffffffffffffffffffffffffffff)}returnresult;}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 1631
column: 4
content: functionwriteAddress(bytesmemoryb,uint256index,addressinput)internalpure{require(b.length>=index+20,"GREATER_OR_EQUAL_TO_20_LENGTH_REQUIRED");index+=20;assembly{letneighbors:=and(mload(add(b,index)),0xffffffffffffffffffffffff0000000000000000000000000000000000000000)input:=and(input,0xffffffffffffffffffffffffffffffffffffffff)mstore(add(b,index),xor(input,neighbors))}}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 1677
column: 4
content: functionreadBytes32(bytesmemoryb,uint256index)internalpurereturns(bytes32result){require(b.length>=index+32,"GREATER_OR_EQUAL_TO_32_LENGTH_REQUIRED");index+=32;assembly{result:=mload(add(b,index))}returnresult;}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 1704
column: 4
content: functionwriteBytes32(bytesmemoryb,uint256index,bytes32input)internalpure{require(b.length>=index+32,"GREATER_OR_EQUAL_TO_32_LENGTH_REQUIRED");index+=32;assembly{mstore(add(b,index),input)}}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 1761
column: 4
content: functionreadBytes4(bytesmemoryb,uint256index)internalpurereturns(bytes4result){require(b.length>=index+4,"GREATER_OR_EQUAL_TO_4_LENGTH_REQUIRED");index+=32;assembly{result:=mload(add(b,index))result:=and(result,0xFFFFFFFF00000000000000000000000000000000000000000000000000000000)}returnresult;}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 1793
column: 4
content: functionreadBytesWithLength(bytesmemoryb,uint256index)internalpurereturns(bytesmemoryresult){uint256nestedBytesLength=readUint256(b,index);index+=32;require(b.length>=index+nestedBytesLength,"GREATER_OR_EQUAL_TO_NESTED_BYTES_LENGTH_REQUIRED");assembly{result:=add(b,index)}returnresult;}

ruleId: SOLIDITY_SHOULD_NOT_BE_VIEW
patternId: 189abf
severity: 1
line: 63
column: 4
content: functionhashEIP712Message(bytes32hashStruct)internalviewreturns(bytes32result){bytes32eip712DomainHash=EIP712_DOMAIN_HASH;assembly{letmemPtr:=mload(64)mstore(memPtr,0x1901000000000000000000000000000000000000000000000000000000000000)mstore(add(memPtr,2),eip712DomainHash)mstore(add(memPtr,34),hashStruct)result:=keccak256(memPtr,66)}returnresult;}

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 7d54ca
severity: 1
line: 898
column: 16
content: (uint256takerAssetAmount,bytesmemorytakerAssetData)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 7d54ca
severity: 1
line: 965
column: 16
content: (uint256takerAssetAmount,bytesmemorytakerAssetData)

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 77
column: 8
content: assembly{letmemPtr:=mload(64)mstore(memPtr,0x1901000000000000000000000000000000000000000000000000000000000000)mstore(add(memPtr,2),eip712DomainHash)mstore(add(memPtr,34),hashStruct)result:=keccak256(memPtr,66)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 212
column: 8
content: assembly{letpos1:=sub(order,32)letpos2:=add(order,320)letpos3:=add(order,352)lettemp1:=mload(pos1)lettemp2:=mload(pos2)lettemp3:=mload(pos3)mstore(pos1,schemaHash)mstore(pos2,makerAssetDataHash)mstore(pos3,takerAssetDataHash)result:=keccak256(pos1,416)mstore(pos1,temp1)mstore(pos2,temp2)mstore(pos3,temp3)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 944
column: 8
content: assembly{letexchangeTxPtr:=calldataload(0x44)letexchangeCalldataOffset:=add(exchangeTxPtr,add(0x24,offset))value:=calldataload(exchangeCalldataOffset)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 967
column: 8
content: assembly{takerAssetData:=mload(0x40)letexchangeCalldataOffset:=add(0x28,calldataload(0x44))letorderOffset:=add(exchangeCalldataOffset,calldataload(exchangeCalldataOffset))takerAssetAmount:=calldataload(add(orderOffset,160))lettakerAssetDataOffset:=add(orderOffset,calldataload(add(orderOffset,352)))lettakerAssetDataLength:=calldataload(takerAssetDataOffset)mstore(0x40,add(takerAssetData,and(add(add(takerAssetDataLength,0x20),0x1f),not(0x1f))))mstore(takerAssetData,takerAssetDataLength)calldatacopy(add(takerAssetData,32),add(takerAssetDataOffset,32),takerAssetDataLength)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 996
column: 8
content: assembly{signature:=mload(0x40)letexchangeCalldataOffset:=add(0x28,calldataload(0x44))letsignatureOffset:=add(exchangeCalldataOffset,calldataload(add(exchangeCalldataOffset,0x40)))letsignatureLength:=calldataload(signatureOffset)mstore(0x40,add(signature,and(add(add(signatureLength,0x20),0x1f),not(0x1f))))mstore(signature,signatureLength)calldatacopy(add(signature,32),add(signatureOffset,32),signatureLength)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 1337
column: 8
content: assembly{memoryAddress:=input}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 1351
column: 8
content: assembly{memoryAddress:=add(input,32)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 1373
column: 12
content: assembly{letmask:=sub(exp(256,sub(32,length)),1)lets:=and(mload(source),not(mask))letd:=and(mload(dest),mask)mstore(dest,or(s,d))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 1401
column: 16
content: assembly{length:=sub(length,32)letsEnd:=add(source,length)letdEnd:=add(dest,length)letlast:=mload(sEnd)for{}lt(source,sEnd){}{mstore(dest,mload(source))source:=add(source,32)dest:=add(dest,32)}mstore(dEnd,last)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 1430
column: 16
content: assembly{length:=sub(length,32)letsEnd:=add(source,length)letdEnd:=add(dest,length)letfirst:=mload(source)for{}slt(dest,dEnd){}{mstore(dEnd,mload(sEnd))sEnd:=sub(sEnd,32)dEnd:=sub(dEnd,32)}mstore(dest,first)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 1522
column: 8
content: assembly{result:=add(b,from)mstore(result,sub(to,from))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 1545
column: 8
content: assembly{letnewLen:=sub(mload(b),1)mstore(b,newLen)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 1569
column: 8
content: assembly{letnewLen:=sub(mload(b),20)mstore(b,newLen)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 1618
column: 8
content: assembly{result:=and(mload(add(b,index)),0xffffffffffffffffffffffffffffffffffffffff)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 1650
column: 8
content: assembly{letneighbors:=and(mload(add(b,index)),0xffffffffffffffffffffffff0000000000000000000000000000000000000000)input:=and(input,0xffffffffffffffffffffffffffffffffffffffff)mstore(add(b,index),xor(input,neighbors))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 1694
column: 8
content: assembly{result:=mload(add(b,index))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 1721
column: 8
content: assembly{mstore(add(b,index),input)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 1778
column: 8
content: assembly{result:=mload(add(b,index))result:=and(result,0xFFFFFFFF00000000000000000000000000000000000000000000000000000000)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 1813
column: 8
content: assembly{result:=add(b,index)}

SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_REVERT_REQUIRE :2
SOLIDITY_ADDRESS_HARDCODED :32
SOLIDITY_GAS_LIMIT_IN_LOOPS :2
SOLIDITY_USING_INLINE_ASSEMBLY :19
SOLIDITY_SHOULD_RETURN_STRUCT :2
SOLIDITY_SHOULD_NOT_BE_VIEW :1
SOLIDITY_SHOULD_NOT_BE_PURE :16