/unique_chucks/10/0x748f9a0ac36b123c7e4f687f7737f759628c4392.sol
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 11
column: 4
content: functionbalanceOf(addresswho)publicconstantreturns(uint256);

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 13
column: 4
content: functionallowance(addressowner,addressspender)publicconstantreturns(uint256);

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 26
column: 4
content: functionmul(uint256a,uint256b)internalconstantreturns(uint256){uint256c=a*b;assert(a==0||c/a==b);returnc;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 32
column: 4
content: functiondiv(uint256a,uint256b)internalconstantreturns(uint256){uint256c=a/b;returnc;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 39
column: 4
content: functionsub(uint256a,uint256b)internalconstantreturns(uint256){assert(b<=a);returna-b;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 44
column: 4
content: functionadd(uint256a,uint256b)internalconstantreturns(uint256){uint256c=a+b;assert(c>=a);returnc;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 199
column: 4
content: functionbalanceOf(address_owner)publicconstantreturns(uint256balance){if(lastMint[_owner]!=0){returnbalances[_owner]+getBalanceToMint(_owner);}else{returnbalances[_owner];}}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 229
column: 4
content: functionallowance(address_owner,address_spender)publicconstantreturns(uint256remaining){returnallowed[_owner][_spender];}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 273
column: 4
content: functiongetBalanceToMint(address_address)publicconstantreturns(uint256){if(!enabledMint)return0;if(!members[_address])return0;if(lastMint[_address]==0)return0;uint256balanceToMint=(block.number-lastMint[_address])*mintPerBlock;for(uinti=totalTransactions-1;i>=0;i--){if(block.number==transactions[i].blockNumber)continue;if(transactions[i].blockNumber<lastMint[_address])returnbalanceToMint;if(transactions[i].amount>mintPerBlock){balanceToMint=balanceToMint.add(transactions[i].amount-mintPerBlock);}}returnbalanceToMint;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 337
column: 4
content: functionisMember(address_address)publicconstantreturns(bool){returnmembers[_address];}

ruleId: SOLIDITY_DIV_MUL
patternId: 09hhh1
severity: 2
line: 360
column: 25
content: msg.value/0.01ether*1ether

ruleId: SOLIDITY_ERC20_APPROVE
patternId: af782c
severity: 2
line: 217
column: 4
content: functionapprove(address_spender,uint256_value)publicreturns(bool){allowed[msg.sender][_spender]=_value;Approval(msg.sender,_spender,_value);returntrue;}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 316
column: 4
content: functionsetLastMint(address_address,uint_block)onlyOwnerpublic{lastMint[_address]=_block;}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 320
column: 4
content: functionsetCommission(uint_commission)onlyOwnerpublic{commissionPercent=_commission;}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 324
column: 4
content: functionsetMintPerBlock(uint256_mintPerBlock)onlyOwnerpublic{mintPerBlock=_mintPerBlock;}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 328
column: 4
content: functionsetInvested(address_address)onlyOwnerpublic{invested[_address]=true;if(confirmed[_address]&&!members[_address]){members[_address]=true;totalMembers=totalMembers.add(1);refreshBalance(_address);}}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 383
column: 4
content: functionsetBenefeciar(address_benefeciar)publiconlyOwner{benefeciar=_benefeciar;}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: ^

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 93
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 346
column: 4
content: usingSafeMathforuint;

ruleId: SOLIDITY_UINT_CANT_BE_NEGATIVE
patternId: 11ca45b
severity: 3
line: 280
column: 44
content: i>=0

ruleId: SOLIDITY_UINT_CANT_BE_NEGATIVE
patternId: d48ac4
severity: 2
line: 280
column: 44
content: i>=0

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 66
column: 4
content: functionOwnable(){owners[msg.sender]=true;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 352
column: 4
content: functionCrowdsale(address_token,address_benefeciar){token=BigToken(_token);benefeciar=_benefeciar;owners[msg.sender]=true;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 358
column: 4
content: function()payable{require(msg.value>=0.01ether);uint256amount=msg.value/0.01ether*1ether;if(msg.value>=100ether&&msg.value<500ether)amount=amount*11/10;if(msg.value>=500ether&&msg.value<1000ether)amount=amount*12/10;if(msg.value>=1000ether&&msg.value<5000ether)amount=amount*13/10;if(msg.value>=5000ether&&msg.value<10000ether)amount=amount*14/10;if(msg.value>=10000ether)amount=amount*15/10;collected=collected.add(msg.value);token.mint(msg.sender,amount);token.setInvested(msg.sender);}

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 114
column: 4
content: mapping(address=>bool)invested;

SOLIDITY_VISIBILITY :4
SOLIDITY_SAFEMATH :2
SOLIDITY_OVERPOWERED_ROLE :5
SOLIDITY_DEPRECATED_CONSTRUCTIONS :10
SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_UINT_CANT_BE_NEGATIVE :2
SOLIDITY_DIV_MUL :1
SOLIDITY_ERC20_APPROVE :1