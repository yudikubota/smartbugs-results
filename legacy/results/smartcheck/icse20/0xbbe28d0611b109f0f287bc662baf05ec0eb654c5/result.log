/unique_contracts/0xbbe28d0611b109f0f287bc662baf05ec0eb654c5.sol
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 17
column: 0
content: contractowned{addresspublicowner;addresspublicnewOwner;functionowned()payable{owner=msg.sender;}modifieronlyOwner{require(owner==msg.sender);_;}functionchangeOwner(address_owner)onlyOwnerpublic{require(_owner!=0);newOwner=_owner;}functionconfirmOwner()public{require(newOwner==msg.sender);owner=newOwner;deletenewOwner;}}

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 42
column: 0
content: contractCrowdsaleisowned{uint256publictotalSupply;mapping(address=>uint256)publicbalanceOf;eventTransfer(addressindexedfrom,addressindexedto,uint256value);functionCrowdsale()payableowned(){totalSupply=500000000;balanceOf[this]=500000000;balanceOf[owner]=totalSupply-balanceOf[this];Transfer(this,owner,balanceOf[owner]);}function()payable{require(balanceOf[this]>0);uint256tokensPerOneEther=250;uint256tokens=tokensPerOneEther*msg.value/1000000000000000000;if(tokens>balanceOf[this]){tokens=balanceOf[this];uintvalueWei=tokens*1000000000000000000/tokensPerOneEther;msg.sender.transfer(msg.value-valueWei);}require(tokens>0);balanceOf[msg.sender]+=tokens;balanceOf[this]-=tokens;Transfer(this,msg.sender,tokens);}}

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 72
column: 0
content: contractEasyTokenisCrowdsale{stringpublicstandard='Sms Mining Ethereum';stringpublicname='SmsMiningToken';stringpublicsymbol="SMT";uint8publicdecimals=0;functionEasyToken()payableCrowdsale(){}functiontransfer(address_to,uint256_value)public{require(balanceOf[msg.sender]>=_value);balanceOf[msg.sender]-=_value;balanceOf[_to]+=_value;Transfer(msg.sender,_to,_value);}}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: ^

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 21
column: 4
content: functionowned()payable{owner=msg.sender;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 49
column: 4
content: functionCrowdsale()payableowned(){totalSupply=500000000;balanceOf[this]=500000000;balanceOf[owner]=totalSupply-balanceOf[this];Transfer(this,owner,balanceOf[owner]);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 56
column: 4
content: function()payable{require(balanceOf[this]>0);uint256tokensPerOneEther=250;uint256tokens=tokensPerOneEther*msg.value/1000000000000000000;if(tokens>balanceOf[this]){tokens=balanceOf[this];uintvalueWei=tokens*1000000000000000000/tokensPerOneEther;msg.sender.transfer(msg.value-valueWei);}require(tokens>0);balanceOf[msg.sender]+=tokens;balanceOf[this]-=tokens;Transfer(this,msg.sender,tokens);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 79
column: 4
content: functionEasyToken()payableCrowdsale(){}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 91
column: 4
content: functionSmsMiningTokenOn()payableEasyToken(){}

SOLIDITY_VISIBILITY :5
SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_LOCKED_MONEY :3