/unique_chucks/24/0x31a25ef49039c5b3f7e18f8984137630aed54dfd.sol
line 15:27 mismatched input 'payable' expecting {',', ')'}
line 15:38 no viable alternative at input 'who)'
line 15:38 extraneous input ')' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 15:47 extraneous input '{' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 16:15 mismatched input '(' expecting {';', '='}
line 16:27 mismatched input '==' expecting ')'
line 16:40 mismatched input ',' expecting {';', '='}
line 18:20 extraneous input '(' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 18:24 extraneous input ')' expecting {';', '='}
line 21:0 extraneous input '}' expecting {<EOF>, 'pragma', 'import', 'contract', 'library', 'interface'}
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 7
column: 0
content: contractGame{addresspublicgovernance;constructor(address_governance)publicpayable{governance=_governance;}functionclaim(addresspayablewho)public{require(msg.sender==governance,"Game::claim: The winner must be approved by governance");selfdestruct(who);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 15
column: 4
content: functionclaim(addresspayable

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 16
column: 15
content: (msg.sender==governance,"Game::claim: The winner must be approved by governance");

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 18
column: 8
content: selfdestruct(who);

SOLIDITY_VISIBILITY :3
SOLIDITY_LOCKED_MONEY :1