/unique_chucks/45/0x63c7ec5620616c5016bebfccf0f022ee81176a6c.sol
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 939
column: 55
content: 0x9a20483d

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 1349
column: 18
content: (0,uint256(-1),address(0),uint256(-1),uint256(-1),uint256(-1),uint256(-1))

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 1093
column: 0
content: contractSaleClockAuctionisClockAuction{boolpublicisSaleClockAuction=true;uint256publicgen0SaleCount;uint256[5]publiclastGen0SalePrices;constructor(address_nftAddr,uint256_cut)publicClockAuction(_nftAddr,_cut){}functioncreateAuction(uint256_tokenId,uint256_startingPrice,uint256_endingPrice,uint256_duration,address_seller)external{require(_startingPrice==uint256(uint128(_startingPrice)));require(_endingPrice==uint256(uint128(_endingPrice)));require(_duration==uint256(uint64(_duration)));require(msg.sender==address(nonFungibleContract));_escrow(_seller,_tokenId);Auctionmemoryauction=Auction(_seller,uint128(_startingPrice),uint128(_endingPrice),uint64(_duration),uint64(now));_addAuction(_tokenId,auction);}functionbid(uint256_tokenId)externalpayable{addressseller=tokenIdToAuction[_tokenId].seller;uint256price=_bid(_tokenId,msg.value);_transfer(msg.sender,_tokenId);if(seller==address(nonFungibleContract)){lastGen0SalePrices[gen0SaleCount%5]=price;gen0SaleCount++;}}functionaverageGen0SalePrice()externalviewreturns(uint256){uint256sum=0;for(uint256i=0;i<5;i++){sum+=lastGen0SalePrices[i];}returnsum/5;}}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: ^

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 588
column: 4
content: function_memcpy(uint_dest,uint_src,uint_len)privatepure{for(;_len>=32;_len-=32){assembly{mstore(_dest,mload(_src))}_dest+=32;_src+=32;}uint256mask=256**(32-_len)-1;assembly{letsrcpart:=and(mload(_src),not(mask))letdestpart:=and(mload(_dest),mask)mstore(_dest,or(destpart,srcpart))}}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 610
column: 4
content: function_toString(bytes32[4]_rawBytes,uint256_stringLength)privatepurereturns(string){stringmemoryoutputString=newstring(_stringLength);uint256outputPtr;uint256bytesPtr;assembly{outputPtr:=add(outputString,32)bytesPtr:=_rawBytes}_memcpy(outputPtr,bytesPtr,_stringLength);returnoutputString;}

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 353
column: 43
content: string

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 610
column: 90
content: string

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 705
column: 43
content: Auction_auction

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 591
column: 12
content: assembly{mstore(_dest,mload(_src))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 600
column: 8
content: assembly{letsrcpart:=and(mload(_src),not(mask))letdestpart:=and(mload(_dest),mask)mstore(_dest,or(destpart,srcpart))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 616
column: 8
content: assembly{outputPtr:=add(outputString,32)bytesPtr:=_rawBytes}

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 248
column: 4
content: Pet[]pets;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 256
column: 4
content: mapping(address=>uint256)ownershipTokenCount;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 386
column: 4
content: bytes4constantInterfaceSignature_ERC165=bytes4(keccak256('supportsInterface(bytes4)'));

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 389
column: 4
content: bytes4constantInterfaceSignature_ERC721=bytes4(keccak256('name()'))^bytes4(keccak256('symbol()'))^bytes4(keccak256('totalSupply()'))^bytes4(keccak256('balanceOf(address)'))^bytes4(keccak256('ownerOf(uint256)'))^bytes4(keccak256('approve(address,uint256)'))^bytes4(keccak256('transfer(address,uint256)'))^bytes4(keccak256('transferFrom(address,address,uint256)'))^bytes4(keccak256('tokensOfOwner(address)'))^bytes4(keccak256('tokenMetadata(uint256,string)'));

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 670
column: 4
content: mapping(uint256=>Auction)tokenIdToAuction;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 939
column: 4
content: bytes4constantInterfaceSignature_ERC721=bytes4(0x9a20483d);

SOLIDITY_VISIBILITY :6
SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_LOCKED_MONEY :1
SOLIDITY_ADDRESS_HARDCODED :2
SOLIDITY_UPGRADE_TO_050 :3
SOLIDITY_USING_INLINE_ASSEMBLY :3
SOLIDITY_SHOULD_NOT_BE_PURE :2