/unique_chucks/34/0xfc44094c53832e8a3cea0e97600950c11f14fe5f.sol
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 250
column: 2
content: functioncheckDeck(uint8[]deck,bytes32seed,bytes32deckHash)constantpublicreturns(boolcorrect){if(keccak256(convertToBytes(deck),seed)!=deckHash)returnfalse;returntrue;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 260
column: 2
content: functionconvertToBytes(uint8[]byteArray)internalconstantreturns(bytesb){b=newbytes(byteArray.length);for(uint8i=0;i<byteArray.length;i++)b[i]=byte(byteArray[i]);}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 272
column: 2
content: functioncheckBet(bytes32gameId,uintbet)internalconstantreturns(boolcorrect){uintfactor=splits[gameId].length+1;for(uint8i=0;i<splits[gameId].length+1;i++){if(doubled[gameId][i])factor++;}returnbets[gameId]==bet*factor;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 290
column: 2
content: functiondetermineOutcome(uint8[]cards,uint8[]numCards,uint8[]splits,bool[]doubled,uintbet)constantpublicreturns(uinttotalWin,uinttotalLoss){varplayerValues=getPlayerValues(cards,numCards,splits);var(dealerValue,dealerBJ)=getDealerValue(cards,sum(numCards));uintwin;uintloss;for(uint8h=0;h<numCards.length;h++){uint8playerValue=playerValues[h];if(playerValue>21){win=0;loss=bet;}elseif(numCards.length==1&&playerValue==21&&numCards[h]==2&&!dealerBJ){win=bet*3/2;loss=0;}elseif(playerValue>dealerValue||dealerValue>21){win=bet;loss=0;}elseif(playerValue==dealerValue){win=0;loss=0;}else{win=0;loss=bet;}if(doubled[h]){win*=2;loss*=2;}totalWin+=win;totalLoss+=loss;}}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 340
column: 2
content: functiongetPlayerValues(uint8[]cards,uint8[]numCards,uint8[]pSplits)constantinternalreturns(uint8[5]playerValues){uint8cardIndex;uint8splitIndex;(cardIndex,splitIndex,playerValues)=playHand(0,0,0,playerValues,cards,numCards,pSplits);}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 357
column: 2
content: functionplayHand(uint8hIndex,uint8cIndex,uint8sIndex,uint8[5]playerValues,uint8[]cards,uint8[]numCards,uint8[]pSplits)constantinternalreturns(uint8,uint8,uint8[5]){playerValues[hIndex]=cardValues[cards[cIndex]%13];cIndex=cIndex<4?cIndex+2:cIndex+1;while(sIndex<pSplits.length&&pSplits[sIndex]==hIndex){sIndex++;(cIndex,sIndex,playerValues)=playHand(sIndex,cIndex,sIndex,playerValues,cards,numCards,pSplits);}uint8numAces=playerValues[hIndex]==11?1:0;uint8card;for(uint8i=1;i<numCards[hIndex];i++){card=cards[cIndex]%13;playerValues[hIndex]+=cardValues[card];if(card==0)numAces++;cIndex=cIndex<4?cIndex+2:cIndex+1;}while(numAces>0&&playerValues[hIndex]>21){playerValues[hIndex]-=10;numAces--;}return(cIndex,sIndex,playerValues);}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 387
column: 2
content: functiongetDealerValue(uint8[]cards,uint8numCards)constantinternalreturns(uint8dealerValue,boolbj){uint8card=cards[1]%13;uint8card2=cards[3]%13;dealerValue=cardValues[card]+cardValues[card2];uint8numAces;if(card==0)numAces++;if(card2==0)numAces++;if(dealerValue>21){dealerValue-=10;numAces--;}elseif(dealerValue==21){return(21,true);}uint8i;while(dealerValue<17){card=cards[numCards+i+2]%13;dealerValue+=cardValues[card];if(card==0)numAces++;if(dealerValue>21&&numAces>0){dealerValue-=10;numAces--;}i++;}}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 422
column: 2
content: functionsum(uint8[]numbers)constantinternalreturns(uint8s){for(uinti=0;i<numbers.length;i++){s+=numbers[i];}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 262
column: 4
content: for(uint8i=0;i<byteArray.length;i++)b[i]=byte(byteArray[i]);

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 274
column: 4
content: for(uint8i=0;i<splits[gameId].length+1;i++){if(doubled[gameId][i])factor++;}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 296
column: 4
content: for(uint8h=0;h<numCards.length;h++){uint8playerValue=playerValues[h];if(playerValue>21){win=0;loss=bet;}elseif(numCards.length==1&&playerValue==21&&numCards[h]==2&&!dealerBJ){win=bet*3/2;loss=0;}elseif(playerValue>dealerValue||dealerValue>21){win=bet;loss=0;}elseif(playerValue==dealerValue){win=0;loss=0;}else{win=0;loss=bet;}if(doubled[h]){win*=2;loss*=2;}totalWin+=win;totalLoss+=loss;}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 423
column: 4
content: for(uinti=0;i<numbers.length;i++){s+=numbers[i];}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: k4o1l4
severity: 1
line: 360
column: 4
content: while(sIndex<pSplits.length&&pSplits[sIndex]==hIndex){sIndex++;(cIndex,sIndex,playerValues)=playHand(sIndex,cIndex,sIndex,playerValues,cards,numCards,pSplits);}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 290
column: 2
content: functiondetermineOutcome(uint8[]cards,uint8[]numCards,uint8[]splits,bool[]doubled,uintbet)constantpublicreturns(uinttotalWin,uinttotalLoss){varplayerValues=getPlayerValues(cards,numCards,splits);var(dealerValue,dealerBJ)=getDealerValue(cards,sum(numCards));uintwin;uintloss;for(uint8h=0;h<numCards.length;h++){uint8playerValue=playerValues[h];if(playerValue>21){win=0;loss=bet;}elseif(numCards.length==1&&playerValue==21&&numCards[h]==2&&!dealerBJ){win=bet*3/2;loss=0;}elseif(playerValue>dealerValue||dealerValue>21){win=bet;loss=0;}elseif(playerValue==dealerValue){win=0;loss=0;}else{win=0;loss=bet;}if(doubled[h]){win*=2;loss*=2;}totalWin+=win;totalLoss+=loss;}}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 422
column: 2
content: functionsum(uint8[]numbers)constantinternalreturns(uint8s){for(uinti=0;i<numbers.length;i++){s+=numbers[i];}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 262
column: 4
content: for(uint8i=0;i<byteArray.length;i++)b[i]=byte(byteArray[i]);

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 296
column: 4
content: for(uint8h=0;h<numCards.length;h++){uint8playerValue=playerValues[h];if(playerValue>21){win=0;loss=bet;}elseif(numCards.length==1&&playerValue==21&&numCards[h]==2&&!dealerBJ){win=bet*3/2;loss=0;}elseif(playerValue>dealerValue||dealerValue>21){win=bet;loss=0;}elseif(playerValue==dealerValue){win=0;loss=0;}else{win=0;loss=bet;}if(doubled[h]){win*=2;loss*=2;}totalWin+=win;totalLoss+=loss;}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 423
column: 4
content: for(uinti=0;i<numbers.length;i++){s+=numbers[i];}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: 17f23a
severity: 1
line: 360
column: 11
content: sIndex<pSplits.length&&pSplits[sIndex]==hIndex

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: 17f23a
severity: 1
line: 372
column: 11
content: numAces>0&&playerValues[hIndex]>21

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 54
column: 2
content: functionsetMinimumBet(uintnewMin)onlyOwnerpublic{minimumBet=newMin;}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 62
column: 2
content: functionsetMaximumBet(uintnewMax)onlyOwnerpublic{maximumBet=newMax;}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 8
column: 16
content: ^

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 7d54ca
severity: 1
line: 357
column: 160
content: (uint8,uint8,uint8[5])

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 7d54ca
severity: 1
line: 387
column: 82
content: (uint8dealerValue,boolbj)

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 83k1no
severity: 1
line: 140
column: 22
content: call(bytes4(keccak256("shift(address,uint256,bool)")),player,value,false)

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 83k1no
severity: 1
line: 157
column: 22
content: call(bytes4(keccak256("shift(address,uint256,bool)")),player,value,false)

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 83k1no
severity: 1
line: 175
column: 22
content: call(bytes4(keccak256("shift(address,uint256,bool)")),player,value,false)

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 83k1no
severity: 1
line: 192
column: 24
content: call(bytes4(keccak256("shift(address,uint256,bool)")),player,bet/2,true)

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 83k1no
severity: 1
line: 196
column: 24
content: call(bytes4(keccak256("shift(address,uint256,bool)")),player,bet/2,false)

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 83k1no
severity: 1
line: 231
column: 24
content: call(bytes4(keccak256("shift(address,uint256,bool)")),player,win-loss,true)

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 83k1no
severity: 1
line: 235
column: 24
content: call(bytes4(keccak256("shift(address,uint256,bool)")),player,loss-win,false)

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 901eae
severity: 1
line: 251
column: 8
content: keccak256(convertToBytes(deck),seed)

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 213
column: 33
content: uint8[]deck

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 213
column: 61
content: uint8[]numCards

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 213
column: 79
content: uint8[]splits

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 213
column: 95
content: bool[]doubled

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 250
column: 21
content: uint8[]deck

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 260
column: 26
content: uint8[]byteArray

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 260
column: 71
content: bytesb

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 290
column: 28
content: uint8[]cards

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 290
column: 43
content: uint8[]numCards

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 290
column: 61
content: uint8[]splits

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 290
column: 77
content: bool[]doubled

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 340
column: 27
content: uint8[]cards

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 340
column: 42
content: uint8[]numCards

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 340
column: 60
content: uint8[]pSplits

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 357
column: 85
content: uint8[]cards

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 357
column: 100
content: uint8[]numCards

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 357
column: 118
content: uint8[]pSplits

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 387
column: 26
content: uint8[]cards

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 422
column: 15
content: uint8[]numbers

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 97
column: 2
content: uint8[13]cardValues=[11,2,3,4,5,6,7,8,9,10,10,10,10];

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 101
column: 2
content: mapping(bytes32=>uint)bets;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 103
column: 2
content: mapping(bytes32=>uint8[])splits;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 105
column: 2
content: mapping(bytes32=>mapping(uint8=>bool))doubled;

SOLIDITY_VISIBILITY :4
SOLIDITY_OVERPOWERED_ROLE :2
SOLIDITY_DEPRECATED_CONSTRUCTIONS :8
SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN :2
SOLIDITY_EXTRA_GAS_IN_LOOPS :5
SOLIDITY_UPGRADE_TO_050 :27
SOLIDITY_GAS_LIMIT_IN_LOOPS :5
SOLIDITY_SHOULD_RETURN_STRUCT :2