{
  "contract": "0x595a47e57b3ec34031429d2abf9c941e4e3a8d99",
  "tool": "smartcheck",
  "start": 1563535800.7095087,
  "end": 1563535808.3555164,
  "duration": 7.646007776260376,
  "analysis": [
    {
      "name": "SOLIDITY_LOCKED_MONEY",
      "patternId": "30281d",
      "severity": 3,
      "line": 133,
      "column": 0,
      "content": "contractHashedTimelock{usingSafeMathforuint256;eventLogHTLCNew(bytes32indexedcontractId,addressindexedsender,addressindexedreceiver,uintamount,uinttimelock);eventLogHTLCWithdraw(bytes32indexedcontractId,bytes32preimage);eventLogHTLCRefund(bytes32indexedcontractId);structLockContract{addresspayablesender;addresspayablereceiver;uintamount;uinttimelock;boolwithdrawn;boolrefunded;bytes32preimage;}modifierfundsSent(){require(msg.value>0,\"msg.value must be > 0\");_;}modifierfutureTimelock(uint_time){require(_time>now+1hours,\"timelock time must be in the future\");_;}modifiercontractExists(bytes32_contractId){require(haveContract(_contractId),\"contractId does not exist\");_;}modifierhashlockMatches(bytes32_contractId,bytes32_x){require(_contractId==keccak256(abi.encodePacked(_x)),\"hashlock hash does not match\");_;}modifierwithdrawable(bytes32_contractId){require(contracts[_contractId].withdrawn==false,\"withdrawable: already withdrawn\");require(contracts[_contractId].refunded==false,\"withdrawable: already refunded\");_;}modifierrefundable(bytes32_contractId){require(contracts[_contractId].sender==msg.sender,\"refundable: not sender\");require(contracts[_contractId].refunded==false,\"refundable: already refunded\");require(contracts[_contractId].withdrawn==false,\"refundable: already withdrawn\");require(contracts[_contractId].timelock<=now,\"refundable: timelock not yet passed\");_;}modifieronlyOwner(){require(msg.sender==owner,\"you are not an owner\");_;}mapping(bytes32=>LockContract)contracts;uint256publicfeePercent;uintoneHundredPercent=10000;addresspayablepublicowner;uintfeeToWithdraw;constructor(addresspayable_owner,uint256_feePercent)public{feePercent=_feePercent;owner=_owner;}"
    },
    {
      "name": "SOLIDITY_PRAGMAS_VERSION",
      "patternId": "23fc32",
      "severity": 1,
      "line": 17,
      "column": 16,
      "content": "^"
    },
    {
      "name": "SOLIDITY_PRAGMAS_VERSION",
      "patternId": "23fc32",
      "severity": 1,
      "line": 85,
      "column": 16,
      "content": "^"
    },
    {
      "name": "SOLIDITY_SAFEMATH",
      "patternId": "837cac",
      "severity": 1,
      "line": 135,
      "column": 4,
      "content": "usingSafeMathforuint256;"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": 910067,
      "severity": 1,
      "line": 203,
      "column": 4,
      "content": "constructor(addresspayable"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 197,
      "column": 4,
      "content": "mapping(bytes32=>LockContract)contracts;"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 199,
      "column": 4,
      "content": "uintoneHundredPercent=10000;"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 201,
      "column": 4,
      "content": "uintfeeToWithdraw;"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 203,
      "column": 32,
      "content": "_owner,"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 203,
      "column": 40,
      "content": "uint256_feePercent)public{"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 204,
      "column": 8,
      "content": "feePercent=_feePercent;"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 205,
      "column": 8,
      "content": "owner=_owner;"
    }
  ]
}