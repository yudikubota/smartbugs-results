{
  "contract": "0xdbdf54969a4e943bb8c7dd9f04ea853bca018301",
  "tool": "smartcheck",
  "start": 1563325828.347732,
  "end": 1563325858.713845,
  "duration": 30.36611294746399,
  "analysis": [
    {
      "name": "SOLIDITY_ADDRESS_HARDCODED",
      "patternId": "adc165",
      "severity": 1,
      "line": 472,
      "column": 35,
      "content": "0xF9BaaA91e617dF1dE6c2386b789B401c422E9AB1"
    },
    {
      "name": "SOLIDITY_ADDRESS_HARDCODED",
      "patternId": "adc165",
      "severity": 1,
      "line": 473,
      "column": 35,
      "content": "0xA3Ad4EFDd5719eAed1B0F2e12c0D7368a6D11037"
    },
    {
      "name": "SOLIDITY_DEPRECATED_CONSTRUCTIONS",
      "patternId": "28fa69",
      "severity": 1,
      "line": 41,
      "column": 4,
      "content": "functioncanCall(addresssrc,addressdst,bytes4sig)publicconstantreturns(bool);"
    },
    {
      "name": "SOLIDITY_DEPRECATED_CONSTRUCTIONS",
      "patternId": "28fa69",
      "severity": 1,
      "line": 532,
      "column": 4,
      "content": "functiontime()publicconstantreturns(uint){returnblock.timestamp;}"
    },
    {
      "name": "SOLIDITY_DEPRECATED_CONSTRUCTIONS",
      "patternId": "28fa69",
      "severity": 1,
      "line": 536,
      "column": 4,
      "content": "functioncurrRound()publicconstantreturns(uint){returnroundFor(time());}"
    },
    {
      "name": "SOLIDITY_DEPRECATED_CONSTRUCTIONS",
      "patternId": "28fa69",
      "severity": 1,
      "line": 540,
      "column": 4,
      "content": "functionroundFor(uinttimestamp)publicconstantreturns(uint){returntimestamp<startTime?0:sub(timestamp,startTime)/71hours+1;}"
    },
    {
      "name": "SOLIDITY_DEPRECATED_CONSTRUCTIONS",
      "patternId": "28fa69",
      "severity": 1,
      "line": 546,
      "column": 4,
      "content": "functioncreateOnRound(uintround)publicconstantreturns(uint){returnround==0?createFirstRound:createPerRound;}"
    },
    {
      "name": "SOLIDITY_ERC20_APPROVE",
      "patternId": "af782c",
      "severity": 2,
      "line": 358,
      "column": 4,
      "content": "functionapprove(addressguy,uint256wad)publicreturns(bool){_approvals[msg.sender][guy]=wad;emitApproval(msg.sender,guy,wad);returntrue;}"
    },
    {
      "name": "SOLIDITY_ERC20_APPROVE",
      "patternId": "af782c",
      "severity": 2,
      "line": 388,
      "column": 4,
      "content": "functionapprove(addressguy,uintwad)publicstoppablenotereturns(bool){returnsuper.approve(guy,wad);}"
    },
    {
      "name": "SOLIDITY_EXTRA_GAS_IN_LOOPS",
      "patternId": "d3j11j",
      "severity": 1,
      "line": 428,
      "column": 8,
      "content": "for(uint256i=0;i<addresses.length;i++){adminlist[addresses[i]]=true;}"
    },
    {
      "name": "SOLIDITY_EXTRA_GAS_IN_LOOPS",
      "patternId": "d3j11j",
      "severity": 1,
      "line": 436,
      "column": 8,
      "content": "for(uint256i=0;i<addresses.length;i++){adminlist[addresses[i]]=false;}"
    },
    {
      "name": "SOLIDITY_EXTRA_GAS_IN_LOOPS",
      "patternId": "d3j11j",
      "severity": 1,
      "line": 444,
      "column": 8,
      "content": "for(uint256i=0;i<addresses.length;i++){whitelist[addresses[i]]=true;}"
    },
    {
      "name": "SOLIDITY_EXTRA_GAS_IN_LOOPS",
      "patternId": "d3j11j",
      "severity": 1,
      "line": 452,
      "column": 8,
      "content": "for(uint256i=0;i<addresses.length;i++){whitelist[addresses[i]]=false;}"
    },
    {
      "name": "SOLIDITY_EXTRA_GAS_IN_LOOPS",
      "patternId": "d3j11j",
      "severity": 1,
      "line": 587,
      "column": 8,
      "content": "for(uinti=0;i<userBuysArray[round].length;i++){addresstarget=userBuysArray[round][i];if(target==msg.sender){founded=true;break;}}"
    },
    {
      "name": "SOLIDITY_GAS_LIMIT_IN_LOOPS",
      "patternId": "f6f853",
      "severity": 2,
      "line": 428,
      "column": 8,
      "content": "for(uint256i=0;i<addresses.length;i++){adminlist[addresses[i]]=true;}"
    },
    {
      "name": "SOLIDITY_GAS_LIMIT_IN_LOOPS",
      "patternId": "f6f853",
      "severity": 2,
      "line": 436,
      "column": 8,
      "content": "for(uint256i=0;i<addresses.length;i++){adminlist[addresses[i]]=false;}"
    },
    {
      "name": "SOLIDITY_GAS_LIMIT_IN_LOOPS",
      "patternId": "f6f853",
      "severity": 2,
      "line": 444,
      "column": 8,
      "content": "for(uint256i=0;i<addresses.length;i++){whitelist[addresses[i]]=true;}"
    },
    {
      "name": "SOLIDITY_GAS_LIMIT_IN_LOOPS",
      "patternId": "f6f853",
      "severity": 2,
      "line": 452,
      "column": 8,
      "content": "for(uint256i=0;i<addresses.length;i++){whitelist[addresses[i]]=false;}"
    },
    {
      "name": "SOLIDITY_GAS_LIMIT_IN_LOOPS",
      "patternId": "f6f853",
      "severity": 2,
      "line": 587,
      "column": 8,
      "content": "for(uinti=0;i<userBuysArray[round].length;i++){addresstarget=userBuysArray[round][i];if(target==msg.sender){founded=true;break;}}"
    },
    {
      "name": "SOLIDITY_GAS_LIMIT_IN_LOOPS",
      "patternId": "f6f853",
      "severity": 2,
      "line": 604,
      "column": 8,
      "content": "for(uinti=0;i<arrayLength;i++){claimAddress(addresses[i],round);}"
    },
    {
      "name": "SOLIDITY_LOCKED_MONEY",
      "patternId": "30281d",
      "severity": 3,
      "line": 459,
      "column": 0,
      "content": "contractONOSaleisDSExec,DSMath,DSAuthList{DSTokenpublicONO;uint128publictotalSupply;uint128publicfoundersAllocation;stringpublicfoundersKey;uintpublicopenTime;uintpubliccreateFirstRound;uintpublicstartTime;uintpublicnumberOfRounds;uintpubliccreatePerRound;addresspublicfounderAddr=0xF9BaaA91e617dF1dE6c2386b789B401c422E9AB1;addresspublicburnAddr=0xA3Ad4EFDd5719eAed1B0F2e12c0D7368a6D11037;mapping(uint=>uint)publicdailyTotals;mapping(uint=>mapping(address=>uint))publicuserBuys;mapping(uint=>mapping(address=>bool))publicclaimed;mapping(address=>string)publickeys;mapping(uint=>address[])publicuserBuysArray;mapping(uint=>bool)publicburned;eventLogBuy(uintwindow,addressuser,uintamount);eventLogClaim(uintwindow,addressuser,uintamount);eventLogMint(addressuser,uintamount);eventLogBurn(uintwindow,addressuser,uintamount);eventLogRegister(addressuser,stringkey);eventLogCollect(uintamount);constructor(uint_numberOfRounds,uint128_totalSupply,uint128_firstRoundSupply,uint_openTime,uint_startTime,uint128_foundersAllocation,string_foundersKey)public{numberOfRounds=_numberOfRounds;totalSupply=_totalSupply;openTime=_openTime;startTime=_startTime;foundersAllocation=_foundersAllocation;foundersKey=_foundersKey;createFirstRound=_firstRoundSupply;createPerRound=div(sub(sub(totalSupply,foundersAllocation),createFirstRound),numberOfRounds);assert(numberOfRounds>0);assert(totalSupply>foundersAllocation);assert(openTime<startTime);}functioninitialize(DSTokenono)publicauth{assert(address(ONO)==address(0));assert(ono.owner()==address(this));assert(ono.authority()==DSAuthority(0));assert(ono.totalSupply()==0);ONO=ono;ONO.mint(totalSupply);ONO.push(founderAddr,foundersAllocation);keys[founderAddr]=foundersKey;emitLogRegister(founderAddr,foundersKey);}functiontime()publicconstantreturns(uint){returnblock.timestamp;}functioncurrRound()publicconstantreturns(uint){returnroundFor(time());}functionroundFor(uinttimestamp)publicconstantreturns(uint){returntimestamp<startTime?0:sub(timestamp,startTime)/71hours+1;}functioncreateOnRound(uintround)publicconstantreturns(uint){returnround==0?createFirstRound:createPerRound;}function()publicpayable{buy();}functionclaim(uintround)public{claimAddress(msg.sender,round);}functionclaimAll()public{for(uinti=0;i<currRound();i++){claim(i);}}functionregister(stringkey)public{assert(currRound()<=numberOfRounds+1);assert(bytes(key).length<=64);keys[msg.sender]=key;emitLogRegister(msg.sender,key);}functionbuy()publicpayableonlyIfWhitelisted{uintround=currRound();assert(time()>=openTime&&round<=numberOfRounds);assert(msg.value>=1ether);userBuys[round][msg.sender]=add(userBuys[round][msg.sender],msg.value);dailyTotals[round]=add(dailyTotals[round],msg.value);boolfounded=false;for(uinti=0;i<userBuysArray[round].length;i++){addresstarget=userBuysArray[round][i];if(target==msg.sender){founded=true;break;}}if(founded==false){userBuysArray[round].push(msg.sender);}emitLogBuy(round,msg.sender,msg.value);}functionclaimAddresses(address[]addresses,uintround)publiconlyIfAdmin{uintarrayLength=addresses.length;for(uinti=0;i<arrayLength;i++){claimAddress(addresses[i],round);}}functionclaimAddress(addressaddr,uintround)public{assert(currRound()>round);if(claimed[round][addr]||dailyTotals[round]==0){return;}uint128dailyTotal=cast(dailyTotals[round]);uint128userTotal=cast(userBuys[round][addr]);uint128price=wdiv(cast(createOnRound(round)),dailyTotal);uint128minPrice=wdiv(600000,1);if(price>minPrice){price=minPrice;}uint128reward=wmul(price,userTotal);claimed[round][addr]=true;ONO.push(addr,reward);emitLogClaim(round,addr,reward);}functionmint(uint128deltaSupply)publicauth{ONO.mint(deltaSupply);ONO.push(founderAddr,deltaSupply);emitLogMint(founderAddr,deltaSupply);}functionburn(uintround)publiconlyIfAdmin{assert(time()>=openTime&&round<=numberOfRounds);assert(currRound()>round);assert(burned[round]==false);uint128dailyTotalEth=cast(dailyTotals[round]);uint128dailyTotalToken=cast(createOnRound(round));if(dailyTotalEth==0){burned[round]=true;ONO.push(burnAddr,dailyTotalToken);emitLogBurn(round,burnAddr,dailyTotalToken);}else{uint128price=wdiv(dailyTotalToken,dailyTotalEth);uint128minPrice=wdiv(600000,1);if(price>minPrice){price=minPrice;uint128totalReward=wmul(price,dailyTotalEth);assert(dailyTotalToken>totalReward);burned[round]=true;ONO.push(burnAddr,wsub(dailyTotalToken,totalReward));emitLogBurn(round,burnAddr,wsub(dailyTotalToken,totalReward));}else{burned[round]=true;}}}functioncollect()publicauth{assert(currRound()>0);exec(msg.sender,address(this).balance);emitLogCollect(address(this).balance);}functionstart()publicauth{ONO.start();}functionstop()publicauth{ONO.stop();}}"
    },
    {
      "name": "SOLIDITY_PRAGMAS_VERSION",
      "patternId": "23fc32",
      "severity": 1,
      "line": 1,
      "column": 16,
      "content": "^"
    },
    {
      "name": "SOLIDITY_REVERT_REQUIRE",
      "patternId": "c56b12",
      "severity": 1,
      "line": 107,
      "column": 8,
      "content": "if(!tryExec(target,calldata,value)){revert();}"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "91h3sa",
      "severity": 1,
      "line": 550,
      "column": 16,
      "content": "public"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 98,
      "column": 38,
      "content": "bytescalldata"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 104,
      "column": 35,
      "content": "bytescalldata"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 113,
      "column": 30,
      "content": "bytesc"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 123,
      "column": 33,
      "content": "bytesc"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 426,
      "column": 26,
      "content": "address[]addresses"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 434,
      "column": 29,
      "content": "address[]addresses"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 442,
      "column": 26,
      "content": "address[]addresses"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 450,
      "column": 29,
      "content": "address[]addresses"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 497,
      "column": 8,
      "content": "string_foundersKey"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 567,
      "column": 22,
      "content": "stringkey"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 602,
      "column": 28,
      "content": "address[]addresses"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 16,
      "column": 8,
      "content": "assembly{foo:=calldataload(4)bar:=calldataload(36)}"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 210,
      "column": 4,
      "content": "uint128constantWAD=10**18;"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 239,
      "column": 4,
      "content": "uint128constantRAY=10**27;"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 315,
      "column": 4,
      "content": "uint256_supply;"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 316,
      "column": 4,
      "content": "mapping(address=>uint256)_balances;"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 317,
      "column": 4,
      "content": "mapping(address=>mapping(address=>uint256))_approvals;"
    }
  ]
}