{
  "contract": "0x1cabc34618ecf2949f0405a86353e7705e01c38b",
  "tool": "smartcheck",
  "start": 1563422568.054271,
  "end": 1563422583.5001082,
  "duration": 15.445837259292603,
  "analysis": [
    {
      "name": "SOLIDITY_ADDRESS_HARDCODED",
      "patternId": "a91b18",
      "severity": 1,
      "line": 288,
      "column": 13,
      "content": "(address(0))"
    },
    {
      "name": "SOLIDITY_ADDRESS_HARDCODED",
      "patternId": "a91b18",
      "severity": 1,
      "line": 308,
      "column": 13,
      "content": "(address(0))"
    },
    {
      "name": "SOLIDITY_ERC20_APPROVE",
      "patternId": "af782c",
      "severity": 2,
      "line": 391,
      "column": 4,
      "content": "functionapprove(address_spender,uint256amount)externalreturns(bool){require(_spender!=0x0,\"spender must be set\");allowed[msg.sender][_spender]=amount;emitApproval(msg.sender,_spender,amount);returntrue;}"
    },
    {
      "name": "SOLIDITY_EXTRA_GAS_IN_LOOPS",
      "patternId": "d3j11j",
      "severity": 1,
      "line": 926,
      "column": 8,
      "content": "for(uint256i=0;i<symbols.length;i++){rates[symbols[i]]=RateInfo(newRates[i],now);emitRateChanged(symbols[i],newRates[i]);}"
    },
    {
      "name": "SOLIDITY_EXTRA_GAS_IN_LOOPS",
      "patternId": "d3j11j",
      "severity": 1,
      "line": 1096,
      "column": 8,
      "content": "for(uinti=0;i<loanIds.length;i++){require(loanIds[i]<loans.length,\"invalid loanId\");LoanDatastorageloan=loans[loanIds[i]];require(loan.state==LoanState.Open,\"loan state must be Open\");require(now>=loan.maturity,\"current time must be later than maturity\");LoanProductstorageproduct=products[loan.productId];uintloanAmount;(loanAmount,)=calculateLoanValues(product,loan.repaymentAmount);totalLoanAmountCollected=totalLoanAmountCollected.add(loanAmount);loan.state=LoanState.Collected;uintdefaultingFeeInToken=loan.repaymentAmount.mul(product.defaultingFeePt).div(1000000);uintdefaultingFee=rates.convertToWei(augmintToken.peggedSymbol(),defaultingFeeInToken);uinttargetCollection=rates.convertToWei(augmintToken.peggedSymbol(),loan.repaymentAmount).add(defaultingFee);uintreleasedCollateral;if(targetCollection<loan.collateralAmount){releasedCollateral=loan.collateralAmount.sub(targetCollection);loan.borrower.transfer(releasedCollateral);}uintcollateralToCollect=loan.collateralAmount.sub(releasedCollateral);if(defaultingFee>=collateralToCollect){defaultingFee=collateralToCollect;collateralToCollect=0;}else{collateralToCollect=collateralToCollect.sub(defaultingFee);}totalDefaultingFee=totalDefaultingFee.add(defaultingFee);totalCollateralToCollect=totalCollateralToCollect.add(collateralToCollect);emitLoanCollected(loanIds[i],loan.borrower,collateralToCollect.add(defaultingFee),releasedCollateral,defaultingFee);}"
    },
    {
      "name": "SOLIDITY_GAS_LIMIT_IN_LOOPS",
      "patternId": "f6f853",
      "severity": 2,
      "line": 51,
      "column": 8,
      "content": "for(uint256i=0;i<length;i++){grantPermission(agent,requiredPermissions[i]);}"
    },
    {
      "name": "SOLIDITY_GAS_LIMIT_IN_LOOPS",
      "patternId": "f6f853",
      "severity": 2,
      "line": 65,
      "column": 8,
      "content": "for(uint256i=0;i<length;i++){revokePermission(agent,requiredPermissions[i]);}"
    },
    {
      "name": "SOLIDITY_GAS_LIMIT_IN_LOOPS",
      "patternId": "f6f853",
      "severity": 2,
      "line": 926,
      "column": 8,
      "content": "for(uint256i=0;i<symbols.length;i++){rates[symbols[i]]=RateInfo(newRates[i],now);emitRateChanged(symbols[i],newRates[i]);}"
    },
    {
      "name": "SOLIDITY_GAS_LIMIT_IN_LOOPS",
      "patternId": "f6f853",
      "severity": 2,
      "line": 1096,
      "column": 8,
      "content": "for(uinti=0;i<loanIds.length;i++){require(loanIds[i]<loans.length,\"invalid loanId\");LoanDatastorageloan=loans[loanIds[i]];require(loan.state==LoanState.Open,\"loan state must be Open\");require(now>=loan.maturity,\"current time must be later than maturity\");LoanProductstorageproduct=products[loan.productId];uintloanAmount;(loanAmount,)=calculateLoanValues(product,loan.repaymentAmount);totalLoanAmountCollected=totalLoanAmountCollected.add(loanAmount);loan.state=LoanState.Collected;uintdefaultingFeeInToken=loan.repaymentAmount.mul(product.defaultingFeePt).div(1000000);uintdefaultingFee=rates.convertToWei(augmintToken.peggedSymbol(),defaultingFeeInToken);uinttargetCollection=rates.convertToWei(augmintToken.peggedSymbol(),loan.repaymentAmount).add(defaultingFee);uintreleasedCollateral;if(targetCollection<loan.collateralAmount){releasedCollateral=loan.collateralAmount.sub(targetCollection);loan.borrower.transfer(releasedCollateral);}uintcollateralToCollect=loan.collateralAmount.sub(releasedCollateral);if(defaultingFee>=collateralToCollect){defaultingFee=collateralToCollect;collateralToCollect=0;}else{collateralToCollect=collateralToCollect.sub(defaultingFee);}totalDefaultingFee=totalDefaultingFee.add(defaultingFee);totalCollateralToCollect=totalCollateralToCollect.add(collateralToCollect);emitLoanCollected(loanIds[i],loan.borrower,collateralToCollect.add(defaultingFee),releasedCollateral,defaultingFee);}"
    },
    {
      "name": "SOLIDITY_SAFEMATH",
      "patternId": "837cac",
      "severity": 1,
      "line": 196,
      "column": 4,
      "content": "usingSafeMathforuint256;"
    },
    {
      "name": "SOLIDITY_SAFEMATH",
      "patternId": "837cac",
      "severity": 1,
      "line": 675,
      "column": 4,
      "content": "usingSafeMathforuint256;"
    },
    {
      "name": "SOLIDITY_SAFEMATH",
      "patternId": "837cac",
      "severity": 1,
      "line": 904,
      "column": 4,
      "content": "usingSafeMathforuint256;"
    },
    {
      "name": "SOLIDITY_SAFEMATH",
      "patternId": "837cac",
      "severity": 1,
      "line": 966,
      "column": 4,
      "content": "usingSafeMathforuint256;"
    },
    {
      "name": "SOLIDITY_SHOULD_NOT_BE_PURE",
      "patternId": "11314f",
      "severity": 1,
      "line": 277,
      "column": 2,
      "content": "functionrecover(bytes32hash,bytessig)internalpurereturns(address){bytes32r;bytes32s;uint8v;if(sig.length!=65){return(address(0));}assembly{r:=mload(add(sig,32))s:=mload(add(sig,64))v:=byte(0,mload(add(sig,96)))}if(v<27){v+=27;}if(v!=27&&v!=28){return(address(0));}else{returnecrecover(hash,v,r,s);}}"
    },
    {
      "name": "SOLIDITY_SHOULD_RETURN_STRUCT",
      "patternId": "7d54ca",
      "severity": 1,
      "line": 1231,
      "column": 26,
      "content": "(uintloanAmount,uintinterestAmount)"
    },
    {
      "name": "SOLIDITY_TRANSFER_IN_LOOP",
      "patternId": "8jdj43",
      "severity": 2,
      "line": 1096,
      "column": 8,
      "content": "for(uinti=0;i<loanIds.length;i++){require(loanIds[i]<loans.length,\"invalid loanId\");LoanDatastorageloan=loans[loanIds[i]];require(loan.state==LoanState.Open,\"loan state must be Open\");require(now>=loan.maturity,\"current time must be later than maturity\");LoanProductstorageproduct=products[loan.productId];uintloanAmount;(loanAmount,)=calculateLoanValues(product,loan.repaymentAmount);totalLoanAmountCollected=totalLoanAmountCollected.add(loanAmount);loan.state=LoanState.Collected;uintdefaultingFeeInToken=loan.repaymentAmount.mul(product.defaultingFeePt).div(1000000);uintdefaultingFee=rates.convertToWei(augmintToken.peggedSymbol(),defaultingFeeInToken);uinttargetCollection=rates.convertToWei(augmintToken.peggedSymbol(),loan.repaymentAmount).add(defaultingFee);uintreleasedCollateral;if(targetCollection<loan.collateralAmount){releasedCollateral=loan.collateralAmount.sub(targetCollection);loan.borrower.transfer(releasedCollateral);}uintcollateralToCollect=loan.collateralAmount.sub(releasedCollateral);if(defaultingFee>=collateralToCollect){defaultingFee=collateralToCollect;collateralToCollect=0;}else{collateralToCollect=collateralToCollect.sub(defaultingFee);}totalDefaultingFee=totalDefaultingFee.add(defaultingFee);totalCollateralToCollect=totalCollateralToCollect.add(collateralToCollect);emitLoanCollected(loanIds[i],loan.borrower,collateralToCollect.add(defaultingFee),releasedCollateral,defaultingFee);}"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 47,
      "column": 53,
      "content": "bytes32[]requiredPermissions"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 63,
      "column": 54,
      "content": "bytes32[]requiredPermissions"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 277,
      "column": 33,
      "content": "bytessig"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 355,
      "column": 51,
      "content": "string_name"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 355,
      "column": 65,
      "content": "string_symbol"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 516,
      "column": 62,
      "content": "bytessignature"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 528,
      "column": 69,
      "content": "stringnarrative"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 542,
      "column": 70,
      "content": "stringnarrative"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 547,
      "column": 70,
      "content": "stringnarrative"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 295,
      "column": 4,
      "content": "assembly{r:=mload(add(sig,32))s:=mload(add(sig,64))v:=byte(0,mload(add(sig,96)))}"
    }
  ]
}