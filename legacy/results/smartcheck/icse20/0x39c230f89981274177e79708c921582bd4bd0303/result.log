/unique_contracts/0x39c230f89981274177e79708c921582bd4bd0303.sol
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 483
column: 8
content: for(uint256_i=0;_i<_data.contracts.shortShareTokens.length;++_i){_data.contracts.shortShareTokens[_i].trustedFillOrderTransfer(getShortShareSellerSource(_data),this,_numberOfCompleteSets);}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 515
column: 12
content: for(uint256_i=0;_i<_data.contracts.shortShareTokens.length;++_i){_data.contracts.shortShareTokens[_i].trustedFillOrderTransfer(_data.contracts.market,_data.filler.participantAddress,_numberOfSharesToTrade);}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 539
column: 12
content: for(uint256_i=0;_i<_data.contracts.shortShareTokens.length;++_i){_data.contracts.shortShareTokens[_i].trustedFillOrderTransfer(_data.filler.participantAddress,_data.creator.participantAddress,_numberOfSharesToTrade);}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 587
column: 8
content: for(uint256_i=0;_i<_data.contracts.shortShareTokens.length;++_i){require(_data.contracts.shortShareTokens[_i].transfer(_shortBuyer,_numberOfCompleteSets));}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 717
column: 8
content: for(uint256_outcome=0;_outcome<_shortShareTokens.length+1;++_outcome){if(_outcome==_longOutcome){continue;}uint256_index=(_outcome<_longOutcome)?_outcome:_outcome-1;_shortShareTokens[_index]=_market.getShareToken(_outcome);}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 739
column: 12
content: for(uint256_outcome=0;_outcome<_shortShareTokens.length;++_outcome){_sharesAvailable=_shortShareTokens[_outcome].balanceOf(_filler).min(_sharesAvailable);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 483
column: 8
content: for(uint256_i=0;_i<_data.contracts.shortShareTokens.length;++_i){_data.contracts.shortShareTokens[_i].trustedFillOrderTransfer(getShortShareSellerSource(_data),this,_numberOfCompleteSets);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 515
column: 12
content: for(uint256_i=0;_i<_data.contracts.shortShareTokens.length;++_i){_data.contracts.shortShareTokens[_i].trustedFillOrderTransfer(_data.contracts.market,_data.filler.participantAddress,_numberOfSharesToTrade);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 539
column: 12
content: for(uint256_i=0;_i<_data.contracts.shortShareTokens.length;++_i){_data.contracts.shortShareTokens[_i].trustedFillOrderTransfer(_data.filler.participantAddress,_data.creator.participantAddress,_numberOfSharesToTrade);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 587
column: 8
content: for(uint256_i=0;_i<_data.contracts.shortShareTokens.length;++_i){require(_data.contracts.shortShareTokens[_i].transfer(_shortBuyer,_numberOfCompleteSets));}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 739
column: 12
content: for(uint256_outcome=0;_outcome<_shortShareTokens.length;++_outcome){_sharesAvailable=_shortShareTokens[_outcome].balanceOf(_filler).min(_sharesAvailable);}

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 292
column: 0
content: contractIMailbox{functioninitialize(address_owner,IMarket_market)publicreturns(bool);functiondepositEther()publicpayablereturns(bool);}

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 297
column: 0
content: contractIMarketisITyped,IOwnable{enumMarketType{YES_NO,CATEGORICAL,SCALAR}functioninitialize(IUniverse_universe,uint256_endTime,uint256_feePerEthInAttoeth,ICash_cash,address_designatedReporterAddress,address_creator,uint256_numOutcomes,uint256_numTicks)publicpayablereturns(bool_success);functionderivePayoutDistributionHash(uint256[]_payoutNumerators,bool_invalid)publicviewreturns(bytes32);functiongetUniverse()publicviewreturns(IUniverse);functiongetFeeWindow()publicviewreturns(IFeeWindow);functiongetNumberOfOutcomes()publicviewreturns(uint256);functiongetNumTicks()publicviewreturns(uint256);functiongetDenominationToken()publicviewreturns(ICash);functiongetShareToken(uint256_outcome)publicviewreturns(IShareToken);functiongetMarketCreatorSettlementFeeDivisor()publicviewreturns(uint256);functiongetForkingMarket()publicviewreturns(IMarket_market);functiongetEndTime()publicviewreturns(uint256);functiongetMarketCreatorMailbox()publicviewreturns(IMailbox);functiongetWinningPayoutDistributionHash()publicviewreturns(bytes32);functiongetWinningPayoutNumerator(uint256_outcome)publicviewreturns(uint256);functiongetReputationToken()publicviewreturns(IReputationToken);functiongetFinalizationTime()publicviewreturns(uint256);functiongetInitialReporterAddress()publicviewreturns(address);functionderiveMarketCreatorFeeAmount(uint256_amount)publicviewreturns(uint256);functionisContainerForShareToken(IShareToken_shadyTarget)publicviewreturns(bool);functionisContainerForReportingParticipant(IReportingParticipant_reportingParticipant)publicviewreturns(bool);functionisInvalid()publicviewreturns(bool);functionfinalize()publicreturns(bool);functiondesignatedReporterWasCorrect()publicviewreturns(bool);functiondesignatedReporterShowed()publicviewreturns(bool);functionisFinalized()publicviewreturns(bool);functionfinalizeFork()publicreturns(bool);functionassertBalances()publicviewreturns(bool);}

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 747
column: 0
content: contractICashisERC20{functiondepositEther()externalpayablereturns(bool);functiondepositEtherFor(address_to)externalpayablereturns(bool);functionwithdrawEther(uint256_amount)externalreturns(bool);functionwithdrawEtherTo(address_to,uint256_amount)externalreturns(bool);functionwithdrawEtherToIfPossible(address_to,uint256_amount)externalreturns(bool);}

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 760
column: 0
content: contractIFillOrder{functionpublicFillOrder(bytes32_orderId,uint256_amountFillerWants,bytes32_tradeGroupId)externalpayablereturns(uint256);functionfillOrder(address_filler,bytes32_orderId,uint256_amountFillerWants,bytes32tradeGroupId)externalreturns(uint256);}

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 765
column: 0
content: contractFillOrderisCashAutoConverter,ReentrancyGuard,IFillOrder{usingSafeMathUint256foruint256;usingTradeforTrade.Data;functionpublicFillOrder(bytes32_orderId,uint256_amountFillerWants,bytes32_tradeGroupId)externalpayableconvertToAndFromCashonlyInGoodTimesreturns(uint256){uint256_result=this.fillOrder(msg.sender,_orderId,_amountFillerWants,_tradeGroupId);IMarket_market=IOrders(controller.lookup("Orders")).getMarket(_orderId);_market.assertBalances();return_result;}functionfillOrder(address_filler,bytes32_orderId,uint256_amountFillerWants,bytes32_tradeGroupId)externalonlyWhitelistedCallersnonReentrantreturns(uint256){Trade.Datamemory_tradeData=Trade.create(controller,_orderId,_filler,_amountFillerWants);uint256_marketCreatorFees;uint256_reporterFees;(_marketCreatorFees,_reporterFees)=_tradeData.tradeMakerSharesForFillerShares();_tradeData.tradeMakerSharesForFillerTokens();_tradeData.tradeMakerTokensForFillerShares();_tradeData.tradeMakerTokensForFillerTokens();uint256_creatorCashBalance=_tradeData.contracts.denominationToken.balanceOf(_tradeData.creator.participantAddress);bool_isOwnOrder=_tradeData.creator.participantAddress==_tradeData.filler.participantAddress;if(_creatorCashBalance>0&&!_isOwnOrder){_tradeData.contracts.augur.trustedTransfer(_tradeData.contracts.denominationToken,_tradeData.creator.participantAddress,this,_creatorCashBalance);_tradeData.contracts.denominationToken.withdrawEtherToIfPossible(_tradeData.creator.participantAddress,_creatorCashBalance);}uint256_amountRemainingFillerWants=_tradeData.filler.sharesToSell.add(_tradeData.filler.sharesToBuy);uint256_amountFilled=_amountFillerWants.sub(_amountRemainingFillerWants);logOrderFilled(_tradeData,_marketCreatorFees,_reporterFees,_amountFilled,_tradeGroupId);_tradeData.contracts.orders.recordFillOrder(_orderId,_tradeData.getMakerSharesDepleted(),_tradeData.getMakerTokensDepleted());return_amountRemainingFillerWants;}functionlogOrderFilled(Trade.Data_tradeData,uint256_marketCreatorFees,uint256_reporterFees,uint256_amountFilled,bytes32_tradeGroupId)privatereturns(bool){controller.getAugur().logOrderFilled(_tradeData.contracts.market.getUniverse(),_tradeData.contracts.market.getShareToken(_tradeData.order.outcome),_tradeData.filler.participantAddress,_tradeData.order.orderId,_tradeData.getMakerSharesDepleted(),_tradeData.getMakerTokensDepleted(),_tradeData.getFillerSharesDepleted(),_tradeData.getFillerTokensDepleted(),_marketCreatorFees,_reporterFees,_amountFilled,_tradeGroupId);returntrue;}}

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 145
column: 9
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 171
column: 9
content: private

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 7d54ca
severity: 1
line: 475
column: 74
content: (uint256,uint256)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 7d54ca
severity: 1
line: 727
column: 107
content: (uint256_sharePriceRange,uint256_sharePriceLong,uint256_sharePriceShort)

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 4
column: 72
content: uint256[]_parentPayoutNumerators

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 7
column: 46
content: string_description

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 7
column: 67
content: string_extraInfo

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 7
column: 148
content: bytes32[]_outcomes

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 8
column: 46
content: string_description

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 8
column: 67
content: string_extraInfo

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 9
column: 147
content: uint256[]_payoutNumerators

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 10
column: 108
content: uint256[]_payoutNumerators

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 13
column: 176
content: uint256[]_payoutNumerators

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 14
column: 180
content: uint256[]_payoutNumerators

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 305
column: 42
content: uint256[]_payoutNumerators

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 347
column: 88
content: uint256[]_payoutNumerators

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 369
column: 33
content: uint256[]_parentPayoutNumerators

SOLIDITY_LOCKED_MONEY :5
SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA :2
SOLIDITY_EXTRA_GAS_IN_LOOPS :6
SOLIDITY_UPGRADE_TO_050 :13
SOLIDITY_GAS_LIMIT_IN_LOOPS :5
SOLIDITY_SHOULD_RETURN_STRUCT :2