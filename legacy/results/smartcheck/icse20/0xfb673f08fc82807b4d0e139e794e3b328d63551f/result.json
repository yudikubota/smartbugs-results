{
  "contract": "0xfb673f08fc82807b4d0e139e794e3b328d63551f",
  "tool": "smartcheck",
  "start": 1563504881.5459185,
  "end": 1563504890.0445983,
  "duration": 8.498679876327515,
  "analysis": [
    {
      "name": "SOLIDITY_ERC20_APPROVE",
      "patternId": "af782c",
      "severity": 2,
      "line": 124,
      "column": 4,
      "content": "functionapprove(address_spender,uint256_value)publicreturns(bool){allowed[msg.sender][_spender]=_value;Approval(msg.sender,_spender,_value);returntrue;}"
    },
    {
      "name": "SOLIDITY_LOCKED_MONEY",
      "patternId": "30281d",
      "severity": 3,
      "line": 90,
      "column": 0,
      "content": "contractTokenTycoonIGOisAccessService{uint8publicdecimals=18;uint256publictotalSupply=850*(10**uint256(decimals));stringpublicname=\"Token Tycoon Coin\";stringpublicsymbol=\"TTC\";bytes32privateemptyHash;mapping(address=>uint256)balances;mapping(address=>mapping(address=>uint256))allowed;mapping(address=>string)addressToAccount;mapping(bytes32=>address)accHashToAddress;eventTransfer(addressindexed_from,addressindexed_to,uint256_value);eventApproval(addressindexed_owner,addressindexed_spender,uint256_value);eventBuyIGO(addressindexed_from,string_account,uint256_ethVal,uint256_tthVal);functionTokenTycoonIGO()public{addrAdmin=msg.sender;addrService=msg.sender;addrFinance=msg.sender;balances[this]=totalSupply;emptyHash=keccak256(\"\");}function()externalpayable{}functionbalanceOf(address_owner)externalviewreturns(uint256){returnbalances[_owner];}functionapprove(address_spender,uint256_value)publicreturns(bool){allowed[msg.sender][_spender]=_value;Approval(msg.sender,_spender,_value);returntrue;}functionallowance(address_owner,address_spender)externalviewreturns(uint256){returnallowed[_owner][_spender];}functiontransferFrom(address_from,address_to,uint256_value)externalreturns(bool){require(_value<=allowed[_from][msg.sender]);allowed[_from][msg.sender]-=_value;return_transfer(_from,_to,_value);}functiontransfer(address_to,uint256_value)externalreturns(bool){return_transfer(msg.sender,_to,_value);}functionapproveAndCall(address_spender,uint256_value,bytes_extraData)externalreturns(boolsuccess){tokenRecipientspender=tokenRecipient(_spender);if(approve(_spender,_value)){spender.receiveApproval(msg.sender,_value,this,_extraData);returntrue;}}function_transfer(address_from,address_to,uint256_value)internalreturns(bool){require(_to!=address(0));uint256oldFromVal=balances[_from];require(_value>0&&oldFromVal>=_value);uint256oldToVal=balances[_to];uint256newToVal=oldToVal+_value;require(newToVal>oldToVal);uint256newFromVal=oldFromVal-_value;balances[_from]=newFromVal;balances[_to]=newToVal;assert((oldFromVal+oldToVal)==(newFromVal+newToVal));Transfer(_from,_to,_value);returntrue;}functionbuy(string_account)externalpayablewhenNotPaused{uint256val=msg.value;uint256tthVal;if(val==1ether){tthVal=1100000000000000000;}elseif(val==3ether){tthVal=3600000000000000000;}elseif(val==5ether){tthVal=6500000000000000000;}elseif(val==10ether){tthVal=15000000000000000000;}elseif(val==20ether){tthVal=34000000000000000000;}else{require(false);}uint256b=balances[this];require(b>=tthVal);bytes32hashAccount=keccak256(_account);require(hashAccount!=emptyHash);addresspreAddr=accHashToAddress[hashAccount];stringstoragepreAcc=addressToAccount[msg.sender];bytes32hashPreAcc=keccak256(preAcc);if(preAddr==address(0)){require(hashPreAcc==emptyHash);accHashToAddress[hashAccount]=msg.sender;addressToAccount[msg.sender]=_account;_transfer(this,msg.sender,tthVal);}elseif(preAddr==msg.sender){require(hashPreAcc==hashAccount);_transfer(this,msg.sender,tthVal);}else{require(false);}BuyIGO(msg.sender,_account,val,tthVal);}functiongetCanSellBalance()externalviewreturns(uint256){returnbalances[this];}functiongetBalanceByAccount(string_account)externalviewreturns(uint256){bytes32hashAccount=keccak256(_account);addressaddr=accHashToAddress[hashAccount];if(addr==address(0)){return0;}else{returnbalances[addr];}}functiongetIGOAccoountByAddr(address_addr)externalviewreturns(string){returnaddressToAccount[_addr];}}"
    },
    {
      "name": "SOLIDITY_OVERPOWERED_ROLE",
      "patternId": "j83hf7",
      "severity": 2,
      "line": 59,
      "column": 4,
      "content": "functionsetService(address_newService)external{require(msg.sender==addrService||msg.sender==addrAdmin);require(_newService!=address(0));addrService=_newService;}"
    },
    {
      "name": "SOLIDITY_OVERPOWERED_ROLE",
      "patternId": "j83hf7",
      "severity": 2,
      "line": 65,
      "column": 4,
      "content": "functionsetFinance(address_newFinance)external{require(msg.sender==addrFinance||msg.sender==addrAdmin);require(_newFinance!=address(0));addrFinance=_newFinance;}"
    },
    {
      "name": "SOLIDITY_PRAGMAS_VERSION",
      "patternId": "23fc32",
      "severity": 1,
      "line": 1,
      "column": 16,
      "content": "^"
    },
    {
      "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
      "patternId": "5616b2",
      "severity": 1,
      "line": 95,
      "column": 12,
      "content": "private"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 97,
      "column": 4,
      "content": "mapping(address=>uint256)balances;"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 98,
      "column": 4,
      "content": "mapping(address=>mapping(address=>uint256))allowed;"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 99,
      "column": 4,
      "content": "mapping(address=>string)addressToAccount;"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 100,
      "column": 4,
      "content": "mapping(bytes32=>address)accHashToAddress;"
    }
  ]
}