{
  "contract": "0xf78b9722b3e3bf3fa07a4132cea8dbd407ed4e38",
  "tool": "smartcheck",
  "start": 1563698598.3668172,
  "end": 1563698611.0247195,
  "duration": 12.657902240753174,
  "analysis": [
    {
      "name": "SOLIDITY_ADDRESS_HARDCODED",
      "patternId": "b140cd",
      "severity": 1,
      "line": 495,
      "column": 46,
      "content": "0x01ffc9a7"
    },
    {
      "name": "SOLIDITY_ADDRESS_HARDCODED",
      "patternId": "b140cd",
      "severity": 1,
      "line": 533,
      "column": 28,
      "content": "0xffffffff"
    },
    {
      "name": "SOLIDITY_ADDRESS_HARDCODED",
      "patternId": "b140cd",
      "severity": 1,
      "line": 596,
      "column": 58,
      "content": "0xd5c368b6"
    },
    {
      "name": "SOLIDITY_ADDRESS_HARDCODED",
      "patternId": "b140cd",
      "severity": 1,
      "line": 786,
      "column": 53,
      "content": "0x81624e24"
    },
    {
      "name": "SOLIDITY_ADDRESS_HARDCODED",
      "patternId": "a91b18",
      "severity": 1,
      "line": 45,
      "column": 4,
      "content": "owner=address(0)"
    },
    {
      "name": "SOLIDITY_ARRAY_LENGTH_MANIPULATION",
      "patternId": "872bdd",
      "severity": 1,
      "line": 560,
      "column": 8,
      "content": "_sendersStack.length-=1"
    },
    {
      "name": "SOLIDITY_DIV_MUL",
      "patternId": "09hhh1",
      "severity": 2,
      "line": 846,
      "column": 16,
      "content": "amount.mul(_weights[fromToken]).div(_minimalWeight).add(fromBalance).mul(_weights[toToken])"
    },
    {
      "name": "SOLIDITY_DIV_MUL",
      "patternId": "09hhh1",
      "severity": 2,
      "line": 913,
      "column": 33,
      "content": "returnAmount.mul(_changeFee).div(TOTAL_PERCRENTS.sub(_changeFee)).mul(_referralFee)"
    },
    {
      "name": "SOLIDITY_ERC20_APPROVE",
      "patternId": "af782c",
      "severity": 2,
      "line": 373,
      "column": 2,
      "content": "functionapprove(address_spender,uint256_value)publicreturns(bool){allowed[msg.sender][_spender]=_value;emitApproval(msg.sender,_spender,_value);returntrue;}"
    },
    {
      "name": "SOLIDITY_EXTRA_GAS_IN_LOOPS",
      "patternId": "d3j11j",
      "severity": 1,
      "line": 672,
      "column": 8,
      "content": "for(uinti=0;i<_tokens.length;i++){tokenAmounts[i]=_tokens[i].balanceOf(this).mul(amount).div(totalSupply_);}"
    },
    {
      "name": "SOLIDITY_EXTRA_GAS_IN_LOOPS",
      "patternId": "d3j11j",
      "severity": 1,
      "line": 706,
      "column": 8,
      "content": "for(uinti=0;i<_tokens.length;i++){require(tokenAmounts[i]!=0,\"Token amount should be non-zero\");_tokens[i].checkedTransferFrom(msg.sender,this,tokenAmounts[i]);}"
    },
    {
      "name": "SOLIDITY_EXTRA_GAS_IN_LOOPS",
      "patternId": "d3j11j",
      "severity": 1,
      "line": 726,
      "column": 8,
      "content": "for(uinti=0;i<someTokens.length;i++){for(uintj=0;j<i;j++){require(someTokens[i]!=someTokens[j],\"unbundleSome: should not unbundle same token multiple times\");}uint256tokenAmount=someTokens[i].balanceOf(this).mul(value).div(totalSupply);someTokens[i].checkedTransfer(beneficiary,tokenAmount);}"
    },
    {
      "name": "SOLIDITY_EXTRA_GAS_IN_LOOPS",
      "patternId": "d3j11j",
      "severity": 1,
      "line": 828,
      "column": 8,
      "content": "for(uinti=0;i<tokens.length;i++){require(tokenWeights[i]!=0,\"The tokenWeights array should not contains zeros\");require(_weights[tokens[i]]==0,\"The tokens array have duplicates\");_weights[tokens[i]]=tokenWeights[i];if(minimalWeight==0||tokenWeights[i]<minimalWeight){minimalWeight=tokenWeights[i];}}"
    },
    {
      "name": "SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN",
      "patternId": "58bdd3",
      "severity": 1,
      "line": 72,
      "column": 4,
      "content": "functiondeploy(bytesdata)externalonlyOwnerreturns(addressresult){require(address(this).call(data),\"Arbitrary call failed\");assembly{returndatacopy(0,0,32)result:=mload(0)}}"
    },
    {
      "name": "SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN",
      "patternId": "58bdd3",
      "severity": 1,
      "line": 177,
      "column": 4,
      "content": "functionisContract(addressaddr)internalviewreturns(boolresult){assembly{result:=gt(extcodesize(addr),0)}}"
    },
    {
      "name": "SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN",
      "patternId": "58bdd3",
      "severity": 1,
      "line": 184,
      "column": 4,
      "content": "functionhandleReturnBool()internalpurereturns(boolresult){assembly{switchreturndatasize()case0{result:=1}case32{returndatacopy(0,0,32)result:=mload(0)}default{revert(0,0)}}}"
    },
    {
      "name": "SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN",
      "patternId": "58bdd3",
      "severity": 1,
      "line": 201,
      "column": 4,
      "content": "functionhandleReturnBytes32()internalpurereturns(bytes32result){assembly{switcheq(returndatasize(),32)case1{returndatacopy(0,0,32)result:=mload(0)}switchgt(returndatasize(),32)case1{returndatacopy(0,64,32)result:=mload(0)}switchlt(returndatasize(),32)case1{revert(0,0)}}}"
    },
    {
      "name": "SOLIDITY_GAS_LIMIT_IN_LOOPS",
      "patternId": "f6f853",
      "severity": 2,
      "line": 672,
      "column": 8,
      "content": "for(uinti=0;i<_tokens.length;i++){tokenAmounts[i]=_tokens[i].balanceOf(this).mul(amount).div(totalSupply_);}"
    },
    {
      "name": "SOLIDITY_GAS_LIMIT_IN_LOOPS",
      "patternId": "f6f853",
      "severity": 2,
      "line": 706,
      "column": 8,
      "content": "for(uinti=0;i<_tokens.length;i++){require(tokenAmounts[i]!=0,\"Token amount should be non-zero\");_tokens[i].checkedTransferFrom(msg.sender,this,tokenAmounts[i]);}"
    },
    {
      "name": "SOLIDITY_GAS_LIMIT_IN_LOOPS",
      "patternId": "f6f853",
      "severity": 2,
      "line": 726,
      "column": 8,
      "content": "for(uinti=0;i<someTokens.length;i++){for(uintj=0;j<i;j++){require(someTokens[i]!=someTokens[j],\"unbundleSome: should not unbundle same token multiple times\");}uint256tokenAmount=someTokens[i].balanceOf(this).mul(value).div(totalSupply);someTokens[i].checkedTransfer(beneficiary,tokenAmount);}"
    },
    {
      "name": "SOLIDITY_GAS_LIMIT_IN_LOOPS",
      "patternId": "f6f853",
      "severity": 2,
      "line": 828,
      "column": 8,
      "content": "for(uinti=0;i<tokens.length;i++){require(tokenWeights[i]!=0,\"The tokenWeights array should not contains zeros\");require(_weights[tokens[i]]==0,\"The tokens array have duplicates\");_weights[tokens[i]]=tokenWeights[i];if(minimalWeight==0||tokenWeights[i]<minimalWeight){minimalWeight=tokenWeights[i];}}"
    },
    {
      "name": "SOLIDITY_LOCKED_MONEY",
      "patternId": "30281d",
      "severity": 3,
      "line": 749,
      "column": 0,
      "content": "contractFeeBasicMultiTokenisOwnable,BasicMultiToken{usingCheckedERC20forERC20;uint256constantpublicTOTAL_PERCRENTS=1000000;uint256internal_lendFee;functionlendFee()publicviewreturns(uint256){return_lendFee;}functionsetLendFee(uint256theLendFee)publiconlyOwner{require(theLendFee<=30000,\"setLendFee: fee should be not greater than 3%\");_lendFee=theLendFee;}functionlend(addressto,ERC20token,uint256amount,addresstarget,bytesdata)publicpayable{uint256expectedBalance=token.balanceOf(this).mul(TOTAL_PERCRENTS.add(_lendFee)).div(TOTAL_PERCRENTS);super.lend(to,token,amount,target,data);require(token.balanceOf(this)>=expectedBalance,\"lend: tokens must be returned with lend fee\");}}"
    },
    {
      "name": "SOLIDITY_OVERPOWERED_ROLE",
      "patternId": "j83hf7",
      "severity": 2,
      "line": 759,
      "column": 4,
      "content": "functionsetLendFee(uint256theLendFee)publiconlyOwner{require(theLendFee<=30000,\"setLendFee: fee should be not greater than 3%\");_lendFee=theLendFee;}"
    },
    {
      "name": "SOLIDITY_OVERPOWERED_ROLE",
      "patternId": "j83hf7",
      "severity": 2,
      "line": 893,
      "column": 4,
      "content": "functionsetChangeFee(uint256theChangeFee)publiconlyOwner{require(theChangeFee<=30000,\"setChangeFee: fee should be not greater than 3%\");_changeFee=theChangeFee;}"
    },
    {
      "name": "SOLIDITY_OVERPOWERED_ROLE",
      "patternId": "j83hf7",
      "severity": 2,
      "line": 898,
      "column": 4,
      "content": "functionsetReferralFee(uint256theReferralFee)publiconlyOwner{require(theReferralFee<=500000,\"setReferralFee: fee should be not greater than 50% of changeFee\");_referralFee=theReferralFee;}"
    },
    {
      "name": "SOLIDITY_PRAGMAS_VERSION",
      "patternId": "23fc32",
      "severity": 1,
      "line": 1,
      "column": 16,
      "content": "^"
    },
    {
      "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
      "patternId": "5616b2",
      "severity": 1,
      "line": 549,
      "column": 18,
      "content": "private"
    },
    {
      "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
      "patternId": "5616b2",
      "severity": 1,
      "line": 617,
      "column": 12,
      "content": "private"
    },
    {
      "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
      "patternId": "5616b2",
      "severity": 1,
      "line": 618,
      "column": 9,
      "content": "private"
    },
    {
      "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
      "patternId": "5616b2",
      "severity": 1,
      "line": 619,
      "column": 9,
      "content": "private"
    },
    {
      "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
      "patternId": "5616b2",
      "severity": 1,
      "line": 803,
      "column": 32,
      "content": "private"
    },
    {
      "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
      "patternId": "5616b2",
      "severity": 1,
      "line": 805,
      "column": 9,
      "content": "private"
    },
    {
      "name": "SOLIDITY_SAFEMATH",
      "patternId": "837cac",
      "severity": 1,
      "line": 175,
      "column": 4,
      "content": "usingSafeMathforuint;"
    },
    {
      "name": "SOLIDITY_SAFEMATH",
      "patternId": "837cac",
      "severity": 1,
      "line": 286,
      "column": 2,
      "content": "usingSafeMathforuint256;"
    },
    {
      "name": "SOLIDITY_SHOULD_NOT_BE_PURE",
      "patternId": "11314f",
      "severity": 1,
      "line": 184,
      "column": 4,
      "content": "functionhandleReturnBool()internalpurereturns(boolresult){assembly{switchreturndatasize()case0{result:=1}case32{returndatacopy(0,0,32)result:=mload(0)}default{revert(0,0)}}}"
    },
    {
      "name": "SOLIDITY_SHOULD_NOT_BE_PURE",
      "patternId": "11314f",
      "severity": 1,
      "line": 201,
      "column": 4,
      "content": "functionhandleReturnBytes32()internalpurereturns(bytes32result){assembly{switcheq(returndatasize(),32)case1{returndatacopy(0,0,32)result:=mload(0)}switchgt(returndatasize(),32)case1{returndatacopy(0,64,32)result:=mload(0)}switchlt(returndatasize(),32)case1{revert(0,0)}}}"
    },
    {
      "name": "SOLIDITY_SHOULD_NOT_BE_VIEW",
      "patternId": "189abf",
      "severity": 1,
      "line": 177,
      "column": 4,
      "content": "functionisContract(addressaddr)internalviewreturns(boolresult){assembly{result:=gt(extcodesize(addr),0)}}"
    },
    {
      "name": "SOLIDITY_SHOULD_NOT_BE_VIEW",
      "patternId": "189abf",
      "severity": 1,
      "line": 264,
      "column": 4,
      "content": "functionasmName(addresstoken)internalviewreturns(bytes32){require(isContract(token));require(token.call(bytes4(keccak256(\"name()\"))));returnhandleReturnBytes32();}"
    },
    {
      "name": "SOLIDITY_SHOULD_NOT_BE_VIEW",
      "patternId": "189abf",
      "severity": 1,
      "line": 271,
      "column": 4,
      "content": "functionasmSymbol(addresstoken)internalviewreturns(bytes32){require(isContract(token));require(token.call(bytes4(keccak256(\"symbol()\"))));returnhandleReturnBytes32();}"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "83k1no",
      "severity": 1,
      "line": 226,
      "column": 22,
      "content": "call(bytes4(keccak256(\"transfer(address,uint256)\")),to,value)"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "83k1no",
      "severity": 1,
      "line": 233,
      "column": 22,
      "content": "call(bytes4(keccak256(\"transferFrom(address,address,uint256)\")),from,to,value)"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "83k1no",
      "severity": 1,
      "line": 240,
      "column": 22,
      "content": "call(bytes4(keccak256(\"approve(address,uint256)\")),spender,value)"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 70,
      "column": 41,
      "content": "string"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 459,
      "column": 14,
      "content": "string_name"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 459,
      "column": 28,
      "content": "string_symbol"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 556,
      "column": 55,
      "content": "bytesdata"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 564,
      "column": 56,
      "content": "bytesdata"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 586,
      "column": 70,
      "content": "uint256[]_tokenAmounts"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 590,
      "column": 64,
      "content": "ERC20[]_tokens"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 635,
      "column": 16,
      "content": "ERC20[]tokens"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 635,
      "column": 32,
      "content": "stringname"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 635,
      "column": 45,
      "content": "stringsymbol"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 664,
      "column": 68,
      "content": "uint256[]tokenAmounts"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 682,
      "column": 62,
      "content": "ERC20[]someTokens"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 702,
      "column": 58,
      "content": "uint256[]tokenAmounts"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 717,
      "column": 59,
      "content": "ERC20[]someTokens"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 737,
      "column": 75,
      "content": "bytesdata"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 764,
      "column": 75,
      "content": "bytesdata"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 822,
      "column": 16,
      "content": "ERC20[]tokens"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 822,
      "column": 32,
      "content": "uint256[]tokenWeights"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 822,
      "column": 56,
      "content": "stringname"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 822,
      "column": 69,
      "content": "stringsymbol"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 924,
      "column": 16,
      "content": "ERC20[]tokens"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 924,
      "column": 32,
      "content": "uint256[]weights"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 924,
      "column": 51,
      "content": "stringname"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 924,
      "column": 64,
      "content": "stringsymbol"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 933,
      "column": 41,
      "content": "string"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 78,
      "column": 8,
      "content": "assembly{returndatacopy(0,0,32)result:=mload(0)}"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 179,
      "column": 8,
      "content": "assembly{result:=gt(extcodesize(addr),0)}"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 186,
      "column": 8,
      "content": "assembly{switchreturndatasize()case0{result:=1}case32{returndatacopy(0,0,32)result:=mload(0)}default{revert(0,0)}}"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 203,
      "column": 8,
      "content": "assembly{switcheq(returndatasize(),32)case1{returndatacopy(0,0,32)result:=mload(0)}switchgt(returndatasize(),32)case1{returndatacopy(0,64,32)result:=mload(0)}switchlt(returndatasize(),32)case1{revert(0,0)}}"
    }
  ]
}