{
  "contract": "0xba22d73c079ceb97db93f2effb1f1054fe1cfcd6",
  "tool": "smartcheck",
  "start": 1563749537.3413277,
  "end": 1563749548.5734127,
  "duration": 11.23208498954773,
  "analysis": [
    {
      "name": "SOLIDITY_ADDRESS_HARDCODED",
      "patternId": "b140cd",
      "severity": 1,
      "line": 112,
      "column": 55,
      "content": "0x1"
    },
    {
      "name": "SOLIDITY_ADDRESS_HARDCODED",
      "patternId": "b140cd",
      "severity": 1,
      "line": 207,
      "column": 54,
      "content": "0x1"
    },
    {
      "name": "SOLIDITY_ADDRESS_HARDCODED",
      "patternId": "a91b18",
      "severity": 1,
      "line": 154,
      "column": 8,
      "content": "modules[address(module)]=address(0)"
    },
    {
      "name": "SOLIDITY_ADDRESS_HARDCODED",
      "patternId": "a91b18",
      "severity": 1,
      "line": 278,
      "column": 8,
      "content": "owners[owner]=address(0)"
    },
    {
      "name": "SOLIDITY_ADDRESS_HARDCODED",
      "patternId": "a91b18",
      "severity": 1,
      "line": 304,
      "column": 8,
      "content": "owners[oldOwner]=address(0)"
    },
    {
      "name": "SOLIDITY_ERC20_FUNCTIONS_ALWAYS_RETURN_FALSE",
      "patternId": "b180ca",
      "severity": 2,
      "line": 78,
      "column": 4,
      "content": "functiontransferToken(addresstoken,addressreceiver,uint256amount)internalreturns(booltransferred){bytesmemorydata=abi.encodeWithSignature(\"transfer(address,uint256)\",receiver,amount);assembly{letsuccess:=call(sub(gas,10000),token,0,add(data,0x20),mload(data),0,0)letptr:=mload(0x40)returndatacopy(ptr,0,returndatasize)switchreturndatasizecase0{transferred:=success}case0x20{transferred:=iszero(or(iszero(success),iszero(mload(ptr))))}default{transferred:=0}}}"
    },
    {
      "name": "SOLIDITY_EXTRA_GAS_IN_LOOPS",
      "patternId": "d3j11j",
      "severity": 1,
      "line": 228,
      "column": 8,
      "content": "for(uint256i=0;i<_owners.length;i++){addressowner=_owners[i];require(owner!=address(0)&&owner!=SENTINEL_OWNERS,\"Invalid owner address provided\");require(owners[owner]==address(0),\"Duplicate owner address provided\");owners[currentOwner]=owner;currentOwner=owner;}"
    },
    {
      "name": "SOLIDITY_EXTRA_GAS_IN_LOOPS",
      "patternId": "k4o1l4",
      "severity": 1,
      "line": 183,
      "column": 8,
      "content": "while(currentModule!=SENTINEL_MODULES){currentModule=modules[currentModule];moduleCount++;}"
    },
    {
      "name": "SOLIDITY_EXTRA_GAS_IN_LOOPS",
      "patternId": "k4o1l4",
      "severity": 1,
      "line": 192,
      "column": 8,
      "content": "while(currentModule!=SENTINEL_MODULES){array[moduleCount]=currentModule;currentModule=modules[currentModule];moduleCount++;}"
    },
    {
      "name": "SOLIDITY_EXTRA_GAS_IN_LOOPS",
      "patternId": "k4o1l4",
      "severity": 1,
      "line": 352,
      "column": 8,
      "content": "while(currentOwner!=SENTINEL_OWNERS){array[index]=currentOwner;currentOwner=owners[currentOwner];index++;}"
    },
    {
      "name": "SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN",
      "patternId": "47acc2",
      "severity": 1,
      "line": 1055,
      "column": 4,
      "content": "functionexecuteWhitelisted(addressto,uint256value,bytesmemorydata)publicreturns(bool){DutchXTokenInterfacetokenInterface;DutchXInterfacedxInterface;require(isOperator[msg.sender],\"Method can only be called by an operator\");require(to==dutchXAddress||isWhitelistedToken[to],\"Destination address is not allowed\");bytes4functionIdentifier;assembly{functionIdentifier:=mload(add(data,0x20))}if(functionIdentifier!=tokenInterface.deposit.selector){require(value==0,\"Eth transactions only allowed for wrapping ETH\");}if(functionIdentifier==tokenInterface.approve.selector){uintspender;assembly{spender:=mload(add(data,0x24))}require(address(spender)==dutchXAddress,\"Spender must be the DutchX Contract\");}elseif(functionIdentifier==dxInterface.deposit.selector){uintdepositToken;assembly{depositToken:=mload(add(data,0x24))}require(isWhitelistedToken[address(depositToken)],\"Only whitelisted tokens can be deposit on the DutchX\");}elseif(functionIdentifier==dxInterface.postSellOrder.selector){uintsellToken;uintbuyToken;assembly{sellToken:=mload(add(data,0x24))buyToken:=mload(add(data,0x44))}require(isWhitelistedToken[address(sellToken)]&&isWhitelistedToken[address(buyToken)],\"Only whitelisted tokens can be sold\");}elseif(functionIdentifier==dxInterface.postBuyOrder.selector){uintsellToken;uintbuyToken;assembly{sellToken:=mload(add(data,0x24))buyToken:=mload(add(data,0x44))}require(isWhitelistedToken[address(sellToken)]&&isWhitelistedToken[address(buyToken)],\"Only whitelisted tokens can be bought\");}else{require(functionIdentifier==dxInterface.claimTokensFromSeveralAuctionsAsSeller.selector||functionIdentifier==dxInterface.claimTokensFromSeveralAuctionsAsBuyer.selector||functionIdentifier==tokenInterface.deposit.selector,\"Function not allowed\");}require(manager.execTransactionFromModule(to,value,data,Enum.Operation.Call),\"Could not execute transaction\");}"
    },
    {
      "name": "SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN",
      "patternId": "58bdd3",
      "severity": 1,
      "line": 41,
      "column": 4,
      "content": "functionexecuteCall(addressto,uint256value,bytesmemorydata,uint256txGas)internalreturns(boolsuccess){assembly{success:=call(txGas,to,value,add(data,0x20),mload(data),0,0)}}"
    },
    {
      "name": "SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN",
      "patternId": "58bdd3",
      "severity": 1,
      "line": 51,
      "column": 4,
      "content": "functionexecuteDelegateCall(addressto,bytesmemorydata,uint256txGas)internalreturns(boolsuccess){assembly{success:=delegatecall(txGas,to,add(data,0x20),mload(data),0,0)}}"
    },
    {
      "name": "SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN",
      "patternId": "58bdd3",
      "severity": 1,
      "line": 61,
      "column": 4,
      "content": "functionexecuteCreate(bytesmemorydata)internalreturns(addressnewContract){assembly{newContract:=create(0,add(data,0x20),mload(data))}}"
    },
    {
      "name": "SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN",
      "patternId": "58bdd3",
      "severity": 1,
      "line": 78,
      "column": 4,
      "content": "functiontransferToken(addresstoken,addressreceiver,uint256amount)internalreturns(booltransferred){bytesmemorydata=abi.encodeWithSignature(\"transfer(address,uint256)\",receiver,amount);assembly{letsuccess:=call(sub(gas,10000),token,0,add(data,0x20),mload(data),0,0)letptr:=mload(0x40)returndatacopy(ptr,0,returndatasize)switchreturndatasizecase0{transferred:=success}case0x20{transferred:=iszero(or(iszero(success),iszero(mload(ptr))))}default{transferred:=0}}}"
    },
    {
      "name": "SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN",
      "patternId": "58bdd3",
      "severity": 1,
      "line": 438,
      "column": 4,
      "content": "functionsignatureSplit(bytesmemorysignatures,uint256pos)internalpurereturns(uint8v,bytes32r,bytes32s){assembly{letsignaturePos:=mul(0x41,pos)r:=mload(add(signatures,add(signaturePos,0x20)))s:=mload(add(signatures,add(signaturePos,0x40)))v:=and(mload(add(signatures,add(signaturePos,0x41))),0xff)}}"
    },
    {
      "name": "SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN",
      "patternId": "58bdd3",
      "severity": 1,
      "line": 530,
      "column": 4,
      "content": "functionisValidSignature(bytescalldata_data,bytescalldata_signature)externalreturns(boolisValid){}"
    },
    {
      "name": "SOLIDITY_GAS_LIMIT_IN_LOOPS",
      "patternId": "f6f853",
      "severity": 2,
      "line": 228,
      "column": 8,
      "content": "for(uint256i=0;i<_owners.length;i++){addressowner=_owners[i];require(owner!=address(0)&&owner!=SENTINEL_OWNERS,\"Invalid owner address provided\");require(owners[owner]==address(0),\"Duplicate owner address provided\");owners[currentOwner]=owner;currentOwner=owner;}"
    },
    {
      "name": "SOLIDITY_GAS_LIMIT_IN_LOOPS",
      "patternId": "17f23a",
      "severity": 1,
      "line": 183,
      "column": 14,
      "content": "currentModule!=SENTINEL_MODULES"
    },
    {
      "name": "SOLIDITY_GAS_LIMIT_IN_LOOPS",
      "patternId": "17f23a",
      "severity": 1,
      "line": 192,
      "column": 14,
      "content": "currentModule!=SENTINEL_MODULES"
    },
    {
      "name": "SOLIDITY_GAS_LIMIT_IN_LOOPS",
      "patternId": "17f23a",
      "severity": 1,
      "line": 352,
      "column": 14,
      "content": "currentOwner!=SENTINEL_OWNERS"
    },
    {
      "name": "SOLIDITY_LOCKED_MONEY",
      "patternId": "30281d",
      "severity": 3,
      "line": 11,
      "column": 0,
      "content": "contractEtherPaymentFallback{function()externalpayable{}}"
    },
    {
      "name": "SOLIDITY_LOCKED_MONEY",
      "patternId": "30281d",
      "severity": 3,
      "line": 864,
      "column": 0,
      "content": "contractDutchXBaseModuleisModule{addresspublicdutchXAddress;mapping(address=>bool)publicisWhitelistedToken;mapping(address=>bool)publicisOperator;address[]publicwhitelistedTokens;address[]publicwhitelistedOperators;functionsetup(addressdx,address[]memorytokens,address[]memoryoperators,address<missing ')'>payable_manager)public{require(address<missing ';'>(manager)==address(0),\"Manager has already been set\");if(_manager==<missing ';'>address(0)){manager=ModuleManager(msg.sender);}"
    },
    {
      "name": "SOLIDITY_PRAGMAS_VERSION",
      "patternId": "23fc32",
      "severity": 1,
      "line": 1,
      "column": 16,
      "content": "^"
    },
    {
      "name": "SOLIDITY_SAFEMATH",
      "patternId": "837cac",
      "severity": 1,
      "line": 539,
      "column": 4,
      "content": "usingSafeMathforuint256;"
    },
    {
      "name": "SOLIDITY_SHOULD_NOT_BE_PURE",
      "patternId": "11314f",
      "severity": 1,
      "line": 438,
      "column": 4,
      "content": "functionsignatureSplit(bytesmemorysignatures,uint256pos)internalpurereturns(uint8v,bytes32r,bytes32s){assembly{letsignaturePos:=mul(0x41,pos)r:=mload(add(signatures,add(signaturePos,0x20)))s:=mload(add(signatures,add(signaturePos,0x40)))v:=and(mload(add(signatures,add(signaturePos,0x41))),0xff)}}"
    },
    {
      "name": "SOLIDITY_SHOULD_RETURN_STRUCT",
      "patternId": "83hf3l",
      "severity": 1,
      "line": 441,
      "column": 16,
      "content": "(uint8v,bytes32r,bytes32s)"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 46,
      "column": 8,
      "content": "assembly{success:=call(txGas,to,value,add(data,0x20),mload(data),0,0)}"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 56,
      "column": 8,
      "content": "assembly{success:=delegatecall(txGas,to,add(data,0x20),mload(data),0,0)}"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 66,
      "column": 8,
      "content": "assembly{newContract:=create(0,add(data,0x20),mload(data))}"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 88,
      "column": 8,
      "content": "assembly{letsuccess:=call(sub(gas,10000),token,0,add(data,0x20),mload(data),0,0)letptr:=mload(0x40)returndatacopy(ptr,0,returndatasize)switchreturndatasizecase0{transferred:=success}case0x20{transferred:=iszero(or(iszero(success),iszero(mload(ptr))))}default{transferred:=0}}"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 447,
      "column": 8,
      "content": "assembly{letsignaturePos:=mul(0x41,pos)r:=mload(add(signatures,add(signaturePos,0x20)))s:=mload(add(signatures,add(signaturePos,0x40)))v:=and(mload(add(signatures,add(signaturePos,0x41))),0xff)}"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 1073,
      "column": 8,
      "content": "assembly{functionIdentifier:=mload(add(data,0x20))}"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 1088,
      "column": 12,
      "content": "assembly{spender:=mload(add(data,0x24))}"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 1104,
      "column": 12,
      "content": "assembly{depositToken:=mload(add(data,0x24))}"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 1116,
      "column": 12,
      "content": "assembly{sellToken:=mload(add(data,0x24))buyToken:=mload(add(data,0x44))}"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 1129,
      "column": 12,
      "content": "assembly{sellToken:=mload(add(data,0x24))buyToken:=mload(add(data,0x44))}"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": 910067,
      "severity": 1,
      "line": 593,
      "column": 4,
      "content": "functionexecTransaction(addressto,uint256value,bytescalldata<missing ')'>"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": 910067,
      "severity": 1,
      "line": 880,
      "column": 4,
      "content": "functionsetup(addressdx,address[]memorytokens,address[]memoryoperators,address<missing ')'>payable"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": 910067,
      "severity": 1,
      "line": 1026,
      "column": 4,
      "content": "functionclaimTokensFromSeveralAuctionsAsBuyer(address[]calldataauctionSellTokens,address[]calldata<missing ')'>"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": 910067,
      "severity": 1,
      "line": 1033,
      "column": 4,
      "content": "functionclaimTokensFromSeveralAuctionsAsSeller(address[]calldataauctionSellTokens,address[]calldata<missing ')'>"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 210,
      "column": 4,
      "content": "uint256ownerCount;"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 380,
      "column": 4,
      "content": "addressmasterCopy;"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 596,
      "column": 23,
      "content": "data,Enum."
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 597,
      "column": 13,
      "content": "Operationoperation,"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 598,
      "column": 8,
      "content": "uint256safeTxGas,"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 599,
      "column": 8,
      "content": "uint256dataGas,"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 600,
      "column": 8,
      "content": "uint256gasPrice,"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 601,
      "column": 8,
      "content": "addressgasToken,"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 602,
      "column": 8,
      "content": "addresspayablerefundReceiver,"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 603,
      "column": 8,
      "content": "bytescalldata"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 606,
      "column": 16,
      "content": "(boolsuccess){"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 608,
      "column": 8,
      "content": "uint256startGas=gasleft();"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 609,
      "column": 8,
      "content": "bytesmemorytxHashData=encodeTransactionData(to,value,data,operation,safeTxGas,dataGas,gasPrice,gasToken,refundReceiver,nonce);"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 614,
      "column": 8,
      "content": "require(checkSignatures"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 614,
      "column": 31,
      "content": "(keccak256<missing ';'>"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 614,
      "column": 41,
      "content": "(txHashData),txHashData,"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 614,
      "column": 67,
      "content": "signatures,true),\"Invalid signatures provided\");"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 616,
      "column": 8,
      "content": "nonce++;"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 617,
      "column": 8,
      "content": "require(gasleft"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 617,
      "column": 23,
      "content": "()>=safeTxGas,\"Not enough gas to execute safe transaction\");"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 619,
      "column": 8,
      "content": "success=execute"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 619,
      "column": 25,
      "content": "(to,value,"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 619,
      "column": 37,
      "content": "data,operation,"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 619,
      "column": 54,
      "content": "safeTxGas==0&&"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 619,
      "column": 72,
      "content": "gasPrice==0?"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 619,
      "column": 88,
      "content": "gasleft"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 619,
      "column": 95,
      "content": "():safeTxGas);"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 620,
      "column": 11,
      "content": "(!success){emit"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 621,
      "column": 17,
      "content": "ExecutionFailed(keccak256"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 621,
      "column": 42,
      "content": "(txHashData));"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 883,
      "column": 15,
      "content": "(address<missing ';'>"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 883,
      "column": 23,
      "content": "(manager)=="
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 883,
      "column": 36,
      "content": "address"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 883,
      "column": 43,
      "content": "(0),\"Manager has already been set\");if"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 884,
      "column": 11,
      "content": "(_manager==<missing ';'>"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 884,
      "column": 24,
      "content": "address"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 884,
      "column": 31,
      "content": "(0)){"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 885,
      "column": 12,
      "content": "manager=ModuleManager"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 885,
      "column": 35,
      "content": "(msg.sender);"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 1028,
      "column": 27,
      "content": "auctionBuyTokens,"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 1029,
      "column": 8,
      "content": "uint[]calldata"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 1029,
      "column": 24,
      "content": "auctionIndices,"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 1030,
      "column": 8,
      "content": "addressuser)external;"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 1035,
      "column": 27,
      "content": "auctionBuyTokens,"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 1036,
      "column": 8,
      "content": "uint[]calldata"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 1036,
      "column": 24,
      "content": "auctionIndices,"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 1037,
      "column": 8,
      "content": "addressuser)external;"
    }
  ]
}