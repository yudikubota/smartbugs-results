/unique_chucks/7/0x9288d6b823927f528aea244c5fa71a356b807112.sol
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ERC20_APPROVE
patternId: af782c
severity: 2
line: 304
column: 4
content: functionapprove(address_spender,uint256_value)publicreturns(boolsuccess){allowance[msg.sender][_spender]=_value;emitApproval(msg.sender,_spender,_value);returntrue;}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 243
column: 8
content: for(uintj=0;j<targets.length;j++){require(isNonZeroAccount(targets[j]));frozenAccount[targets[j]]=isFrozen;emitFrozenFunds(targets[j],isFrozen);}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 258
column: 8
content: for(uintj=0;j<targets.length;j++){require(unlockUnixTime[targets[j]]<unixTimes[j]);unlockUnixTime[targets[j]]=unixTimes[j];emitLockedFunds(targets[j],unixTimes[j]);}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 338
column: 8
content: for(uintj=0;j<addresses.length;j++){require(amounts[j]>0&&isNonZeroAccount(addresses[j])&&isAvailableAccount(addresses[j])&&hasEnoughAllowance(addresses[j],msg.sender,amounts[j]));require(hasEnoughBalance(addresses[j],amounts[j]));balanceOf[addresses[j]]=balanceOf[addresses[j]].sub(amounts[j]);allowance[addresses[j]][msg.sender]=allowance[addresses[j]][msg.sender].sub(amounts[j]);totalAmount=totalAmount.add(amounts[j]);emitTransfer(addresses[j],msg.sender,amounts[j]);}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 363
column: 8
content: for(uintj=0;j<addresses.length;j++){require(amounts[j]>0&&isNonZeroAccount(addresses[j])&&isAvailableAccount(addresses[j]));totalAmount=totalAmount.add(amounts[j]);}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 372
column: 8
content: for(j=0;j<addresses.length;j++){balanceOf[addresses[j]]=balanceOf[addresses[j]].add(amounts[j]);emitTransfer(msg.sender,addresses[j],amounts[j]);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 243
column: 8
content: for(uintj=0;j<targets.length;j++){require(isNonZeroAccount(targets[j]));frozenAccount[targets[j]]=isFrozen;emitFrozenFunds(targets[j],isFrozen);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 258
column: 8
content: for(uintj=0;j<targets.length;j++){require(unlockUnixTime[targets[j]]<unixTimes[j]);unlockUnixTime[targets[j]]=unixTimes[j];emitLockedFunds(targets[j],unixTimes[j]);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 338
column: 8
content: for(uintj=0;j<addresses.length;j++){require(amounts[j]>0&&isNonZeroAccount(addresses[j])&&isAvailableAccount(addresses[j])&&hasEnoughAllowance(addresses[j],msg.sender,amounts[j]));require(hasEnoughBalance(addresses[j],amounts[j]));balanceOf[addresses[j]]=balanceOf[addresses[j]].sub(amounts[j]);allowance[addresses[j]][msg.sender]=allowance[addresses[j]][msg.sender].sub(amounts[j]);totalAmount=totalAmount.add(amounts[j]);emitTransfer(addresses[j],msg.sender,amounts[j]);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 363
column: 8
content: for(uintj=0;j<addresses.length;j++){require(amounts[j]>0&&isNonZeroAccount(addresses[j])&&isAvailableAccount(addresses[j]));totalAmount=totalAmount.add(amounts[j]);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 372
column: 8
content: for(j=0;j<addresses.length;j++){balanceOf[addresses[j]]=balanceOf[addresses[j]].add(amounts[j]);emitTransfer(msg.sender,addresses[j],amounts[j]);}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: ^

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 180
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 412
column: 4
content: functioncheckMessageData(addressa)privatepurereturns(boolt){if(msg.data.length<36)returnfalse;assembly{letmask:=0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFt:=eq(a,and(mask,calldataload(4)))}}

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 167
column: 41
content: string_name

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 168
column: 43
content: string_symbol

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 215
column: 41
content: string_name

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 219
column: 43
content: string_symbol

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 240
column: 28
content: address[]targets

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 255
column: 28
content: address[]targets

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 255
column: 47
content: uint[]unixTimes

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 333
column: 27
content: address[]addresses

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 333
column: 48
content: uint[]amounts

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 357
column: 30
content: address[]addresses

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 357
column: 51
content: uint[]amounts

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 406
column: 32
content: address[]addresses

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 406
column: 53
content: uint[]amounts

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 414
column: 8
content: assembly{letmask:=0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFt:=eq(a,and(mask,calldataload(4)))}

SOLIDITY_SAFEMATH :1
SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_EXTRA_GAS_IN_LOOPS :5
SOLIDITY_UPGRADE_TO_050 :13
SOLIDITY_GAS_LIMIT_IN_LOOPS :5
SOLIDITY_USING_INLINE_ASSEMBLY :1
SOLIDITY_SHOULD_NOT_BE_PURE :1
SOLIDITY_ERC20_APPROVE :1