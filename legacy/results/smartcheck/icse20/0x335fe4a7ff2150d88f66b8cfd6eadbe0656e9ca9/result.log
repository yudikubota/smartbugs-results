/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 322
column: 18
content: (address(0),msg.sender,msg.value)

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 413
column: 18
content: (address(0),user,feeWithdrawal)

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 416
column: 18
content: (address(0),feeAccount,feeWithdrawal)

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 805
column: 18
content: (address(0),cancelAddresses[3],cancelValues[4])

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 49bd2a
severity: 1
line: 22
column: 24
content: throw

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 49bd2a
severity: 1
line: 90
column: 56
content: throw

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 49bd2a
severity: 1
line: 96
column: 43
content: throw

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 49bd2a
severity: 1
line: 101
column: 8
content: throw

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 49bd2a
severity: 1
line: 176
column: 30
content: throw

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 49bd2a
severity: 1
line: 262
column: 55
content: throw

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 49bd2a
severity: 1
line: 263
column: 54
content: throw

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 49bd2a
severity: 1
line: 270
column: 55
content: throw

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 49bd2a
severity: 1
line: 278
column: 55
content: throw

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 49bd2a
severity: 1
line: 284
column: 55
content: throw

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 49bd2a
severity: 1
line: 290
column: 55
content: throw

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 49bd2a
severity: 1
line: 314
column: 54
content: throw

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 49bd2a
severity: 1
line: 336
column: 66
content: throw

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 49bd2a
severity: 1
line: 343
column: 60
content: throw

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 49bd2a
severity: 1
line: 349
column: 42
content: throw

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 49bd2a
severity: 1
line: 351
column: 60
content: throw

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 49bd2a
severity: 1
line: 358
column: 48
content: throw

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 49bd2a
severity: 1
line: 366
column: 48
content: throw

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 49bd2a
severity: 1
line: 368
column: 93
content: throw

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 49bd2a
severity: 1
line: 400
column: 29
content: throw

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 49bd2a
severity: 1
line: 402
column: 93
content: throw

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 49bd2a
severity: 1
line: 407
column: 54
content: throw

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 49bd2a
severity: 1
line: 419
column: 36
content: throw

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 49bd2a
severity: 1
line: 421
column: 54
content: throw

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 438
column: 8
content: for(uinti=0;i<amount.length;i++){adminWithdraw(token[i],amount[i],user[i],nonce[i],v[i],r[i],s[i],feeWithdrawal[i]);}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 737
column: 8
content: for(uinti=0;i<tradeAddresses.length;i++){trade(v[i],rs[i],tradeValues[i],tradeAddresses[i]);}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 47acc2
severity: 1
line: 276
column: 4
content: functionsubBalanceAddReserve(addresstoken,addressuser,uint256subBalance,uint256addReserve)onlyFuturesContractreturns(bool){if(!futuresContractAllowed(msg.sender,user))throw;updateBalanceAndReserve(token,user,safeSub(balanceOf(token,user),subBalance),safeAdd(getReserve(token,user),addReserve));}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 47acc2
severity: 1
line: 282
column: 4
content: functionaddBalanceSubReserve(addresstoken,addressuser,uint256addBalance,uint256subReserve)onlyFuturesContractreturns(bool){if(!futuresContractAllowed(msg.sender,user))throw;updateBalanceAndReserve(token,user,safeAdd(balanceOf(token,user),addBalance),safeSub(getReserve(token,user),subReserve));}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 47acc2
severity: 1
line: 288
column: 4
content: functionsubBalanceSubReserve(addresstoken,addressuser,uint256subBalance,uint256subReserve)onlyFuturesContractreturns(bool){if(!futuresContractAllowed(msg.sender,user))throw;updateBalanceAndReserve(token,user,safeSub(balanceOf(token,user),subBalance),safeSub(getReserve(token,user),subReserve));}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 340
column: 4
content: functionwithdraw(addresstoken,uint256amount)returns(boolsuccess){if(availableBalanceOf(token,msg.sender)<amount)throw;subBalance(token,msg.sender,amount);if(token==address(0)){if(!msg.sender.send(amount))throw;}else{if(!Token(token).transfer(msg.sender,amount))throw;}emitWithdraw(token,msg.sender,amount,balanceOf(token,msg.sender),0);}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 389
column: 4
content: functionadminWithdraw(addresstoken,uint256amount,addressuser,uint256nonce,uint8v,bytes32r,bytes32s,uint256feeWithdrawal)onlyAdminreturns(boolsuccess){bytes32hash=keccak256(this,token,amount,user,nonce);if(withdrawn[hash])throw;withdrawn[hash]=true;if(ecrecover(keccak256("\x19Ethereum Signed Message:\n32",hash),v,r,s)!=user)throw;if(feeWithdrawal>50finney)feeWithdrawal=50finney;if(availableBalanceOf(token,user)<amount)throw;subBalance(token,user,amount);subBalance(address(0),user,feeWithdrawal);addBalance(address(0),feeAccount,feeWithdrawal);if(token==address(0)){if(!user.send(amount))throw;}else{if(!Token(token).transfer(user,amount))throw;}lastActiveTransaction[user]=block.number;emitWithdraw(token,user,amount,balanceOf(token,user),feeWithdrawal);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 438
column: 8
content: for(uinti=0;i<amount.length;i++){adminWithdraw(token[i],amount[i],user[i],nonce[i],v[i],r[i],s[i],feeWithdrawal[i]);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 737
column: 8
content: for(uinti=0;i<tradeAddresses.length;i++){trade(v[i],rs[i],tradeValues[i],tradeAddresses[i]);}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 61
column: 4
content: functionsetOwner(addressnewOwner)onlyOwner{SetOwner(owner,newOwner);owner=newOwner;}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 72
column: 4
content: functionsetAdmin(addressadmin,boolisAdmin)onlyOwner{admins[admin]=isAdmin;}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 78
column: 4
content: functionsetFuturesContract(addressfuturesContract,boolisFuturesContract)onlyOwner{futuresContracts[futuresContract]=isFuturesContract;if(fistFuturesContract==address(0)){fistFuturesContract=futuresContract;}futuresContractsAddedBlock[futuresContract]=block.number;emitSetFuturesContract(futuresContract,isFuturesContract);}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 175
column: 4
content: functionsetInactivityReleasePeriod(uint256expiry)onlyOwnerreturns(boolsuccess){if(expiry>1000000)throw;inactivityReleasePeriod=expiry;emitInactivityReleasePeriodChange(expiry);returntrue;}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 193
column: 4
content: functionsetFees(uint256makerFee_,uint256takerFee_)onlyOwner{require(makerFee_<10finney&&takerFee_<10finney);makerFee=makerFee_;takerFee=takerFee_;emitFeeChange(makerFee,takerFee);}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: ^

ruleId: SOLIDITY_REDUNDANT_FALLBACK_REJECT
patternId: b85a32
severity: 1
line: 100
column: 24
content: {throw;}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 22
column: 8
content: if(!assertion)throw;

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 90
column: 8
content: if(msg.sender!=owner&&!admins[msg.sender])throw;

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 96
column: 8
content: if(!futuresContracts[msg.sender])throw;

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 176
column: 8
content: if(expiry>1000000)throw;

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 262
column: 8
content: if(!futuresContractAllowed(msg.sender,user))throw;

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 263
column: 8
content: if(availableBalanceOf(token,user)<amount)throw;

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 270
column: 8
content: if(!futuresContractAllowed(msg.sender,user))throw;

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 278
column: 8
content: if(!futuresContractAllowed(msg.sender,user))throw;

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 284
column: 8
content: if(!futuresContractAllowed(msg.sender,user))throw;

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 290
column: 8
content: if(!futuresContractAllowed(msg.sender,user))throw;

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 314
column: 8
content: if(availableBalanceOf(token,user)<amount)throw;

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 336
column: 8
content: if(!Token(token).transferFrom(msg.sender,this,amount))throw;

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 343
column: 8
content: if(availableBalanceOf(token,msg.sender)<amount)throw;

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 349
column: 12
content: if(!msg.sender.send(amount))throw;

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 351
column: 12
content: if(!Token(token).transfer(msg.sender,amount))throw;

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 358
column: 8
content: if(!futuresContracts[futuresContract])throw;

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 366
column: 8
content: if(!futuresContracts[futuresContract])throw;

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 368
column: 8
content: if(ecrecover(keccak256("\x19Ethereum Signed Message:\n32",hash),v,r,s)!=user)throw;

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 400
column: 8
content: if(withdrawn[hash])throw;

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 402
column: 8
content: if(ecrecover(keccak256("\x19Ethereum Signed Message:\n32",hash),v,r,s)!=user)throw;

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 407
column: 8
content: if(availableBalanceOf(token,user)<amount)throw;

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 419
column: 12
content: if(!user.send(amount))throw;

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 421
column: 12
content: if(!Token(token).transfer(user,amount))throw;

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 901eae
severity: 1
line: 367
column: 23
content: keccak256(this,futuresContract)

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 901eae
severity: 1
line: 368
column: 22
content: keccak256("\x19Ethereum Signed Message:\n32",hash)

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 901eae
severity: 1
line: 377
column: 23
content: keccak256(this,msg.sender)

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 901eae
severity: 1
line: 378
column: 22
content: keccak256("\x19Ethereum Signed Message:\n32",hash)

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 901eae
severity: 1
line: 399
column: 23
content: keccak256(this,token,amount,user,nonce)

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 901eae
severity: 1
line: 402
column: 22
content: keccak256("\x19Ethereum Signed Message:\n32",hash)

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 901eae
severity: 1
line: 542
column: 30
content: keccak256(this,tradeAddresses[0],tradeValues[0],tradeAddresses[1],tradeValues[1],tradeValues[2],tradeAddresses[2])

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 901eae
severity: 1
line: 543
column: 30
content: keccak256(this,tradeAddresses[3],tradeValues[3],tradeAddresses[4],tradeValues[4],tradeValues[5],tradeAddresses[5])

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 901eae
severity: 1
line: 547
column: 22
content: keccak256("\x19Ethereum Signed Message:\n32",t.makerOrderHash)

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 901eae
severity: 1
line: 554
column: 22
content: keccak256("\x19Ethereum Signed Message:\n32",t.takerOrderHash)

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 901eae
severity: 1
line: 781
column: 28
content: keccak256(this,cancelAddresses[0],cancelValues[0],cancelAddresses[1],cancelValues[1],cancelValues[2],cancelAddresses[2])

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 901eae
severity: 1
line: 785
column: 26
content: keccak256("\x19Ethereum Signed Message:\n32",orderHash)

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 901eae
severity: 1
line: 788
column: 29
content: keccak256(this,orderHash,cancelAddresses[3],cancelValues[3])

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 901eae
severity: 1
line: 789
column: 26
content: keccak256("\x19Ethereum Signed Message:\n32",cancelHash)

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 13
column: 4
content: functiontransfer(address_to,uint256_value)returns(boolsuccess);

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 14
column: 4
content: functionapproveAndCall(address_spender,uint256_value,bytes_extraData)returns(boolsuccess);

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 15
column: 4
content: functionapprove(address_spender,uint256_value)returns(boolsuccess);

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 16
column: 4
content: functiontransferFrom(address_from,address_to,uint256_value)returns(boolsuccess);

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 21
column: 4
content: functionassert(boolassertion){if(!assertion)throw;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 26
column: 4
content: functionsafeMul(uinta,uintb)returns(uint){uintc=a*b;assert(a==0||c/a==b);returnc;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 33
column: 4
content: functionsafeSub(uinta,uintb)returns(uint){assert(b<=a);returna-b;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 39
column: 4
content: functionsafeAdd(uinta,uintb)returns(uint){uintc=a+b;assert(c>=a&&c>=b);returnc;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 61
column: 4
content: functionsetOwner(addressnewOwner)onlyOwner{SetOwner(owner,newOwner);owner=newOwner;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 67
column: 4
content: functiongetOwner()returns(addressout){returnowner;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 72
column: 4
content: functionsetAdmin(addressadmin,boolisAdmin)onlyOwner{admins[admin]=isAdmin;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 78
column: 4
content: functionsetFuturesContract(addressfuturesContract,boolisFuturesContract)onlyOwner{futuresContracts[futuresContract]=isFuturesContract;if(fistFuturesContract==address(0)){fistFuturesContract=futuresContract;}futuresContractsAddedBlock[futuresContract]=block.number;emitSetFuturesContract(futuresContract,isFuturesContract);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 175
column: 4
content: functionsetInactivityReleasePeriod(uint256expiry)onlyOwnerreturns(boolsuccess){if(expiry>1000000)throw;inactivityReleasePeriod=expiry;emitInactivityReleasePeriodChange(expiry);returntrue;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 184
column: 4
content: functionExchange(addressfeeAccount_,uint256makerFee_,uint256takerFee_,uint256inactivityReleasePeriod_){owner=msg.sender;feeAccount=feeAccount_;inactivityReleasePeriod=inactivityReleasePeriod_;makerFee=makerFee_;takerFee=takerFee_;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 193
column: 4
content: functionsetFees(uint256makerFee_,uint256takerFee_)onlyOwner{require(makerFee_<10finney&&takerFee_<10finney);makerFee=makerFee_;takerFee=takerFee_;emitFeeChange(makerFee,takerFee);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 230
column: 4
content: functiondecodeBalanceAndReserve(addresstoken,addressuser)returns(uint256[2]){uint256character=balances[token][user];uint256balance=uint256(uint128(character));uint256reserve=uint256(uint128(character>>128));return[balance,reserve];}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 239
column: 4
content: functionfuturesContractAllowed(addressfuturesContract,addressuser)returns(bool){if(fistFuturesContract==futuresContract)returntrue;if(userAllowedFuturesContracts[user][futuresContract]==true)returntrue;if(futuresContractsAddedBlock[futuresContract]<userFirstDeposits[user])returntrue;returnfalse;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 249
column: 4
content: functionbalanceOf(addresstoken,addressuser)viewreturns(uint256){returndecodeBalanceAndReserve(token,user)[0];}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 261
column: 4
content: functionsetReserve(addresstoken,addressuser,uint256amount)onlyFuturesContractreturns(boolsuccess){if(!futuresContractAllowed(msg.sender,user))throw;if(availableBalanceOf(token,user)<amount)throw;updateReserve(token,user,amount);returntrue;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 269
column: 4
content: functionsetBalance(addresstoken,addressuser,uint256amount)onlyFuturesContractreturns(boolsuccess){if(!futuresContractAllowed(msg.sender,user))throw;updateBalance(token,user,amount);returntrue;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 276
column: 4
content: functionsubBalanceAddReserve(addresstoken,addressuser,uint256subBalance,uint256addReserve)onlyFuturesContractreturns(bool){if(!futuresContractAllowed(msg.sender,user))throw;updateBalanceAndReserve(token,user,safeSub(balanceOf(token,user),subBalance),safeAdd(getReserve(token,user),addReserve));}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 282
column: 4
content: functionaddBalanceSubReserve(addresstoken,addressuser,uint256addBalance,uint256subReserve)onlyFuturesContractreturns(bool){if(!futuresContractAllowed(msg.sender,user))throw;updateBalanceAndReserve(token,user,safeAdd(balanceOf(token,user),addBalance),safeSub(getReserve(token,user),subReserve));}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 288
column: 4
content: functionsubBalanceSubReserve(addresstoken,addressuser,uint256subBalance,uint256subReserve)onlyFuturesContractreturns(bool){if(!futuresContractAllowed(msg.sender,user))throw;updateBalanceAndReserve(token,user,safeSub(balanceOf(token,user),subBalance),safeSub(getReserve(token,user),subReserve));}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 295
column: 4
content: functionavailableBalanceOf(addresstoken,addressuser)viewreturns(uint256){returnsafeSub(balanceOf(token,user),getReserve(token,user));}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 300
column: 4
content: functiongetInactivityReleasePeriod()viewreturns(uint256){returninactivityReleasePeriod;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 320
column: 4
content: functiondeposit()payable{addBalance(address(0),msg.sender,msg.value);if(userFirstDeposits[msg.sender]==0)userFirstDeposits[msg.sender]=block.number;lastActiveTransaction[msg.sender]=block.number;emitDeposit(address(0),msg.sender,msg.value,balanceOf(address(0),msg.sender));}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 329
column: 4
content: functiondepositToken(addresstoken,uint128amount){addBalance(token,msg.sender,amount);if(userFirstDeposits[msg.sender]==0)userFirstDeposits[msg.sender]=block.number;lastActiveTransaction[msg.sender]=block.number;if(!Token(token).transferFrom(msg.sender,this,amount))throw;emitDeposit(token,msg.sender,amount,balanceOf(token,msg.sender));}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 340
column: 4
content: functionwithdraw(addresstoken,uint256amount)returns(boolsuccess){if(availableBalanceOf(token,msg.sender)<amount)throw;subBalance(token,msg.sender,amount);if(token==address(0)){if(!msg.sender.send(amount))throw;}else{if(!Token(token).transfer(msg.sender,amount))throw;}emitWithdraw(token,msg.sender,amount,balanceOf(token,msg.sender),0);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 356
column: 4
content: functionuserAllowFuturesContract(addressfuturesContract){if(!futuresContracts[futuresContract])throw;userAllowedFuturesContracts[msg.sender][futuresContract]=true;emitAllowFuturesContract(futuresContract,msg.sender);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 364
column: 4
content: functionallowFuturesContractForUser(addressfuturesContract,addressuser,uint8v,bytes32r,bytes32s)onlyAdmin{if(!futuresContracts[futuresContract])throw;bytes32hash=keccak256(this,futuresContract);if(ecrecover(keccak256("\x19Ethereum Signed Message:\n32",hash),v,r,s)!=user)throw;userAllowedFuturesContracts[user][futuresContract]=true;emitAllowFuturesContract(futuresContract,user);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 374
column: 4
content: functionallowFuturesContractForUserByFuturesContract(addressuser,uint8v,bytes32r,bytes32s)onlyFuturesContractreturns(bool){if(!futuresContracts[msg.sender])returnfalse;bytes32hash=keccak256(this,msg.sender);if(ecrecover(keccak256("\x19Ethereum Signed Message:\n32",hash),v,r,s)!=user)returnfalse;userAllowedFuturesContracts[user][msg.sender]=true;emitAllowFuturesContract(msg.sender,user);returntrue;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 389
column: 4
content: functionadminWithdraw(addresstoken,uint256amount,addressuser,uint256nonce,uint8v,bytes32r,bytes32s,uint256feeWithdrawal)onlyAdminreturns(boolsuccess){bytes32hash=keccak256(this,token,amount,user,nonce);if(withdrawn[hash])throw;withdrawn[hash]=true;if(ecrecover(keccak256("\x19Ethereum Signed Message:\n32",hash),v,r,s)!=user)throw;if(feeWithdrawal>50finney)feeWithdrawal=50finney;if(availableBalanceOf(token,user)<amount)throw;subBalance(token,user,amount);subBalance(address(0),user,feeWithdrawal);addBalance(address(0),feeAccount,feeWithdrawal);if(token==address(0)){if(!user.send(amount))throw;}else{if(!Token(token).transfer(user,amount))throw;}lastActiveTransaction[user]=block.number;emitWithdraw(token,user,amount,balanceOf(token,user),feeWithdrawal);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 427
column: 4
content: functionbatchAdminWithdraw(address[]token,uint256[]amount,address[]user,uint256[]nonce,uint8[]v,bytes32[]r,bytes32[]s,uint256[]feeWithdrawal)onlyAdmin{for(uinti=0;i<amount.length;i++){adminWithdraw(token[i],amount[i],user[i],nonce[i],v[i],r[i],s[i],feeWithdrawal[i]);}}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 454
column: 4
content: functiongetMakerTakerBalances(addresstoken,addressmaker,addresstaker)viewreturns(uint256[4]){return[balanceOf(token,maker),balanceOf(token,taker),getReserve(token,maker),getReserve(token,taker)];}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 497
column: 4
content: functiontrade(uint8[2]v,bytes32[4]rs,uint256[8]tradeValues,address[6]tradeAddresses)onlyAdminreturns(uintfilledTakerTokenAmount){OrderPairmemoryt=OrderPair({makerAmountBuy:tradeValues[0],makerAmountSell:tradeValues[1],makerNonce:tradeValues[2],takerAmountBuy:tradeValues[3],takerAmountSell:tradeValues[4],takerNonce:tradeValues[5],takerGasFee:tradeValues[6],takerIsBuying:tradeValues[7],makerTokenBuy:tradeAddresses[0],makerTokenSell:tradeAddresses[1],maker:tradeAddresses[2],takerTokenBuy:tradeAddresses[3],takerTokenSell:tradeAddresses[4],taker:tradeAddresses[5],makerOrderHash:keccak256(this,tradeAddresses[0],tradeValues[0],tradeAddresses[1],tradeValues[1],tradeValues[2],tradeAddresses[2]),takerOrderHash:keccak256(this,tradeAddresses[3],tradeValues[3],tradeAddresses[4],tradeValues[4],tradeValues[5],tradeAddresses[5])});if(ecrecover(keccak256("\x19Ethereum Signed Message:\n32",t.makerOrderHash),v[0],rs[0],rs[1])!=t.maker){emitLogError(uint8(Errors.INVLID_SIGNATURE),t.makerOrderHash,t.takerOrderHash);return0;}if(ecrecover(keccak256("\x19Ethereum Signed Message:\n32",t.takerOrderHash),v[1],rs[2],rs[3])!=t.taker){emitLogError(uint8(Errors.INVLID_SIGNATURE),t.makerOrderHash,t.takerOrderHash);return0;}if(t.makerTokenBuy!=t.takerTokenSell||t.makerTokenSell!=t.takerTokenBuy){emitLogError(uint8(Errors.TOKENS_DONT_MATCH),t.makerOrderHash,t.takerOrderHash);return0;}if(t.takerGasFee>100finney){emitLogError(uint8(Errors.GAS_TOO_HIGH),t.makerOrderHash,t.takerOrderHash);return0;}if(!((t.takerIsBuying==0&&safeMul(t.makerAmountSell,1ether)/t.makerAmountBuy>=safeMul(t.takerAmountBuy,1ether)/t.takerAmountSell)||(t.takerIsBuying>0&&safeMul(t.makerAmountBuy,1ether)/t.makerAmountSell<=safeMul(t.takerAmountSell,1ether)/t.takerAmountBuy))){emitLogError(uint8(Errors.INVLID_PRICE),t.makerOrderHash,t.takerOrderHash);return0;}TradeValuesmemorytv=TradeValues({qty:0,invQty:0,makerAmountTaken:0,takerAmountTaken:0});if(t.takerIsBuying==0){tv.qty=min(safeSub(t.makerAmountBuy,orderFills[t.makerOrderHash]),safeSub(t.takerAmountSell,safeMul(orderFills[t.takerOrderHash],t.takerAmountSell)/t.takerAmountBuy));if(tv.qty==0){emitLogError(uint8(Errors.ORDER_ALREADY_FILLED),t.makerOrderHash,t.takerOrderHash);return0;}tv.invQty=safeMul(tv.qty,t.makerAmountSell)/t.makerAmountBuy;tv.makerAmountTaken=safeSub(tv.qty,safeMul(tv.qty,makerFee)/(1ether));addBalance(t.makerTokenBuy,feeAccount,safeMul(tv.qty,makerFee)/(1ether));tv.takerAmountTaken=safeSub(safeSub(tv.invQty,safeMul(tv.invQty,takerFee)/(1ether)),safeMul(tv.invQty,t.takerGasFee)/(1ether));addBalance(t.takerTokenBuy,feeAccount,safeAdd(safeMul(tv.invQty,takerFee)/(1ether),safeMul(tv.invQty,t.takerGasFee)/(1ether)));subBalance(t.makerTokenSell,t.maker,tv.invQty);addBalance(t.makerTokenBuy,t.maker,tv.makerAmountTaken);subBalance(t.takerTokenSell,t.taker,tv.qty);addBalance(t.takerTokenBuy,t.taker,tv.takerAmountTaken);orderFills[t.makerOrderHash]=safeAdd(orderFills[t.makerOrderHash],tv.qty);orderFills[t.takerOrderHash]=safeAdd(orderFills[t.takerOrderHash],safeMul(tv.qty,t.takerAmountBuy)/t.takerAmountSell);lastActiveTransaction[t.maker]=block.number;lastActiveTransaction[t.taker]=block.number;emitTrade(t.takerTokenBuy,tv.qty,t.takerTokenSell,tv.invQty,t.maker,t.taker,makerFee,takerFee,tv.makerAmountTaken,tv.takerAmountTaken,t.makerOrderHash,t.takerOrderHash);returntv.qty;}else{tv.qty=min(safeSub(t.makerAmountSell,safeMul(orderFills[t.makerOrderHash],t.makerAmountSell)/t.makerAmountBuy),safeSub(t.takerAmountBuy,orderFills[t.takerOrderHash]));if(tv.qty==0){emitLogError(uint8(Errors.ORDER_ALREADY_FILLED),t.makerOrderHash,t.takerOrderHash);return0;}tv.invQty=safeMul(tv.qty,t.makerAmountBuy)/t.makerAmountSell;tv.makerAmountTaken=safeSub(tv.invQty,safeMul(tv.invQty,makerFee)/(1ether));addBalance(t.makerTokenBuy,feeAccount,safeMul(tv.invQty,makerFee)/(1ether));tv.takerAmountTaken=safeSub(safeSub(tv.qty,safeMul(tv.qty,takerFee)/(1ether)),safeMul(tv.qty,t.takerGasFee)/(1ether));addBalance(t.takerTokenBuy,feeAccount,safeAdd(safeMul(tv.qty,takerFee)/(1ether),safeMul(tv.qty,t.takerGasFee)/(1ether)));subBalance(t.makerTokenSell,t.maker,tv.qty);addBalance(t.makerTokenBuy,t.maker,tv.makerAmountTaken);subBalance(t.takerTokenSell,t.taker,tv.invQty);addBalance(t.takerTokenBuy,t.taker,tv.takerAmountTaken);orderFills[t.makerOrderHash]=safeAdd(orderFills[t.makerOrderHash],tv.invQty);orderFills[t.takerOrderHash]=safeAdd(orderFills[t.takerOrderHash],tv.qty);lastActiveTransaction[t.maker]=block.number;lastActiveTransaction[t.taker]=block.number;emitTrade(t.takerTokenBuy,tv.qty,t.takerTokenSell,tv.invQty,t.maker,t.taker,makerFee,takerFee,tv.makerAmountTaken,tv.takerAmountTaken,t.makerOrderHash,t.takerOrderHash);returntv.qty;}}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 730
column: 4
content: functionbatchOrderTrade(uint8[2][]v,bytes32[4][]rs,uint256[8][]tradeValues,address[6][]tradeAddresses)onlyAdmin{for(uinti=0;i<tradeAddresses.length;i++){trade(v[i],rs[i],tradeValues[i],tradeAddresses[i]);}}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 748
column: 4
content: functioncancelOrder(uint8[2]v,bytes32[4]rs,uint256[5]cancelValues,address[4]cancelAddresses)onlyAdmin{bytes32orderHash=keccak256(this,cancelAddresses[0],cancelValues[0],cancelAddresses[1],cancelValues[1],cancelValues[2],cancelAddresses[2]);require(ecrecover(keccak256("\x19Ethereum Signed Message:\n32",orderHash),v[0],rs[0],rs[1])==cancelAddresses[2]);bytes32cancelHash=keccak256(this,orderHash,cancelAddresses[3],cancelValues[3]);require(ecrecover(keccak256("\x19Ethereum Signed Message:\n32",cancelHash),v[1],rs[2],rs[3])==cancelAddresses[3]);require(cancelAddresses[2]==cancelAddresses[3]);require(orderFills[orderHash]!=cancelValues[0]);if(cancelValues[4]>50finney){cancelValues[4]=50finney;}subBalance(address(0),cancelAddresses[3],cancelValues[4]);orderFills[orderHash]=cancelValues[0];emitCancelOrder(cancelHash,orderHash,cancelAddresses[3],cancelAddresses[1],cancelValues[1],cancelValues[4]);}

SOLIDITY_VISIBILITY :37
SOLIDITY_OVERPOWERED_ROLE :5
SOLIDITY_DEPRECATED_CONSTRUCTIONS :24
SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_REVERT_REQUIRE :23
SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN :5
SOLIDITY_EXTRA_GAS_IN_LOOPS :2
SOLIDITY_ADDRESS_HARDCODED :4
SOLIDITY_UPGRADE_TO_050 :14
SOLIDITY_GAS_LIMIT_IN_LOOPS :2
SOLIDITY_REDUNDANT_FALLBACK_REJECT :1