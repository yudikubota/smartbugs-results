/unique_chucks/18/0x77f54e6a0ed49e8ce5155468feaec29368b10465.sol
line 28:30 extraneous input 'payable' expecting ')'
line 236:14 no viable alternative at input 'addresspayable'
line 259:14 no viable alternative at input 'addresspayable'
line 458:43 extraneous input 'payable' expecting {',', ')'}
line 458:61 no viable alternative at input 'desaccount)'
line 458:61 extraneous input ')' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 458:79 mismatched input '{' expecting {';', '='}
line 459:25 extraneous input '(' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 459:33 extraneous input ')' expecting {';', '='}
line 460:21 mismatched input '=' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 460:29 extraneous input '(' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 460:34 mismatched input ')' expecting {';', '='}
line 460:43 extraneous input ';' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 464:2 extraneous input 'function' expecting {<EOF>, 'pragma', 'import', 'contract', 'library', 'interface'}
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: adc165
severity: 1
line: 61
column: 14
content: 0x8948E4B00DEB0a5ADb909F4DC5789d20D0851D71

ruleId: SOLIDITY_ARRAY_LENGTH_MANIPULATION
patternId: 43ba1c
severity: 1
line: 119
column: 17
content: playerLableList[msg.sender].length++

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 97
column: 6
content: for(uinti=0;i<playid.length;i++){orderId++;tmp[0]=orderId;tmp[1]=playid[i];tmp[2]=betContent[i];tmp[3]=betMoney[i]*mutiply;totalspand+=betMoney[i]*mutiply;tmp[4]=now;tmp[5]=0;tmp[6]=0;betList[queryId][i]=tmp;}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 176
column: 6
content: for(i=0;i<playid.length;i++){if(playid[i]>=1&&playid[i]<=3){totalMoney+=betMoney[i]*mutiply;}else{revert();}if(playid[i]==1||playid[i]==3){rate=getPlayRate(playid[i],0);totalWin1+=betMoney[i]*mutiply*rate/10;totalWin2+=betMoney[i]*mutiply*rate/10;}elseif(playid[i]==2){rate=getPlayRate(playid[i],0);totalWin2+=betMoney[i]*mutiply*rate;}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 97
column: 6
content: for(uinti=0;i<playid.length;i++){orderId++;tmp[0]=orderId;tmp[1]=playid[i];tmp[2]=betContent[i];tmp[3]=betMoney[i]*mutiply;totalspand+=betMoney[i]*mutiply;tmp[4]=now;tmp[5]=0;tmp[6]=0;betList[queryId][i]=tmp;}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 176
column: 6
content: for(i=0;i<playid.length;i++){if(playid[i]>=1&&playid[i]<=3){totalMoney+=betMoney[i]*mutiply;}else{revert();}if(playid[i]==1||playid[i]==3){rate=getPlayRate(playid[i],0);totalWin1+=betMoney[i]*mutiply*rate/10;totalWin2+=betMoney[i]*mutiply*rate/10;}elseif(playid[i]==2){rate=getPlayRate(playid[i],0);totalWin2+=betMoney[i]*mutiply*rate;}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 390
column: 8
content: for(uinti1=0;i1<len;i1++){ss=len-i1-1;lastLable=playerLableList[msg.sender][ss];max+=lableCount[lastLable];if(100<max){max=100;break;}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 408
column: 8
content: for(uintii=0;ii<len;ii++){ss=len-ii-1;lastLable=playerLableList[msg.sender][ss];betnums=lableCount[lastLable];for(uintk=0;k<betnums;k++){if(j<max){resultlable[j]=lastLable;stringmemoryttmp=openNumberStr[lastLable];if(j==0){opennum=ttmp;}else{opennum=strConcat(opennum,";",ttmp);}result[j]=betList[lastLable][k];if(lableStatus[lastLable]==1){result[j][5]=3;}elseif(lableStatus[lastLable]==2){if(result[j][5]==2){result[j][5]=4;}}elseif(lableStatus[lastLable]==3){if(result[j][5]==2){result[j][5]=5;}}j++;}else{flag=true;break;}}if(flag){break;}}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: >=

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 25
content: <

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 12
column: 10
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 13
column: 7
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 14
column: 7
content: private

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 127
column: 6
content: if(lableCount[queryId]<1)revert();

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 177
column: 8
content: if(playid[i]>=1&&playid[i]<=3){totalMoney+=betMoney[i]*mutiply;}else{revert();}

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 328
column: 45
content: (stringmemoryopennum,uint[7][]memoryresult)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 358
column: 63
content: (stringmemoryopennum,uint[7][]memoryresult)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 382
column: 48
content: (stringmemoryopennum,uint[7][]memoryresult)

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 458
column: 2
content: functionwithdraw(uint_amount,address<missing ')'>payable

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 5
column: 2
content: uintmaxProfit;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 6
column: 2
content: uintmaxmoneypercent;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 10
column: 2
content: uintminBet;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 11
column: 2
content: uintonoff;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 21
column: 2
content: mapping(address=>bytes32[])playerLableList;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 22
column: 2
content: mapping(bytes32=>mapping(uint=>uint[7]))betList;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 23
column: 2
content: mapping(bytes32=>uint)lableCount;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 24
column: 2
content: mapping(bytes32=>uint)lableTime;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 25
column: 2
content: mapping(bytes32=>uint)lableStatus;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 26
column: 2
content: mapping(bytes32=>uint[4])openNumberList;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 27
column: 2
content: mapping(bytes32=>string)openNumberStr;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 28
column: 2
content: mapping(bytes32=>addresspayable)lableUser;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 30
column: 2
content: bytestempNum;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 31
column: 2
content: uint[]numbers;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 459
column: 6
content: desaccount.transfer(_amount);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 460
column: 6
content: contractBalance=

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 460
column: 22
content: address(this).

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 460
column: 36
content: balance;maxProfit=(address(this).balance*maxmoneypercent)/100;

SOLIDITY_VISIBILITY :19
SOLIDITY_PRAGMAS_VERSION :2
SOLIDITY_ARRAY_LENGTH_MANIPULATION :1
SOLIDITY_REVERT_REQUIRE :2
SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA :3
SOLIDITY_EXTRA_GAS_IN_LOOPS :2
SOLIDITY_ADDRESS_HARDCODED :1
SOLIDITY_GAS_LIMIT_IN_LOOPS :4
SOLIDITY_SHOULD_RETURN_STRUCT :3