/unique_chucks/25/0x75be61fa66325ec34386adf1d6e90fd4c039f8b6.sol
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: c67a09
severity: 1
line: 274
column: 36
content: 0x0

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: c67a09
severity: 1
line: 275
column: 35
content: 0x0

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: c67a09
severity: 1
line: 346
column: 35
content: 0x0

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: c67a09
severity: 1
line: 393
column: 31
content: 0x0

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: c67a09
severity: 1
line: 469
column: 31
content: 0x0

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: c67a09
severity: 1
line: 470
column: 37
content: 0x0

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: c67a09
severity: 1
line: 502
column: 32
content: 0x0

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: c67a09
severity: 1
line: 503
column: 30
content: 0x0

ruleId: SOLIDITY_ERC20_APPROVE
patternId: af782c
severity: 2
line: 322
column: 4
content: functionapprove(address_spender,uint256_value)publicreturns(bool){require(isAuthorised(_spender),"Target of approve has not passed KYC");if(allowanceCollection[msg.sender][_spender]>0&&_value!=0){revert("You cannot set a non-zero allowance to another non-zero, you must zero it first.");}allowanceCollection[msg.sender][_spender]=_value;emitApproval(msg.sender,_spender,_value);returntrue;}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 74
column: 4
content: functionsetAuthorised(addresswho,boolisAuthorised)publiconlyOwner{authorised[who]=isAuthorised;emitAuthorisationChanged(who,isAuthorised);}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 369
column: 4
content: functionsetKycHash(bytes32sha)publiconlyOwner{require(!isIcoComplete,"The ICO phase has ended, you can no longer set KYC hashes.");kycHashes.push(sha);}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 411
column: 4
content: functionsetKycProvider(addresswho)publiconlyOwner{regulatorApprovedKycProvider=who;}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 324
column: 8
content: if(allowanceCollection[msg.sender][_spender]>0&&_value!=0){revert("You cannot set a non-zero allowance to another non-zero, you must zero it first.");}

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 164
column: 4
content: usingSafeMathforuint256;

SOLIDITY_SAFEMATH :1
SOLIDITY_OVERPOWERED_ROLE :3
SOLIDITY_REVERT_REQUIRE :1
SOLIDITY_ADDRESS_HARDCODED :8
SOLIDITY_ERC20_APPROVE :1