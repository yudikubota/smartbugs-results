/unique_chucks/17/0x80f84866d4872f1ea412ddf10e2ed7af0b8ca8fb.sol
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 187b5a
severity: 1
line: 58
column: 19
content: sha3

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 187b5a
severity: 1
line: 66
column: 19
content: sha3

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 187b5a
severity: 1
line: 79
column: 36
content: sha3

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 187b5a
severity: 1
line: 82
column: 17
content: sha3

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 49bd2a
severity: 1
line: 102
column: 8
content: throw

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 37
column: 4
content: functionProofOfExistence(){manager=msg.sender;created="cryptonomica.net";}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 52
column: 4
content: functionaddDoc(string_publisher,string_docText)returns(bytes32){if(msg.sender!=manager){returnsha3("not authorized");}if(sha256Docs[sha256(_docText)].docIndex>0){returnsha3("text already exists");}docIndex=docIndex+1;indexedDocs[docIndex]=Doc(docIndex,_publisher,now,block.number,_docText,sha256(_docText),sha3(_docText));sha256Docs[sha256(_docText)]=indexedDocs[docIndex];sha3Docs[sha3(_docText)]=indexedDocs[docIndex];DocumentAdded(indexedDocs[docIndex].docIndex,indexedDocs[docIndex].publisher,indexedDocs[docIndex].publishedOnUnixTime);returnindexedDocs[docIndex].sha3Hash;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 95
column: 4
content: function(){throw;}

SOLIDITY_VISIBILITY :3
SOLIDITY_DEPRECATED_CONSTRUCTIONS :5