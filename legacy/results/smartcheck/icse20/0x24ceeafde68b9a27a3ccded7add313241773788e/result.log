/unique_chucks/8/0x24ceeafde68b9a27a3ccded7add313241773788e.sol
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 402
column: 32
content: 0xffffffffffffffffffffffff

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 468
column: 34
content: (this,nonce,fee,gasAmount,to,value,data,mode,address(0))

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 476
column: 34
content: (this,nonce,fee,gasAmount,to,value,data,mode,address(0))

ruleId: SOLIDITY_DIV_MUL
patternId: 09hhh1
severity: 2
line: 68
column: 10
content: mul(value/d,m)

ruleId: SOLIDITY_DIV_MUL
patternId: 09hhh1
severity: 2
line: 81
column: 10
content: mul(value/d,m)

ruleId: SOLIDITY_ERC20_APPROVE
patternId: af782c
severity: 2
line: 312
column: 2
content: functionapprove(addressspender,uint256value)publicreturns(bool){InstrumentstoragespenderInstrument=accounts[msg.sender].instruments[spender];if(erc20ApproveChecking){require((value==0)||(spenderInstrument.allowance==0));}emitApproval(msg.sender,spender,spenderInstrument.allowance=value);returntrue;}

ruleId: SOLIDITY_ERC20_APPROVE
patternId: af782c
severity: 2
line: 330
column: 2
content: functionapprove(addressspender,uint256expectedValue,uint256newValue)publicreturns(bool){InstrumentstoragespenderInstrument=accounts[msg.sender].instruments[spender];require(spenderInstrument.allowance==expectedValue);emitApproval(msg.sender,spender,spenderInstrument.allowance=newValue);returntrue;}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 400
column: 4
content: for(uint256i=0;i<data.length;i++){addressreceiver=address(data[i]>>96);uint256value=data[i]&0xffffffffffffffffffffffff;totalValue=totalValue.add(value);accounts[receiver].balance+=value;emitTransfer(msg.sender,receiver,value);}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 577
column: 4
content: for(uint256i=0;i<debtors.length;i++){addressdebtor=debtors[i];AccountstoragedebtorAccount=accounts[debtor];DirectDebitstoragedebit=debtorAccount.instruments[msg.sender].directDebit;uint256epoch=(block.timestamp.sub(debit.info.startTime)/debit.info.interval).add(1);uint256amount=epoch.sub(debit.epoch).mul(debit.info.amount);require(amount>0);uint256debtorBalance=debtorAccount.balance;if(amount>debtorBalance){if(strict){revert();}result=false;emitWithdrawDirectDebitFailure(debtor,msg.sender);}else{debtorAccount.balance=debtorBalance-amount;total+=amount;debit.epoch=epoch;emitTransfer(debtor,msg.sender,amount);}}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 47acc2
severity: 1
line: 442
column: 2
content: functionincreaseNonce()publicreturns(bool){emitIncreaseNonce(msg.sender,accounts[msg.sender].nonce+=1);}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 11
column: 2
content: functionisAccount(address_address)internalviewreturns(boolresult){assembly{result:=iszero(extcodesize(_address))}}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 17
column: 2
content: functiontoBytes(address_address)internalpurereturns(bytesb){assembly{letm:=mload(0x40)mstore(add(m,20),xor(0x140000000000000000000000000000000000000000,_address))mstore(0x40,add(m,52))b:=m}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 400
column: 4
content: for(uint256i=0;i<data.length;i++){addressreceiver=address(data[i]>>96);uint256value=data[i]&0xffffffffffffffffffffffff;totalValue=totalValue.add(value);accounts[receiver].balance+=value;emitTransfer(msg.sender,receiver,value);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 577
column: 4
content: for(uint256i=0;i<debtors.length;i++){addressdebtor=debtors[i];AccountstoragedebtorAccount=accounts[debtor];DirectDebitstoragedebit=debtorAccount.instruments[msg.sender].directDebit;uint256epoch=(block.timestamp.sub(debit.info.startTime)/debit.info.interval).add(1);uint256amount=epoch.sub(debit.epoch).mul(debit.info.amount);require(amount>0);uint256debtorBalance=debtorAccount.balance;if(amount>debtorBalance){if(strict){revert();}result=false;emitWithdrawDirectDebitFailure(debtor,msg.sender);}else{debtorAccount.balance=debtorBalance-amount;total+=amount;debit.epoch=epoch;emitTransfer(debtor,msg.sender,amount);}}

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 194
column: 0
content: contractFsTKToken{enumDelegateMode{PublicMsgSender,PublicTxOrigin,PrivateMsgSender,PrivateTxOrigin}eventConsume(addressindexedfrom,uint256value,bytes32challenge);eventIncreaseNonce(addressindexedfrom,uint256nonce);eventSetupDirectDebit(addressindexeddebtor,addressindexedreceiver,DirectDebitInfoinfo);eventTerminateDirectDebit(addressindexeddebtor,addressindexedreceiver);eventWithdrawDirectDebitFailure(addressindexeddebtor,addressindexedreceiver);eventSetMetadata(stringmetadata);eventSetLiquid(boolliquidity);eventSetDelegate(boolisDelegateEnable);eventSetDirectDebit(boolisDirectDebitEnable);structDirectDebitInfo{uint256amount;uint256startTime;uint256interval;}structDirectDebit{DirectDebitInfoinfo;uint256epoch;}structInstrument{uint256allowance;DirectDebitdirectDebit;}structAccount{uint256balance;uint256nonce;mapping(address=>Instrument)instruments;}functionspendableAllowance(addressowner,addressspender)publicviewreturns(uint256);functiontransfer(uint256[]data)publicreturns(bool);functiontransferAndCall(addressto,uint256value,bytesdata)publicpayablereturns(bool);functionnonceOf(addressowner)publicviewreturns(uint256);functionincreaseNonce()publicreturns(bool);functiondelegateTransferAndCall(uint256nonce,uint256fee,uint256gasAmount,addressto,uint256value,bytesdata,DelegateModemode,uint8v,bytes32r,bytes32s)publicreturns(bool);functiondirectDebit(addressdebtor,addressreceiver)publicviewreturns(DirectDebit);functionsetupDirectDebit(addressreceiver,DirectDebitInfoinfo)publicreturns(bool);functionterminateDirectDebit(addressreceiver)publicreturns(bool);functionwithdrawDirectDebit(addressdebtor)publicreturns(bool);functionwithdrawDirectDebit(address[]debtors,boolstrict)publicreturns(bool);}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: ^

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 490
column: 11
content: if(mode==DelegateMode.PrivateTxOrigin){signer=ecrecover(keccak256(abi.encodePacked(this,nonce,fee,gasAmount,to,value,data,mode,tx.origin)),v,r,s);relayer=tx.origin;}else{revert();}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 587
column: 8
content: if(strict){revert();}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 17
column: 2
content: functiontoBytes(address_address)internalpurereturns(bytesb){assembly{letm:=mload(0x40)mstore(add(m,20),xor(0x140000000000000000000000000000000000000000,_address))mstore(0x40,add(m,52))b:=m}}

ruleId: SOLIDITY_SHOULD_NOT_BE_VIEW
patternId: 189abf
severity: 1
line: 11
column: 2
content: functionisAccount(address_address)internalviewreturns(boolresult){assembly{result:=iszero(extcodesize(_address))}}

ruleId: SOLIDITY_TX_ORIGIN
patternId: 12e802
severity: 2
line: 481
column: 16
content: tx.origin

ruleId: SOLIDITY_TX_ORIGIN
patternId: 12e802
severity: 2
line: 492
column: 87
content: tx.origin

ruleId: SOLIDITY_TX_ORIGIN
patternId: 12e802
severity: 2
line: 497
column: 16
content: tx.origin

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 17
column: 60
content: bytesb

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 114
column: 59
content: bytesdata

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 115
column: 57
content: bytesapproveToken

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 229
column: 20
content: uint256[]data

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 230
column: 54
content: bytesdata

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 240
column: 4
content: bytesdata

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 247
column: 78
content: DirectDebit

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 248
column: 46
content: DirectDebitInfoinfo

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 251
column: 31
content: address[]debtors

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 278
column: 14
content: string_metadata

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 372
column: 24
content: string_metadata

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 396
column: 20
content: uint256[]data

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 418
column: 4
content: bytesdata

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 452
column: 4
content: bytesdata

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 572
column: 31
content: address[]debtors

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 615
column: 4
content: string_name

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 616
column: 4
content: string_symbol

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 618
column: 4
content: string_metadata

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 646
column: 4
content: stringinfoUrl

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 648
column: 4
content: bytesapproveToken

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 660
column: 4
content: bytesapproveToken

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 12
column: 4
content: assembly{result:=iszero(extcodesize(_address))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 18
column: 3
content: assembly{letm:=mload(0x40)mstore(add(m,20),xor(0x140000000000000000000000000000000000000000,_address))mstore(0x40,add(m,52))b:=m}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 430
column: 4
content: assembly{mstore(add(data,36),value)mstore(add(data,68),caller)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 514
column: 6
content: assembly{mstore(add(data,36),value)mstore(add(data,68),signer)}

SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN :3
SOLIDITY_EXTRA_GAS_IN_LOOPS :2
SOLIDITY_ADDRESS_HARDCODED :3
SOLIDITY_UPGRADE_TO_050 :21
SOLIDITY_GAS_LIMIT_IN_LOOPS :2
SOLIDITY_DIV_MUL :2
SOLIDITY_TX_ORIGIN :3
SOLIDITY_SHOULD_NOT_BE_PURE :1
SOLIDITY_ERC20_APPROVE :2
SOLIDITY_REVERT_REQUIRE :2
SOLIDITY_LOCKED_MONEY :1
SOLIDITY_USING_INLINE_ASSEMBLY :4
SOLIDITY_SHOULD_NOT_BE_VIEW :1