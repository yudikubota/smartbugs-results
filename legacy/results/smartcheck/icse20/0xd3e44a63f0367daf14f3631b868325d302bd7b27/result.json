{
  "contract": "0xd3e44a63f0367daf14f3631b868325d302bd7b27",
  "tool": "smartcheck",
  "start": 1563515006.6804688,
  "end": 1563515017.2069082,
  "duration": 10.526439428329468,
  "analysis": [
    {
      "name": "SOLIDITY_EXTRA_GAS_IN_LOOPS",
      "patternId": "d3j11j",
      "severity": 1,
      "line": 180,
      "column": 8,
      "content": "for(uinti=0;i<proof_inputs.length;i++){mul_input[0]=vk_gammaABC[m++];mul_input[1]=vk_gammaABC[m++];mul_input[2]=proof_inputs[i];assembly{success:=staticcall(sub(gas,2000),7,mul_input,0x60,add(add_input,0x40),0x40)}require(success,\"Failed to call ECMUL precompile\");assembly{success:=staticcall(sub(gas,2000),6,add_input,0x80,add_input,0x40)}require(success,\"Failed to call ECADD precompile\");}"
    },
    {
      "name": "SOLIDITY_GAS_LIMIT_IN_LOOPS",
      "patternId": "f6f853",
      "severity": 2,
      "line": 180,
      "column": 8,
      "content": "for(uinti=0;i<proof_inputs.length;i++){mul_input[0]=vk_gammaABC[m++];mul_input[1]=vk_gammaABC[m++];mul_input[2]=proof_inputs[i];assembly{success:=staticcall(sub(gas,2000),7,mul_input,0x60,add(add_input,0x40),0x40)}require(success,\"Failed to call ECMUL precompile\");assembly{success:=staticcall(sub(gas,2000),6,add_input,0x80,add_input,0x40)}require(success,\"Failed to call ECADD precompile\");}"
    },
    {
      "name": "SOLIDITY_LOCKED_MONEY",
      "patternId": "30281d",
      "severity": 3,
      "line": 388,
      "column": 0,
      "content": "contractFranklinProxyisFranklinCommon{constructor(address_depositor,address_transactor,address_exitor)public{nextAccountToRegister=2;lastVerifiedRoot=EMPTY_TREE_ROOT;operators[msg.sender]=true;depositor=_depositor;transactor=_transactor;exitor=_exitor;}functiondeposit(uint256[2]memory,uint128)publicpayable{callExternal(depositor);}functiondepositInto(uint24,uint128)publicpayable{callExternal(depositor);}functioncancelDeposit()public{callExternal(depositor);}functionstartNextDepositBatch()public{callExternal(depositor);}functionchangeDepositBatchFee(uint128)public{callExternal(depositor);}functioncommitDepositBlock(uint256,uint24[DEPOSIT_BATCH_SIZE]memory,uint32,bytes32)public{callExternal(depositor);}functionverifyDepositBlock(uint256,uint24[DEPOSIT_BATCH_SIZE]memory,uint32,uint256[8]memory)public{callExternal(depositor);}functioncommitTransferBlock(uint32,uint128,bytesmemory,bytes32)public{callExternal(transactor);}functionverifyTransferBlock(uint32,uint256[8]memory)public{callExternal(transactor);}functionexit()publicpayable{callExternal(exitor);}functioncancelExit()public{callExternal(exitor);}functionstartNextExitBatch()public{callExternal(exitor);}functionchangeExitBatchFee(uint128)public{callExternal(exitor);}functioncommitExitBlock(uint256,uint24[EXIT_BATCH_SIZE]memory,uint32,bytesmemory,bytes32)public{callExternal(exitor);}functionverifyExitBlock(uint256,uint32,uint256[8]memory)public{callExternal(exitor);}functionwithdrawUserBalance(uint256)public{callExternal(exitor);}functioncallExternal(addresscallee)internal{assembly{letmemoryPointer:=mload(0x40)calldatacopy(memoryPointer,0,calldatasize)letnewFreeMemoryPointer:=add(memoryPointer,calldatasize)mstore(0x40,newFreeMemoryPointer)letretVal:=delegatecall(sub(gas,2000),callee,memoryPointer,calldatasize,newFreeMemoryPointer,0x40)letretDataSize:=returndatasizereturndatacopy(newFreeMemoryPointer,0,retDataSize)switchretValcase0{revert(newFreeMemoryPointer,returndatasize)}default{return(newFreeMemoryPointer,retDataSize)}}}}"
    },
    {
      "name": "SOLIDITY_PRAGMAS_VERSION",
      "patternId": "23fc32",
      "severity": 1,
      "line": 1,
      "column": 16,
      "content": "^"
    },
    {
      "name": "SOLIDITY_SHOULD_NOT_BE_VIEW",
      "patternId": "189abf",
      "severity": 1,
      "line": 162,
      "column": 4,
      "content": "functionVerify(uint256[14]in_vk,uint256[]vk_gammaABC,uint256[8]in_proof,uint256[]proof_inputs)internalviewreturns(bool){require(((vk_gammaABC.length/2)-1)==proof_inputs.length,\"Invalid number of public inputs\");uint256[3]memorymul_input;uint256[4]memoryadd_input;boolsuccess;uintm=2;add_input[0]=vk_gammaABC[0];add_input[1]=vk_gammaABC[1];for(uinti=0;i<proof_inputs.length;i++){mul_input[0]=vk_gammaABC[m++];mul_input[1]=vk_gammaABC[m++];mul_input[2]=proof_inputs[i];assembly{success:=staticcall(sub(gas,2000),7,mul_input,0x60,add(add_input,0x40),0x40)}require(success,\"Failed to call ECMUL precompile\");assembly{success:=staticcall(sub(gas,2000),6,add_input,0x80,add_input,0x40)}require(success,\"Failed to call ECADD precompile\");}uint[24]memoryinput=[in_proof[0],in_proof[1],in_proof[2],in_proof[3],in_proof[4],in_proof[5],in_vk[0],NegateY(in_vk[1]),in_vk[2],in_vk[3],in_vk[4],in_vk[5],add_input[0],NegateY(add_input[1]),in_vk[6],in_vk[7],in_vk[8],in_vk[9],in_proof[6],NegateY(in_proof[7]),in_vk[10],in_vk[11],in_vk[12],in_vk[13]];uint[1]memoryout;assembly{success:=staticcall(sub(gas,2000),8,input,768,out,0x20)}require(success,\"Failed to call pairing precompile\");returnout[0]==1;}"
    },
    {
      "name": "SOLIDITY_SHOULD_RETURN_STRUCT",
      "patternId": "7d54ca",
      "severity": 1,
      "line": 227,
      "column": 57,
      "content": "(uint256[14]memoryvk,uint256[]memorygammaABC)"
    },
    {
      "name": "SOLIDITY_SHOULD_RETURN_STRUCT",
      "patternId": "7d54ca",
      "severity": 1,
      "line": 262,
      "column": 54,
      "content": "(uint256[14]memoryvk,uint256[]memorygammaABC)"
    },
    {
      "name": "SOLIDITY_SHOULD_RETURN_STRUCT",
      "patternId": "7d54ca",
      "severity": 1,
      "line": 297,
      "column": 58,
      "content": "(uint256[14]memoryvk,uint256[]memorygammaABC)"
    },
    {
      "name": "SOLIDITY_UNCHECKED_CALL",
      "patternId": "f39eed",
      "severity": 3,
      "line": 401,
      "column": 8,
      "content": "callExternal(depositor)"
    },
    {
      "name": "SOLIDITY_UNCHECKED_CALL",
      "patternId": "f39eed",
      "severity": 3,
      "line": 405,
      "column": 8,
      "content": "callExternal(depositor)"
    },
    {
      "name": "SOLIDITY_UNCHECKED_CALL",
      "patternId": "f39eed",
      "severity": 3,
      "line": 409,
      "column": 8,
      "content": "callExternal(depositor)"
    },
    {
      "name": "SOLIDITY_UNCHECKED_CALL",
      "patternId": "f39eed",
      "severity": 3,
      "line": 413,
      "column": 8,
      "content": "callExternal(depositor)"
    },
    {
      "name": "SOLIDITY_UNCHECKED_CALL",
      "patternId": "f39eed",
      "severity": 3,
      "line": 417,
      "column": 8,
      "content": "callExternal(depositor)"
    },
    {
      "name": "SOLIDITY_UNCHECKED_CALL",
      "patternId": "f39eed",
      "severity": 3,
      "line": 421,
      "column": 8,
      "content": "callExternal(depositor)"
    },
    {
      "name": "SOLIDITY_UNCHECKED_CALL",
      "patternId": "f39eed",
      "severity": 3,
      "line": 425,
      "column": 8,
      "content": "callExternal(depositor)"
    },
    {
      "name": "SOLIDITY_UNCHECKED_CALL",
      "patternId": "f39eed",
      "severity": 3,
      "line": 429,
      "column": 8,
      "content": "callExternal(transactor)"
    },
    {
      "name": "SOLIDITY_UNCHECKED_CALL",
      "patternId": "f39eed",
      "severity": 3,
      "line": 433,
      "column": 8,
      "content": "callExternal(transactor)"
    },
    {
      "name": "SOLIDITY_UNCHECKED_CALL",
      "patternId": "f39eed",
      "severity": 3,
      "line": 437,
      "column": 8,
      "content": "callExternal(exitor)"
    },
    {
      "name": "SOLIDITY_UNCHECKED_CALL",
      "patternId": "f39eed",
      "severity": 3,
      "line": 441,
      "column": 8,
      "content": "callExternal(exitor)"
    },
    {
      "name": "SOLIDITY_UNCHECKED_CALL",
      "patternId": "f39eed",
      "severity": 3,
      "line": 445,
      "column": 8,
      "content": "callExternal(exitor)"
    },
    {
      "name": "SOLIDITY_UNCHECKED_CALL",
      "patternId": "f39eed",
      "severity": 3,
      "line": 449,
      "column": 8,
      "content": "callExternal(exitor)"
    },
    {
      "name": "SOLIDITY_UNCHECKED_CALL",
      "patternId": "f39eed",
      "severity": 3,
      "line": 453,
      "column": 8,
      "content": "callExternal(exitor)"
    },
    {
      "name": "SOLIDITY_UNCHECKED_CALL",
      "patternId": "f39eed",
      "severity": 3,
      "line": 457,
      "column": 8,
      "content": "callExternal(exitor)"
    },
    {
      "name": "SOLIDITY_UNCHECKED_CALL",
      "patternId": "f39eed",
      "severity": 3,
      "line": 461,
      "column": 8,
      "content": "callExternal(exitor)"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 162,
      "column": 41,
      "content": "uint256[]vk_gammaABC"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 162,
      "column": 85,
      "content": "uint256[]proof_inputs"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 185,
      "column": 12,
      "content": "assembly{success:=staticcall(sub(gas,2000),7,mul_input,0x60,add(add_input,0x40),0x40)}"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 191,
      "column": 12,
      "content": "assembly{success:=staticcall(sub(gas,2000),6,add_input,0x80,add_input,0x40)}"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 217,
      "column": 8,
      "content": "assembly{success:=staticcall(sub(gas,2000),8,input,768,out,0x20)}"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 466,
      "column": 8,
      "content": "assembly{letmemoryPointer:=mload(0x40)calldatacopy(memoryPointer,0,calldatasize)letnewFreeMemoryPointer:=add(memoryPointer,calldatasize)mstore(0x40,newFreeMemoryPointer)letretVal:=delegatecall(sub(gas,2000),callee,memoryPointer,calldatasize,newFreeMemoryPointer,0x40)letretDataSize:=returndatasizereturndatacopy(newFreeMemoryPointer,0,retDataSize)switchretValcase0{revert(newFreeMemoryPointer,returndatasize)}default{return(newFreeMemoryPointer,retDataSize)}}"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 6,
      "column": 4,
      "content": "bytes32constantEMPTY_TREE_ROOT=0x003f7e15e4de3453fe13e11fb4b007f1fce6a5b0f0353b3b8208910143aaa2f7;"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 108,
      "column": 4,
      "content": "uint256constantEXIT_BATCH_SIZE=1;"
    }
  ]
}