/unique_chucks/10/0xe512cd0db34e774075bd7e034fb1e3dd96137177.sol
line 499:91 extraneous input 'data' expecting {',', ')'}
line 708:75 extraneous input '_data' expecting {',', ')'}
line 812:51 extraneous input '_newBaseURI' expecting {',', ')'}
line 1067:19 extraneous input '_data' expecting {',', ')'}
line 1136:20 extraneous input '_rmsBondNo' expecting {',', ')'}
line 1136:30 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 1137:23 mismatched input ',' expecting {';', '='}
line 1139:2 mismatched input ')' expecting {';', '='}
line 1142:4 mismatched input 'returns' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 1143:2 mismatched input '{' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 1144:26 extraneous input '(' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 1144:32 mismatched input ',' expecting {';', '='}
line 1144:43 extraneous input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 1144:55 mismatched input ',' expecting {';', '='}
line 1144:70 mismatched input ')' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 1150:2 extraneous input 'function' expecting {<EOF>, 'pragma', 'import', 'contract', 'library', 'interface'}
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 764
column: 21
content: 0x5b5e139f

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 765
column: 21
content: 0x80ac58cd

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 766
column: 21
content: 0x780e9d63

ruleId: SOLIDITY_ERC20_APPROVE
patternId: af782c
severity: 2
line: 911
column: 2
content: functionapprove(address_to,uint256_tokenId)externalpayablewhenNotPausedwhenNotPausedUser(msg.sender)onlyOwnerOf(_tokenId){require(_to!=ownerOf(_tokenId));if(getApproved(_tokenId)!=address(0)||_to!=address(0)){tokenApprovals[_tokenId]=_to;emitApproval(ownerOf(_tokenId),_to,_tokenId);}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 649
column: 4
content: for(uinti=0;i<_ba.length;i++)babcde[k++]=_ba[i];

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 650
column: 4
content: for(uinti=0;i<_bb.length;i++)babcde[k++]=_bb[i];

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 651
column: 4
content: for(uinti=0;i<_bc.length;i++)babcde[k++]=_bc[i];

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 652
column: 4
content: for(uinti=0;i<_bd.length;i++)babcde[k++]=_bd[i];

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 653
column: 4
content: for(uinti=0;i<_be.length;i++)babcde[k++]=_be[i];

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 439
column: 4
content: for(uintindex=0;index<keySize;index++){addrs[index]=shareUsersKeys[_tokenId][index];amounts[index]=shareUsers[_tokenId][addrs[index]];}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 649
column: 4
content: for(uinti=0;i<_ba.length;i++)babcde[k++]=_ba[i];

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 650
column: 4
content: for(uinti=0;i<_bb.length;i++)babcde[k++]=_bb[i];

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 651
column: 4
content: for(uinti=0;i<_bc.length;i++)babcde[k++]=_bc[i];

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 652
column: 4
content: for(uinti=0;i<_bd.length;i++)babcde[k++]=_bd[i];

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 653
column: 4
content: for(uinti=0;i<_be.length;i++)babcde[k++]=_be[i];

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 726
column: 0
content: contractRedTokenOwnershipisRedTokenBase,ERC721,ERC165,ERC721Metadata,ERC721Enumerable{usingSafeMathforuint256;uint256privatetotalTokens;mapping(uint256=>address)privatetokenOwner;mapping(address=>uint256[])internalownedTokens;mapping(uint256=>uint256)internalownedTokensIndex;mapping(uint256=>address)internaltokenApprovals;mapping(address=>mapping(address=>bool))internaloperatorApprovals;eventcalculateShareUsers(uint256tokenId,addressowner,addressfrom,addressto,uint256amount);eventCollectedAmountUpdate(uint256tokenId,addressowner,uint256amount);stringinternalconstantNAME="RedToken";stringinternalconstantSYMBOL="REDT";stringinternaltokenMetadataBaseURI="https://doc.reditus.co.kr/?docid=";functionsupportsInterface(bytes4interfaceID)externalviewreturns(bool){returninterfaceID==this.supportsInterface.selector||interfaceID==0x5b5e139f||interfaceID==0x80ac58cd||interfaceID==0x780e9d63;}modifieronlyOwnerOf(uint256_tokenId){require(ownerOf(_tokenId)==msg.sender);_;}functionname()externalpurereturns(stringmemory){returnNAME;}functionsymbol()externalpurereturns(stringmemory){returnSYMBOL;}functiontokenURI(uint256_tokenId)externalviewreturns(stringmemoryinfoUrl){if(isValidRedToken(_tokenId)){returnStrings.strConcat(tokenMetadataBaseURI,Strings.uint2str(_tokenId));}else{returnStrings.strConcat(tokenMetadataBaseURI,Strings.uint2str(_tokenId));}}functionsetTokenMetadataBaseURI(stringcalldata_newBaseURI)externalonlyCOO{tokenMetadataBaseURI=_newBaseURI;}functiontotalSupply()externalviewreturns(uint256){returntotalTokens;}functionownerOf(uint256_tokenId)publicviewreturns(address){addressowner=tokenOwner[_tokenId];require(owner!=address(0));returnowner;}functionbalanceOf(address_owner)publicviewreturns(uint256){require(_owner!=address(0));returnownedTokens[_owner].length;}functiontokensOf(address_owner)externalviewreturns(uint256[]memory){require(_owner!=address(0));returnownedTokens[_owner];}functiontokenByIndex(uint256_index)externalviewreturns(uint256){require(_index<totalTokens);return_index;}functiontokenOfOwnerByIndex(address_owner,uint256_index)externalviewreturns(uint256_tokenId){require(_index<balanceOf(_owner));returnownedTokens[_owner][_index];}functiongetApproved(uint256_tokenId)publicviewreturns(address){returntokenApprovals[_tokenId];}functionisApprovedForAll(address_owner,address_operator)publicviewreturns(bool){returnoperatorApprovals[_owner][_operator];}functionapprove(address_to,uint256_tokenId)externalpayablewhenNotPausedwhenNotPausedUser(msg.sender)onlyOwnerOf(_tokenId){require(_to!=ownerOf(_tokenId));if(getApproved(_tokenId)!=address(0)||_to!=address(0)){tokenApprovals[_tokenId]=_to;emitApproval(ownerOf(_tokenId),_to,_tokenId);}}functionsetApprovalForAll(address_to,bool_approved)externalwhenNotPausedwhenNotPausedUser(msg.sender){if(_approved){approveAll(_to);}else{disapproveAll(_to);}}functionapproveAll(address_to)internalwhenNotPausedwhenNotPausedUser(msg.sender){require(_to!=msg.sender);require(_to!=address(0));operatorApprovals[msg.sender][_to]=true;emitApprovalForAll(msg.sender,_to,true);}functiondisapproveAll(address_to)internalwhenNotPausedwhenNotPausedUser(msg.sender){require(_to!=msg.sender);deleteoperatorApprovals[msg.sender][_to];emitApprovalForAll(msg.sender,_to,false);}functionisSenderApprovedFor(uint256_tokenId)publicviewreturns(bool){returnownerOf(_tokenId)==msg.sender||getApproved(_tokenId)==msg.sender||isApprovedForAll(ownerOf(_tokenId),msg.sender);}functiontransfer(address_to,uint256_tokenId)externalpayablewhenNotPausedwhenNotPausedUser(msg.sender)onlyOwnerOf(_tokenId){_clearApprovalAndTransfer(msg.sender,_to,_tokenId);}functiontransferFrom(address_from,address_to,uint256_tokenId)externalpayablewhenNotPausedwhenNotPausedUser(msg.sender){require(isSenderApprovedFor(_tokenId));_clearApprovalAndTransfer(_from,_to,_tokenId);}functionsafeTransferFrom(address_from,address_to,uint256_tokenId)externalpayablewhenNotPausedwhenNotPausedUser(msg.sender){require(isSenderApprovedFor(_tokenId));_safeTransferFrom(_from,_to,_tokenId,"");}functionsafeTransferFrom(address_from,address_to,uint256_tokenId,bytescalldata_data)externalpayablewhenNotPausedwhenNotPausedUser(msg.sender){require(isSenderApprovedFor(_tokenId));_safeTransferFrom(_from,_to,_tokenId,_data);}functionsendAmountShareUsers(uint256_tokenId,address_to,uint256_amount)externalonlyCOOreturns(bool){require(_to!=address(0));return_calculateShareUsers(_tokenId,ownerOf(_tokenId),_to,_amount);}functionsendAmountShareUsersFrom(uint256_tokenId,address_from,address_to,uint256_amount)externalonlyCOOreturns(bool){require(_to!=address(0));return_calculateShareUsers(_tokenId,_from,_to,_amount);}functionupdateCollectedAmount(uint256_tokenId,uint256_amount)externalonlyCOOreturns(bool){require(isValidRedToken(_tokenId));require(_amount>0);redTokens[_tokenId].collectedAmount=redTokens[_tokenId].collectedAmount.add(_amount);emitCollectedAmountUpdate(_tokenId,ownerOf(_tokenId),_amount);returntrue;}functioncreateRedToken(address_user,stringcalldata<missing ')'>_rmsBondNo,uint256_bondAmount,uint256_listingAmount)externalonlyCOOreturns(uint256){return_createRedToken(_user,_rmsBondNo,_bondAmount,_listingAmount);}

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 104
column: 28
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 730
column: 10
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 733
column: 31
content: private

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 317
column: 2
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 727
column: 2
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 412
column: 26
content: (uint256,stringmemory,uint256,uint256,uint256,uint)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 431
column: 76
content: (address[]memory,uint256[]memory)

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1134
column: 2
content: functioncreateRedToken(address_user,stringcalldata<missing ')'>

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 335
column: 2
content: mapping(uint256=>mapping(address=>uint256))shareUsers;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 340
column: 2
content: mapping(uint256=>address[])shareUsersKeys;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 357
column: 2
content: RedToken[]redTokens;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1136
column: 20
content: _rmsBondNo,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1137
column: 4
content: uint256_bondAmount,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1138
column: 4
content: uint256_listingAmount)external

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1141
column: 4
content: onlyCOOreturns

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1142
column: 12
content: (uint256){return

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1144
column: 11
content: _createRedToken(_user,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1144
column: 33
content: _rmsBondNo,_bondAmount,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1144
column: 56
content: _listingAmount);

SOLIDITY_VISIBILITY :12
SOLIDITY_SAFEMATH :2
SOLIDITY_LOCKED_MONEY :1
SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA :3
SOLIDITY_EXTRA_GAS_IN_LOOPS :5
SOLIDITY_ADDRESS_HARDCODED :3
SOLIDITY_GAS_LIMIT_IN_LOOPS :6
SOLIDITY_SHOULD_RETURN_STRUCT :2
SOLIDITY_ERC20_APPROVE :1