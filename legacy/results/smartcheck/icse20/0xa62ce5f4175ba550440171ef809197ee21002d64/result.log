/unique_chucks/4/0xa62ce5f4175ba550440171ef809197ee21002d64.sol
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 43
column: 4
content: owner=address(0)

ruleId: SOLIDITY_ERC20_APPROVE
patternId: af782c
severity: 2
line: 172
column: 2
content: functionapprove(address_spender,uint256_value)publicreturns(bool){allowed[msg.sender][_spender]=_value;emitApproval(msg.sender,_spender,_value);returntrue;}

ruleId: SOLIDITY_ERC20_APPROVE
patternId: af782c
severity: 2
line: 479
column: 2
content: functionapprove(address_spender,uint256_value)publicwhenNotPausedreturns(bool){returnsuper.approve(_spender,_value);}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 771
column: 8
content: for(uint256i=0;i<lockReason[_of].length;i++){amount=amount.add(tokensLocked(_of,lockReason[_of][i]));}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 835
column: 8
content: for(uint256i=0;i<lockReason[_of].length;i++){lockedTokens=tokensUnlockable(_of,lockReason[_of][i]);if(lockedTokens>0){unlockableTokens=unlockableTokens.add(lockedTokens);locked[_of][lockReason[_of][i]].claimed=true;emitUnlock(_of,lockReason[_of][i],lockedTokens);}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 857
column: 8
content: for(uint256i=0;i<lockReason[_of].length;i++){unlockableTokens=unlockableTokens.add(tokensUnlockable(_of,lockReason[_of][i]));}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 771
column: 8
content: for(uint256i=0;i<lockReason[_of].length;i++){amount=amount.add(tokensLocked(_of,lockReason[_of][i]));}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 835
column: 8
content: for(uint256i=0;i<lockReason[_of].length;i++){lockedTokens=tokensUnlockable(_of,lockReason[_of][i]);if(lockedTokens>0){unlockableTokens=unlockableTokens.add(lockedTokens);locked[_of][lockReason[_of][i]].claimed=true;emitUnlock(_of,lockReason[_of][i],lockedTokens);}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 857
column: 8
content: for(uint256i=0;i<lockReason[_of].length;i++){unlockableTokens=unlockableTokens.add(tokensUnlockable(_of,lockReason[_of][i]));}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: ^

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 107
column: 2
content: usingSafeMathforuint256;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 109
column: 2
content: mapping(address=>uint256)balances;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 113
column: 2
content: uint256totalSupply_;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 656
column: 1
content: stringconstantalreadyLocked='Tokens already locked';

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 657
column: 1
content: stringconstantnotLocked='No tokens locked';

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 658
column: 1
content: stringconstantamountZero='Amount can not be 0';

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 659
column: 1
content: stringconstanttransferFailed='Transfer Failed';

SOLIDITY_VISIBILITY :6
SOLIDITY_SAFEMATH :1
SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_EXTRA_GAS_IN_LOOPS :3
SOLIDITY_ADDRESS_HARDCODED :1
SOLIDITY_GAS_LIMIT_IN_LOOPS :3
SOLIDITY_ERC20_APPROVE :2