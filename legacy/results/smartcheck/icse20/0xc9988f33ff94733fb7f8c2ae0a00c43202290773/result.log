/unique_chucks/41/0xc9988f33ff94733fb7f8c2ae0a00c43202290773.sol
line 237:23 extraneous input 'signatures' expecting {',', ')'}
line 243:23 extraneous input 'data' expecting {',', ')'}
line 243:27 extraneous input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 244:12 mismatched input '.' expecting {';', '='}
line 244:32 mismatched input ',' expecting {';', '='}
line 245:25 mismatched input ',' expecting {';', '='}
line 246:23 mismatched input ',' expecting {';', '='}
line 247:24 mismatched input ',' expecting {';', '='}
line 248:24 mismatched input ',' expecting {';', '='}
line 249:16 extraneous input 'payable' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 249:38 mismatched input ',' expecting {';', '='}
line 250:23 mismatched input 'meta' expecting {';', '='}
line 250:27 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 251:23 mismatched input 'signatures' expecting {';', '='}
line 251:33 extraneous input ')' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 251:44 extraneous input 'returns' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 251:58 mismatched input ';' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 256:23 extraneous input 'data' expecting {',', ')'}
line 256:27 extraneous input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 257:12 mismatched input '.' expecting {';', '='}
line 257:32 mismatched input ',' expecting {';', '='}
line 258:25 mismatched input ',' expecting {';', '='}
line 259:23 mismatched input ',' expecting {';', '='}
line 260:24 mismatched input ',' expecting {';', '='}
line 261:24 mismatched input ',' expecting {';', '='}
line 262:16 extraneous input 'payable' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 262:38 mismatched input ',' expecting {';', '='}
line 263:23 mismatched input 'meta' expecting {';', '='}
line 263:27 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 264:23 mismatched input 'signatures' expecting {';', '='}
line 264:33 extraneous input ')' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 264:44 extraneous input 'returns' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 264:58 mismatched input ';' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 374:21 extraneous input 'payable' expecting {',', ')'}
line 471:16 no viable alternative at input 'addresspayable'
line 472:16 no viable alternative at input 'addresspayable'
line 564:16 extraneous input 'payable' expecting {',', ')'}
line 564:38 no viable alternative at input 'refundReceiver,'
line 564:38 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 565:14 extraneous input 'memory' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 565:25 mismatched input ',' expecting {';', '='}
line 566:14 extraneous input 'memory' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 567:4 mismatched input ')' expecting {';', '='}
line 570:4 extraneous input '{' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 571:10 mismatched input '(' expecting {';', '='}
line 571:20 extraneous input '.' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 571:50 mismatched input '(' expecting {';', '='}
line 572:14 mismatched input ',' expecting ')'
line 573:17 mismatched input ',' expecting {';', '='}
line 574:16 extraneous input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 575:21 mismatched input ',' expecting {';', '='}
line 576:21 extraneous input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 577:19 mismatched input ',' expecting {';', '='}
line 578:20 extraneous input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 579:20 mismatched input ',' expecting {';', '='}
line 580:26 extraneous input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 581:16 mismatched input ',' expecting {';', '='}
line 583:8 mismatched input ')' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 586:0 extraneous input '}' expecting {<EOF>, 'pragma', 'import', 'contract', 'library', 'interface'}
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 121
column: 55
content: 0x1

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 163
column: 8
content: modules[address(module)]=address(0)

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 479
column: 54
content: (address(0))

ruleId: SOLIDITY_BALANCE_EQUALITY
patternId: 5094ad
severity: 1
line: 503
column: 17
content: networkBalanceStart.add(networkSplit)==networkWallet.balance

ruleId: SOLIDITY_BALANCE_EQUALITY
patternId: 5094ad
severity: 1
line: 505
column: 17
content: merchantBalanceStart.add(merchantSplit)==merchantWallet.balance

ruleId: SOLIDITY_ERC20_FUNCTIONS_ALWAYS_RETURN_FALSE
patternId: b180ca
severity: 2
line: 391
column: 4
content: functiontransferToken(addresstoken,addressreceiver,uint256amount)internalreturns(booltransferred){bytesmemorydata=abi.encodeWithSignature("transfer(address,uint256)",receiver,amount);assembly{letsuccess:=call(sub(gas,10000),token,0,add(data,0x20),mload(data),0,0)letptr:=mload(0x40)returndatacopy(ptr,0,returndatasize)switchreturndatasizecase0{transferred:=success}case0x20{transferred:=iszero(or(iszero(success),iszero(mload(ptr))))}default{transferred:=0}}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: k4o1l4
severity: 1
line: 192
column: 8
content: while(currentModule!=SENTINEL_MODULES){currentModule=modules[currentModule];moduleCount++;}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: k4o1l4
severity: 1
line: 201
column: 8
content: while(currentModule!=SENTINEL_MODULES){array[moduleCount]=currentModule;currentModule=modules[currentModule];moduleCount++;}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 81
column: 4
content: functionexecuteCall(addressto,uint256value,bytesmemorydata,uint256txGas)internalreturns(boolsuccess){assembly{success:=call(txGas,to,value,add(data,0x20),mload(data),0,0)}}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 91
column: 4
content: functionexecuteDelegateCall(addressto,bytesmemorydata,uint256txGas)internalreturns(boolsuccess){assembly{success:=delegatecall(txGas,to,add(data,0x20),mload(data),0,0)}}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 101
column: 4
content: functionexecuteCreate(bytesmemorydata)internalreturns(addressnewContract){assembly{newContract:=create(0,add(data,0x20),mload(data))}}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 391
column: 4
content: functiontransferToken(addresstoken,addressreceiver,uint256amount)internalreturns(booltransferred){bytesmemorydata=abi.encodeWithSignature("transfer(address,uint256)",receiver,amount);assembly{letsuccess:=call(sub(gas,10000),token,0,add(data,0x20),mload(data),0,0)letptr:=mload(0x40)returndatacopy(ptr,0,returndatasize)switchreturndatasizecase0{transferred:=success}case0x20{transferred:=iszero(or(iszero(success),iszero(mload(ptr))))}default{transferred:=0}}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: 17f23a
severity: 1
line: 192
column: 14
content: currentModule!=SENTINEL_MODULES

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: 17f23a
severity: 1
line: 201
column: 14
content: currentModule!=SENTINEL_MODULES

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 48
column: 0
content: contractEtherPaymentFallback{function()externalpayable{}}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: ^

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 86
column: 8
content: assembly{success:=call(txGas,to,value,add(data,0x20),mload(data),0,0)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 96
column: 8
content: assembly{success:=delegatecall(txGas,to,add(data,0x20),mload(data),0,0)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 106
column: 8
content: assembly{newContract:=create(0,add(data,0x20),mload(data))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 401
column: 8
content: assembly{letsuccess:=call(sub(gas,10000),token,0,add(data,0x20),mload(data),0,0)letptr:=mload(0x40)returndatacopy(ptr,0,returndatasize)switchreturndatasizecase0{transferred:=success}case0x20{transferred:=iszero(or(iszero(success),iszero(mload(ptr))))}default{transferred:=0}}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 240
column: 4
content: functionexecSubscription(addressto,uint256value,bytescalldata<missing ')'>

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 253
column: 4
content: functioncancelSubscriptionAsRecipient(addressto,uint256value,bytescalldata<missing ')'>

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 554
column: 4
content: functioncancelCXSubscription(addresscustomer,addressto,uint256value,bytesmemorydata,Enum.Operationoperation,uint256safeTxGas,uint256dataGas,uint256gasPrice,addressgasToken,address<missing ')'>payable

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 20
column: 4
content: addressmasterCopy;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 243
column: 23
content: data,Enum.

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 244
column: 13
content: Operationoperation,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 245
column: 8
content: uint256safeTxGas,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 246
column: 8
content: uint256dataGas,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 247
column: 8
content: uint256gasPrice,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 248
column: 8
content: addressgasToken,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 249
column: 8
content: addresspayablerefundReceiver,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 250
column: 8
content: bytescalldata

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 250
column: 23
content: meta,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 251
column: 8
content: bytescalldata

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 251
column: 52
content: (bool);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 256
column: 23
content: data,Enum.

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 257
column: 13
content: Operationoperation,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 258
column: 8
content: uint256safeTxGas,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 259
column: 8
content: uint256dataGas,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 260
column: 8
content: uint256gasPrice,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 261
column: 8
content: addressgasToken,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 262
column: 8
content: addresspayablerefundReceiver,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 263
column: 8
content: bytescalldata

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 263
column: 23
content: meta,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 264
column: 8
content: bytescalldata

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 264
column: 52
content: (bool);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 306
column: 4
content: uintconstantWAD=10**18;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 307
column: 4
content: uintconstantRAY=10**27;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 564
column: 24
content: refundReceiver,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 565
column: 8
content: bytesmemorymeta,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 566
column: 8
content: bytesmemorysignatures)public

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 569
column: 4
content: authorized{SM

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 571
column: 10
content: (customer).cancelSubscriptionAsRecipient

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 571
column: 50
content: (to,value,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 574
column: 12
content: data,operation,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 576
column: 12
content: safeTxGas,dataGas,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 578
column: 12
content: gasPrice,gasToken,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 580
column: 12
content: refundReceiver,meta,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 582
column: 12
content: signatures);

SOLIDITY_VISIBILITY :39
SOLIDITY_ERC20_FUNCTIONS_ALWAYS_RETURN_FALSE :1
SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_LOCKED_MONEY :1
SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN :4
SOLIDITY_EXTRA_GAS_IN_LOOPS :2
SOLIDITY_ADDRESS_HARDCODED :3
SOLIDITY_GAS_LIMIT_IN_LOOPS :2
SOLIDITY_USING_INLINE_ASSEMBLY :4
SOLIDITY_BALANCE_EQUALITY :2