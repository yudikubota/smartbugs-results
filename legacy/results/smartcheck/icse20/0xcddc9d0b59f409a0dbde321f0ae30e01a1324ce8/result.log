/unique_contracts/0xcddc9d0b59f409a0dbde321f0ae30e01a1324ce8.sol
line 374:40 extraneous input 'response' expecting {',', ')'}
line 380:52 extraneous input 'message' expecting {',', ')'}
line 391:43 extraneous input 'method' expecting {',', ')'}
line 391:66 extraneous input 'response' expecting {',', ')'}
line 392:47 extraneous input 'method' expecting {',', ')'}
line 393:47 extraneous input 'method' expecting {',', ')'}
line 394:50 extraneous input 'method' expecting {',', ')'}
line 396:43 extraneous input 'method' expecting {',', ')'}
line 397:54 extraneous input 'method' expecting {',', ')'}
line 397:78 extraneous input 'message' expecting {',', ')'}
line 398:48 extraneous input 'method' expecting {',', ')'}
line 407:45 extraneous input 'call' expecting {',', ')'}
line 407:66 extraneous input 'response' expecting {',', ')'}
line 408:49 extraneous input 'call' expecting {',', ')'}
line 409:49 extraneous input 'call' expecting {',', ')'}
line 410:52 extraneous input 'call' expecting {',', ')'}
line 412:45 extraneous input 'call' expecting {',', ')'}
line 413:56 extraneous input 'call' expecting {',', ')'}
line 413:78 extraneous input 'message' expecting {',', ')'}
line 414:50 extraneous input 'call' expecting {',', ')'}
line 425:50 extraneous input 'method' expecting {',', ')'}
line 431:52 extraneous input 'call' expecting {',', ')'}
line 494:40 extraneous input 'response' expecting {',', ')'}
line 516:52 extraneous input 'message' expecting {',', ')'}
line 531:45 extraneous input 'call' expecting {',', ')'}
line 531:66 extraneous input 'response' expecting {',', ')'}
line 535:49 extraneous input 'call' expecting {',', ')'}
line 540:49 extraneous input 'call' expecting {',', ')'}
line 544:52 extraneous input 'call' expecting {',', ')'}
line 555:43 extraneous input 'call' expecting {',', ')'}
line 555:64 extraneous input 'response' expecting {',', ')'}
line 559:47 extraneous input 'call' expecting {',', ')'}
line 564:47 extraneous input 'call' expecting {',', ')'}
line 568:50 extraneous input 'call' expecting {',', ')'}
line 572:45 extraneous input 'call' expecting {',', ')'}
line 578:43 extraneous input 'call' expecting {',', ')'}
line 584:56 extraneous input 'call' expecting {',', ')'}
line 584:78 extraneous input 'message' expecting {',', ')'}
line 590:54 extraneous input 'call' expecting {',', ')'}
line 590:76 extraneous input 'message' expecting {',', ')'}
line 597:50 extraneous input 'call' expecting {',', ')'}
line 602:48 extraneous input 'call' expecting {',', ')'}
line 612:50 extraneous input 'call' expecting {',', ')'}
line 617:52 extraneous input 'call' expecting {',', ')'}
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 674
column: 24
content: 0xFF

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 948
column: 31
content: 0x10000000000000000

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 949
column: 31
content: 0xb17217f7d1cf79ac

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 950
column: 34
content: 0x171547652b82fe177

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 994
column: 18
content: 0xb17217f7d1cf79ab

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 996
column: 18
content: 0x3d7f7bff058b1d50

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 998
column: 18
content: 0xe35846b82505fc5

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 1000
column: 18
content: 0x276556df749cee5

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 1002
column: 18
content: 0x5761ff9e299cc4

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 1004
column: 18
content: 0xa184897c363c3

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 1006
column: 18
content: 0xffe5fe2c4586

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 1008
column: 18
content: 0x162c0223a5c8

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 1010
column: 18
content: 0x1b5253d395e

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 1012
column: 18
content: 0x1e4cf5158b

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 1014
column: 18
content: 0x1e8cac735

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 1016
column: 18
content: 0x1c3bd650

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 1018
column: 18
content: 0x1816193

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 1020
column: 18
content: 0x131496

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 1022
column: 18
content: 0xe1b7

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 1024
column: 18
content: 0x9c7

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 341
column: 8
content: _owner=address(0)

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: c67a09
severity: 1
line: 650
column: 35
content: 0x0

ruleId: SOLIDITY_DIV_MUL
patternId: 09hhh1
severity: 2
line: 1048
column: 22
content: term*term/int(ONE)*term

ruleId: SOLIDITY_DIV_MUL
patternId: 09hhh1
severity: 2
line: 1050
column: 18
content: termpow*term/int(ONE)*term

ruleId: SOLIDITY_DIV_MUL
patternId: 09hhh1
severity: 2
line: 1052
column: 18
content: termpow*term/int(ONE)*term

ruleId: SOLIDITY_DIV_MUL
patternId: 09hhh1
severity: 2
line: 1054
column: 18
content: termpow*term/int(ONE)*term

ruleId: SOLIDITY_DIV_MUL
patternId: 09hhh1
severity: 2
line: 1056
column: 18
content: termpow*term/int(ONE)*term

ruleId: SOLIDITY_DIV_MUL
patternId: 09hhh1
severity: 2
line: 1058
column: 18
content: termpow*term/int(ONE)*term

ruleId: SOLIDITY_DIV_MUL
patternId: 09hhh1
severity: 2
line: 1060
column: 18
content: termpow*term/int(ONE)*term

ruleId: SOLIDITY_DIV_MUL
patternId: 09hhh1
severity: 2
line: 1062
column: 18
content: termpow*term/int(ONE)*term

ruleId: SOLIDITY_DIV_MUL
patternId: 09hhh1
severity: 2
line: 1064
column: 18
content: termpow*term/int(ONE)*term

ruleId: SOLIDITY_DIV_MUL
patternId: 09hhh1
severity: 2
line: 1066
column: 18
content: termpow*term/int(ONE)*term

ruleId: SOLIDITY_DIV_MUL
patternId: 09hhh1
severity: 2
line: 1068
column: 18
content: termpow*term/int(ONE)*term

ruleId: SOLIDITY_DIV_MUL
patternId: 09hhh1
severity: 2
line: 1070
column: 18
content: termpow*term/int(ONE)*term

ruleId: SOLIDITY_ERC20_APPROVE
patternId: af782c
severity: 2
line: 167
column: 4
content: functionapprove(addressspender,uint256value)publicreturns(bool){_approve(msg.sender,spender,value);returntrue;}

ruleId: SOLIDITY_ERC20_APPROVE
patternId: af782c
severity: 2
line: 1268
column: 4
content: functionapprove(addressspender,uintvalue)publicreturns(bool){allowances[msg.sender][spender]=value;emitApproval(msg.sender,spender,value);returntrue;}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 1096
column: 8
content: for(uinti=0;i<nums.length;i++)if(nums[i]>maxNum)maxNum=nums[i];

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 1634
column: 8
content: for(uinti=0;i<participations.length;i++){totalMgnClaimed+=calculateClaimableMgn(participations[i]);}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: k4o1l4
severity: 1
line: 626
column: 2
content: while(mockHash!=MOCKS_LIST_END_HASH){calldataMockTypes[nextMock]=MockType.Return;calldataExpectations[nextMock]=hex"";calldataRevertMessage[nextMock]="";nextMock=calldataMocks[mockHash];calldataMocks[mockHash]="";mockHash=keccak256(nextMock);}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: k4o1l4
severity: 1
line: 643
column: 2
content: while(nextAnyMock!=SENTINEL_ANY_MOCKS){bytes4currentAnyMock=nextAnyMock;methodIdMockTypes[currentAnyMock]=MockType.Return;methodIdExpectations[currentAnyMock]=hex"";methodIdRevertMessages[currentAnyMock]="";nextAnyMock=methodIdMocks[currentAnyMock];methodIdMocks[currentAnyMock]=0x0;}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 1096
column: 8
content: for(uinti=0;i<nums.length;i++)if(nums[i]>maxNum)maxNum=nums[i];

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 1620
column: 8
content: for(uinti=0;i<length;i++){totalDepositAmount+=calculateClaimableDeposit(participations[i]);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 1634
column: 8
content: for(uinti=0;i<participations.length;i++){totalMgnClaimed+=calculateClaimableMgn(participations[i]);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 1738
column: 8
content: for(uinti=0;i<length;i++){userTotalPoolShares[i]=participationsByAddress[userAddress][i].poolShares;}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 1759
column: 8
content: for(uinti=0;i<length;i++){allUserClaimableMgn[i]=calculateClaimableMgn(participationsByAddress[userAddress][i]);allUserClaimableDeposit[i]=calculateClaimableDeposit(participationsByAddress[userAddress][i]);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: 17f23a
severity: 1
line: 626
column: 8
content: mockHash!=MOCKS_LIST_END_HASH

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: 17f23a
severity: 1
line: 643
column: 8
content: nextAnyMock!=SENTINEL_ANY_MOCKS

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: 17f23a
severity: 1
line: 662
column: 8
content: true

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: 17f23a
severity: 1
line: 1083
column: 15
content: (lo+1)<hi

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 442
column: 0
content: contractMockContractisMockInterface{enumMockType{Return,Revert,OutOfGas}bytes32publicconstantMOCKS_LIST_START=hex"01";bytespublicconstantMOCKS_LIST_END="0xff";bytes32publicconstantMOCKS_LIST_END_HASH=keccak256(MOCKS_LIST_END);bytes4publicconstantSENTINEL_ANY_MOCKS=hex"01";mapping(bytes32=>bytes)calldataMocks;mapping(bytes=>MockType)calldataMockTypes;mapping(bytes=>bytes)calldataExpectations;mapping(bytes=>string)calldataRevertMessage;mapping(bytes32=>uint)calldataInvocations;mapping(bytes4=>bytes4)methodIdMocks;mapping(bytes4=>MockType)methodIdMockTypes;mapping(bytes4=>bytes)methodIdExpectations;mapping(bytes4=>string)methodIdRevertMessages;mapping(bytes32=>uint)methodIdInvocations;MockTypefallbackMockType;bytesfallbackExpectation;stringfallbackRevertMessage;uintinvocations;uintresetCount;constructor()public{calldataMocks[MOCKS_LIST_START]=MOCKS_LIST_END;methodIdMocks[SENTINEL_ANY_MOCKS]=SENTINEL_ANY_MOCKS;}functiontrackCalldataMock(bytesmemorycall)private{bytes32callHash=keccak256(call);if(calldataMocks[callHash].length==0){calldataMocks[callHash]=calldataMocks[MOCKS_LIST_START];calldataMocks[MOCKS_LIST_START]=call;}}functiontrackMethodIdMock(bytes4methodId)private{if(methodIdMocks[methodId]==0x0){methodIdMocks[methodId]=methodIdMocks[SENTINEL_ANY_MOCKS];methodIdMocks[SENTINEL_ANY_MOCKS]=methodId;}}function_givenAnyReturn(bytesmemoryresponse)internal{fallbackMockType=MockType.Return;fallbackExpectation=response;}functiongivenAnyReturn(bytescalldataresponse)external{_givenAnyReturn(response);}functiongivenAnyReturnBool(boolresponse)external{uintflag=response?1:0;_givenAnyReturn(uintToBytes(flag));}functiongivenAnyReturnUint(uintresponse)external{_givenAnyReturn(uintToBytes(response));}functiongivenAnyReturnAddress(addressresponse)external{_givenAnyReturn(uintToBytes(uint(response)));}functiongivenAnyRevert()external{fallbackMockType=MockType.Revert;fallbackRevertMessage="";}functiongivenAnyRevertWithMessage(stringcalldatamessage)external{fallbackMockType=MockType.Revert;fallbackRevertMessage=message;}functiongivenAnyRunOutOfGas()external{fallbackMockType=MockType.OutOfGas;}function_givenCalldataReturn(bytesmemorycall,bytesmemoryresponse)private{calldataMockTypes[call]=MockType.Return;calldataExpectations[call]=response;trackCalldataMock(call);}functiongivenCalldataReturn(bytescalldatacall,bytescalldataresponse)external{_givenCalldataReturn(call,response);}functiongivenCalldataReturnBool(bytescalldatacall,boolresponse)external{uintflag=response?1:0;_givenCalldataReturn(call,uintToBytes(flag));}functiongivenCalldataReturnUint(bytescalldatacall,uintresponse)external{_givenCalldataReturn(call,uintToBytes(response));}functiongivenCalldataReturnAddress(bytescalldatacall,addressresponse)external{_givenCalldataReturn(call,uintToBytes(uint(response)));}function_givenMethodReturn(bytesmemorycall,bytesmemoryresponse)private{bytes4method=bytesToBytes4(call);methodIdMockTypes[method]=MockType.Return;methodIdExpectations[method]=response;trackMethodIdMock(method);}functiongivenMethodReturn(bytescalldatacall,bytescalldataresponse)external{_givenMethodReturn(call,response);}functiongivenMethodReturnBool(bytescalldatacall,boolresponse)external{uintflag=response?1:0;_givenMethodReturn(call,uintToBytes(flag));}functiongivenMethodReturnUint(bytescalldatacall,uintresponse)external{_givenMethodReturn(call,uintToBytes(response));}functiongivenMethodReturnAddress(bytescalldatacall,addressresponse)external{_givenMethodReturn(call,uintToBytes(uint(response)));}functiongivenCalldataRevert(bytescalldatacall)external{calldataMockTypes[call]=MockType.Revert;calldataRevertMessage[call]="";trackCalldataMock(call);}functiongivenMethodRevert(bytescalldatacall)external{bytes4method=bytesToBytes4(call);methodIdMockTypes[method]=MockType.Revert;trackMethodIdMock(method);}functiongivenCalldataRevertWithMessage(bytescalldatacall,stringcalldatamessage)external{calldataMockTypes[call]=MockType.Revert;calldataRevertMessage[call]=message;trackCalldataMock(call);}functiongivenMethodRevertWithMessage(bytescalldatacall,stringcalldatamessage)external{bytes4method=bytesToBytes4(call);methodIdMockTypes[method]=MockType.Revert;methodIdRevertMessages[method]=message;trackMethodIdMock(method);}functiongivenCalldataRunOutOfGas(bytescalldatacall)external{calldataMockTypes[call]=MockType.OutOfGas;trackCalldataMock(call);}functiongivenMethodRunOutOfGas(bytescalldatacall)external{bytes4method=bytesToBytes4(call);methodIdMockTypes[method]=MockType.OutOfGas;trackMethodIdMock(method);}functioninvocationCount()externalreturns(uint){returninvocations;}functioninvocationCountForMethod(bytescalldatacall)externalreturns(uint){bytes4method=bytesToBytes4(call);returnmethodIdInvocations[keccak256(abi.encodePacked(resetCount,method))];}functioninvocationCountForCalldata(bytescalldatacall)externalreturns(uint){returncalldataInvocations[keccak256(abi.encodePacked(resetCount,call))];}functionreset()external{bytesmemorynextMock=calldataMocks[MOCKS_LIST_START];bytes32mockHash=keccak256(nextMock);while(mockHash!=MOCKS_LIST_END_HASH){calldataMockTypes[nextMock]=MockType.Return;calldataExpectations[nextMock]=hex"";calldataRevertMessage[nextMock]="";nextMock=calldataMocks[mockHash];calldataMocks[mockHash]="";mockHash=keccak256(nextMock);}calldataMocks[MOCKS_LIST_START]=MOCKS_LIST_END;bytes4nextAnyMock=methodIdMocks[SENTINEL_ANY_MOCKS];while(nextAnyMock!=SENTINEL_ANY_MOCKS){bytes4currentAnyMock=nextAnyMock;methodIdMockTypes[currentAnyMock]=MockType.Return;methodIdExpectations[currentAnyMock]=hex"";methodIdRevertMessages[currentAnyMock]="";nextAnyMock=methodIdMocks[currentAnyMock];methodIdMocks[currentAnyMock]=0x0;}methodIdMocks[SENTINEL_ANY_MOCKS]=SENTINEL_ANY_MOCKS;fallbackExpectation="";fallbackMockType=MockType.Return;invocations=0;resetCount+=1;}functionuseAllGas()private{while(true){bools;assembly{s:=call(sub(gas,2000),6,0,0x0,0xc0,0x0,0x60)}}}functionbytesToBytes4(bytesmemoryb)privatepurereturns(bytes4){bytes4out;for(uinti=0;i<4;i++){out|=bytes4(b[i]&0xFF)>>(i*8);}returnout;}functionuintToBytes(uint256x)privatepurereturns(bytesmemoryb){b=newbytes(32);assembly{mstore(add(b,32),x)}}functionupdateInvocationCount(bytes4methodId,bytesmemoryoriginalMsgData)public{require(msg.sender==address(this),"Can only be called from the contract itself");invocations+=1;methodIdInvocations[keccak256(abi.encodePacked(resetCount,methodId))]+=1;calldataInvocations[keccak256(abi.encodePacked(resetCount,originalMsgData))]+=1;}function()payableexternal{bytes4methodId;assembly{methodId:=calldataload(0)}if(calldataMockTypes[msg.data]==MockType.Revert){revert(calldataRevertMessage[msg.data]);}if(calldataMockTypes[msg.data]==MockType.OutOfGas){useAllGas();}bytesmemoryresult=calldataExpectations[msg.data];if(result.length==0){if(methodIdMockTypes[methodId]==MockType.Revert){revert(methodIdRevertMessages[methodId]);}if(methodIdMockTypes[methodId]==MockType.OutOfGas){useAllGas();}result=methodIdExpectations[methodId];}if(result.length==0){if(fallbackMockType==MockType.Revert){revert(fallbackRevertMessage);}if(fallbackMockType==MockType.OutOfGas){useAllGas();}result=fallbackExpectation;}(,bytesmemoryr)=address(this).call.gas(100000)(abi.encodeWithSignature("updateInvocationCount(bytes4,bytes)",methodId,msg.data));assert(r.length==0);assembly{return(add(0x20,result),mload(result))}}}

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 886
column: 0
content: contractProxyisProxied{constructor(address_masterCopy)public{require(_masterCopy!=address(0),"The master copy is required");masterCopy=_masterCopy;}function()externalpayable{address_masterCopy=masterCopy;assembly{calldatacopy(0,0,calldatasize)letsuccess:=delegatecall(not(0),_masterCopy,0,calldatasize,0,0)returndatacopy(0,0,returndatasize)switchsuccesscase0{revert(0,returndatasize)}default{return(0,returndatasize)}}}}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 3
column: 16
content: ^

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 29
column: 16
content: ^

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 97
column: 16
content: ^

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 289
column: 16
content: ^

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 365
column: 16
content: ^

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 740
column: 16
content: ^

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 783
column: 16
content: ^

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 828
column: 16
content: ^

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 851
column: 16
content: ^

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 876
column: 16
content: ^

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 915
column: 16
content: ^

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 938
column: 16
content: ^

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1204
column: 16
content: ^

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1298
column: 16
content: ^

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1435
column: 16
content: ^

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1478
column: 16
content: ^

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1538
column: 16
content: ^

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1800
column: 16
content: ^

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 116
column: 33
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 118
column: 54
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 120
column: 12
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 297
column: 12
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 792
column: 15
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 1485
column: 20
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 1486
column: 20
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 1487
column: 20
content: private

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 114
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 1548
column: 4
content: usingSafeMathforuint;

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 679
column: 1
content: functionuintToBytes(uint256x)privatepurereturns(bytesmemoryb){b=newbytes(32);assembly{mstore(add(b,32),x)}}

ruleId: SOLIDITY_SHOULD_NOT_BE_VIEW
patternId: 189abf
severity: 1
line: 1448
column: 4
content: functionisContract(addressaccount)internalviewreturns(bool){uint256size;assembly{size:=extcodesize(account)}returnsize>0;}

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 869
column: 117
content: (uint256,uint256)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 870
column: 109
content: (uint256,uint256)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 871
column: 115
content: (uintreturned,uintfrtsIssued)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 1368
column: 43
content: (uinttotalAmountUnlocked,uintwithdrawalTime)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 1643
column: 56
content: (uint,uint)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 1729
column: 80
content: (uint,uint)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 1745
column: 50
content: (addresssellToken,addressbuyToken)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 1753
column: 85
content: (uint[]memory,uint[]memory)

ruleId: SOLIDITY_UNCHECKED_CALL
patternId: f39eed
severity: 3
line: 729
column: 37
content: call.gas(100000)(abi.encodeWithSignature("updateInvocationCount(bytes4,bytes)",methodId,msg.data))

ruleId: SOLIDITY_UNCHECKED_CALL
patternId: f39eed
severity: 3
line: 1496
column: 19
content: call(abi.encodeWithSelector(TRANSFER_SELECTOR,_to,_value))

ruleId: SOLIDITY_UNCHECKED_CALL
patternId: f39eed
severity: 3
line: 1510
column: 19
content: call(abi.encodeWithSelector(TRANSFERFROM_SELECTOR,_from,_to,_value))

ruleId: SOLIDITY_UNCHECKED_CALL
patternId: f39eed
severity: 3
line: 1528
column: 19
content: call(abi.encodeWithSelector(APPROVE_SELECTOR,_spender,_value))

ruleId: SOLIDITY_UNCHECKED_CALL
patternId: f39eed
severity: 3
line: 1665
column: 20
content: call(abi.encodeWithSignature("claimSellerFunds(address,address,address,uint256)",buyToken,sellToken,address(this),lastParticipatedAuctionIndex))

ruleId: SOLIDITY_UNCHECKED_CALL
patternId: f39eed
severity: 3
line: 1685
column: 20
content: call(abi.encodeWithSignature("claimSellerFunds(address,address,address,uint256)",secondaryToken,depositToken,address(this),lastParticipatedAuctionIndex))

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 664
column: 3
content: assembly{s:=call(sub(gas,2000),6,0,0x0,0xc0,0x0,0x60)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 681
column: 2
content: assembly{mstore(add(b,32),x)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 693
column: 2
content: assembly{methodId:=calldataload(0)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 732
column: 2
content: assembly{return(add(0x20,result),mload(result))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 897
column: 8
content: assembly{calldatacopy(0,0,calldatasize)letsuccess:=delegatecall(not(0),_masterCopy,0,calldatasize,0,0)returndatacopy(0,0,returndatasize)switchsuccesscase0{revert(0,returndatasize)}default{return(0,returndatasize)}}

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 451
column: 1
content: mapping(bytes32=>bytes)calldataMocks;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 452
column: 1
content: mapping(bytes=>MockType)calldataMockTypes;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 453
column: 1
content: mapping(bytes=>bytes)calldataExpectations;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 454
column: 1
content: mapping(bytes=>string)calldataRevertMessage;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 455
column: 1
content: mapping(bytes32=>uint)calldataInvocations;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 457
column: 1
content: mapping(bytes4=>bytes4)methodIdMocks;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 458
column: 1
content: mapping(bytes4=>MockType)methodIdMockTypes;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 459
column: 1
content: mapping(bytes4=>bytes)methodIdExpectations;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 460
column: 1
content: mapping(bytes4=>string)methodIdRevertMessages;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 461
column: 1
content: mapping(bytes32=>uint)methodIdInvocations;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 463
column: 1
content: MockTypefallbackMockType;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 464
column: 1
content: bytesfallbackExpectation;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 465
column: 1
content: stringfallbackRevertMessage;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 466
column: 1
content: uintinvocations;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 467
column: 1
content: uintresetCount;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1216
column: 4
content: mapping(address=>uint)balances;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1217
column: 4
content: mapping(address=>mapping(address=>uint))allowances;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1218
column: 4
content: uinttotalTokens;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1550
column: 4
content: uintconstantOWL_ALLOWANCE=10**36;

SOLIDITY_VISIBILITY :19
SOLIDITY_PRAGMAS_VERSION :18
SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA :8
SOLIDITY_EXTRA_GAS_IN_LOOPS :4
SOLIDITY_ADDRESS_HARDCODED :22
SOLIDITY_GAS_LIMIT_IN_LOOPS :9
SOLIDITY_UNCHECKED_CALL :6
SOLIDITY_DIV_MUL :12
SOLIDITY_SHOULD_RETURN_STRUCT :8
SOLIDITY_SHOULD_NOT_BE_PURE :1
SOLIDITY_ERC20_APPROVE :2
SOLIDITY_SAFEMATH :2
SOLIDITY_LOCKED_MONEY :2
SOLIDITY_USING_INLINE_ASSEMBLY :5
SOLIDITY_SHOULD_NOT_BE_VIEW :1