/unique_chucks/9/0x828381a9ac19e874c9345101a4c5a80ac5619a0b.sol
line 6:12 extraneous input 'payable' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 127:38 mismatched input 'payable' expecting {',', ')'}
line 127:48 no viable alternative at input 'to)'
line 127:48 extraneous input ')' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 127:69 mismatched input '{' expecting {';', '='}
line 128:19 extraneous input '(' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 128:31 extraneous input ')' expecting {';', '='}
line 129:20 mismatched input '=' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 132:4 extraneous input 'function' expecting {<EOF>, 'pragma', 'import', 'contract', 'library', 'interface'}
line 215:12 extraneous input 'payable' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 216:12 extraneous input 'payable' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 242:16 extraneous input 'payable' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'length', 'balance', 'memory', 'storage', 'emit', '_', 'revert', Identifier}
line 244:16 extraneous input 'payable' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'length', 'balance', 'memory', 'storage', 'emit', '_', 'revert', Identifier}
line 262:12 extraneous input 'payable' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 293:38 mismatched input 'payable' expecting {',', ')'}
line 293:56 no viable alternative at input '_nextOwner)'
line 293:56 extraneous input ')' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 293:77 mismatched input '{' expecting {';', '='}
line 294:16 extraneous input '(' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 294:28 mismatched input '!=' expecting {';', '='}
line 294:36 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 295:18 extraneous input '=' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 298:4 extraneous input 'function' expecting {<EOF>, 'pragma', 'import', 'contract', 'library', 'interface'}
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: adc165
severity: 1
line: 212
column: 37
content: 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 155
column: 0
content: contractAceDice{uintconstantHOUSE_EDGE_PERCENT=1;uintconstantHOUSE_EDGE_MINIMUM_AMOUNT=0.0004ether;uintconstantMIN_JACKPOT_BET=0.1ether;uintconstantJACKPOT_MODULO=1000;uintconstantJACKPOT_FEE=0.001ether;uintconstantMIN_BET=0.01ether;uintconstantMAX_AMOUNT=300000ether;uintconstantMAX_MASK_MODULO=40;uintconstantMAX_BET_MASK=2**MAX_MASK_MODULO;uintconstantBET_EXPIRATION_BLOCKS=250;addressconstantDUMMY_ADDRESS=0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE;addresspayablepublicowner;addresspayableprivatenextOwner;uintpublicmaxProfit;addresspublicsecretSigner;uint128publiclockedInBets;structBet{uintamount;uint8rollUnder;uint40placeBlockNumber;uint40mask;addresspayablegambler;addresspayableinviter;}structProfile{uintavatarIndex;bytes32nickName;}mapping(uint=>Bet)bets;mapping(address=>Profile)profiles;mapping(address=>bool)croupierMap;addresspayablepublicVIPLibraryAddress;eventFailedPayment(addressindexedbeneficiary,uintamount);eventPayment(addressindexedbeneficiary,uintamount,uintdice,uintrollUnder,uintbetAmount);eventJackpotPayment(addressindexedbeneficiary,uintamount,uintdice,uintrollUnder,uintbetAmount);eventVIPPayback(addressindexedbeneficiary,uintamount);eventCommit(uintcommit);constructor()public{owner=msg.sender;secretSigner=DUMMY_ADDRESS;}modifieronlyOwner{require(msg.sender==owner,"OnlyOwner methods called by non-owner.");_;}modifieronlyCroupier{boolisCroupier=croupierMap[msg.sender];require(isCroupier,"OnlyCroupier methods called by non-croupier.");_;}functionapproveNextOwner(addresspayable_nextOwner)externalonlyOwner{require(_nextOwner!=owner,"Cannot approve current owner.");nextOwner=_nextOwner;}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 2
column: 16
content: ^

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 216
column: 20
content: private

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 127
column: 4
content: functionpayJackpotReward(addresspayable

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 293
column: 4
content: functionapproveNextOwner(addresspayable

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 12
column: 4
content: mapping(address=>uint)userExpPool;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 128
column: 8
content: to.transfer(jackpotSize);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 129
column: 8
content: jackpotSize=0;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 161
column: 4
content: uintconstantHOUSE_EDGE_PERCENT=1;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 162
column: 4
content: uintconstantHOUSE_EDGE_MINIMUM_AMOUNT=0.0004ether;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 166
column: 4
content: uintconstantMIN_JACKPOT_BET=0.1ether;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 169
column: 4
content: uintconstantJACKPOT_MODULO=1000;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 170
column: 4
content: uintconstantJACKPOT_FEE=0.001ether;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 173
column: 4
content: uintconstantMIN_BET=0.01ether;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 174
column: 4
content: uintconstantMAX_AMOUNT=300000ether;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 197
column: 4
content: uintconstantMAX_MASK_MODULO=40;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 200
column: 4
content: uintconstantMAX_BET_MASK=2**MAX_MASK_MODULO;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 208
column: 4
content: uintconstantBET_EXPIRATION_BLOCKS=250;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 212
column: 4
content: addressconstantDUMMY_ADDRESS=0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 255
column: 4
content: mapping(uint=>Bet)bets;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 257
column: 4
content: mapping(address=>Profile)profiles;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 260
column: 4
content: mapping(address=>bool)croupierMap;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 294
column: 8
content: require(_nextOwner!=

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 294
column: 31
content: owner,"Cannot approve current owner.");

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 295
column: 8
content: nextOwner=_nextOwner;

SOLIDITY_VISIBILITY :22
SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_LOCKED_MONEY :1
SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA :1
SOLIDITY_ADDRESS_HARDCODED :1