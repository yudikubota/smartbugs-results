/unique_chucks/8/0x32c927d1d1df373c3fae1dc32338570e85f1d4e5.sol
line 146:77 extraneous input '_extraData' expecting {',', ')'}
line 157:65 extraneous input 'extraData' expecting {',', ')'}
line 158:48 extraneous input 'extraData' expecting {',', ')'}
line 162:99 extraneous input 'snowflakeCallBytes' expecting {',', ')'}
line 165:48 extraneous input 'payable' expecting {',', ')'}
line 165:58 no viable alternative at input 'to,'
line 165:58 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 165:71 mismatched input ',' expecting {';', '='}
line 165:88 mismatched input 'snowflakeCallBytes' expecting {';', '='}
line 166:4 extraneous input ')' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 166:14 extraneous input ';' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 167:85 extraneous input 'snowflakeCallBytes' expecting {',', ')'}
line 168:53 extraneous input 'payable' expecting {',', ')'}
line 168:63 no viable alternative at input 'to,'
line 168:63 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 168:76 mismatched input ',' expecting {';', '='}
line 168:93 mismatched input 'snowflakeCallBytes' expecting {';', '='}
line 168:111 extraneous input ')' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 169:16 extraneous input ';' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 189:72 extraneous input 'providers' expecting {',', ')'}
line 189:81 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 189:102 mismatched input 'resolvers' expecting {';', '='}
line 189:111 extraneous input ')' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 190:17 extraneous input 'returns' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 190:31 extraneous input 'ein' expecting ')'
line 190:35 mismatched input ';' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 192:79 extraneous input 'providers' expecting {',', ')'}
line 192:88 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 192:109 mismatched input 'resolvers' expecting {';', '='}
line 192:118 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 193:15 mismatched input ',' expecting {';', '='}
line 193:26 mismatched input ',' expecting {';', '='}
line 193:37 mismatched input ',' expecting {';', '='}
line 194:4 mismatched input ')' expecting {';', '='}
line 194:29 extraneous input 'ein' expecting ')'
line 194:33 mismatched input ';' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 200:26 extraneous input 'v' expecting {',', ')'}
line 200:27 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 200:49 mismatched input 'r' expecting {';', '='}
line 200:50 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 200:72 mismatched input 's' expecting {';', '='}
line 200:73 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 200:92 mismatched input 'timestamp' expecting {';', '='}
line 201:4 extraneous input ')' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 201:14 extraneous input ';' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 205:45 extraneous input 'providers' expecting {',', ')'}
line 206:58 extraneous input 'providers' expecting {',', ')'}
line 207:48 extraneous input 'providers' expecting {',', ')'}
line 208:61 extraneous input 'providers' expecting {',', ')'}
line 209:45 extraneous input 'resolvers' expecting {',', ')'}
line 210:58 extraneous input 'resolvers' expecting {',', ')'}
line 211:48 extraneous input 'resolvers' expecting {',', ')'}
line 212:61 extraneous input 'resolvers' expecting {',', ')'}
line 220:37 extraneous input 'firstChunk' expecting {',', ')'}
line 220:47 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 220:68 mismatched input 'lastChunk' expecting {';', '='}
line 220:77 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 221:4 mismatched input ')' expecting {';', '='}
line 231:54 extraneous input 'casedHydroId' expecting {',', ')'}
line 233:46 extraneous input 'uncasedHydroID' expecting {',', ')'}
line 234:46 extraneous input 'uncasedHydroID' expecting {',', ')'}
line 235:43 extraneous input 'uncasedHydroID' expecting {',', ')'}
line 237:40 extraneous input 'uncasedHydroID' expecting {',', ')'}
line 596:53 no viable alternative at input '.decode(_bytes,(uint))'
line 596:53 no viable alternative at input '(uint))'
line 596:52 no viable alternative at input 'uint)'
line 596:53 extraneous input ')' expecting ';'
line 606:40 no viable alternative at input '.decode(_bytes,(bool,'
line 606:40 no viable alternative at input '(bool,'
line 606:40 no viable alternative at input 'bool,'
line 615:24 no viable alternative at input 'addresspayable'
line 659:43 extraneous input 'payable' expecting {',', ')'}
line 659:53 no viable alternative at input 'to,'
line 659:53 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 659:66 mismatched input ',' expecting {';', '='}
line 659:74 extraneous input 'memory' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 660:4 mismatched input ')' expecting {';', '='}
line 663:23 extraneous input '(' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 663:31 mismatched input ',' expecting {';', '='}
line 663:39 mismatched input ')' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 664:17 extraneous input '(' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 664:25 mismatched input ',' expecting {';', '='}
line 664:30 extraneous input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 664:38 extraneous input ')' expecting {';', '='}
line 666:33 extraneous input '(' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 666:37 mismatched input '.' expecting {';', '='}
line 666:44 extraneous input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 666:53 mismatched input ',' expecting {';', '='}
line 666:57 extraneous input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 666:65 mismatched input ',' expecting {';', '='}
line 666:73 mismatched input ')' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 667:37 mismatched input '(' expecting {';', '='}
line 667:48 mismatched input ',' expecting ')'
line 667:52 extraneous input ')' expecting {';', '='}
line 670:4 extraneous input 'function' expecting {<EOF>, 'pragma', 'import', 'contract', 'library', 'interface'}
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 331
column: 29
content: 0x19

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 356
column: 29
content: 0x19

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 425
column: 29
content: 0x19

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 475
column: 29
content: 0x19

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 529
column: 29
content: 0x19

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 570
column: 29
content: 0x19

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 53
column: 8
content: _owner=address(0)

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 306
column: 8
content: for(uinti;i<providers.length;i++){_providers[i+1]=providers[i];}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 492
column: 8
content: for(uinti;i<resolvers.length;i++){require(identityRegistry.isResolverFor(ein,resolvers[i]),"Identity has not set this resolver.");resolverAllowances[ein][resolvers[i]]=withdrawAllowances[i];emitSnowflakeResolverAllowanceChanged(ein,resolvers[i],withdrawAllowances[i]);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 306
column: 8
content: for(uinti;i<providers.length;i++){_providers[i+1]=providers[i];}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 492
column: 8
content: for(uinti;i<resolvers.length;i++){require(identityRegistry.isResolverFor(ein,resolvers[i]),"Identity has not set this resolver.");resolverAllowances[ein][resolvers[i]]=withdrawAllowances[i];emitSnowflakeResolverAllowanceChanged(ein,resolvers[i],withdrawAllowances[i]);}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 284
column: 4
content: functionsetAddresses(address_identityRegistryAddress,address_hydroTokenAddress)publiconlyOwner{identityRegistryAddress=_identityRegistryAddress;identityRegistry=IdentityRegistryInterface(identityRegistryAddress);hydroTokenAddress=_hydroTokenAddress;hydroToken=HydroInterface(hydroTokenAddress);}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 292
column: 4
content: functionsetClientRaindropAddress(address_clientRaindropAddress)publiconlyOwner{clientRaindropAddress=_clientRaindropAddress;clientRaindrop=ClientRaindropInterface(clientRaindropAddress);}

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 7
column: 12
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 253
column: 30
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 255
column: 19
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 257
column: 28
content: private

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 244
column: 4
content: usingSafeMathforuint;

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 164
column: 4
content: functionsnowflakeCall(addressresolver,uinteinFrom,address<missing ')'>payable

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 168
column: 4
content: functionsnowflakeCall(addressresolver,address<missing ')'>payable

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 189
column: 4
content: functioncreateIdentity(addressrecoveryAddress,address[]calldata<missing ')'>

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 191
column: 4
content: functioncreateIdentityDelegated(addressrecoveryAddress,addressassociatedAddress,address[]calldata<missing ')'>

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 198
column: 4
content: functionaddAssociatedAddressDelegated(addressapprovingAddress,addressaddressToAdd,uint8[2]calldata<missing ')'>

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 219
column: 4
content: functiontriggerDestruction(uintein,address[]calldata<missing ')'>

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 658
column: 4
content: functionwithdrawSnowflakeBalanceFromVia(uinteinFrom,addressvia,address<missing ')'>payable

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 165
column: 56
content: to,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 165
column: 60
content: uintamount,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 165
column: 73
content: bytescalldata

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 168
column: 61
content: to,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 168
column: 65
content: uintamount,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 168
column: 78
content: bytescalldata

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 189
column: 72
content: providers,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 189
column: 83
content: address[]calldata

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 190
column: 25
content: (uintein);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 192
column: 79
content: providers,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 192
column: 90
content: address[]calldata

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 192
column: 109
content: resolvers,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 193
column: 8
content: uint8v,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 193
column: 17
content: bytes32r,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 193
column: 28
content: bytes32s,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 193
column: 39
content: uinttimestamp)externalreturns

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 194
column: 23
content: (uintein);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 200
column: 26
content: v,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 200
column: 29
content: bytes32[2]calldata

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 200
column: 49
content: r,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 200
column: 52
content: bytes32[2]calldata

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 200
column: 72
content: s,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 200
column: 75
content: uint[2]calldata

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 220
column: 37
content: firstChunk,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 220
column: 49
content: address[]calldata

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 220
column: 68
content: lastChunk,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 220
column: 79
content: boolresetResolvers)external;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 659
column: 51
content: to,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 659
column: 55
content: uintamount,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 659
column: 68
content: bytesmemory_bytes)public{

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 663
column: 8
content: handleAllowance(einFrom,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 663
column: 33
content: amount);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 664
column: 8
content: _withdraw(einFrom,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 664
column: 27
content: via,amount);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 665
column: 8
content: SnowflakeViaInterfaceviaContract=SnowflakeViaInterface(via);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 666
column: 8
content: viaContract.snowflakeCall(msg.

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 666
column: 38
content: sender,einFrom,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 666
column: 55
content: to,amount,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 666
column: 67
content: _bytes);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 667
column: 8
content: emitSnowflakeWithdrawFromVia

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 667
column: 37
content: (msg.sender,to);

SOLIDITY_VISIBILITY :48
SOLIDITY_SAFEMATH :1
SOLIDITY_OVERPOWERED_ROLE :2
SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA :4
SOLIDITY_EXTRA_GAS_IN_LOOPS :2
SOLIDITY_ADDRESS_HARDCODED :7
SOLIDITY_GAS_LIMIT_IN_LOOPS :2