{
  "contract": "0x9134c89c2132b80f361c5797bee6fc96c8d15cd1",
  "tool": "smartcheck",
  "start": 1563565571.2715666,
  "end": 1563565587.2300332,
  "duration": 15.958466529846191,
  "analysis": [
    {
      "name": "SOLIDITY_ADDRESS_HARDCODED",
      "patternId": "b140cd",
      "severity": 1,
      "line": 1634,
      "column": 28,
      "content": "0x20"
    },
    {
      "name": "SOLIDITY_ADDRESS_HARDCODED",
      "patternId": "b140cd",
      "severity": 1,
      "line": 1634,
      "column": 56,
      "content": "0x20"
    },
    {
      "name": "SOLIDITY_ADDRESS_HARDCODED",
      "patternId": "b140cd",
      "severity": 1,
      "line": 1636,
      "column": 24,
      "content": "0x30"
    },
    {
      "name": "SOLIDITY_ADDRESS_HARDCODED",
      "patternId": "b140cd",
      "severity": 1,
      "line": 1638,
      "column": 32,
      "content": "0x78"
    },
    {
      "name": "SOLIDITY_ADDRESS_HARDCODED",
      "patternId": "b140cd",
      "severity": 1,
      "line": 1639,
      "column": 32,
      "content": "0x58"
    },
    {
      "name": "SOLIDITY_ADDRESS_HARDCODED",
      "patternId": "b140cd",
      "severity": 1,
      "line": 1649,
      "column": 27,
      "content": "0x40"
    },
    {
      "name": "SOLIDITY_ADDRESS_HARDCODED",
      "patternId": "b140cd",
      "severity": 1,
      "line": 1649,
      "column": 46,
      "content": "0x5b"
    },
    {
      "name": "SOLIDITY_ADDRESS_HARDCODED",
      "patternId": "b140cd",
      "severity": 1,
      "line": 1661,
      "column": 32,
      "content": "0x20"
    },
    {
      "name": "SOLIDITY_ADDRESS_HARDCODED",
      "patternId": "b140cd",
      "severity": 1,
      "line": 1663,
      "column": 32,
      "content": "0x60"
    },
    {
      "name": "SOLIDITY_ADDRESS_HARDCODED",
      "patternId": "b140cd",
      "severity": 1,
      "line": 1663,
      "column": 51,
      "content": "0x7b"
    },
    {
      "name": "SOLIDITY_ADDRESS_HARDCODED",
      "patternId": "b140cd",
      "severity": 1,
      "line": 1665,
      "column": 32,
      "content": "0x2f"
    },
    {
      "name": "SOLIDITY_ADDRESS_HARDCODED",
      "patternId": "b140cd",
      "severity": 1,
      "line": 1665,
      "column": 51,
      "content": "0x3a"
    },
    {
      "name": "SOLIDITY_ADDRESS_HARDCODED",
      "patternId": "b140cd",
      "severity": 1,
      "line": 1669,
      "column": 32,
      "content": "0x20"
    },
    {
      "name": "SOLIDITY_ADDRESS_HARDCODED",
      "patternId": "b140cd",
      "severity": 1,
      "line": 1670,
      "column": 43,
      "content": "0x20"
    },
    {
      "name": "SOLIDITY_ADDRESS_HARDCODED",
      "patternId": "b140cd",
      "severity": 1,
      "line": 1673,
      "column": 58,
      "content": "0x30"
    },
    {
      "name": "SOLIDITY_ADDRESS_HARDCODED",
      "patternId": "b140cd",
      "severity": 1,
      "line": 1673,
      "column": 77,
      "content": "0x39"
    },
    {
      "name": "SOLIDITY_CALL_WITHOUT_DATA",
      "patternId": "om991k",
      "severity": 2,
      "line": 1260,
      "column": 28,
      "content": "call.value(_com)()"
    },
    {
      "name": "SOLIDITY_DIV_MUL",
      "patternId": "09hhh1",
      "severity": 2,
      "line": 707,
      "column": 19,
      "content": "((round_[_rID].mask).add(((((round_[_rID].pot).mul(potSplit_[round_[_rID].team].gen))/100).mul(1000000000000000000))/(round_[_rID].keys))).mul(plyrRnds_[_pID][_rID].keys)"
    },
    {
      "name": "SOLIDITY_DIV_MUL",
      "patternId": "09hhh1",
      "severity": 2,
      "line": 707,
      "column": 45,
      "content": "(((round_[_rID].pot).mul(potSplit_[round_[_rID].team].gen))/100).mul(1000000000000000000)"
    },
    {
      "name": "SOLIDITY_DIV_MUL",
      "patternId": "09hhh1",
      "severity": 2,
      "line": 1210,
      "column": 24,
      "content": "((_keys)/(1000000000000000000)).mul(rndInc_)"
    },
    {
      "name": "SOLIDITY_DIV_MUL",
      "patternId": "09hhh1",
      "severity": 2,
      "line": 1212,
      "column": 24,
      "content": "((_keys)/(1000000000000000000)).mul(rndInc_)"
    },
    {
      "name": "SOLIDITY_DIV_MUL",
      "patternId": "09hhh1",
      "severity": 2,
      "line": 1241,
      "column": 20,
      "content": "(seed/1000)*1000"
    },
    {
      "name": "SOLIDITY_GAS_LIMIT_IN_LOOPS",
      "patternId": "f6f853",
      "severity": 2,
      "line": 1646,
      "column": 8,
      "content": "for(uint256i=0;i<_length;i++){if(_temp[i]>0x40&&_temp[i]<0x5b){_temp[i]=byte(uint(_temp[i])+32);if(_hasNonNumber==false)_hasNonNumber=true;}else{require(_temp[i]==0x20||(_temp[i]>0x60&&_temp[i]<0x7b)||(_temp[i]>0x2f&&_temp[i]<0x3a),\"string contains invalid characters\");if(_temp[i]==0x20)require(_temp[i+1]!=0x20,\"string cannot contain consecutive spaces\");if(_hasNonNumber==false&&(_temp[i]<0x30||_temp[i]>0x39))_hasNonNumber=true;}}"
    },
    {
      "name": "SOLIDITY_GAS_LIMIT_IN_LOOPS",
      "patternId": "17f23a",
      "severity": 1,
      "line": 1751,
      "column": 15,
      "content": "z<y"
    },
    {
      "name": "SOLIDITY_PRAGMAS_VERSION",
      "patternId": "23fc32",
      "severity": 1,
      "line": 1,
      "column": 16,
      "content": "^"
    },
    {
      "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
      "patternId": "5616b2",
      "severity": 1,
      "line": 134,
      "column": 12,
      "content": "private"
    },
    {
      "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
      "patternId": "5616b2",
      "severity": 1,
      "line": 137,
      "column": 12,
      "content": "private"
    },
    {
      "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
      "patternId": "5616b2",
      "severity": 1,
      "line": 138,
      "column": 12,
      "content": "private"
    },
    {
      "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
      "patternId": "5616b2",
      "severity": 1,
      "line": 139,
      "column": 21,
      "content": "private"
    },
    {
      "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
      "patternId": "5616b2",
      "severity": 1,
      "line": 140,
      "column": 21,
      "content": "private"
    },
    {
      "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
      "patternId": "5616b2",
      "severity": 1,
      "line": 141,
      "column": 21,
      "content": "private"
    },
    {
      "name": "SOLIDITY_SAFEMATH",
      "patternId": "837cac",
      "severity": 1,
      "line": 124,
      "column": 4,
      "content": "usingSafeMathfor*;"
    },
    {
      "name": "SOLIDITY_SAFEMATH",
      "patternId": "837cac",
      "severity": 1,
      "line": 1539,
      "column": 4,
      "content": "usingSafeMathfor*;"
    },
    {
      "name": "SOLIDITY_SHOULD_NOT_BE_PURE",
      "patternId": "11314f",
      "severity": 1,
      "line": 1623,
      "column": 4,
      "content": "functionnameFilter(string_input)internalpurereturns(bytes32){bytesmemory_temp=bytes(_input);uint256_length=_temp.length;require(_length<=32&&_length>0,\"string must be between 1 and 32 characters\");require(_temp[0]!=0x20&&_temp[_length-1]!=0x20,\"string cannot start or end with space\");if(_temp[0]==0x30){require(_temp[1]!=0x78,\"string cannot start with 0x\");require(_temp[1]!=0x58,\"string cannot start with 0X\");}bool_hasNonNumber;for(uint256i=0;i<_length;i++){if(_temp[i]>0x40&&_temp[i]<0x5b){_temp[i]=byte(uint(_temp[i])+32);if(_hasNonNumber==false)_hasNonNumber=true;}else{require(_temp[i]==0x20||(_temp[i]>0x60&&_temp[i]<0x7b)||(_temp[i]>0x2f&&_temp[i]<0x3a),\"string contains invalid characters\");if(_temp[i]==0x20)require(_temp[i+1]!=0x20,\"string cannot contain consecutive spaces\");if(_hasNonNumber==false&&(_temp[i]<0x30||_temp[i]>0x39))_hasNonNumber=true;}}require(_hasNonNumber==true,\"string cannot be only numbers\");bytes32_ret;assembly{_ret:=mload(add(_temp,32))}return(_ret);}"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "83k1no",
      "severity": 1,
      "line": 1260,
      "column": 28,
      "content": "call.value(_com)()"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "91h3sa",
      "severity": 1,
      "line": 240,
      "column": 8,
      "content": "public"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 1623,
      "column": 24,
      "content": "string_input"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 1681,
      "column": 8,
      "content": "assembly{_ret:=mload(add(_temp,32))}"
    }
  ]
}