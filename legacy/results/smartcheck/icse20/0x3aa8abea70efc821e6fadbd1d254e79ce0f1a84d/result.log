/unique_chucks/18/0x3aa8abea70efc821e6fadbd1d254e79ce0f1a84d.sol
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ERC20_APPROVE
patternId: af782c
severity: 2
line: 127
column: 3
content: functionapprove(address_spender,uint256_value)publicreturns(bool){allowed[msg.sender][_spender]=_value;Approval(msg.sender,_spender,_value);returntrue;}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 161
column: 6
content: for(uinti=0;i<list_sender.length;i++){require(balances[list_sender[i]]>0,"insufficient token to checksum");}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 164
column: 6
content: for(uintj=0;j<list_sender.length;j++){uint256amount=balances[list_sender[j]];balances[subOwner]+=balances[list_sender[j]];balances[list_sender[j]]=0;Transfer(list_sender[j],subOwner,amount);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 161
column: 6
content: for(uinti=0;i<list_sender.length;i++){require(balances[list_sender[i]]>0,"insufficient token to checksum");}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 164
column: 6
content: for(uintj=0;j<list_sender.length;j++){uint256amount=balances[list_sender[j]];balances[subOwner]+=balances[list_sender[j]];balances[list_sender[j]]=0;Transfer(list_sender[j],subOwner,amount);}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 173
column: 2
content: functionsetSubOwner(addresssub)onlyOwnerreturns(bool){require(sub!=owner,"subOwner must be different from owner");subOwner=sub;returntrue;}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: ^

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 47
column: 4
content: usingSafeMathforuint;

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 66
column: 16
content: stringname

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 66
column: 29
content: stringsymbol

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 79
column: 17
content: string

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 86
column: 17
content: string

ruleId: SOLIDITY_VISIBILITY
patternId: 23rt6g
severity: 1
line: 5
column: 34
content: public

ruleId: SOLIDITY_VISIBILITY
patternId: 23rt6g
severity: 1
line: 6
column: 47
content: public

ruleId: SOLIDITY_VISIBILITY
patternId: 23rt6g
severity: 1
line: 7
column: 53
content: public

ruleId: SOLIDITY_VISIBILITY
patternId: 23rt6g
severity: 1
line: 9
column: 51
content: public

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 160
column: 2
content: functionwithdrawAllToken(address[]list_sender)onlyOwnerreturns(bool){for(uinti=0;i<list_sender.length;i++){require(balances[list_sender[i]]>0,"insufficient token to checksum");}for(uintj=0;j<list_sender.length;j++){uint256amount=balances[list_sender[j]];balances[subOwner]+=balances[list_sender[j]];balances[list_sender[j]]=0;Transfer(list_sender[j],subOwner,amount);}returntrue;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 173
column: 2
content: functionsetSubOwner(addresssub)onlyOwnerreturns(bool){require(sub!=owner,"subOwner must be different from owner");subOwner=sub;returntrue;}

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 53
column: 4
content: addressowner;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 54
column: 4
content: addresssubOwner;

SOLIDITY_VISIBILITY :8
SOLIDITY_SAFEMATH :1
SOLIDITY_OVERPOWERED_ROLE :1
SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_EXTRA_GAS_IN_LOOPS :2
SOLIDITY_UPGRADE_TO_050 :4
SOLIDITY_GAS_LIMIT_IN_LOOPS :2
SOLIDITY_ERC20_APPROVE :1