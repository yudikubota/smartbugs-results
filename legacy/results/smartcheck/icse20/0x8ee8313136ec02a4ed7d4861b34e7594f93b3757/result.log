/unique_chucks/19/0x8ee8313136ec02a4ed7d4861b34e7594f93b3757.sol
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 319
column: 8
content: for(uint256i=0;i<terms.length;i++){TermDepositInfostorageinfo=_termDeposits[terms[i]];require(info.duration>0,"should be a valid term");Deposit[]memorydeposits=info.deposits[depositor];uint256total=0;for(uint256j=0;j<deposits.length;j++){uint256lockUntil=deposits[j].depositAt.add(info.duration);if(deposits[j].withdrawAt==0){if(!withdrawable||now>=lockUntil){total=total.add(deposits[j].amount);}}}ret[i]=total;}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 325
column: 12
content: for(uint256j=0;j<deposits.length;j++){uint256lockUntil=deposits[j].depositAt.add(info.duration);if(deposits[j].withdrawAt==0){if(!withdrawable||now>=lockUntil){total=total.add(deposits[j].amount);}}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 351
column: 8
content: for(uint256i=0;i<terms.length;i++){bytes4term=terms[i];TermDepositInfostorageinfo=_termDeposits[term];require(info.duration>0,"should be a valid term");Deposit[]memorydeposits=info.deposits[depositor];depositListByTerms[i]=deposits;totalDepositCount=totalDepositCount.add(deposits.length);}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 365
column: 8
content: for(uint256i=0;i<depositListByTerms.length;i++){Deposit[]memorydeposits=depositListByTerms[i];for(uint256j=0;j<deposits.length;j++){depositTerms[retIndex]=terms[i];Depositmemoryd=deposits[j];amounts[retIndex]=d.amount;depositTs[retIndex]=d.depositAt;withdrawTs[retIndex]=d.withdrawAt;retIndex+=1;}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 367
column: 12
content: for(uint256j=0;j<deposits.length;j++){depositTerms[retIndex]=terms[i];Depositmemoryd=deposits[j];amounts[retIndex]=d.amount;depositTs[retIndex]=d.depositAt;withdrawTs[retIndex]=d.withdrawAt;retIndex+=1;}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 387
column: 8
content: for(uint256i=0;i<terms.length;i++){bytes4term=terms[i];TermDepositInfostorageinfo=_termDeposits[term];require(info.duration>0,"should be a valid term");Deposit[]storagedeposits=info.deposits[msg.sender];uint256termTotal=0;for(uint256j=0;j<deposits.length;j++){uint256lockUntil=deposits[j].depositAt.add(info.duration);if(deposits[j].withdrawAt==0&&now>=lockUntil){termTotal=termTotal.add(deposits[j].amount);deposits[j].withdrawAt=now;}}info.totalReceived=info.totalReceived.sub(termTotal);total=total.add(termTotal);}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 394
column: 12
content: for(uint256j=0;j<deposits.length;j++){uint256lockUntil=deposits[j].depositAt.add(info.duration);if(deposits[j].withdrawAt==0&&now>=lockUntil){termTotal=termTotal.add(deposits[j].amount);deposits[j].withdrawAt=now;}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 420
column: 8
content: for(uint256i=0;i<terms.length;i++){TermDepositInfomemoryinfo=_termDeposits[terms[i]];require(info.duration>0,"should be a valid term");ret=ret.add(info.totalReceived);}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 453
column: 8
content: for(uint256i=0;i<allTerms.length;i++){bytes4term=allTerms[i];TermDepositInfomemoryinfo=_termDeposits[term];require(info.totalReceived<1000*1e18,"should have small enough deposits");}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 319
column: 8
content: for(uint256i=0;i<terms.length;i++){TermDepositInfostorageinfo=_termDeposits[terms[i]];require(info.duration>0,"should be a valid term");Deposit[]memorydeposits=info.deposits[depositor];uint256total=0;for(uint256j=0;j<deposits.length;j++){uint256lockUntil=deposits[j].depositAt.add(info.duration);if(deposits[j].withdrawAt==0){if(!withdrawable||now>=lockUntil){total=total.add(deposits[j].amount);}}}ret[i]=total;}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 325
column: 12
content: for(uint256j=0;j<deposits.length;j++){uint256lockUntil=deposits[j].depositAt.add(info.duration);if(deposits[j].withdrawAt==0){if(!withdrawable||now>=lockUntil){total=total.add(deposits[j].amount);}}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 351
column: 8
content: for(uint256i=0;i<terms.length;i++){bytes4term=terms[i];TermDepositInfostorageinfo=_termDeposits[term];require(info.duration>0,"should be a valid term");Deposit[]memorydeposits=info.deposits[depositor];depositListByTerms[i]=deposits;totalDepositCount=totalDepositCount.add(deposits.length);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 365
column: 8
content: for(uint256i=0;i<depositListByTerms.length;i++){Deposit[]memorydeposits=depositListByTerms[i];for(uint256j=0;j<deposits.length;j++){depositTerms[retIndex]=terms[i];Depositmemoryd=deposits[j];amounts[retIndex]=d.amount;depositTs[retIndex]=d.depositAt;withdrawTs[retIndex]=d.withdrawAt;retIndex+=1;}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 367
column: 12
content: for(uint256j=0;j<deposits.length;j++){depositTerms[retIndex]=terms[i];Depositmemoryd=deposits[j];amounts[retIndex]=d.amount;depositTs[retIndex]=d.depositAt;withdrawTs[retIndex]=d.withdrawAt;retIndex+=1;}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 387
column: 8
content: for(uint256i=0;i<terms.length;i++){bytes4term=terms[i];TermDepositInfostorageinfo=_termDeposits[term];require(info.duration>0,"should be a valid term");Deposit[]storagedeposits=info.deposits[msg.sender];uint256termTotal=0;for(uint256j=0;j<deposits.length;j++){uint256lockUntil=deposits[j].depositAt.add(info.duration);if(deposits[j].withdrawAt==0&&now>=lockUntil){termTotal=termTotal.add(deposits[j].amount);deposits[j].withdrawAt=now;}}info.totalReceived=info.totalReceived.sub(termTotal);total=total.add(termTotal);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 394
column: 12
content: for(uint256j=0;j<deposits.length;j++){uint256lockUntil=deposits[j].depositAt.add(info.duration);if(deposits[j].withdrawAt==0&&now>=lockUntil){termTotal=termTotal.add(deposits[j].amount);deposits[j].withdrawAt=now;}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 420
column: 8
content: for(uint256i=0;i<terms.length;i++){TermDepositInfomemoryinfo=_termDeposits[terms[i]];require(info.duration>0,"should be a valid term");ret=ret.add(info.totalReceived);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 453
column: 8
content: for(uint256i=0;i<allTerms.length;i++){bytes4term=allTerms[i];TermDepositInfomemoryinfo=_termDeposits[term];require(info.totalReceived<1000*1e18,"should have small enough deposits");}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: >=

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 25
content: <

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 52
column: 15
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 240
column: 40
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 241
column: 11
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 242
column: 11
content: private

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 179
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 213
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 345
column: 26
content: (bytes4[]memory,uint256[]memory,uint256[]memory,uint256[]memory)

SOLIDITY_SAFEMATH :2
SOLIDITY_PRAGMAS_VERSION :2
SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA :4
SOLIDITY_EXTRA_GAS_IN_LOOPS :9
SOLIDITY_GAS_LIMIT_IN_LOOPS :9
SOLIDITY_SHOULD_RETURN_STRUCT :1