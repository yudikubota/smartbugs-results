/unique_chucks/13/0x5f1a08554f0dc0cf79852c564a10981ffbd7c8af.sol
line 55:57 extraneous input 'payable' expecting {',', ')'}
line 55:68 no viable alternative at input '_to)'
line 55:68 extraneous input ')' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 55:79 extraneous input 'returns' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 55:93 extraneous input 'success' expecting ')'
line 55:101 mismatched input ';' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 137:40 extraneous input 'payable' expecting {',', ')'}
line 138:4 no viable alternative at input '_to)'
line 138:4 extraneous input ')' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 138:15 extraneous input 'returns' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 138:29 extraneous input 'success' expecting ')'
line 138:38 extraneous input '{' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 139:11 mismatched input '.' expecting {';', '='}
line 139:20 extraneous input '(' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 139:30 mismatched input '(' expecting {';', '='}
line 139:41 mismatched input ')' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 143:4 extraneous input 'function' expecting {<EOF>, 'pragma', 'import', 'contract', 'library', 'interface'}
line 354:23 extraneous input '_assetData' expecting {',', ')'}
line 354:33 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 355:35 mismatched input ',' expecting {';', '='}
line 356:15 mismatched input ',' expecting {';', '='}
line 357:17 mismatched input ',' expecting {';', '='}
line 359:4 mismatched input ')' expecting {';', '='}
line 362:21 extraneous input '(' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 362:28 mismatched input '.' expecting {';', '='}
line 362:35 extraneous input ')' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 363:16 mismatched input '(' expecting {';', '='}
line 364:22 mismatched input '(' expecting {';', '='}
line 365:8 mismatched input 'returns' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 366:14 extraneous input 'success' expecting ')'
line 367:4 mismatched input '{' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 371:28 extraneous input '(' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 371:37 extraneous input ')' expecting {';', '='}
line 372:15 extraneous input '(' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 372:25 mismatched input '(' expecting {';', '='}
line 372:34 mismatched input ',' expecting ')'
line 372:37 mismatched input ',' expecting {';', '='}
line 372:40 extraneous input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 372:43 mismatched input ')' expecting {';', '='}
line 372:55 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 377:24 extraneous input '=' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 378:15 extraneous input '(' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 379:25 mismatched input '(' expecting {';', '='}
line 379:36 mismatched input ',' expecting ')'
line 379:41 mismatched input '.' expecting {';', '='}
line 379:48 mismatched input ')' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 382:20 mismatched input '(' expecting {';', '='}
line 382:30 mismatched input ';' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 399:4 extraneous input 'function' expecting {<EOF>, 'pragma', 'import', 'contract', 'library', 'interface'}
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 368
column: 38
content: (msg.sender,address(0),_oracle,keccak256(_assetData),_paymentDetailsHash)

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 129
column: 4
content: functiongetAmount(bytesmemoryassetData)internalpurereturns(uint256amount){assembly{amount:=mload(add(assetData,34))}}

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 34
column: 0
content: contractAssetAdapter{uint16publicASSET_TYPE;bytes32internalEIP712_SWAP_TYPEHASH;bytes32internalEIP712_ASSET_TYPEHASH;constructor(uint16assetType,bytes32swapTypehash,bytes32assetTypehash)internal{ASSET_TYPE=assetType;EIP712_SWAP_TYPEHASH=swapTypehash;EIP712_ASSET_TYPEHASH=assetTypehash;}functionsendAssetTo(bytesmemoryassetData,address<missing ')'>payable_to)internalreturns<missing ';'>(boolsuccess);functionlockAssetFrom(bytesmemoryassetData,address_from)internalreturns(boolsuccess);functiongetAssetTypedHash(bytesmemorydata)internalviewreturns(bytes32);modifiercheckAssetType(bytesmemoryassetData){uint16assetType;assembly{assetType:=and(mload(add(assetData,2)),0xffff)}require(assetType==ASSET_TYPE,"invalid asset type");_;}modifiernoEther(){require(msg.value==0,"this asset doesn't accept ether");_;}}

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 112
column: 0
content: contractEthAdapterisAssetAdapter{uint16internalconstantETH_TYPE_ID=1;constructor()internalAssetAdapter(ETH_TYPE_ID,0x3f5e83ffc9f619035e6bbc5b772db010a6ea49213f31e8a5d137b6cebf8d19c7,0x4edc3bd27f6cb13e1f0e97fa9dd936fa2dc988debb1378354f49e2bb59be435e){}functiongetAmount(bytesmemoryassetData)internalpurereturns(uint256amount){assembly{amount:=mload(add(assetData,34))}}functionsendAssetTo(bytesmemoryassetData,address<missing ')'>payable_to)internalreturns<missing ';'>(boolsuccess){_to.transfer(getAmount(assetData));returntrue;}

ruleId: SOLIDITY_MSGVALUE_EQUALS_ZERO
patternId: 1df89a
severity: 1
line: 100
column: 16
content: msg.value==0

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 209
column: 4
content: functionsetStatus(Status_status)externalonlyOwner{emitStatusChanged(status,_status);status=_status;}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: ^

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 129
column: 4
content: functiongetAmount(bytesmemoryassetData)internalpurereturns(uint256amount){assembly{amount:=mload(add(assetData,34))}}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 89
column: 8
content: assembly{assetType:=and(mload(add(assetData,2)),0xffff)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 131
column: 8
content: assembly{amount:=mload(add(assetData,34))}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 55
column: 4
content: functionsendAssetTo(bytesmemoryassetData,address<missing ')'>payable

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 136
column: 4
content: functionsendAssetTo(bytesmemoryassetData,address<missing ')'>payable

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 352
column: 4
content: functioncreate(address_oracle,bytescalldata<missing ')'>

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 55
column: 87
content: (boolsuccess);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 138
column: 23
content: (boolsuccess){_to.

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 139
column: 12
content: transfer(getAmount

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 139
column: 30
content: (assetData));returntrue;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 227
column: 4
content: mapping(address=>bool)oracles;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 354
column: 23
content: _assetData,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 355
column: 8
content: bytes32_paymentDetailsHash,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 356
column: 8
content: uint8v,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 357
column: 8
content: bytes32r,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 358
column: 8
content: bytes32s)externalpayable

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 362
column: 8
content: statusAtLeast(Status.

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 362
column: 29
content: ACTIVE)isOracle

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 363
column: 16
content: (_oracle)checkAssetType

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 364
column: 22
content: (_assetData)returns

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 366
column: 8
content: (boolsuccess){

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 368
column: 8
content: bytes32swapHash=getSwapHash(msg.sender,address(0),_oracle,keccak256(_assetData),_paymentDetailsHash);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 371
column: 8
content: requireSwapNotExists(swapHash);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 372
column: 8
content: require(ecrecover

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 372
column: 25
content: (swapHash,v,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 372
column: 39
content: r,s)==

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 372
column: 48
content: _oracle,"invalid swap oracle signature");

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 377
column: 8
content: swaps[swapHash]=SWAP_UNCLAIMED;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 378
column: 8
content: require(lockAssetFrom

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 379
column: 25
content: (_assetData,msg.

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 379
column: 42
content: sender),"failed to lock asset on escrow");

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 382
column: 8
content: emitCreated

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 382
column: 20
content: (swapHash);returntrue;

SOLIDITY_VISIBILITY :30
SOLIDITY_MSGVALUE_EQUALS_ZERO :1
SOLIDITY_OVERPOWERED_ROLE :1
SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_LOCKED_MONEY :2
SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN :1
SOLIDITY_ADDRESS_HARDCODED :1
SOLIDITY_USING_INLINE_ASSEMBLY :2
SOLIDITY_SHOULD_NOT_BE_PURE :1