/unique_chucks/37/0x540dc09d343835ce0aef9bc3c3007de936c72b81.sol
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: adc165
severity: 1
line: 1026
column: 42
content: 0x97c78dB18D54fC94897C1b114A3F1D7785d98C5E

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: adc165
severity: 1
line: 1265
column: 50
content: 0x97c78dB18D54fC94897C1b114A3F1D7785d98C5E

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: adc165
severity: 1
line: 1283
column: 47
content: 0x97c78db18d54fc94897c1b114a3f1d7785d98c5e

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 339
column: 4
content: owner=address(0)

ruleId: SOLIDITY_ERC20_APPROVE
patternId: af782c
severity: 2
line: 614
column: 2
content: functionapprove(address_spender,uint256_value)publicreturns(bool){allowed[msg.sender][_spender]=_value;emitApproval(msg.sender,_spender,_value);returntrue;}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 1287
column: 8
content: for(uinti=0;i<addresses.length;i++){if(freezes[i]==0){MainToken(token).mint(addresses[i],amounts[i]);}else{MainToken(token).mintAndFreeze(addresses[i],amounts[i],freezes[i]);}}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 784
column: 4
content: functionfreezingCount(address_addr)publicviewreturns(uintcount){uint64release=chains[toKey(_addr,0)];while(release!=0){count++;release=chains[toKey(_addr,release)];}}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 861
column: 4
content: functionreleaseAll()publicreturns(uinttokens){uintrelease;uintbalance;(release,balance)=getFreezing(msg.sender,0);while(release!=0&&block.timestamp>release){releaseOnce();tokens+=balance;(release,balance)=getFreezing(msg.sender,0);}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 1287
column: 8
content: for(uinti=0;i<addresses.length;i++){if(freezes[i]==0){MainToken(token).mint(addresses[i],amounts[i]);}else{MainToken(token).mintAndFreeze(addresses[i],amounts[i],freezes[i]);}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: 17f23a
severity: 1
line: 865
column: 15
content: release!=0&&block.timestamp>release

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: 17f23a
severity: 1
line: 895
column: 15
content: next!=0&&_until>next

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 1304
column: 4
content: functionsetStartTime(uint_startTime)publiconlyOwner{require(now<openingTime);require(_startTime>openingTime);require(_startTime<closingTime);emitTimesChanged(_startTime,closingTime,openingTime,closingTime);openingTime=_startTime;}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 1316
column: 4
content: functionsetEndTime(uint_endTime)publiconlyOwner{require(now<closingTime);require(now<_endTime);require(_endTime>openingTime);emitTimesChanged(openingTime,_endTime,openingTime,closingTime);closingTime=_endTime;}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 1328
column: 4
content: functionsetTimes(uint_startTime,uint_endTime)publiconlyOwner{require(_endTime>_startTime);uintoldStartTime=openingTime;uintoldEndTime=closingTime;boolchanged=false;if(_startTime!=oldStartTime){require(_startTime>now);require(now<oldStartTime);require(_startTime>oldStartTime);openingTime=_startTime;changed=true;}if(_endTime!=oldEndTime){require(now<oldEndTime);require(now<_endTime);closingTime=_endTime;changed=true;}if(changed){emitTimesChanged(openingTime,_endTime,openingTime,closingTime);}}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 19
column: 16
content: ^

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 120
column: 2
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 367
column: 2
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 428
column: 2
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 466
column: 2
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 527
column: 2
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 1041
column: 2
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 1144
column: 2
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 872
column: 4
content: functiontoKey(address_addr,uint_release)internalpurereturns(bytes32result){result=0x5749534800000000000000000000000000000000000000000000000000000000;assembly{result:=or(result,mul(_addr,0x10000000000000000))result:=or(result,_release)}}

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1108
column: 41
content: string_name

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1112
column: 43
content: string_symbol

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 875
column: 8
content: assembly{result:=or(result,mul(_addr,0x10000000000000000))result:=or(result,_release)}

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 529
column: 2
content: mapping(address=>uint256)balances;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 531
column: 2
content: uint256totalSupply_;

SOLIDITY_VISIBILITY :2
SOLIDITY_SAFEMATH :7
SOLIDITY_OVERPOWERED_ROLE :3
SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN :2
SOLIDITY_EXTRA_GAS_IN_LOOPS :1
SOLIDITY_ADDRESS_HARDCODED :4
SOLIDITY_UPGRADE_TO_050 :2
SOLIDITY_GAS_LIMIT_IN_LOOPS :3
SOLIDITY_USING_INLINE_ASSEMBLY :1
SOLIDITY_SHOULD_NOT_BE_PURE :1
SOLIDITY_ERC20_APPROVE :1