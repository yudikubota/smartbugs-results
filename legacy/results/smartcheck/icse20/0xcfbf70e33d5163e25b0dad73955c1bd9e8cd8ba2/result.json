{
  "contract": "0xcfbf70e33d5163e25b0dad73955c1bd9e8cd8ba2",
  "tool": "smartcheck",
  "start": 1563291743.9983585,
  "end": 1563291768.858161,
  "duration": 24.85980248451233,
  "analysis": [
    {
      "name": "SOLIDITY_ARRAY_LENGTH_MANIPULATION",
      "patternId": "43ba1c",
      "severity": 1,
      "line": 462,
      "column": 60,
      "content": "checkpoints.length++"
    },
    {
      "name": "SOLIDITY_ERC20_APPROVE",
      "patternId": "af782c",
      "severity": 2,
      "line": 254,
      "column": 4,
      "content": "functionapprove(address_spender,uint256_amount)whenTransfersEnabledpublicreturns(bool){require((_amount==0)||(allowed[msg.sender][_spender]==0));allowed[msg.sender][_spender]=_amount;emitApproval(msg.sender,_spender,_amount);returntrue;}"
    },
    {
      "name": "SOLIDITY_GAS_LIMIT_IN_LOOPS",
      "patternId": "17f23a",
      "severity": 1,
      "line": 444,
      "column": 15,
      "content": "max>min"
    },
    {
      "name": "SOLIDITY_LOCKED_MONEY",
      "patternId": "30281d",
      "severity": 3,
      "line": 35,
      "column": 0,
      "content": "contractOwnable{addresspayablepublicowner;eventOwnershipTransferred(addressindexedpreviousOwner,addressindexednewOwner);constructor()public{owner=msg.sender;}modifieronlyOwner(){require(msg.sender==owner);_;}functiontransferOwnership(addresspayable_newOwner)externalonlyOwner{require(_newOwner!=address(0));owner=_newOwner;emitOwnershipTransferred(owner,_newOwner);}"
    },
    {
      "name": "SOLIDITY_LOCKED_MONEY",
      "patternId": "30281d",
      "severity": 3,
      "line": 71,
      "column": 0,
      "content": "contractWINSTokenisOwnable{stringpublicname;uint8publicdecimals;stringpublicsymbol;structCheckpoint{uint128fromBlock;uint128value;}uintpubliccreationBlock;boolpublictransfersEnabled;mapping(address=>Checkpoint[])balances;mapping(address=>mapping(address=>uint256))allowed;Checkpoint[]totalSupplyHistory;Checkpoint[]totalSupplyHolders;mapping(address=>bool)publicholders;uintpublicminHolderAmount=20000ether;eventClaimedTokens(addressindexed_token,addressindexed_owner,uint_amount);eventTransfer(addressindexed_from,addressindexed_to,uint256_amount);eventApproval(addressindexed_owner,addressindexed_spender,uint256_amount);modifierwhenTransfersEnabled(){require(transfersEnabled);_;}constructor()public{name=\"WINS LIVE\";symbol=\"WNL\";decimals=18;creationBlock=block.number;transfersEnabled=true;uint_amount=77777777*(10**uint256(decimals));updateValueAtNow(totalSupplyHistory,_amount);updateValueAtNow(balances[msg.sender],_amount);holders[msg.sender]=true;updateValueAtNow(totalSupplyHolders,_amount);emitTransfer(address(0),msg.sender,_amount);}function()externalpayable{}functiontransfer(address_to,uint256_amount)whenTransfersEnabledexternalreturns(bool){doTransfer(msg.sender,_to,_amount);returntrue;}functiontransferFrom(address_from,address_to,uint256_amount)whenTransfersEnabledexternalreturns(bool){require(allowed[_from][msg.sender]>=_amount);allowed[_from][msg.sender]-=_amount;doTransfer(_from,_to,_amount);returntrue;}functiondoTransfer(address_from,address_to,uint_amount)internal{if(_amount==0){emitTransfer(_from,_to,_amount);return;}require((_to!=address(0))&&(_to!=address(this)));uintpreviousBalanceFrom=balanceOfAt(_from,block.number);require(previousBalanceFrom>=_amount);updateValueAtNow(balances[_from],previousBalanceFrom-_amount);uintpreviousBalanceTo=balanceOfAt(_to,block.number);require(previousBalanceTo+_amount>=previousBalanceTo);updateValueAtNow(balances[_to],previousBalanceTo+_amount);emitTransfer(_from,_to,_amount);uintcurTotalSupplyHolders=totalSupplyHoldersAt(block.number);if(holders[_from]){if(previousBalanceFrom-_amount<minHolderAmount){deleteholders[_from];require(curTotalSupplyHolders>=previousBalanceFrom);curTotalSupplyHolders=curTotalSupplyHolders-previousBalanceFrom;updateValueAtNow(totalSupplyHolders,curTotalSupplyHolders);}else{require(curTotalSupplyHolders>=_amount);curTotalSupplyHolders=curTotalSupplyHolders-_amount;updateValueAtNow(totalSupplyHolders,curTotalSupplyHolders);}}if(previousBalanceTo+_amount>=minHolderAmount){if(holders[_to]){require(curTotalSupplyHolders+_amount>=curTotalSupplyHolders);updateValueAtNow(totalSupplyHolders,curTotalSupplyHolders+_amount);}if(!holders[_to]){holders[_to]=true;require(curTotalSupplyHolders+previousBalanceTo+_amount>=curTotalSupplyHolders);updateValueAtNow(totalSupplyHolders,curTotalSupplyHolders+previousBalanceTo+_amount);}}}functionbalanceOf(address_owner)externalviewreturns(uint256balance){returnbalanceOfAt(_owner,block.number);}functionapprove(address_spender,uint256_amount)whenTransfersEnabledpublicreturns(bool){require((_amount==0)||(allowed[msg.sender][_spender]==0));allowed[msg.sender][_spender]=_amount;emitApproval(msg.sender,_spender,_amount);returntrue;}functionincreaseApproval(address_spender,uint_addedAmount)externalreturns(bool){require(allowed[msg.sender][_spender]+_addedAmount>=allowed[msg.sender][_spender]);allowed[msg.sender][_spender]=allowed[msg.sender][_spender]+_addedAmount;emitApproval(msg.sender,_spender,allowed[msg.sender][_spender]);returntrue;}functiondecreaseApproval(address_spender,uint_subtractedAmount)externalreturns(bool){uintoldValue=allowed[msg.sender][_spender];if(_subtractedAmount>=oldValue){allowed[msg.sender][_spender]=0;}else{allowed[msg.sender][_spender]=oldValue-_subtractedAmount;}emitApproval(msg.sender,_spender,allowed[msg.sender][_spender]);returntrue;}functionallowance(address_owner,address_spender)externalviewreturns(uint256remaining){returnallowed[_owner][_spender];}functionapproveAndCall(address_spender,uint256_amount,bytescalldata_extraData)externalreturns(bool){require(approve(_spender,_amount));ApproveAndCallFallBack(_spender).receiveApproval(msg.sender,_amount,address(this),_extraData);returntrue;}functiontotalSupply()externalviewreturns(uint){returntotalSupplyAt(block.number);}functioncurrentTotalSupplyHolders()externalviewreturns(uint){returntotalSupplyHoldersAt(block.number);}functionbalanceOfAt(address_owner,uint_blockNumber)publicviewreturns(uint){if((balances[_owner].length==0)||(balances[_owner][0].fromBlock>_blockNumber)){return0;}else{returngetValueAt(balances[_owner],_blockNumber);}}functiontotalSupplyAt(uint_blockNumber)publicviewreturns(uint){if((totalSupplyHistory.length==0)||(totalSupplyHistory[0].fromBlock>_blockNumber)){return0;}else{returngetValueAt(totalSupplyHistory,_blockNumber);}}functiontotalSupplyHoldersAt(uint_blockNumber)publicviewreturns(uint){if((totalSupplyHolders.length==0)||(totalSupplyHolders[0].fromBlock>_blockNumber)){return0;}else{returngetValueAt(totalSupplyHolders,_blockNumber);}}functionisHolder(address_holder)externalviewreturns(bool){returnholders[_holder];}functiondestroyTokens(uint_amount)onlyOwnerpublicreturns(bool){uintcurTotalSupply=totalSupplyAt(block.number);require(curTotalSupply>=_amount);uintpreviousBalanceFrom=balanceOfAt(msg.sender,block.number);require(previousBalanceFrom>=_amount);updateValueAtNow(totalSupplyHistory,curTotalSupply-_amount);updateValueAtNow(balances[msg.sender],previousBalanceFrom-_amount);emitTransfer(msg.sender,address(0),_amount);uintcurTotalSupplyHolders=totalSupplyHoldersAt(block.number);if(holders[msg.sender]){if(previousBalanceFrom-_amount<minHolderAmount){deleteholders[msg.sender];require(curTotalSupplyHolders>=previousBalanceFrom);updateValueAtNow(totalSupplyHolders,curTotalSupplyHolders-previousBalanceFrom);}else{require(curTotalSupplyHolders>=_amount);updateValueAtNow(totalSupplyHolders,curTotalSupplyHolders-_amount);}}returntrue;}functionenableTransfers(bool_transfersEnabled)publiconlyOwner{transfersEnabled=_transfersEnabled;}functiongetValueAt(Checkpoint[]storagecheckpoints,uint_block)viewinternalreturns(uint){if(checkpoints.length==0)return0;if(_block>=checkpoints[checkpoints.length-1].fromBlock)returncheckpoints[checkpoints.length-1].value;if(_block<checkpoints[0].fromBlock)return0;uintmin=0;uintmax=checkpoints.length-1;while(max>min){uintmid=(max+min+1)/2;if(checkpoints[mid].fromBlock<=_block){min=mid;}else{max=mid-1;}}returncheckpoints[min].value;}functionupdateValueAtNow(Checkpoint[]storagecheckpoints,uint_value)internal{if((checkpoints.length==0)||(checkpoints[checkpoints.length-1].fromBlock<block.number)){CheckpointstoragenewCheckPoint=checkpoints[checkpoints.length++];newCheckPoint.fromBlock=uint128(block.number);newCheckPoint.value=uint128(_value);}else{CheckpointstorageoldCheckPoint=checkpoints[checkpoints.length-1];oldCheckPoint.value=uint128(_value);}}functionmin(uinta,uintb)pureinternalreturns(uint){returna<b?a:b;}functionclaimTokens(addresspayable_token)externalonlyOwner{if(_token==<missing ';'>address(0)){owner.transfer(address<missing ';'>(this).balance);return;}"
    },
    {
      "name": "SOLIDITY_LOCKED_MONEY",
      "patternId": "30281d",
      "severity": 3,
      "line": 506,
      "column": 0,
      "content": "contractDividendManagerisOwnable{usingSafeMathforuint;eventDividendDeposited(addressindexed_depositor,uint256_blockNumber,uint256_amount,uint256_totalSupply,uint256_dividendIndex);eventDividendClaimed(addressindexed_claimer,uint256_dividendIndex,uint256_claim);eventDividendRecycled(addressindexed_recycler,uint256_blockNumber,uint256_amount,uint256_totalSupply,uint256_dividendIndex);WINSTokenpublictoken;uint256publicRECYCLE_TIME=365days;uintpublicminHolderAmount=20000ether;structDividend{uint256blockNumber;uint256timestamp;uint256amount;uint256claimedAmount;uint256totalSupply;boolrecycled;mapping(address=>bool)claimed;}Dividend[]publicdividends;mapping(address=>uint256)dividendsClaimed;structNotClaimed{uintlistIndex;boolexists;}mapping(address=>NotClaimed)publicnotClaimed;address[]publicnotClaimedList;modifiervalidDividendIndex(uint256_dividendIndex){require(_dividendIndex<dividends.length);_;}constructor(addresspayable_token)public{token=WINSToken(_token);}"
    },
    {
      "name": "SOLIDITY_SAFEMATH",
      "patternId": "837cac",
      "severity": 1,
      "line": 507,
      "column": 4,
      "content": "usingSafeMathforuint;"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": 910067,
      "severity": 1,
      "line": 59,
      "column": 4,
      "content": "functiontransferOwnership(addresspayable"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": 910067,
      "severity": 1,
      "line": 487,
      "column": 4,
      "content": "functionclaimTokens(addresspayable"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": 910067,
      "severity": 1,
      "line": 545,
      "column": 4,
      "content": "constructor(addresspayable"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 60,
      "column": 8,
      "content": "require(_newOwner!="
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 60,
      "column": 29,
      "content": "address"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 60,
      "column": 36,
      "content": "(0));"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 61,
      "column": 8,
      "content": "owner=_newOwner;"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 62,
      "column": 8,
      "content": "emitOwnershipTransferred"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 62,
      "column": 33,
      "content": "(owner,_newOwner);"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 98,
      "column": 4,
      "content": "mapping(address=>Checkpoint[])balances;"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 101,
      "column": 4,
      "content": "mapping(address=>mapping(address=>uint256))allowed;"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 104,
      "column": 4,
      "content": "Checkpoint[]totalSupplyHistory;"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 105,
      "column": 4,
      "content": "Checkpoint[]totalSupplyHolders;"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 488,
      "column": 11,
      "content": "(_token==<missing ';'>"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 488,
      "column": 22,
      "content": "address"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 488,
      "column": 29,
      "content": "(0)){"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 489,
      "column": 12,
      "content": "owner.transfer"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 489,
      "column": 26,
      "content": "(address<missing ';'>"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 489,
      "column": 34,
      "content": "(this).balance);"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 530,
      "column": 4,
      "content": "mapping(address=>uint256)dividendsClaimed;"
    }
  ]
}