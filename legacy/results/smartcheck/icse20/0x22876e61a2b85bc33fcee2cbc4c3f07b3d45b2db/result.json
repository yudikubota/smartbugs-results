{
  "contract": "0x22876e61a2b85bc33fcee2cbc4c3f07b3d45b2db",
  "tool": "smartcheck",
  "start": 1563249489.9405904,
  "end": 1563249519.4130259,
  "duration": 29.472435474395752,
  "analysis": [
    {
      "name": "SOLIDITY_DEPRECATED_CONSTRUCTIONS",
      "patternId": "49bd2a",
      "severity": 1,
      "line": 48,
      "column": 12,
      "content": "throw"
    },
    {
      "name": "SOLIDITY_DEPRECATED_CONSTRUCTIONS",
      "patternId": "49bd2a",
      "severity": 1,
      "line": 123,
      "column": 50,
      "content": "throw"
    },
    {
      "name": "SOLIDITY_DEPRECATED_CONSTRUCTIONS",
      "patternId": "49bd2a",
      "severity": 1,
      "line": 253,
      "column": 56,
      "content": "throw"
    },
    {
      "name": "SOLIDITY_DEPRECATED_CONSTRUCTIONS",
      "patternId": "49bd2a",
      "severity": 1,
      "line": 258,
      "column": 8,
      "content": "throw"
    },
    {
      "name": "SOLIDITY_DEPRECATED_CONSTRUCTIONS",
      "patternId": "49bd2a",
      "severity": 1,
      "line": 1383,
      "column": 12,
      "content": "throw"
    },
    {
      "name": "SOLIDITY_DEPRECATED_CONSTRUCTIONS",
      "patternId": "49bd2a",
      "severity": 1,
      "line": 1437,
      "column": 68,
      "content": "throw"
    },
    {
      "name": "SOLIDITY_DEPRECATED_CONSTRUCTIONS",
      "patternId": "49bd2a",
      "severity": 1,
      "line": 1438,
      "column": 78,
      "content": "throw"
    },
    {
      "name": "SOLIDITY_DEPRECATED_CONSTRUCTIONS",
      "patternId": "49bd2a",
      "severity": 1,
      "line": 1439,
      "column": 145,
      "content": "throw"
    },
    {
      "name": "SOLIDITY_DEPRECATED_CONSTRUCTIONS",
      "patternId": "49bd2a",
      "severity": 1,
      "line": 1442,
      "column": 52,
      "content": "throw"
    },
    {
      "name": "SOLIDITY_DEPRECATED_CONSTRUCTIONS",
      "patternId": "49bd2a",
      "severity": 1,
      "line": 1557,
      "column": 121,
      "content": "throw"
    },
    {
      "name": "SOLIDITY_DEPRECATED_CONSTRUCTIONS",
      "patternId": "49bd2a",
      "severity": 1,
      "line": 1558,
      "column": 52,
      "content": "throw"
    },
    {
      "name": "SOLIDITY_DEPRECATED_CONSTRUCTIONS",
      "patternId": "49bd2a",
      "severity": 1,
      "line": 1559,
      "column": 52,
      "content": "throw"
    },
    {
      "name": "SOLIDITY_DEPRECATED_CONSTRUCTIONS",
      "patternId": "49bd2a",
      "severity": 1,
      "line": 1736,
      "column": 121,
      "content": "throw"
    },
    {
      "name": "SOLIDITY_DEPRECATED_CONSTRUCTIONS",
      "patternId": "49bd2a",
      "severity": 1,
      "line": 1737,
      "column": 52,
      "content": "throw"
    },
    {
      "name": "SOLIDITY_DEPRECATED_CONSTRUCTIONS",
      "patternId": "49bd2a",
      "severity": 1,
      "line": 1738,
      "column": 52,
      "content": "throw"
    },
    {
      "name": "SOLIDITY_EXTRA_GAS_IN_LOOPS",
      "patternId": "d3j11j",
      "severity": 1,
      "line": 1223,
      "column": 8,
      "content": "for(uinti=0;i<tradeAddresses.length;i++){futuresTrade(v[i],rs[i],tradeValues[i],tradeAddresses[i],takerIsBuying[i],createFuturesContract(assetHash[i],contractValues[i][0],contractValues[i][1],contractValues[i][2],contractValues[i][3]));}"
    },
    {
      "name": "SOLIDITY_EXTRA_GAS_IN_LOOPS",
      "patternId": "d3j11j",
      "severity": 1,
      "line": 1896,
      "column": 8,
      "content": "for(uinti=0;i<futuresContracts.length;i++){closeFuturesPositionForUser(futuresContracts[i],sides[i],users[i],gasFeePerClose);}"
    },
    {
      "name": "SOLIDITY_GAS_LIMIT_IN_LOOPS",
      "patternId": "f6f853",
      "severity": 2,
      "line": 1223,
      "column": 8,
      "content": "for(uinti=0;i<tradeAddresses.length;i++){futuresTrade(v[i],rs[i],tradeValues[i],tradeAddresses[i],takerIsBuying[i],createFuturesContract(assetHash[i],contractValues[i][0],contractValues[i][1],contractValues[i][2],contractValues[i][3]));}"
    },
    {
      "name": "SOLIDITY_GAS_LIMIT_IN_LOOPS",
      "patternId": "f6f853",
      "severity": 2,
      "line": 1896,
      "column": 8,
      "content": "for(uinti=0;i<futuresContracts.length;i++){closeFuturesPositionForUser(futuresContracts[i],sides[i],users[i],gasFeePerClose);}"
    },
    {
      "name": "SOLIDITY_OVERPOWERED_ROLE",
      "patternId": "j83hf7",
      "severity": 2,
      "line": 90,
      "column": 4,
      "content": "functionsetOwner(addressnewOwner)onlyOwner{emitSetOwner(owner,newOwner);owner=newOwner;}"
    },
    {
      "name": "SOLIDITY_OVERPOWERED_ROLE",
      "patternId": "j83hf7",
      "severity": 2,
      "line": 238,
      "column": 4,
      "content": "functionsetFees(uint256makerFee_,uint256takerFee_)onlyOwner{require(makerFee_<10finney&&takerFee_<10finney);makerFee=makerFee_;takerFee=takerFee_;emitFeeChange(makerFee,takerFee);}"
    },
    {
      "name": "SOLIDITY_OVERPOWERED_ROLE",
      "patternId": "j83hf7",
      "severity": 2,
      "line": 247,
      "column": 4,
      "content": "functionsetAdmin(addressadmin,boolisAdmin)onlyOwner{admins[admin]=isAdmin;}"
    },
    {
      "name": "SOLIDITY_PRAGMAS_VERSION",
      "patternId": "23fc32",
      "severity": 1,
      "line": 1,
      "column": 16,
      "content": "^"
    },
    {
      "name": "SOLIDITY_REDUNDANT_FALLBACK_REJECT",
      "patternId": "b85a32",
      "severity": 1,
      "line": 257,
      "column": 24,
      "content": "{throw;}"
    },
    {
      "name": "SOLIDITY_REVERT_REQUIRE",
      "patternId": "c56b12",
      "severity": 1,
      "line": 47,
      "column": 8,
      "content": "if(!assertion){throw;}"
    },
    {
      "name": "SOLIDITY_REVERT_REQUIRE",
      "patternId": "c56b12",
      "severity": 1,
      "line": 123,
      "column": 8,
      "content": "if(futuresAssets[futuresAsset].disabled)throw;"
    },
    {
      "name": "SOLIDITY_REVERT_REQUIRE",
      "patternId": "c56b12",
      "severity": 1,
      "line": 253,
      "column": 8,
      "content": "if(msg.sender!=owner&&!admins[msg.sender])throw;"
    },
    {
      "name": "SOLIDITY_REVERT_REQUIRE",
      "patternId": "c56b12",
      "severity": 1,
      "line": 1381,
      "column": 8,
      "content": "if(!validateUint128(size)||!validateUint64(price)){throw;}"
    },
    {
      "name": "SOLIDITY_REVERT_REQUIRE",
      "patternId": "c56b12",
      "severity": 1,
      "line": 1437,
      "column": 8,
      "content": "if(futuresContracts[futuresContract].expirationBlock==0)throw;"
    },
    {
      "name": "SOLIDITY_REVERT_REQUIRE",
      "patternId": "c56b12",
      "severity": 1,
      "line": 1438,
      "column": 8,
      "content": "if(futuresContracts[futuresContract].expirationBlock>block.number)throw;"
    },
    {
      "name": "SOLIDITY_REVERT_REQUIRE",
      "patternId": "c56b12",
      "severity": 1,
      "line": 1439,
      "column": 8,
      "content": "if(safeAdd(futuresContracts[futuresContract].expirationBlock,EtherMium(exchangeContract).getInactivityReleasePeriod())>block.number)throw;"
    },
    {
      "name": "SOLIDITY_REVERT_REQUIRE",
      "patternId": "c56b12",
      "severity": 1,
      "line": 1442,
      "column": 8,
      "content": "if(retrievePosition(positionHash)[1]==0)throw;"
    },
    {
      "name": "SOLIDITY_REVERT_REQUIRE",
      "patternId": "c56b12",
      "severity": 1,
      "line": 1557,
      "column": 8,
      "content": "if(futuresContracts[futuresContract].closed==false&&futuresContracts[futuresContract].expirationBlock!=0)throw;"
    },
    {
      "name": "SOLIDITY_REVERT_REQUIRE",
      "patternId": "c56b12",
      "severity": 1,
      "line": 1558,
      "column": 8,
      "content": "if(retrievePosition(positionHash)[1]==0)throw;"
    },
    {
      "name": "SOLIDITY_REVERT_REQUIRE",
      "patternId": "c56b12",
      "severity": 1,
      "line": 1559,
      "column": 8,
      "content": "if(retrievePosition(positionHash)[0]==0)throw;"
    },
    {
      "name": "SOLIDITY_REVERT_REQUIRE",
      "patternId": "c56b12",
      "severity": 1,
      "line": 1704,
      "column": 8,
      "content": "if(futuresContracts[futuresContract].expirationBlock==0)revert();"
    },
    {
      "name": "SOLIDITY_REVERT_REQUIRE",
      "patternId": "c56b12",
      "severity": 1,
      "line": 1705,
      "column": 8,
      "content": "if(futuresContracts[futuresContract].closed==true)revert();"
    },
    {
      "name": "SOLIDITY_REVERT_REQUIRE",
      "patternId": "c56b12",
      "severity": 1,
      "line": 1707,
      "column": 8,
      "content": "if(futuresContracts[futuresContract].expirationBlock>block.number&&price>futuresContracts[futuresContract].floorPrice&&price<futuresContracts[futuresContract].capPrice)revert();"
    },
    {
      "name": "SOLIDITY_REVERT_REQUIRE",
      "patternId": "c56b12",
      "severity": 1,
      "line": 1736,
      "column": 8,
      "content": "if(futuresContracts[futuresContract].closed==false&&futuresContracts[futuresContract].expirationBlock!=0)throw;"
    },
    {
      "name": "SOLIDITY_REVERT_REQUIRE",
      "patternId": "c56b12",
      "severity": 1,
      "line": 1737,
      "column": 8,
      "content": "if(retrievePosition(positionHash)[1]==0)throw;"
    },
    {
      "name": "SOLIDITY_REVERT_REQUIRE",
      "patternId": "c56b12",
      "severity": 1,
      "line": 1738,
      "column": 8,
      "content": "if(retrievePosition(positionHash)[0]==0)throw;"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "901eae",
      "severity": 1,
      "line": 122,
      "column": 31,
      "content": "keccak256(this,name,baseToken,priceUrl,pricePath,inversed)"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "901eae",
      "severity": 1,
      "line": 151,
      "column": 34,
      "content": "keccak256(this,asset,expirationBlock,floorPrice,capPrice,multiplier)"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "901eae",
      "severity": 1,
      "line": 365,
      "column": 30,
      "content": "keccak256(this,futuresContractHash,tradeAddresses[0],tradeValues[4],tradeValues[6],!takerIsBuying,tradeValues[0])"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "901eae",
      "severity": 1,
      "line": 366,
      "column": 30,
      "content": "keccak256(this,futuresContractHash,tradeAddresses[1],tradeValues[5],tradeValues[7],takerIsBuying,tradeValues[1])"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "901eae",
      "severity": 1,
      "line": 375,
      "column": 42,
      "content": "keccak256(this,tradeAddresses[0],futuresContractHash,!takerIsBuying)"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "901eae",
      "severity": 1,
      "line": 376,
      "column": 42,
      "content": "keccak256(this,tradeAddresses[0],futuresContractHash,takerIsBuying)"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "901eae",
      "severity": 1,
      "line": 378,
      "column": 42,
      "content": "keccak256(this,tradeAddresses[1],futuresContractHash,takerIsBuying)"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "901eae",
      "severity": 1,
      "line": 379,
      "column": 42,
      "content": "keccak256(this,tradeAddresses[1],futuresContractHash,!takerIsBuying)"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "901eae",
      "severity": 1,
      "line": 401,
      "column": 22,
      "content": "keccak256(\"\\x19Ethereum Signed Message:\\n32\",t.makerOrderHash)"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "901eae",
      "severity": 1,
      "line": 408,
      "column": 22,
      "content": "keccak256(\"\\x19Ethereum Signed Message:\\n32\",t.takerOrderHash)"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "901eae",
      "severity": 1,
      "line": 1441,
      "column": 31,
      "content": "keccak256(this,msg.sender,futuresContract,side)"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "901eae",
      "severity": 1,
      "line": 1555,
      "column": 31,
      "content": "keccak256(this,msg.sender,futuresContract,side)"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "901eae",
      "severity": 1,
      "line": 1734,
      "column": 31,
      "content": "keccak256(this,user,futuresContract,side)"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": 910067,
      "severity": 1,
      "line": 13,
      "column": 4,
      "content": "functiontransfer(address_to,uint256_value)returns(boolsuccess);"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": 910067,
      "severity": 1,
      "line": 14,
      "column": 4,
      "content": "functionapproveAndCall(address_spender,uint256_value,bytes_extraData)returns(boolsuccess);"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": 910067,
      "severity": 1,
      "line": 15,
      "column": 4,
      "content": "functionapprove(address_spender,uint256_value)returns(boolsuccess);"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": 910067,
      "severity": 1,
      "line": 16,
      "column": 4,
      "content": "functiontransferFrom(address_from,address_to,uint256_value)returns(boolsuccess);"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": 910067,
      "severity": 1,
      "line": 21,
      "column": 4,
      "content": "functiongetReserve(addresstoken,addressuser)returns(uint256);"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": 910067,
      "severity": 1,
      "line": 22,
      "column": 4,
      "content": "functionsetReserve(addresstoken,addressuser,uint256amount)returns(bool);"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": 910067,
      "severity": 1,
      "line": 24,
      "column": 4,
      "content": "functionavailableBalanceOf(addresstoken,addressuser)returns(uint256);"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": 910067,
      "severity": 1,
      "line": 25,
      "column": 4,
      "content": "functionbalanceOf(addresstoken,addressuser)returns(uint256);"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": 910067,
      "severity": 1,
      "line": 28,
      "column": 4,
      "content": "functionsetBalance(addresstoken,addressuser,uint256amount)returns(bool);"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": 910067,
      "severity": 1,
      "line": 29,
      "column": 4,
      "content": "functiongetAffiliate(addressuser)returns(address);"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": 910067,
      "severity": 1,
      "line": 30,
      "column": 4,
      "content": "functiongetInactivityReleasePeriod()returns(uint256);"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": 910067,
      "severity": 1,
      "line": 31,
      "column": 4,
      "content": "functiongetMakerTakerBalances(addresstoken,addressmaker,addresstaker)returns(uint256[4]);"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": 910067,
      "severity": 1,
      "line": 33,
      "column": 4,
      "content": "functiongetEtmTokenAddress()returns(address);"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": 910067,
      "severity": 1,
      "line": 35,
      "column": 4,
      "content": "functionsubBalanceAddReserve(addresstoken,addressuser,uint256subBalance,uint256addReserve)returns(bool);"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": 910067,
      "severity": 1,
      "line": 36,
      "column": 4,
      "content": "functionaddBalanceSubReserve(addresstoken,addressuser,uint256addBalance,uint256subReserve)returns(bool);"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": 910067,
      "severity": 1,
      "line": 37,
      "column": 4,
      "content": "functionsubBalanceSubReserve(addresstoken,addressuser,uint256subBalance,uint256subReserve)returns(bool);"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": 910067,
      "severity": 1,
      "line": 45,
      "column": 4,
      "content": "functionassert(boolassertion)pure{if(!assertion){throw;}}"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": 910067,
      "severity": 1,
      "line": 53,
      "column": 4,
      "content": "functionsafeMul(uinta,uintb)purereturns(uint){uintc=a*b;assert(a==0||c/a==b);returnc;}"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": 910067,
      "severity": 1,
      "line": 60,
      "column": 4,
      "content": "functionsafeSub(uinta,uintb)purereturns(uint){assert(b<=a);returna-b;}"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": 910067,
      "severity": 1,
      "line": 66,
      "column": 4,
      "content": "functionsafeAdd(uinta,uintb)purereturns(uint){uintc=a+b;assert(c>=a&&c>=b);returnc;}"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": 910067,
      "severity": 1,
      "line": 90,
      "column": 4,
      "content": "functionsetOwner(addressnewOwner)onlyOwner{emitSetOwner(owner,newOwner);owner=newOwner;}"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": 910067,
      "severity": 1,
      "line": 96,
      "column": 4,
      "content": "functiongetOwner()viewreturns(addressout){returnowner;}"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": 910067,
      "severity": 1,
      "line": 120,
      "column": 4,
      "content": "functioncreateFuturesAsset(stringname,addressbaseToken,stringpriceUrl,stringpricePath,boolinversed)onlyAdminreturns(bytes32){bytes32futuresAsset=keccak256(this,name,baseToken,priceUrl,pricePath,inversed);if(futuresAssets[futuresAsset].disabled)throw;futuresAssets[futuresAsset]=FuturesAsset({name:name,baseToken:baseToken,priceUrl:priceUrl,pricePath:pricePath,inversed:inversed,disabled:false});emitFuturesAssetCreated(futuresAsset,name,baseToken,priceUrl,pricePath,inversed);returnfuturesAsset;}"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": 910067,
      "severity": 1,
      "line": 149,
      "column": 4,
      "content": "functioncreateFuturesContract(bytes32asset,uint256expirationBlock,uint256floorPrice,uint256capPrice,uint256multiplier)onlyAdminreturns(bytes32){bytes32futuresContract=keccak256(this,asset,expirationBlock,floorPrice,capPrice,multiplier);if(futuresContracts[futuresContract].expirationBlock>0)returnfuturesContract;futuresContracts[futuresContract]=FuturesContract({asset:asset,expirationBlock:expirationBlock,closingPrice:0,closed:false,broken:false,floorPrice:floorPrice,capPrice:capPrice,multiplier:multiplier});emitFuturesContractCreated(futuresContract,asset,expirationBlock,floorPrice,capPrice,multiplier);returnfuturesContract;}"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": 910067,
      "severity": 1,
      "line": 170,
      "column": 4,
      "content": "functiongetContractExpiration(bytes32futuresContractHash)viewreturns(uint256){returnfuturesContracts[futuresContractHash].expirationBlock;}"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": 910067,
      "severity": 1,
      "line": 175,
      "column": 4,
      "content": "functiongetContractClosed(bytes32futuresContractHash)returns(bool){returnfuturesContracts[futuresContractHash].closed;}"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": 910067,
      "severity": 1,
      "line": 180,
      "column": 4,
      "content": "functiongetContractPriceUrl(bytes32futuresContractHash)returns(string){returnfuturesAssets[futuresContracts[futuresContractHash].asset].priceUrl;}"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": 910067,
      "severity": 1,
      "line": 185,
      "column": 4,
      "content": "functiongetContractPricePath(bytes32futuresContractHash)returns(string){returnfuturesAssets[futuresContracts[futuresContractHash].asset].pricePath;}"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": 910067,
      "severity": 1,
      "line": 227,
      "column": 4,
      "content": "functionExchange(addressfeeAccount_,uint256makerFee_,uint256takerFee_,addressexchangeContract_,addressDmexOracleContract_){owner=msg.sender;feeAccount=feeAccount_;makerFee=makerFee_;takerFee=takerFee_;exchangeContract=exchangeContract_;DmexOracleContract=DmexOracleContract_;}"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": 910067,
      "severity": 1,
      "line": 238,
      "column": 4,
      "content": "functionsetFees(uint256makerFee_,uint256takerFee_)onlyOwner{require(makerFee_<10finney&&takerFee_<10finney);makerFee=makerFee_;takerFee=takerFee_;emitFeeChange(makerFee,takerFee);}"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": 910067,
      "severity": 1,
      "line": 247,
      "column": 4,
      "content": "functionsetAdmin(addressadmin,boolisAdmin)onlyOwner{admins[admin]=isAdmin;}"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": 910067,
      "severity": 1,
      "line": 262,
      "column": 4,
      "content": "functionvalidateUint48(uint256val)returns(bool){if(val!=uint48(val))returnfalse;returntrue;}"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": 910067,
      "severity": 1,
      "line": 268,
      "column": 4,
      "content": "functionvalidateUint64(uint256val)returns(bool){if(val!=uint64(val))returnfalse;returntrue;}"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": 910067,
      "severity": 1,
      "line": 274,
      "column": 4,
      "content": "functionvalidateUint128(uint256val)returns(bool){if(val!=uint128(val))returnfalse;returntrue;}"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": 910067,
      "severity": 1,
      "line": 327,
      "column": 4,
      "content": "functionfuturesTrade(uint8[2]v,bytes32[4]rs,uint256[8]tradeValues,address[2]tradeAddresses,booltakerIsBuying,bytes32futuresContractHash)onlyAdminreturns(uintfilledTakerTokenAmount){FuturesOrderPairmemoryt=FuturesOrderPair({makerNonce:tradeValues[0],takerNonce:tradeValues[1],takerGasFee:tradeValues[2],takerIsBuying:tradeValues[3],makerAmount:tradeValues[4],takerAmount:tradeValues[5],makerPrice:tradeValues[6],takerPrice:tradeValues[7],maker:tradeAddresses[0],taker:tradeAddresses[1],makerOrderHash:keccak256(this,futuresContractHash,tradeAddresses[0],tradeValues[4],tradeValues[6],!takerIsBuying,tradeValues[0]),takerOrderHash:keccak256(this,futuresContractHash,tradeAddresses[1],tradeValues[5],tradeValues[7],takerIsBuying,tradeValues[1]),futuresContract:futuresContractHash,baseToken:futuresAssets[futuresContracts[futuresContractHash].asset].baseToken,floorPrice:futuresContracts[futuresContractHash].floorPrice,capPrice:futuresContracts[futuresContractHash].capPrice,makerPositionHash:keccak256(this,tradeAddresses[0],futuresContractHash,!takerIsBuying),makerInversePositionHash:keccak256(this,tradeAddresses[0],futuresContractHash,takerIsBuying),takerPositionHash:keccak256(this,tradeAddresses[1],futuresContractHash,takerIsBuying),takerInversePositionHash:keccak256(this,tradeAddresses[1],futuresContractHash,!takerIsBuying)});if(!validateUint128(t.makerAmount)||!validateUint128(t.takerAmount)||!validateUint64(t.makerPrice)||!validateUint64(t.takerPrice)){emitLogError(uint8(Errors.UINT48_VALIDATION),t.makerOrderHash,t.takerOrderHash);return0;}if(block.number>futuresContracts[t.futuresContract].expirationBlock||futuresContracts[t.futuresContract].closed==true||futuresContracts[t.futuresContract].broken==true){emitLogError(uint8(Errors.FUTURES_CONTRACT_EXPIRED),t.makerOrderHash,t.takerOrderHash);return0;}if(ecrecover(keccak256(\"\\x19Ethereum Signed Message:\\n32\",t.makerOrderHash),v[0],rs[0],rs[1])!=t.maker){emitLogError(uint8(Errors.INVALID_SIGNATURE),t.makerOrderHash,t.takerOrderHash);return0;}if(ecrecover(keccak256(\"\\x19Ethereum Signed Message:\\n32\",t.takerOrderHash),v[1],rs[2],rs[3])!=t.taker){emitLogError(uint8(Errors.INVALID_SIGNATURE),t.makerOrderHash,t.takerOrderHash);return0;}if((!takerIsBuying&&t.makerPrice<t.takerPrice)||(takerIsBuying&&t.takerPrice<t.makerPrice)){emitLogError(uint8(Errors.INVALID_PRICE),t.makerOrderHash,t.takerOrderHash);return0;}uint256[4]memorybalances=EtherMium(exchangeContract).getMakerTakerBalances(t.baseToken,t.maker,t.taker);FuturesTradeValuesmemorytv=FuturesTradeValues({qty:0,makerProfit:0,makerLoss:0,takerProfit:0,takerLoss:0,makerBalance:balances[0],takerBalance:balances[1],makerReserve:balances[2],takerReserve:balances[3]});if(futuresContracts[t.futuresContract].floorPrice>=t.makerPrice||futuresContracts[t.futuresContract].capPrice<=t.makerPrice){emitLogError(uint8(Errors.FLOOR_OR_CAP_PRICE_REACHED),t.makerOrderHash,t.takerOrderHash);return0;}tv.qty=min(safeSub(t.makerAmount,orderFills[t.makerOrderHash]),safeSub(t.takerAmount,orderFills[t.takerOrderHash]));if(positionExists(t.makerInversePositionHash)&&positionExists(t.takerInversePositionHash)){tv.qty=min(tv.qty,min(retrievePosition(t.makerInversePositionHash)[0],retrievePosition(t.takerInversePositionHash)[0]));}elseif(positionExists(t.makerInversePositionHash)){tv.qty=min(tv.qty,retrievePosition(t.makerInversePositionHash)[0]);}elseif(positionExists(t.takerInversePositionHash)){tv.qty=min(tv.qty,retrievePosition(t.takerInversePositionHash)[0]);}if(tv.qty==0){emitLogError(uint8(Errors.ORDER_ALREADY_FILLED),t.makerOrderHash,t.takerOrderHash);return0;}if(safeMul(t.takerGasFee,20)>calculateTradeValue(tv.qty,t.makerPrice,t.futuresContract)){emitLogError(uint8(Errors.GAS_TOO_HIGH),t.makerOrderHash,t.takerOrderHash);return0;}if(!takerIsBuying){if(!positionExists(t.makerInversePositionHash)&&!positionExists(t.makerPositionHash)){if(!checkEnoughBalance(t.floorPrice,t.makerPrice,tv.qty,true,makerFee,0,futuresContractHash,safeSub(balances[0],tv.makerReserve))){emitLogError(uint8(Errors.OUT_OF_BALANCE),t.makerOrderHash,t.takerOrderHash);return0;}recordNewPosition(t.makerPositionHash,tv.qty,t.makerPrice,1,block.number);updateBalances(t.futuresContract,[t.baseToken,t.maker],t.makerPositionHash,[tv.qty,t.makerPrice,makerFee,0,0,tv.makerBalance,0,tv.makerReserve],[true,true,false]);}else{if(positionExists(t.makerPositionHash)){if(!checkEnoughBalance(t.floorPrice,t.makerPrice,tv.qty,true,makerFee,0,futuresContractHash,safeSub(balances[0],tv.makerReserve))){emitLogError(uint8(Errors.OUT_OF_BALANCE),t.makerOrderHash,t.takerOrderHash);return0;}updatePositionSize(t.makerPositionHash,safeAdd(retrievePosition(t.makerPositionHash)[0],tv.qty),t.makerPrice);updateBalances(t.futuresContract,[t.baseToken,t.maker],t.makerPositionHash,[tv.qty,t.makerPrice,makerFee,0,0,tv.makerBalance,0,tv.makerReserve],[false,true,true]);}else{updatePositionSize(t.makerInversePositionHash,safeSub(retrievePosition(t.makerInversePositionHash)[0],tv.qty),0);if(t.makerPrice<retrievePosition(t.makerInversePositionHash)[1]){tv.makerProfit=calculateProfit(t.makerPrice,retrievePosition(t.makerInversePositionHash)[1],tv.qty,futuresContractHash,true);}else{tv.makerLoss=calculateLoss(t.makerPrice,retrievePosition(t.makerInversePositionHash)[1],tv.qty,futuresContractHash,true);}updateBalances(t.futuresContract,[t.baseToken,t.maker],t.makerInversePositionHash,[tv.qty,t.makerPrice,makerFee,tv.makerProfit,tv.makerLoss,tv.makerBalance,0,tv.makerReserve],[false,true,false]);}}if(!positionExists(t.takerInversePositionHash)&&!positionExists(t.takerPositionHash)){if(!checkEnoughBalance(t.capPrice,t.makerPrice,tv.qty,false,takerFee,t.takerGasFee,futuresContractHash,safeSub(balances[1],tv.takerReserve))){emitLogError(uint8(Errors.OUT_OF_BALANCE),t.makerOrderHash,t.takerOrderHash);return0;}recordNewPosition(t.takerPositionHash,tv.qty,t.makerPrice,0,block.number);updateBalances(t.futuresContract,[t.baseToken,t.taker],t.takerPositionHash,[tv.qty,t.makerPrice,takerFee,0,0,tv.takerBalance,t.takerGasFee,tv.takerReserve],[true,false,false]);}else{if(positionExists(t.takerPositionHash)){if(!checkEnoughBalance(t.capPrice,t.makerPrice,tv.qty,false,takerFee,t.takerGasFee,futuresContractHash,safeSub(balances[1],tv.takerReserve))){emitLogError(uint8(Errors.OUT_OF_BALANCE),t.makerOrderHash,t.takerOrderHash);return0;}updatePositionSize(t.takerPositionHash,safeAdd(retrievePosition(t.takerPositionHash)[0],tv.qty),t.makerPrice);updateBalances(t.futuresContract,[t.baseToken,t.taker],t.takerPositionHash,[tv.qty,t.makerPrice,takerFee,0,0,tv.takerBalance,t.takerGasFee,tv.takerReserve],[false,false,true]);}else{updatePositionSize(t.takerInversePositionHash,safeSub(retrievePosition(t.takerInversePositionHash)[0],tv.qty),0);if(t.makerPrice>retrievePosition(t.takerInversePositionHash)[1]){tv.takerProfit=calculateProfit(t.makerPrice,retrievePosition(t.takerInversePositionHash)[1],tv.qty,futuresContractHash,false);}else{tv.takerLoss=calculateLoss(t.makerPrice,retrievePosition(t.takerInversePositionHash)[1],tv.qty,futuresContractHash,false);}updateBalances(t.futuresContract,[t.baseToken,t.taker],t.takerInversePositionHash,[tv.qty,t.makerPrice,takerFee,tv.takerProfit,tv.takerLoss,tv.takerBalance,t.takerGasFee,tv.takerReserve],[false,false,false]);}}}else{if(!positionExists(t.makerInversePositionHash)&&!positionExists(t.makerPositionHash)){if(!checkEnoughBalance(t.capPrice,t.makerPrice,tv.qty,false,makerFee,0,futuresContractHash,safeSub(balances[0],tv.makerReserve))){emitLogError(uint8(Errors.OUT_OF_BALANCE),t.makerOrderHash,t.takerOrderHash);return0;}recordNewPosition(t.makerPositionHash,tv.qty,t.makerPrice,0,block.number);updateBalances(t.futuresContract,[t.baseToken,t.maker],t.makerPositionHash,[tv.qty,t.makerPrice,makerFee,0,0,tv.makerBalance,0,tv.makerReserve],[true,false,false]);}else{if(positionExists(t.makerPositionHash)){if(!checkEnoughBalance(t.capPrice,t.makerPrice,tv.qty,false,makerFee,0,futuresContractHash,safeSub(balances[0],tv.makerReserve))){emitLogError(uint8(Errors.OUT_OF_BALANCE),t.makerOrderHash,t.takerOrderHash);return0;}updatePositionSize(t.makerPositionHash,safeAdd(retrievePosition(t.makerPositionHash)[0],tv.qty),t.makerPrice);updateBalances(t.futuresContract,[t.baseToken,t.maker],t.makerPositionHash,[tv.qty,t.makerPrice,makerFee,0,0,tv.makerBalance,0,tv.makerReserve],[false,false,true]);}else{updatePositionSize(t.makerInversePositionHash,safeSub(retrievePosition(t.makerInversePositionHash)[0],tv.qty),0);if(t.makerPrice>retrievePosition(t.makerInversePositionHash)[1]){tv.makerProfit=calculateProfit(t.makerPrice,retrievePosition(t.makerInversePositionHash)[1],tv.qty,futuresContractHash,false);}else{tv.makerLoss=calculateLoss(t.makerPrice,retrievePosition(t.makerInversePositionHash)[1],tv.qty,futuresContractHash,false);}updateBalances(t.futuresContract,[t.baseToken,t.maker],t.makerInversePositionHash,[tv.qty,t.makerPrice,makerFee,tv.makerProfit,tv.makerLoss,tv.makerBalance,0,tv.makerReserve],[false,false,false]);}}if(!positionExists(t.takerInversePositionHash)&&!positionExists(t.takerPositionHash)){if(!checkEnoughBalance(t.floorPrice,t.makerPrice,tv.qty,true,takerFee,t.takerGasFee,futuresContractHash,safeSub(balances[1],tv.takerReserve))){emitLogError(uint8(Errors.OUT_OF_BALANCE),t.makerOrderHash,t.takerOrderHash);return0;}recordNewPosition(t.takerPositionHash,tv.qty,t.makerPrice,1,block.number);updateBalances(t.futuresContract,[t.baseToken,t.taker],t.takerPositionHash,[tv.qty,t.makerPrice,takerFee,0,0,tv.takerBalance,t.takerGasFee,tv.takerReserve],[true,true,false]);}else{if(positionExists(t.takerPositionHash)){if(!checkEnoughBalance(t.floorPrice,t.makerPrice,tv.qty,true,takerFee,t.takerGasFee,futuresContractHash,safeSub(balances[1],tv.takerReserve))){emitLogError(uint8(Errors.OUT_OF_BALANCE),t.makerOrderHash,t.takerOrderHash);return0;}updatePositionSize(t.takerPositionHash,safeAdd(retrievePosition(t.takerPositionHash)[0],tv.qty),t.makerPrice);updateBalances(t.futuresContract,[t.baseToken,t.taker],t.takerPositionHash,[tv.qty,t.makerPrice,takerFee,0,0,tv.takerBalance,t.takerGasFee,tv.takerReserve],[false,true,true]);}else{updatePositionSize(t.takerInversePositionHash,safeSub(retrievePosition(t.takerInversePositionHash)[0],tv.qty),0);if(t.makerPrice<retrievePosition(t.takerInversePositionHash)[1]){tv.takerProfit=calculateProfit(t.makerPrice,retrievePosition(t.takerInversePositionHash)[1],tv.qty,futuresContractHash,true);}else{tv.takerLoss=calculateLoss(t.makerPrice,retrievePosition(t.takerInversePositionHash)[1],tv.qty,futuresContractHash,true);}updateBalances(t.futuresContract,[t.baseToken,t.taker],t.takerInversePositionHash,[tv.qty,t.makerPrice,takerFee,tv.takerProfit,tv.takerLoss,tv.takerBalance,t.takerGasFee,tv.takerReserve],[false,true,false]);}}}orderFills[t.makerOrderHash]=safeAdd(orderFills[t.makerOrderHash],tv.qty);orderFills[t.takerOrderHash]=safeAdd(orderFills[t.takerOrderHash],tv.qty);emitFuturesTrade(takerIsBuying,tv.qty,t.makerPrice,t.futuresContract,t.makerOrderHash,t.takerOrderHash);returntv.qty;}"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": 910067,
      "severity": 1,
      "line": 1054,
      "column": 4,
      "content": "functioncalculateProfit(uint256closingPrice,uint256entryPrice,uint256qty,bytes32futuresContractHash,boolside)returns(uint256){boolinversed=futuresAssets[futuresContracts[futuresContractHash].asset].inversed;uint256multiplier=futuresContracts[futuresContractHash].multiplier;if(side){if(inversed){returnsafeMul(safeSub(entryPrice,closingPrice),qty)/closingPrice;}else{returnsafeMul(safeMul(safeSub(entryPrice,closingPrice),qty),multiplier)/1e8/1e18;}}else{if(inversed){returnsafeMul(safeSub(closingPrice,entryPrice),qty)/closingPrice;}else{returnsafeMul(safeMul(safeSub(closingPrice,entryPrice),qty),multiplier)/1e8/1e18;}}}"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": 910067,
      "severity": 1,
      "line": 1084,
      "column": 4,
      "content": "functioncalculateTradeValue(uint256qty,uint256price,bytes32futuresContractHash)returns(uint256){boolinversed=futuresAssets[futuresContracts[futuresContractHash].asset].inversed;uint256multiplier=futuresContracts[futuresContractHash].multiplier;if(inversed){returnqty*1e10;}else{returnsafeMul(safeMul(safeMul(qty,price),1e2),multiplier)/1e18;}}"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": 910067,
      "severity": 1,
      "line": 1100,
      "column": 4,
      "content": "functioncalculateLoss(uint256closingPrice,uint256entryPrice,uint256qty,bytes32futuresContractHash,boolside)returns(uint256){boolinversed=futuresAssets[futuresContracts[futuresContractHash].asset].inversed;uint256multiplier=futuresContracts[futuresContractHash].multiplier;if(side){if(inversed){returnsafeMul(safeSub(closingPrice,entryPrice),qty)/closingPrice;}else{returnsafeMul(safeMul(safeSub(closingPrice,entryPrice),qty),multiplier)/1e8/1e18;}}else{if(inversed){returnsafeMul(safeSub(entryPrice,closingPrice),qty)/closingPrice;}else{returnsafeMul(safeMul(safeSub(entryPrice,closingPrice),qty),multiplier)/1e8/1e18;}}}"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": 910067,
      "severity": 1,
      "line": 1130,
      "column": 4,
      "content": "functioncalculateCollateral(uint256limitPrice,uint256tradePrice,uint256qty,boolside,bytes32futuresContractHash)viewreturns(uint256){boolinversed=futuresAssets[futuresContracts[futuresContractHash].asset].inversed;uint256multiplier=futuresContracts[futuresContractHash].multiplier;if(side){if(inversed){returnsafeMul(safeSub(tradePrice,limitPrice),qty)/limitPrice;}else{returnsafeMul(safeMul(safeSub(tradePrice,limitPrice),qty),multiplier)/1e8/1e18;}}else{if(inversed){returnsafeMul(safeSub(limitPrice,tradePrice),qty)/limitPrice;}else{returnsafeMul(safeMul(safeSub(limitPrice,tradePrice),qty),multiplier)/1e8/1e18;}}}"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": 910067,
      "severity": 1,
      "line": 1161,
      "column": 4,
      "content": "functioncalculateFee(uint256qty,uint256tradePrice,uint256fee,bytes32futuresContractHash)returns(uint256){returnsafeMul(calculateTradeValue(qty,tradePrice,futuresContractHash),fee)/1e18/1e10;}"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": 910067,
      "severity": 1,
      "line": 1167,
      "column": 4,
      "content": "functioncheckEnoughBalance(uint256limitPrice,uint256tradePrice,uint256qty,boolside,uint256fee,uint256gasFee,bytes32futuresContractHash,uint256availableBalance)viewreturns(bool){boolinversed=futuresAssets[futuresContracts[futuresContractHash].asset].inversed;uint256multiplier=futuresContracts[futuresContractHash].multiplier;if(side){if(safeAdd(safeAdd(calculateCollateral(limitPrice,tradePrice,qty,side,futuresContractHash),calculateFee(qty,tradePrice,fee,futuresContractHash))*1e10,gasFee)>availableBalance){returnfalse;}}else{if(safeAdd(safeAdd(calculateCollateral(limitPrice,tradePrice,qty,side,futuresContractHash),calculateFee(qty,tradePrice,fee,futuresContractHash))*1e10,gasFee)>availableBalance){returnfalse;}}returntrue;}"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": 910067,
      "severity": 1,
      "line": 1212,
      "column": 4,
      "content": "functionbatchFuturesTrade(uint8[2][]v,bytes32[4][]rs,uint256[8][]tradeValues,address[2][]tradeAddresses,bool[]takerIsBuying,bytes32[]assetHash,uint256[4][]contractValues)onlyAdmin{for(uinti=0;i<tradeAddresses.length;i++){futuresTrade(v[i],rs[i],tradeValues[i],tradeAddresses[i],takerIsBuying[i],createFuturesContract(assetHash[i],contractValues[i][0],contractValues[i][1],contractValues[i][2],contractValues[i][3]));}}"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": 910067,
      "severity": 1,
      "line": 1553,
      "column": 4,
      "content": "functioncloseFuturesPosition(bytes32futuresContract,boolside){bytes32positionHash=keccak256(this,msg.sender,futuresContract,side);if(futuresContracts[futuresContract].closed==false&&futuresContracts[futuresContract].expirationBlock!=0)throw;if(retrievePosition(positionHash)[1]==0)throw;if(retrievePosition(positionHash)[0]==0)throw;uint256profit;uint256loss;addressbaseToken=futuresAssets[futuresContracts[futuresContract].asset].baseToken;FuturesClosePositionValuesmemoryv=FuturesClosePositionValues({reserve:EtherMium(exchangeContract).getReserve(baseToken,msg.sender),balance:EtherMium(exchangeContract).balanceOf(baseToken,msg.sender),floorPrice:futuresContracts[futuresContract].floorPrice,capPrice:futuresContracts[futuresContract].capPrice,closingPrice:futuresContracts[futuresContract].closingPrice,futuresContract:futuresContract});uint256fee=calculateFee(retrievePosition(positionHash)[0],v.closingPrice,takerFee,futuresContract);if(side==true){subReserve(baseToken,msg.sender,v.reserve,calculateCollateral(v.floorPrice,retrievePosition(positionHash)[1],retrievePosition(positionHash)[0],true,v.futuresContract));if(v.closingPrice>retrievePosition(positionHash)[1]){profit=calculateProfit(v.closingPrice,retrievePosition(positionHash)[1],retrievePosition(positionHash)[0],futuresContract,false);if(profit>fee){addBalance(baseToken,msg.sender,v.balance,safeSub(profit*1e10,fee*1e10));}else{subBalance(baseToken,msg.sender,v.balance,safeSub(fee*1e10,profit*1e10));}}else{loss=calculateLoss(v.closingPrice,retrievePosition(positionHash)[1],retrievePosition(positionHash)[0],futuresContract,false);subBalance(baseToken,msg.sender,v.balance,safeAdd(loss*1e10,fee*1e10));}}else{subReserve(baseToken,msg.sender,v.reserve,calculateCollateral(v.capPrice,retrievePosition(positionHash)[1],retrievePosition(positionHash)[0],false,v.futuresContract));if(v.closingPrice<retrievePosition(positionHash)[1]){profit=calculateProfit(v.closingPrice,retrievePosition(positionHash)[1],retrievePosition(positionHash)[0],futuresContract,true);if(profit>fee){addBalance(baseToken,msg.sender,v.balance,safeSub(profit*1e10,fee*1e10));}else{subBalance(baseToken,msg.sender,v.balance,safeSub(fee*1e10,profit*1e10));}}else{loss=calculateLoss(v.closingPrice,retrievePosition(positionHash)[1],retrievePosition(positionHash)[0],futuresContract,true);subBalance(baseToken,msg.sender,v.balance,safeAdd(loss*1e10,fee*1e10));}}addBalance(baseToken,feeAccount,EtherMium(exchangeContract).balanceOf(baseToken,feeAccount),fee*1e10);updatePositionSize(positionHash,0,0);emitFuturesPositionClosed(positionHash);}"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": 910067,
      "severity": 1,
      "line": 1702,
      "column": 4,
      "content": "functioncloseFuturesContract(bytes32futuresContract,uint256price)onlyOracle{if(futuresContracts[futuresContract].expirationBlock==0)revert();if(futuresContracts[futuresContract].closed==true)revert();if(futuresContracts[futuresContract].expirationBlock>block.number&&price>futuresContracts[futuresContract].floorPrice&&price<futuresContracts[futuresContract].capPrice)revert();if(price<=futuresContracts[futuresContract].floorPrice){futuresContracts[futuresContract].closingPrice=futuresContracts[futuresContract].floorPrice;}elseif(price>=futuresContracts[futuresContract].capPrice){futuresContracts[futuresContract].closingPrice=futuresContracts[futuresContract].capPrice;}else{futuresContracts[futuresContract].closingPrice=price;}futuresContracts[futuresContract].closed=true;emitFuturesContractClosed(futuresContract,price);}"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": 910067,
      "severity": 1,
      "line": 1732,
      "column": 4,
      "content": "functioncloseFuturesPositionForUser(bytes32futuresContract,boolside,addressuser,uint256gasFee)onlyAdmin{bytes32positionHash=keccak256(this,user,futuresContract,side);if(futuresContracts[futuresContract].closed==false&&futuresContracts[futuresContract].expirationBlock!=0)throw;if(retrievePosition(positionHash)[1]==0)throw;if(retrievePosition(positionHash)[0]==0)throw;if(safeMul(gasFee*1e10,20)>calculateTradeValue(retrievePosition(positionHash)[0],retrievePosition(positionHash)[1],futuresContract)){emitLogError(uint8(Errors.GAS_TOO_HIGH),futuresContract,positionHash);return;}uint256profit;uint256loss;addressbaseToken=futuresAssets[futuresContracts[futuresContract].asset].baseToken;FuturesClosePositionValuesmemoryv=FuturesClosePositionValues({reserve:EtherMium(exchangeContract).getReserve(baseToken,user),balance:EtherMium(exchangeContract).balanceOf(baseToken,user),floorPrice:futuresContracts[futuresContract].floorPrice,capPrice:futuresContracts[futuresContract].capPrice,closingPrice:futuresContracts[futuresContract].closingPrice,futuresContract:futuresContract});uint256fee=safeAdd(calculateFee(retrievePosition(positionHash)[0],v.closingPrice,takerFee,futuresContract),gasFee);if(side==true){subReserve(baseToken,user,v.reserve,calculateCollateral(v.floorPrice,retrievePosition(positionHash)[1],retrievePosition(positionHash)[0],true,v.futuresContract));if(v.closingPrice>retrievePosition(positionHash)[1]){profit=calculateProfit(v.closingPrice,retrievePosition(positionHash)[1],retrievePosition(positionHash)[0],futuresContract,false);if(profit>fee){addBalance(baseToken,user,v.balance,safeSub(profit*1e10,fee*1e10));}else{subBalance(baseToken,user,v.balance,safeSub(fee*1e10,profit*1e10));}}else{loss=calculateLoss(v.closingPrice,retrievePosition(positionHash)[1],retrievePosition(positionHash)[0],futuresContract,false);subBalance(baseToken,user,v.balance,safeAdd(loss*1e10,fee*1e10));}}else{subReserve(baseToken,user,v.reserve,calculateCollateral(v.capPrice,retrievePosition(positionHash)[1],retrievePosition(positionHash)[0],false,v.futuresContract));if(v.closingPrice<retrievePosition(positionHash)[1]){profit=calculateProfit(v.closingPrice,retrievePosition(positionHash)[1],retrievePosition(positionHash)[0],futuresContract,true);if(profit>fee){addBalance(baseToken,user,v.balance,safeSub(profit*1e10,fee*1e10));}else{subBalance(baseToken,user,v.balance,safeSub(fee*1e10,profit*1e10));}}else{loss=calculateLoss(v.closingPrice,retrievePosition(positionHash)[1],retrievePosition(positionHash)[0],futuresContract,true);subBalance(baseToken,user,v.balance,safeAdd(loss*1e10,fee*1e10));}}addBalance(baseToken,feeAccount,EtherMium(exchangeContract).balanceOf(baseToken,feeAccount),fee*1e10);updatePositionSize(positionHash,0,0);emitFuturesPositionClosed(positionHash);}"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": 910067,
      "severity": 1,
      "line": 1889,
      "column": 4,
      "content": "functionbatchSettlePositions(bytes32[]futuresContracts,bool[]sides,address[]users,uint256gasFeePerClose)onlyAdmin{for(uinti=0;i<futuresContracts.length;i++){closeFuturesPositionForUser(futuresContracts[i],sides[i],users[i],gasFeePerClose);}}"
    }
  ]
}