/unique_chucks/28/0x5dd4cd8ec1fd73452be387e8abbc70d4d200478a.sol
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ERC20_APPROVE
patternId: af782c
severity: 2
line: 398
column: 4
content: functionapprove(address_spender,uint256_value)publicreturns(bool){allowed[msg.sender][_spender]=_value;emitApproval(msg.sender,_spender,_value);returntrue;}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 47acc2
severity: 1
line: 714
column: 4
content: functiondelegatedStake(uint256_amount)publicreturns(bool){require(StakingContract(tokenStakingContractAddress).stake(_amount),"staking must be successful");stakedTokensReceivable+=_amount;approvedTokensPayable-=_amount;}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 47acc2
severity: 1
line: 720
column: 4
content: functiondelegatedApproveSpender(address_address,uint256_amount)publicreturns(bool){require(StakeToken(token).approve(_address,_amount),"approval must be successful");approvedTokensPayable+=_amount;}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 47acc2
severity: 1
line: 827
column: 4
content: functionwithdrawTokens(address_user,uint256_amount)publicreturns(bool){uint256currentBalance=userTokenBalance[_user];require(_amount<=currentBalance,"Withdraw amount greater than current balance");uint256newBalance=currentBalance.sub(_amount);require(StakeToken(token).transfer(_user,_amount),"error during token transfer");userTokenBalance[_user]=newBalance;totalTokenBalance=SafeMath.sub(totalTokenBalance,_amount);emitTokenWithdrawal(_user,_amount);emitUserBalanceChange(_user,currentBalance,newBalance);}

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 24
column: 0
content: contractIUniverse{functioncreateYesNoMarket(uint256_endTime,uint256_feePerEthInWei,address_designatedReporterAddress,address_denominationToken,bytes32_topic,stringmemory_description,stringmemory_extraInfo)publicpayable;functionfork()publicreturns(bool);functiongetParentUniverse()publicviewreturns(IUniverse);functiongetChildUniverse(bytes32_parentPayoutDistributionHash)publicviewreturns(IUniverse);functiongetForkEndTime()publicviewreturns(uint256);functiongetForkReputationGoal()publicviewreturns(uint256);functiongetParentPayoutDistributionHash()publicviewreturns(bytes32);functiongetDisputeRoundDurationInSeconds()publicviewreturns(uint256);functiongetOpenInterestInAttoEth()publicviewreturns(uint256);functiongetRepMarketCapInAttoEth()publicviewreturns(uint256);functiongetTargetRepMarketCapInAttoEth()publicviewreturns(uint256);functiongetOrCacheValidityBond()publicreturns(uint256);functiongetOrCacheDesignatedReportStake()publicreturns(uint256);functiongetOrCacheDesignatedReportNoShowBond()publicreturns(uint256);functiongetOrCacheReportingFeeDivisor()publicreturns(uint256);functiongetDisputeThresholdForFork()publicviewreturns(uint256);functiongetDisputeThresholdForDisputePacing()publicviewreturns(uint256);functiongetInitialReportMinValue()publicviewreturns(uint256);functioncalculateFloatingValue(uint256_badMarkets,uint256_totalMarkets,uint256_targetDivisor,uint256_previousValue,uint256_defaultValue,uint256_floor)publicpurereturns(uint256_newValue);functiongetOrCacheMarketCreationCost()publicreturns(uint256);functionisParentOf(IUniverse_shadyChild)publicviewreturns(bool);functionupdateTentativeWinningChildUniverse(bytes32_parentPayoutDistributionHash)publicreturns(bool);functionaddMarketTo()publicreturns(bool);functionremoveMarketFrom()publicreturns(bool);functiondecrementOpenInterest(uint256_amount)publicreturns(bool);functiondecrementOpenInterestFromMarket(uint256_amount)publicreturns(bool);functionincrementOpenInterest(uint256_amount)publicreturns(bool);functionincrementOpenInterestFromMarket(uint256_amount)publicreturns(bool);functiongetWinningChildUniverse()publicviewreturns(IUniverse);functionisForking()publicviewreturns(bool);}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: ^

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 176
column: 8
content: if(_access<0||_access>4){revert("erroneous access level");}else{accessLevel[_user]=_access;}

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 292
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 501
column: 4
content: usingSafeMathfor*;

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 634
column: 4
content: usingSafeMathfor*;

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 808
column: 61
content: (uint256,uint256)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 812
column: 49
content: (uint256,uint256,uint256,uint256)

ruleId: SOLIDITY_UINT_CANT_BE_NEGATIVE
patternId: 733fdd
severity: 2
line: 97
column: 12
content: accessLevel[msg.sender]>=0

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 294
column: 4
content: mapping(address=>uint256)balances;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 296
column: 4
content: uint256totalSupply_;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 508
column: 4
content: StakeTokenstakingToken;

SOLIDITY_VISIBILITY :3
SOLIDITY_SAFEMATH :3
SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_REVERT_REQUIRE :1
SOLIDITY_LOCKED_MONEY :1
SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN :3
SOLIDITY_UINT_CANT_BE_NEGATIVE :1
SOLIDITY_SHOULD_RETURN_STRUCT :2
SOLIDITY_ERC20_APPROVE :1