/unique_contracts/0xbbf45465ce51e2e5a6bb858597dd0079b0809483.sol
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: adc165
severity: 1
line: 409
column: 17
content: 0x06C7B9Ce4f2Fee058DE2A79F75DEC55092C229Aa

ruleId: SOLIDITY_ERC20_APPROVE
patternId: af782c
severity: 2
line: 189
column: 4
content: functionapprove(addressspender,uint256value)publicreturns(bool){_approve(msg.sender,spender,value);returntrue;}

ruleId: SOLIDITY_ERC20_APPROVE
patternId: af782c
severity: 2
line: 326
column: 4
content: functionapprove(address_spender,uint256_value)publicwhenNotPausedreturns(bool){returnsuper.approve(_spender,_value);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 486
column: 8
content: for(uint256i=0;i<length;i++){frozenCheck(addressList[i]);require(amountList[i]>0,"The transfer amount cannot be 0");require(addressList[i]!=address(0),"Cannot transfer to the zero address");amount=amount.add(amountList[i]);_balances[addressList[i]]=_balances[addressList[i]].add(amountList[i]);emitTransfer(msg.sender,addressList[i],amountList[i]);}

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 396
column: 12
content: private

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 136
column: 4
content: usingSafeMathforuint256;

SOLIDITY_SAFEMATH :1
SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA :1
SOLIDITY_ADDRESS_HARDCODED :1
SOLIDITY_GAS_LIMIT_IN_LOOPS :1
SOLIDITY_ERC20_APPROVE :2