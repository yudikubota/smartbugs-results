/unique_chucks/28/0xd299daeb649919d64e1935f38169a016befefa6b.sol
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: c67a09
severity: 1
line: 34
column: 22
content: 0x0

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 55
column: 2
content: functiongetMaxContenders()constantreturns(uint){returnarraysize;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 59
column: 2
content: functiongetBettingPrice()constantreturns(uint){returnbettingprice;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 91
column: 2
content: functiongetDeveloperAddress()constantreturns(address){returndeveloper;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 96
column: 2
content: functiongetDeveloperFee()constantreturns(uint){uintdeveloperfee=this.balance/100;returndeveloperfee;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 102
column: 2
content: functiongetBalance()constantreturns(uint){returnthis.balance;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 107
column: 2
content: functiongetLotteryMoney()constantreturns(uint){uintdeveloperfee=getDeveloperFee();uintprize=(this.balance-developerfee)/(numwinners<1?1:numwinners);returnprize;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 122
column: 2
content: functiongetBettingStatus()constantreturns(uint,uint,uint,uint,uint){return((uint)(state),numguesses,getLotteryMoney(),this.balance,bettingprice);}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 70
column: 4
content: for(i=0;i<numguesses;i++){diff=(int)((int)(value)-(int)(guesses[i].guess));if(diff<0)diff=diff*-1;if(lastdiff>(uint)(diff)){guess=guesses[i].guess;lastdiff=(uint)(diff);}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 80
column: 4
content: for(i=0;i<numguesses;i++){diff=(int)((int)(value)-(int)(guesses[i].guess));if(diff<0)diff=diff*-1;if(lastdiff==uint(diff)){winnners[numwinners++].addr=guesses[i].addr;}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 151
column: 4
content: for(uinti=0;i<numwinners;i++){addresswinner=winnners[i].addr;winner.transfer(prize);SentPrizeToWinner(winner,prize,guess,_gameindex,lotterynumber,block.timestamp);}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 161
column: 4
content: for(i=0;i<stasticsarrayitems;i++){statistics[i]=0;}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: ^

ruleId: SOLIDITY_TRANSFER_IN_LOOP
patternId: 8jdj43
severity: 2
line: 151
column: 4
content: for(uinti=0;i<numwinners;i++){addresswinner=winnners[i].addr;winner.transfer(prize);SentPrizeToWinner(winner,prize,guess,_gameindex,lotterynumber,block.timestamp);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 38
column: 2
content: functionbet_various_v2(){if(developer==address(0)){developer=msg.sender;}}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 45
column: 2
content: functionsetBettingCondition(uint_contenders,uint_bettingprice){if(msg.sender!=developer)return;arraysize=_contenders;if(arraysize>1000)arraysize=1000;bettingprice=_bettingprice;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 55
column: 2
content: functiongetMaxContenders()constantreturns(uint){returnarraysize;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 59
column: 2
content: functiongetBettingPrice()constantreturns(uint){returnbettingprice;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 63
column: 2
content: functionfindWinners(uintvalue)returns(uint){numwinners=0;uintlastdiff=maxguess;uinti=0;intdiff=0;uintguess=0;for(i=0;i<numguesses;i++){diff=(int)((int)(value)-(int)(guesses[i].guess));if(diff<0)diff=diff*-1;if(lastdiff>(uint)(diff)){guess=guesses[i].guess;lastdiff=(uint)(diff);}}for(i=0;i<numguesses;i++){diff=(int)((int)(value)-(int)(guesses[i].guess));if(diff<0)diff=diff*-1;if(lastdiff==uint(diff)){winnners[numwinners++].addr=guesses[i].addr;}}returnguess;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 91
column: 2
content: functiongetDeveloperAddress()constantreturns(address){returndeveloper;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 96
column: 2
content: functiongetDeveloperFee()constantreturns(uint){uintdeveloperfee=this.balance/100;returndeveloperfee;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 102
column: 2
content: functiongetBalance()constantreturns(uint){returnthis.balance;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 107
column: 2
content: functiongetLotteryMoney()constantreturns(uint){uintdeveloperfee=getDeveloperFee();uintprize=(this.balance-developerfee)/(numwinners<1?1:numwinners);returnprize;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 114
column: 2
content: functiongetBettingStastics()payablereturns(uint[20]){require(msg.value==statusprice);returnstatistics;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 122
column: 2
content: functiongetBettingStatus()constantreturns(uint,uint,uint,uint,uint){return((uint)(state),numguesses,getLotteryMoney(),this.balance,bettingprice);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 129
column: 2
content: functionsetStatusPrice(uintvalue){if(msg.sender!=developer)return;statusprice=value;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 135
column: 2
content: functionfinish(){if(msg.sender!=developer)return;_finish();}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 168
column: 2
content: functionaddguess(uintguess)inState(State.Started)payable{require(msg.value==bettingprice);uintdivideby=maxguess/stasticsarrayitems;curhash=sha256(block.timestamp,block.coinbase,block.difficulty,curhash);if((uint)(numguesses+1)<=arraysize){guesses[numguesses++]=Guess(msg.sender,guess);uintstatindex=guess/divideby;if(statindex>=stasticsarrayitems)statindex=stasticsarrayitems-1;statistics[statindex]++;if((uint)(numguesses)>=arraysize){_finish();}}}

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 10
column: 2
content: uintarraysize=1000;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 11
column: 2
content: uintconstantmaxguess=1000000;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 12
column: 2
content: uintbettingprice=0.01ether;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 13
column: 2
content: uintstatusprice=0.01ether;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 14
column: 2
content: Guess[1000]guesses;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 15
column: 2
content: uintnumguesses=0;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 16
column: 2
content: bytes32curhash='';

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 18
column: 2
content: uintstasticsarrayitems=20;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 19
column: 2
content: uint[20]statistics;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 21
column: 2
content: uint_gameindex=1;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 26
column: 2
content: Winner[1000]winnners;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 27
column: 2
content: uintnumwinners=0;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 34
column: 2
content: addressdeveloper=0x0;

SOLIDITY_VISIBILITY :27
SOLIDITY_DEPRECATED_CONSTRUCTIONS :7
SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_EXTRA_GAS_IN_LOOPS :4
SOLIDITY_ADDRESS_HARDCODED :1
SOLIDITY_TRANSFER_IN_LOOP :1