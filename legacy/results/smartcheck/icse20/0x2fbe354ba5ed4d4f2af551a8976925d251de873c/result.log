/unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: adc165
severity: 1
line: 85
column: 22
content: 0x00000000000000000000000000000000000000f7

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: adc165
severity: 1
line: 86
column: 22
content: 0x00000000000000000000000000000000000000f8

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 103
column: 6
content: tokens[address(0)]

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 103
column: 47
content: tokens[address(0)]

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 187b5a
severity: 1
line: 134
column: 16
content: sha3

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 187b5a
severity: 1
line: 136
column: 16
content: sha3

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 187b5a
severity: 1
line: 163
column: 15
content: sha3

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 187b5a
severity: 1
line: 165
column: 18
content: sha3

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 187b5a
severity: 1
line: 173
column: 19
content: sha3

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 187b5a
severity: 1
line: 174
column: 18
content: sha3

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 49bd2a
severity: 1
line: 25
column: 20
content: throw

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 49bd2a
severity: 1
line: 98
column: 4
content: throw

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 49bd2a
severity: 1
line: 105
column: 26
content: throw

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 49bd2a
severity: 1
line: 107
column: 64
content: throw

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 49bd2a
severity: 1
line: 113
column: 44
content: throw

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 49bd2a
severity: 1
line: 116
column: 36
content: throw

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 49bd2a
severity: 1
line: 118
column: 54
content: throw

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 49bd2a
severity: 1
line: 141
column: 7
content: throw

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 49bd2a
severity: 1
line: 174
column: 87
content: throw

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 20
column: 2
content: functionfeeFor(addressfrom,addressto,uint256amount)constantexternalreturns(uint256value);

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 123
column: 2
content: functionbalanceOf(addresstoken,addressuser)constantreturns(uint256){returntokens[token][user];}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 162
column: 2
content: functiontestTrade(addresstokenBuy,uint256amountBuy,addresstokenSell,uint256amountSell,uint256expires,uint256nonce,addressuser,uint8v,bytes32r,bytes32s,uint256amount,addresssender)constantreturns(uint8code){testHash=sha3(this,tokenBuy,amountBuy,tokenSell,amountSell,expires,nonce,user);if(tokens[tokenBuy][sender]<amount)return1;if(ecrecover(sha3("\x19Ethereum Signed Message:\n32",testHash),v,r,s)!=user)return4;amountSelln=safeMul(amountSell,amount)/amountBuy;if(tokens[tokenSell][user]<amountSelln)return5;if(block.number>expires)return6;if(safeAdd(orderFills[testHash],amount)>amountBuy)return7;return0;}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 39
column: 2
content: functionsetOwner(addressnewOwner)onlyOwner{SetOwner(owner,newOwner);owner=newOwner;}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 89
column: 2
content: functionsetFeeAccount(addressfeeAccount_)onlyOwner{feeAccount=feeAccount_;}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 93
column: 2
content: functionsetDVIP(addressdvipAddress_)onlyOwner{dvipAddress=dvipAddress_;}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: ^

ruleId: SOLIDITY_REDUNDANT_FALLBACK_REJECT
patternId: b85a32
severity: 1
line: 97
column: 13
content: {throw;}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 25
column: 4
content: if(!assertion)throw;

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 105
column: 6
content: if(msg.value!=0)throw;

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 107
column: 6
content: if(!Token(token).transferFrom(msg.sender,this,amount))throw;

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 113
column: 4
content: if(tokens[token][msg.sender]<amount)throw;

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 116
column: 6
content: if(!msg.sender.send(amount))throw;

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 118
column: 6
content: if(!Token(token).transfer(msg.sender,amount))throw;

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 135
column: 4
content: if(!(ecrecover(sha3("\x19Ethereum Signed Message:\n32",tradeHash),v,r,s)==user&&block.number<=expires&&safeAdd(orderFills[tradeHash],amount)<=amountBuy&&tokens[tokenBuy][msg.sender]>=amount&&tokens[tokenSell][user]>=safeMul(amountSell,amount)/amountBuy))throw;

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 174
column: 4
content: if(ecrecover(sha3("\x19Ethereum Signed Message:\n32",hash),v,r,s)!=msg.sender)throw;

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 12
column: 4
content: functiontransfer(address_to,uint256_value)returns(boolsuccess);

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 13
column: 4
content: functionapproveAndCall(address_spender,uint256_value,bytes_extraData)returns(boolsuccess);

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 14
column: 4
content: functionapprove(address_spender,uint256_value)returns(boolsuccess);

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 15
column: 4
content: functiontransferFrom(address_from,address_to,uint256_value)returns(boolsuccess);

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 24
column: 2
content: functionassert(boolassertion){if(!assertion)throw;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 32
column: 2
content: functionOwned(){owner=msg.sender;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 39
column: 2
content: functionsetOwner(addressnewOwner)onlyOwner{SetOwner(owner,newOwner);owner=newOwner;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 43
column: 2
content: functiongetOwner()returns(addressout){returnowner;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 82
column: 2
content: functionExchange(addressfeeAccount_,addressdvipAddress_){feeAccount=feeAccount_;dvipAddress=dvipAddress_;feeMakeExporter=0x00000000000000000000000000000000000000f7;feeTakeExporter=0x00000000000000000000000000000000000000f8;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 89
column: 2
content: functionsetFeeAccount(addressfeeAccount_)onlyOwner{feeAccount=feeAccount_;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 93
column: 2
content: functionsetDVIP(addressdvipAddress_)onlyOwner{dvipAddress=dvipAddress_;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 97
column: 2
content: function(){throw;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 101
column: 2
content: functiondeposit(addresstoken,uint256amount)payable{if(token==address(0)){tokens[address(0)][msg.sender]=safeAdd(tokens[address(0)][msg.sender],msg.value);}else{if(msg.value!=0)throw;tokens[token][msg.sender]=safeAdd(tokens[token][msg.sender],amount);if(!Token(token).transferFrom(msg.sender,this,amount))throw;}Deposit(token,msg.sender,amount,tokens[token][msg.sender]);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 112
column: 2
content: functionwithdraw(addresstoken,uint256amount){if(tokens[token][msg.sender]<amount)throw;tokens[token][msg.sender]=safeSub(tokens[token][msg.sender],amount);if(token==address(0)){if(!msg.sender.send(amount))throw;}else{if(!Token(token).transfer(msg.sender,amount))throw;}Withdraw(token,msg.sender,amount,tokens[token][msg.sender]);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 123
column: 2
content: functionbalanceOf(addresstoken,addressuser)constantreturns(uint256){returntokens[token][user];}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 132
column: 2
content: functiontrade(addresstokenBuy,uint256amountBuy,addresstokenSell,uint256amountSell,uint256expires,uint256nonce,addressuser,uint8v,bytes32r,bytes32s,uint256amount){tradeHash=sha3(this,tokenBuy,amountBuy,tokenSell,amountSell,expires,nonce,user);if(!(ecrecover(sha3("\x19Ethereum Signed Message:\n32",tradeHash),v,r,s)==user&&block.number<=expires&&safeAdd(orderFills[tradeHash],amount)<=amountBuy&&tokens[tokenBuy][msg.sender]>=amount&&tokens[tokenSell][user]>=safeMul(amountSell,amount)/amountBuy))throw;feeMake=DVIP(dvipAddress).feeFor(feeMakeExporter,msg.sender,1ether);feeTake=DVIP(dvipAddress).feeFor(feeTakeExporter,user,1ether);tokens[tokenBuy][msg.sender]=safeSub(tokens[tokenBuy][msg.sender],amount);feeTerm=safeMul(amount,((1ether)-feeMake))/(1ether);tokens[tokenBuy][user]=safeAdd(tokens[tokenBuy][user],feeTerm);feeTerm=safeMul(amount,feeMake)/(1ether);tokens[tokenBuy][feeAccount]=safeAdd(tokens[tokenBuy][feeAccount],feeTerm);feeTerm=safeMul(amountSell,amount)/amountBuy;tokens[tokenSell][user]=safeSub(tokens[tokenSell][user],feeTerm);feeTerm=safeMul(safeMul(((1ether)-feeTake),amountSell),amount)/amountBuy/(1ether);tokens[tokenSell][msg.sender]=safeAdd(tokens[tokenSell][msg.sender],feeTerm);feeTerm=safeMul(safeMul(feeTake,amountSell),amount)/amountBuy/(1ether);tokens[tokenSell][feeAccount]=safeAdd(tokens[tokenSell][feeAccount],feeTerm);orderFills[tradeHash]=safeAdd(orderFills[tradeHash],amount);Trade(tokenBuy,amount,tokenSell,amountSell*amount/amountBuy,user,msg.sender,tradeHash);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 162
column: 2
content: functiontestTrade(addresstokenBuy,uint256amountBuy,addresstokenSell,uint256amountSell,uint256expires,uint256nonce,addressuser,uint8v,bytes32r,bytes32s,uint256amount,addresssender)constantreturns(uint8code){testHash=sha3(this,tokenBuy,amountBuy,tokenSell,amountSell,expires,nonce,user);if(tokens[tokenBuy][sender]<amount)return1;if(ecrecover(sha3("\x19Ethereum Signed Message:\n32",testHash),v,r,s)!=user)return4;amountSelln=safeMul(amountSell,amount)/amountBuy;if(tokens[tokenSell][user]<amountSelln)return5;if(block.number>expires)return6;if(safeAdd(orderFills[testHash],amount)>amountBuy)return7;return0;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 172
column: 2
content: functioncancelOrder(addresstokenBuy,uint256amountBuy,addresstokenSell,uint256amountSell,uint256expires,uint256nonce,uint8v,bytes32r,bytes32s,addressuser){bytes32hash=sha3(this,tokenBuy,amountBuy,tokenSell,amountSell,expires,nonce,user);if(ecrecover(sha3("\x19Ethereum Signed Message:\n32",hash),v,r,s)!=msg.sender)throw;orderFills[hash]=amountBuy;Cancel(tokenBuy,amountBuy,tokenSell,amountSell,expires,nonce,msg.sender,v,r,s);}

SOLIDITY_VISIBILITY :18
SOLIDITY_OVERPOWERED_ROLE :3
SOLIDITY_DEPRECATED_CONSTRUCTIONS :18
SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_REVERT_REQUIRE :8
SOLIDITY_ADDRESS_HARDCODED :4
SOLIDITY_REDUNDANT_FALLBACK_REJECT :1