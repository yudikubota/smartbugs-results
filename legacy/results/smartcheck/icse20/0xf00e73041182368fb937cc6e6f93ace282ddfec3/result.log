/unique_chucks/35/0xf00e73041182368fb937cc6e6f93ace282ddfec3.sol
line 785:12 extraneous input 'payable' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 791:31 mismatched input 'payable' expecting ')'
line 791:40 extraneous input ')' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 834:40 extraneous input 'payable' expecting {',', ')'}
line 834:55 no viable alternative at input 'creator)'
line 834:55 extraneous input ')' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 834:65 extraneous input '{' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 836:24 extraneous input '(' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 836:36 extraneous input ')' expecting {';', '='}
line 838:21 mismatched input '(' expecting {';', '='}
line 838:24 mismatched input ',' expecting ')'
line 838:33 mismatched input ',' expecting {';', '='}
line 838:56 extraneous input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 838:69 extraneous input ')' expecting {';', '='}
line 839:30 mismatched input '=' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 842:4 extraneous input 'function' expecting {<EOF>, 'pragma', 'import', 'contract', 'library', 'interface'}
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: adc165
severity: 1
line: 785
column: 45
content: 0x4d6cC9Dc492F2041B9eaFba4B63cA191DBA65BFc

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 93
column: 45
content: 0x150b7a02

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 134
column: 48
content: 0x80ac58cd

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 148
column: 54
content: 0x4f558e79

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 154
column: 58
content: 0x780e9d63

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 162
column: 56
content: 0x5b5e139f

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 213
column: 46
content: 0x01ffc9a7

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 251
column: 28
content: 0xffffffff

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 263
column: 44
content: 0x150b7a02

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 503
column: 6
content: tokenApprovals[_tokenId]=address(0)

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 526
column: 4
content: tokenOwner[_tokenId]=address(0)

ruleId: SOLIDITY_ARRAY_LENGTH_MANIPULATION
patternId: 872bdd
severity: 1
line: 724
column: 4
content: ownedTokens[_from].length--

ruleId: SOLIDITY_ARRAY_LENGTH_MANIPULATION
patternId: 872bdd
severity: 1
line: 769
column: 4
content: allTokens.length--

ruleId: SOLIDITY_DIV_MUL
patternId: 09hhh1
severity: 2
line: 802
column: 15
content: PRECISION.div(2).mul(t**2)

ruleId: SOLIDITY_DIV_MUL
patternId: 09hhh1
severity: 2
line: 810
column: 15
content: poolBalance[id].mul(numTokens.div(totalSupply_[id]))

ruleId: SOLIDITY_ERC20_APPROVE
patternId: af782c
severity: 2
line: 324
column: 2
content: functionapprove(address_to,uint256_tokenId)public{addressowner=ownerOf(_tokenId);require(_to!=owner);require(msg.sender==owner||isApprovedForAll(owner,msg.sender));tokenApprovals[_tokenId]=_to;emitApproval(owner,_to,_tokenId);}

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 776
column: 0
content: contractWeMemeisERC721Token{eventMemed(uint256id,uint256amount,uint256totalCost,stringcontent);eventRewarded(uint256id,addresscreator,uint256amount,uint256reward);usingSafeMathforuint256;uint256publictopId;uint256constantprivatePRECISION=10000000000;addresspayableconstantpublicwememe=0x4d6cC9Dc492F2041B9eaFba4B63cA191DBA65BFc;mapping(uint256=>uint256)publictotalSupply_;mapping(uint256=>uint256)publicpoolBalance;mapping(uint256=>mapping(address=>uint256))publicbalances;mapping(uint256=>uint256)publicnum;mapping(uint256=>string)publiccontent;mapping(uint256=>addresspayable[])publiccreators;constructor()public{name_="wememe";symbol_="MEME";}functioncurveIntegral(uint256t)internalreturns(uint256){returnPRECISION.div(2).mul(t**2).div(PRECISION);}functionpriceToMint(uint256id,uint256numTokens)publicreturns(uint256){returncurveIntegral(totalSupply_[id].add(numTokens)).sub(poolBalance[id]);}functionrewardForBurn(uint256id,uint256numTokens)publicreturns(uint256){returnpoolBalance[id].mul(numTokens.div(totalSupply_[id]));}functionmeme(uint256id,uint256numTokens,stringmemory_content)publicpayable{if(id==topId){topId=topId+1;}require(id<topId);require(num[id]<3);uint256priceForTokens=priceToMint(id,numTokens);require(msg.value>=priceForTokens);totalSupply_[id]=totalSupply_[id].add(numTokens);balances[id][msg.sender]=balances[id][msg.sender].add(numTokens);poolBalance[id]=poolBalance[id].add(msg.value);num[id]=num[id]+1;content[id]=_content;creators[id].push(msg.sender);emitMemed(id,numTokens,priceForTokens,_content);}functionreward(uint256id,address<missing ')'>payablecreator)private{<missing ';'>uint256ethToReturn=rewardForBurn(id,balances[id][creator]);creator.transfer(ethToReturn);emitRewarded(id,creator,balances[id][creator],ethToReturn);balances[id][creator]=0;}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: >=

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 25
content: <

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 263
column: 9
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 784
column: 21
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 834
column: 57
content: private

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 258
column: 2
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 781
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SHOULD_NOT_BE_VIEW
patternId: 189abf
severity: 1
line: 72
column: 2
content: functionisContract(address_addr)internalviewreturns(bool){uint256size;assembly{size:=extcodesize(_addr)}returnsize>0;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 834
column: 4
content: functionreward(uint256id,address<missing ')'>payable

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 835
column: 8
content: uint256ethToReturn=rewardForBurn(id,balances[id][creator]);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 836
column: 8
content: creator.transfer(ethToReturn);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 838
column: 8
content: emitRewarded

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 838
column: 21
content: (id,creator,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 838
column: 35
content: balances[id][creator],ethToReturn);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 839
column: 8
content: balances[id][creator]=0;

SOLIDITY_VISIBILITY :7
SOLIDITY_SAFEMATH :2
SOLIDITY_PRAGMAS_VERSION :2
SOLIDITY_ARRAY_LENGTH_MANIPULATION :2
SOLIDITY_LOCKED_MONEY :1
SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA :3
SOLIDITY_ADDRESS_HARDCODED :11
SOLIDITY_DIV_MUL :2
SOLIDITY_SHOULD_NOT_BE_VIEW :1
SOLIDITY_ERC20_APPROVE :1