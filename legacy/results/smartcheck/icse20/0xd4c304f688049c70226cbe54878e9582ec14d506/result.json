{
  "contract": "0xd4c304f688049c70226cbe54878e9582ec14d506",
  "tool": "smartcheck",
  "start": 1563636590.309062,
  "end": 1563636604.554132,
  "duration": 14.245069980621338,
  "analysis": [
    {
      "name": "SOLIDITY_ADDRESS_HARDCODED",
      "patternId": "b140cd",
      "severity": 1,
      "line": 346,
      "column": 19,
      "content": "0xffffffffffffffffffffffffffffffff"
    },
    {
      "name": "SOLIDITY_ADDRESS_HARDCODED",
      "patternId": "b140cd",
      "severity": 1,
      "line": 348,
      "column": 40,
      "content": "0x100000000000000000000000000000000"
    },
    {
      "name": "SOLIDITY_ADDRESS_HARDCODED",
      "patternId": "b140cd",
      "severity": 1,
      "line": 350,
      "column": 19,
      "content": "0xffffffffffffffff"
    },
    {
      "name": "SOLIDITY_ADDRESS_HARDCODED",
      "patternId": "b140cd",
      "severity": 1,
      "line": 352,
      "column": 40,
      "content": "0x10000000000000000"
    },
    {
      "name": "SOLIDITY_ADDRESS_HARDCODED",
      "patternId": "b140cd",
      "severity": 1,
      "line": 354,
      "column": 19,
      "content": "0xffffffff"
    },
    {
      "name": "SOLIDITY_ADDRESS_HARDCODED",
      "patternId": "b140cd",
      "severity": 1,
      "line": 356,
      "column": 40,
      "content": "0x100000000"
    },
    {
      "name": "SOLIDITY_ADDRESS_HARDCODED",
      "patternId": "b140cd",
      "severity": 1,
      "line": 358,
      "column": 19,
      "content": "0xffff"
    },
    {
      "name": "SOLIDITY_ADDRESS_HARDCODED",
      "patternId": "b140cd",
      "severity": 1,
      "line": 360,
      "column": 40,
      "content": "0x10000"
    },
    {
      "name": "SOLIDITY_ADDRESS_HARDCODED",
      "patternId": "b140cd",
      "severity": 1,
      "line": 362,
      "column": 19,
      "content": "0xff"
    },
    {
      "name": "SOLIDITY_ADDRESS_HARDCODED",
      "patternId": "b140cd",
      "severity": 1,
      "line": 424,
      "column": 20,
      "content": "0x80"
    },
    {
      "name": "SOLIDITY_ADDRESS_HARDCODED",
      "patternId": "b140cd",
      "severity": 1,
      "line": 426,
      "column": 26,
      "content": "0xE0"
    },
    {
      "name": "SOLIDITY_ADDRESS_HARDCODED",
      "patternId": "b140cd",
      "severity": 1,
      "line": 428,
      "column": 26,
      "content": "0xF0"
    },
    {
      "name": "SOLIDITY_ADDRESS_HARDCODED",
      "patternId": "b140cd",
      "severity": 1,
      "line": 430,
      "column": 26,
      "content": "0xF8"
    },
    {
      "name": "SOLIDITY_ADDRESS_HARDCODED",
      "patternId": "b140cd",
      "severity": 1,
      "line": 432,
      "column": 26,
      "content": "0xFC"
    },
    {
      "name": "SOLIDITY_ADDRESS_HARDCODED",
      "patternId": "b140cd",
      "severity": 1,
      "line": 517,
      "column": 16,
      "content": "0x80"
    },
    {
      "name": "SOLIDITY_ADDRESS_HARDCODED",
      "patternId": "b140cd",
      "severity": 1,
      "line": 519,
      "column": 22,
      "content": "0xE0"
    },
    {
      "name": "SOLIDITY_ADDRESS_HARDCODED",
      "patternId": "b140cd",
      "severity": 1,
      "line": 521,
      "column": 22,
      "content": "0xF0"
    },
    {
      "name": "SOLIDITY_ADDRESS_HARDCODED",
      "patternId": "b140cd",
      "severity": 1,
      "line": 568,
      "column": 16,
      "content": "0x80"
    },
    {
      "name": "SOLIDITY_ADDRESS_HARDCODED",
      "patternId": "b140cd",
      "severity": 1,
      "line": 571,
      "column": 22,
      "content": "0xE0"
    },
    {
      "name": "SOLIDITY_ADDRESS_HARDCODED",
      "patternId": "b140cd",
      "severity": 1,
      "line": 572,
      "column": 22,
      "content": "0x1F"
    },
    {
      "name": "SOLIDITY_ADDRESS_HARDCODED",
      "patternId": "b140cd",
      "severity": 1,
      "line": 574,
      "column": 22,
      "content": "0xF0"
    },
    {
      "name": "SOLIDITY_ADDRESS_HARDCODED",
      "patternId": "b140cd",
      "severity": 1,
      "line": 575,
      "column": 22,
      "content": "0x0F"
    },
    {
      "name": "SOLIDITY_ADDRESS_HARDCODED",
      "patternId": "b140cd",
      "severity": 1,
      "line": 578,
      "column": 22,
      "content": "0x07"
    },
    {
      "name": "SOLIDITY_ADDRESS_HARDCODED",
      "patternId": "b140cd",
      "severity": 1,
      "line": 589,
      "column": 35,
      "content": "0xFF"
    },
    {
      "name": "SOLIDITY_ADDRESS_HARDCODED",
      "patternId": "b140cd",
      "severity": 1,
      "line": 590,
      "column": 20,
      "content": "0xC0"
    },
    {
      "name": "SOLIDITY_ADDRESS_HARDCODED",
      "patternId": "b140cd",
      "severity": 1,
      "line": 590,
      "column": 28,
      "content": "0x80"
    },
    {
      "name": "SOLIDITY_ADDRESS_HARDCODED",
      "patternId": "b140cd",
      "severity": 1,
      "line": 594,
      "column": 36,
      "content": "0x3F"
    },
    {
      "name": "SOLIDITY_ADDRESS_HARDCODED",
      "patternId": "a91b18",
      "severity": 1,
      "line": 240,
      "column": 4,
      "content": "owner=address(0)"
    },
    {
      "name": "SOLIDITY_DEPRECATED_CONSTRUCTIONS",
      "patternId": "187b5a",
      "severity": 1,
      "line": 654,
      "column": 28,
      "content": "sha3"
    },
    {
      "name": "SOLIDITY_DEPRECATED_CONSTRUCTIONS",
      "patternId": "187b5a",
      "severity": 1,
      "line": 654,
      "column": 51,
      "content": "sha3"
    },
    {
      "name": "SOLIDITY_DEPRECATED_CONSTRUCTIONS",
      "patternId": "187b5a",
      "severity": 1,
      "line": 751,
      "column": 35,
      "content": "sha3"
    },
    {
      "name": "SOLIDITY_DEPRECATED_CONSTRUCTIONS",
      "patternId": "187b5a",
      "severity": 1,
      "line": 755,
      "column": 43,
      "content": "sha3"
    },
    {
      "name": "SOLIDITY_DEPRECATED_CONSTRUCTIONS",
      "patternId": "187b5a",
      "severity": 1,
      "line": 791,
      "column": 35,
      "content": "sha3"
    },
    {
      "name": "SOLIDITY_DEPRECATED_CONSTRUCTIONS",
      "patternId": "187b5a",
      "severity": 1,
      "line": 795,
      "column": 43,
      "content": "sha3"
    },
    {
      "name": "SOLIDITY_ERC20_APPROVE",
      "patternId": "af782c",
      "severity": 2,
      "line": 126,
      "column": 2,
      "content": "functionapprove(address_spender,uint256_value)publicreturns(bool){allowed[msg.sender][_spender]=_value;emitApproval(msg.sender,_spender,_value);returntrue;}"
    },
    {
      "name": "SOLIDITY_EXTRA_GAS_IN_LOOPS",
      "patternId": "d3j11j",
      "severity": 1,
      "line": 960,
      "column": 8,
      "content": "for(uinti=0;i<parts.length;i++)length+=parts[i]._len;"
    },
    {
      "name": "SOLIDITY_EXTRA_GAS_IN_LOOPS",
      "patternId": "d3j11j",
      "severity": 1,
      "line": 967,
      "column": 8,
      "content": "for(i=0;i<parts.length;i++){memcpy(retptr,parts[i]._ptr,parts[i]._len);retptr+=parts[i]._len;if(i<parts.length-1){memcpy(retptr,self._ptr,self._len);retptr+=self._len;}}"
    },
    {
      "name": "SOLIDITY_EXTRA_GAS_IN_LOOPS",
      "patternId": "d3j11j",
      "severity": 1,
      "line": 1155,
      "column": 2,
      "content": "for(uinti=0;i<bresult.length;i++){if((bresult[i]>=48)&&(bresult[i]<=57)){if(decim){if(_b==0)break;else_b--;}mint*=10;mint+=uint(bresult[i])-48;}elseif(bresult[i]==46)decim=true;}"
    },
    {
      "name": "SOLIDITY_EXTRA_GAS_IN_LOOPS",
      "patternId": "d3j11j",
      "severity": 1,
      "line": 1387,
      "column": 2,
      "content": "for(uint256i=0;i<nextGroupNumber;i++){if(groups[i].unlocked){balance=balance.add(theMember.tokenBalance[i]);}}"
    },
    {
      "name": "SOLIDITY_EXTRA_GAS_IN_LOOPS",
      "patternId": "d3j11j",
      "severity": 1,
      "line": 1437,
      "column": 3,
      "content": "for(uint256j=0;j<nextGroupNumber;j++){uint256memberBalance=currentMember.tokenBalance[j];uint256multiplier=memberBalance.mul(splitFactor);currentMember.tokenBalance[j]=multiplier;}"
    },
    {
      "name": "SOLIDITY_EXTRA_GAS_IN_LOOPS",
      "patternId": "d3j11j",
      "severity": 1,
      "line": 1468,
      "column": 3,
      "content": "for(uint256j=0;j<nextGroupNumber;j++){uint256memberBalance=currentMember.tokenBalance[j];uint256divier=memberBalance.div(splitFactor);currentMember.tokenBalance[j]=divier;}"
    },
    {
      "name": "SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN",
      "patternId": "58bdd3",
      "severity": 1,
      "line": 547,
      "column": 4,
      "content": "functionnextRune(sliceself)internalpurereturns(sliceret){nextRune(self,ret);}"
    },
    {
      "name": "SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN",
      "patternId": "58bdd3",
      "severity": 1,
      "line": 605,
      "column": 4,
      "content": "functionkeccak(sliceself)internalpurereturns(bytes32ret){assembly{ret:=keccak256(mload(add(self,32)),mload(self))}}"
    },
    {
      "name": "SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN",
      "patternId": "58bdd3",
      "severity": 1,
      "line": 867,
      "column": 4,
      "content": "functionsplit(sliceself,sliceneedle)internalpurereturns(slicetoken){split(self,needle,token);}"
    },
    {
      "name": "SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN",
      "patternId": "58bdd3",
      "severity": 1,
      "line": 903,
      "column": 4,
      "content": "functionrsplit(sliceself,sliceneedle)internalpurereturns(slicetoken){rsplit(self,needle,token);}"
    },
    {
      "name": "SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN",
      "patternId": "58bdd3",
      "severity": 1,
      "line": 913,
      "column": 4,
      "content": "functioncount(sliceself,sliceneedle)internalpurereturns(uintcnt){uintptr=findPtr(self._len,self._ptr,needle._len,needle._ptr)+needle._len;while(ptr<=self._ptr+self._len){cnt++;ptr=findPtr(self._len-(ptr-self._ptr),ptr,needle._len,needle._ptr)+needle._len;}}"
    },
    {
      "name": "SOLIDITY_GAS_LIMIT_IN_LOOPS",
      "patternId": "f6f853",
      "severity": 2,
      "line": 960,
      "column": 8,
      "content": "for(uinti=0;i<parts.length;i++)length+=parts[i]._len;"
    },
    {
      "name": "SOLIDITY_GAS_LIMIT_IN_LOOPS",
      "patternId": "f6f853",
      "severity": 2,
      "line": 967,
      "column": 8,
      "content": "for(i=0;i<parts.length;i++){memcpy(retptr,parts[i]._ptr,parts[i]._len);retptr+=parts[i]._len;if(i<parts.length-1){memcpy(retptr,self._ptr,self._len);retptr+=self._len;}}"
    },
    {
      "name": "SOLIDITY_GAS_LIMIT_IN_LOOPS",
      "patternId": "f6f853",
      "severity": 2,
      "line": 1155,
      "column": 2,
      "content": "for(uinti=0;i<bresult.length;i++){if((bresult[i]>=48)&&(bresult[i]<=57)){if(decim){if(_b==0)break;else_b--;}mint*=10;mint+=uint(bresult[i])-48;}elseif(bresult[i]==46)decim=true;}"
    },
    {
      "name": "SOLIDITY_GAS_LIMIT_IN_LOOPS",
      "patternId": "f6f853",
      "severity": 2,
      "line": 1432,
      "column": 2,
      "content": "for(uint256i=0;i<n;i++){MemberstoragecurrentMember=members[allMembers[i]];currentMember.transferred=currentMember.transferred*int(splitFactor);for(uint256j=0;j<nextGroupNumber;j++){uint256memberBalance=currentMember.tokenBalance[j];uint256multiplier=memberBalance.mul(splitFactor);currentMember.tokenBalance[j]=multiplier;}}"
    },
    {
      "name": "SOLIDITY_GAS_LIMIT_IN_LOOPS",
      "patternId": "f6f853",
      "severity": 2,
      "line": 1446,
      "column": 2,
      "content": "for(i=0;i<n;i++){GroupstoragecurrentGroup=groups[i];currentGroup.ratio=currentGroup.ratio.mul(splitFactor);}"
    },
    {
      "name": "SOLIDITY_GAS_LIMIT_IN_LOOPS",
      "patternId": "f6f853",
      "severity": 2,
      "line": 1464,
      "column": 2,
      "content": "for(uint256i=0;i<n;i++){MemberstoragecurrentMember=members[allMembers[i]];currentMember.transferred=currentMember.transferred/int(splitFactor);for(uint256j=0;j<nextGroupNumber;j++){uint256memberBalance=currentMember.tokenBalance[j];uint256divier=memberBalance.div(splitFactor);currentMember.tokenBalance[j]=divier;}}"
    },
    {
      "name": "SOLIDITY_GAS_LIMIT_IN_LOOPS",
      "patternId": "f6f853",
      "severity": 2,
      "line": 1477,
      "column": 2,
      "content": "for(i=0;i<n;i++){GroupstoragecurrentGroup=groups[i];currentGroup.ratio=currentGroup.ratio.div(splitFactor);}"
    },
    {
      "name": "SOLIDITY_GAS_LIMIT_IN_LOOPS",
      "patternId": "f6f853",
      "severity": 2,
      "line": 1488,
      "column": 2,
      "content": "for(uint256i=0;i<n;i++){addresscurrentMember=allMembers[i];uint256memberBalance=balances[currentMember];if(memberBalance>0){uint256multiplier1=memberBalance.mul(splitFactor);uint256increaseMemberSupplyBy=multiplier1.sub(memberBalance);balances[currentMember]=multiplier1;emitTransfer(address(0),currentMember,increaseMemberSupplyBy);}}"
    },
    {
      "name": "SOLIDITY_GAS_LIMIT_IN_LOOPS",
      "patternId": "f6f853",
      "severity": 2,
      "line": 1499,
      "column": 2,
      "content": "for(i=0;i<n;i++){addresscurrentNonMember=allNonMembers[i];if(members[currentNonMember].exists){continue;}uint256nonMemberBalance=balances[currentNonMember];if(nonMemberBalance>0){uint256multiplier2=nonMemberBalance.mul(splitFactor);uint256increaseNonMemberSupplyBy=multiplier2.sub(nonMemberBalance);balances[currentNonMember]=multiplier2;emitTransfer(address(0),currentNonMember,increaseNonMemberSupplyBy);}}"
    },
    {
      "name": "SOLIDITY_GAS_LIMIT_IN_LOOPS",
      "patternId": "f6f853",
      "severity": 2,
      "line": 1520,
      "column": 2,
      "content": "for(uint256i=0;i<n;i++){addresscurrentMember=allMembers[i];uint256memberBalance=balances[currentMember];if(memberBalance>0){uint256divier1=memberBalance.div(splitFactor);uint256decreaseMemberSupplyBy=memberBalance.sub(divier1);balances[currentMember]=divier1;emitTransfer(currentMember,address(0),decreaseMemberSupplyBy);}}"
    },
    {
      "name": "SOLIDITY_GAS_LIMIT_IN_LOOPS",
      "patternId": "f6f853",
      "severity": 2,
      "line": 1531,
      "column": 2,
      "content": "for(i=0;i<n;i++){addresscurrentNonMember=allNonMembers[i];if(members[currentNonMember].exists){continue;}uint256nonMemberBalance=balances[currentNonMember];if(nonMemberBalance>0){uint256divier2=nonMemberBalance.div(splitFactor);uint256decreaseNonMemberSupplyBy=nonMemberBalance.sub(divier2);balances[currentNonMember]=divier2;emitTransfer(currentNonMember,address(0),decreaseNonMemberSupplyBy);}}"
    },
    {
      "name": "SOLIDITY_GAS_LIMIT_IN_LOOPS",
      "patternId": "17f23a",
      "severity": 1,
      "line": 741,
      "column": 23,
      "content": "ptrdata!=needledata"
    },
    {
      "name": "SOLIDITY_GAS_LIMIT_IN_LOOPS",
      "patternId": "17f23a",
      "severity": 1,
      "line": 781,
      "column": 23,
      "content": "ptrdata!=needledata"
    },
    {
      "name": "SOLIDITY_GAS_LIMIT_IN_LOOPS",
      "patternId": "17f23a",
      "severity": 1,
      "line": 793,
      "column": 23,
      "content": "ptr>=selfptr"
    },
    {
      "name": "SOLIDITY_GAS_LIMIT_IN_LOOPS",
      "patternId": "17f23a",
      "severity": 1,
      "line": 915,
      "column": 15,
      "content": "ptr<=self._ptr+self._len"
    },
    {
      "name": "SOLIDITY_GAS_LIMIT_IN_LOOPS",
      "patternId": "38f6c7",
      "severity": 2,
      "line": 1338,
      "column": 2,
      "content": "while(!uploadedSlice.empty()){nextRecord=uploadedSlice.split(recordSeparator);nextDatum=nextRecord.split(datumSeparator);addressmemberAddress=parseAddr(nextDatum.toString());nextDatum=nextRecord.split(datumSeparator);uint256memberGroup=parseInt(nextDatum.toString(),0);nextDatum=nextRecord.split(datumSeparator);uint256memberTokens=parseInt(nextDatum.toString(),0);nextDatum=nextRecord.split(datumSeparator);uint256memberMaxContribution1=parseInt(nextDatum.toString(),0);addMember(memberAddress,memberGroup,memberTokens,memberMaxContribution1);}"
    },
    {
      "name": "SOLIDITY_OVERPOWERED_ROLE",
      "patternId": "j83hf7",
      "severity": 2,
      "line": 1128,
      "column": 1,
      "content": "functionsetMaximumGasPrice(uint256gweiPrice)publiconlyOwnerreturns(boolsuccess){maxGasPrice=gweiPrice.mul(10**9);returntrue;}"
    },
    {
      "name": "SOLIDITY_OVERPOWERED_ROLE",
      "patternId": "j83hf7",
      "severity": 2,
      "line": 1233,
      "column": 1,
      "content": "functionsetSellPrice(uint256thePrice)publiconlyOwner{sellPrice=thePrice;emitSetSellPrice(sellPrice);}"
    },
    {
      "name": "SOLIDITY_OVERPOWERED_ROLE",
      "patternId": "j83hf7",
      "severity": 2,
      "line": 1238,
      "column": 1,
      "content": "functionsetAllowedToSell(boolvalue)publiconlyOwner{allowedToSell=value;emitChangedAllowedToSell(allowedToSell);}"
    },
    {
      "name": "SOLIDITY_OVERPOWERED_ROLE",
      "patternId": "j83hf7",
      "severity": 2,
      "line": 1243,
      "column": 1,
      "content": "functionsetAllowedToPurchase(boolvalue)publiconlyOwner{allowedToPurchase=value;emitChangedAllowedToPurchase(allowedToPurchase);}"
    },
    {
      "name": "SOLIDITY_OVERPOWERED_ROLE",
      "patternId": "j83hf7",
      "severity": 2,
      "line": 1411,
      "column": 1,
      "content": "functionsetTransferLock(boolvalue)publiconlyOwner{transferLock=value;emitChangedTransferLock(transferLock);}"
    },
    {
      "name": "SOLIDITY_OVERPOWERED_ROLE",
      "patternId": "j83hf7",
      "severity": 2,
      "line": 1620,
      "column": 1,
      "content": "functionsetOpenGroup(uint256groupNumber)publiconlyOwnerreturns(boolsuccess){require(groupNumber<nextGroupNumber);openGroupNumber=groupNumber;returntrue;}"
    },
    {
      "name": "SOLIDITY_SAFEMATH",
      "patternId": "837cac",
      "severity": 1,
      "line": 20,
      "column": 2,
      "content": "usingSafeMathforuint256;"
    },
    {
      "name": "SOLIDITY_SAFEMATH",
      "patternId": "837cac",
      "severity": 1,
      "line": 1036,
      "column": 1,
      "content": "usingSafeMathforuint256;"
    },
    {
      "name": "SOLIDITY_SHOULD_NOT_BE_PURE",
      "patternId": "11314f",
      "severity": 1,
      "line": 305,
      "column": 4,
      "content": "functionmemcpy(uintdest,uintsrc,uintlen)privatepure{for(;len>=32;len-=32){assembly{mstore(dest,mload(src))}dest+=32;src+=32;}uintmask=256**(32-len)-1;assembly{letsrcpart:=and(mload(src),not(mask))letdestpart:=and(mload(dest),mask)mstore(dest,or(destpart,srcpart))}}"
    },
    {
      "name": "SOLIDITY_SHOULD_NOT_BE_PURE",
      "patternId": "11314f",
      "severity": 1,
      "line": 329,
      "column": 4,
      "content": "functiontoSlice(stringself)internalpurereturns(slice){uintptr;assembly{ptr:=add(self,0x20)}returnslice(bytes(self).length,ptr);}"
    },
    {
      "name": "SOLIDITY_SHOULD_NOT_BE_PURE",
      "patternId": "11314f",
      "severity": 1,
      "line": 375,
      "column": 4,
      "content": "functiontoSliceB32(bytes32self)internalpurereturns(sliceret){assembly{letptr:=mload(0x40)mstore(0x40,add(ptr,0x20))mstore(ptr,self)mstore(add(ret,0x20),ptr)}ret._len=len(self);}"
    },
    {
      "name": "SOLIDITY_SHOULD_NOT_BE_PURE",
      "patternId": "11314f",
      "severity": 1,
      "line": 400,
      "column": 4,
      "content": "functiontoString(sliceself)internalpurereturns(string){stringmemoryret=newstring(self._len);uintretptr;assembly{retptr:=add(ret,32)}memcpy(retptr,self._ptr,self._len);returnret;}"
    },
    {
      "name": "SOLIDITY_SHOULD_NOT_BE_PURE",
      "patternId": "11314f",
      "severity": 1,
      "line": 417,
      "column": 4,
      "content": "functionlen(sliceself)internalpurereturns(uintl){uintptr=self._ptr-31;uintend=ptr+self._len;for(l=0;ptr<end;l++){uint8b;assembly{b:=and(mload(ptr),0xFF)}if(b<0x80){ptr+=1;}elseif(b<0xE0){ptr+=2;}elseif(b<0xF0){ptr+=3;}elseif(b<0xF8){ptr+=4;}elseif(b<0xFC){ptr+=5;}else{ptr+=6;}}}"
    },
    {
      "name": "SOLIDITY_SHOULD_NOT_BE_PURE",
      "patternId": "11314f",
      "severity": 1,
      "line": 458,
      "column": 4,
      "content": "functioncompare(sliceself,sliceother)internalpurereturns(int){uintshortest=self._len;if(other._len<self._len)shortest=other._len;uintselfptr=self._ptr;uintotherptr=other._ptr;for(uintidx=0;idx<shortest;idx+=32){uinta;uintb;assembly{a:=mload(selfptr)b:=mload(otherptr)}if(a!=b){uint256mask=uint256(-1);if(shortest<32){mask=~(2**(8*(32-shortest+idx))-1);}uint256diff=(a&mask)-(b&mask);if(diff!=0)returnint(diff);}selfptr+=32;otherptr+=32;}returnint(self._len)-int(other._len);}"
    },
    {
      "name": "SOLIDITY_SHOULD_NOT_BE_PURE",
      "patternId": "11314f",
      "severity": 1,
      "line": 505,
      "column": 4,
      "content": "functionnextRune(sliceself,slicerune)internalpurereturns(slice){rune._ptr=self._ptr;if(self._len==0){rune._len=0;returnrune;}uintl;uintb;assembly{b:=and(mload(sub(mload(add(self,32)),31)),0xFF)}if(b<0x80){l=1;}elseif(b<0xE0){l=2;}elseif(b<0xF0){l=3;}else{l=4;}if(l>self._len){rune._len=self._len;self._ptr+=self._len;self._len=0;returnrune;}self._ptr+=l;self._len-=l;rune._len=l;returnrune;}"
    },
    {
      "name": "SOLIDITY_SHOULD_NOT_BE_PURE",
      "patternId": "11314f",
      "severity": 1,
      "line": 556,
      "column": 4,
      "content": "functionord(sliceself)internalpurereturns(uintret){if(self._len==0){return0;}uintword;uintlength;uintdivisor=2**248;assembly{word:=mload(mload(add(self,32)))}uintb=word/divisor;if(b<0x80){ret=b;length=1;}elseif(b<0xE0){ret=b&0x1F;length=2;}elseif(b<0xF0){ret=b&0x0F;length=3;}else{ret=b&0x07;length=4;}if(length>self._len){return0;}for(uinti=1;i<length;i++){divisor=divisor/256;b=(word/divisor)&0xFF;if(b&0xC0!=0x80){return0;}ret=(ret*64)|(b&0x3F);}returnret;}"
    },
    {
      "name": "SOLIDITY_SHOULD_NOT_BE_PURE",
      "patternId": "11314f",
      "severity": 1,
      "line": 605,
      "column": 4,
      "content": "functionkeccak(sliceself)internalpurereturns(bytes32ret){assembly{ret:=keccak256(mload(add(self,32)),mload(self))}}"
    },
    {
      "name": "SOLIDITY_SHOULD_NOT_BE_PURE",
      "patternId": "11314f",
      "severity": 1,
      "line": 617,
      "column": 4,
      "content": "functionstartsWith(sliceself,sliceneedle)internalpurereturns(bool){if(self._len<needle._len){returnfalse;}if(self._ptr==needle._ptr){returntrue;}boolequal;assembly{letlength:=mload(needle)letselfptr:=mload(add(self,0x20))letneedleptr:=mload(add(needle,0x20))equal:=eq(keccak256(selfptr,length),keccak256(needleptr,length))}returnequal;}"
    },
    {
      "name": "SOLIDITY_SHOULD_NOT_BE_PURE",
      "patternId": "11314f",
      "severity": 1,
      "line": 643,
      "column": 4,
      "content": "functionbeyond(sliceself,sliceneedle)internalpurereturns(slice){if(self._len<needle._len){returnself;}boolequal=true;if(self._ptr!=needle._ptr){assembly{letlength:=mload(needle)letselfptr:=mload(add(self,0x20))letneedleptr:=mload(add(needle,0x20))equal:=eq(sha3(selfptr,length),sha3(needleptr,length))}}if(equal){self._len-=needle._len;self._ptr+=needle._len;}returnself;}"
    },
    {
      "name": "SOLIDITY_SHOULD_NOT_BE_PURE",
      "patternId": "11314f",
      "severity": 1,
      "line": 672,
      "column": 4,
      "content": "functionendsWith(sliceself,sliceneedle)internalpurereturns(bool){if(self._len<needle._len){returnfalse;}uintselfptr=self._ptr+self._len-needle._len;if(selfptr==needle._ptr){returntrue;}boolequal;assembly{letlength:=mload(needle)letneedleptr:=mload(add(needle,0x20))equal:=eq(keccak256(selfptr,length),keccak256(needleptr,length))}returnequal;}"
    },
    {
      "name": "SOLIDITY_SHOULD_NOT_BE_PURE",
      "patternId": "11314f",
      "severity": 1,
      "line": 700,
      "column": 4,
      "content": "functionuntil(sliceself,sliceneedle)internalpurereturns(slice){if(self._len<needle._len){returnself;}uintselfptr=self._ptr+self._len-needle._len;boolequal=true;if(selfptr!=needle._ptr){assembly{letlength:=mload(needle)letneedleptr:=mload(add(needle,0x20))equal:=eq(keccak256(selfptr,length),keccak256(needleptr,length))}}if(equal){self._len-=needle._len;}returnself;}"
    },
    {
      "name": "SOLIDITY_SHOULD_NOT_BE_PURE",
      "patternId": "11314f",
      "severity": 1,
      "line": 726,
      "column": 4,
      "content": "functionfindPtr(uintselflen,uintselfptr,uintneedlelen,uintneedleptr)privatepurereturns(uint){uintptr=selfptr;uintidx;if(needlelen<=selflen){if(needlelen<=32){bytes32mask=bytes32(~(2**(8*(32-needlelen))-1));bytes32needledata;assembly{needledata:=and(mload(needleptr),mask)}uintend=selfptr+selflen-needlelen;bytes32ptrdata;assembly{ptrdata:=and(mload(ptr),mask)}while(ptrdata!=needledata){if(ptr>=end)returnselfptr+selflen;ptr++;assembly{ptrdata:=and(mload(ptr),mask)}}returnptr;}else{bytes32hash;assembly{hash:=sha3(needleptr,needlelen)}for(idx=0;idx<=selflen-needlelen;idx++){bytes32testHash;assembly{testHash:=sha3(ptr,needlelen)}if(hash==testHash)returnptr;ptr+=1;}}}returnselfptr+selflen;}"
    },
    {
      "name": "SOLIDITY_SHOULD_NOT_BE_PURE",
      "patternId": "11314f",
      "severity": 1,
      "line": 767,
      "column": 4,
      "content": "functionrfindPtr(uintselflen,uintselfptr,uintneedlelen,uintneedleptr)privatepurereturns(uint){uintptr;if(needlelen<=selflen){if(needlelen<=32){bytes32mask=bytes32(~(2**(8*(32-needlelen))-1));bytes32needledata;assembly{needledata:=and(mload(needleptr),mask)}ptr=selfptr+selflen-needlelen;bytes32ptrdata;assembly{ptrdata:=and(mload(ptr),mask)}while(ptrdata!=needledata){if(ptr<=selfptr)returnselfptr;ptr--;assembly{ptrdata:=and(mload(ptr),mask)}}returnptr+needlelen;}else{bytes32hash;assembly{hash:=sha3(needleptr,needlelen)}ptr=selfptr+(selflen-needlelen);while(ptr>=selfptr){bytes32testHash;assembly{testHash:=sha3(ptr,needlelen)}if(hash==testHash)returnptr+needlelen;ptr-=1;}}}returnselfptr;}"
    },
    {
      "name": "SOLIDITY_SHOULD_NOT_BE_PURE",
      "patternId": "11314f",
      "severity": 1,
      "line": 938,
      "column": 4,
      "content": "functionconcat(sliceself,sliceother)internalpurereturns(string){stringmemoryret=newstring(self._len+other._len);uintretptr;assembly{retptr:=add(ret,32)}memcpy(retptr,self._ptr,self._len);memcpy(retptr+self._len,other._ptr,other._len);returnret;}"
    },
    {
      "name": "SOLIDITY_SHOULD_NOT_BE_PURE",
      "patternId": "11314f",
      "severity": 1,
      "line": 955,
      "column": 4,
      "content": "functionjoin(sliceself,slice[]parts)internalpurereturns(string){if(parts.length==0)return\"\";uintlength=self._len*(parts.length-1);for(uinti=0;i<parts.length;i++)length+=parts[i]._len;stringmemoryret=newstring(length);uintretptr;assembly{retptr:=add(ret,32)}for(i=0;i<parts.length;i++){memcpy(retptr,parts[i]._ptr,parts[i]._len);retptr+=parts[i]._len;if(i<parts.length-1){memcpy(retptr,self._ptr,self._len);retptr+=self._len;}}returnret;}"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "91h3sa",
      "severity": 1,
      "line": 1115,
      "column": 12,
      "content": "public"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 329,
      "column": 21,
      "content": "stringself"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 400,
      "column": 57,
      "content": "string"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 938,
      "column": 68,
      "content": "string"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 955,
      "column": 30,
      "content": "slice[]parts"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 955,
      "column": 68,
      "content": "string"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 1133,
      "column": 20,
      "content": "string_a"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 1151,
      "column": 19,
      "content": "string_a"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 1296,
      "column": 70,
      "content": "address[]"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 1331,
      "column": 17,
      "content": "stringuploadedData"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 308,
      "column": 12,
      "content": "assembly{mstore(dest,mload(src))}"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 317,
      "column": 8,
      "content": "assembly{letsrcpart:=and(mload(src),not(mask))letdestpart:=and(mload(dest),mask)mstore(dest,or(destpart,srcpart))}"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 331,
      "column": 8,
      "content": "assembly{ptr:=add(self,0x20)}"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 377,
      "column": 8,
      "content": "assembly{letptr:=mload(0x40)mstore(0x40,add(ptr,0x20))mstore(ptr,self)mstore(add(ret,0x20),ptr)}"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 403,
      "column": 8,
      "content": "assembly{retptr:=add(ret,32)}"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 423,
      "column": 12,
      "content": "assembly{b:=and(mload(ptr),0xFF)}"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 468,
      "column": 12,
      "content": "assembly{a:=mload(selfptr)b:=mload(otherptr)}"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 516,
      "column": 8,
      "content": "assembly{b:=and(mload(sub(mload(add(self,32)),31)),0xFF)}"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 566,
      "column": 8,
      "content": "assembly{word:=mload(mload(add(self,32)))}"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 606,
      "column": 8,
      "content": "assembly{ret:=keccak256(mload(add(self,32)),mload(self))}"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 627,
      "column": 8,
      "content": "assembly{letlength:=mload(needle)letselfptr:=mload(add(self,0x20))letneedleptr:=mload(add(needle,0x20))equal:=eq(keccak256(selfptr,length),keccak256(needleptr,length))}"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 650,
      "column": 12,
      "content": "assembly{letlength:=mload(needle)letselfptr:=mload(add(self,0x20))letneedleptr:=mload(add(needle,0x20))equal:=eq(sha3(selfptr,length),sha3(needleptr,length))}"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 684,
      "column": 8,
      "content": "assembly{letlength:=mload(needle)letneedleptr:=mload(add(needle,0x20))equal:=eq(keccak256(selfptr,length),keccak256(needleptr,length))}"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 708,
      "column": 12,
      "content": "assembly{letlength:=mload(needle)letneedleptr:=mload(add(needle,0x20))equal:=eq(keccak256(selfptr,length),keccak256(needleptr,length))}"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 735,
      "column": 16,
      "content": "assembly{needledata:=and(mload(needleptr),mask)}"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 739,
      "column": 16,
      "content": "assembly{ptrdata:=and(mload(ptr),mask)}"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 745,
      "column": 20,
      "content": "assembly{ptrdata:=and(mload(ptr),mask)}"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 751,
      "column": 16,
      "content": "assembly{hash:=sha3(needleptr,needlelen)}"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 755,
      "column": 20,
      "content": "assembly{testHash:=sha3(ptr,needlelen)}"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 775,
      "column": 16,
      "content": "assembly{needledata:=and(mload(needleptr),mask)}"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 779,
      "column": 16,
      "content": "assembly{ptrdata:=and(mload(ptr),mask)}"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 785,
      "column": 20,
      "content": "assembly{ptrdata:=and(mload(ptr),mask)}"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 791,
      "column": 16,
      "content": "assembly{hash:=sha3(needleptr,needlelen)}"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 795,
      "column": 20,
      "content": "assembly{testHash:=sha3(ptr,needlelen)}"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 941,
      "column": 8,
      "content": "assembly{retptr:=add(ret,32)}"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 965,
      "column": 8,
      "content": "assembly{retptr:=add(ret,32)}"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 22,
      "column": 2,
      "content": "mapping(address=>uint256)balances;"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 24,
      "column": 2,
      "content": "uint256totalSupply_;"
    }
  ]
}