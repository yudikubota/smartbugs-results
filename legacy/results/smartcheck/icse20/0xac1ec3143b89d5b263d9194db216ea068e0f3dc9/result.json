{
  "contract": "0xac1ec3143b89d5b263d9194db216ea068e0f3dc9",
  "tool": "smartcheck",
  "start": 1563502622.304512,
  "end": 1563502630.9775965,
  "duration": 8.673084497451782,
  "analysis": [
    {
      "name": "SOLIDITY_ERC20_APPROVE",
      "patternId": "af782c",
      "severity": 2,
      "line": 64,
      "column": 4,
      "content": "functionapprove(address_spender,uint256_value)returns(boolsuccess){allowance[msg.sender][_spender]=_value;returntrue;}"
    },
    {
      "name": "SOLIDITY_OVERPOWERED_ROLE",
      "patternId": "j83hf7",
      "severity": 2,
      "line": 179,
      "column": 4,
      "content": "functionsetPrices(uint256newSellPrice,uint256newBuyPrice)onlyOwner{sellPrice=newSellPrice;buyPrice=newBuyPrice;}"
    },
    {
      "name": "SOLIDITY_OVERPOWERED_ROLE",
      "patternId": "j83hf7",
      "severity": 2,
      "line": 187,
      "column": 4,
      "content": "functionsetStatus(boolisClosedBuy,boolisClosedSell)onlyOwner{closeBuy=isClosedBuy;closeSell=isClosedSell;}"
    },
    {
      "name": "SOLIDITY_PRAGMAS_VERSION",
      "patternId": "23fc32",
      "severity": 1,
      "line": 1,
      "column": 16,
      "content": "^"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": 910067,
      "severity": 1,
      "line": 5,
      "column": 4,
      "content": "functionowned(){owner=msg.sender;}"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": 910067,
      "severity": 1,
      "line": 7,
      "column": 4,
      "content": "functiontransferOwnership(addressnewOwner)onlyOwner{owner=newOwner;}"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": 910067,
      "severity": 1,
      "line": 25,
      "column": 4,
      "content": "functiontoken(uint256initialSupply,stringtokenName,uint8decimalUnits,stringtokenSymbol){balanceOf[msg.sender]=initialSupply;totalSupply=initialSupply;name=tokenName;symbol=tokenSymbol;decimals=decimalUnits;}"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": 910067,
      "severity": 1,
      "line": 46,
      "column": 4,
      "content": "functiontransfer(address_to,uint256_value){_transfer(msg.sender,_to,_value);}"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": 910067,
      "severity": 1,
      "line": 54,
      "column": 4,
      "content": "functiontransferFrom(address_from,address_to,uint256_value)returns(boolsuccess){require(_value<=allowance[_from][msg.sender]);allowance[_from][msg.sender]-=_value;_transfer(_from,_to,_value);returntrue;}"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": 910067,
      "severity": 1,
      "line": 64,
      "column": 4,
      "content": "functionapprove(address_spender,uint256_value)returns(boolsuccess){allowance[msg.sender][_spender]=_value;returntrue;}"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": 910067,
      "severity": 1,
      "line": 94,
      "column": 4,
      "content": "functionBSCToken(uint256initialSupply,stringtokenName,uint8decimalUnits,stringtokenSymbol)token(initialSupply,tokenName,decimalUnits,tokenSymbol){}"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": 910067,
      "severity": 1,
      "line": 140,
      "column": 4,
      "content": "functioncompleteMigration(address_to,uint256_value)onlyOwnerpayable{require(msg.value>=(_value*sellPrice));require((this.balance+msg.value)>this.balance);_updateSolvency(this.balance);_updateProfit(msg.value,false);_transfer(msg.sender,_to,_value);distributedTokens=distributedTokens+_value;LogMigration(_to,_value);}"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": 910067,
      "severity": 1,
      "line": 158,
      "column": 4,
      "content": "functionmintToken(addresstarget,uint256mintedAmount)onlyOwner{balanceOf[target]+=mintedAmount;totalSupply+=mintedAmount;_updateTokensAvailable(balanceOf[this]);Transfer(0,this,mintedAmount);Transfer(this,target,mintedAmount);}"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": 910067,
      "severity": 1,
      "line": 171,
      "column": 4,
      "content": "functionfreezeAccount(addresstarget,boolfreeze)onlyOwner{frozenAccount[target]=freeze;FrozenFunds(target,freeze);}"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": 910067,
      "severity": 1,
      "line": 179,
      "column": 4,
      "content": "functionsetPrices(uint256newSellPrice,uint256newBuyPrice)onlyOwner{sellPrice=newSellPrice;buyPrice=newBuyPrice;}"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": 910067,
      "severity": 1,
      "line": 187,
      "column": 4,
      "content": "functionsetStatus(boolisClosedBuy,boolisClosedSell)onlyOwner{closeBuy=isClosedBuy;closeSell=isClosedSell;}"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": 910067,
      "severity": 1,
      "line": 193,
      "column": 4,
      "content": "functiondeposit()payablereturns(boolsuccess){require((this.balance+msg.value)>this.balance);_updateSolvency(this.balance);_updateProfit(msg.value,false);LogDeposit(msg.sender,msg.value);returntrue;}"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": 910067,
      "severity": 1,
      "line": 208,
      "column": 4,
      "content": "functionwithdraw(uintamountInWeis)onlyOwner{LogWithdrawal(msg.sender,amountInWeis);_updateSolvency((this.balance-amountInWeis));_updateProfit(amountInWeis,true);owner.transfer(amountInWeis);}"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": 910067,
      "severity": 1,
      "line": 216,
      "column": 4,
      "content": "functionbuy()payable{require(!closeBuy);uintamount=msg.value/buyPrice;uint256profit_in_transaction=msg.value-(amount*sellPrice);require(profit_in_transaction>0);_transfer(this,msg.sender,amount);distributedTokens=distributedTokens+amount;_updateSolvency(this.balance-profit_in_transaction);_updateProfit(profit_in_transaction,true);owner.transfer(profit_in_transaction);}"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": 910067,
      "severity": 1,
      "line": 232,
      "column": 4,
      "content": "functionsell(uint256amount){require(!closeSell);require(this.balance>=amount*sellPrice);_transfer(msg.sender,this,amount);distributedTokens=distributedTokens-amount;_updateSolvency((this.balance-(amount*sellPrice)));msg.sender.transfer(amount*sellPrice);}"
    }
  ]
}