/unique_chucks/42/0xac0b506c613f6edcd447e8c412c7df3ecb3d5524.sol
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 135
column: 2
content: functiongetCostForCards(uint256cardId,uint256existing,uint256amount)publicconstantreturns(uint256){uint256icount=existing;if(amount==1){if(existing==0){returncardInfo[cardId].baseCoinCost;}else{returncardInfo[cardId].baseCoinCost+(existing*cardInfo[cardId].coinCostIncreaseHalf*2);}}elseif(amount>1){uint256existingCost;if(existing>0){existingCost=(cardInfo[cardId].baseCoinCost*existing)+(existing*(existing-1)*cardInfo[cardId].coinCostIncreaseHalf);}icount=SafeMath.add(existing,amount);uint256newCost=SafeMath.add(SafeMath.mul(cardInfo[cardId].baseCoinCost,icount),SafeMath.mul(SafeMath.mul(icount,(icount-1)),cardInfo[cardId].coinCostIncreaseHalf));returnnewCost-existingCost;}}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 154
column: 2
content: functiongetCostForBattleCards(uint256cardId,uint256existing,uint256amount)publicconstantreturns(uint256){uint256icount=existing;if(amount==1){if(existing==0){returnbattlecardInfo[cardId].baseCoinCost;}else{returnbattlecardInfo[cardId].baseCoinCost+(existing*battlecardInfo[cardId].coinCostIncreaseHalf*2);}}elseif(amount>1){uint256existingCost;if(existing>0){existingCost=(battlecardInfo[cardId].baseCoinCost*existing)+(existing*(existing-1)*battlecardInfo[cardId].coinCostIncreaseHalf);}icount=SafeMath.add(existing,amount);uint256newCost=SafeMath.add(SafeMath.mul(battlecardInfo[cardId].baseCoinCost,icount),SafeMath.mul(SafeMath.mul(icount,(icount-1)),battlecardInfo[cardId].coinCostIncreaseHalf));returnnewCost-existingCost;}}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 173
column: 2
content: functiongetCostForUprade(uint256cardId,uint256existing,uint256amount)publicconstantreturns(uint256){if(amount==1){if(existing==0){returnupgradeInfo[cardId].coinCost;}else{returnupgradeInfo[cardId].coinCost+(existing*upgradeInfo[cardId].increase*2);}}}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 188
column: 2
content: functionunitEthCost(uint256cardId)externalconstantreturns(uint256){returncardInfo[cardId].ethCost;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 193
column: 2
content: functionunitBattleEthCost(uint256cardId)externalconstantreturns(uint256){returnbattlecardInfo[cardId].ethCost;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 197
column: 2
content: functionunitBattlePLATCost(uint256cardId)externalconstantreturns(uint256){returnSafeMath.mul(battlecardInfo[cardId].ethCost,PLATPrice);}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 202
column: 2
content: functionunitPLATCost(uint256cardId)externalconstantreturns(uint256){returnSafeMath.mul(cardInfo[cardId].ethCost,PLATPrice);}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 206
column: 2
content: functionunitCoinProduction(uint256cardId)externalconstantreturns(uint256){returncardInfo[cardId].baseCoinProduction;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 210
column: 2
content: functionunitAttack(uint256cardId)externalconstantreturns(uint256){returnbattlecardInfo[cardId].attackValue;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 214
column: 2
content: functionunitDefense(uint256cardId)externalconstantreturns(uint256){returnbattlecardInfo[cardId].defenseValue;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 218
column: 2
content: functionunitStealingCapacity(uint256cardId)externalconstantreturns(uint256){returnbattlecardInfo[cardId].coinStealingCapacity;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 222
column: 2
content: functionproductionCardIdRange()externalconstantreturns(uint256,uint256){return(1,currNumOfCards);}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 226
column: 2
content: functionbattleCardIdRange()externalconstantreturns(uint256,uint256){uint256battleMax=SafeMath.add(39,currNumOfBattleCards);return(40,battleMax);}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 231
column: 2
content: functionupgradeIdRange()externalconstantreturns(uint256,uint256){return(1,currNumOfUpgrades);}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 236
column: 2
content: functiongetCardsInfo(uint256cardId)externalconstantreturns(uint256baseCoinCost,uint256coinCostIncreaseHalf,uint256ethCost,uint256baseCoinProduction,uint256platCost,boolunitSellable){baseCoinCost=cardInfo[cardId].baseCoinCost;coinCostIncreaseHalf=cardInfo[cardId].coinCostIncreaseHalf;ethCost=cardInfo[cardId].ethCost;baseCoinProduction=cardInfo[cardId].baseCoinProduction;platCost=SafeMath.mul(ethCost,PLATPrice);unitSellable=cardInfo[cardId].unitSellable;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 252
column: 2
content: functiongetCardInfo(uint256cardId,uint256existing,uint256amount)externalconstantreturns(uint256,uint256,uint256,uint256,bool){return(cardInfo[cardId].cardId,cardInfo[cardId].baseCoinProduction,getCostForCards(cardId,existing,amount),SafeMath.mul(cardInfo[cardId].ethCost,amount),cardInfo[cardId].unitSellable);}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 257
column: 2
content: functiongetBattleCardInfo(uint256cardId,uint256existing,uint256amount)externalconstantreturns(uint256,uint256,uint256,bool){return(battlecardInfo[cardId].cardId,getCostForBattleCards(cardId,existing,amount),SafeMath.mul(battlecardInfo[cardId].ethCost,amount),battlecardInfo[cardId].unitSellable);}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 262
column: 2
content: functiongetBattleCardsInfo(uint256cardId)externalconstantreturns(uint256baseCoinCost,uint256coinCostIncreaseHalf,uint256ethCost,uint256attackValue,uint256defenseValue,uint256coinStealingCapacity,uint256platCost,boolunitSellable){baseCoinCost=battlecardInfo[cardId].baseCoinCost;coinCostIncreaseHalf=battlecardInfo[cardId].coinCostIncreaseHalf;ethCost=battlecardInfo[cardId].ethCost;attackValue=battlecardInfo[cardId].attackValue;defenseValue=battlecardInfo[cardId].defenseValue;coinStealingCapacity=battlecardInfo[cardId].coinStealingCapacity;platCost=SafeMath.mul(ethCost,PLATPrice);unitSellable=battlecardInfo[cardId].unitSellable;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 283
column: 2
content: functiongetUpgradeCardsInfo(uint256upgradecardId,uint256existing)externalconstantreturns(uint256coinCost,uint256ethCost,uint256upgradeClass,uint256cardId,uint256upgradeValue,uint256platCost){coinCost=getCostForUprade(upgradecardId,existing,1);ethCost=upgradeInfo[upgradecardId].ethCost*(100+10*existing)/100;upgradeClass=upgradeInfo[upgradecardId].upgradeClass;cardId=upgradeInfo[upgradecardId].cardId;upgradeValue=upgradeInfo[upgradecardId].upgradeValue+existing;platCost=SafeMath.mul(ethCost,PLATPrice);}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 67
column: 2
content: functionsetAllowedAddress(address_address)externalonlyOwner{require(_address!=address(0));allowed=_address;}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 76
column: 2
content: functionsetMaxCAP(uint256iMax)externalonlyOwner{Max_CAP=iMax;}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 82
column: 2
content: functionsetPLATPrice(uint256price)externalonlyOwner{PLATPrice=price;}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: ^

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 46
column: 27
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 47
column: 33
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 48
column: 34
content: private

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 7
column: 2
content: usingSafeMathforSafeMath;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 55
column: 2
content: uint256PLATPrice=65000;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 66
column: 2
content: addressallowed;

SOLIDITY_VISIBILITY :2
SOLIDITY_SAFEMATH :1
SOLIDITY_OVERPOWERED_ROLE :3
SOLIDITY_DEPRECATED_CONSTRUCTIONS :19
SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA :3