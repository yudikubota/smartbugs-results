/unique_contracts/0x0f2191aeed12f2d60fced84e34e05e00837f84dd.sol
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 182
column: 38
content: 0x100000000000000000000000000000000

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 432
column: 4
content: for(uint256i=0;i<_investors.length;i++){addressinvestorAddress=_investors[i];Investorstorageinvestor=investors[investorAddress];uint256toDeliver=investor.tokensBought;investor.tokensBought=0;investor.etherInvested=0;if(toDeliver>0){require(orgonToken.transfer(investorAddress,toDeliver));reserveTokensDelivered=safeAdd(reserveTokensDelivered,toDeliver);Delivery(investorAddress,toDeliver);}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 466
column: 4
content: for(uint256i=0;i<_investors.length;i++){addressinvestorAddress=_investors[i];Investorstorageinvestor=investors[investorAddress];uint256toBurn=investor.tokensBought;uint256toRefund=investor.etherInvested;investor.tokensBought=0;investor.etherInvested=0;if(toBurn>0)require(orgonToken.burnTokens(toBurn));if(toRefund>0){investorAddress.transfer(toRefund);Refund(investorAddress,toRefund);}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: k4o1l4
severity: 1
line: 893
column: 4
content: while(x>TWO_128){x>>=10;shift+=1;}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 47acc2
severity: 1
line: 849
column: 2
content: functionupdateStage()internalreturns(Stage){StagecurrentStage=getStage(currentTime());if(stage!=currentStage){if(currentStage==Stage.BEFORE_GROWTH){uint256tokensToBurn=safeSub(safeAdd(safeAdd(safeSub(RESERVE_MAX_AMOUNT,reserveAmount),safeSub(RESERVE_RATIO,1))/RESERVE_RATIO,reserveTokensSold),RESERVE_MAX_TOKENS);orisSpace.start(tokensToBurn);if(tokensToBurn>0)require(orgonToken.burnTokens(tokensToBurn));}stage=currentStage;}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 432
column: 4
content: for(uint256i=0;i<_investors.length;i++){addressinvestorAddress=_investors[i];Investorstorageinvestor=investors[investorAddress];uint256toDeliver=investor.tokensBought;investor.tokensBought=0;investor.etherInvested=0;if(toDeliver>0){require(orgonToken.transfer(investorAddress,toDeliver));reserveTokensDelivered=safeAdd(reserveTokensDelivered,toDeliver);Delivery(investorAddress,toDeliver);}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 466
column: 4
content: for(uint256i=0;i<_investors.length;i++){addressinvestorAddress=_investors[i];Investorstorageinvestor=investors[investorAddress];uint256toBurn=investor.tokensBought;uint256toRefund=investor.etherInvested;investor.tokensBought=0;investor.etherInvested=0;if(toBurn>0)require(orgonToken.burnTokens(toBurn));if(toRefund>0){investorAddress.transfer(toRefund);Refund(investorAddress,toRefund);}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: 17f23a
severity: 1
line: 893
column: 11
content: x>TWO_128

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: 17f23a
severity: 1
line: 904
column: 13
content: true

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 526
column: 2
content: functionsetFee(uint256_fee)public{require(msg.sender==k1);require(_fee>=MIN_FEE);require(_fee<=MAX_FEE);updateStage();require(stage==Stage.GROWTH||stage==Stage.LIFE);require(currentTime()>=feeChangeEnableTime);require(safeSub(_fee,1)<=fee);require(safeAdd(_fee,1)>=fee);if(fee!=_fee){fee=_fee;FeeChange(_fee);}}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 6
column: 16
content: ^

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 12
column: 19
content: private

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 383
column: 9
content: if(stage==Stage.GROWTH||stage==Stage.LIFE)buyTokensGrowthLife();elserevert();

ruleId: SOLIDITY_TRANSFER_IN_LOOP
patternId: 8jdj43
severity: 2
line: 466
column: 4
content: for(uint256i=0;i<_investors.length;i++){addressinvestorAddress=_investors[i];Investorstorageinvestor=investors[investorAddress];uint256toBurn=investor.tokensBought;uint256toRefund=investor.etherInvested;investor.tokensBought=0;investor.etherInvested=0;if(toBurn>0)require(orgonToken.burnTokens(toBurn));if(toRefund>0){investorAddress.transfer(toRefund);Refund(investorAddress,toRefund);}}

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 91h3sa
severity: 1
line: 367
column: 14
content: public

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 425
column: 20
content: address[]_investors

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 462
column: 19
content: address[]_investors

SOLIDITY_OVERPOWERED_ROLE :1
SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_REVERT_REQUIRE :1
SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN :1
SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA :1
SOLIDITY_EXTRA_GAS_IN_LOOPS :3
SOLIDITY_ADDRESS_HARDCODED :1
SOLIDITY_UPGRADE_TO_050 :3
SOLIDITY_GAS_LIMIT_IN_LOOPS :4
SOLIDITY_TRANSFER_IN_LOOP :1