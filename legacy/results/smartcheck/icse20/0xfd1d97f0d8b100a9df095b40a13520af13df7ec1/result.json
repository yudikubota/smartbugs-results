{
  "contract": "0xfd1d97f0d8b100a9df095b40a13520af13df7ec1",
  "tool": "smartcheck",
  "start": 1563704613.896303,
  "end": 1563704627.0692065,
  "duration": 13.172903537750244,
  "analysis": [
    {
      "name": "SOLIDITY_ADDRESS_HARDCODED",
      "patternId": "a91b18",
      "severity": 1,
      "line": 78,
      "column": 4,
      "content": "pendingOwner=address(0)"
    },
    {
      "name": "SOLIDITY_ADDRESS_HARDCODED",
      "patternId": "a91b18",
      "severity": 1,
      "line": 112,
      "column": 4,
      "content": "pendingOwner=address(0)"
    },
    {
      "name": "SOLIDITY_ADDRESS_HARDCODED",
      "patternId": "a91b18",
      "severity": 1,
      "line": 1459,
      "column": 12,
      "content": "returnaddress(0)"
    },
    {
      "name": "SOLIDITY_ADDRESS_HARDCODED",
      "patternId": "a91b18",
      "severity": 1,
      "line": 1470,
      "column": 12,
      "content": "returnaddress(0)"
    },
    {
      "name": "SOLIDITY_ERC20_APPROVE",
      "patternId": "af782c",
      "severity": 2,
      "line": 850,
      "column": 4,
      "content": "functionapprove(address_spender,uint256_value)publicuserNotBlacklisted(_spender)userNotBlacklisted(msg.sender)whenNotPausedwhenUnlockedreturns(bool){tokenStorage.setAllowance(msg.sender,_spender,_value);emitApproval(msg.sender,_spender,_value);returntrue;}"
    },
    {
      "name": "SOLIDITY_OVERPOWERED_ROLE",
      "patternId": "j83hf7",
      "severity": 2,
      "line": 148,
      "column": 4,
      "content": "functionsetDefaultFee(uint256_fee)publiconlyOwner{uint256oldFee=defaultFee;defaultFee=_fee;if(oldFee!=defaultFee)emitDefaultFeeChanged(oldFee,_fee);}"
    },
    {
      "name": "SOLIDITY_OVERPOWERED_ROLE",
      "patternId": "j83hf7",
      "severity": 2,
      "line": 159,
      "column": 4,
      "content": "functionsetFee(address_stablecoin,uint256_fee)publiconlyOwner{uint256oldFee=fees[_stablecoin];fees[_stablecoin]=_fee;if(oldFee!=_fee)emitFeeChanged(_stablecoin,oldFee,_fee);}"
    },
    {
      "name": "SOLIDITY_OVERPOWERED_ROLE",
      "patternId": "j83hf7",
      "severity": 2,
      "line": 263,
      "column": 4,
      "content": "functionsetAllowance(address_tokenHolder,address_spender,uint256_value)publiconlyOwner{allowances[_tokenHolder][_spender]=_value;}"
    },
    {
      "name": "SOLIDITY_OVERPOWERED_ROLE",
      "patternId": "j83hf7",
      "severity": 2,
      "line": 275,
      "column": 4,
      "content": "functionsetBalance(address_addr,uint256_value)publiconlyOwner{balances[_addr]=_value;}"
    },
    {
      "name": "SOLIDITY_OVERPOWERED_ROLE",
      "patternId": "j83hf7",
      "severity": 2,
      "line": 287,
      "column": 4,
      "content": "functionsetTotalSupply(uint256_value)publiconlyOwner{totalSupply=_value;}"
    },
    {
      "name": "SOLIDITY_OVERPOWERED_ROLE",
      "patternId": "j83hf7",
      "severity": 2,
      "line": 950,
      "column": 4,
      "content": "functionsetRegulator(address_newRegulator)publiconlyOwner{require(_newRegulator!=address(regulator),\"Must be a new regulator\");require(AddressUtils.isContract(_newRegulator),\"Cannot set a regulator storage to a non-contract address\");addressold=address(regulator);regulator=Regulator(_newRegulator);emitChangedRegulator(old,_newRegulator);}"
    },
    {
      "name": "SOLIDITY_OVERPOWERED_ROLE",
      "patternId": "j83hf7",
      "severity": 2,
      "line": 1091,
      "column": 4,
      "content": "functionsetCUSDAddress(address_cusd)publiconlyOwner{require(_cusd!=address(cusdAddress),\"Must be a new cusd address\");require(AddressUtils.isContract(_cusd),\"Must be an actual contract\");addressoldCUSD=address(cusdAddress);cusdAddress=_cusd;emitCUSDAddressChanged(oldCUSD,_cusd);}"
    },
    {
      "name": "SOLIDITY_OVERPOWERED_ROLE",
      "patternId": "j83hf7",
      "severity": 2,
      "line": 1163,
      "column": 4,
      "content": "functionsetFee(addressstablecoin,uint256_newFee)publiconlyOwnerwhenNotPaused{require(isWhitelisted(stablecoin),\"Stablecoin must be whitelisted prior to setting conversion fee\");tokenStorage_CD.setFee(stablecoin,_newFee);}"
    },
    {
      "name": "SOLIDITY_OVERPOWERED_ROLE",
      "patternId": "j83hf7",
      "severity": 2,
      "line": 1183,
      "column": 4,
      "content": "functionsetDefaultFee(uint256_newFee)publiconlyOwnerwhenNotPaused{tokenStorage_CD.setDefaultFee(_newFee);}"
    },
    {
      "name": "SOLIDITY_PRAGMAS_VERSION",
      "patternId": "23fc32",
      "severity": 1,
      "line": 1,
      "column": 16,
      "content": "^"
    },
    {
      "name": "SOLIDITY_SAFEMATH",
      "patternId": "837cac",
      "severity": 1,
      "line": 123,
      "column": 4,
      "content": "usingSafeMathforuint256;"
    },
    {
      "name": "SOLIDITY_SAFEMATH",
      "patternId": "837cac",
      "severity": 1,
      "line": 246,
      "column": 4,
      "content": "usingSafeMathforuint256;"
    },
    {
      "name": "SOLIDITY_SAFEMATH",
      "patternId": "837cac",
      "severity": 1,
      "line": 757,
      "column": 4,
      "content": "usingSafeMathforuint256;"
    },
    {
      "name": "SOLIDITY_SHOULD_NOT_BE_PURE",
      "patternId": "11314f",
      "severity": 1,
      "line": 1454,
      "column": 4,
      "content": "function_getSigner(bytes32_hash,bytes_signature)internalpurereturns(address){bytes32r;bytes32s;uint8v;if(_signature.length!=65){returnaddress(0);}assembly{r:=mload(add(_signature,32))s:=mload(add(_signature,64))v:=byte(0,mload(add(_signature,96)))}if(v<27){v+=27;}if(v!=27&&v!=28){returnaddress(0);}else{returnecrecover(keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\",_hash)),v,r,s);}}"
    },
    {
      "name": "SOLIDITY_SHOULD_NOT_BE_VIEW",
      "patternId": "189abf",
      "severity": 1,
      "line": 225,
      "column": 2,
      "content": "functionisContract(addressaddr)internalviewreturns(bool){uint256size;assembly{size:=extcodesize(addr)}returnsize>0;}"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 483,
      "column": 8,
      "content": "string_permissionName"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 484,
      "column": 8,
      "content": "string_permissionDescription"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 485,
      "column": 8,
      "content": "string_contractName"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 558,
      "column": 9,
      "content": "stringname"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 559,
      "column": 9,
      "content": "stringdescription"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 560,
      "column": 9,
      "content": "stringcontract_name"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 1346,
      "column": 73,
      "content": "bytes_signature"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 1373,
      "column": 56,
      "content": "bytes_signature"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 1398,
      "column": 72,
      "content": "bytes_signature"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 1454,
      "column": 39,
      "content": "bytes_signature"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 1461,
      "column": 8,
      "content": "assembly{r:=mload(add(_signature,32))s:=mload(add(_signature,64))v:=byte(0,mload(add(_signature,96)))}"
    }
  ]
}