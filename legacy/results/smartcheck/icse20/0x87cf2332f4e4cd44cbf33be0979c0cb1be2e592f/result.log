/unique_chucks/9/0x87cf2332f4e4cd44cbf33be0979c0cb1be2e592f.sol
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: c67a09
severity: 1
line: 532
column: 35
content: 0x0

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: c67a09
severity: 1
line: 552
column: 35
content: 0x0

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: c67a09
severity: 1
line: 553
column: 36
content: 0x0

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: c67a09
severity: 1
line: 570
column: 35
content: 0x0

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: c67a09
severity: 1
line: 608
column: 35
content: 0x0

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: c67a09
severity: 1
line: 628
column: 35
content: 0x0

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: c67a09
severity: 1
line: 648
column: 35
content: 0x0

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: c67a09
severity: 1
line: 798
column: 49
content: 0x0

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: c67a09
severity: 1
line: 868
column: 48
content: 0x0

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: c67a09
severity: 1
line: 871
column: 45
content: 0x0

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: c67a09
severity: 1
line: 1122
column: 37
content: 0x0

ruleId: SOLIDITY_ERC20_APPROVE
patternId: af782c
severity: 2
line: 210
column: 2
content: functionapprove(address_spender,uint256_value)externalreturns(bool){require(allowed[msg.sender][_spender]==0||_value==0);allowed[msg.sender][_spender]=_value;emitApproval(msg.sender,_spender,_value);returntrue;}

ruleId: SOLIDITY_ERC20_FUNCTIONS_ALWAYS_RETURN_FALSE
patternId: b180ca
severity: 2
line: 315
column: 4
content: functiontransfer(address_to,uint256_value,bytes_data)externalreturns(bool){uint256codeLength;assembly{codeLength:=extcodesize(_to)}balances[msg.sender]=balances[msg.sender].sub(_value);balances[_to]=balances[_to].add(_value);if(codeLength>0){ERC223ReceivingContractreceiver=ERC223ReceivingContract(_to);receiver.tokenFallback(msg.sender,_value,_data);}emitTransfer(msg.sender,_to,_value);}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 573
column: 8
content: for(uint256i=index_from;i<lockedBalances[account][tokenAddr].length&&i<index_to+1;i++){if(lockedBalances[account][tokenAddr][i].balance>0&&lockedBalances[account][tokenAddr][i].releaseTime<=block.timestamp){release_amount=release_amount.add(lockedBalances[account][tokenAddr][i].balance);lockedBalances[account][tokenAddr][i].balance=0;}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 611
column: 8
content: for(uint256i=0;i<lockedBalances[account][tokenAddr].length;i++){if(lockedBalances[account][tokenAddr][i].releaseTime<=block.timestamp){balance=balance.add(lockedBalances[account][tokenAddr][i].balance);}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 631
column: 8
content: for(uint256i=0;i<lockedBalances[account][tokenAddr].length;i++){if(lockedBalances[account][tokenAddr][i].releaseTime>block.timestamp){balance=balance.add(lockedBalances[account][tokenAddr][i].balance);}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 651
column: 8
content: for(uint256i=0;i<lockedBalances[account][tokenAddr].length;i++){if(lockedBalances[account][tokenAddr][i].releaseTime>block.timestamp&&lockedBalances[account][tokenAddr][i].releaseTime<nextRelease){nextRelease=lockedBalances[account][tokenAddr][i].releaseTime;}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 979
column: 8
content: for(uint256i=0;i<tokenSales.length;i++){WhitelistedCrowdsale(tokenSales[i]).addToWhitelist(_beneficiary);}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 988
column: 8
content: for(uint256i=0;i<tokenSales.length;i++){WhitelistedCrowdsale(tokenSales[i]).addManyToWhitelist(_beneficiaries);}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 1020
column: 8
content: for(uint256i=0;i<tokenSales.length;i++){require(FinalizableCrowdsale(tokenSales[i]).isFinalized());}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 1054
column: 4
content: for(uint256i=0;i<_beneficiaries.length;i++){whitelist[_beneficiaries[i]]=true;}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 47acc2
severity: 1
line: 315
column: 4
content: functiontransfer(address_to,uint256_value,bytes_data)externalreturns(bool){uint256codeLength;assembly{codeLength:=extcodesize(_to)}balances[msg.sender]=balances[msg.sender].sub(_value);balances[_to]=balances[_to].add(_value);if(codeLength>0){ERC223ReceivingContractreceiver=ERC223ReceivingContract(_to);receiver.tokenFallback(msg.sender,_value,_data);}emitTransfer(msg.sender,_to,_value);}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 47acc2
severity: 1
line: 933
column: 4
content: functioninitialize()externalonlyOwnerreturns(bool){require(!isStarted);TokenSale(tokenSales[0]).initialize(0);isStarted=true;}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 611
column: 8
content: for(uint256i=0;i<lockedBalances[account][tokenAddr].length;i++){if(lockedBalances[account][tokenAddr][i].releaseTime<=block.timestamp){balance=balance.add(lockedBalances[account][tokenAddr][i].balance);}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 631
column: 8
content: for(uint256i=0;i<lockedBalances[account][tokenAddr].length;i++){if(lockedBalances[account][tokenAddr][i].releaseTime>block.timestamp){balance=balance.add(lockedBalances[account][tokenAddr][i].balance);}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 651
column: 8
content: for(uint256i=0;i<lockedBalances[account][tokenAddr].length;i++){if(lockedBalances[account][tokenAddr][i].releaseTime>block.timestamp&&lockedBalances[account][tokenAddr][i].releaseTime<nextRelease){nextRelease=lockedBalances[account][tokenAddr][i].releaseTime;}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 979
column: 8
content: for(uint256i=0;i<tokenSales.length;i++){WhitelistedCrowdsale(tokenSales[i]).addToWhitelist(_beneficiary);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 988
column: 8
content: for(uint256i=0;i<tokenSales.length;i++){WhitelistedCrowdsale(tokenSales[i]).addManyToWhitelist(_beneficiaries);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 1020
column: 8
content: for(uint256i=0;i<tokenSales.length;i++){require(FinalizableCrowdsale(tokenSales[i]).isFinalized());}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 1054
column: 4
content: for(uint256i=0;i<_beneficiaries.length;i++){whitelist[_beneficiaries[i]]=true;}

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 835
column: 0
content: contractTokenSaleManagerisOwnable{usingSafeMathforuint256;ERC20Interfacepublictoken;addresspublicpoolAddr;addresspublictokenControllerAddr;addresspublictimeLockPoolAddr;address[]publictokenSales;mapping(address=>bool)publictokenSaleIndex;boolpublicisStarted=false;boolpublicisFinalized=false;modifieronlyDaicoPool{require(msg.sender==poolAddr);_;}modifieronlyTokenSale{require(tokenSaleIndex[msg.sender]);_;}constructor(address_tokenControllerAddr,address_timeLockPoolAddr,address_daicoPoolAddr,ERC20Interface_token)public{require(_tokenControllerAddr!=address(0x0));tokenControllerAddr=_tokenControllerAddr;require(_timeLockPoolAddr!=address(0x0));timeLockPoolAddr=_timeLockPoolAddr;token=_token;poolAddr=_daicoPoolAddr;require(PoolAndSaleInterface(poolAddr).votingTokenAddr()==address(token));PoolAndSaleInterface(poolAddr).setTokenSaleContract(this);}function()externalpayable{revert();}functionaddTokenSale(uint256openingTime,uint256closingTime,uint256tokensCap,uint256rate,boolcarryover,uint256timeLockRate,uint256timeLockEnd,uint256minAcceptableWei)externalonlyOwner{require(!isStarted);require(tokenSales.length==0||TimedCrowdsale(tokenSales[tokenSales.length-1]).closingTime()<openingTime);require(TokenController(tokenControllerAddr).state()==TokenController.State.Init);tokenSales.push(newTokenSale(rate,token,poolAddr,openingTime,closingTime,tokensCap,timeLockRate,timeLockEnd,carryover,minAcceptableWei));tokenSaleIndex[tokenSales[tokenSales.length-1]]=true;}functioninitialize()externalonlyOwnerreturns(bool){require(!isStarted);TokenSale(tokenSales[0]).initialize(0);isStarted=true;}functionmint(address_beneficiary,uint256_tokenAmount)externalonlyTokenSalereturns(bool){require(isStarted&&!isFinalized);require(TokenController(tokenControllerAddr).mint(_beneficiary,_tokenAmount));returntrue;}functionmintTimeLocked(address_beneficiary,uint256_tokenAmount,uint256_releaseTime)externalonlyTokenSalereturns(bool){require(isStarted&&!isFinalized);require(TokenController(tokenControllerAddr).mint(this,_tokenAmount));require(ERC20Interface(token).approve(timeLockPoolAddr,_tokenAmount));require(TimeLockPool(timeLockPoolAddr).depositERC20(token,_beneficiary,_tokenAmount,_releaseTime));returntrue;}functionaddToWhitelist(address_beneficiary)externalonlyOwner{require(isStarted);for(uint256i=0;i<tokenSales.length;i++){WhitelistedCrowdsale(tokenSales[i]).addToWhitelist(_beneficiary);}}functionaddManyToWhitelist(address[]_beneficiaries)externalonlyOwner{require(isStarted);for(uint256i=0;i<tokenSales.length;i++){WhitelistedCrowdsale(tokenSales[i]).addManyToWhitelist(_beneficiaries);}}functionfinalize(uint256_indexTokenSale)external{require(isStarted&&!isFinalized);TokenSalets=TokenSale(tokenSales[_indexTokenSale]);if(ts.canFinalize()){ts.finalize();uint256carryoverAmount=0;if(ts.carryover()&&ts.tokensCap()>ts.tokensMinted()&&_indexTokenSale.add(1)<tokenSales.length){carryoverAmount=ts.tokensCap().sub(ts.tokensMinted());}if(_indexTokenSale.add(1)<tokenSales.length){TokenSale(tokenSales[_indexTokenSale.add(1)]).initialize(carryoverAmount);}}}functionfinalizeTokenSaleManager()external{require(isStarted&&!isFinalized);for(uint256i=0;i<tokenSales.length;i++){require(FinalizableCrowdsale(tokenSales[i]).isFinalized());}require(TokenController(tokenControllerAddr).closeTokensale());isFinalized=true;PoolAndSaleInterface(poolAddr).startProject();}}

ruleId: SOLIDITY_MSGVALUE_EQUALS_ZERO
patternId: 1df89a
severity: 1
line: 534
column: 16
content: msg.value==0

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: ^

ruleId: SOLIDITY_REDUNDANT_FALLBACK_REJECT
patternId: b85a32
severity: 1
line: 883
column: 32
content: {revert();}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 585
column: 12
content: if(!account.send(release_amount)){revert();}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 591
column: 12
content: if(!ERC20Interface(tokenAddr).transfer(account,release_amount)){revert();}

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 4
column: 2
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 156
column: 2
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 302
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 490
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 668
column: 2
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 714
column: 2
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 745
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 836
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 1080
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SEND
patternId: 430636
severity: 1
line: 585
column: 25
content: send(release_amount)

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 298
column: 55
content: bytes_data

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 158
column: 2
content: mapping(address=>uint256)balances;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 161
column: 2
content: uint256totalSupply_;

SOLIDITY_VISIBILITY :2
SOLIDITY_ERC20_FUNCTIONS_ALWAYS_RETURN_FALSE :1
SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN :2
SOLIDITY_EXTRA_GAS_IN_LOOPS :8
SOLIDITY_ADDRESS_HARDCODED :11
SOLIDITY_UPGRADE_TO_050 :1
SOLIDITY_GAS_LIMIT_IN_LOOPS :7
SOLIDITY_REDUNDANT_FALLBACK_REJECT :1
SOLIDITY_ERC20_APPROVE :1
SOLIDITY_MSGVALUE_EQUALS_ZERO :1
SOLIDITY_SAFEMATH :9
SOLIDITY_REVERT_REQUIRE :2
SOLIDITY_LOCKED_MONEY :1
SOLIDITY_SEND :1