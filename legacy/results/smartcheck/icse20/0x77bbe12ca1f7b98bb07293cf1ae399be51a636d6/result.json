{
  "contract": "0x77bbe12ca1f7b98bb07293cf1ae399be51a636d6",
  "tool": "smartcheck",
  "start": 1563534530.8114808,
  "end": 1563534542.5093546,
  "duration": 11.697873830795288,
  "analysis": [
    {
      "name": "SOLIDITY_ADDRESS_HARDCODED",
      "patternId": "c67a09",
      "severity": 1,
      "line": 169,
      "column": 19,
      "content": "0x0"
    },
    {
      "name": "SOLIDITY_DEPRECATED_CONSTRUCTIONS",
      "patternId": "187b5a",
      "severity": 1,
      "line": 92,
      "column": 35,
      "content": "sha3"
    },
    {
      "name": "SOLIDITY_DEPRECATED_CONSTRUCTIONS",
      "patternId": "187b5a",
      "severity": 1,
      "line": 96,
      "column": 43,
      "content": "sha3"
    },
    {
      "name": "SOLIDITY_DEPRECATED_CONSTRUCTIONS",
      "patternId": "28fa69",
      "severity": 1,
      "line": 177,
      "column": 4,
      "content": "functionbytes32ToString(bytes32x)constantinternalreturns(string){bytesmemorybytesString=newbytes(32);uintcharCount=0;for(uintj=0;j<32;j++){bytechar=byte(bytes32(uint(x)*2**(8*j)));if(char!=0){bytesString[charCount]=char;charCount++;}}bytesmemorybytesStringTrimmed=newbytes(charCount);for(j=0;j<charCount;j++){bytesStringTrimmed[j]=bytesString[j];}returnstring(bytesStringTrimmed);}"
    },
    {
      "name": "SOLIDITY_ERC20_APPROVE",
      "patternId": "af782c",
      "severity": 2,
      "line": 503,
      "column": 2,
      "content": "functionapprove(address_spender,uint256_value)publicreturns(bool){allowed[msg.sender][_spender]=_value;emitApproval(msg.sender,_spender,_value);returntrue;}"
    },
    {
      "name": "SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN",
      "patternId": "58bdd3",
      "severity": 1,
      "line": 59,
      "column": 4,
      "content": "functioncount(sliceself,sliceneedle)internalreturns(uintcnt){uintptr=findPtr(self._len,self._ptr,needle._len,needle._ptr)+needle._len;while(ptr<=self._ptr+self._len){cnt++;ptr=findPtr(self._len-(ptr-self._ptr),ptr,needle._len,needle._ptr)+needle._len;}}"
    },
    {
      "name": "SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN",
      "patternId": "58bdd3",
      "severity": 1,
      "line": 139,
      "column": 4,
      "content": "functionsplit(sliceself,sliceneedle)internalreturns(slicetoken){split(self,needle,token);}"
    },
    {
      "name": "SOLIDITY_GAS_LIMIT_IN_LOOPS",
      "patternId": "17f23a",
      "severity": 1,
      "line": 61,
      "column": 15,
      "content": "ptr<=self._ptr+self._len"
    },
    {
      "name": "SOLIDITY_LOCKED_MONEY",
      "patternId": "30281d",
      "severity": 3,
      "line": 449,
      "column": 0,
      "content": "contractERC827isERC20{functionapproveAndCall(address_spender,uint256_value,bytes_data)publicpayablereturns(bool);functiontransferAndCall(address_to,uint256_value,bytes_data)publicpayablereturns(bool);functiontransferFromAndCall(address_from,address_to,uint256_value,bytes_data)publicpayablereturns(bool);}"
    },
    {
      "name": "SOLIDITY_PRAGMAS_VERSION",
      "patternId": "23fc32",
      "severity": 1,
      "line": 1,
      "column": 16,
      "content": "^"
    },
    {
      "name": "SOLIDITY_SAFEMATH",
      "patternId": "837cac",
      "severity": 1,
      "line": 390,
      "column": 2,
      "content": "usingSafeMathforuint256;"
    },
    {
      "name": "SOLIDITY_SHOULD_NOT_BE_PURE",
      "patternId": "11314f",
      "severity": 1,
      "line": 16,
      "column": 4,
      "content": "functiontoSlice(stringself)internalpurereturns(slice){uintptr;assembly{ptr:=add(self,0x20)}returnslice(bytes(self).length,ptr);}"
    },
    {
      "name": "SOLIDITY_SHOULD_NOT_BE_PURE",
      "patternId": "11314f",
      "severity": 1,
      "line": 24,
      "column": 4,
      "content": "functionmemcpy(uintdest,uintsrc,uintlen)privatepure{for(;len>=32;len-=32){assembly{mstore(dest,mload(src))}dest+=32;src+=32;}uintmask=256**(32-len)-1;assembly{letsrcpart:=and(mload(src),not(mask))letdestpart:=and(mload(dest),mask)mstore(dest,or(destpart,srcpart))}}"
    },
    {
      "name": "SOLIDITY_SHOULD_NOT_BE_PURE",
      "patternId": "11314f",
      "severity": 1,
      "line": 148,
      "column": 4,
      "content": "functiontoString(sliceself)internalpurereturns(string){varret=newstring(self._len);uintretptr;assembly{retptr:=add(ret,32)}memcpy(retptr,self._ptr,self._len);returnret;}"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 16,
      "column": 21,
      "content": "stringself"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 44,
      "column": 63,
      "content": "string"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 148,
      "column": 57,
      "content": "string"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 177,
      "column": 67,
      "content": "string"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 450,
      "column": 61,
      "content": "bytes_data"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 451,
      "column": 57,
      "content": "bytes_data"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 456,
      "column": 4,
      "content": "bytes_data"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 588,
      "column": 60,
      "content": "bytes_data"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 609,
      "column": 56,
      "content": "bytes_data"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 634,
      "column": 4,
      "content": "bytes_data"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 660,
      "column": 71,
      "content": "bytes_data"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 684,
      "column": 76,
      "content": "bytes_data"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 727,
      "column": 23,
      "content": "string_name"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 727,
      "column": 37,
      "content": "string_symbol"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 798,
      "column": 34,
      "content": "string_name"
    },
    {
      "name": "SOLIDITY_UPGRADE_TO_050",
      "patternId": "341gim",
      "severity": 1,
      "line": 798,
      "column": 48,
      "content": "string_symbol"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 18,
      "column": 8,
      "content": "assembly{ptr:=add(self,0x20)}"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 27,
      "column": 12,
      "content": "assembly{mstore(dest,mload(src))}"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 36,
      "column": 8,
      "content": "assembly{letsrcpart:=and(mload(src),not(mask))letdestpart:=and(mload(dest),mask)mstore(dest,or(destpart,srcpart))}"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 47,
      "column": 8,
      "content": "assembly{retptr:=add(ret,32)}"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 76,
      "column": 16,
      "content": "assembly{letmask:=not(sub(exp(2,mul(8,sub(32,needlelen))),1))letneedledata:=and(mload(needleptr),mask)letend:=add(selfptr,sub(selflen,needlelen))ptr:=selfptrloop:jumpi(exit,eq(and(mload(ptr),mask),needledata))ptr:=add(ptr,1)jumpi(loop,lt(sub(ptr,1),end))ptr:=add(selfptr,selflen)exit:}"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 92,
      "column": 16,
      "content": "assembly{hash:=sha3(needleptr,needlelen)}"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 96,
      "column": 20,
      "content": "assembly{testHash:=sha3(ptr,needlelen)}"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 151,
      "column": 8,
      "content": "assembly{retptr:=add(ret,32)}"
    },
    {
      "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
      "patternId": "109cd5",
      "severity": 1,
      "line": 172,
      "column": 8,
      "content": "assembly{result:=mload(add(source,32))}"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 392,
      "column": 2,
      "content": "mapping(address=>uint256)balances;"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 394,
      "column": 2,
      "content": "uint256totalSupply_;"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 789,
      "column": 4,
      "content": "uint16resourceTypeCount;"
    }
  ]
}