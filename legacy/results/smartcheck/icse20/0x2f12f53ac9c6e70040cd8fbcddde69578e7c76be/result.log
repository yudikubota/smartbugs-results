/unique_chucks/31/0x2f12f53ac9c6e70040cd8fbcddde69578e7c76be.sol
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 23
column: 1
content: functionwhoAmI()constantreturns(address){returnmsg.sender;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 62
column: 1
content: functionbalanceOf(address_owner)constantreturns(uint256balance){returnbalances[_owner];}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 111
column: 1
content: functionallowance(address_owner,address_spender)constantreturns(uint256remaining){returnallowed[_owner][_spender];}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 158
column: 1
content: functionisIssuer(address_issuer)constantreturns(bool);

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 198
column: 1
content: functiongetAssetById(uint256assetId)constantreturns(uint256_assetId,address_assetOwner,address_issuer,string_content,uint256_sellPrice,uint256_status){return(assetsById[assetId].assetId,assetsById[assetId].assetOwner,assetsById[assetId].issuer,assetsById[assetId].content,assetsById[assetId].sellPrice,uint256(assetsById[assetId].status));}

ruleId: SOLIDITY_ERC20_APPROVE
patternId: af782c
severity: 2
line: 103
column: 1
content: functionapprove(address_spender,uint256_amount)returns(boolsuccess){allowed[msg.sender][_spender]=_amount;Approval(msg.sender,_spender,_amount);returntrue;}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 6
column: 16
content: ^

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 323
column: 21
content: stringcontent

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 23
column: 1
content: functionwhoAmI()constantreturns(address){returnmsg.sender;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 31
column: 1
content: functionisOwner()returns(bool){if(msg.sender==owner)returntrue;returnfalse;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 62
column: 1
content: functionbalanceOf(address_owner)constantreturns(uint256balance){returnbalances[_owner];}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 67
column: 1
content: functiontransfer(address_to,uint256_amount)returns(boolsuccess){if(balances[msg.sender]<_amount){Error('transfer: the amount to transfer is higher than your token balance');returnfalse;}balances[msg.sender]-=_amount;balances[_to]+=_amount;Transfer(msg.sender,_to,_amount);returntrue;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 84
column: 1
content: functiontransferFrom(address_from,address_to,uint256_amount)returns(boolsuccess){if(balances[_from]<_amount){Error('transfer: the amount to transfer is higher than the token balance of the source');returnfalse;}if(allowed[_from][msg.sender]<_amount){Error('transfer: the amount to transfer is higher than the maximum token transfer allowed by the source');returnfalse;}balances[_from]-=_amount;balances[_to]+=_amount;allowed[_from][msg.sender]-=_amount;Transfer(_from,_to,_amount);returntrue;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 103
column: 1
content: functionapprove(address_spender,uint256_amount)returns(boolsuccess){allowed[msg.sender][_spender]=_amount;Approval(msg.sender,_spender,_amount);returntrue;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 111
column: 1
content: functionallowance(address_owner,address_spender)constantreturns(uint256remaining){returnallowed[_owner][_spender];}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 116
column: 1
content: functionToken(){owner=msg.sender;initialSupply=50000000*1000000;totalSupply=initialSupply;name="WorldTrade";symbol="WTE";decimals=6;balances[owner]=totalSupply;Transfer(this,owner,totalSupply);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 158
column: 1
content: functionisIssuer(address_issuer)constantreturns(bool);

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 193
column: 1
content: functionAsset(address_SCIssuers){SCIssuers=_SCIssuers;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 198
column: 1
content: functiongetAssetById(uint256assetId)constantreturns(uint256_assetId,address_assetOwner,address_issuer,string_content,uint256_sellPrice,uint256_status){return(assetsById[assetId].assetId,assetsById[assetId].assetOwner,assetsById[assetId].issuer,assetsById[assetId].content,assetsById[assetId].sellPrice,uint256(assetsById[assetId].status));}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 203
column: 1
content: functionsendAssetTo(uint256assetId,addressassetBuyer)returns(bool){if(assetId==0){Error('sendAssetTo: assetId must not be zero');returnfalse;}if(assetsById[assetId].assetOwner!=msg.sender){Error('sendAssetTo: the asset does not belong to you, the seller');returnfalse;}if(assetsById[assetId].sellPrice>0){if(balances[assetBuyer]<assetsById[assetId].sellPrice){Error('sendAssetTo: there is not enough balance from the buyer to get its tokens');returnfalse;}if(allowance(assetBuyer,msg.sender)<assetsById[assetId].sellPrice){Error('sendAssetTo: there is not enough allowance from the buyer to get its tokens');returnfalse;}if(!transferFrom(assetBuyer,msg.sender,assetsById[assetId].sellPrice)){Error('sendAssetTo: transferFrom failed');returnfalse;}}assetsById[assetId].status=assetStatus.Unfungible;assetsById[assetId].assetOwner=assetBuyer;SendAssetTo(assetId,assetBuyer);returntrue;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 249
column: 1
content: functionbuyAsset(uint256assetId,uint256amount)returns(bool){if(assetId==0){Error('buyAsset: assetId must not be zero');returnfalse;}if(assetsById[assetId].status!=assetStatus.ForSale){Error('buyAsset: the asset is not for sale');returnfalse;}if(assetsById[assetId].sellPrice!=amount){Error('buyAsset: the asset price does not match the specified amount');returnfalse;}if(assetsById[assetId].sellPrice>0){if(balances[msg.sender]<assetsById[assetId].sellPrice){Error('buyAsset: there is not enough token balance to buy this asset');returnfalse;}uint256sellerIncome=assetsById[assetId].sellPrice*(1000-assetFeeIssuer-assetFeeWorldTrade)/1000;if(!transfer(assetsById[assetId].assetOwner,sellerIncome)){Error('buyAsset: seller token transfer failed');returnfalse;}uint256issuerIncome=assetsById[assetId].sellPrice*assetFeeIssuer/1000;if(!transfer(assetsById[assetId].issuer,issuerIncome)){Error('buyAsset: issuer token transfer failed');returnfalse;}uint256WorldTradeIncome=assetsById[assetId].sellPrice*assetFeeWorldTrade/1000;if(!transfer(owner,WorldTradeIncome)){Error('buyAsset: WorldTrade token transfer failed');returnfalse;}}assetsById[assetId].status=assetStatus.Unfungible;assetsById[assetId].assetOwner=msg.sender;BuyAsset(assetId,amount);returntrue;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 344
column: 1
content: functionissueAssetTo(stringcontent,addressto)returns(bool){uint256assetId=issueAsset(content,0);if(assetId==0){Error('issueAssetTo: asset has not been properly issued');return(false);}return(sendAssetTo(assetId,to));}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 356
column: 1
content: functionsetAssetUnfungible(uint256assetId)returns(bool){if(assetId==0){Error('setAssetUnfungible: assetId must not be zero');returnfalse;}if(assetsById[assetId].assetOwner!=msg.sender){Error('setAssetUnfungible: only owners of the asset are allowed to update its status');returnfalse;}assetsById[assetId].status=assetStatus.Unfungible;SetAssetUnfungible(assetId,msg.sender);returntrue;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 378
column: 1
content: functionsetAssetPrice(uint256assetId,uint256sellPrice)returns(bool){if(assetId==0){Error('setAssetPrice: assetId must not be zero');returnfalse;}if(assetsById[assetId].assetOwner!=msg.sender){Error('setAssetPrice: only owners of the asset are allowed to set its price and update its status');returnfalse;}assetsById[assetId].sellPrice=sellPrice;assetsById[assetId].status=assetStatus.ForSale;SetAssetPrice(assetId,msg.sender,sellPrice);returntrue;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 401
column: 1
content: functionsetAssetSaleFees(uint256feeIssuer,uint256feeWorldTrade)returns(bool){if(!isOwner()){Error('setAssetSaleFees: only Owner is authorized to update asset sale fees.');returnfalse;}if(feeIssuer+feeWorldTrade>1000){Error('setAssetSaleFees: added fees exceed 100.0%. Not updated.');returnfalse;}assetFeeIssuer=feeIssuer;assetFeeWorldTrade=feeWorldTrade;SetAssetSaleFees(feeIssuer,feeWorldTrade);returntrue;}

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 29
column: 1
content: addressowner;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 43
column: 1
content: mapping(address=>uint256)balances;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 44
column: 1
content: mapping(address=>mapping(address=>uint256))allowed;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 183
column: 1
content: mapping(uint256=>asst)assetsById;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 184
column: 1
content: uint256lastAssetId;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 186
column: 1
content: uint256assetFeeIssuer;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 187
column: 1
content: uint256assetFeeWorldTrade;

SOLIDITY_VISIBILITY :24
SOLIDITY_DEPRECATED_CONSTRUCTIONS :5
SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_UPGRADE_TO_050 :1
SOLIDITY_ERC20_APPROVE :1