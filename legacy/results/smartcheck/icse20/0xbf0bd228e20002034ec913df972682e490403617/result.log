/unique_chucks/7/0xbf0bd228e20002034ec913df972682e490403617.sol
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 90
column: 4
content: functiongetReward(uintcurrentTime)constantreturns(uint256){uintelapsedTimeInSeconds=currentTime-coinBirthTime;uintelapsedTimeinMonths=elapsedTimeInSeconds/(30*24*60*60);uintperiod=elapsedTimeinMonths/3;returnrewardArray[period];}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 129
column: 4
content: functionsetPrices(uint256newSellPrice,uint256newBuyPrice)onlyOwner{sellPrice=newSellPrice;buyPrice=newBuyPrice;}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: ^

ruleId: SOLIDITY_REDUNDANT_FALLBACK_REJECT
patternId: b85a32
severity: 1
line: 46
column: 16
content: {revert();}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 11
column: 8
content: if(msg.sender!=owner)revert();

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 156
column: 8
content: if(!msg.sender.send(revenue)){revert();}else{Transfer(msg.sender,this,amount);returnrevenue;}

ruleId: SOLIDITY_SEND
patternId: 430636
severity: 1
line: 156
column: 24
content: send(revenue)

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 6
column: 4
content: functionowned(){owner=msg.sender;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 33
column: 4
content: functiontoken(stringtokenName,uint8decimalUnits,stringtokenSymbol){name=tokenName;symbol=tokenSymbol;decimals=decimalUnits;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 46
column: 4
content: function(){revert();}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 64
column: 4
content: functionProgressiveToken(stringtokenName,uint8decimalUnits,stringtokenSymbol,uint256initialSupply,uint256sellPrice,uint256buyPrice,addresscentralMinter)token(tokenName,decimalUnits,tokenSymbol){if(centralMinter!=0)owner=centralMinter;balanceOf[owner]=initialSupply;setPrices(sellPrice,buyPrice);currentSupply=initialSupply;reward=837139;for(uint256i=0;i<20;i++){rewardArray[i]=reward;reward=reward/2;}reward=getReward(now);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 90
column: 4
content: functiongetReward(uintcurrentTime)constantreturns(uint256){uintelapsedTimeInSeconds=currentTime-coinBirthTime;uintelapsedTimeinMonths=elapsedTimeInSeconds/(30*24*60*60);uintperiod=elapsedTimeinMonths/3;returnrewardArray[period];}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 104
column: 4
content: functiontransfer(address_to,uint256_value){require(balanceOf[msg.sender]>_value);require(balanceOf[_to]+_value>balanceOf[_to]);reward=getReward(now);require(currentSupply+reward<totalSupply);balanceOf[msg.sender]-=_value;balanceOf[_to]+=_value;Transfer(msg.sender,_to,_value);updateCurrentSupply();balanceOf[block.coinbase]+=reward;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 118
column: 4
content: functionmintToken(addresstarget,uint256mintedAmount)onlyOwner{require(currentSupply+mintedAmount<totalSupply);currentSupply+=(mintedAmount);balanceOf[target]+=mintedAmount;Transfer(0,owner,mintedAmount);Transfer(owner,target,mintedAmount);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 129
column: 4
content: functionsetPrices(uint256newSellPrice,uint256newBuyPrice)onlyOwner{sellPrice=newSellPrice;buyPrice=newBuyPrice;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 134
column: 3
content: functionbuy()payablereturns(uintamount){amount=msg.value/buyPrice;require(balanceOf[this]>amount);reward=getReward(now);require(currentSupply+reward<totalSupply);balanceOf[msg.sender]+=amount;balanceOf[this]-=amount;balanceOf[block.coinbase]+=reward;updateCurrentSupply();Transfer(this,msg.sender,amount);returnamount;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 147
column: 4
content: functionsell(uintamount)returns(uintrevenue){require(balanceOf[msg.sender]>amount);reward=getReward(now);require(currentSupply+reward<totalSupply);balanceOf[this]+=amount;balanceOf[msg.sender]-=amount;balanceOf[block.coinbase]+=reward;updateCurrentSupply();revenue=amount*sellPrice;if(!msg.sender.send(revenue)){revert();}else{Transfer(msg.sender,this,amount);returnrevenue;}}

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 60
column: 3
content: mapping(uint256=>uint256)rewardArray;

SOLIDITY_VISIBILITY :11
SOLIDITY_OVERPOWERED_ROLE :1
SOLIDITY_DEPRECATED_CONSTRUCTIONS :1
SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_REVERT_REQUIRE :2
SOLIDITY_SEND :1
SOLIDITY_REDUNDANT_FALLBACK_REJECT :1