{
  "contract": "0x51c6a6ef1352578ff01b078313e6779b88bdcb1e",
  "tool": "smartcheck",
  "start": 1563460952.7340283,
  "end": 1563460971.437174,
  "duration": 18.703145742416382,
  "analysis": [
    {
      "name": "SOLIDITY_LOCKED_MONEY",
      "patternId": "30281d",
      "severity": 3,
      "line": 3,
      "column": 0,
      "content": "contractDMINT{stringpublicname='DMINT';stringpublicsymbol='DMINT';uint8publicdecimals=18;uint256publictotalSupply=1000000000000000000000000000;uintpublicminingReward=1000000000000000000;uintprivatedivider;uintprivaterandomNumber;mapping(address=>uint256)publicbalanceOf;mapping(address=>uint256)publicsuccessesOf;mapping(address=>uint256)publicfailsOf;mapping(address=>mapping(address=>uint256))publicallowance;eventTransfer(addressindexedfrom,addressindexedto,uint256value);functionDMINT()public{balanceOf[msg.sender]=totalSupply;divider-=1;divider/=1000000000;}function_transfer(address_from,address_to,uint_value)internal{require(_to!=0x0);require(balanceOf[_from]>=_value);require(balanceOf[_to]+_value>balanceOf[_to]);uintpreviousBalances=balanceOf[_from]+balanceOf[_to];balanceOf[_from]-=_value;balanceOf[_to]+=_value;Transfer(_from,_to,_value);assert(balanceOf[_from]+balanceOf[_to]==previousBalances);}functiontransfer(address_to,uint256_value)external{_transfer(msg.sender,_to,_value);}functiontransferFrom(address_from,address_to,uint256_value)externalreturns(boolsuccess){require(_value<=allowance[_from][msg.sender]);allowance[_from][msg.sender]-=_value;_transfer(_from,_to,_value);returntrue;}functionapprove(address_spender,uint256_value)externalreturns(boolsuccess){allowance[msg.sender][_spender]=_value;returntrue;}function()externalpayable{if(msg.value==0){randomNumber+=block.timestamp+uint(msg.sender);uintminedAtBlock=uint(block.blockhash(block.number-1));uintminedHashRel=uint(sha256(minedAtBlock+randomNumber+uint(msg.sender)))/divider;uintbalanceRel=balanceOf[msg.sender]*1000000000/totalSupply;if(balanceRel>=100000){uintk=balanceRel/100000;if(k>255){k=255;}k=2**k;balanceRel=500000000/k;balanceRel=500000000-balanceRel;if(minedHashRel<balanceRel){uintreward=miningReward+minedHashRel*100000000000000;balanceOf[msg.sender]+=reward;totalSupply+=reward;Transfer(0,this,reward);Transfer(this,msg.sender,reward);successesOf[msg.sender]++;}else{failsOf[msg.sender]++;}}else{revert();}}else{revert();}}}"
    },
    {
      "name": "SOLIDITY_MSGVALUE_EQUALS_ZERO",
      "patternId": "1df89a",
      "severity": 1,
      "line": 60,
      "column": 12,
      "content": "msg.value==0"
    },
    {
      "name": "SOLIDITY_PRAGMAS_VERSION",
      "patternId": "23fc32",
      "severity": 1,
      "line": 1,
      "column": 16,
      "content": "^"
    },
    {
      "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
      "patternId": "5616b2",
      "severity": 1,
      "line": 9,
      "column": 9,
      "content": "private"
    },
    {
      "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
      "patternId": "5616b2",
      "severity": 1,
      "line": 10,
      "column": 9,
      "content": "private"
    },
    {
      "name": "SOLIDITY_REVERT_REQUIRE",
      "patternId": "c56b12",
      "severity": 1,
      "line": 60,
      "column": 8,
      "content": "if(msg.value==0){randomNumber+=block.timestamp+uint(msg.sender);uintminedAtBlock=uint(block.blockhash(block.number-1));uintminedHashRel=uint(sha256(minedAtBlock+randomNumber+uint(msg.sender)))/divider;uintbalanceRel=balanceOf[msg.sender]*1000000000/totalSupply;if(balanceRel>=100000){uintk=balanceRel/100000;if(k>255){k=255;}k=2**k;balanceRel=500000000/k;balanceRel=500000000-balanceRel;if(minedHashRel<balanceRel){uintreward=miningReward+minedHashRel*100000000000000;balanceOf[msg.sender]+=reward;totalSupply+=reward;Transfer(0,this,reward);Transfer(this,msg.sender,reward);successesOf[msg.sender]++;}else{failsOf[msg.sender]++;}}else{revert();}}else{revert();}"
    },
    {
      "name": "SOLIDITY_REVERT_REQUIRE",
      "patternId": "c56b12",
      "severity": 1,
      "line": 65,
      "column": 12,
      "content": "if(balanceRel>=100000){uintk=balanceRel/100000;if(k>255){k=255;}k=2**k;balanceRel=500000000/k;balanceRel=500000000-balanceRel;if(minedHashRel<balanceRel){uintreward=miningReward+minedHashRel*100000000000000;balanceOf[msg.sender]+=reward;totalSupply+=reward;Transfer(0,this,reward);Transfer(this,msg.sender,reward);successesOf[msg.sender]++;}else{failsOf[msg.sender]++;}}else{revert();}"
    }
  ]
}