{
  "contract": "0xeba2ce101ede65d602f6f739f3e720db693187c2",
  "tool": "smartcheck",
  "start": 1563496148.7831178,
  "end": 1563496161.0268564,
  "duration": 12.243738651275635,
  "analysis": [
    {
      "name": "SOLIDITY_DIV_MUL",
      "patternId": "09hhh1",
      "severity": 2,
      "line": 437,
      "column": 21,
      "content": "parts.length.div(4).mul(multiplier)"
    },
    {
      "name": "SOLIDITY_EXTRA_GAS_IN_LOOPS",
      "patternId": "d3j11j",
      "severity": 1,
      "line": 453,
      "column": 8,
      "content": "for(uinti=0;i<parts.length;i++){(,partType,subType,rarity,,,,,)=eb.getPartById(parts[i]);require(rarity>0,\"invalid rarity\");if(isExclusive(partType,subType)){claim.exCounts[rarity-1]+=multiplier;}else{claim.counts[rarity-1]+=multiplier;}}"
    },
    {
      "name": "SOLIDITY_EXTRA_GAS_IN_LOOPS",
      "patternId": "d3j11j",
      "severity": 1,
      "line": 470,
      "column": 8,
      "content": "for(uinti=0;i<parts.length;i++){uintid=parts[i];if(!eb.owns(msg.sender,id)){addressseller;(seller,,,,)=em.getAuction(id);if(seller!=msg.sender){returnfalse;}}}"
    },
    {
      "name": "SOLIDITY_EXTRA_GAS_IN_LOOPS",
      "patternId": "d3j11j",
      "severity": 1,
      "line": 486,
      "column": 8,
      "content": "for(uinti=0;i<parts.length;i++){uintid=parts[i];if(id>18214){returnfalse;}if(claimed[id]){returnfalse;}claimed[id]=true;}"
    },
    {
      "name": "SOLIDITY_GAS_LIMIT_IN_LOOPS",
      "patternId": "f6f853",
      "severity": 2,
      "line": 453,
      "column": 8,
      "content": "for(uinti=0;i<parts.length;i++){(,partType,subType,rarity,,,,,)=eb.getPartById(parts[i]);require(rarity>0,\"invalid rarity\");if(isExclusive(partType,subType)){claim.exCounts[rarity-1]+=multiplier;}else{claim.counts[rarity-1]+=multiplier;}}"
    },
    {
      "name": "SOLIDITY_GAS_LIMIT_IN_LOOPS",
      "patternId": "f6f853",
      "severity": 2,
      "line": 470,
      "column": 8,
      "content": "for(uinti=0;i<parts.length;i++){uintid=parts[i];if(!eb.owns(msg.sender,id)){addressseller;(seller,,,,)=em.getAuction(id);if(seller!=msg.sender){returnfalse;}}}"
    },
    {
      "name": "SOLIDITY_GAS_LIMIT_IN_LOOPS",
      "patternId": "f6f853",
      "severity": 2,
      "line": 486,
      "column": 8,
      "content": "for(uinti=0;i<parts.length;i++){uintid=parts[i];if(id>18214){returnfalse;}if(claimed[id]){returnfalse;}claimed[id]=true;}"
    },
    {
      "name": "SOLIDITY_GAS_LIMIT_IN_LOOPS",
      "patternId": "f6f853",
      "severity": 2,
      "line": 641,
      "column": 8,
      "content": "for(uinti=0;i<len;i++){(ids[i],protos[i],purities[i])=activate(pIDs[i],cardIndices[i]);}"
    },
    {
      "name": "SOLIDITY_LOCKED_MONEY",
      "patternId": "30281d",
      "severity": 3,
      "line": 118,
      "column": 0,
      "content": "contractOwnable{addresspayablepublicowner;constructor()public{owner=msg.sender;}functionsetOwner(addresspayable_owner)publiconlyOwner{owner=_owner;}"
    },
    {
      "name": "SOLIDITY_LOCKED_MONEY",
      "patternId": "30281d",
      "severity": 3,
      "line": 361,
      "column": 0,
      "content": "contractEtherbotsPackisOwnable,RarityProvider{usingSafeMathforuint256;usingSafeMath64foruint64;eventClaimMade(uintindexedid,addressuser,uintcount,uint[]partIDs);eventCallbackMade(uintindexedid,addressindexeduser,uintcount,uintrandomness);eventRecommit(uintindexedid,addressindexeduser,uintcount);eventCardActivated(uintindexedclaimID,uintcardIndex,uintindexedcardID,uint16proto,uint16purity);uint16[]commons=[400,413,414,421,427,428];uint16[]rares=[389,415,416,422];uint16[]epics=[424,425,426];uint16[]legendaries=[382,420];uint16exclusive=417;uintpubliccommitLag=0;uint16publicactivationLimit=40;uint16publicmultiplier=4;boolpubliccanClaim=true;structClaim{uintrandomness;uint[]state;addressuser;uint64commit;uint16count;uint16[3]exCounts;uint16[3]counts;}mapping(uint=>bool)publicclaimed;Claim[]publicclaims;EBInterfacepubliceb;EBMarketplacepublicem;constructor(ICards_cards,EBInterface_eb,EBMarketplace_em)RarityProvider(_cards)publicpayable{eb=_eb;em=_em;}functionsetCommitLag(uintlag)publiconlyOwner{require(commitLag<100,\"can't have a commit lag of >100 blocks\");commitLag=lag;}functionsetActivationLimit(uint16_limit)publiconlyOwner{activationLimit=_limit;}functionsetCanClaim(bool_can)publiconlyOwner{canClaim=_can;}functionclaimParts(uint[]memoryparts)public{require(parts.length>0,\"must submit some parts\");require(parts.length<=1000,\"must submit <=1000 parts per purchase\");require(parts.length%4==0,\"must submit a multiple of 4 parts at a time\");require(canClaim,\"must be able to claim\");require(ownsOrAuctioning(parts),\"user must control all parts\");require(canBeClaimed(parts),\"at least one part was already claimed\");uintpacks=parts.length.div(4).mul(multiplier);Claimmemoryclaim=Claim({user:msg.sender,count:uint16(packs),randomness:0,commit:getCommitBlock(),exCounts:[uint16(0),0,0],counts:[uint16(0),0,0],state:newuint256[](getStateSize(packs))});uint8partType;uint8subType;uint8rarity;for(uinti=0;i<parts.length;i++){(,partType,subType,rarity,,,,,)=eb.getPartById(parts[i]);require(rarity>0,\"invalid rarity\");if(isExclusive(partType,subType)){claim.exCounts[rarity-1]+=multiplier;}else{claim.counts[rarity-1]+=multiplier;}}uintid=claims.push(claim)-1;emitClaimMade(id,msg.sender,packs,parts);}functionownsOrAuctioning(uint[]memoryparts)publicreturns(bool){for(uinti=0;i<parts.length;i++){uintid=parts[i];if(!eb.owns(msg.sender,id)){addressseller;(seller,,,,)=em.getAuction(id);if(seller!=msg.sender){returnfalse;}}}returntrue;}functioncanBeClaimed(uint[]memoryparts)publicreturns(bool){for(uinti=0;i<parts.length;i++){uintid=parts[i];if(id>18214){returnfalse;}if(claimed[id]){returnfalse;}claimed[id]=true;}returntrue;}functiongetCounts(uintid)publicviewreturns(uint16[3]memorycounts,uint16[3]memoryexCounts){Claimmemoryc=claims[id];return(c.counts,c.exCounts);}functioncallback(uintid)public{Claimstoragec=claims[id];require(c.randomness==0,\"can only callback once\");require(uint64(block.number)>c.commit,\"cannot callback before commit\");require(c.commit.add(uint64(256))>=block.number,\"must recommit\");bytes32bhash=blockhash(c.commit);require(uint(bhash)!=0,\"blockhash must not be zero\");c.randomness=uint(keccak256(abi.encodePacked(id,bhash,address(this))));emitCallbackMade(id,c.user,c.count,c.randomness);}functionrecommit(uintid)public{Claimstoragec=claims[id];require(c.randomness==0,\"randomness already set\");require(block.number>=c.commit.add(uint64(256)),\"no need to recommit\");c.commit=getCommitBlock();emitRecommit(id,c.user,c.count);}functionpredictPacks(uintid)externalviewreturns(uint16[]memoryprotos,uint16[]memorypurities){Claimmemoryc=claims[id];require(c.randomness!=0,\"randomness not yet set\");uintresult=c.randomness;uintcardCount=uint(c.count).mul(5);purities=newuint16[](cardCount);protos=newuint16[](cardCount);for(uinti=0;i<cardCount;i++){(protos[i],purities[i])=getCard(c,i,result);}return(protos,purities);}functiongetCommitBlock()internalviewreturns(uint64){returnuint64(block.number.add(commitLag));}functiongetStateSize(uintcount)publicpurereturns(uint){returncount.mul(5).sub(1).div(256).add(1);}functionisExclusive(uintpartType,uintpartSubType)publicpurereturns(bool){return(partType==3)&&(partSubType==14||partSubType==16);}functiongetCard(Claimmemoryc,uintindex,uintresult)internalviewreturns(uint16proto,uint16purity){RandomnessComponentsmemoryrc=getComponents(index,result);uint16progress=c.exCounts[0];if(progress>index){proto=exclusive;purity=_getPurityBase(rc.quality)+rc.purity;return(proto,purity);}progress+=c.exCounts[1];if(progress>index){proto=exclusive;purity=_getPurityBase(940)+rc.purity;return(proto,purity);}progress+=c.exCounts[2];if(progress>index){proto=exclusive;purity=_getPurityBase(990)+rc.purity;return(proto,purity);}progress+=c.counts[0];if(progress>index){proto=getRandomCard(rc.rarity,rc.proto);purity=_getPurityBase(rc.quality)+rc.purity;return(proto,purity);}progress+=c.counts[1];if(progress>index){proto=getRandomCard(rc.rarity,rc.proto);purity=_getPurityBase(940)+rc.purity;return(proto,purity);}progress+=c.counts[2];if(progress>index){proto=getRandomCard(rc.rarity,rc.proto);purity=_getPurityBase(990)+rc.purity;return(proto,purity);}proto=getRandomCard(rc.rarity,rc.proto);purity=_getPurityBase(rc.quality)+rc.purity;return(proto,purity);}functiongetRandomCard(uint32rarityRandom,uint16protoRandom)internalviewreturns(uint16){if(rarityRandom>=970000){returnlegendaries[protoRandom%legendaries.length];}elseif(rarityRandom>=890000){returnepics[protoRandom%epics.length];}elseif(rarityRandom>=670000){returnrares[protoRandom%rares.length];}else{returncommons[protoRandom%commons.length];}}functionactivateMultiple(uint[]memorypIDs,uint[]memorycardIndices)publicreturns(uint[]memoryids,uint16[]memoryprotos,uint16[]memorypurities){uintlen=pIDs.length;require(len>0,\"can't activate no cards\");require(len<=activationLimit,\"can't activate more than the activation limit\");require(len==cardIndices.length,\"must have the same length\");ids=newuint[](len);protos=newuint16[](len);purities=newuint16[](len);for(uinti=0;i<len;i++){(ids[i],protos[i],purities[i])=activate(pIDs[i],cardIndices[i]);}return(ids,protos,purities);}functionactivate(uintclaimID,uintcardIndex)publicreturns(uintid,uint16proto,uint16purity){Claimstoragec=claims[claimID];require(c.randomness!=0,\"must have been a callback\");uintcardCount=uint(c.count).mul(5);require(cardIndex<cardCount,\"not a valid card index\");uintbit=getStateBit(claimID,cardIndex);require(bit==0,\"card has already been activated\");uintx=cardIndex.div(256);uintpos=cardIndex%256;c.state[x]^=uint(1)<<pos;(proto,purity)=getCard(c,cardIndex,c.randomness);id=cards.createCard(c.user,proto,purity);emitCardActivated(claimID,cardIndex,id,proto,purity);return(id,proto,purity);}functionisActivated(uintpurchaseID,uintcardIndex)publicviewreturns(bool){returngetStateBit(purchaseID,cardIndex)!=0;}functiongetStateBit(uintclaimID,uintcardIndex)publicviewreturns(uint){Claimmemoryc=claims[claimID];uintx=cardIndex.div(256);uintslot=c.state[x];uintpos=cardIndex%256;uintbit=(slot>>pos)&uint(1);returnbit;}}"
    },
    {
      "name": "SOLIDITY_OVERPOWERED_ROLE",
      "patternId": "j83hf7",
      "severity": 2,
      "line": 414,
      "column": 4,
      "content": "functionsetCommitLag(uintlag)publiconlyOwner{require(commitLag<100,\"can't have a commit lag of >100 blocks\");commitLag=lag;}"
    },
    {
      "name": "SOLIDITY_OVERPOWERED_ROLE",
      "patternId": "j83hf7",
      "severity": 2,
      "line": 419,
      "column": 4,
      "content": "functionsetActivationLimit(uint16_limit)publiconlyOwner{activationLimit=_limit;}"
    },
    {
      "name": "SOLIDITY_OVERPOWERED_ROLE",
      "patternId": "j83hf7",
      "severity": 2,
      "line": 423,
      "column": 4,
      "content": "functionsetCanClaim(bool_can)publiconlyOwner{canClaim=_can;}"
    },
    {
      "name": "SOLIDITY_PRAGMAS_VERSION",
      "patternId": "23fc32",
      "severity": 1,
      "line": 1,
      "column": 16,
      "content": "^"
    },
    {
      "name": "SOLIDITY_SAFEMATH",
      "patternId": "837cac",
      "severity": 1,
      "line": 363,
      "column": 4,
      "content": "usingSafeMathforuint256;"
    },
    {
      "name": "SOLIDITY_SHOULD_RETURN_STRUCT",
      "patternId": "83hf3l",
      "severity": 1,
      "line": 99,
      "column": 48,
      "content": "(uint32tokenId,uint8partType,uint8partSubType,uint8rarity,uint8element,uint32battlesLastDay,uint32experience,uint32forgeTime,uint32battlesLastReset)"
    },
    {
      "name": "SOLIDITY_SHOULD_RETURN_STRUCT",
      "patternId": "83hf3l",
      "severity": 1,
      "line": 114,
      "column": 50,
      "content": "(address,uint,uint,uint,uint)"
    },
    {
      "name": "SOLIDITY_SHOULD_RETURN_STRUCT",
      "patternId": "83hf3l",
      "severity": 1,
      "line": 198,
      "column": 99,
      "content": "(uint16,uint16)"
    },
    {
      "name": "SOLIDITY_SHOULD_RETURN_STRUCT",
      "patternId": "83hf3l",
      "severity": 1,
      "line": 209,
      "column": 85,
      "content": "(uint16proto,uint16purity)"
    },
    {
      "name": "SOLIDITY_SHOULD_RETURN_STRUCT",
      "patternId": "83hf3l",
      "severity": 1,
      "line": 229,
      "column": 89,
      "content": "(uint16proto,uint16purity)"
    },
    {
      "name": "SOLIDITY_SHOULD_RETURN_STRUCT",
      "patternId": "83hf3l",
      "severity": 1,
      "line": 251,
      "column": 84,
      "content": "(uint16proto,uint16purity)"
    },
    {
      "name": "SOLIDITY_SHOULD_RETURN_STRUCT",
      "patternId": "83hf3l",
      "severity": 1,
      "line": 270,
      "column": 84,
      "content": "(uint16proto,uint16purity)"
    },
    {
      "name": "SOLIDITY_SHOULD_RETURN_STRUCT",
      "patternId": "83hf3l",
      "severity": 1,
      "line": 499,
      "column": 52,
      "content": "(uint16[3]memorycounts,uint16[3]memoryexCounts)"
    },
    {
      "name": "SOLIDITY_SHOULD_RETURN_STRUCT",
      "patternId": "83hf3l",
      "severity": 1,
      "line": 528,
      "column": 57,
      "content": "(uint16[]memoryprotos,uint16[]memorypurities)"
    },
    {
      "name": "SOLIDITY_SHOULD_RETURN_STRUCT",
      "patternId": "83hf3l",
      "severity": 1,
      "line": 561,
      "column": 84,
      "content": "(uint16proto,uint16purity)"
    },
    {
      "name": "SOLIDITY_SHOULD_RETURN_STRUCT",
      "patternId": "83hf3l",
      "severity": 1,
      "line": 633,
      "column": 23,
      "content": "(uint[]memoryids,uint16[]memoryprotos,uint16[]memorypurities)"
    },
    {
      "name": "SOLIDITY_SHOULD_RETURN_STRUCT",
      "patternId": "83hf3l",
      "severity": 1,
      "line": 647,
      "column": 67,
      "content": "(uintid,uint16proto,uint16purity)"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": 910067,
      "severity": 1,
      "line": 126,
      "column": 4,
      "content": "functionsetOwner(addresspayable"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 127,
      "column": 8,
      "content": "owner=_owner;"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 163,
      "column": 4,
      "content": "ICardscards;"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 376,
      "column": 4,
      "content": "uint16[]commons=[400,413,414,421,427,428];"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 378,
      "column": 4,
      "content": "uint16[]rares=[389,415,416,422];"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 380,
      "column": 4,
      "content": "uint16[]epics=[424,425,426];"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 382,
      "column": 4,
      "content": "uint16[]legendaries=[382,420];"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 384,
      "column": 4,
      "content": "uint16exclusive=417;"
    }
  ]
}