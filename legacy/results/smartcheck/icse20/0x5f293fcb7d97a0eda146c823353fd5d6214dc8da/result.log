/unique_chucks/28/0x5f293fcb7d97a0eda146c823353fd5d6214dc8da.sol
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_DIV_MUL
patternId: 09hhh1
severity: 2
line: 181
column: 15
content: (_fullAmount.div(10**(_shareExponent.add(2)))).mul(_shareMantissa)

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 138
column: 8
content: for(uinti=0;i<_destinations.length;i++){require(!isContract(_destinations[i]),"A contract may not be a destination address");sum=sum.add(_sharesMantissa[i]);distributions.push(Distribution(_destinations[i],_sharesMantissa[i]));}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 156
column: 8
content: for(uinti=0;i<distributions.length;i++){Distributionmemorydistribution=distributions[i];uintamount=calculatePayout(balance,distribution.mantissa,sharesExponent);distribution.destination.transfer(amount);emitFundsOperation(distribution.destination,amount,FundsOperationType.Outgoing);}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 9
column: 2
content: functioncreateClone(addresstarget)internalreturns(addressresult){bytesmemoryclone=hex"3d602d80600a3d3981f3363d3d373d3d3d363d73bebebebebebebebebebebebebebebebebebebebe5af43d82803e903d91602b57fd5bf3";bytes20targetBytes=bytes20(target);for(uinti=0;i<20;i++){clone[20+i]=targetBytes[i];}assembly{letlen:=mload(clone)letdata:=add(clone,0x20)result:=create(0,data,len)}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 138
column: 8
content: for(uinti=0;i<_destinations.length;i++){require(!isContract(_destinations[i]),"A contract may not be a destination address");sum=sum.add(_sharesMantissa[i]);distributions.push(Distribution(_destinations[i],_sharesMantissa[i]));}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 156
column: 8
content: for(uinti=0;i<distributions.length;i++){Distributionmemorydistribution=distributions[i];uintamount=calculatePayout(balance,distribution.mantissa,sharesExponent);distribution.destination.transfer(amount);emitFundsOperation(distribution.destination,amount,FundsOperationType.Outgoing);}

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 70
column: 4
content: usingSafeMathforuint;

ruleId: SOLIDITY_SHOULD_NOT_BE_VIEW
patternId: 189abf
severity: 1
line: 189
column: 4
content: functionisContract(address_addr)privateviewreturns(bool){uint32size;assembly{size:=extcodesize(_addr)}return(size>0);}

ruleId: SOLIDITY_TRANSFER_IN_LOOP
patternId: 8jdj43
severity: 2
line: 156
column: 8
content: for(uinti=0;i<distributions.length;i++){Distributionmemorydistribution=distributions[i];uintamount=calculatePayout(balance,distribution.mantissa,sharesExponent);distribution.destination.transfer(amount);emitFundsOperation(distribution.destination,amount,FundsOperationType.Outgoing);}

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 91h3sa
severity: 1
line: 110
column: 16
content: public

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 15
column: 4
content: assembly{letlen:=mload(clone)letdata:=add(clone,0x20)result:=create(0,data,len)}

SOLIDITY_SAFEMATH :1
SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN :1
SOLIDITY_EXTRA_GAS_IN_LOOPS :2
SOLIDITY_UPGRADE_TO_050 :1
SOLIDITY_GAS_LIMIT_IN_LOOPS :2
SOLIDITY_USING_INLINE_ASSEMBLY :1
SOLIDITY_DIV_MUL :1
SOLIDITY_TRANSFER_IN_LOOP :1
SOLIDITY_SHOULD_NOT_BE_VIEW :1