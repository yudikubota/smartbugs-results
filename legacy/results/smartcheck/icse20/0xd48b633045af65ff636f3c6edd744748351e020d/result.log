/unique_chucks/1/0xd48b633045af65ff636f3c6edd744748351e020d.sol
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: adc165
severity: 1
line: 210
column: 19
content: 0x4F4eBF556CFDc21c3424F85ff6572C77c514Fcae

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: adc165
severity: 1
line: 211
column: 19
content: 0x11e52c75998fe2E7928B191bfc5B25937Ca16741

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: adc165
severity: 1
line: 212
column: 19
content: 0x20C945800de43394F70D789874a4daC9cFA57451

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: adc165
severity: 1
line: 213
column: 19
content: 0xef764BAC8a438E7E498c2E5fcCf0f174c3E3F8dB

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: adc165
severity: 1
line: 214
column: 19
content: 0x8537aa2911b193e5B377938A723D805bb0865670

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: adc165
severity: 1
line: 215
column: 19
content: 0x9D221b2100CbE5F05a0d2048E2556a6Df6f9a6C3

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: adc165
severity: 1
line: 216
column: 19
content: 0xDa83156106c4dba7A26E9bF2Ca91E273350aa551

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: adc165
severity: 1
line: 217
column: 19
content: 0x71009e9E4e5e68e77ECc7ef2f2E95cbD98c6E696

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: adc165
severity: 1
line: 941
column: 25
content: 0x0000000000000000000000000000000000000000

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: c67a09
severity: 1
line: 331
column: 32
content: 0x0

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: c67a09
severity: 1
line: 333
column: 29
content: 0x0

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: c67a09
severity: 1
line: 351
column: 69
content: 0x0

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: c67a09
severity: 1
line: 386
column: 30
content: 0x0

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: c67a09
severity: 1
line: 1153
column: 34
content: 0x0

ruleId: SOLIDITY_DIV_MUL
patternId: 09hhh1
severity: 2
line: 954
column: 26
content: dividendTokensBought*(toTokenHolders*magnitude/(divTokenSupply))

ruleId: SOLIDITY_DIV_MUL
patternId: 09hhh1
severity: 2
line: 986
column: 13
content: _ethereumAmount.div(tokenPriceInitial_)*1e18

ruleId: SOLIDITY_DIV_MUL
patternId: 09hhh1
severity: 2
line: 1041
column: 40
content: toPowerOfThreeHalves(tokenSupply.div(MULTIPLIER*1e6)).mul(2)

ruleId: SOLIDITY_DIV_MUL
patternId: 09hhh1
severity: 2
line: 1049
column: 26
content: toPowerOfTwoThirds(simulatedEthBeforeInvested.mul(3).div(2)).mul(MULTIPLIER)

ruleId: SOLIDITY_DIV_MUL
patternId: 09hhh1
severity: 2
line: 1050
column: 26
content: toPowerOfTwoThirds(simulatedEthAfterInvested.mul(3).div(2)).mul(MULTIPLIER)

ruleId: SOLIDITY_DIV_MUL
patternId: 09hhh1
severity: 2
line: 1137
column: 30
content: toPowerOfThreeHalves(tokenSupply.div(MULTIPLIER*1e6)).mul(2)

ruleId: SOLIDITY_DIV_MUL
patternId: 09hhh1
severity: 2
line: 1138
column: 30
content: toPowerOfThreeHalves((tokenSupply-tokensToSellAtVariablePrice).div(MULTIPLIER*1e6)).mul(2)

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 47acc2
severity: 1
line: 239
column: 2
content: functionbuyAndSetDivPercentage(address_referredBy,uint8_divChoice,stringprovidedUnhashedPass)publicpayablereturns(uint){require(icoPhase||regularPhase);if(icoPhase){bytes32hashedProvidedPass=keccak256(providedUnhashedPass);require(hashedProvidedPass==icoHashedPass||msg.sender==bankrollAddress);uintgasPrice=tx.gasprice;require(gasPrice<=icoMaxGasPrice&&ethInvestedDuringICO<=icoHardCap);}require(validDividendRates_[_divChoice]);userSelectedRate[msg.sender]=true;userDividendRate[msg.sender]=_divChoice;emitUserDividendRate(msg.sender,_divChoice);purchaseTokens(msg.value,_referredBy);}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 47acc2
severity: 1
line: 274
column: 2
content: functionbuy(address_referredBy)publicpayablereturns(uint){require(regularPhase);address_customerAddress=msg.sender;require(userSelectedRate[_customerAddress]);purchaseTokens(msg.value,_referredBy);}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 47acc2
severity: 1
line: 845
column: 2
content: functionpurchaseTokens(uint_incomingEthereum,address_referredBy)internalreturns(uint){require(_incomingEthereum>=MIN_ETH_BUYIN||msg.sender==bankrollAddress,"Tried to buy below the min eth buyin threshold.");uinttoBankRoll;uinttoReferrer;uinttoTokenHolders;uinttoDivCardHolders;uintdividendAmount;uinttokensBought;uintdividendTokensBought;uintremainingEth=_incomingEthereum;uintfee;if(regularPhase){toDivCardHolders=_incomingEthereum.div(100);remainingEth=remainingEth.sub(toDivCardHolders);}uintdividendRate=userDividendRate[msg.sender];dividendAmount=(remainingEth.mul(dividendRate)).div(100);remainingEth=remainingEth.sub(dividendAmount);if(icoPhase&&msg.sender==bankrollAddress){remainingEth=remainingEth+dividendAmount;}tokensBought=ethereumToTokens_(remainingEth);dividendTokensBought=tokensBought.mul(dividendRate);tokenSupply=tokenSupply.add(tokensBought);divTokenSupply=divTokenSupply.add(dividendTokensBought);currentEthInvested=currentEthInvested+remainingEth;if(icoPhase){toBankRoll=dividendAmount;if(msg.sender==bankrollAddress){toBankRoll=0;}toReferrer=0;toTokenHolders=0;ethInvestedDuringICO=ethInvestedDuringICO+remainingEth;tokensMintedDuringICO=tokensMintedDuringICO+tokensBought;require(ethInvestedDuringICO<=icoHardCap);require(tx.origin==msg.sender||msg.sender==bankrollAddress);ICOBuyIn[msg.sender]+=remainingEth;require(ICOBuyIn[msg.sender]<=addressICOLimit||msg.sender==bankrollAddress);if(ethInvestedDuringICO==icoHardCap){icoPhase=false;}}else{if(_referredBy!=0x0000000000000000000000000000000000000000&&_referredBy!=msg.sender&&frontTokenBalanceLedger_[_referredBy]>=stakingRequirement){toReferrer=(dividendAmount.mul(referrer_percentage)).div(100);referralBalance_[_referredBy]+=toReferrer;emitReferral(_referredBy,toReferrer);}toTokenHolders=dividendAmount.sub(toReferrer);fee=toTokenHolders*magnitude;fee=fee-(fee-(dividendTokensBought*(toTokenHolders*magnitude/(divTokenSupply))));profitPerDivToken=profitPerDivToken.add((toTokenHolders.mul(magnitude)).div(divTokenSupply));payoutsTo_[msg.sender]+=(int256)((profitPerDivToken*dividendTokensBought)-fee);}frontTokenBalanceLedger_[msg.sender]=frontTokenBalanceLedger_[msg.sender].add(tokensBought);dividendTokenBalanceLedger_[msg.sender]=dividendTokenBalanceLedger_[msg.sender].add(dividendTokensBought);if(toBankRoll!=0){ZethrBankroll(bankrollAddress).receiveDividends.value(toBankRoll)();}if(regularPhase){divCardContract.receiveDividends.value(toDivCardHolders)(dividendRate);}emitAllocation(toBankRoll,toReferrer,toTokenHolders,toDivCardHolders,remainingEth);uintsum=toBankRoll+toReferrer+toTokenHolders+toDivCardHolders+remainingEth-_incomingEthereum;assert(sum==0);}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 47acc2
severity: 1
line: 1278
column: 2
content: functionownerOf(uint)publicpurereturns(address){}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: 17f23a
severity: 1
line: 1256
column: 11
content: z<y

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: 17f23a
severity: 1
line: 1265
column: 11
content: z<y

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 1277
column: 0
content: contractZethrDividendCards{functionownerOf(uint)publicpurereturns(address){}functionreceiveDividends(uint)publicpayable{}}

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 1282
column: 0
content: contractZethrBankroll{functionreceiveDividends()publicpayable{}}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: ^

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 1013
column: 11
content: if(currentEthInvested<ethInvestedDuringICO&&currentEthInvested+_ethereumAmount>ethInvestedDuringICO){ethTowardsICOPriceTokens=ethInvestedDuringICO.sub(currentEthInvested);ethTowardsVariablePriceTokens=_ethereumAmount.sub(ethTowardsICOPriceTokens);}else{revert();}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 1099
column: 11
content: if(tokenSupply>tokensMintedDuringICO&&tokenSupply-_tokens<tokensMintedDuringICO){tokensToSellAtVariablePrice=tokenSupply.sub(tokensMintedDuringICO);tokensToSellAtICOPrice=_tokens.sub(tokensToSellAtVariablePrice);}else{revert();}

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 45
column: 2
content: usingSafeMathforuint;

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 91h3sa
severity: 1
line: 320
column: 2
content: public

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 239
column: 73
content: stringprovidedUnhashedPass

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 293
column: 63
content: bytes_data

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 301
column: 63
content: bytes_data

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 507
column: 73
content: bytes_data

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 591
column: 19
content: string_name

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 598
column: 21
content: string_symbol

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1149
column: 89
content: bytes_data

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1288
column: 62
content: bytes_data

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 159
column: 2
content: ZethrDividendCardsdivCardContract;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 199
column: 2
content: uinticoOpenTime;

SOLIDITY_VISIBILITY :2
SOLIDITY_SAFEMATH :1
SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_REVERT_REQUIRE :2
SOLIDITY_LOCKED_MONEY :2
SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN :4
SOLIDITY_ADDRESS_HARDCODED :14
SOLIDITY_UPGRADE_TO_050 :9
SOLIDITY_GAS_LIMIT_IN_LOOPS :2
SOLIDITY_DIV_MUL :7