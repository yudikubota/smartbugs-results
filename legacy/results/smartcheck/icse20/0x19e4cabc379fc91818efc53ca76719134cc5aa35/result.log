/unique_chucks/47/0x19e4cabc379fc91818efc53ca76719134cc5aa35.sol
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ERC20_APPROVE
patternId: af782c
severity: 2
line: 105
column: 4
content: functionapprove(addressspender,uint256value)publicreturns(bool){require(spender!=address(0),"cannot approve to ZERO address");_allowed[msg.sender][spender]=value;emitApproval(msg.sender,spender,value);returntrue;}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 218
column: 8
content: for(uint256idx=0;idx<addressArr.length;idx++){_whiteList[addressArr[idx]]=statusArr[idx];}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 227
column: 8
content: for(uint256idx=0;idx<times.length;idx=idx+2){require(times[idx]<times[idx+1],"end time must be greater than start time");}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 238
column: 8
content: for(uint256idx=0;idx<_tradingOpenTime.length;idx=idx+2){if(now>_tradingOpenTime[idx]&&now<_tradingOpenTime[idx+1]){returntrue;}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 304
column: 8
content: for(uint256idx=0;idx<addressArr.length;idx++){require(transfer(addressArr[idx],valueArr[idx]));}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 47acc2
severity: 1
line: 312
column: 4
content: functionmint(addressaccount,uint256value)publiconlyOwnerreturns(bool){require(inWhiteList(account),"account is not in whiteList");_mint(account,value);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 218
column: 8
content: for(uint256idx=0;idx<addressArr.length;idx++){_whiteList[addressArr[idx]]=statusArr[idx];}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 227
column: 8
content: for(uint256idx=0;idx<times.length;idx=idx+2){require(times[idx]<times[idx+1],"end time must be greater than start time");}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 238
column: 8
content: for(uint256idx=0;idx<_tradingOpenTime.length;idx=idx+2){if(now>_tradingOpenTime[idx]&&now<_tradingOpenTime[idx+1]){returntrue;}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 304
column: 8
content: for(uint256idx=0;idx<addressArr.length;idx++){require(transfer(addressArr[idx],valueArr[idx]));}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 215
column: 4
content: functionsetWhiteList(address[]addressArr,bool[]statusArr)publiconlyOwner{require(addressArr.length==statusArr.length,"The length of address array is not equal to the length of status array!");for(uint256idx=0;idx<addressArr.length;idx++){_whiteList[addressArr[idx]]=statusArr[idx];}}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 224
column: 4
content: functionsetTradingTime(uint256[]times)publiconlyOwner{require(times.length.mod(2)==0,"the length of times must be even number");for(uint256idx=0;idx<times.length;idx=idx+2){require(times[idx]<times[idx+1],"end time must be greater than start time");}_tradingOpenTime=times;}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 251
column: 4
content: functionsetQuitLock(addressaccount)publiconlyOwner{require(inWhiteList(account),"account is not in whiteList");_quitLock[account]=true;}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: ^

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 84
column: 33
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 85
column: 54
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 86
column: 12
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 171
column: 11
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 172
column: 11
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 173
column: 10
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 175
column: 29
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 176
column: 14
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 177
column: 29
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 178
column: 29
content: private

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 82
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 180
column: 16
content: stringname

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 180
column: 29
content: stringsymbol

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 190
column: 41
content: string

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 194
column: 43
content: string

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 215
column: 26
content: address[]addressArr

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 215
column: 48
content: bool[]statusArr

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 224
column: 28
content: uint256[]times

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 233
column: 51
content: uint256[]

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 300
column: 42
content: address[]addressArr

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 300
column: 64
content: uint256[]valueArr

SOLIDITY_SAFEMATH :1
SOLIDITY_OVERPOWERED_ROLE :3
SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN :1
SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA :10
SOLIDITY_EXTRA_GAS_IN_LOOPS :4
SOLIDITY_UPGRADE_TO_050 :10
SOLIDITY_GAS_LIMIT_IN_LOOPS :4
SOLIDITY_ERC20_APPROVE :1