/unique_chucks/27/0x60fc18f243656532fce2265a5278d95cb3afa034.sol
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_BALANCE_EQUALITY
patternId: 5094ad
severity: 1
line: 760
column: 17
content: requests[_requestId].payee.balance==0

ruleId: SOLIDITY_BALANCE_EQUALITY
patternId: 5094ad
severity: 1
line: 764
column: 21
content: subPayees[_requestId][i].balance==0

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 316
column: 2
content: functionbalanceOf(addresswho)publicconstantreturns(uint256);

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 327
column: 2
content: functionallowance(addressowner,addressspender)publicconstantreturns(uint256);

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 639
column: 4
content: functiongetPayeeAddress(bytes32_requestId,uint8_payeeIndex)publicconstantreturns(address){if(_payeeIndex==0){returnrequests[_requestId].payee.addr;}else{returnsubPayees[_requestId][_payeeIndex-1].addr;}}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 656
column: 4
content: functiongetPayer(bytes32_requestId)publicconstantreturns(address){returnrequests[_requestId].payer;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 670
column: 4
content: functiongetPayeeExpectedAmount(bytes32_requestId,uint8_payeeIndex)publicconstantreturns(int256){if(_payeeIndex==0){returnrequests[_requestId].payee.expectedAmount;}else{returnsubPayees[_requestId][_payeeIndex-1].expectedAmount;}}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 687
column: 4
content: functiongetSubPayeesCount(bytes32_requestId)publicconstantreturns(uint8){for(uint8i=0;subPayees[_requestId][i].addr!=address(0);i=i.add(1)){}returni;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 703
column: 4
content: functiongetCurrencyContract(bytes32_requestId)publicconstantreturns(address){returnrequests[_requestId].currencyContract;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 717
column: 4
content: functiongetPayeeBalance(bytes32_requestId,uint8_payeeIndex)publicconstantreturns(int256){if(_payeeIndex==0){returnrequests[_requestId].payee.balance;}else{returnsubPayees[_requestId][_payeeIndex-1].balance;}}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 734
column: 4
content: functiongetBalance(bytes32_requestId)publicconstantreturns(int256){int256balance=requests[_requestId].payee.balance;for(uint8i=0;subPayees[_requestId][i].addr!=address(0);i=i.add(1)){balance=balance.add(subPayees[_requestId][i].balance);}returnbalance;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 755
column: 4
content: functionareAllBalanceNull(bytes32_requestId)publicconstantreturns(boolisNull){isNull=requests[_requestId].payee.balance==0;for(uint8i=0;isNull&&subPayees[_requestId][i].addr!=address(0);i=i.add(1)){isNull=subPayees[_requestId][i].balance==0;}returnisNull;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 775
column: 4
content: functiongetExpectedAmount(bytes32_requestId)publicconstantreturns(int256){int256expectedAmount=requests[_requestId].payee.expectedAmount;for(uint8i=0;subPayees[_requestId][i].addr!=address(0);i=i.add(1)){expectedAmount=expectedAmount.add(subPayees[_requestId][i].expectedAmount);}returnexpectedAmount;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 795
column: 4
content: functiongetState(bytes32_requestId)publicconstantreturns(State){returnrequests[_requestId].state;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 808
column: 4
content: functiongetPayeeIndex(bytes32_requestId,address_address)publicconstantreturns(int16){if(requests[_requestId].payee.addr==_address)return0;for(uint8i=0;subPayees[_requestId][i].addr!=address(0);i=i.add(1)){if(subPayees[_requestId][i].addr==_address){returni+1;}}return-1;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 831
column: 4
content: functiongetRequest(bytes32_requestId)externalconstantreturns(addresspayer,addresscurrencyContract,Statestate,addresspayeeAddr,int256payeeExpectedAmount,int256payeeBalance){Requeststorager=requests[_requestId];return(r.payer,r.currencyContract,r.state,r.payee.addr,r.payee.expectedAmount,r.payee.balance);}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 622
column: 8
content: for(uint8i=1;i<_payees.length;i=i.add(1)){require(_payees[i]!=0);subPayees[_requestId][i-1]=Payee(_payees[i],_expectedAmounts[i],0);NewSubPayee(_requestId,_payees[i]);}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 692
column: 8
content: for(uint8i=0;subPayees[_requestId][i].addr!=address(0);i=i.add(1)){}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 741
column: 8
content: for(uint8i=0;subPayees[_requestId][i].addr!=address(0);i=i.add(1)){balance=balance.add(subPayees[_requestId][i].balance);}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 762
column: 8
content: for(uint8i=0;isNull&&subPayees[_requestId][i].addr!=address(0);i=i.add(1)){isNull=subPayees[_requestId][i].balance==0;}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 782
column: 8
content: for(uint8i=0;subPayees[_requestId][i].addr!=address(0);i=i.add(1)){expectedAmount=expectedAmount.add(subPayees[_requestId][i].expectedAmount);}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 816
column: 8
content: for(uint8i=0;subPayees[_requestId][i].addr!=address(0);i=i.add(1)){if(subPayees[_requestId][i].addr==_address){returni+1;}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 1068
column: 8
content: for(uint8i=0;i<_expectedAmounts.length;i=i.add(1)){require(_expectedAmounts[i]>=0);totalExpectedAmounts=totalExpectedAmounts.add(_expectedAmounts[i]);}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 1120
column: 8
content: for(uint8i=0;i<_additionalAmounts.length;i=i.add(1)){if(_additionalAmounts[i]!=0){requestCore.updateExpectedAmount(_requestId,i,_additionalAmounts[i].toInt256Safe());}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 1140
column: 8
content: for(uint8i=0;i<_subtractAmounts.length;i=i.add(1)){if(_subtractAmounts[i]!=0){require(requestCore.getPayeeExpectedAmount(_requestId,i)>=_subtractAmounts[i].toInt256Safe());requestCore.updateExpectedAmount(_requestId,i,-_subtractAmounts[i].toInt256Safe());}}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 884
column: 4
content: functionextractAddress(bytes_data,uintoffset)internalpurereturns(addressm){require(offset>=0&&offset+20<=_data.length);assembly{m:=and(mload(add(_data,add(20,offset))),0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF)}}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 902
column: 4
content: functionextractBytes32(bytes_data,uintoffset)publicpurereturns(bytes32bs){require(offset>=0&&offset+32<=_data.length);assembly{bs:=mload(add(_data,add(32,offset)))}}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 1538
column: 4
content: functionextractAddress(bytes_data,uintoffset)internalpurereturns(addressm){require(offset>=0&&offset+20<=_data.length);assembly{m:=and(mload(add(_data,add(20,offset))),0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF)}}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 1556
column: 4
content: functionextractBytes32(bytes_data,uintoffset)publicpurereturns(bytes32bs){require(offset>=0&&offset+32<=_data.length);assembly{bs:=mload(add(_data,add(32,offset)))}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 1068
column: 8
content: for(uint8i=0;i<_expectedAmounts.length;i=i.add(1)){require(_expectedAmounts[i]>=0);totalExpectedAmounts=totalExpectedAmounts.add(_expectedAmounts[i]);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 1120
column: 8
content: for(uint8i=0;i<_additionalAmounts.length;i=i.add(1)){if(_additionalAmounts[i]!=0){requestCore.updateExpectedAmount(_requestId,i,_additionalAmounts[i].toInt256Safe());}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 1140
column: 8
content: for(uint8i=0;i<_subtractAmounts.length;i=i.add(1)){if(_subtractAmounts[i]!=0){require(requestCore.getPayeeExpectedAmount(_requestId,i)>=_subtractAmounts[i].toInt256Safe());requestCore.updateExpectedAmount(_requestId,i,-_subtractAmounts[i].toInt256Safe());}}

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 1183
column: 0
content: contractRequestBitcoinNodesValidationisRequestCurrencyContractInterface{usingSafeMathforuint256;usingSafeMathIntforint256;usingSafeMathUint8foruint8;mapping(bytes32=>string[256])publicpayeesPaymentAddress;mapping(bytes32=>string[256])publicpayerRefundAddress;functionRequestBitcoinNodesValidation(address_requestCoreAddress,address_requestBurnerAddress)RequestCurrencyContractInterface(_requestCoreAddress,_requestBurnerAddress)public{}functioncreateRequestAsPayeeAction(address[]_payeesIdAddress,bytes_payeesPaymentAddress,int256[]_expectedAmounts,address_payer,bytes_payerRefundAddress,string_data)externalpayablewhenNotPausedreturns(bytes32requestId){require(msg.sender==_payeesIdAddress[0]&&msg.sender!=_payer&&_payer!=0);int256totalExpectedAmounts;(requestId,totalExpectedAmounts)=createCoreRequestInternal(_payer,_payeesIdAddress,_expectedAmounts,_data);uint256fees=collectEstimation(totalExpectedAmounts);require(fees==msg.value&&collectForREQBurning(fees));extractAndStoreBitcoinAddresses(requestId,_payeesIdAddress.length,_payeesPaymentAddress,_payerRefundAddress);returnrequestId;}functionextractAndStoreBitcoinAddresses(bytes32_requestId,uint256_payeesCount,bytes_payeesPaymentAddress,bytes_payerRefundAddress)internal{uint256cursor=0;uint8sizeCurrentBitcoinAddress;uint8j;for(j=0;j<_payeesCount;j=j.add(1)){sizeCurrentBitcoinAddress=uint8(_payeesPaymentAddress[cursor]);payeesPaymentAddress[_requestId][j]=extractString(_payeesPaymentAddress,sizeCurrentBitcoinAddress,++cursor);cursor+=sizeCurrentBitcoinAddress;}cursor=0;for(j=0;j<_payeesCount;j=j.add(1)){sizeCurrentBitcoinAddress=uint8(_payerRefundAddress[cursor]);payerRefundAddress[_requestId][j]=extractString(_payerRefundAddress,sizeCurrentBitcoinAddress,++cursor);cursor+=sizeCurrentBitcoinAddress;}}functionbroadcastSignedRequestAsPayerAction(bytes_requestData,bytes_payeesPaymentAddress,bytes_payerRefundAddress,uint256[]_additionals,uint256_expirationDate,bytes_signature)externalpayablewhenNotPausedreturns(bytes32requestId){require(_expirationDate>=block.timestamp);require(checkRequestSignature(_requestData,_payeesPaymentAddress,_expirationDate,_signature));returncreateAcceptAndAdditionalsFromBytes(_requestData,_payeesPaymentAddress,_payerRefundAddress,_additionals);}functioncreateAcceptAndAdditionalsFromBytes(bytes_requestData,bytes_payeesPaymentAddress,bytes_payerRefundAddress,uint256[]_additionals)internalreturns(bytes32requestId){addressmainPayee=extractAddress(_requestData,41);require(msg.sender!=mainPayee&&mainPayee!=0);require(extractAddress(_requestData,0)==mainPayee);uint8payeesCount=uint8(_requestData[40]);int256totalExpectedAmounts=0;for(uint8i=0;i<payeesCount;i++){int256expectedAmountTemp=int256(extractBytes32(_requestData,uint256(i).mul(52).add(61)));totalExpectedAmounts=totalExpectedAmounts.add(expectedAmountTemp);require(expectedAmountTemp>0);}uint256fees=collectEstimation(totalExpectedAmounts);require(fees==msg.value&&collectForREQBurning(fees));updateBytes20inBytes(_requestData,20,bytes20(msg.sender));requestId=requestCore.createRequestFromBytes(_requestData);extractAndStoreBitcoinAddresses(requestId,payeesCount,_payeesPaymentAddress,_payerRefundAddress);acceptAndAdditionals(requestId,_additionals);returnrequestId;}functionacceptAndAdditionals(bytes32_requestId,uint256[]_additionals)internal{acceptAction(_requestId);additionalAction(_requestId,_additionals);}functioncheckRequestSignature(bytes_requestData,bytes_payeesPaymentAddress,uint256_expirationDate,bytes_signature)publicviewreturns(bool){bytes32hash=getRequestHash(_requestData,_payeesPaymentAddress,_expirationDate);uint8v=uint8(_signature[64]);v=v<27?v.add(27):v;bytes32r=extractBytes32(_signature,0);bytes32s=extractBytes32(_signature,32);returnisValidSignature(extractAddress(_requestData,0),hash,v,r,s);}functiongetRequestHash(bytes_requestData,bytes_payeesPaymentAddress,uint256_expirationDate)internalviewreturns(bytes32){returnkeccak256(this,_requestData,_payeesPaymentAddress,_expirationDate);}functionisValidSignature(addresssigner,bytes32hash,uint8v,bytes32r,bytes32s)publicpurereturns(bool){returnsigner==ecrecover(keccak256("\x19Ethereum Signed Message:\n32",hash),v,r,s);}functionextractAddress(bytes_data,uintoffset)internalpurereturns(addressm){require(offset>=0&&offset+20<=_data.length);assembly{m:=and(mload(add(_data,add(20,offset))),0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF)}}functionextractBytes32(bytes_data,uintoffset)publicpurereturns(bytes32bs){require(offset>=0&&offset+32<=_data.length);assembly{bs:=mload(add(_data,add(32,offset)))}}functionupdateBytes20inBytes(bytesdata,uintoffset,bytes20b)internalpure{require(offset>=0&&offset+20<=data.length);assembly{letm:=mload(add(data,add(20,offset)))m:=and(m,0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000)m:=or(m,div(b,0x1000000000000000000000000))mstore(add(data,add(20,offset)),m)}}functionextractString(bytesdata,uint8size,uint_offset)internalpurereturns(string){bytesmemorybytesString=newbytes(size);for(uintj=0;j<size;j++){bytesString[j]=data[_offset+j];}returnstring(bytesString);}}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 996
column: 2
content: functionsetRateFees(uint256_rateFeesNumerator,uint256_rateFeesDenominator)externalonlyOwner{rateFeesNumerator=_rateFeesNumerator;rateFeesDenominator=_rateFeesDenominator;UpdateRateFees(rateFeesNumerator,rateFeesDenominator);}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 1009
column: 2
content: functionsetMaxCollectable(uint256_newMaxFees)externalonlyOwner{maxFees=_newMaxFees;UpdateMaxFees(maxFees);}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 1021
column: 2
content: functionsetRequestBurnerContract(address_requestBurnerContract)externalonlyOwner{requestBurnerContract=_requestBurnerContract;}

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 347
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 932
column: 2
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 1040
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 1184
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 884
column: 4
content: functionextractAddress(bytes_data,uintoffset)internalpurereturns(addressm){require(offset>=0&&offset+20<=_data.length);assembly{m:=and(mload(add(_data,add(20,offset))),0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF)}}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 902
column: 4
content: functionextractBytes32(bytes_data,uintoffset)publicpurereturns(bytes32bs){require(offset>=0&&offset+32<=_data.length);assembly{bs:=mload(add(_data,add(32,offset)))}}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 1538
column: 4
content: functionextractAddress(bytes_data,uintoffset)internalpurereturns(addressm){require(offset>=0&&offset+20<=_data.length);assembly{m:=and(mload(add(_data,add(20,offset))),0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF)}}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 1556
column: 4
content: functionextractBytes32(bytes_data,uintoffset)publicpurereturns(bytes32bs){require(offset>=0&&offset+32<=_data.length);assembly{bs:=mload(add(_data,add(32,offset)))}}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 1574
column: 4
content: functionupdateBytes20inBytes(bytesdata,uintoffset,bytes20b)internalpure{require(offset>=0&&offset+20<=data.length);assembly{letm:=mload(add(data,add(20,offset)))m:=and(m,0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000)m:=or(m,div(b,0x1000000000000000000000000))mstore(add(data,add(20,offset)),m)}}

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 7d54ca
severity: 1
line: 1065
column: 15
content: (bytes32requestId,int256totalExpectedAmounts)

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 901eae
severity: 1
line: 1502
column: 15
content: keccak256(this,_requestData,_payeesPaymentAddress,_expirationDate)

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 901eae
severity: 1
line: 1525
column: 12
content: keccak256("\x19Ethereum Signed Message:\n32",hash)

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 617
column: 47
content: address[]_payees

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 617
column: 66
content: int256[]_expectedAmounts

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 852
column: 27
content: bytesdata

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 855
column: 17
content: string

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 884
column: 28
content: bytes_data

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 902
column: 28
content: bytes_data

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1060
column: 8
content: address[]_payeesIdAddress

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1061
column: 8
content: int256[]_expectedAmounts

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1062
column: 8
content: string_data

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1108
column: 50
content: uint256[]_additionalAmounts

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1129
column: 48
content: uint256[]_subtractAmounts

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1285
column: 8
content: bytes_payeesPaymentAddress

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1286
column: 8
content: bytes_payerRefundAddress

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1381
column: 8
content: bytes_requestData

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1382
column: 8
content: bytes_payeesPaymentAddress

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1383
column: 8
content: bytes_payerRefundAddress

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1384
column: 8
content: uint256[]_additionals

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1434
column: 8
content: uint256[]_additionals

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1465
column: 8
content: bytes_requestData

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1466
column: 8
content: bytes_payeesPaymentAddress

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1468
column: 8
content: bytes_signature

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1495
column: 8
content: bytes_requestData

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1496
column: 8
content: bytes_payeesPaymentAddress

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1538
column: 28
content: bytes_data

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1556
column: 28
content: bytes_data

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1574
column: 34
content: bytesdata

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1594
column: 27
content: bytesdata

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1597
column: 17
content: string

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 890
column: 8
content: assembly{m:=and(mload(add(_data,add(20,offset))),0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 908
column: 8
content: assembly{bs:=mload(add(_data,add(32,offset)))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 1544
column: 8
content: assembly{m:=and(mload(add(_data,add(20,offset))),0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 1562
column: 8
content: assembly{bs:=mload(add(_data,add(32,offset)))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 1579
column: 8
content: assembly{letm:=mload(add(data,add(20,offset)))m:=and(m,0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000)m:=or(m,div(b,0x1000000000000000000000000))mstore(add(data,add(20,offset)),m)}

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 390
column: 4
content: mapping(bytes32=>Request)requests;

SOLIDITY_VISIBILITY :1
SOLIDITY_SAFEMATH :4
SOLIDITY_OVERPOWERED_ROLE :3
SOLIDITY_DEPRECATED_CONSTRUCTIONS :14
SOLIDITY_LOCKED_MONEY :1
SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN :4
SOLIDITY_EXTRA_GAS_IN_LOOPS :9
SOLIDITY_UPGRADE_TO_050 :30
SOLIDITY_GAS_LIMIT_IN_LOOPS :3
SOLIDITY_USING_INLINE_ASSEMBLY :5
SOLIDITY_SHOULD_RETURN_STRUCT :1
SOLIDITY_BALANCE_EQUALITY :2
SOLIDITY_SHOULD_NOT_BE_PURE :5