/unique_chucks/29/0xec200345f7e2991bcead2d299902e1380f902dca.sol
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 2052
column: 32
content: makerAddress==msg.sender?address(0):msg.sender

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 3281
column: 12
content: currentContextAddress=address(0)

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 572
column: 9
content: private

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 2616
column: 8
content: if(signatureType==SignatureType.Illegal){revert("SIGNATURE_ILLEGAL");}elseif(signatureType==SignatureType.Invalid){require(signature.length==0,"LENGTH_0_REQUIRED");isValid=false;returnisValid;}elseif(signatureType==SignatureType.EIP712){require(signature.length==65,"LENGTH_65_REQUIRED");v=uint8(signature[0]);r=signature.readBytes32(1);s=signature.readBytes32(33);recovered=ecrecover(hash,v,r,s);isValid=signerAddress==recovered;returnisValid;}elseif(signatureType==SignatureType.EthSign){require(signature.length==65,"LENGTH_65_REQUIRED");v=uint8(signature[0]);r=signature.readBytes32(1);s=signature.readBytes32(33);recovered=ecrecover(keccak256(abi.encodePacked("\x19Ethereum Signed Message:\n32",hash)),v,r,s);isValid=signerAddress==recovered;returnisValid;}elseif(signatureType==SignatureType.Wallet){isValid=isValidWalletSignature(hash,signerAddress,signature);returnisValid;}elseif(signatureType==SignatureType.Validator){addressvalidatorAddress=signature.popLast20Bytes();if(!allowedValidators[signerAddress][validatorAddress]){returnfalse;}isValid=isValidValidatorSignature(validatorAddress,hash,signerAddress,signature);returnisValid;}elseif(signatureType==SignatureType.PreSigned){isValid=preSigned[hash][signerAddress];returnisValid;}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 31
column: 4
content: functionrawAddress(bytesmemoryinput)internalpurereturns(uint256memoryAddress){assembly{memoryAddress:=input}returnmemoryAddress;}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 45
column: 4
content: functioncontentAddress(bytesmemoryinput)internalpurereturns(uint256memoryAddress){assembly{memoryAddress:=add(input,32)}returnmemoryAddress;}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 60
column: 4
content: functionmemCopy(uint256dest,uint256source,uint256length)internalpure{if(length<32){assembly{letmask:=sub(exp(256,sub(32,length)),1)lets:=and(mload(source),not(mask))letd:=and(mload(dest),mask)mstore(dest,or(s,d))}}else{if(source==dest){return;}if(source>dest){assembly{length:=sub(length,32)letsEnd:=add(source,length)letdEnd:=add(dest,length)letlast:=mload(sEnd)for{}lt(source,sEnd){}{mstore(dest,mload(source))source:=add(source,32)dest:=add(dest,32)}mstore(dEnd,last)}}else{assembly{length:=sub(length,32)letsEnd:=add(source,length)letdEnd:=add(dest,length)letfirst:=mload(source)for{}slt(dest,dEnd){}{mstore(dEnd,mload(sEnd))sEnd:=sub(sEnd,32)dEnd:=sub(dEnd,32)}mstore(dest,first)}}}}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 202
column: 4
content: functionsliceDestructive(bytesmemoryb,uint256from,uint256to)internalpurereturns(bytesmemoryresult){require(from<=to,"FROM_LESS_THAN_TO_REQUIRED");require(to<b.length,"TO_LESS_THAN_LENGTH_REQUIRED");assembly{result:=add(b,from)mstore(result,sub(to,from))}returnresult;}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 231
column: 4
content: functionpopLastByte(bytesmemoryb)internalpurereturns(bytes1result){require(b.length>0,"GREATER_THAN_ZERO_LENGTH_REQUIRED");result=b[b.length-1];assembly{letnewLen:=sub(mload(b),1)mstore(b,newLen)}returnresult;}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 255
column: 4
content: functionpopLast20Bytes(bytesmemoryb)internalpurereturns(addressresult){require(b.length>=20,"GREATER_OR_EQUAL_TO_20_LENGTH_REQUIRED");result=readAddress(b,b.length-20);assembly{letnewLen:=sub(mload(b),20)mstore(b,newLen)}returnresult;}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 298
column: 4
content: functionreadAddress(bytesmemoryb,uint256index)internalpurereturns(addressresult){require(b.length>=index+20,"GREATER_OR_EQUAL_TO_20_LENGTH_REQUIRED");index+=20;assembly{result:=and(mload(add(b,index)),0xffffffffffffffffffffffffffffffffffffffff)}returnresult;}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 330
column: 4
content: functionwriteAddress(bytesmemoryb,uint256index,addressinput)internalpure{require(b.length>=index+20,"GREATER_OR_EQUAL_TO_20_LENGTH_REQUIRED");index+=20;assembly{letneighbors:=and(mload(add(b,index)),0xffffffffffffffffffffffff0000000000000000000000000000000000000000)input:=and(input,0xffffffffffffffffffffffffffffffffffffffff)mstore(add(b,index),xor(input,neighbors))}}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 376
column: 4
content: functionreadBytes32(bytesmemoryb,uint256index)internalpurereturns(bytes32result){require(b.length>=index+32,"GREATER_OR_EQUAL_TO_32_LENGTH_REQUIRED");index+=32;assembly{result:=mload(add(b,index))}returnresult;}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 403
column: 4
content: functionwriteBytes32(bytesmemoryb,uint256index,bytes32input)internalpure{require(b.length>=index+32,"GREATER_OR_EQUAL_TO_32_LENGTH_REQUIRED");index+=32;assembly{mstore(add(b,index),input)}}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 460
column: 4
content: functionreadBytes4(bytesmemoryb,uint256index)internalpurereturns(bytes4result){require(b.length>=index+4,"GREATER_OR_EQUAL_TO_4_LENGTH_REQUIRED");index+=32;assembly{result:=mload(add(b,index))result:=and(result,0xFFFFFFFF00000000000000000000000000000000000000000000000000000000)}returnresult;}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 492
column: 4
content: functionreadBytesWithLength(bytesmemoryb,uint256index)internalpurereturns(bytesmemoryresult){uint256nestedBytesLength=readUint256(b,index);index+=32;require(b.length>=index+nestedBytesLength,"GREATER_OR_EQUAL_TO_NESTED_BYTES_LENGTH_REQUIRED");assembly{result:=add(b,index)}returnresult;}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 1088
column: 4
content: functionhashOrder(Ordermemoryorder)internalpurereturns(bytes32result){bytes32schemaHash=EIP712_ORDER_SCHEMA_HASH;bytes32makerAssetDataHash=keccak256(order.makerAssetData);bytes32takerAssetDataHash=keccak256(order.takerAssetData);assembly{letpos1:=sub(order,32)letpos2:=add(order,320)letpos3:=add(order,352)lettemp1:=mload(pos1)lettemp2:=mload(pos2)lettemp3:=mload(pos3)mstore(pos1,schemaHash)mstore(pos2,makerAssetDataHash)mstore(pos3,takerAssetDataHash)result:=keccak256(pos1,416)mstore(pos1,temp1)mstore(pos2,temp2)mstore(pos3,temp3)}returnresult;}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 1147
column: 4
content: functionabiEncodeFillOrder(LibOrder.Ordermemoryorder,uint256takerAssetFillAmount,bytesmemorysignature)internalpurereturns(bytesmemoryfillOrderCalldata){assembly{fillOrderCalldata:=mload(0x40)mstore(add(fillOrderCalldata,0x20),0xb4be83d500000000000000000000000000000000000000000000000000000000)letheaderAreaEnd:=add(fillOrderCalldata,0x24)letparamsAreaStart:=headerAreaEndletparamsAreaEnd:=add(paramsAreaStart,0x60)letparamsAreaOffset:=paramsAreaStartletdataAreaStart:=paramsAreaEndletdataAreaEnd:=dataAreaStartletsourceOffset:=orderletarrayLenBytes:=0letarrayLenWords:=0mstore(paramsAreaOffset,sub(dataAreaEnd,paramsAreaStart))paramsAreaOffset:=add(paramsAreaOffset,0x20)mstore(dataAreaEnd,mload(sourceOffset))mstore(add(dataAreaEnd,0x20),mload(add(sourceOffset,0x20)))mstore(add(dataAreaEnd,0x40),mload(add(sourceOffset,0x40)))mstore(add(dataAreaEnd,0x60),mload(add(sourceOffset,0x60)))mstore(add(dataAreaEnd,0x80),mload(add(sourceOffset,0x80)))mstore(add(dataAreaEnd,0xA0),mload(add(sourceOffset,0xA0)))mstore(add(dataAreaEnd,0xC0),mload(add(sourceOffset,0xC0)))mstore(add(dataAreaEnd,0xE0),mload(add(sourceOffset,0xE0)))mstore(add(dataAreaEnd,0x100),mload(add(sourceOffset,0x100)))mstore(add(dataAreaEnd,0x120),mload(add(sourceOffset,0x120)))mstore(add(dataAreaEnd,0x140),mload(add(sourceOffset,0x140)))mstore(add(dataAreaEnd,0x160),mload(add(sourceOffset,0x160)))dataAreaEnd:=add(dataAreaEnd,0x180)sourceOffset:=add(sourceOffset,0x180)mstore(add(dataAreaStart,mul(10,0x20)),sub(dataAreaEnd,dataAreaStart))sourceOffset:=mload(add(order,0x140))arrayLenBytes:=mload(sourceOffset)sourceOffset:=add(sourceOffset,0x20)arrayLenWords:=div(add(arrayLenBytes,0x1F),0x20)mstore(dataAreaEnd,arrayLenBytes)dataAreaEnd:=add(dataAreaEnd,0x20)for{leti:=0}lt(i,arrayLenWords){i:=add(i,1)}{mstore(dataAreaEnd,mload(sourceOffset))dataAreaEnd:=add(dataAreaEnd,0x20)sourceOffset:=add(sourceOffset,0x20)}mstore(add(dataAreaStart,mul(11,0x20)),sub(dataAreaEnd,dataAreaStart))sourceOffset:=mload(add(order,0x160))arrayLenBytes:=mload(sourceOffset)sourceOffset:=add(sourceOffset,0x20)arrayLenWords:=div(add(arrayLenBytes,0x1F),0x20)mstore(dataAreaEnd,arrayLenBytes)dataAreaEnd:=add(dataAreaEnd,0x20)for{leti:=0}lt(i,arrayLenWords){i:=add(i,1)}{mstore(dataAreaEnd,mload(sourceOffset))dataAreaEnd:=add(dataAreaEnd,0x20)sourceOffset:=add(sourceOffset,0x20)}mstore(paramsAreaOffset,takerAssetFillAmount)paramsAreaOffset:=add(paramsAreaOffset,0x20)mstore(paramsAreaOffset,sub(dataAreaEnd,paramsAreaStart))sourceOffset:=signaturearrayLenBytes:=mload(sourceOffset)sourceOffset:=add(sourceOffset,0x20)arrayLenWords:=div(add(arrayLenBytes,0x1F),0x20)mstore(dataAreaEnd,arrayLenBytes)dataAreaEnd:=add(dataAreaEnd,0x20)for{leti:=0}lt(i,arrayLenWords){i:=add(i,1)}{mstore(dataAreaEnd,mload(sourceOffset))dataAreaEnd:=add(dataAreaEnd,0x20)sourceOffset:=add(sourceOffset,0x20)}mstore(fillOrderCalldata,sub(dataAreaEnd,add(fillOrderCalldata,0x20)))mstore(0x40,dataAreaEnd)}returnfillOrderCalldata;}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 3290
column: 4
content: functionhashZeroExTransaction(uint256salt,addresssignerAddress,bytesmemorydata)internalpurereturns(bytes32result){bytes32schemaHash=EIP712_ZEROEX_TRANSACTION_SCHEMA_HASH;bytes32dataHash=keccak256(data);assembly{letmemPtr:=mload(64)mstore(memPtr,schemaHash)mstore(add(memPtr,32),salt)mstore(add(memPtr,64),and(signerAddress,0xffffffffffffffffffffffffffffffffffffffff))mstore(add(memPtr,96),dataHash)result:=keccak256(memPtr,128)}returnresult;}

ruleId: SOLIDITY_SHOULD_NOT_BE_VIEW
patternId: 189abf
severity: 1
line: 726
column: 4
content: functionhashEIP712Message(bytes32hashStruct)internalviewreturns(bytes32result){bytes32eip712DomainHash=EIP712_DOMAIN_HASH;assembly{letmemPtr:=mload(64)mstore(memPtr,0x1901000000000000000000000000000000000000000000000000000000000000)mstore(add(memPtr,2),eip712DomainHash)mstore(add(memPtr,34),hashStruct)result:=keccak256(memPtr,66)}returnresult;}

ruleId: SOLIDITY_SHOULD_NOT_BE_VIEW
patternId: 189abf
severity: 1
line: 2723
column: 4
content: functionisValidWalletSignature(bytes32hash,addresswalletAddress,bytessignature)internalviewreturns(boolisValid){bytesmemorycalldata=abi.encodeWithSelector(IWallet(walletAddress).isValidSignature.selector,hash,signature);assembly{letcdStart:=add(calldata,32)letsuccess:=staticcall(gas,walletAddress,cdStart,mload(calldata),cdStart,32)switchsuccesscase0{mstore(0,0x08c379a000000000000000000000000000000000000000000000000000000000)mstore(32,0x0000002000000000000000000000000000000000000000000000000000000000)mstore(64,0x0000000c57414c4c45545f4552524f5200000000000000000000000000000000)mstore(96,0)revert(0,100)}case1{isValid:=mload(cdStart)}}returnisValid;}

ruleId: SOLIDITY_SHOULD_NOT_BE_VIEW
patternId: 189abf
severity: 1
line: 2771
column: 4
content: functionisValidValidatorSignature(addressvalidatorAddress,bytes32hash,addresssignerAddress,bytessignature)internalviewreturns(boolisValid){bytesmemorycalldata=abi.encodeWithSelector(IValidator(signerAddress).isValidSignature.selector,hash,signerAddress,signature);assembly{letcdStart:=add(calldata,32)letsuccess:=staticcall(gas,validatorAddress,cdStart,mload(calldata),cdStart,32)switchsuccesscase0{mstore(0,0x08c379a000000000000000000000000000000000000000000000000000000000)mstore(32,0x0000002000000000000000000000000000000000000000000000000000000000)mstore(64,0x0000000f56414c494441544f525f4552524f5200000000000000000000000000)mstore(96,0)revert(0,100)}case1{isValid:=mload(cdStart)}}returnisValid;}

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1916
column: 8
content: bytessignature

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1932
column: 8
content: bytessignature

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 2726
column: 8
content: bytessignature

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 2775
column: 8
content: bytessignature

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 36
column: 8
content: assembly{memoryAddress:=input}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 50
column: 8
content: assembly{memoryAddress:=add(input,32)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 72
column: 12
content: assembly{letmask:=sub(exp(256,sub(32,length)),1)lets:=and(mload(source),not(mask))letd:=and(mload(dest),mask)mstore(dest,or(s,d))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 100
column: 16
content: assembly{length:=sub(length,32)letsEnd:=add(source,length)letdEnd:=add(dest,length)letlast:=mload(sEnd)for{}lt(source,sEnd){}{mstore(dest,mload(source))source:=add(source,32)dest:=add(dest,32)}mstore(dEnd,last)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 129
column: 16
content: assembly{length:=sub(length,32)letsEnd:=add(source,length)letdEnd:=add(dest,length)letfirst:=mload(source)for{}slt(dest,dEnd){}{mstore(dEnd,mload(sEnd))sEnd:=sub(sEnd,32)dEnd:=sub(dEnd,32)}mstore(dest,first)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 221
column: 8
content: assembly{result:=add(b,from)mstore(result,sub(to,from))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 244
column: 8
content: assembly{letnewLen:=sub(mload(b),1)mstore(b,newLen)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 268
column: 8
content: assembly{letnewLen:=sub(mload(b),20)mstore(b,newLen)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 317
column: 8
content: assembly{result:=and(mload(add(b,index)),0xffffffffffffffffffffffffffffffffffffffff)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 349
column: 8
content: assembly{letneighbors:=and(mload(add(b,index)),0xffffffffffffffffffffffff0000000000000000000000000000000000000000)input:=and(input,0xffffffffffffffffffffffffffffffffffffffff)mstore(add(b,index),xor(input,neighbors))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 393
column: 8
content: assembly{result:=mload(add(b,index))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 420
column: 8
content: assembly{mstore(add(b,index),input)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 477
column: 8
content: assembly{result:=mload(add(b,index))result:=and(result,0xFFFFFFFF00000000000000000000000000000000000000000000000000000000)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 512
column: 8
content: assembly{result:=add(b,index)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 740
column: 8
content: assembly{letmemPtr:=mload(64)mstore(memPtr,0x1901000000000000000000000000000000000000000000000000000000000000)mstore(add(memPtr,2),eip712DomainHash)mstore(add(memPtr,34),hashStruct)result:=keccak256(memPtr,66)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 1114
column: 8
content: assembly{letpos1:=sub(order,32)letpos2:=add(order,320)letpos3:=add(order,352)lettemp1:=mload(pos1)lettemp2:=mload(pos2)lettemp3:=mload(pos3)mstore(pos1,schemaHash)mstore(pos2,makerAssetDataHash)mstore(pos3,takerAssetDataHash)result:=keccak256(pos1,416)mstore(pos1,temp1)mstore(pos2,temp2)mstore(pos3,temp3)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 1195
column: 8
content: assembly{fillOrderCalldata:=mload(0x40)mstore(add(fillOrderCalldata,0x20),0xb4be83d500000000000000000000000000000000000000000000000000000000)letheaderAreaEnd:=add(fillOrderCalldata,0x24)letparamsAreaStart:=headerAreaEndletparamsAreaEnd:=add(paramsAreaStart,0x60)letparamsAreaOffset:=paramsAreaStartletdataAreaStart:=paramsAreaEndletdataAreaEnd:=dataAreaStartletsourceOffset:=orderletarrayLenBytes:=0letarrayLenWords:=0mstore(paramsAreaOffset,sub(dataAreaEnd,paramsAreaStart))paramsAreaOffset:=add(paramsAreaOffset,0x20)mstore(dataAreaEnd,mload(sourceOffset))mstore(add(dataAreaEnd,0x20),mload(add(sourceOffset,0x20)))mstore(add(dataAreaEnd,0x40),mload(add(sourceOffset,0x40)))mstore(add(dataAreaEnd,0x60),mload(add(sourceOffset,0x60)))mstore(add(dataAreaEnd,0x80),mload(add(sourceOffset,0x80)))mstore(add(dataAreaEnd,0xA0),mload(add(sourceOffset,0xA0)))mstore(add(dataAreaEnd,0xC0),mload(add(sourceOffset,0xC0)))mstore(add(dataAreaEnd,0xE0),mload(add(sourceOffset,0xE0)))mstore(add(dataAreaEnd,0x100),mload(add(sourceOffset,0x100)))mstore(add(dataAreaEnd,0x120),mload(add(sourceOffset,0x120)))mstore(add(dataAreaEnd,0x140),mload(add(sourceOffset,0x140)))mstore(add(dataAreaEnd,0x160),mload(add(sourceOffset,0x160)))dataAreaEnd:=add(dataAreaEnd,0x180)sourceOffset:=add(sourceOffset,0x180)mstore(add(dataAreaStart,mul(10,0x20)),sub(dataAreaEnd,dataAreaStart))sourceOffset:=mload(add(order,0x140))arrayLenBytes:=mload(sourceOffset)sourceOffset:=add(sourceOffset,0x20)arrayLenWords:=div(add(arrayLenBytes,0x1F),0x20)mstore(dataAreaEnd,arrayLenBytes)dataAreaEnd:=add(dataAreaEnd,0x20)for{leti:=0}lt(i,arrayLenWords){i:=add(i,1)}{mstore(dataAreaEnd,mload(sourceOffset))dataAreaEnd:=add(dataAreaEnd,0x20)sourceOffset:=add(sourceOffset,0x20)}mstore(add(dataAreaStart,mul(11,0x20)),sub(dataAreaEnd,dataAreaStart))sourceOffset:=mload(add(order,0x160))arrayLenBytes:=mload(sourceOffset)sourceOffset:=add(sourceOffset,0x20)arrayLenWords:=div(add(arrayLenBytes,0x1F),0x20)mstore(dataAreaEnd,arrayLenBytes)dataAreaEnd:=add(dataAreaEnd,0x20)for{leti:=0}lt(i,arrayLenWords){i:=add(i,1)}{mstore(dataAreaEnd,mload(sourceOffset))dataAreaEnd:=add(dataAreaEnd,0x20)sourceOffset:=add(sourceOffset,0x20)}mstore(paramsAreaOffset,takerAssetFillAmount)paramsAreaOffset:=add(paramsAreaOffset,0x20)mstore(paramsAreaOffset,sub(dataAreaEnd,paramsAreaStart))sourceOffset:=signaturearrayLenBytes:=mload(sourceOffset)sourceOffset:=add(sourceOffset,0x20)arrayLenWords:=div(add(arrayLenBytes,0x1F),0x20)mstore(dataAreaEnd,arrayLenBytes)dataAreaEnd:=add(dataAreaEnd,0x20)for{leti:=0}lt(i,arrayLenWords){i:=add(i,1)}{mstore(dataAreaEnd,mload(sourceOffset))dataAreaEnd:=add(dataAreaEnd,0x20)sourceOffset:=add(sourceOffset,0x20)}mstore(fillOrderCalldata,sub(dataAreaEnd,add(fillOrderCalldata,0x20)))mstore(0x40,dataAreaEnd)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 2737
column: 8
content: assembly{letcdStart:=add(calldata,32)letsuccess:=staticcall(gas,walletAddress,cdStart,mload(calldata),cdStart,32)switchsuccesscase0{mstore(0,0x08c379a000000000000000000000000000000000000000000000000000000000)mstore(32,0x0000002000000000000000000000000000000000000000000000000000000000)mstore(64,0x0000000c57414c4c45545f4552524f5200000000000000000000000000000000)mstore(96,0)revert(0,100)}case1{isValid:=mload(cdStart)}}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 2787
column: 8
content: assembly{letcdStart:=add(calldata,32)letsuccess:=staticcall(gas,validatorAddress,cdStart,mload(calldata),cdStart,32)switchsuccesscase0{mstore(0,0x08c379a000000000000000000000000000000000000000000000000000000000)mstore(32,0x0000002000000000000000000000000000000000000000000000000000000000)mstore(64,0x0000000f56414c494441544f525f4552524f5200000000000000000000000000)mstore(96,0)revert(0,100)}case1{isValid:=mload(cdStart)}}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 2867
column: 8
content: assembly{letsuccess:=delegatecall(gas,address,add(fillOrderCalldata,32),mload(fillOrderCalldata),fillOrderCalldata,128)ifsuccess{mstore(fillResults,mload(fillOrderCalldata))mstore(add(fillResults,32),mload(add(fillOrderCalldata,32)))mstore(add(fillResults,64),mload(add(fillOrderCalldata,64)))mstore(add(fillResults,96),mload(add(fillOrderCalldata,96)))}}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 3310
column: 8
content: assembly{letmemPtr:=mload(64)mstore(memPtr,schemaHash)mstore(add(memPtr,32),salt)mstore(add(memPtr,64),and(signerAddress,0xffffffffffffffffffffffffffffffffffffffff))mstore(add(memPtr,96),dataHash)result:=keccak256(memPtr,128)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 3407
column: 12
content: assembly{assetProxyId:=and(mload(add(assetData,32)),0xFFFFFFFF00000000000000000000000000000000000000000000000000000000)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 3436
column: 12
content: assembly{letcdStart:=mload(64)letdataAreaLength:=and(add(mload(assetData),63),0xFFFFFFFFFFFE0)letcdEnd:=add(cdStart,add(132,dataAreaLength))mstore(cdStart,0xa85e59e400000000000000000000000000000000000000000000000000000000)mstore(add(cdStart,4),128)mstore(add(cdStart,36),and(from,0xffffffffffffffffffffffffffffffffffffffff))mstore(add(cdStart,68),and(to,0xffffffffffffffffffffffffffffffffffffffff))mstore(add(cdStart,100),amount)letdataArea:=add(cdStart,132)for{}lt(dataArea,cdEnd){}{mstore(dataArea,mload(assetData))dataArea:=add(dataArea,32)assetData:=add(assetData,32)}letsuccess:=call(gas,assetProxy,0,cdStart,sub(cdEnd,cdStart),cdStart,512)ifiszero(success){revert(cdStart,returndatasize())}}

SOLIDITY_REVERT_REQUIRE :1
SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA :1
SOLIDITY_ADDRESS_HARDCODED :2
SOLIDITY_UPGRADE_TO_050 :4
SOLIDITY_USING_INLINE_ASSEMBLY :23
SOLIDITY_SHOULD_NOT_BE_VIEW :3
SOLIDITY_SHOULD_NOT_BE_PURE :15