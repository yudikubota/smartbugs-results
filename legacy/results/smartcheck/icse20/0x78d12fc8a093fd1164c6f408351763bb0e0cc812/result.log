/unique_chucks/26/0x78d12fc8a093fd1164c6f408351763bb0e0cc812.sol
line 339:12 extraneous input 'payable' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 373:46 extraneous input 'payable' expecting {',', ')'}
line 373:64 no viable alternative at input '_dAppAdmin,'
line 373:64 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 373:76 extraneous input 'memory' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 373:97 mismatched input ')' expecting {';', '='}
line 374:18 extraneous input '=' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 375:22 extraneous input '=' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 375:29 mismatched input '(' expecting {';', '='}
line 375:43 mismatched input ';' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 376:18 missing ')' at 'i'
line 376:27 extraneous input '<' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 376:43 mismatched input '.' expecting {';', '='}
line 376:50 extraneous input ';' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 376:53 mismatched input '++' expecting {';', '='}
line 377:45 mismatched input '=' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 379:4 extraneous input '}' expecting {<EOF>, 'pragma', 'import', 'contract', 'library', 'interface'}
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 17
column: 19
content: (address(0))

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 34
column: 19
content: (address(0))

ruleId: SOLIDITY_ERC20_APPROVE
patternId: af782c
severity: 2
line: 206
column: 4
content: functionapprove(addressspender,uint256value)publicreturns(bool){require(spender!=address(0));_allowed[msg.sender][spender]=value;emitApproval(msg.sender,spender,value);returntrue;}

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 330
column: 0
content: contractEscrow_V3{usingSafeMathforuint256;ERC20publictokenContract;mapping(address=>bool)publicsigners;mapping(address=>bool)publicfundExecutors;mapping(uint256=>bool)publicusedNonces;addresspayablepublicdAppAdmin;uint256constantpublicREFUNDING_LOGIC_GAS_COST=7901;uint256constantpublicFIAT_PAYMENT_FUND_FUNCTION_CALL_GAS_USED=32831;uint256constantpublicRELAYED_PAYMENT_FUND_FUNCTION_CALL_GAS_USED=32323;modifieronlyDAppAdmin(){require(msg.sender==dAppAdmin,"Unauthorized access");_;}modifieronlyFundExecutor(){require(fundExecutors[msg.sender],"Unauthorized access");_;}modifierpreValidateFund(uint256nonce,uint256gasprice){require(!usedNonces[nonce],"Nonce already used");require(gasprice==tx.gasprice,"Gas price is different from the signed one");_;}constructor(addresstokenAddress,address<missing ')'>payable_dAppAdmin,address[]memory_fundExecutors)public{dAppAdmin=_dAppAdmin;tokenContract=ERC20(tokenAddress);for(uint<missing ')'>i=0;i<_fundExecutors.length;i++){fundExecutors[_fundExecutors[i]]=true;}

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 155
column: 33
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 157
column: 54
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 159
column: 12
content: private

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 153
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 331
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 10
column: 4
content: functionrecover(bytes32originalMessage,bytesmemorysignedMessage)publicpurereturns(address){bytes32r;bytes32s;uint8v;if(signedMessage.length!=65){return(address(0));}assembly{r:=mload(add(signedMessage,32))s:=mload(add(signedMessage,64))v:=byte(0,mload(add(signedMessage,96)))}if(v<27){v+=27;}if(v!=27&&v!=28){return(address(0));}else{returnecrecover(originalMessage,v,r,s);}}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 21
column: 8
content: assembly{r:=mload(add(signedMessage,32))s:=mload(add(signedMessage,64))v:=byte(0,mload(add(signedMessage,96)))}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 373
column: 4
content: constructor(addresstokenAddress,address<missing ')'>payable

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 373
column: 54
content: _dAppAdmin,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 373
column: 66
content: address[]memory_fundExecutors)public{

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 374
column: 8
content: dAppAdmin=_dAppAdmin;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 375
column: 8
content: tokenContract=ERC20

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 375
column: 29
content: (tokenAddress);for

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 376
column: 12
content: (uint<missing ')'>i=0;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 376
column: 25
content: i<_fundExecutors.

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 376
column: 44
content: length;i++){

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 377
column: 12
content: fundExecutors[_fundExecutors[i]]=true;

SOLIDITY_VISIBILITY :10
SOLIDITY_SAFEMATH :2
SOLIDITY_LOCKED_MONEY :1
SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA :3
SOLIDITY_ADDRESS_HARDCODED :2
SOLIDITY_USING_INLINE_ASSEMBLY :1
SOLIDITY_SHOULD_NOT_BE_PURE :1
SOLIDITY_ERC20_APPROVE :1