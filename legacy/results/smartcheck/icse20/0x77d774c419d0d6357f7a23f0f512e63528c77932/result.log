/unique_chucks/33/0x77d774c419d0d6357f7a23f0f512e63528c77932.sol
line 11:12 extraneous input 'payable' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 43:16 mismatched input 'payable' expecting {',', ')'}
line 43:31 no viable alternative at input 'creator,'
line 43:31 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 44:17 mismatched input ',' expecting {';', '='}
line 45:23 mismatched input ',' expecting {';', '='}
line 47:4 mismatched input ')' expecting {';', '='}
line 50:24 extraneous input 'newDerivativeAddress' expecting ')'
line 51:4 extraneous input '{' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 52:15 mismatched input '(' expecting {';', '='}
line 52:38 extraneous input ';' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 53:27 extraneous input 'conditionalPayment' expecting {';', '='}
line 61:24 mismatched input '(' expecting {';', '='}
line 61:32 mismatched input '(' expecting ')'
line 61:52 mismatched input ')' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 63:22 extraneous input '(' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 63:41 extraneous input ')' expecting {';', '='}
line 67:4 extraneous input 'function' expecting {<EOF>, 'pragma', 'import', 'contract', 'library', 'interface'}
line 120:12 extraneous input 'payable' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 124:12 extraneous input 'payable' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 194:16 mismatched input 'payable' expecting {',', ')'}
line 194:32 no viable alternative at input '_creator,'
line 194:32 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 195:18 mismatched input ',' expecting {';', '='}
line 196:24 mismatched input ',' expecting {';', '='}
line 198:4 mismatched input ')' expecting {';', '='}
line 201:23 extraneous input '(' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 201:27 mismatched input '.' expecting {';', '='}
line 201:33 extraneous input ')' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 202:26 mismatched input '(' expecting {';', '='}
line 204:8 mismatched input 'dueDateInFuture' expecting {';', '='}
line 205:36 mismatched input '(' expecting {';', '='}
line 206:4 extraneous input '{' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 209:16 extraneous input '=' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 210:20 extraneous input '=' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 211:24 extraneous input '=' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 211:29 mismatched input '.' expecting {';', '='}
line 211:35 extraneous input ';' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 214:16 extraneous input '=' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 219:4 extraneous input 'function' expecting {<EOF>, 'pragma', 'import', 'contract', 'library', 'interface'}
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: adc165
severity: 1
line: 12
column: 37
content: 0xE8013bD526100Ebf67ace0E0F21a296D8974f0A4

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: adc165
severity: 1
line: 122
column: 55
content: 0x0b564F0aD4dcb35Cd43eff2f26Bf96B670eaBF5e

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 9
column: 0
content: contractMaster{addresspayableownerAddress;addressconstantoracleAddress=0xE8013bD526100Ebf67ace0E0F21a296D8974f0A4;mapping(uint=>bool)publicvalidDueDate;eventNewContract(addresscontractAddress);modifieronlyByOwner(){require(msg.sender==ownerAddress);_;}constructor()public{ownerAddress=msg.sender;}functioncreateConditionalPayment(addresspayablecreator,boollong,uint256dueDate,uint256strikePrice)payablepublicreturns(addressnewDerivativeAddress){require(validDueDate[dueDate]);ConditionalPaymentconditionalPayment=(newConditionalPayment).value(msg.value)(creator,long,dueDate,strikePrice);emitNewContract(address<missing ';'>(conditionalPayment));returnaddress(conditionalPayment);}

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 118
column: 0
content: contractConditionalPayment{addresspayablepublicmasterAddress;addressconstantpublicwithdrawFunctionsAddress=0x0b564F0aD4dcb35Cd43eff2f26Bf96B670eaBF5e;addresspayablepubliccreator;uint256publicdueDate;uint256publicstrikePrice;boolpubliccreatorLong;uint8publiccountCounterparties;boolpublicisSettled;uint256publicsettlementPrice;uint256publictotalStakeCounterparties;mapping(address=>uint256)publicstakes;eventContractAltered();eventUpdatedParticipant(addressindexedparticipant,uint256stake);modifieronlyByCreator(){require(msg.sender==creator);_;}modifieronlyIncremental(uintamount){require(amount%(0.1ether)==0);_;}modifiernonZeroMsgValue(){require(msg.value>0);_;}modifierdueDateInFuture(){_;require(now<dueDate);}modifiernonZeroStrikePrice(uint256newStrikePrice){require(newStrikePrice>0);_;}modifieremitsContractAlteredEvent(){_;emitContractAltered();}modifieremitsUpdatedParticipantEvent(addressparticipant){_;emitUpdatedParticipant(participant,stakes[participant]);}constructor(addresspayable_creator,bool_long,uint256_dueDate,uint256_strikePrice)payablepubliconlyIncremental(msg.value)nonZeroStrikePrice(_strikePrice)nonZeroMsgValuedueDateInFutureemitsUpdatedParticipantEvent(_creator){masterAddress=msg.sender;creator=_creator;creatorLong=_long;stakes[creator]=msg.value;strikePrice=_strikePrice;dueDate=_dueDate;}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: ^

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 41
column: 4
content: functioncreateConditionalPayment(addresspayable

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 192
column: 4
content: constructor(addresspayable

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 11
column: 4
content: addresspayableownerAddress;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 12
column: 4
content: addressconstantoracleAddress=0xE8013bD526100Ebf67ace0E0F21a296D8974f0A4;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 43
column: 24
content: creator,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 44
column: 8
content: boollong,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 45
column: 8
content: uint256dueDate,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 46
column: 8
content: uint256strikePrice)payablepublicreturns

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 50
column: 15
content: (addressnewDerivativeAddress){require

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 52
column: 15
content: (validDueDate[dueDate]);ConditionalPaymentconditionalPayment=(newConditionalPayment).value(msg.value)(creator,long,dueDate,strikePrice);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 61
column: 8
content: emitNewContract

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 61
column: 24
content: (address<missing ';'>

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 61
column: 32
content: (conditionalPayment));return

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 63
column: 15
content: address(conditionalPayment);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 194
column: 24
content: _creator,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 195
column: 8
content: bool_long,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 196
column: 8
content: uint256_dueDate,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 197
column: 8
content: uint256_strikePrice)payablepublic

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 201
column: 8
content: onlyIncremental(msg.

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 201
column: 28
content: value)nonZeroStrikePrice

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 202
column: 26
content: (_strikePrice)nonZeroMsgValue

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 204
column: 8
content: dueDateInFutureemitsUpdatedParticipantEvent

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 205
column: 36
content: (_creator){masterAddress=msg.sender;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 209
column: 8
content: creator=_creator;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 210
column: 8
content: creatorLong=_long;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 211
column: 8
content: stakes[creator]=msg.

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 211
column: 30
content: value;strikePrice=_strikePrice;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 214
column: 8
content: dueDate=_dueDate;

SOLIDITY_VISIBILITY :28
SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_LOCKED_MONEY :2
SOLIDITY_ADDRESS_HARDCODED :2