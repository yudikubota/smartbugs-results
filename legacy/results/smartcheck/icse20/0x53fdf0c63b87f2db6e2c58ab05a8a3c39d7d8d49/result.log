/unique_chucks/29/0x53fdf0c63b87f2db6e2c58ab05a8a3c39d7d8d49.sol
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ARRAY_LENGTH_MANIPULATION
patternId: 43ba1c
severity: 1
line: 37
column: 4
content: contracts.length++

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 49bd2a
severity: 1
line: 52
column: 30
content: throw

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 49bd2a
severity: 1
line: 60
column: 38
content: throw

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 49bd2a
severity: 1
line: 61
column: 28
content: throw

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 49bd2a
severity: 1
line: 74
column: 33
content: throw

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 49bd2a
severity: 1
line: 80
column: 25
content: throw

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 49bd2a
severity: 1
line: 81
column: 20
content: throw

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 49bd2a
severity: 1
line: 82
column: 18
content: throw

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 19
column: 2
content: functiongetContractSigners(bytes32_shasum)constantreturns(address[],string,string,uint){return(contracts[contractIndex[_shasum]].signers,contracts[contractIndex[_shasum]].contractName,contracts[contractIndex[_shasum]].contractDescription,contracts[contractIndex[_shasum]].numberAlreadySigned);}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 24
column: 2
content: functioncheckIfSignedBy(bytes32_shasum,address_signer)constantreturns(bool){uintindex=contractIndex[_shasum];return(contracts[index].hasSigned[_signer]);}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 76
column: 4
content: for(uintk=0;k<contracts[index].signers.length;k++){if(contracts[index].signers[k]==msg.sender)isSigner=true;}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 76
column: 4
content: for(uintk=0;k<contracts[index].signers.length;k++){if(contracts[index].signers[k]==msg.sender)isSigner=true;}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: ^

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 52
column: 4
content: if(!isAdmin[msg.sender])throw;

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 60
column: 4
content: if(contractIndex[_sha256sum]!=0)throw;

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 61
column: 4
content: if(_signers.length==0)throw;

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 74
column: 4
content: if(contracts[index].sealed)throw;

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 80
column: 4
content: if(isSigner==false)throw;

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 81
column: 4
content: if(!_I_accept)throw;

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 82
column: 4
content: if(index==0)throw;else{if(!contracts[index].hasSigned[msg.sender]){contracts[index].numberAlreadySigned++;}contracts[index].hasSigned[msg.sender]=true;contracts[index].signerName[msg.sender]=_my_name;signature(_my_name,msg.sender,_sha256sum);if(contracts[index].numberAlreadySigned==contracts[index].signers.length){contracts[index].sealed=true;sealed(index,_sha256sum);}returntrue;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 19
column: 2
content: functiongetContractSigners(bytes32_shasum)constantreturns(address[],string,string,uint){return(contracts[contractIndex[_shasum]].signers,contracts[contractIndex[_shasum]].contractName,contracts[contractIndex[_shasum]].contractDescription,contracts[contractIndex[_shasum]].numberAlreadySigned);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 24
column: 2
content: functioncheckIfSignedBy(bytes32_shasum,address_signer)constantreturns(bool){uintindex=contractIndex[_shasum];return(contracts[index].hasSigned[_signer]);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 34
column: 2
content: functionDXContracts(){isAdmin[msg.sender]=true;contracts.length++;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 40
column: 2
content: functionaddAdmin(address_new_admin)onlyAdmin{isAdmin[_new_admin]=true;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 45
column: 2
content: functionremoveAdmin(address_old_admin)onlyAdmin{isAdmin[_old_admin]=false;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 57
column: 2
content: functionsubmitNewContract(string_name,address[]_signers,string_description,bytes32_sha256sum)onlyAdmin{if(contractIndex[_sha256sum]!=0)throw;if(_signers.length==0)throw;contractIndex[_sha256sum]=contracts.length;contracts.push(Contract(_name,_description,contractIndex[_sha256sum],_sha256sum,_signers,now,false,0));newContract(_name,_signers,_description,_sha256sum,contractIndex[_sha256sum]);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 71
column: 2
content: functionsignContract(bytes32_sha256sum,string_my_name,bool_I_accept)returns(bool){uintindex=contractIndex[_sha256sum];if(contracts[index].sealed)throw;boolisSigner;for(uintk=0;k<contracts[index].signers.length;k++){if(contracts[index].signers[k]==msg.sender)isSigner=true;}if(isSigner==false)throw;if(!_I_accept)throw;if(index==0)throw;else{if(!contracts[index].hasSigned[msg.sender]){contracts[index].numberAlreadySigned++;}contracts[index].hasSigned[msg.sender]=true;contracts[index].signerName[msg.sender]=_my_name;signature(_my_name,msg.sender,_sha256sum);if(contracts[index].numberAlreadySigned==contracts[index].signers.length){contracts[index].sealed=true;sealed(index,_sha256sum);}returntrue;}}

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 32
column: 2
content: mapping(address=>bool)isAdmin;

SOLIDITY_VISIBILITY :8
SOLIDITY_DEPRECATED_CONSTRUCTIONS :9
SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_ARRAY_LENGTH_MANIPULATION :1
SOLIDITY_REVERT_REQUIRE :7
SOLIDITY_EXTRA_GAS_IN_LOOPS :1
SOLIDITY_GAS_LIMIT_IN_LOOPS :1