/unique_chucks/12/0x01e15429fedbc08dec25e127df09b4af17167f5e.sol
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 463
column: 8
content: for(uinti=0;i<sellers.length;i++){TradeOrdermemoryto=orderBook[sellers[i]];if(i==sellers.length-1){execute(sellers[i],lastQuantity,to.price);totalVouchers+=lastQuantity;}else{execute(sellers[i],to.quantity,to.price);totalVouchers+=to.quantity;}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 463
column: 8
content: for(uinti=0;i<sellers.length;i++){TradeOrdermemoryto=orderBook[sellers[i]];if(i==sellers.length-1){execute(sellers[i],lastQuantity,to.price);totalVouchers+=lastQuantity;}else{execute(sellers[i],to.quantity,to.price);totalVouchers+=to.quantity;}}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 338
column: 4
content: functionsetTradingAllowed(addresswho,boolcanTrade)publiconlyOwner{tradingWhitelist[who]=canTrade;}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 356
column: 4
content: functionsetEnforceKyc(boolenforce)publiconlyOwner{enforceKyc=enforce;}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 419
column: 4
content: functionsetEtherFeePercent(uint256percent)publiconlyOwner{require(percent<=100000000000000000000,"Percent must be between 0 and 100.");etherFeePercent=percent;}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 429
column: 4
content: functionsetEtherFeeMin(uint256min)publiconlyOwner{etherFeeMin=min;}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 522
column: 4
content: functionsetSellCeiling(uint256ceiling)publiconlyOwner{sellCeiling=ceiling;}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 531
column: 4
content: functionsetSellFloor(uint256floor)publiconlyOwner{sellFloor=floor;}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 309
column: 8
content: if(!ERC20Interface(tokenContract).transferFrom(seller,msg.sender,tradeQuantity)){revert("Unable to transfer tokens from seller to buyer.");}

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 175
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 458
column: 26
content: address[]sellers

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 506
column: 70
content: address[]sellers

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 143
column: 4
content: uintconstantWAD=10**18;

SOLIDITY_VISIBILITY :1
SOLIDITY_SAFEMATH :1
SOLIDITY_OVERPOWERED_ROLE :6
SOLIDITY_REVERT_REQUIRE :1
SOLIDITY_EXTRA_GAS_IN_LOOPS :1
SOLIDITY_UPGRADE_TO_050 :2
SOLIDITY_GAS_LIMIT_IN_LOOPS :1