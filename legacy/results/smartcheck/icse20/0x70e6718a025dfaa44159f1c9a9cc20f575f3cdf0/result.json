{
  "contract": "0x70e6718a025dfaa44159f1c9a9cc20f575f3cdf0",
  "tool": "smartcheck",
  "start": 1563639297.245499,
  "end": 1563639305.5127375,
  "duration": 8.26723861694336,
  "analysis": [
    {
      "name": "SOLIDITY_ERC20_APPROVE",
      "patternId": "af782c",
      "severity": 2,
      "line": 56,
      "column": 2,
      "content": "functionapprove(address_spender,uint256_value)publicreturns(bool){allowed[msg.sender][_spender]=_value;Approval(msg.sender,_spender,_value);returntrue;}"
    },
    {
      "name": "SOLIDITY_LOCKED_MONEY",
      "patternId": "30281d",
      "severity": 3,
      "line": 80,
      "column": 0,
      "content": "contractPayreumisERC20Standard{stringpublicconstantname=\"Payreum\";stringpublicconstantsymbol=\"PYR\";uint8publicconstantdecimals=18;uint256publicconstantmaxSupply=500000000*(10**uint256(decimals));uint256publicPYRToEth;uint256publicethInWei;addresspublicdevWallet;functionPayreum()public{totalSupply=maxSupply;balances[msg.sender]=maxSupply;PYRToEth=200000;devWallet=msg.sender;}function()payable{ethInWei=ethInWei+msg.value;uint256amount=msg.value*PYRToEth;if(balances[devWallet]<amount){return;}balances[devWallet]=balances[devWallet]-amount;balances[msg.sender]=balances[msg.sender]+amount;Transfer(devWallet,msg.sender,amount);devWallet.send(msg.value);}}"
    },
    {
      "name": "SOLIDITY_PRAGMAS_VERSION",
      "patternId": "23fc32",
      "severity": 1,
      "line": 1,
      "column": 16,
      "content": "^"
    },
    {
      "name": "SOLIDITY_SAFEMATH",
      "patternId": "837cac",
      "severity": 1,
      "line": 30,
      "column": 2,
      "content": "usingSafeMathforuint256;"
    },
    {
      "name": "SOLIDITY_UNCHECKED_CALL",
      "patternId": "f39eed",
      "severity": 3,
      "line": 101,
      "column": 18,
      "content": "send(msg.value)"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": 910067,
      "severity": 1,
      "line": 94,
      "column": 4,
      "content": "function()payable{ethInWei=ethInWei+msg.value;uint256amount=msg.value*PYRToEth;if(balances[devWallet]<amount){return;}balances[devWallet]=balances[devWallet]-amount;balances[msg.sender]=balances[msg.sender]+amount;Transfer(devWallet,msg.sender,amount);devWallet.send(msg.value);}"
    },
    {
      "name": "SOLIDITY_VISIBILITY",
      "patternId": "b51ce0",
      "severity": 1,
      "line": 31,
      "column": 2,
      "content": "mapping(address=>uint256)balances;"
    }
  ]
}