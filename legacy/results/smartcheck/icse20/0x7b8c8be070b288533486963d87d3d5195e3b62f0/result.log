/unique_chucks/19/0x7b8c8be070b288533486963d87d3d5195e3b62f0.sol
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 61
column: 16
content: insideCallSender=address(0)

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 79
column: 16
content: insideCallSender=address(0)

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 97
column: 16
content: insideCallSender=address(0)

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 118
column: 16
content: insideCallSender=address(0)

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 333
column: 4
content: owner=address(0)

ruleId: SOLIDITY_ARRAY_LENGTH_MANIPULATION
patternId: 872bdd
severity: 1
line: 178
column: 8
content: allOperations.length--

ruleId: SOLIDITY_ARRAY_LENGTH_MANIPULATION
patternId: 872bdd
severity: 1
line: 236
column: 8
content: allOperations.length=0

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 35
column: 4
content: functionisOwner(addresswallet)publicconstantreturns(bool){returnownersIndices[wallet]>0;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 39
column: 4
content: functionownersCount()publicconstantreturns(uint){returnowners.length;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 43
column: 4
content: functionallOperationsCount()publicconstantreturns(uint){returnallOperations.length;}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 224
column: 8
content: for(uintj=0;j<owners.length;j++){deleteownersIndices[owners[j]];}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 227
column: 8
content: for(uinti=0;i<newOwners.length;i++){require(newOwners[i]!=address(0),"transferOwnershipWithHowMany: owners array contains zero");require(ownersIndices[newOwners[i]]==0,"transferOwnershipWithHowMany: owners array contains duplicates");ownersIndices[newOwners[i]]=i+1;}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 654
column: 8
content: for(uint256i=0;i<_secondsSinceLockupStart.length;i++){LockupStagememorystage=LockupStage(_secondsSinceLockupStart[i],_unlockedTokensPercentages[i]);lockupStagesByToken[_token].push(stage);emitAddLockupStage(_token,stage.secondsSinceLockupStart,stage.unlockedTokensPercentage);}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 691
column: 8
content: for(i=0;i<_receivers.length;i++){require(_receivers[i]!=address(0),"Invalid receiver");require(_amounts[i]>0,"Positive amount is required");require(allocatedTokens[_token][_receivers[i]]==0,"Tokens for this receiver have been allocated already");if(!isReceiver[_receivers[i]]){receivers.push(_receivers[i]);isReceiver[_receivers[i]]=true;}allocatedTokens[_token][_receivers[i]]=_amounts[i];totalAllocation=totalAllocation.add(_amounts[i]);emitAddTokenAllocation(_token,_receivers[i],_amounts[i]);}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 713
column: 8
content: for(i=0;i<participants.length;i++){if(tokenByParticipant[participants[i]]==address(_token)){continue;}require(isReceiver[participants[i]],"Tokens for a participant haven't been allocated");}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 729
column: 8
content: for(uint256i=0;i<participants.length;i++){newOwners[i]=participants[i];}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 760
column: 8
content: for(uinti=0;i<participants.length;i++){addresstoken=tokenByParticipant[participants[i]];SwapOfferstorageoffer=offerByToken[token];if(offer.participant==msg.sender){continue;}uint256tokensAmount=_withdrawableAmount(offer.token,msg.sender);if(tokensAmount>0){withdrawnTokens[offer.token][msg.sender]=withdrawnTokens[offer.token][msg.sender].add(tokensAmount);offer.withdrawnTokensTotal=offer.withdrawnTokensTotal.add(tokensAmount);offer.token.safeTransfer(msg.sender,tokensAmount);emitWithdraw(msg.sender,offer.token,tokensAmount);}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 806
column: 8
content: for(uinti=0;i<participants.length;i++){addresstoken=tokenByParticipant[participants[i]];SwapOfferstorageoffer=offerByToken[token];uint256tokensAmount=offer.token.balanceOf(address(this));require(offer.withdrawnTokensTotal==0,"Unavailable after the first withdrawal.");if(tokensAmount>0){offer.token.safeTransfer(offer.participant,tokensAmount);emitSoftEmergency(offer.token,offer.participant,tokensAmount);}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 834
column: 8
content: for(uint256i=0;i<_tokens.length;i++){_tokens[i].safeTransfer(_receivers[i],_values[i]);emitHardEmergency(_tokens[i],_receivers[i],_values[i]);}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 875
column: 8
content: for(uinti=0;i<lockupStages.length;i++){LockupStagememorystage=lockupStages[i];require(stage.unlockedTokensPercentage>=0,"LockupStage.unlockedTokensPercentage must not be negative");require(stage.unlockedTokensPercentage<=100,"LockupStage.unlockedTokensPercentage must not be greater than 100");if(i==0){continue;}LockupStagememorypreviousStage=lockupStages[i-1];require(stage.secondsSinceLockupStart>previousStage.secondsSinceLockupStart,"LockupStage.secondsSinceLockupStart must increase monotonically");require(stage.unlockedTokensPercentage>previousStage.unlockedTokensPercentage,"LockupStage.unlockedTokensPercentage must increase monotonically");}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 920
column: 8
content: for(uint256i=0;i<participants.length;i++){addresstoken=tokenByParticipant[participants[i]];if(lockupStagesByToken[token].length==0){returnfalse;}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 935
column: 8
content: for(uint256i=0;i<participants.length;i++){if(!isTokenAllocated[tokenByParticipant[participants[i]]]){returnfalse;}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 947
column: 8
content: for(uinti=0;i<participants.length;i++){addresstoken=tokenByParticipant[participants[i]];SwapOffermemoryoffer=offerByToken[token];if(offer.token.balanceOf(address(this))<offer.tokensTotal){returnfalse;}}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 395
column: 4
content: functionisContract(addressaddr)internalviewreturns(boolresult){assembly{result:=gt(extcodesize(addr),0)}}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 402
column: 4
content: functionhandleReturnBool()internalpurereturns(boolresult){assembly{switchreturndatasize()case0{result:=1}case32{returndatacopy(0,0,32)result:=mload(0)}default{revert(0,0)}}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 224
column: 8
content: for(uintj=0;j<owners.length;j++){deleteownersIndices[owners[j]];}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 227
column: 8
content: for(uinti=0;i<newOwners.length;i++){require(newOwners[i]!=address(0),"transferOwnershipWithHowMany: owners array contains zero");require(ownersIndices[newOwners[i]]==0,"transferOwnershipWithHowMany: owners array contains duplicates");ownersIndices[newOwners[i]]=i+1;}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 654
column: 8
content: for(uint256i=0;i<_secondsSinceLockupStart.length;i++){LockupStagememorystage=LockupStage(_secondsSinceLockupStart[i],_unlockedTokensPercentages[i]);lockupStagesByToken[_token].push(stage);emitAddLockupStage(_token,stage.secondsSinceLockupStart,stage.unlockedTokensPercentage);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 691
column: 8
content: for(i=0;i<_receivers.length;i++){require(_receivers[i]!=address(0),"Invalid receiver");require(_amounts[i]>0,"Positive amount is required");require(allocatedTokens[_token][_receivers[i]]==0,"Tokens for this receiver have been allocated already");if(!isReceiver[_receivers[i]]){receivers.push(_receivers[i]);isReceiver[_receivers[i]]=true;}allocatedTokens[_token][_receivers[i]]=_amounts[i];totalAllocation=totalAllocation.add(_amounts[i]);emitAddTokenAllocation(_token,_receivers[i],_amounts[i]);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 713
column: 8
content: for(i=0;i<participants.length;i++){if(tokenByParticipant[participants[i]]==address(_token)){continue;}require(isReceiver[participants[i]],"Tokens for a participant haven't been allocated");}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 729
column: 8
content: for(uint256i=0;i<participants.length;i++){newOwners[i]=participants[i];}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 760
column: 8
content: for(uinti=0;i<participants.length;i++){addresstoken=tokenByParticipant[participants[i]];SwapOfferstorageoffer=offerByToken[token];if(offer.participant==msg.sender){continue;}uint256tokensAmount=_withdrawableAmount(offer.token,msg.sender);if(tokensAmount>0){withdrawnTokens[offer.token][msg.sender]=withdrawnTokens[offer.token][msg.sender].add(tokensAmount);offer.withdrawnTokensTotal=offer.withdrawnTokensTotal.add(tokensAmount);offer.token.safeTransfer(msg.sender,tokensAmount);emitWithdraw(msg.sender,offer.token,tokensAmount);}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 806
column: 8
content: for(uinti=0;i<participants.length;i++){addresstoken=tokenByParticipant[participants[i]];SwapOfferstorageoffer=offerByToken[token];uint256tokensAmount=offer.token.balanceOf(address(this));require(offer.withdrawnTokensTotal==0,"Unavailable after the first withdrawal.");if(tokensAmount>0){offer.token.safeTransfer(offer.participant,tokensAmount);emitSoftEmergency(offer.token,offer.participant,tokensAmount);}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 834
column: 8
content: for(uint256i=0;i<_tokens.length;i++){_tokens[i].safeTransfer(_receivers[i],_values[i]);emitHardEmergency(_tokens[i],_receivers[i],_values[i]);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 875
column: 8
content: for(uinti=0;i<lockupStages.length;i++){LockupStagememorystage=lockupStages[i];require(stage.unlockedTokensPercentage>=0,"LockupStage.unlockedTokensPercentage must not be negative");require(stage.unlockedTokensPercentage<=100,"LockupStage.unlockedTokensPercentage must not be greater than 100");if(i==0){continue;}LockupStagememorypreviousStage=lockupStages[i-1];require(stage.secondsSinceLockupStart>previousStage.secondsSinceLockupStart,"LockupStage.secondsSinceLockupStart must increase monotonically");require(stage.unlockedTokensPercentage>previousStage.unlockedTokensPercentage,"LockupStage.unlockedTokensPercentage must increase monotonically");}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 920
column: 8
content: for(uint256i=0;i<participants.length;i++){addresstoken=tokenByParticipant[participants[i]];if(lockupStagesByToken[token].length==0){returnfalse;}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 935
column: 8
content: for(uint256i=0;i<participants.length;i++){if(!isTokenAllocated[tokenByParticipant[participants[i]]]){returnfalse;}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 947
column: 8
content: for(uinti=0;i<participants.length;i++){addresstoken=tokenByParticipant[participants[i]];SwapOffermemoryoffer=offerByToken[token];if(offer.token.balanceOf(address(this))<offer.tokensTotal){returnfalse;}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: 12cf32
severity: 2
line: 990
column: 8
content: for(uint256i=lockupStagesByToken[_token].length;i>0;i--){LockupStagestoragestage=lockupStagesByToken[_token][i-1];uint256stageBecomesActiveAt=startLockupAt.add(stage.secondsSinceLockupStart);if(now<stageBecomesActiveAt){continue;}returnstage.unlockedTokensPercentage;}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: ^

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 393
column: 4
content: usingSafeMathforuint;

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 450
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 402
column: 4
content: functionhandleReturnBool()internalpurereturns(boolresult){assembly{switchreturndatasize()case0{result:=1}case32{returndatacopy(0,0,32)result:=mload(0)}default{revert(0,0)}}}

ruleId: SOLIDITY_SHOULD_NOT_BE_VIEW
patternId: 189abf
severity: 1
line: 395
column: 4
content: functionisContract(addressaddr)internalviewreturns(boolresult){assembly{result:=gt(extcodesize(addr),0)}}

ruleId: SOLIDITY_UINT_CANT_BE_NEGATIVE
patternId: d48ac4
severity: 2
line: 879
column: 16
content: stage.unlockedTokensPercentage>=0

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 83k1no
severity: 1
line: 422
column: 32
content: call(bytes4(keccak256("transfer(address,uint256)")),_to,_value)

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 901eae
severity: 1
line: 145
column: 28
content: keccak256(msg.data,ownersGeneration)

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 208
column: 31
content: address[]newOwners

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 217
column: 42
content: address[]newOwners

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 848
column: 58
content: bytes_data

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 397
column: 8
content: assembly{result:=gt(extcodesize(addr),0)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 404
column: 8
content: assembly{switchreturndatasize()case0{result:=1}case32{returndatacopy(0,0,32)result:=mload(0)}default{revert(0,0)}}

SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_ARRAY_LENGTH_MANIPULATION :2
SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN :2
SOLIDITY_EXTRA_GAS_IN_LOOPS :13
SOLIDITY_ADDRESS_HARDCODED :5
SOLIDITY_UPGRADE_TO_050 :5
SOLIDITY_GAS_LIMIT_IN_LOOPS :14
SOLIDITY_SHOULD_NOT_BE_PURE :1
SOLIDITY_SAFEMATH :2
SOLIDITY_DEPRECATED_CONSTRUCTIONS :3
SOLIDITY_UINT_CANT_BE_NEGATIVE :1
SOLIDITY_USING_INLINE_ASSEMBLY :2
SOLIDITY_SHOULD_NOT_BE_VIEW :1