/unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 46
column: 22
content: 0xff

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 187b5a
severity: 1
line: 51
column: 14
content: sha3

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 187b5a
severity: 1
line: 68
column: 6
content: sha3

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 187b5a
severity: 1
line: 69
column: 19
content: sha3

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 187b5a
severity: 1
line: 76
column: 6
content: sha3

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 187b5a
severity: 1
line: 77
column: 16
content: sha3

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 187b5a
severity: 1
line: 95
column: 6
content: sha3

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 187b5a
severity: 1
line: 96
column: 16
content: sha3

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 44
column: 1
content: functionhashTo256(bytes32hash)constantreturns(uint_r){returnuint(hash)&0xff;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 49
column: 1
content: functionhash(bytes32input)constantreturns(uint_r){returnuint(sha3(input));}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 54
column: 1
content: functionisReady()constantreturns(bool_r){returnisReadyFor(msg.sender);}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 58
column: 1
content: functionisReadyFor(address_user)constantreturns(bool_r){Rollr=rolls[_user];if(r.serverSeed==0)returnfalse;returntrue;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 64
column: 1
content: functiongetResult(bytes32secret)constantreturns(uint_r){Rollr=rolls[msg.sender];if(r.serverSeed==0)return;if(sha3(secret)!=r.secretHash)return;returnhashTo256(sha3(secret,r.serverSeed));}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 72
column: 1
content: functiondidWin(bytes32secret)constantreturns(bool_r){Rollr=rolls[msg.sender];if(r.serverSeed==0)return;if(sha3(secret)!=r.secretHash)return;if(hashTo256(sha3(secret,r.serverSeed))<r.chance){returntrue;}returnfalse;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 83
column: 1
content: functioncalcWinnings(uint256value,uintchance)constantreturns(uint256_r){return(value*99/100)*256/chance;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 88
column: 1
content: functiongetMaxPayout()constantreturns(uint256_r){returnthis.balance*maxPayout/100;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 104
column: 1
content: functioncanClaimTimeout()constantreturns(bool_r){Rollr=rolls[msg.sender];if(r.serverSeed!=0)returnfalse;if(r.value<=0)returnfalse;if(block.number<r.blocknum+timeout)returnfalse;returntrue;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 120
column: 1
content: functiongetMinimumBet()constantreturns(uint_r){returnminimumBet;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 124
column: 1
content: functiongetBankroll()constantreturns(uint256_r){returnthis.balance;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 128
column: 1
content: functiongetBetsLocked()constantreturns(uint_r){returnbetsLocked;}

ruleId: SOLIDITY_DIV_MUL
patternId: 09hhh1
severity: 2
line: 85
column: 9
content: (value*99/100)*256

ruleId: SOLIDITY_UNCHECKED_CALL
patternId: f39eed
severity: 3
line: 116
column: 13
content: send(r.value)

ruleId: SOLIDITY_UNCHECKED_CALL
patternId: f39eed
severity: 3
line: 150
column: 8
content: send(amount)

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 441gim
severity: 1
line: 59
column: 2
content: Rollr=rolls[_user]

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 441gim
severity: 1
line: 66
column: 2
content: Rollr=rolls[msg.sender]

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 441gim
severity: 1
line: 74
column: 2
content: Rollr=rolls[msg.sender]

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 441gim
severity: 1
line: 93
column: 2
content: Rollr=rolls[msg.sender]

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 441gim
severity: 1
line: 105
column: 2
content: Rollr=rolls[msg.sender]

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 441gim
severity: 1
line: 115
column: 2
content: Rollr=rolls[msg.sender]

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 23
column: 1
content: functionHonestDice(){owner=msg.sender;feed=msg.sender;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 28
column: 1
content: functionroll(uintchance,bytes32secretHash){if(chance<1||chance>255||msg.value<minimumBet||calcWinnings(msg.value,chance)>getMaxPayout()||betsLocked!=0){msg.sender.send(msg.value);return;}rolls[msg.sender]=Roll(msg.value,chance,block.number,secretHash,0);Bet(msg.sender,block.number,msg.value,chance);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 37
column: 1
content: functionserverSeed(addressuser,bytes32seed){if(msg.sender!=feed)return;if(rolls[user].serverSeed!=0)return;rolls[user].serverSeed=seed;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 44
column: 1
content: functionhashTo256(bytes32hash)constantreturns(uint_r){returnuint(hash)&0xff;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 49
column: 1
content: functionhash(bytes32input)constantreturns(uint_r){returnuint(sha3(input));}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 54
column: 1
content: functionisReady()constantreturns(bool_r){returnisReadyFor(msg.sender);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 58
column: 1
content: functionisReadyFor(address_user)constantreturns(bool_r){Rollr=rolls[_user];if(r.serverSeed==0)returnfalse;returntrue;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 64
column: 1
content: functiongetResult(bytes32secret)constantreturns(uint_r){Rollr=rolls[msg.sender];if(r.serverSeed==0)return;if(sha3(secret)!=r.secretHash)return;returnhashTo256(sha3(secret,r.serverSeed));}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 72
column: 1
content: functiondidWin(bytes32secret)constantreturns(bool_r){Rollr=rolls[msg.sender];if(r.serverSeed==0)return;if(sha3(secret)!=r.secretHash)return;if(hashTo256(sha3(secret,r.serverSeed))<r.chance){returntrue;}returnfalse;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 83
column: 1
content: functioncalcWinnings(uint256value,uintchance)constantreturns(uint256_r){return(value*99/100)*256/chance;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 88
column: 1
content: functiongetMaxPayout()constantreturns(uint256_r){returnthis.balance*maxPayout/100;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 92
column: 1
content: functionclaim(bytes32secret){Rollr=rolls[msg.sender];if(r.serverSeed==0)return;if(sha3(secret)!=r.secretHash)return;if(hashTo256(sha3(secret,r.serverSeed))<r.chance){msg.sender.send(calcWinnings(r.value,r.chance)-seedCost);Won(msg.sender,r.value,r.chance);}deleterolls[msg.sender];}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 104
column: 1
content: functioncanClaimTimeout()constantreturns(bool_r){Rollr=rolls[msg.sender];if(r.serverSeed!=0)returnfalse;if(r.value<=0)returnfalse;if(block.number<r.blocknum+timeout)returnfalse;returntrue;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 112
column: 1
content: functionclaimTimeout(){if(!canClaimTimeout())return;Rollr=rolls[msg.sender];msg.sender.send(r.value);deleterolls[msg.sender];}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 120
column: 1
content: functiongetMinimumBet()constantreturns(uint_r){returnminimumBet;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 124
column: 1
content: functiongetBankroll()constantreturns(uint256_r){returnthis.balance;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 128
column: 1
content: functiongetBetsLocked()constantreturns(uint_r){returnbetsLocked;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 132
column: 1
content: functionsetFeed(addressnewFeed){if(msg.sender!=owner)return;feed=newFeed;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 137
column: 1
content: functionlockBetsForWithdraw(){if(msg.sender!=owner)return;uintbetsLocked=block.number;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 142
column: 1
content: functionunlockBets(){if(msg.sender!=owner)return;uintbetsLocked=0;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 147
column: 1
content: functionwithdraw(uintamount){if(msg.sender!=owner)return;if(betsLocked==0||block.number<betsLocked+5760)return;owner.send(amount);}

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 14
column: 1
content: uintbetsLocked;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 15
column: 1
content: addressowner;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 16
column: 1
content: addressfeed;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 17
column: 1
content: uint256minimumBet=1*1000000000000000000;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 18
column: 1
content: uint256constantmaxPayout=5;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 19
column: 1
content: uintconstantseedCost=100000000000000000;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 20
column: 1
content: mapping(address=>Roll)rolls;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 21
column: 1
content: uintconstanttimeout=20;

SOLIDITY_VISIBILITY :29
SOLIDITY_DEPRECATED_CONSTRUCTIONS :19
SOLIDITY_ADDRESS_HARDCODED :1
SOLIDITY_UPGRADE_TO_050 :6
SOLIDITY_UNCHECKED_CALL :2
SOLIDITY_DIV_MUL :1