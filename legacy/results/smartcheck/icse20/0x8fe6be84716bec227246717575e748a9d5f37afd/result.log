/unique_chucks/43/0x8fe6be84716bec227246717575e748a9d5f37afd.sol
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 760
column: 28
content: 0x6f

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 760
column: 47
content: 0x5f

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 760
column: 66
content: 0x53

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 760
column: 85
content: 0x5d

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 760
column: 106
content: 0x18

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 760
column: 125
content: 0x2a

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 760
column: 144
content: 0x54

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 760
column: 163
content: 0x15

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 45
column: 4
content: owner=address(0)

ruleId: SOLIDITY_ARRAY_LENGTH_MANIPULATION
patternId: 872bdd
severity: 1
line: 501
column: 8
content: sendersStack_.length-=1

ruleId: SOLIDITY_DIV_MUL
patternId: 09hhh1
severity: 2
line: 676
column: 16
content: _amount.mul(weights[_fromToken]).div(minimalWeight).add(fromBalance).mul(weights[_toToken])

ruleId: SOLIDITY_DIV_MUL
patternId: 09hhh1
severity: 2
line: 740
column: 33
content: returnAmount.mul(changeFee).div(TOTAL_PERCRENTS.sub(changeFee)).mul(refferalFee)

ruleId: SOLIDITY_ERC20_APPROVE
patternId: af782c
severity: 2
line: 390
column: 2
content: functionapprove(address_spender,uint256_value)publicreturns(bool){allowed[msg.sender][_spender]=_value;emitApproval(msg.sender,_spender,_value);returntrue;}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 568
column: 8
content: for(uinti=0;i<tokens.length;i++){tokenAmounts[i]=tokens[i].balanceOf(this).mul(_amount).div(totalSupply_);}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 587
column: 8
content: for(uinti=0;i<_tokens.length;i++){for(uintj=0;j<i;j++){require(_tokens[i]!=_tokens[j],"unbundleSome: should not unbundle same token multiple times");}uint256tokenAmount=_tokens[i].balanceOf(this).mul(_value).div(totalSupply);_tokens[i].checkedTransfer(_beneficiary,tokenAmount);}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 616
column: 8
content: for(uinti=0;i<tokens.length;i++){require(_tokenAmounts[i]!=0,"Token amount should be non-zero");tokens[i].checkedTransferFrom(msg.sender,this,_tokenAmounts[i]);}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 657
column: 8
content: for(uinti=0;i<tokens.length;i++){require(_weights[i]!=0,"The _weights array should not contains zeros");require(weights[tokens[i]]==0,"The _tokens array have duplicates");weights[tokens[i]]=_weights[i];if(minimalWeight==0||_weights[i]<minimalWeight){minimalWeight=_weights[i];}}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 165
column: 4
content: functionisContract(addressaddr)internalviewreturns(boolresult){assembly{result:=gt(extcodesize(addr),0)}}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 172
column: 4
content: functionhandleReturnBool()internalpurereturns(boolresult){assembly{switchreturndatasize()case0{result:=1}case32{returndatacopy(0,0,32)result:=mload(0)}default{revert(0,0)}}}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 189
column: 4
content: functionhandleReturnBytes32()internalpurereturns(bytes32result){assembly{ifeq(returndatasize(),32){returndatacopy(0,0,32)result:=mload(0)}ifgt(returndatasize(),32){returndatacopy(0,64,32)result:=mload(0)}iflt(returndatasize(),32){revert(0,0)}}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 568
column: 8
content: for(uinti=0;i<tokens.length;i++){tokenAmounts[i]=tokens[i].balanceOf(this).mul(_amount).div(totalSupply_);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 587
column: 8
content: for(uinti=0;i<_tokens.length;i++){for(uintj=0;j<i;j++){require(_tokens[i]!=_tokens[j],"unbundleSome: should not unbundle same token multiple times");}uint256tokenAmount=_tokens[i].balanceOf(this).mul(_value).div(totalSupply);_tokens[i].checkedTransfer(_beneficiary,tokenAmount);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 616
column: 8
content: for(uinti=0;i<tokens.length;i++){require(_tokenAmounts[i]!=0,"Token amount should be non-zero");tokens[i].checkedTransferFrom(msg.sender,this,_tokenAmounts[i]);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 657
column: 8
content: for(uinti=0;i<tokens.length;i++){require(_weights[i]!=0,"The _weights array should not contains zeros");require(weights[tokens[i]]==0,"The _tokens array have duplicates");weights[tokens[i]]=_weights[i];if(minimalWeight==0||_weights[i]<minimalWeight){minimalWeight=_weights[i];}}

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 703
column: 0
content: contractFeeMultiTokenisOwnable,MultiToken{usingCheckedERC20forERC20;uint256publicconstantTOTAL_PERCRENTS=1000000;uint256publiclendFee;uint256publicchangeFee;uint256publicrefferalFee;functioninit(ERC20[]_tokens,uint256[]_weights,string_name,string_symbol,uint8)public{super.init(_tokens,_weights,_name,_symbol,18);}functionsetLendFee(uint256_lendFee)publiconlyOwner{require(_lendFee<=30000,"setLendFee: fee should be not greater than 3%");lendFee=_lendFee;}functionsetChangeFee(uint256_changeFee)publiconlyOwner{require(_changeFee<=30000,"setChangeFee: fee should be not greater than 3%");changeFee=_changeFee;}functionsetRefferalFee(uint256_refferalFee)publiconlyOwner{require(_refferalFee<=500000,"setChangeFee: fee should be not greater than 50% of changeFee");refferalFee=_refferalFee;}functiongetReturn(address_fromToken,address_toToken,uint256_amount)publicviewreturns(uint256returnAmount){returnAmount=super.getReturn(_fromToken,_toToken,_amount).mul(TOTAL_PERCRENTS.sub(changeFee)).div(TOTAL_PERCRENTS);}functionchange(address_fromToken,address_toToken,uint256_amount,uint256_minReturn)publicreturns(uint256returnAmount){returnAmount=changeWithRef(_fromToken,_toToken,_amount,_minReturn,0);}functionchangeWithRef(address_fromToken,address_toToken,uint256_amount,uint256_minReturn,address_ref)publicreturns(uint256returnAmount){returnAmount=super.change(_fromToken,_toToken,_amount,_minReturn);uint256refferalAmount=returnAmount.mul(changeFee).div(TOTAL_PERCRENTS.sub(changeFee)).mul(refferalFee).div(TOTAL_PERCRENTS);ERC20(_toToken).checkedTransfer(_ref,refferalAmount);}functionlend(address_to,ERC20_token,uint256_amount,address_target,bytes_data)publicpayable{uint256prevBalance=_token.balanceOf(this);super.lend(_to,_token,_amount,_target,_data);require(_token.balanceOf(this)>=prevBalance.mul(TOTAL_PERCRENTS.add(lendFee)).div(TOTAL_PERCRENTS),"lend: tokens must be returned with lend fee");}}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 715
column: 4
content: functionsetLendFee(uint256_lendFee)publiconlyOwner{require(_lendFee<=30000,"setLendFee: fee should be not greater than 3%");lendFee=_lendFee;}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 720
column: 4
content: functionsetChangeFee(uint256_changeFee)publiconlyOwner{require(_changeFee<=30000,"setChangeFee: fee should be not greater than 3%");changeFee=_changeFee;}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 725
column: 4
content: functionsetRefferalFee(uint256_refferalFee)publiconlyOwner{require(_refferalFee<=500000,"setChangeFee: fee should be not greater than 50% of changeFee");refferalFee=_refferalFee;}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: ^

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 163
column: 4
content: usingSafeMathforuint;

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 303
column: 2
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 172
column: 4
content: functionhandleReturnBool()internalpurereturns(boolresult){assembly{switchreturndatasize()case0{result:=1}case32{returndatacopy(0,0,32)result:=mload(0)}default{revert(0,0)}}}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 189
column: 4
content: functionhandleReturnBytes32()internalpurereturns(bytes32result){assembly{ifeq(returndatasize(),32){returndatacopy(0,0,32)result:=mload(0)}ifgt(returndatasize(),32){returndatacopy(0,64,32)result:=mload(0)}iflt(returndatasize(),32){revert(0,0)}}}

ruleId: SOLIDITY_SHOULD_NOT_BE_VIEW
patternId: 189abf
severity: 1
line: 165
column: 4
content: functionisContract(addressaddr)internalviewreturns(boolresult){assembly{result:=gt(extcodesize(addr),0)}}

ruleId: SOLIDITY_SHOULD_NOT_BE_VIEW
patternId: 189abf
severity: 1
line: 247
column: 4
content: functionasmName(address_token)publicviewreturns(bytes32){require(isContract(_token));require(_token.call(bytes4(keccak256("name()"))));returnhandleReturnBytes32();}

ruleId: SOLIDITY_SHOULD_NOT_BE_VIEW
patternId: 189abf
severity: 1
line: 254
column: 4
content: functionasmSymbol(address_token)publicviewreturns(bytes32){require(isContract(_token));require(_token.call(bytes4(keccak256("symbol()"))));returnhandleReturnBytes32();}

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 83k1no
severity: 1
line: 209
column: 23
content: call(bytes4(keccak256("transfer(address,uint256)")),_to,_value)

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 83k1no
severity: 1
line: 216
column: 23
content: call(bytes4(keccak256("transferFrom(address,address,uint256)")),_from,_to,_value)

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 83k1no
severity: 1
line: 223
column: 23
content: call(bytes4(keccak256("approve(address,uint256)")),_spender,_value)

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 272
column: 70
content: uint256[]_tokenAmounts

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 276
column: 64
content: ERC20[]_tokens

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 476
column: 14
content: string_name

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 476
column: 28
content: string_symbol

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 497
column: 57
content: bytes_data

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 505
column: 58
content: bytes_data

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 543
column: 18
content: ERC20[]_tokens

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 543
column: 35
content: string_name

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 543
column: 49
content: string_symbol

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 560
column: 70
content: uint256[]_tokenAmounts

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 578
column: 64
content: ERC20[]_tokens

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 612
column: 60
content: uint256[]_tokenAmounts

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 629
column: 79
content: bytes_data

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 654
column: 18
content: ERC20[]_tokens

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 654
column: 35
content: uint256[]_weights

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 654
column: 55
content: string_name

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 654
column: 69
content: string_symbol

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 667
column: 19
content: ERC20[]_tokens

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 667
column: 36
content: uint256[]_weights

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 667
column: 56
content: string_name

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 667
column: 70
content: string_symbol

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 711
column: 18
content: ERC20[]_tokens

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 711
column: 35
content: uint256[]_weights

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 711
column: 55
content: string_name

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 711
column: 69
content: string_symbol

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 747
column: 79
content: bytes_data

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 167
column: 8
content: assembly{result:=gt(extcodesize(addr),0)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 174
column: 8
content: assembly{switchreturndatasize()case0{result:=1}case32{returndatacopy(0,0,32)result:=mload(0)}default{revert(0,0)}}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 191
column: 8
content: assembly{ifeq(returndatasize(),32){returndatacopy(0,0,32)result:=mload(0)}ifgt(returndatasize(),32){returndatacopy(0,64,32)result:=mload(0)}iflt(returndatasize(),32){revert(0,0)}}

SOLIDITY_OVERPOWERED_ROLE :3
SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_ARRAY_LENGTH_MANIPULATION :1
SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN :3
SOLIDITY_EXTRA_GAS_IN_LOOPS :4
SOLIDITY_ADDRESS_HARDCODED :9
SOLIDITY_UPGRADE_TO_050 :29
SOLIDITY_GAS_LIMIT_IN_LOOPS :4
SOLIDITY_DIV_MUL :2
SOLIDITY_SHOULD_NOT_BE_PURE :2
SOLIDITY_ERC20_APPROVE :1
SOLIDITY_SAFEMATH :2
SOLIDITY_LOCKED_MONEY :1
SOLIDITY_USING_INLINE_ASSEMBLY :3
SOLIDITY_SHOULD_NOT_BE_VIEW :3