/unique_chucks/16/0xda28d9cf5bea99f90f760327acd1ad22e30eaa3d.sol
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: adc165
severity: 1
line: 75
column: 33
content: 0x3368e0A06D0Ae1b826B5171Ced8C7c94D785f9E5

ruleId: SOLIDITY_DIV_MUL
patternId: 09hhh1
severity: 2
line: 101
column: 22
content: investors[_to].invested.mul(bonusSize()).div(100).mul(block.timestamp.sub(investors[_to].last_payout))

ruleId: SOLIDITY_DIV_MUL
patternId: 09hhh1
severity: 2
line: 106
column: 19
content: investors[_to].invested.div(100).mul(WITHDRAW)

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 112
column: 4
content: functionbytesToAddress(bytesbys)pureprivatereturns(addressaddr){assembly{addr:=mload(add(bys,20))}}

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 58
column: 0
content: contractEth2x{usingSafeMathforuint;structInvestor{uintinvested;uintpayouts;uintfirst_invest;uintlast_payout;addressreferrer;}uintconstantpublicCOMMISSION=10;uintconstantpublicWITHDRAW=50;uintconstantpublicREFBONUS=2;uintconstantpublicCASHBACK=3;uintconstantpublicMULTIPLICATION=2;addresspublicbeneficiary=0x3368e0A06D0Ae1b826B5171Ced8C7c94D785f9E5;mapping(address=>Investor)publicinvestors;eventAddInvestor(addressindexedholder);eventPayout(addressindexedholder,uintamount);eventDeposit(addressindexedholder,uintamount,addressreferrer);eventRefBonus(addressindexedfrom,addressindexedto,uintamount);eventCashBack(addressindexedholder,uintamount);eventWithdraw(addressindexedholder,uintamount);functionbonusSize()viewpublicreturns(uint){uintb=address(this).balance;if(b>=500ether)return5;if(b>=400ether)return4;if(b>=300ether)return3;if(b>=200ether)return2;return1;}functionpayoutSize(address_to)viewpublicreturns(uint){uintmax=investors[_to].invested.mul(MULTIPLICATION);if(investors[_to].invested==0||investors[_to].payouts>=max)return0;uintpayout=investors[_to].invested.mul(bonusSize()).div(100).mul(block.timestamp.sub(investors[_to].last_payout)).div(1days);returninvestors[_to].payouts.add(payout)>max?max.sub(investors[_to].payouts):payout;}functionwithdrawSize(address_to)viewpublicreturns(uint){uintmax=investors[_to].invested.div(100).mul(WITHDRAW);if(investors[_to].invested==0||investors[_to].payouts>=max)return0;returnmax.sub(investors[_to].payouts);}functionbytesToAddress(bytesbys)pureprivatereturns(addressaddr){assembly{addr:=mload(add(bys,20))}}function()payableexternal{if(investors[msg.sender].invested>0){uintpayout=payoutSize(msg.sender);require(msg.value>0||payout>0,"No payouts");if(payout>0){investors[msg.sender].last_payout=block.timestamp;investors[msg.sender].payouts=investors[msg.sender].payouts.add(payout);msg.sender.transfer(payout);emitPayout(msg.sender,payout);}if(investors[msg.sender].payouts>=investors[msg.sender].invested.mul(MULTIPLICATION)){deleteinvestors[msg.sender];emitWithdraw(msg.sender,0);}}if(msg.value==0.00000007ether){require(investors[msg.sender].invested>0,"You have not invested anything yet");uintamount=withdrawSize(msg.sender);require(amount>0,"You have nothing to withdraw");msg.sender.transfer(amount);deleteinvestors[msg.sender];emitWithdraw(msg.sender,amount);}elseif(msg.value>0){require(msg.value>=0.01ether,"Minimum investment amount 0.01 ether");investors[msg.sender].last_payout=block.timestamp;investors[msg.sender].invested=investors[msg.sender].invested.add(msg.value);beneficiary.transfer(msg.value.mul(COMMISSION).div(100));if(investors[msg.sender].first_invest==0){investors[msg.sender].first_invest=block.timestamp;if(msg.data.length>0){addressref=bytesToAddress(msg.data);if(ref!=msg.sender&&investors[ref].invested>0&&msg.value>=1ether){investors[msg.sender].referrer=ref;uintref_bonus=msg.value.mul(REFBONUS).div(100);ref.transfer(ref_bonus);emitRefBonus(msg.sender,ref,ref_bonus);uintcashback_bonus=msg.value.mul(CASHBACK).div(100);msg.sender.transfer(cashback_bonus);emitCashBack(msg.sender,cashback_bonus);}}emitAddInvestor(msg.sender);}emitDeposit(msg.sender,msg.value,investors[msg.sender].referrer);}}}

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 59
column: 4
content: usingSafeMathforuint;

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 112
column: 4
content: functionbytesToAddress(bytesbys)pureprivatereturns(addressaddr){assembly{addr:=mload(add(bys,20))}}

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 112
column: 28
content: bytesbys

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 113
column: 8
content: assembly{addr:=mload(add(bys,20))}

SOLIDITY_SAFEMATH :1
SOLIDITY_LOCKED_MONEY :1
SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN :1
SOLIDITY_ADDRESS_HARDCODED :1
SOLIDITY_UPGRADE_TO_050 :1
SOLIDITY_USING_INLINE_ASSEMBLY :1
SOLIDITY_DIV_MUL :2
SOLIDITY_SHOULD_NOT_BE_PURE :1