/unique_contracts/0x85a9c7d5ab7e2ccf0aa2e5aeee2b319e69bd32d7.sol
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 126
column: 0
content: contractVNETTokenPreSaleisOwnable{usingSafeMathforuint256;stringpublicdescription="VNET Token Pre-Sale Contract";ERC20BasicpublicvnetToken;addresswallet;uint256publicratioNext;uint256publicethPrice;uint256publicvnetSold;uint256publicvnetSupply=30*(10**8)*(10**6);uint256publicvnetPriceStart=0.0013*(10**8);uint256publicvnetPriceTarget=0.0035*(10**8);uint256publicweiMinimum=1*(10**18);uint256publicweiMaximum=100*(10**18);uint256publicweiWelfare=10*(10**18);mapping(address=>bool)publicwelfare;eventWelfare(addressindexed_buyer);eventBuyVNET(addressindexed_buyer,uint256_ratio,uint256_vnetAmount,uint256_weiAmount);eventEthPrice(uint256_ethPrice);constructor(ERC20Basic_vnetToken,uint256_ethPrice)public{vnetToken=_vnetToken;wallet=owner;calcRatioNext();updateEthPrice(_ethPrice);}function()publicpayable{uint256vnetBalance=vnetToken.balanceOf(address(this));require(vnetBalance>0);require(vnetSold<vnetSupply);uint256weiAmount=msg.value;require(weiAmount>=weiMinimum);require(weiAmount<=weiMaximum);uint256vnetAmount=weiAmount.mul(ratioNext).div(10**18);if(vnetBalance>=vnetAmount){assert(vnetToken.transfer(msg.sender,vnetAmount));emitBuyVNET(msg.sender,ratioNext,vnetAmount,weiAmount);vnetSold=vnetSold.add(vnetAmount);if(weiAmount>=weiWelfare){welfare[msg.sender]=true;emitWelfare(msg.sender);}}else{uint256weiExpend=vnetBalance.mul(10**18).div(ratioNext);assert(vnetToken.transfer(msg.sender,vnetBalance));emitBuyVNET(msg.sender,ratioNext,vnetBalance,weiExpend);vnetSold=vnetSold.add(vnetBalance);msg.sender.transfer(weiAmount.sub(weiExpend));if(weiExpend>=weiWelfare){welfare[msg.sender]=true;emitWelfare(msg.sender);}}calcRatioNext();uint256etherBalance=address(this).balance;wallet.transfer(etherBalance);}functioncalcRatioNext()private{ratioNext=ethPrice.mul(10**6).div(vnetPriceStart.add(vnetPriceTarget.sub(vnetPriceStart).mul(vnetSold).div(vnetSupply)));}functionupdateWallet(address_wallet)onlyOwnerpublic{wallet=_wallet;}functionupdateEthPrice(uint256_ethPrice)onlyOwnerpublic{ethPrice=_ethPrice;emitEthPrice(_ethPrice);calcRatioNext();}}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: ^

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 127
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 91h3sa
severity: 1
line: 163
column: 16
content: public

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 132
column: 4
content: addresswallet;

SOLIDITY_VISIBILITY :1
SOLIDITY_SAFEMATH :1
SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_LOCKED_MONEY :1
SOLIDITY_UPGRADE_TO_050 :1