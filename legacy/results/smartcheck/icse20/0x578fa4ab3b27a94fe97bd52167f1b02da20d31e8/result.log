/unique_chucks/10/0x578fa4ab3b27a94fe97bd52167f1b02da20d31e8.sol
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 7
column: 23
content: 0x00

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 56
column: 4
content: functiontransfer(address_from,address_to,uint256_amount)externalreturns(bool_success){}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 57
column: 4
content: functionbulkTransfer(address_from,address[]_to,uint256[]_amount)externalreturns(bool_success){}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 58
column: 4
content: functionsetAllowance(address_owner,address_spender,uint256_amount)externalreturns(bool_success){}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 60
column: 4
content: functiongetAllowance(address_owner,address_spender)publicviewreturns(bool_success,uint256_remaining){}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 61
column: 4
content: functionbalanceOf(address_owner)publicviewreturns(bool_success,uint256_balance){}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 80
column: 4
content: functionapprove(address_spender,uint256_value)externalreturns(bool_success){}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 81
column: 4
content: functiontransfer(address_to,uint256_amount)externalreturns(bool_success){}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 82
column: 4
content: functionbulkTransfer(address[]_to,uint256[]_amount)externalreturns(bool_success){}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 83
column: 4
content: functiontransferFrom(address_from,address_to,uint256_amount)externalreturns(bool_success){}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 85
column: 4
content: functionallowance(address_owner,address_spender)publicviewreturns(uint256_remaining){}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 86
column: 4
content: functionbalanceOf(address_owner)publicviewreturns(uint256_balance){}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 261
column: 4
content: functionallowTransfer(address_owner)publicviewreturns(bool_success,bool_allow){address_trg=libAddress;assembly{letm:=mload(0x40)calldatacopy(m,0,calldatasize)letsuccess:=delegatecall(gas,_trg,m,calldatasize,m,0x40)switchsuccesscase0{revert(0,0)}default{return(m,0x40)}}}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 274
column: 4
content: functioncalculateReward(uint256_input)publicviewreturns(bool_success,uint256_reward){address_trg=libAddress;assembly{letm:=mload(0x40)calldatacopy(m,0,calldatasize)letsuccess:=delegatecall(gas,_trg,m,calldatasize,m,0x40)switchsuccesscase0{revert(0,0)}default{return(m,0x40)}}}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 287
column: 4
content: functioncalcVesting(address_owner)publicviewreturns(bool_success,uint256_reward){address_trg=libAddress;assembly{letm:=mload(0x40)calldatacopy(m,0,calldatasize)letsuccess:=delegatecall(gas,_trg,m,calldatasize,m,0x40)switchsuccesscase0{revert(0,0)}default{return(m,0x40)}}}

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 93
column: 0
content: contractIcoisOwned{usingSafeMathforuint256;enumphaseType{pause,privateSale1,privateSale2,sales1,sales2,sales3,sales4,preFinish,finish}structvesting_s{uint256amount;uint256startBlock;uint256endBlock;uint256claimedAmount;}mapping(address=>bool)publicKYC;mapping(address=>bool)publictransferRight;mapping(address=>vesting_s)publicvesting;phaseTypepubliccurrentPhase;uint256publiccurrentRate;uint256publiccurrentRateM=1e3;uint256publicprivateSale1Hardcap=4e16;uint256publicprivateSale2Hardcap=64e15;uint256publicthisBalance=44e16;addresspublicoffchainUploaderAddress;addresspublicsetKYCAddress;addresspublicsetRateAddress;addresspubliclibAddress;Tokenpublictoken;constructor(address_owner,address_libAddress,address_tokenAddress,address_offchainUploaderAddress,address_setKYCAddress,address_setRateAddress)Owned(_owner)public{currentPhase=phaseType.pause;libAddress=_libAddress;token=Token(_tokenAddress);offchainUploaderAddress=_offchainUploaderAddress;setKYCAddress=_setKYCAddress;setRateAddress=_setRateAddress;}function()publicpayable{buy();}functionchangeLibAddress(address_libAddress)externalforOwner{libAddress=_libAddress;}functionchangeOffchainUploaderAddress(address_offchainUploaderAddress)externalforOwner{offchainUploaderAddress=_offchainUploaderAddress;}functionchangeKYCAddress(address_setKYCAddress)externalforOwner{setKYCAddress=_setKYCAddress;}functionchangeSetRateAddress(address_setRateAddress)externalforOwner{setRateAddress=_setRateAddress;}functionsetVesting(address_beneficiary,uint256_amount,uint256_startBlock,uint256_endBlock)external{address_trg=libAddress;assembly{letm:=mload(0x40)calldatacopy(m,0,calldatasize)letsuccess:=delegatecall(gas,_trg,m,calldatasize,m,0)switchsuccesscase0{revert(0,0)}default{return(m,0)}}}functionclaimVesting()external{address_trg=libAddress;assembly{letm:=mload(0x40)calldatacopy(m,0,calldatasize)letsuccess:=delegatecall(gas,_trg,m,calldatasize,m,0)switchsuccesscase0{revert(0,0)}default{return(m,0)}}}functionsetKYC(address[]_on,address[]_off)external{address_trg=libAddress;assembly{letm:=mload(0x40)calldatacopy(m,0,calldatasize)letsuccess:=delegatecall(gas,_trg,m,calldatasize,m,0)switchsuccesscase0{revert(0,0)}default{return(m,0)}}}functionsetTransferRight(address[]_allow,address[]_disallow)external{address_trg=libAddress;assembly{letm:=mload(0x40)calldatacopy(m,0,calldatasize)letsuccess:=delegatecall(gas,_trg,m,calldatasize,m,0)switchsuccesscase0{revert(0,0)}default{return(m,0)}}}functionsetCurrentRate(uint256_currentRate)external{address_trg=libAddress;assembly{letm:=mload(0x40)calldatacopy(m,0,calldatasize)letsuccess:=delegatecall(gas,_trg,m,calldatasize,m,0)switchsuccesscase0{revert(0,0)}default{return(m,0)}}}functionsetCurrentPhase(phaseType_phase)external{address_trg=libAddress;assembly{letm:=mload(0x40)calldatacopy(m,0,calldatasize)letsuccess:=delegatecall(gas,_trg,m,calldatasize,m,0)switchsuccesscase0{revert(0,0)}default{return(m,0)}}}functionoffchainUpload(address[]_beneficiaries,uint256[]_rewards)external{address_trg=libAddress;assembly{letm:=mload(0x40)calldatacopy(m,0,calldatasize)letsuccess:=delegatecall(gas,_trg,m,calldatasize,m,0)switchsuccesscase0{revert(0,0)}default{return(m,0)}}}functionbuy()publicpayable{address_trg=libAddress;assembly{letm:=mload(0x40)calldatacopy(m,0,calldatasize)letsuccess:=delegatecall(gas,_trg,m,calldatasize,m,0)switchsuccesscase0{revert(0,0)}default{return(m,0)}}}functionallowTransfer(address_owner)publicviewreturns(bool_success,bool_allow){address_trg=libAddress;assembly{letm:=mload(0x40)calldatacopy(m,0,calldatasize)letsuccess:=delegatecall(gas,_trg,m,calldatasize,m,0x40)switchsuccesscase0{revert(0,0)}default{return(m,0x40)}}}functioncalculateReward(uint256_input)publicviewreturns(bool_success,uint256_reward){address_trg=libAddress;assembly{letm:=mload(0x40)calldatacopy(m,0,calldatasize)letsuccess:=delegatecall(gas,_trg,m,calldatasize,m,0x40)switchsuccesscase0{revert(0,0)}default{return(m,0x40)}}}functioncalcVesting(address_owner)publicviewreturns(bool_success,uint256_reward){address_trg=libAddress;assembly{letm:=mload(0x40)calldatacopy(m,0,calldatasize)letsuccess:=delegatecall(gas,_trg,m,calldatasize,m,0x40)switchsuccesscase0{revert(0,0)}default{return(m,0x40)}}}eventBrought(address_owner,address_beneficiary,uint256_input,uint256_output);eventVestingDefined(address_beneficiary,uint256_amount,uint256_startBlock,uint256_endBlock);eventVestingClaimed(address_beneficiary,uint256_amount);}

ruleId: SOLIDITY_REDUNDANT_FALLBACK_REJECT
patternId: b85a32
severity: 1
line: 75
column: 23
content: {revert();}

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 65
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 95
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SHOULD_NOT_BE_VIEW
patternId: 189abf
severity: 1
line: 261
column: 4
content: functionallowTransfer(address_owner)publicviewreturns(bool_success,bool_allow){address_trg=libAddress;assembly{letm:=mload(0x40)calldatacopy(m,0,calldatasize)letsuccess:=delegatecall(gas,_trg,m,calldatasize,m,0x40)switchsuccesscase0{revert(0,0)}default{return(m,0x40)}}}

ruleId: SOLIDITY_SHOULD_NOT_BE_VIEW
patternId: 189abf
severity: 1
line: 274
column: 4
content: functioncalculateReward(uint256_input)publicviewreturns(bool_success,uint256_reward){address_trg=libAddress;assembly{letm:=mload(0x40)calldatacopy(m,0,calldatasize)letsuccess:=delegatecall(gas,_trg,m,calldatasize,m,0x40)switchsuccesscase0{revert(0,0)}default{return(m,0x40)}}}

ruleId: SOLIDITY_SHOULD_NOT_BE_VIEW
patternId: 189abf
severity: 1
line: 287
column: 4
content: functioncalcVesting(address_owner)publicviewreturns(bool_success,uint256_reward){address_trg=libAddress;assembly{letm:=mload(0x40)calldatacopy(m,0,calldatasize)letsuccess:=delegatecall(gas,_trg,m,calldatasize,m,0x40)switchsuccesscase0{revert(0,0)}default{return(m,0x40)}}}

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 91h3sa
severity: 1
line: 75
column: 16
content: public

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 91h3sa
severity: 1
line: 140
column: 16
content: public

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 158
column: 8
content: assembly{letm:=mload(0x40)calldatacopy(m,0,calldatasize)letsuccess:=delegatecall(gas,_trg,m,calldatasize,m,0)switchsuccesscase0{revert(0,0)}default{return(m,0)}}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 171
column: 8
content: assembly{letm:=mload(0x40)calldatacopy(m,0,calldatasize)letsuccess:=delegatecall(gas,_trg,m,calldatasize,m,0)switchsuccesscase0{revert(0,0)}default{return(m,0)}}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 184
column: 8
content: assembly{letm:=mload(0x40)calldatacopy(m,0,calldatasize)letsuccess:=delegatecall(gas,_trg,m,calldatasize,m,0)switchsuccesscase0{revert(0,0)}default{return(m,0)}}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 197
column: 8
content: assembly{letm:=mload(0x40)calldatacopy(m,0,calldatasize)letsuccess:=delegatecall(gas,_trg,m,calldatasize,m,0)switchsuccesscase0{revert(0,0)}default{return(m,0)}}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 210
column: 8
content: assembly{letm:=mload(0x40)calldatacopy(m,0,calldatasize)letsuccess:=delegatecall(gas,_trg,m,calldatasize,m,0)switchsuccesscase0{revert(0,0)}default{return(m,0)}}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 223
column: 8
content: assembly{letm:=mload(0x40)calldatacopy(m,0,calldatasize)letsuccess:=delegatecall(gas,_trg,m,calldatasize,m,0)switchsuccesscase0{revert(0,0)}default{return(m,0)}}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 236
column: 8
content: assembly{letm:=mload(0x40)calldatacopy(m,0,calldatasize)letsuccess:=delegatecall(gas,_trg,m,calldatasize,m,0)switchsuccesscase0{revert(0,0)}default{return(m,0)}}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 249
column: 8
content: assembly{letm:=mload(0x40)calldatacopy(m,0,calldatasize)letsuccess:=delegatecall(gas,_trg,m,calldatasize,m,0)switchsuccesscase0{revert(0,0)}default{return(m,0)}}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 263
column: 8
content: assembly{letm:=mload(0x40)calldatacopy(m,0,calldatasize)letsuccess:=delegatecall(gas,_trg,m,calldatasize,m,0x40)switchsuccesscase0{revert(0,0)}default{return(m,0x40)}}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 276
column: 8
content: assembly{letm:=mload(0x40)calldatacopy(m,0,calldatasize)letsuccess:=delegatecall(gas,_trg,m,calldatasize,m,0x40)switchsuccesscase0{revert(0,0)}default{return(m,0x40)}}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 289
column: 8
content: assembly{letm:=mload(0x40)calldatacopy(m,0,calldatasize)letsuccess:=delegatecall(gas,_trg,m,calldatasize,m,0x40)switchsuccesscase0{revert(0,0)}default{return(m,0x40)}}

SOLIDITY_SAFEMATH :2
SOLIDITY_LOCKED_MONEY :1
SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN :14
SOLIDITY_ADDRESS_HARDCODED :1
SOLIDITY_UPGRADE_TO_050 :2
SOLIDITY_USING_INLINE_ASSEMBLY :11
SOLIDITY_REDUNDANT_FALLBACK_REJECT :1
SOLIDITY_SHOULD_NOT_BE_VIEW :3