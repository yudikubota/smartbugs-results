/unique_chucks/11/0xda9f43015749056182352e9dc6d3ee0b6293d80a.sol
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 950
column: 55
content: 0x9a20483d

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 1267
column: 55
content: 0x9a20483d

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 1693
column: 20
content: (uint256(-1),address(0),0)

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 1463
column: 12
content: for(optionId=1;optionId<=optionCount;optionId++){if(options[optionId].model==_model&&options[optionId].active==true){result[resultIndex]=optionId;resultIndex++;}}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 966
column: 4
content: functionsetNFTAddress(address_nftAddress,uint256_cut)externalonlyOwner{require(_cut<=10000);ownerCut=_cut;ERC721candidateContract=ERC721(_nftAddress);nonFungibleContract=candidateContract;}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 1283
column: 4
content: functionsetNFTAddress(address_nftAddress)externalonlyOwner{ERC721candidateContract=ERC721(_nftAddress);nonFungibleContract=candidateContract;}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: ^

ruleId: SOLIDITY_SHOULD_NOT_BE_VIEW
patternId: 189abf
severity: 1
line: 572
column: 4
content: function_memcpy(uint_dest,uint_src,uint_len)privateview{for(;_len>=32;_len-=32){assembly{mstore(_dest,mload(_src))}_dest+=32;_src+=32;}uint256mask=256**(32-_len)-1;assembly{letsrcpart:=and(mload(_src),not(mask))letdestpart:=and(mload(_dest),mask)mstore(_dest,or(destpart,srcpart))}}

ruleId: SOLIDITY_SHOULD_NOT_BE_VIEW
patternId: 189abf
severity: 1
line: 594
column: 4
content: function_toString(bytes32[4]_rawBytes,uint256_stringLength)privateviewreturns(string){varoutputString=newstring(_stringLength);uint256outputPtr;uint256bytesPtr;assembly{outputPtr:=add(outputString,32)bytesPtr:=_rawBytes}_memcpy(outputPtr,bytesPtr,_stringLength);returnoutputString;}

ruleId: SOLIDITY_UNCHECKED_CALL
patternId: f39eed
severity: 3
line: 1773
column: 19
content: send(balance)

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 341
column: 43
content: string

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 594
column: 90
content: string

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 692
column: 40
content: Sale_sale

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 796
column: 49
content: Affiliatesaffiliate

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 807
column: 42
content: Affiliates_affiliate

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 822
column: 63
content: Affiliates_affiliate

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 575
column: 12
content: assembly{mstore(_dest,mload(_src))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 584
column: 8
content: assembly{letsrcpart:=and(mload(_src),not(mask))letdestpart:=and(mload(_dest),mask)mstore(_dest,or(destpart,srcpart))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 599
column: 8
content: assembly{outputPtr:=add(outputString,32)bytesPtr:=_rawBytes}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 17
column: 2
content: functionOwnable(){owner=msg.sender;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 35
column: 2
content: functiontransferOwnership(addressnewOwner)onlyOwner{if(newOwner!=address(0)){owner=newOwner;}}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 923
column: 2
content: functionpause()onlyOwnerwhenNotPausedreturns(bool){paused=true;Pause();returntrue;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 932
column: 2
content: functionunpause()onlyOwnerwhenPausedreturns(bool){paused=false;Unpause();returntrue;}

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 235
column: 4
content: Lambo[]lambos;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 243
column: 4
content: mapping(address=>uint256)ownershipTokenCount;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 372
column: 4
content: bytes4constantInterfaceSignature_ERC165=bytes4(keccak256('supportsInterface(bytes4)'));

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 375
column: 4
content: bytes4constantInterfaceSignature_ERC721=bytes4(keccak256('name()'))^bytes4(keccak256('symbol()'))^bytes4(keccak256('totalSupply()'))^bytes4(keccak256('balanceOf(address)'))^bytes4(keccak256('ownerOf(uint256)'))^bytes4(keccak256('approve(address,uint256)'))^bytes4(keccak256('transfer(address,uint256)'))^bytes4(keccak256('transferFrom(address,address,uint256)'))^bytes4(keccak256('tokensOfOwner(address)'))^bytes4(keccak256('tokenMetadata(uint256,string)'));

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 654
column: 4
content: mapping(uint256=>Affiliates)codeToAffiliate;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 657
column: 4
content: mapping(uint256=>Sale)tokenIdToSale;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 950
column: 4
content: bytes4constantInterfaceSignature_ERC721=bytes4(0x9a20483d);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1188
column: 4
content: Tune[]options;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1267
column: 4
content: bytes4constantInterfaceSignature_ERC721=bytes4(0x9a20483d);

SOLIDITY_VISIBILITY :13
SOLIDITY_OVERPOWERED_ROLE :2
SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_EXTRA_GAS_IN_LOOPS :1
SOLIDITY_ADDRESS_HARDCODED :3
SOLIDITY_UPGRADE_TO_050 :6
SOLIDITY_USING_INLINE_ASSEMBLY :3
SOLIDITY_UNCHECKED_CALL :1
SOLIDITY_SHOULD_NOT_BE_VIEW :2