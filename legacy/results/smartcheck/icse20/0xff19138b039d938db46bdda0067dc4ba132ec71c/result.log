/unique_chucks/3/0xff19138b039d938db46bdda0067dc4ba132ec71c.sol
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: c67a09
severity: 1
line: 98
column: 19
content: 0x0

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 5
column: 2
content: functionbalanceOf(addresswho)constantreturns(uint256);

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 11
column: 2
content: functionallowance(addressowner,addressspender)constantreturns(uint256);

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 122
column: 2
content: functionmul(uint256a,uint256b)internalconstantreturns(uint256){uint256c=a*b;assert(a==0||c/a==b);returnc;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 128
column: 2
content: functiondiv(uint256a,uint256b)internalconstantreturns(uint256){uint256c=a/b;returnc;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 135
column: 2
content: functionsub(uint256a,uint256b)internalconstantreturns(uint256){assert(b<=a);returna-b;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 140
column: 2
content: functionadd(uint256a,uint256b)internalconstantreturns(uint256){uint256c=a+b;assert(c>=a);returnc;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 169
column: 2
content: functionbalanceOf(address_owner)constantreturns(uint256balance){returnbalances[_owner];}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 230
column: 2
content: functionallowance(address_owner,address_spender)constantreturns(uint256remaining){returnallowed[_owner][_spender];}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 262
column: 4
content: functionlockedBalanceOf(address_owner)constantreturns(uint256value){for(uinti=0;i<lockedBalanceCount;i++){LockedBalancelockedBalance=lockedBalances[i];if(_owner==lockedBalance.owner){value=value.add(lockedBalance.value);}}returnvalue;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 321
column: 8
content: functionisLeapYear(uint16year)constantreturns(bool){if(year%4!=0){returnfalse;}if(year%100!=0){returntrue;}if(year%400!=0){returnfalse;}returntrue;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 334
column: 8
content: functionleapYearsBefore(uintyear)constantreturns(uint){year-=1;returnyear/4-year/100+year/400;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 339
column: 8
content: functiongetDaysInMonth(uint8month,uint16year)constantreturns(uint8){if(month==1||month==3||month==5||month==7||month==8||month==10||month==12){return31;}elseif(month==4||month==6||month==9||month==11){return30;}elseif(isLeapYear(year)){return29;}else{return28;}}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 400
column: 8
content: functiongetYear(uinttimestamp)constantreturns(uint16){uintsecondsAccountedFor=0;uint16year;uintnumLeapYears;year=uint16(ORIGIN_YEAR+timestamp/YEAR_IN_SECONDS);numLeapYears=leapYearsBefore(year)-leapYearsBefore(ORIGIN_YEAR);secondsAccountedFor+=LEAP_YEAR_IN_SECONDS*numLeapYears;secondsAccountedFor+=YEAR_IN_SECONDS*(year-ORIGIN_YEAR-numLeapYears);while(secondsAccountedFor>timestamp){if(isLeapYear(uint16(year-1))){secondsAccountedFor-=LEAP_YEAR_IN_SECONDS;}else{secondsAccountedFor-=YEAR_IN_SECONDS;}year-=1;}returnyear;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 424
column: 8
content: functiongetMonth(uinttimestamp)constantreturns(uint8){returnparseTimestamp(timestamp).month;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 428
column: 8
content: functiongetDay(uinttimestamp)constantreturns(uint8){returnparseTimestamp(timestamp).day;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 432
column: 8
content: functiongetHour(uinttimestamp)constantreturns(uint8){returnuint8((timestamp/60/60)%24);}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 436
column: 8
content: functiongetMinute(uinttimestamp)constantreturns(uint8){returnuint8((timestamp/60)%60);}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 440
column: 8
content: functiongetSecond(uinttimestamp)constantreturns(uint8){returnuint8(timestamp%60);}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 444
column: 8
content: functiontoTimestamp(uint16year,uint8month,uint8day)constantreturns(uinttimestamp){returntoTimestamp(year,month,day,0,0,0);}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 448
column: 8
content: functiontoTimestamp(uint16year,uint8month,uint8day,uint8hour,uint8minute,uint8second)constantreturns(uinttimestamp){uint16i;for(i=ORIGIN_YEAR;i<year;i++){if(isLeapYear(i)){timestamp+=LEAP_YEAR_IN_SECONDS;}else{timestamp+=YEAR_IN_SECONDS;}}uint8[12]memorymonthDayCounts;monthDayCounts[0]=31;if(isLeapYear(year)){monthDayCounts[1]=29;}else{monthDayCounts[1]=28;}monthDayCounts[2]=31;monthDayCounts[3]=30;monthDayCounts[4]=31;monthDayCounts[5]=30;monthDayCounts[6]=31;monthDayCounts[7]=31;monthDayCounts[8]=30;monthDayCounts[9]=31;monthDayCounts[10]=30;monthDayCounts[11]=31;for(i=1;i<month;i++){timestamp+=DAY_IN_SECONDS*monthDayCounts[i-1];}timestamp+=DAY_IN_SECONDS*(day-1);timestamp+=HOUR_IN_SECONDS*(hour);timestamp+=MINUTE_IN_SECONDS*(minute);timestamp+=second;returntimestamp;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 852kwn
severity: 1
line: 253
column: 35
content: years

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 852kwn
severity: 1
line: 582
column: 29
content: years

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 852kwn
severity: 1
line: 586
column: 33
content: years

ruleId: SOLIDITY_ERC20_APPROVE
patternId: af782c
severity: 2
line: 211
column: 2
content: functionapprove(address_spender,uint256_value)returns(bool){require((_value==0)||(allowed[msg.sender][_spender]==0));allowed[msg.sender][_spender]=_value;Approval(msg.sender,_spender,_value);returntrue;}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 200
column: 8
content: for(uinti=0;i<_to.length;i++){require(transfer(_to[i],_bonus[i]));}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 263
column: 8
content: for(uinti=0;i<lockedBalanceCount;i++){LockedBalancelockedBalance=lockedBalances[i];if(_owner==lockedBalance.owner){value=value.add(lockedBalance.value);}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 569
column: 12
content: for(uintindex=0;index<frozenRecordsCount;index++){if((frozenRecords[index].unfreezeTime.parseTimestamp().year==(timestamp.add(26*1weeks)).parseTimestamp().year)&&(frozenRecords[index].unfreezeTime.parseTimestamp().month==(timestamp.add(26*1weeks)).parseTimestamp().month)&&(frozenRecords[index].unfreezeTime.parseTimestamp().day==(timestamp.add(26*1weeks)).parseTimestamp().day)){exist=true;}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: k4o1l4
severity: 1
line: 275
column: 8
content: while(index<lockedBalanceCount){if(now>=lockedBalances[index].releaseTime){releaseAmount+=lockedBalances[index].value;unlockBalanceByIndex(index);}else{index++;}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: k4o1l4
severity: 1
line: 597
column: 8
content: while(index<frozenRecordsCount){if(frozenRecords[index].unfreezeTime<now){unfreezeAmount+=frozenRecords[index].amount;unfreezeByIndex(index);}else{index++;}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 200
column: 8
content: for(uinti=0;i<_to.length;i++){require(transfer(_to[i],_bonus[i]));}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: 17f23a
severity: 1
line: 275
column: 15
content: index<lockedBalanceCount

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: 17f23a
severity: 1
line: 412
column: 23
content: secondsAccountedFor>timestamp

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: 17f23a
severity: 1
line: 597
column: 15
content: index<frozenRecordsCount

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 618
column: 4
content: functionsetDailyLimit(uint256_dailyLimit)onlyOwner{dailyLimit=_dailyLimit;}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: ^

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 22
column: 7
content: private

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 148
column: 2
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 502
column: 4
content: usingSafeMathforuint;

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 441gim
severity: 1
line: 264
column: 12
content: LockedBalancelockedBalance=lockedBalances[i]

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 441gim
severity: 1
line: 287
column: 8
content: LockedBalancelockedBalance=lockedBalances[index]

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 441gim
severity: 1
line: 609
column: 8
content: FrozenRecordunfreezeRecord=frozenRecords[index]

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 5
column: 2
content: functionbalanceOf(addresswho)constantreturns(uint256);

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 6
column: 2
content: functiontransfer(addressto,uint256value)returns(bool);

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 11
column: 2
content: functionallowance(addressowner,addressspender)constantreturns(uint256);

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 12
column: 2
content: functiontransferFrom(addressfrom,addressto,uint256value)returns(bool);

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 13
column: 2
content: functionapprove(addressspender,uint256value)returns(bool);

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 49
column: 2
content: functionOwnable(){owner=msg.sender;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 67
column: 2
content: functiontransferOwnership(addressnewOwner)onlyOwner{require(newOwner!=address(0));owner=newOwner;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 89
column: 2
content: functiontransferOwnership(addressnewOwner)onlyOwner{pendingOwner=newOwner;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 96
column: 2
content: functionclaimOwnership()onlyPendingOwner{owner=pendingOwner;pendingOwner=0x0;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 105
column: 4
content: functionOperational(address_operator){operator=_operator;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 114
column: 4
content: functiontransferOperator(addressnewOperator)onlyOwner{require(newOperator!=address(0));operator=newOperator;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 157
column: 2
content: functiontransfer(address_to,uint256_value)returns(bool){balances[msg.sender]=balances[msg.sender].sub(_value);balances[_to]=balances[_to].add(_value);Transfer(msg.sender,_to,_value);returntrue;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 169
column: 2
content: functionbalanceOf(address_owner)constantreturns(uint256balance){returnbalances[_owner];}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 186
column: 2
content: functiontransferFrom(address_from,address_to,uint256_value)returns(bool){var_allowance=allowed[_from][msg.sender];balances[_to]=balances[_to].add(_value);balances[_from]=balances[_from].sub(_value);allowed[_from][msg.sender]=_allowance.sub(_value);Transfer(_from,_to,_value);returntrue;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 199
column: 2
content: functionbatchTransfer(address[]_to,uint256[]_bonus)returns(bool){for(uinti=0;i<_to.length;i++){require(transfer(_to[i],_bonus[i]));}returntrue;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 211
column: 2
content: functionapprove(address_spender,uint256_value)returns(bool){require((_value==0)||(allowed[msg.sender][_spender]==0));allowed[msg.sender][_spender]=_value;Approval(msg.sender,_spender,_value);returntrue;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 230
column: 2
content: functionallowance(address_owner,address_spender)constantreturns(uint256remaining){returnallowed[_owner][_spender];}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 251
column: 4
content: functiontransferLockedToken(address_to,uint256_value,uint256_releaseTime)nonReentrantreturns(bool){require(_releaseTime>now);require(_releaseTime.sub(1years)<now);balances[msg.sender]=balances[msg.sender].sub(_value);lockedBalances[lockedBalanceCount]=LockedBalance({owner:_to,value:_value,releaseTime:_releaseTime});lockedBalanceCount++;TransferLockedToken(msg.sender,_to,_value,_releaseTime);returntrue;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 262
column: 4
content: functionlockedBalanceOf(address_owner)constantreturns(uint256value){for(uinti=0;i<lockedBalanceCount;i++){LockedBalancelockedBalance=lockedBalances[i];if(_owner==lockedBalance.owner){value=value.add(lockedBalance.value);}}returnvalue;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 273
column: 4
content: functionreleaseLockedBalance()returns(uint256releaseAmount){uintindex=0;while(index<lockedBalanceCount){if(now>=lockedBalances[index].releaseTime){releaseAmount+=lockedBalances[index].value;unlockBalanceByIndex(index);}else{index++;}}returnreleaseAmount;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 321
column: 8
content: functionisLeapYear(uint16year)constantreturns(bool){if(year%4!=0){returnfalse;}if(year%100!=0){returntrue;}if(year%400!=0){returnfalse;}returntrue;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 334
column: 8
content: functionleapYearsBefore(uintyear)constantreturns(uint){year-=1;returnyear/4-year/100+year/400;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 339
column: 8
content: functiongetDaysInMonth(uint8month,uint16year)constantreturns(uint8){if(month==1||month==3||month==5||month==7||month==8||month==10||month==12){return31;}elseif(month==4||month==6||month==9||month==11){return30;}elseif(isLeapYear(year)){return29;}else{return28;}}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 400
column: 8
content: functiongetYear(uinttimestamp)constantreturns(uint16){uintsecondsAccountedFor=0;uint16year;uintnumLeapYears;year=uint16(ORIGIN_YEAR+timestamp/YEAR_IN_SECONDS);numLeapYears=leapYearsBefore(year)-leapYearsBefore(ORIGIN_YEAR);secondsAccountedFor+=LEAP_YEAR_IN_SECONDS*numLeapYears;secondsAccountedFor+=YEAR_IN_SECONDS*(year-ORIGIN_YEAR-numLeapYears);while(secondsAccountedFor>timestamp){if(isLeapYear(uint16(year-1))){secondsAccountedFor-=LEAP_YEAR_IN_SECONDS;}else{secondsAccountedFor-=YEAR_IN_SECONDS;}year-=1;}returnyear;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 424
column: 8
content: functiongetMonth(uinttimestamp)constantreturns(uint8){returnparseTimestamp(timestamp).month;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 428
column: 8
content: functiongetDay(uinttimestamp)constantreturns(uint8){returnparseTimestamp(timestamp).day;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 432
column: 8
content: functiongetHour(uinttimestamp)constantreturns(uint8){returnuint8((timestamp/60/60)%24);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 436
column: 8
content: functiongetMinute(uinttimestamp)constantreturns(uint8){returnuint8((timestamp/60)%60);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 440
column: 8
content: functiongetSecond(uinttimestamp)constantreturns(uint8){returnuint8(timestamp%60);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 444
column: 8
content: functiontoTimestamp(uint16year,uint8month,uint8day)constantreturns(uinttimestamp){returntoTimestamp(year,month,day,0,0,0);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 448
column: 8
content: functiontoTimestamp(uint16year,uint8month,uint8day,uint8hour,uint8minute,uint8second)constantreturns(uinttimestamp){uint16i;for(i=ORIGIN_YEAR;i<year;i++){if(isLeapYear(i)){timestamp+=LEAP_YEAR_IN_SECONDS;}else{timestamp+=YEAR_IN_SECONDS;}}uint8[12]memorymonthDayCounts;monthDayCounts[0]=31;if(isLeapYear(year)){monthDayCounts[1]=29;}else{monthDayCounts[1]=28;}monthDayCounts[2]=31;monthDayCounts[3]=30;monthDayCounts[4]=31;monthDayCounts[5]=30;monthDayCounts[6]=31;monthDayCounts[7]=31;monthDayCounts[8]=30;monthDayCounts[9]=31;monthDayCounts[10]=30;monthDayCounts[11]=31;for(i=1;i<month;i++){timestamp+=DAY_IN_SECONDS*monthDayCounts[i-1];}timestamp+=DAY_IN_SECONDS*(day-1);timestamp+=HOUR_IN_SECONDS*(hour);timestamp+=MINUTE_IN_SECONDS*(minute);timestamp+=second;returntimestamp;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 523
column: 4
content: functionReleaseableToken(uint256initialSupply,uint256initReleasedSupply,addressoperator)Operational(operator){totalSupply=initialSupply;releasedSupply=initReleasedSupply;createTime=now;balances[msg.sender]=initReleasedSupply;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 535
column: 4
content: functionreleaseSupply(uint256releaseAmount,uint256timestamp)onlyOperatorreturns(uint256_actualRelease){require(timestamp>=createTime&&timestamp<=now);require(!judgeReleaseRecordExist(timestamp));require(releaseAmount<=dailyLimit);updateLimit();require(limitSupplyPerYear>0);if(releaseAmount>limitSupplyPerYear){if(releasedSupply.add(limitSupplyPerYear)>totalSupply){releasedSupply=totalSupply;releaseAmount=totalSupply.sub(releasedSupply);}else{releasedSupply=releasedSupply.add(limitSupplyPerYear);releaseAmount=limitSupplyPerYear;}limitSupplyPerYear=0;}else{if(releasedSupply.add(releaseAmount)>totalSupply){releasedSupply=totalSupply;releaseAmount=totalSupply.sub(releasedSupply);}else{releasedSupply=releasedSupply.add(releaseAmount);}limitSupplyPerYear=limitSupplyPerYear.sub(releaseAmount);}frozenRecords[frozenRecordsCount]=FrozenRecord(releaseAmount,timestamp.add(26*1weeks));frozenRecordsCount++;ReleaseSupply(msg.sender,releaseAmount,timestamp);returnreleaseAmount;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 594
column: 4
content: functionunfreeze()onlyOperatorreturns(uint256_unfreezeAmount){uint256unfreezeAmount=0;uintindex=0;while(index<frozenRecordsCount){if(frozenRecords[index].unfreezeTime<now){unfreezeAmount+=frozenRecords[index].amount;unfreezeByIndex(index);}else{index++;}}returnunfreezeAmount;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 618
column: 4
content: functionsetDailyLimit(uint256_dailyLimit)onlyOwner{dailyLimit=_dailyLimit;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 629
column: 4
content: functionSnetwork(uint256initialSupply,uint256initReleasedSupply,addressoperator)ReleaseableToken(initialSupply,initReleasedSupply,operator){}

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 150
column: 2
content: mapping(address=>uint256)balances;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 177
column: 2
content: mapping(address=>mapping(address=>uint256))allowed;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 312
column: 8
content: uintconstantDAY_IN_SECONDS=86400;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 313
column: 8
content: uintconstantYEAR_IN_SECONDS=31536000;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 314
column: 8
content: uintconstantLEAP_YEAR_IN_SECONDS=31622400;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 316
column: 8
content: uintconstantHOUR_IN_SECONDS=3600;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 317
column: 8
content: uintconstantMINUTE_IN_SECONDS=60;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 319
column: 8
content: uint16constantORIGIN_YEAR=1970;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 504
column: 4
content: boolsecondYearUpdate=false;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 507
column: 4
content: uint256standardDecimals=100000000;

SOLIDITY_VISIBILITY :46
SOLIDITY_SAFEMATH :2
SOLIDITY_OVERPOWERED_ROLE :1
SOLIDITY_DEPRECATED_CONSTRUCTIONS :23
SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA :1
SOLIDITY_EXTRA_GAS_IN_LOOPS :5
SOLIDITY_ADDRESS_HARDCODED :1
SOLIDITY_UPGRADE_TO_050 :3
SOLIDITY_GAS_LIMIT_IN_LOOPS :4
SOLIDITY_ERC20_APPROVE :1