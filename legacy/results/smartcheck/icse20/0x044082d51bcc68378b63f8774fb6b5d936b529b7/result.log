/unique_chucks/31/0x044082d51bcc68378b63f8774fb6b5d936b529b7.sol
line 349:73 extraneous input '_data' expecting {',', ')'}
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ERC20_APPROVE
patternId: af782c
severity: 2
line: 188
column: 4
content: functionapprove(address_spender,uint256_value)publicreturns(bool){allowed[msg.sender][_spender]=_value;emitApproval(msg.sender,_spender,_value);returntrue;}

ruleId: SOLIDITY_ERC20_APPROVE
patternId: af782c
severity: 2
line: 305
column: 4
content: functionapprove(addressspender,uint256value)publicwhenNotPausedreturns(bool){returnsuper.approve(spender,value);}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 415
column: 8
content: for(uint256i=0;i<_releaseTimes.length;i++){totalLockAmount[_beneficiary]=totalLockAmount[_beneficiary].add(_releaseAmount[i]);require(_releaseAmount[i]>0);require(_releaseTimes[i]>=now);allocations[_beneficiary].push(timeAndAmount(_releaseTimes[i],_releaseAmount[i]));}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 462
column: 8
content: for(uint256i=0;i<allocations[addr].length;i++){if(now>=allocations[addr][i].releaseTime){num=num.add(allocations[addr][i].releaseAmount);}}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 47acc2
severity: 1
line: 430
column: 4
content: functionreleaseToken()publicreturns(bool){release(msg.sender);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 415
column: 8
content: for(uint256i=0;i<_releaseTimes.length;i++){totalLockAmount[_beneficiary]=totalLockAmount[_beneficiary].add(_releaseAmount[i]);require(_releaseAmount[i]>0);require(_releaseTimes[i]>=now);allocations[_beneficiary].push(timeAndAmount(_releaseTimes[i],_releaseAmount[i]));}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 462
column: 8
content: for(uint256i=0;i<allocations[addr].length;i++){if(now>=allocations[addr][i].releaseTime){num=num.add(allocations[addr][i].releaseAmount);}}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 397
column: 4
content: functionsetBDRContract(addressBDRAddress)publiconlyOwner{require(BDRAddress!=address(0));BDRInstance=BDRContract(BDRAddress);emitSetBDRContract(BDRAddress);}

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 133
column: 4
content: usingSafeMathforuint256;

SOLIDITY_SAFEMATH :1
SOLIDITY_OVERPOWERED_ROLE :1
SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN :1
SOLIDITY_EXTRA_GAS_IN_LOOPS :2
SOLIDITY_GAS_LIMIT_IN_LOOPS :2
SOLIDITY_ERC20_APPROVE :2