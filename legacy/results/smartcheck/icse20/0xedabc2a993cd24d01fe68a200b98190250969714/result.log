/unique_chucks/29/0xedabc2a993cd24d01fe68a200b98190250969714.sol
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ERC20_APPROVE
patternId: af782c
severity: 2
line: 112
column: 4
content: functionapprove(address_spender,uint256_value)publicreturns(boolsuccess){allowance[msg.sender][_spender]=_value;emitApproval(msg.sender,_spender,_value);returntrue;}

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 135
column: 0
content: contractAdvancedTokenisTokenERC20{mapping(address=>bool)publicfrozenAccount;eventFrozenFunds(addresstarget,boolfrozen);constructor()TokenERC20()public{}function_transfer(address_from,address_to,uint_value)internal{require(_to!=0x0);require(balanceOf[_from]>=_value);require(balanceOf[_to]+_value>balanceOf[_to]);require(!frozenAccount[_from]);require(!frozenAccount[_to]);balanceOf[_from]-=_value;balanceOf[_to]+=_value;emitTransfer(_from,_to,_value);}functionmintToken(addresstarget,uint256mintedAmount)onlyOwnerpublic{uinttempSupply=totalSupply;balanceOf[target]+=mintedAmount;totalSupply+=mintedAmount;require(totalSupply>=tempSupply);emitTransfer(0,this,mintedAmount);emitTransfer(this,target,mintedAmount);}functionfreezeAccount(addresstarget,boolfreeze)onlyOwnerpublic{frozenAccount[target]=freeze;emitFrozenFunds(target,freeze);}function()payablepublic{require(false);}}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: ^

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 91h3sa
severity: 1
line: 176
column: 24
content: public

SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_LOCKED_MONEY :1
SOLIDITY_UPGRADE_TO_050 :1
SOLIDITY_ERC20_APPROVE :1