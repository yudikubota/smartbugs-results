/unique_chucks/19/0x979e4a97d610b83348c5af04d836ce8b968bcc68.sol
line 90:91 extraneous input 'data' expecting {',', ')'}
line 174:97 extraneous input '_data' expecting {',', ')'}
line 190:61 extraneous input 'data' expecting {',', ')'}
line 199:73 extraneous input '_data' expecting {',', ')'}
line 211:23 extraneous input 'data' expecting {',', ')'}
line 211:27 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 212:23 mismatched input 'operatorData' expecting {';', '='}
line 213:4 extraneous input ')' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 213:14 extraneous input ';' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 224:23 extraneous input 'data' expecting {',', ')'}
line 224:27 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 225:23 mismatched input 'operatorData' expecting {';', '='}
line 226:4 extraneous input ')' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 226:14 extraneous input ';' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 833:63 extraneous input '_data' expecting {',', ')'}
line 2393:67 extraneous input '_primes' expecting {',', ')'}
line 2393:95 extraneous input '_buyOrderIndices' expecting {',', ')'}
line 2393:111 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 2393:138 mismatched input ')' expecting {';', '='}
line 2393:166 extraneous input '_amountCancelled' expecting ')'
line 2394:4 extraneous input '{' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 2395:21 mismatched input '(' expecting {';', '='}
line 2395:40 mismatched input ';' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 2396:33 extraneous input '(' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 2396:41 mismatched input ',' expecting {';', '='}
line 2396:59 mismatched input ')' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 2398:0 extraneous input '}' expecting {<EOF>, 'pragma', 'import', 'contract', 'library', 'interface'}
line 2462:45 extraneous input '_message' expecting {',', ')'}
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 722
column: 26
content: 0x30

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 867
column: 28
content: 0x01ffc9a7

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 868
column: 28
content: 0x80ac58cd

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 869
column: 28
content: 0x5b5e139f

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 870
column: 28
content: 0x780e9d63

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 2423
column: 32
content: 0x00

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 2428
column: 32
content: 0x00

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: c67a09
severity: 1
line: 336
column: 39
content: 0x0

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: c67a09
severity: 1
line: 368
column: 49
content: 0x0

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: c67a09
severity: 1
line: 376
column: 33
content: 0x0

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: c67a09
severity: 1
line: 388
column: 37
content: 0x0

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: c67a09
severity: 1
line: 400
column: 53
content: 0x0

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: c67a09
severity: 1
line: 402
column: 52
content: 0x0

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: c67a09
severity: 1
line: 429
column: 157
content: 0x0

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: c67a09
severity: 1
line: 741
column: 34
content: 0x0

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: c67a09
severity: 1
line: 771
column: 33
content: 0x0

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: c67a09
severity: 1
line: 1044
column: 34
content: 0x0

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: c67a09
severity: 1
line: 1816
column: 34
content: 0x0

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: c67a09
severity: 1
line: 2053
column: 56
content: 0x0

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: c67a09
severity: 1
line: 2113
column: 45
content: 0x0

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: c67a09
severity: 1
line: 2146
column: 30
content: 0x0

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: c67a09
severity: 1
line: 2180
column: 49
content: 0x0

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: c67a09
severity: 1
line: 2217
column: 46
content: 0x0

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: c67a09
severity: 1
line: 2236
column: 33
content: 0x0

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: c67a09
severity: 1
line: 2248
column: 46
content: 0x0

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: c67a09
severity: 1
line: 2263
column: 44
content: 0x0

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: c67a09
severity: 1
line: 2277
column: 38
content: 0x0

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: c67a09
severity: 1
line: 2440
column: 56
content: 0x0

ruleId: SOLIDITY_ARRAY_LENGTH_MANIPULATION
patternId: 872bdd
severity: 1
line: 363
column: 8
content: ownerPrimes.length--

ruleId: SOLIDITY_ARRAY_LENGTH_MANIPULATION
patternId: 872bdd
severity: 1
line: 1832
column: 8
content: probablePrimes.length--

ruleId: SOLIDITY_ARRAY_LENGTH_MANIPULATION
patternId: 43ba1c
severity: 1
line: 2065
column: 12
content: buyOrders.length++

ruleId: SOLIDITY_ERC20_APPROVE
patternId: af782c
severity: 2
line: 793
column: 4
content: functionapprove(address_to,uint256_prime)externalreturns(bool){require(isApprovedFor(msg.sender,_prime),"approve error: you do not have approval from the owner of that prime");primeToAllowedAddress[_prime]=_to;emitApproval(msg.sender,_to,_prime);returntrue;}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 2100
column: 8
content: for(uint256i=0;i<_primes.length;i++){uint256index=_buyOrderIndices[i];uint256prime=_primes[i];BuyOrder[]storagebuyOrders=primeToBuyOrders[prime];if(index<buyOrders.length){BuyOrderstoragebuyOrder=buyOrders[index];if(buyOrder.buyer==msg.sender){emitBuyOrderDestroyed(msg.sender,prime,index);buyOrder.buyer=address(0x0);buyOrder.bid=0;_amountCancelled++;}}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 2215
column: 8
content: for(uint256i=0;i<buyOrders.length;i++){if(buyOrders[i].buyer!=address(0x0)){_amountOfBuyOrders++;}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 2264
column: 8
content: for(uint256i=0;i<buyOrders.length;i++){BuyOrderstoragebuyOrder=buyOrders[i];if(buyOrder.bid>highestBidFound&&addressToEtherBalance[buyOrder.buyer]>=buyOrder.bid){highestBidBuyOrderIndexFound=i;highestBidFound=buyOrder.bid;highestBidAddress=buyOrder.buyer;}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 2294
column: 8
content: for(uint256i=0;i<buyOrders.length;i++){BuyOrderstoragebuyOrder=buyOrders[i];if(buyOrder.buyer==_user){_buyOrderIndices[amountOfBuyOrdersFound]=i;_bids[amountOfBuyOrdersFound]=buyOrder.bid;amountOfBuyOrdersFound++;}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 2327
column: 8
content: for(uint256i=0;i<userPrimes.length;i++){uint256prime=userPrimes[i];boolfound;uint256buyOrderIndex;addressbuyer;uint256bid;(found,buyOrderIndex,buyer,bid)=findHighestBidBuyOrder(prime);if(found==true){_primes[amountOfBuyOrdersFound]=prime;_buyers[amountOfBuyOrdersFound]=buyer;_buyOrderIndices[amountOfBuyOrdersFound]=buyOrderIndex;_bids[amountOfBuyOrdersFound]=bid;_buyersHaveEnoughFunds[amountOfBuyOrdersFound]=addressToEtherBalance[buyer]>=bid;amountOfBuyOrdersFound++;}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: k4o1l4
severity: 1
line: 954
column: 16
content: while(isPrime(divisor)!=DEFINITELY){divisor=numberToDivisor(divisor);if(divisor==0){_success=false;return(_success,_primeFactors);}}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 649
column: 4
content: function_tryCall(address_contract,bytesmemory_selectorAndArguments)privatereturns(bool_success,bytes32_returnData){bytes32[1]memoryreturnDataArray;uint256dataLengthBytes=_selectorAndArguments.length;assembly{_success:=call(gas(),_contract,0,_selectorAndArguments,dataLengthBytes,returnDataArray,32)}_returnData=returnDataArray[0];}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 756
column: 8
content: for(uint256i=0;i<primesLength;i++){uint256prime=primes[i];if(primeToAllowedAddress[prime]==_spender){total+=prime;}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 2100
column: 8
content: for(uint256i=0;i<_primes.length;i++){uint256index=_buyOrderIndices[i];uint256prime=_primes[i];BuyOrder[]storagebuyOrders=primeToBuyOrders[prime];if(index<buyOrders.length){BuyOrderstoragebuyOrder=buyOrders[index];if(buyOrder.buyer==msg.sender){emitBuyOrderDestroyed(msg.sender,prime,index);buyOrder.buyer=address(0x0);buyOrder.bid=0;_amountCancelled++;}}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 2215
column: 8
content: for(uint256i=0;i<buyOrders.length;i++){if(buyOrders[i].buyer!=address(0x0)){_amountOfBuyOrders++;}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 2246
column: 8
content: for(uint256i=0;i<len;i++){if(buyOrders[i].buyer==address(0x0)&&buyOrders[i].bid==0){returni;}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 2264
column: 8
content: for(uint256i=0;i<buyOrders.length;i++){BuyOrderstoragebuyOrder=buyOrders[i];if(buyOrder.bid>highestBidFound&&addressToEtherBalance[buyOrder.buyer]>=buyOrder.bid){highestBidBuyOrderIndexFound=i;highestBidFound=buyOrder.bid;highestBidAddress=buyOrder.buyer;}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 2294
column: 8
content: for(uint256i=0;i<buyOrders.length;i++){BuyOrderstoragebuyOrder=buyOrders[i];if(buyOrder.buyer==_user){_buyOrderIndices[amountOfBuyOrdersFound]=i;_bids[amountOfBuyOrdersFound]=buyOrder.bid;amountOfBuyOrdersFound++;}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 2327
column: 8
content: for(uint256i=0;i<userPrimes.length;i++){uint256prime=userPrimes[i];boolfound;uint256buyOrderIndex;addressbuyer;uint256bid;(found,buyOrderIndex,buyer,bid)=findHighestBidBuyOrder(prime);if(found==true){_primes[amountOfBuyOrdersFound]=prime;_buyers[amountOfBuyOrdersFound]=buyer;_buyOrderIndices[amountOfBuyOrdersFound]=buyOrderIndex;_bids[amountOfBuyOrdersFound]=bid;_buyersHaveEnoughFunds[amountOfBuyOrdersFound]=addressToEtherBalance[buyer]>=bid;amountOfBuyOrdersFound++;}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: 17f23a
severity: 1
line: 927
column: 15
content: true

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: 17f23a
severity: 1
line: 1203
column: 15
content: z<y

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: 17f23a
severity: 1
line: 1569
column: 15
content: true

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: 17f23a
severity: 1
line: 1674
column: 15
content: d!=_number-1

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: 38f6c7
severity: 2
line: 954
column: 16
content: while(isPrime(divisor)!=DEFINITELY){divisor=numberToDivisor(divisor);if(divisor==0){_success=false;return(_success,_primeFactors);}}

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 252
column: 49
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 255
column: 34
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 262
column: 32
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 265
column: 32
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 269
column: 32
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 285
column: 35
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 500
column: 12
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 501
column: 12
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 502
column: 12
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 504
column: 12
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 505
column: 12
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 506
column: 12
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 508
column: 12
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 509
column: 12
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 510
column: 12
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 512
column: 12
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 513
column: 12
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 514
column: 12
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 1072
column: 12
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 1073
column: 12
content: private

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 850
column: 13
content: if(_index<definitePrimes.length+probablePrimes.length)returnprobablePrimes[_index-definitePrimes.length];elserevert("tokenByIndex error: index out of bounds");

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 912
column: 13
content: if(numberType==NumberType.NOT_PRIME)returnDEFINITELY_NOT;elserevert();

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 1244
column: 13
content: if(primality==DEFINITELY){uint256index=numberdataToAllPrimesIndex(numberToNumberdata[_prime]);if(index==0){return(DEFINITELY_NOT,0,0);}elseif(index==definitePrimes.length-1){return(UNKNOWN,0,0);}else{uint256primeBefore=definitePrimes[index-1];uint256primeAfter=definitePrimes[index+1];if(_prime-primeBefore==primeAfter-_prime)return(DEFINITELY,primeBefore,primeAfter);elsereturn(DEFINITELY_NOT,primeBefore,primeAfter);}}else{revert();}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 1346
column: 13
content: if(primality==PROBABLY_NOT){returnPROBABLY_NOT;}else{revert();}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 1452
column: 13
content: if(primality==PROBABLY_NOT){return(PROBABLY_NOT,0);}else{revert();}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 1916
column: 13
content: if(a==DEFINITELY_NOT&&b==DEFINITELY_NOT)returnDEFINITELY_NOT;elserevert();

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 1926
column: 13
content: if(a==DEFINITELY)returnDEFINITELY_NOT;elserevert();

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 1936
column: 13
content: if(a==DEFINITELY&&b==DEFINITELY)returnDEFINITELY;elserevert();

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 1978
column: 17
content: if(a==DEFINITELY&&b==DEFINITELY)returnDEFINITELY;elserevert();

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 1994
column: 17
content: if(a==DEFINITELY_NOT&&b==DEFINITELY_NOT)returnDEFINITELY_NOT;elserevert();

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 2434
column: 17
content: if(seen0x00){revert("setUsername error: invalid string; character present after null terminator");}

ruleId: SOLIDITY_SHOULD_NOT_BE_VIEW
patternId: 189abf
severity: 1
line: 642
column: 4
content: functionisContract(address_addr)privateviewreturns(bool){uint256addrCodesize;assembly{addrCodesize:=extcodesize(_addr)}returnaddrCodesize!=0;}

ruleId: SOLIDITY_SHOULD_NOT_BE_VIEW
patternId: 189abf
severity: 1
line: 700
column: 4
content: functiontokenURI(uint256_tokenId)externalviewreturns(stringmemory_uri){require(isValidNFT(_tokenId));_uri="https://etherprime.jesbus.com/#search:";uint256baseURIlen=bytes(_uri).length;uint256digits=0;uint256_currentNum=_tokenId;while(_currentNum!=0){_currentNum/=10;digits++;}uint256divisor=10**(digits-1);_currentNum=_tokenId;for(uint256i=0;i<digits;i++){uint8digit=0x30+uint8(_currentNum/divisor);assembly{mstore8(add(add(_uri,0x20),add(baseURIlen,i)),digit)}_currentNum%=divisor;divisor/=10;}assembly{mstore(_uri,add(baseURIlen,digits))}}

ruleId: SOLIDITY_SHOULD_NOT_BE_VIEW
patternId: 189abf
severity: 1
line: 916
column: 4
content: functiongetPrimeFactors(uint256_number)externalviewreturns(bool_success,uint256[]memory_primeFactors){_primeFactors=newuint256[](0);if(_number==0){_success=false;return(_success,_primeFactors);}uint256amount=0;uint256currentNumber=_number;while(true){if(currentNumber==1){_success=true;return(_success,_primeFactors);}uint256divisor=numberToDivisor(currentNumber);if(divisor==0){if(isPrime(currentNumber)==DEFINITELY){divisor=currentNumber;}else{_success=false;return(_success,_primeFactors);}}else{while(isPrime(divisor)!=DEFINITELY){divisor=numberToDivisor(divisor);if(divisor==0){_success=false;return(_success,_primeFactors);}}}currentNumber/=divisor;{amount++;assembly{mstore(0x40,add(mload(0x40),0x20))mstore(_primeFactors,amount)}_primeFactors[amount-1]=divisor;}}}

ruleId: SOLIDITY_SHOULD_NOT_BE_VIEW
patternId: 189abf
severity: 1
line: 2285
column: 4
content: functionfindBuyOrdersOfUserOnPrime(address_user,uint256_prime)externalviewreturns(uint256[]memory_buyOrderIndices,uint256[]memory_bids){BuyOrder[]storagebuyOrders=primeToBuyOrders[_prime];_buyOrderIndices=newuint256[](buyOrders.length);_bids=newuint256[](buyOrders.length);uint256amountOfBuyOrdersFound=0;for(uint256i=0;i<buyOrders.length;i++){BuyOrderstoragebuyOrder=buyOrders[i];if(buyOrder.buyer==_user){_buyOrderIndices[amountOfBuyOrdersFound]=i;_bids[amountOfBuyOrdersFound]=buyOrder.bid;amountOfBuyOrdersFound++;}}assembly{mstore(_buyOrderIndices,amountOfBuyOrdersFound)mstore(_bids,amountOfBuyOrdersFound)}}

ruleId: SOLIDITY_SHOULD_NOT_BE_VIEW
patternId: 189abf
severity: 1
line: 2315
column: 4
content: functionfindBuyOrdersOnUsersPrimes(address_user)externalviewreturns(uint256[]memory_primes,uint256[]memory_buyOrderIndices,address[]memory_buyers,uint256[]memory_bids,bool[]memory_buyersHaveEnoughFunds){uint256[]storageuserPrimes=ownerToPrimes[_user];_primes=newuint256[](userPrimes.length);_buyOrderIndices=newuint256[](userPrimes.length);_buyers=newaddress[](userPrimes.length);_bids=newuint256[](userPrimes.length);_buyersHaveEnoughFunds=newbool[](userPrimes.length);uint256amountOfBuyOrdersFound=0;for(uint256i=0;i<userPrimes.length;i++){uint256prime=userPrimes[i];boolfound;uint256buyOrderIndex;addressbuyer;uint256bid;(found,buyOrderIndex,buyer,bid)=findHighestBidBuyOrder(prime);if(found==true){_primes[amountOfBuyOrdersFound]=prime;_buyers[amountOfBuyOrdersFound]=buyer;_buyOrderIndices[amountOfBuyOrdersFound]=buyOrderIndex;_bids[amountOfBuyOrdersFound]=bid;_buyersHaveEnoughFunds[amountOfBuyOrdersFound]=addressToEtherBalance[buyer]>=bid;amountOfBuyOrdersFound++;}}assembly{mstore(_primes,amountOfBuyOrdersFound)mstore(_buyOrderIndices,amountOfBuyOrdersFound)mstore(_buyers,amountOfBuyOrdersFound)mstore(_bids,amountOfBuyOrdersFound)mstore(_buyersHaveEnoughFunds,amountOfBuyOrdersFound)}}

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 649
column: 93
content: (bool_success,bytes32_returnData)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 916
column: 68
content: (bool_success,uint256[]memory_primeFactors)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 1225
column: 67
content: (Boolyresult,uint256lowerPrime,uint256higherPrime)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 1277
column: 86
content: (Booly_result,uint256[]memory_powers)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 1358
column: 69
content: (Booly_result,uint256_n,int256_delta)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 1388
column: 66
content: (Booly_result,uint256_n)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 1407
column: 66
content: (Boolyresult,uint256_2_pow_n,uint256_n)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 1431
column: 63
content: (Booly_result,uint256_indexStartAtOne)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 1519
column: 66
content: (bool_result,uint256_squareRoot)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 1540
column: 68
content: (uint256output,boolsuccess)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 1598
column: 95
content: (uint256result,boolsuccess)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 1621
column: 66
content: (uint256result,boolsuccess)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 1644
column: 97
content: (boolresult,boolsuccess)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 1841
column: 86
content: (bool_success,uint256_prime)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 2229
column: 84
content: (address_buyer,uint256_bid,bool_buyerHasEnoughFunds)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 2258
column: 72
content: (bool_found,uint256_buyOrderIndex,address_buyer,uint256_bid)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 2285
column: 93
content: (uint256[]memory_buyOrderIndices,uint256[]memory_bids)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 2315
column: 77
content: (uint256[]memory_primes,uint256[]memory_buyOrderIndices,address[]memory_buyers,uint256[]memory_bids,bool[]memory_buyersHaveEnoughFunds)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 2453
column: 66
content: (address_sender,stringmemory_message,uint256_replyToIndex)

ruleId: SOLIDITY_TX_ORIGIN
patternId: 12e802
severity: 2
line: 1589
column: 12
content: tx.origin

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 654
column: 8
content: assembly{_success:=call(gas(),_contract,0,_selectorAndArguments,dataLengthBytes,returnDataArray,32)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 724
column: 12
content: assembly{mstore8(add(add(_uri,0x20),add(baseURIlen,i)),digit)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 730
column: 8
content: assembly{mstore(_uri,add(baseURIlen,digits))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 966
column: 16
content: assembly{mstore(0x40,add(mload(0x40),0x20))mstore(_primeFactors,amount)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 2305
column: 8
content: assembly{mstore(_buyOrderIndices,amountOfBuyOrdersFound)mstore(_bids,amountOfBuyOrdersFound)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 2345
column: 8
content: assembly{mstore(_primes,amountOfBuyOrdersFound)mstore(_buyOrderIndices,amountOfBuyOrdersFound)mstore(_buyers,amountOfBuyOrdersFound)mstore(_bids,amountOfBuyOrdersFound)mstore(_buyersHaveEnoughFunds,amountOfBuyOrdersFound)}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 206
column: 4
content: functiontokensReceived(addressoperator,addressfrom,addressto,uint256amount,bytescalldata<missing ')'>

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 219
column: 4
content: functiontokensToSend(addressoperator,addressfrom,addressto,uint256amount,bytescalldata<missing ')'>

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 2393
column: 4
content: functiontryCancelBuyOrdersAndWithdrawEther(uint256[]calldata_primes,uint256[]calldata<missing ')'>

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 211
column: 23
content: data,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 212
column: 8
content: bytescalldata

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 224
column: 23
content: data,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 225
column: 8
content: bytescalldata

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 2393
column: 95
content: _buyOrderIndices,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 2393
column: 113
content: uint256_amountToWithdraw)externalreturns

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 2393
column: 157
content: (uint256_amountCancelled){withdrawEther

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 2395
column: 21
content: (_amountToWithdraw);return

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 2396
column: 15
content: tryCancelBuyOrders(_primes,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 2396
column: 43
content: _buyOrderIndices);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 2402
column: 4
content: EtherPrimeetherPrime;

SOLIDITY_VISIBILITY :14
SOLIDITY_ARRAY_LENGTH_MANIPULATION :3
SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN :1
SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA :20
SOLIDITY_EXTRA_GAS_IN_LOOPS :6
SOLIDITY_ADDRESS_HARDCODED :28
SOLIDITY_GAS_LIMIT_IN_LOOPS :12
SOLIDITY_SHOULD_RETURN_STRUCT :19
SOLIDITY_TX_ORIGIN :1
SOLIDITY_ERC20_APPROVE :1
SOLIDITY_REVERT_REQUIRE :11
SOLIDITY_USING_INLINE_ASSEMBLY :6
SOLIDITY_SHOULD_NOT_BE_VIEW :5